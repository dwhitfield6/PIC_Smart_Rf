

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jan 23 21:18:03 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4685
     2                           	fnconf	param1,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	idataBANK3,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   119                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   120                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   121                           	psect	param1,global,class=BANK1,space=1,delta=1
   122  0000                     
   123                           	psect	idataBANK1
   124  017CA0                     __pidataBANK1:
   125                           	opt stack 0
   126                           
   127                           ;initializer for _BAUD
   128  017CA0  2580               	dw	9600
   129  017CA2  0000               	dw	0
   130                           
   131                           ;initializer for _LCDclearCount
   132  017CA4  61A8               	dw	25000
   133  017CA6  0000               	dw	0
   134                           
   135                           	psect	idataBANK3
   136  017C1A                     __pidataBANK3:
   137                           	opt stack 0
   138                           
   139                           ;initializer for _Version
   140  017C1A  31                 	db	49
   141  017C1B  2E                 	db	46
   142  017C1C  30                 	db	48
   143  017C1D  5F                 	db	95
   144  017C1E  44                 	db	68
   145  017C1F  57                 	db	87
   146  017C20  30                 	db	48
   147  017C21  00                 	db	0
   148  017C22  00                 	db	0
   149  017C23  00                 	db	0
   150  017C24  00                 	db	0
   151  017C25  00                 	db	0
   152  017C26  00                 	db	0
   153  017C27  00                 	db	0
   154  017C28  00                 	db	0
   155  017C29  00                 	db	0
   156  017C2A  00                 	db	0
   157  017C2B  00                 	db	0
   158  017C2C  00                 	db	0
   159  017C2D  00                 	db	0
   160                           
   161                           	psect	mediumconst
   162  00ED48                     __pmediumconst:
   163                           	opt stack 0
   164  00ED48  00                 	db	0
   165  00ED49                     _octpowers:
   166                           	opt stack 0
   167  00ED49  0001               	dw	1
   168  00ED4B  0000               	dw	0
   169  00ED4D  0008               	dw	8
   170  00ED4F  0000               	dw	0
   171  00ED51  0040               	dw	64
   172  00ED53  0000               	dw	0
   173  00ED55  0200               	dw	512
   174  00ED57  0000               	dw	0
   175  00ED59  1000               	dw	4096
   176  00ED5B  0000               	dw	0
   177  00ED5D  8000               	dw	32768
   178  00ED5F  0000               	dw	0
   179  00ED61  0000               	dw	0
   180  00ED63  0004               	dw	4
   181  00ED65  0000               	dw	0
   182  00ED67  0020               	dw	32
   183  00ED69  0000               	dw	0
   184  00ED6B  0100               	dw	256
   185  00ED6D  0000               	dw	0
   186  00ED6F  0800               	dw	2048
   187  00ED71  0000               	dw	0
   188  00ED73  4000               	dw	16384
   189  00ED75  0000               	dw	0
   190  00ED77  0000               	dw	0
   191  00ED79                     __end_of_octpowers:
   192                           	opt stack 0
   193  00ED79                     _dpowers:
   194                           	opt stack 0
   195  00ED79  0001               	dw	1
   196  00ED7B  0000               	dw	0
   197  00ED7D  000A               	dw	10
   198  00ED7F  0000               	dw	0
   199  00ED81  0064               	dw	100
   200  00ED83  0000               	dw	0
   201  00ED85  03E8               	dw	1000
   202  00ED87  0000               	dw	0
   203  00ED89  2710               	dw	10000
   204  00ED8B  0000               	dw	0
   205  00ED8D  86A0               	dw	34464
   206  00ED8F  0001               	dw	1
   207  00ED91  4240               	dw	16960
   208  00ED93  000F               	dw	15
   209  00ED95  9680               	dw	38528
   210  00ED97  0098               	dw	152
   211  00ED99  E100               	dw	57600
   212  00ED9B  05F5               	dw	1525
   213  00ED9D  CA00               	dw	51712
   214  00ED9F  3B9A               	dw	15258
   215  00EDA1                     __end_of_dpowers:
   216                           	opt stack 0
   217  00EDA1                     _hexpowers:
   218                           	opt stack 0
   219  00EDA1  0001               	dw	1
   220  00EDA3  0000               	dw	0
   221  00EDA5  0010               	dw	16
   222  00EDA7  0000               	dw	0
   223  00EDA9  0100               	dw	256
   224  00EDAB  0000               	dw	0
   225  00EDAD  1000               	dw	4096
   226  00EDAF  0000               	dw	0
   227  00EDB1  0000               	dw	0
   228  00EDB3  0001               	dw	1
   229  00EDB5  0000               	dw	0
   230  00EDB7  0010               	dw	16
   231  00EDB9  0000               	dw	0
   232  00EDBB  0100               	dw	256
   233  00EDBD  0000               	dw	0
   234  00EDBF  1000               	dw	4096
   235  00EDC1                     __end_of_hexpowers:
   236                           	opt stack 0
   237  00EDC1                     _TXToiletAlexBathroom:
   238                           	opt stack 0
   239  00EDC1  00                 	db	0
   240  00EDC2  00                 	db	0
   241  00EDC3  00                 	db	0
   242  00EDC4  00                 	db	0
   243  00EDC5  00                 	db	0
   244  00EDC6  00                 	db	0
   245  00EDC7  00                 	db	0
   246  00EDC8  00                 	db	0
   247  00EDC9  00                 	db	0
   248  00EDCA  00                 	db	0
   249  00EDCB  00                 	db	0
   250  00EDCC  02                 	db	2
   251  00EDCD                     __end_of_TXToiletAlexBathroom:
   252                           	opt stack 0
   253  00EDCD                     _TXToiletMyBathroom:
   254                           	opt stack 0
   255  00EDCD  00                 	db	0
   256  00EDCE  00                 	db	0
   257  00EDCF  00                 	db	0
   258  00EDD0  00                 	db	0
   259  00EDD1  00                 	db	0
   260  00EDD2  00                 	db	0
   261  00EDD3  00                 	db	0
   262  00EDD4  00                 	db	0
   263  00EDD5  00                 	db	0
   264  00EDD6  00                 	db	0
   265  00EDD7  00                 	db	0
   266  00EDD8  01                 	db	1
   267  00EDD9                     __end_of_TXToiletMyBathroom:
   268                           	opt stack 0
   269  00EDD9                     _TXdataBedroomCLOSED:
   270                           	opt stack 0
   271  00EDD9  00                 	db	0
   272  00EDDA  00                 	db	0
   273  00EDDB  00                 	db	0
   274  00EDDC  00                 	db	0
   275  00EDDD  00                 	db	0
   276  00EDDE  00                 	db	0
   277  00EDDF  00                 	db	0
   278  00EDE0  00                 	db	0
   279  00EDE1  00                 	db	0
   280  00EDE2  01                 	db	1
   281  00EDE3  00                 	db	0
   282  00EDE4  00                 	db	0
   283  00EDE5                     __end_of_TXdataBedroomCLOSED:
   284                           	opt stack 0
   285  00EDE5                     _TXdataBedroomOPENED:
   286                           	opt stack 0
   287  00EDE5  00                 	db	0
   288  00EDE6  00                 	db	0
   289  00EDE7  00                 	db	0
   290  00EDE8  00                 	db	0
   291  00EDE9  00                 	db	0
   292  00EDEA  00                 	db	0
   293  00EDEB  00                 	db	0
   294  00EDEC  00                 	db	0
   295  00EDED  00                 	db	0
   296  00EDEE  02                 	db	2
   297  00EDEF  00                 	db	0
   298  00EDF0  00                 	db	0
   299  00EDF1                     __end_of_TXdataBedroomOPENED:
   300                           	opt stack 0
   301  00EDF1                     _TXdataFrontCLOSED:
   302                           	opt stack 0
   303  00EDF1  00                 	db	0
   304  00EDF2  00                 	db	0
   305  00EDF3  00                 	db	0
   306  00EDF4  00                 	db	0
   307  00EDF5  00                 	db	0
   308  00EDF6  00                 	db	0
   309  00EDF7  00                 	db	0
   310  00EDF8  00                 	db	0
   311  00EDF9  00                 	db	0
   312  00EDFA  00                 	db	0
   313  00EDFB  02                 	db	2
   314  00EDFC  00                 	db	0
   315  00EDFD                     __end_of_TXdataFrontCLOSED:
   316                           	opt stack 0
   317  00EDFD                     _TXdataFrontOPENED:
   318                           	opt stack 0
   319  00EDFD  00                 	db	0
   320  00EDFE  00                 	db	0
   321  00EDFF  00                 	db	0
   322  00EE00  00                 	db	0
   323  00EE01  00                 	db	0
   324  00EE02  00                 	db	0
   325  00EE03  00                 	db	0
   326  00EE04  00                 	db	0
   327  00EE05  00                 	db	0
   328  00EE06  00                 	db	0
   329  00EE07  01                 	db	1
   330  00EE08  00                 	db	0
   331  00EE09                     __end_of_TXdataFrontOPENED:
   332                           	opt stack 0
   333  00EE09                     _TXdataLabCLOSED:
   334                           	opt stack 0
   335  00EE09  00                 	db	0
   336  00EE0A  00                 	db	0
   337  00EE0B  00                 	db	0
   338  00EE0C  00                 	db	0
   339  00EE0D  00                 	db	0
   340  00EE0E  00                 	db	0
   341  00EE0F  00                 	db	0
   342  00EE10  00                 	db	0
   343  00EE11  02                 	db	2
   344  00EE12  00                 	db	0
   345  00EE13  00                 	db	0
   346  00EE14  00                 	db	0
   347  00EE15                     __end_of_TXdataLabCLOSED:
   348                           	opt stack 0
   349  00EE15                     _TXdataLabOPENED:
   350                           	opt stack 0
   351  00EE15  00                 	db	0
   352  00EE16  00                 	db	0
   353  00EE17  00                 	db	0
   354  00EE18  00                 	db	0
   355  00EE19  00                 	db	0
   356  00EE1A  00                 	db	0
   357  00EE1B  00                 	db	0
   358  00EE1C  00                 	db	0
   359  00EE1D  01                 	db	1
   360  00EE1E  00                 	db	0
   361  00EE1F  00                 	db	0
   362  00EE20  00                 	db	0
   363  00EE21                     __end_of_TXdataLabOPENED:
   364                           	opt stack 0
   365  00EE21                     _Aux2OFF:
   366                           	opt stack 0
   367  00EE21  00                 	db	0
   368  00EE22  01                 	db	1
   369  00EE23  01                 	db	1
   370  00EE24  00                 	db	0
   371  00EE25  01                 	db	1
   372  00EE26  00                 	db	0
   373  00EE27  00                 	db	0
   374  00EE28  00                 	db	0
   375  00EE29  00                 	db	0
   376  00EE2A  00                 	db	0
   377  00EE2B  00                 	db	0
   378  00EE2C  01                 	db	1
   379  00EE2D  00                 	db	0
   380  00EE2E  00                 	db	0
   381  00EE2F  00                 	db	0
   382  00EE30  01                 	db	1
   383  00EE31                     __end_of_Aux2OFF:
   384                           	opt stack 0
   385  00EE31                     _Aux2ON:
   386                           	opt stack 0
   387  00EE31  00                 	db	0
   388  00EE32  01                 	db	1
   389  00EE33  01                 	db	1
   390  00EE34  00                 	db	0
   391  00EE35  01                 	db	1
   392  00EE36  00                 	db	0
   393  00EE37  00                 	db	0
   394  00EE38  00                 	db	0
   395  00EE39  00                 	db	0
   396  00EE3A  00                 	db	0
   397  00EE3B  01                 	db	1
   398  00EE3C  00                 	db	0
   399  00EE3D  00                 	db	0
   400  00EE3E  00                 	db	0
   401  00EE3F  00                 	db	0
   402  00EE40  01                 	db	1
   403  00EE41                     __end_of_Aux2ON:
   404                           	opt stack 0
   405  00EE41                     _AuxOFF:
   406                           	opt stack 0
   407  00EE41  00                 	db	0
   408  00EE42  01                 	db	1
   409  00EE43  01                 	db	1
   410  00EE44  00                 	db	0
   411  00EE45  01                 	db	1
   412  00EE46  00                 	db	0
   413  00EE47  01                 	db	1
   414  00EE48  00                 	db	0
   415  00EE49  00                 	db	0
   416  00EE4A  00                 	db	0
   417  00EE4B  00                 	db	0
   418  00EE4C  00                 	db	0
   419  00EE4D  00                 	db	0
   420  00EE4E  00                 	db	0
   421  00EE4F  00                 	db	0
   422  00EE50  00                 	db	0
   423  00EE51                     __end_of_AuxOFF:
   424                           	opt stack 0
   425  00EE51                     _AuxON:
   426                           	opt stack 0
   427  00EE51  00                 	db	0
   428  00EE52  01                 	db	1
   429  00EE53  01                 	db	1
   430  00EE54  00                 	db	0
   431  00EE55  01                 	db	1
   432  00EE56  00                 	db	0
   433  00EE57  00                 	db	0
   434  00EE58  01                 	db	1
   435  00EE59  00                 	db	0
   436  00EE5A  00                 	db	0
   437  00EE5B  00                 	db	0
   438  00EE5C  00                 	db	0
   439  00EE5D  00                 	db	0
   440  00EE5E  00                 	db	0
   441  00EE5F  00                 	db	0
   442  00EE60  00                 	db	0
   443  00EE61                     __end_of_AuxON:
   444                           	opt stack 0
   445  00EE61                     _BedOFF:
   446                           	opt stack 0
   447  00EE61  00                 	db	0
   448  00EE62  01                 	db	1
   449  00EE63  01                 	db	1
   450  00EE64  00                 	db	0
   451  00EE65  01                 	db	1
   452  00EE66  00                 	db	0
   453  00EE67  00                 	db	0
   454  00EE68  00                 	db	0
   455  00EE69  00                 	db	0
   456  00EE6A  01                 	db	1
   457  00EE6B  00                 	db	0
   458  00EE6C  00                 	db	0
   459  00EE6D  00                 	db	0
   460  00EE6E  00                 	db	0
   461  00EE6F  00                 	db	0
   462  00EE70  00                 	db	0
   463  00EE71                     __end_of_BedOFF:
   464                           	opt stack 0
   465  00EE71                     _BedON:
   466                           	opt stack 0
   467  00EE71  00                 	db	0
   468  00EE72  01                 	db	1
   469  00EE73  01                 	db	1
   470  00EE74  00                 	db	0
   471  00EE75  01                 	db	1
   472  00EE76  00                 	db	0
   473  00EE77  00                 	db	0
   474  00EE78  00                 	db	0
   475  00EE79  01                 	db	1
   476  00EE7A  00                 	db	0
   477  00EE7B  00                 	db	0
   478  00EE7C  00                 	db	0
   479  00EE7D  00                 	db	0
   480  00EE7E  00                 	db	0
   481  00EE7F  00                 	db	0
   482  00EE80  00                 	db	0
   483  00EE81                     __end_of_BedON:
   484                           	opt stack 0
   485  00EE81                     _SubLightOFF:
   486                           	opt stack 0
   487  00EE81  00                 	db	0
   488  00EE82  01                 	db	1
   489  00EE83  01                 	db	1
   490  00EE84  00                 	db	0
   491  00EE85  01                 	db	1
   492  00EE86  00                 	db	0
   493  00EE87  00                 	db	0
   494  00EE88  00                 	db	0
   495  00EE89  00                 	db	0
   496  00EE8A  00                 	db	0
   497  00EE8B  00                 	db	0
   498  00EE8C  01                 	db	1
   499  00EE8D  00                 	db	0
   500  00EE8E  01                 	db	1
   501  00EE8F  00                 	db	0
   502  00EE90  00                 	db	0
   503  00EE91                     __end_of_SubLightOFF:
   504                           	opt stack 0
   505  00EE91                     _SubLightON:
   506                           	opt stack 0
   507  00EE91  00                 	db	0
   508  00EE92  01                 	db	1
   509  00EE93  01                 	db	1
   510  00EE94  00                 	db	0
   511  00EE95  01                 	db	1
   512  00EE96  00                 	db	0
   513  00EE97  00                 	db	0
   514  00EE98  00                 	db	0
   515  00EE99  00                 	db	0
   516  00EE9A  00                 	db	0
   517  00EE9B  01                 	db	1
   518  00EE9C  00                 	db	0
   519  00EE9D  00                 	db	0
   520  00EE9E  01                 	db	1
   521  00EE9F  00                 	db	0
   522  00EEA0  00                 	db	0
   523  00EEA1                     __end_of_SubLightON:
   524                           	opt stack 0
   525  00EEA1                     _fanOFF:
   526                           	opt stack 0
   527  00EEA1  00                 	db	0
   528  00EEA2  01                 	db	1
   529  00EEA3  01                 	db	1
   530  00EEA4  00                 	db	0
   531  00EEA5  01                 	db	1
   532  00EEA6  00                 	db	0
   533  00EEA7  00                 	db	0
   534  00EEA8  00                 	db	0
   535  00EEA9  00                 	db	0
   536  00EEAA  00                 	db	0
   537  00EEAB  00                 	db	0
   538  00EEAC  01                 	db	1
   539  00EEAD  00                 	db	0
   540  00EEAE  00                 	db	0
   541  00EEAF  00                 	db	0
   542  00EEB0  00                 	db	0
   543  00EEB1                     __end_of_fanOFF:
   544                           	opt stack 0
   545  00EEB1                     _fanON:
   546                           	opt stack 0
   547  00EEB1  00                 	db	0
   548  00EEB2  01                 	db	1
   549  00EEB3  01                 	db	1
   550  00EEB4  00                 	db	0
   551  00EEB5  01                 	db	1
   552  00EEB6  00                 	db	0
   553  00EEB7  00                 	db	0
   554  00EEB8  00                 	db	0
   555  00EEB9  00                 	db	0
   556  00EEBA  00                 	db	0
   557  00EEBB  01                 	db	1
   558  00EEBC  00                 	db	0
   559  00EEBD  00                 	db	0
   560  00EEBE  00                 	db	0
   561  00EEBF  00                 	db	0
   562  00EEC0  00                 	db	0
   563  00EEC1                     __end_of_fanON:
   564                           	opt stack 0
   565  00EEC1                     _TXdataD:
   566                           	opt stack 0
   567  00EEC1  02                 	db	2
   568  00EEC2  02                 	db	2
   569  00EEC3  02                 	db	2
   570  00EEC4  02                 	db	2
   571  00EEC5  02                 	db	2
   572  00EEC6  02                 	db	2
   573  00EEC7  00                 	db	0
   574  00EEC8  00                 	db	0
   575  00EEC9  01                 	db	1
   576  00EECA  00                 	db	0
   577  00EECB  00                 	db	0
   578  00EECC  00                 	db	0
   579  00EECD                     __end_of_TXdataD:
   580                           	opt stack 0
   581  00EECD                     _TXdataE:
   582                           	opt stack 0
   583  00EECD  00                 	db	0
   584  00EECE  02                 	db	2
   585  00EECF  02                 	db	2
   586  00EED0  02                 	db	2
   587  00EED1  02                 	db	2
   588  00EED2  02                 	db	2
   589  00EED3  00                 	db	0
   590  00EED4  00                 	db	0
   591  00EED5  01                 	db	1
   592  00EED6  00                 	db	0
   593  00EED7  00                 	db	0
   594  00EED8  00                 	db	0
   595  00EED9                     __end_of_TXdataE:
   596                           	opt stack 0
   597  00EED9                     _TXdataF:
   598                           	opt stack 0
   599  00EED9  02                 	db	2
   600  00EEDA  00                 	db	0
   601  00EEDB  02                 	db	2
   602  00EEDC  02                 	db	2
   603  00EEDD  02                 	db	2
   604  00EEDE  02                 	db	2
   605  00EEDF  00                 	db	0
   606  00EEE0  00                 	db	0
   607  00EEE1  01                 	db	1
   608  00EEE2  00                 	db	0
   609  00EEE3  00                 	db	0
   610  00EEE4  00                 	db	0
   611  00EEE5                     __end_of_TXdataF:
   612                           	opt stack 0
   613  0000                     _ADCON0	set	4034
   614  0000                     _ADCON1	set	4033
   615  0000                     _ADCON2	set	4032
   616  0000                     _ADRESH	set	4036
   617  0000                     _ADRESL	set	4035
   618  0000                     _BAUDCON	set	4024
   619  0000                     _CCP1CON	set	4029
   620  0000                     _CCPR1L	set	4030
   621  0000                     _ECCP1CON	set	4026
   622  0000                     _ECCPR1L	set	4027
   623  0000                     _INTCONbits	set	4082
   624  0000                     _IPR1bits	set	3999
   625  0000                     _LATA	set	3977
   626  0000                     _LATC	set	3979
   627  0000                     _LATD	set	3980
   628  0000                     _LATE	set	3981
   629  0000                     _OSCCON	set	4051
   630  0000                     _PIE1	set	3997
   631  0000                     _PIE1bits	set	3997
   632  0000                     _PIR1bits	set	3998
   633  0000                     _PIR2bits	set	4001
   634  0000                     _PR2	set	4043
   635  0000                     _RCONbits	set	4048
   636  0000                     _RCREG	set	4014
   637  0000                     _RCSTA	set	4011
   638  0000                     _RCSTAbits	set	4011
   639  0000                     _SPBRG	set	4015
   640  0000                     _SPBRGH	set	4016
   641  0000                     _SSPADD	set	4040
   642  0000                     _SSPBUF	set	4041
   643  0000                     _SSPCON1	set	4038
   644  0000                     _SSPCON1bits	set	4038
   645  0000                     _SSPCON2	set	4037
   646  0000                     _SSPCON2bits	set	4037
   647  0000                     _SSPSTAT	set	4039
   648  0000                     _SSPSTATbits	set	4039
   649  0000                     _T2CON	set	4042
   650  0000                     _TRISAbits	set	3986
   651  0000                     _TRISCbits	set	3988
   652  0000                     _TRISDbits	set	3989
   653  0000                     _TRISEbits	set	3990
   654  0000                     _TXREG	set	4013
   655  0000                     _TXSTA	set	4012
   656  0000                     _TXSTAbits	set	4012
   657  00EEE5                     __stringdata:
   658                           	opt stack 0
   659  00EEE5                     STR_211:
   660  00EEE5  54                 	db	84	;'T'
   661  00EEE6  6F                 	db	111	;'o'
   662  00EEE7  20                 	db	32
   663  00EEE8  72                 	db	114	;'r'
   664  00EEE9  65                 	db	101	;'e'
   665  00EEEA  61                 	db	97	;'a'
   666  00EEEB  64                 	db	100	;'d'
   667  00EEEC  20                 	db	32
   668  00EEED  61                 	db	97	;'a'
   669  00EEEE  6E                 	db	110	;'n'
   670  00EEEF  64                 	db	100	;'d'
   671  00EEF0  20                 	db	32
   672  00EEF1  61                 	db	97	;'a'
   673  00EEF2  64                 	db	100	;'d'
   674  00EEF3  63                 	db	99	;'c'
   675  00EEF4  20                 	db	32
   676  00EEF5  63                 	db	99	;'c'
   677  00EEF6  68                 	db	104	;'h'
   678  00EEF7  61                 	db	97	;'a'
   679  00EEF8  6E                 	db	110	;'n'
   680  00EEF9  6E                 	db	110	;'n'
   681  00EEFA  65                 	db	101	;'e'
   682  00EEFB  6C                 	db	108	;'l'
   683  00EEFC  2C                 	db	44
   684  00EEFD  20                 	db	32
   685  00EEFE  74                 	db	116	;'t'
   686  00EEFF  79                 	db	121	;'y'
   687  00EF00  70                 	db	112	;'p'
   688  00EF01  65                 	db	101	;'e'
   689  00EF02  20                 	db	32
   690  00EF03  74                 	db	116	;'t'
   691  00EF04  68                 	db	104	;'h'
   692  00EF05  65                 	db	101	;'e'
   693  00EF06  20                 	db	32
   694  00EF07  63                 	db	99	;'c'
   695  00EF08  6F                 	db	111	;'o'
   696  00EF09  6D                 	db	109	;'m'
   697  00EF0A  6D                 	db	109	;'m'
   698  00EF0B  61                 	db	97	;'a'
   699  00EF0C  6E                 	db	110	;'n'
   700  00EF0D  64                 	db	100	;'d'
   701  00EF0E  0D                 	db	13
   702  00EF0F  0A                 	db	10
   703  00EF10  20                 	db	32
   704  00EF11  41                 	db	65	;'A'
   705  00EF12  44                 	db	68	;'D'
   706  00EF13  43                 	db	67	;'C'
   707  00EF14  20                 	db	32
   708  00EF15  66                 	db	102	;'f'
   709  00EF16  6F                 	db	111	;'o'
   710  00EF17  6C                 	db	108	;'l'
   711  00EF18  6C                 	db	108	;'l'
   712  00EF19  6F                 	db	111	;'o'
   713  00EF1A  77                 	db	119	;'w'
   714  00EF1B  65                 	db	101	;'e'
   715  00EF1C  64                 	db	100	;'d'
   716  00EF1D  20                 	db	32
   717  00EF1E  62                 	db	98	;'b'
   718  00EF1F  79                 	db	121	;'y'
   719  00EF20  20                 	db	32
   720  00EF21  27                 	db	39
   721  00EF22  43                 	db	67	;'C'
   722  00EF23  68                 	db	104	;'h'
   723  00EF24  61                 	db	97	;'a'
   724  00EF25  6E                 	db	110	;'n'
   725  00EF26  6E                 	db	110	;'n'
   726  00EF27  65                 	db	101	;'e'
   727  00EF28  6C                 	db	108	;'l'
   728  00EF29  27                 	db	39
   729  00EF2A  20                 	db	32
   730  00EF2B  0D                 	db	13
   731  00EF2C  0A                 	db	10
   732  00EF2D  00                 	db	0
   733  00EF2E                     STR_243:
   734  00EF2E  54                 	db	84	;'T'
   735  00EF2F  6F                 	db	111	;'o'
   736  00EF30  20                 	db	32
   737  00EF31  63                 	db	99	;'c'
   738  00EF32  6F                 	db	111	;'o'
   739  00EF33  6D                 	db	109	;'m'
   740  00EF34  6D                 	db	109	;'m'
   741  00EF35  61                 	db	97	;'a'
   742  00EF36  6E                 	db	110	;'n'
   743  00EF37  64                 	db	100	;'d'
   744  00EF38  20                 	db	32
   745  00EF39  74                 	db	116	;'t'
   746  00EF3A  68                 	db	104	;'h'
   747  00EF3B  65                 	db	101	;'e'
   748  00EF3C  20                 	db	32
   749  00EF3D  52                 	db	82	;'R'
   750  00EF3E  54                 	db	84	;'T'
   751  00EF3F  43                 	db	67	;'C'
   752  00EF40  2C                 	db	44
   753  00EF41  20                 	db	32
   754  00EF42  74                 	db	116	;'t'
   755  00EF43  79                 	db	121	;'y'
   756  00EF44  70                 	db	112	;'p'
   757  00EF45  65                 	db	101	;'e'
   758  00EF46  20                 	db	32
   759  00EF47  74                 	db	116	;'t'
   760  00EF48  68                 	db	104	;'h'
   761  00EF49  65                 	db	101	;'e'
   762  00EF4A  20                 	db	32
   763  00EF4B  61                 	db	97	;'a'
   764  00EF4C  63                 	db	99	;'c'
   765  00EF4D  74                 	db	116	;'t'
   766  00EF4E  69                 	db	105	;'i'
   767  00EF4F  6F                 	db	111	;'o'
   768  00EF50  6E                 	db	110	;'n'
   769  00EF51  0D                 	db	13
   770  00EF52  0A                 	db	10
   771  00EF53  20                 	db	32
   772  00EF54  66                 	db	102	;'f'
   773  00EF55  6F                 	db	111	;'o'
   774  00EF56  6C                 	db	108	;'l'
   775  00EF57  6C                 	db	108	;'l'
   776  00EF58  6F                 	db	111	;'o'
   777  00EF59  77                 	db	119	;'w'
   778  00EF5A  65                 	db	101	;'e'
   779  00EF5B  64                 	db	100	;'d'
   780  00EF5C  20                 	db	32
   781  00EF5D  62                 	db	98	;'b'
   782  00EF5E  79                 	db	121	;'y'
   783  00EF5F  20                 	db	32
   784  00EF60  74                 	db	116	;'t'
   785  00EF61  68                 	db	104	;'h'
   786  00EF62  65                 	db	101	;'e'
   787  00EF63  20                 	db	32
   788  00EF64  70                 	db	112	;'p'
   789  00EF65  61                 	db	97	;'a'
   790  00EF66  72                 	db	114	;'r'
   791  00EF67  61                 	db	97	;'a'
   792  00EF68  6D                 	db	109	;'m'
   793  00EF69  65                 	db	101	;'e'
   794  00EF6A  74                 	db	116	;'t'
   795  00EF6B  65                 	db	101	;'e'
   796  00EF6C  72                 	db	114	;'r'
   797  00EF6D  73                 	db	115	;'s'
   798  00EF6E  20                 	db	32
   799  00EF6F  0D                 	db	13
   800  00EF70  0A                 	db	10
   801  00EF71  0A                 	db	10
   802  00EF72  00                 	db	0
   803  00EF73                     STR_62:
   804  00EF73  54                 	db	84	;'T'
   805  00EF74  6F                 	db	111	;'o'
   806  00EF75  20                 	db	32
   807  00EF76  63                 	db	99	;'c'
   808  00EF77  6F                 	db	111	;'o'
   809  00EF78  6E                 	db	110	;'n'
   810  00EF79  74                 	db	116	;'t'
   811  00EF7A  72                 	db	114	;'r'
   812  00EF7B  6F                 	db	111	;'o'
   813  00EF7C  6C                 	db	108	;'l'
   814  00EF7D  20                 	db	32
   815  00EF7E  61                 	db	97	;'a'
   816  00EF7F  20                 	db	32
   817  00EF80  64                 	db	100	;'d'
   818  00EF81  65                 	db	101	;'e'
   819  00EF82  76                 	db	118	;'v'
   820  00EF83  69                 	db	105	;'i'
   821  00EF84  63                 	db	99	;'c'
   822  00EF85  65                 	db	101	;'e'
   823  00EF86  20                 	db	32
   824  00EF87  65                 	db	101	;'e'
   825  00EF88  6E                 	db	110	;'n'
   826  00EF89  74                 	db	116	;'t'
   827  00EF8A  65                 	db	101	;'e'
   828  00EF8B  72                 	db	114	;'r'
   829  00EF8C  20                 	db	32
   830  00EF8D  74                 	db	116	;'t'
   831  00EF8E  68                 	db	104	;'h'
   832  00EF8F  65                 	db	101	;'e'
   833  00EF90  20                 	db	32
   834  00EF91  64                 	db	100	;'d'
   835  00EF92  65                 	db	101	;'e'
   836  00EF93  76                 	db	118	;'v'
   837  00EF94  69                 	db	105	;'i'
   838  00EF95  63                 	db	99	;'c'
   839  00EF96  65                 	db	101	;'e'
   840  00EF97  20                 	db	32
   841  00EF98  66                 	db	102	;'f'
   842  00EF99  6F                 	db	111	;'o'
   843  00EF9A  6C                 	db	108	;'l'
   844  00EF9B  6C                 	db	108	;'l'
   845  00EF9C  6F                 	db	111	;'o'
   846  00EF9D  77                 	db	119	;'w'
   847  00EF9E  65                 	db	101	;'e'
   848  00EF9F  64                 	db	100	;'d'
   849  00EFA0  20                 	db	32
   850  00EFA1  62                 	db	98	;'b'
   851  00EFA2  79                 	db	121	;'y'
   852  00EFA3  20                 	db	32
   853  00EFA4  27                 	db	39
   854  00EFA5  3D                 	db	61	;'='
   855  00EFA6  27                 	db	39
   856  00EFA7  20                 	db	32
   857  00EFA8  61                 	db	97	;'a'
   858  00EFA9  6E                 	db	110	;'n'
   859  00EFAA  64                 	db	100	;'d'
   860  00EFAB  20                 	db	32
   861  00EFAC  27                 	db	39
   862  00EFAD  4F                 	db	79	;'O'
   863  00EFAE  6E                 	db	110	;'n'
   864  00EFAF  2F                 	db	47
   865  00EFB0  4F                 	db	79	;'O'
   866  00EFB1  66                 	db	102	;'f'
   867  00EFB2  66                 	db	102	;'f'
   868  00EFB3  27                 	db	39
   869  00EFB4  0D                 	db	13
   870  00EFB5  0A                 	db	10
   871  00EFB6  00                 	db	0
   872  00EFB7                     STR_173:
   873  00EFB7  54                 	db	84	;'T'
   874  00EFB8  6F                 	db	111	;'o'
   875  00EFB9  20                 	db	32
   876  00EFBA  73                 	db	115	;'s'
   877  00EFBB  65                 	db	101	;'e'
   878  00EFBC  74                 	db	116	;'t'
   879  00EFBD  20                 	db	32
   880  00EFBE  74                 	db	116	;'t'
   881  00EFBF  65                 	db	101	;'e'
   882  00EFC0  20                 	db	32
   883  00EFC1  50                 	db	80	;'P'
   884  00EFC2  57                 	db	87	;'W'
   885  00EFC3  4D                 	db	77	;'M'
   886  00EFC4  20                 	db	32
   887  00EFC5  62                 	db	98	;'b'
   888  00EFC6  72                 	db	114	;'r'
   889  00EFC7  69                 	db	105	;'i'
   890  00EFC8  67                 	db	103	;'g'
   891  00EFC9  68                 	db	104	;'h'
   892  00EFCA  74                 	db	116	;'t'
   893  00EFCB  6E                 	db	110	;'n'
   894  00EFCC  65                 	db	101	;'e'
   895  00EFCD  73                 	db	115	;'s'
   896  00EFCE  73                 	db	115	;'s'
   897  00EFCF  20                 	db	32
   898  00EFD0  65                 	db	101	;'e'
   899  00EFD1  6E                 	db	110	;'n'
   900  00EFD2  74                 	db	116	;'t'
   901  00EFD3  65                 	db	101	;'e'
   902  00EFD4  72                 	db	114	;'r'
   903  00EFD5  20                 	db	32
   904  00EFD6  27                 	db	39
   905  00EFD7  52                 	db	82	;'R'
   906  00EFD8  65                 	db	101	;'e'
   907  00EFD9  64                 	db	100	;'d'
   908  00EFDA  20                 	db	32
   909  00EFDB  4C                 	db	76	;'L'
   910  00EFDC  45                 	db	69	;'E'
   911  00EFDD  44                 	db	68	;'D'
   912  00EFDE  20                 	db	32
   913  00EFDF  62                 	db	98	;'b'
   914  00EFE0  72                 	db	114	;'r'
   915  00EFE1  69                 	db	105	;'i'
   916  00EFE2  67                 	db	103	;'g'
   917  00EFE3  68                 	db	104	;'h'
   918  00EFE4  74                 	db	116	;'t'
   919  00EFE5  6E                 	db	110	;'n'
   920  00EFE6  65                 	db	101	;'e'
   921  00EFE7  73                 	db	115	;'s'
   922  00EFE8  73                 	db	115	;'s'
   923  00EFE9  20                 	db	32
   924  00EFEA  3D                 	db	61	;'='
   925  00EFEB  20                 	db	32
   926  00EFEC  64                 	db	100	;'d'
   927  00EFED  75                 	db	117	;'u'
   928  00EFEE  74                 	db	116	;'t'
   929  00EFEF  79                 	db	121	;'y'
   930  00EFF0  63                 	db	99	;'c'
   931  00EFF1  79                 	db	121	;'y'
   932  00EFF2  63                 	db	99	;'c'
   933  00EFF3  6C                 	db	108	;'l'
   934  00EFF4  65                 	db	101	;'e'
   935  00EFF5  27                 	db	39
   936  00EFF6  0D                 	db	13
   937  00EFF7  0A                 	db	10
   938  00EFF8  00                 	db	0
   939  00EFF9                     STR_190:
   940  00EFF9  54                 	db	84	;'T'
   941  00EFFA  6F                 	db	111	;'o'
   942  00EFFB  20                 	db	32
   943  00EFFC  73                 	db	115	;'s'
   944  00EFFD  65                 	db	101	;'e'
   945  00EFFE  74                 	db	116	;'t'
   946  00EFFF  20                 	db	32
   947  00F000  43                 	db	67	;'C'
   948  00F001  6F                 	db	111	;'o'
   949  00F002  6E                 	db	110	;'n'
   950  00F003  74                 	db	116	;'t'
   951  00F004  72                 	db	114	;'r'
   952  00F005  61                 	db	97	;'a'
   953  00F006  73                 	db	115	;'s'
   954  00F007  74                 	db	116	;'t'
   955  00F008  20                 	db	32
   956  00F009  50                 	db	80	;'P'
   957  00F00A  57                 	db	87	;'W'
   958  00F00B  4D                 	db	77	;'M'
   959  00F00C  20                 	db	32
   960  00F00D  62                 	db	98	;'b'
   961  00F00E  72                 	db	114	;'r'
   962  00F00F  69                 	db	105	;'i'
   963  00F010  67                 	db	103	;'g'
   964  00F011  68                 	db	104	;'h'
   965  00F012  74                 	db	116	;'t'
   966  00F013  6E                 	db	110	;'n'
   967  00F014  65                 	db	101	;'e'
   968  00F015  73                 	db	115	;'s'
   969  00F016  73                 	db	115	;'s'
   970  00F017  20                 	db	32
   971  00F018  65                 	db	101	;'e'
   972  00F019  6E                 	db	110	;'n'
   973  00F01A  74                 	db	116	;'t'
   974  00F01B  65                 	db	101	;'e'
   975  00F01C  72                 	db	114	;'r'
   976  00F01D  20                 	db	32
   977  00F01E  27                 	db	39
   978  00F01F  43                 	db	67	;'C'
   979  00F020  6F                 	db	111	;'o'
   980  00F021  6E                 	db	110	;'n'
   981  00F022  74                 	db	116	;'t'
   982  00F023  72                 	db	114	;'r'
   983  00F024  61                 	db	97	;'a'
   984  00F025  73                 	db	115	;'s'
   985  00F026  74                 	db	116	;'t'
   986  00F027  20                 	db	32
   987  00F028  3D                 	db	61	;'='
   988  00F029  20                 	db	32
   989  00F02A  64                 	db	100	;'d'
   990  00F02B  75                 	db	117	;'u'
   991  00F02C  74                 	db	116	;'t'
   992  00F02D  79                 	db	121	;'y'
   993  00F02E  63                 	db	99	;'c'
   994  00F02F  79                 	db	121	;'y'
   995  00F030  63                 	db	99	;'c'
   996  00F031  6C                 	db	108	;'l'
   997  00F032  65                 	db	101	;'e'
   998  00F033  27                 	db	39
   999  00F034  0D                 	db	13
  1000  00F035  0A                 	db	10
  1001  00F036  00                 	db	0
  1002  00F037                     STR_244:
  1003  00F037  66                 	db	102	;'f'
  1004  00F038  75                 	db	117	;'u'
  1005  00F039  72                 	db	114	;'r'
  1006  00F03A  74                 	db	116	;'t'
  1007  00F03B  68                 	db	104	;'h'
  1008  00F03C  65                 	db	101	;'e'
  1009  00F03D  72                 	db	114	;'r'
  1010  00F03E  20                 	db	32
  1011  00F03F  73                 	db	115	;'s'
  1012  00F040  75                 	db	117	;'u'
  1013  00F041  62                 	db	98	;'b'
  1014  00F042  20                 	db	32
  1015  00F043  6D                 	db	109	;'m'
  1016  00F044  65                 	db	101	;'e'
  1017  00F045  6E                 	db	110	;'n'
  1018  00F046  75                 	db	117	;'u'
  1019  00F047  73                 	db	115	;'s'
  1020  00F048  20                 	db	32
  1021  00F049  61                 	db	97	;'a'
  1022  00F04A  76                 	db	118	;'v'
  1023  00F04B  61                 	db	97	;'a'
  1024  00F04C  69                 	db	105	;'i'
  1025  00F04D  6C                 	db	108	;'l'
  1026  00F04E  61                 	db	97	;'a'
  1027  00F04F  62                 	db	98	;'b'
  1028  00F050  6C                 	db	108	;'l'
  1029  00F051  65                 	db	101	;'e'
  1030  00F052  20                 	db	32
  1031  00F053  62                 	db	98	;'b'
  1032  00F054  79                 	db	121	;'y'
  1033  00F055  20                 	db	32
  1034  00F056  65                 	db	101	;'e'
  1035  00F057  6E                 	db	110	;'n'
  1036  00F058  74                 	db	116	;'t'
  1037  00F059  65                 	db	101	;'e'
  1038  00F05A  72                 	db	114	;'r'
  1039  00F05B  69                 	db	105	;'i'
  1040  00F05C  6E                 	db	110	;'n'
  1041  00F05D  67                 	db	103	;'g'
  1042  00F05E  20                 	db	32
  1043  00F05F  74                 	db	116	;'t'
  1044  00F060  68                 	db	104	;'h'
  1045  00F061  65                 	db	101	;'e'
  1046  00F062  20                 	db	32
  1047  00F063  61                 	db	97	;'a'
  1048  00F064  63                 	db	99	;'c'
  1049  00F065  74                 	db	116	;'t'
  1050  00F066  69                 	db	105	;'i'
  1051  00F067  6F                 	db	111	;'o'
  1052  00F068  6E                 	db	110	;'n'
  1053  00F069  20                 	db	32
  1054  00F06A  61                 	db	97	;'a'
  1055  00F06B  6E                 	db	110	;'n'
  1056  00F06C  64                 	db	100	;'d'
  1057  00F06D  20                 	db	32
  1058  00F06E  61                 	db	97	;'a'
  1059  00F06F  20                 	db	32
  1060  00F070  27                 	db	39
  1061  00F071  3F                 	db	63	;'?'
  1062  00F072  27                 	db	39
  1063  00F073  00                 	db	0
  1064  00F074                     STR_22:
  1065  00F074  53                 	db	83	;'S'
  1066  00F075  79                 	db	121	;'y'
  1067  00F076  73                 	db	115	;'s'
  1068  00F077  74                 	db	116	;'t'
  1069  00F078  65                 	db	101	;'e'
  1070  00F079  6D                 	db	109	;'m'
  1071  00F07A  20                 	db	32
  1072  00F07B  42                 	db	66	;'B'
  1073  00F07C  61                 	db	97	;'a'
  1074  00F07D  75                 	db	117	;'u'
  1075  00F07E  64                 	db	100	;'d'
  1076  00F07F  20                 	db	32
  1077  00F080  77                 	db	119	;'w'
  1078  00F081  69                 	db	105	;'i'
  1079  00F082  6C                 	db	108	;'l'
  1080  00F083  6C                 	db	108	;'l'
  1081  00F084  20                 	db	32
  1082  00F085  62                 	db	98	;'b'
  1083  00F086  65                 	db	101	;'e'
  1084  00F087  20                 	db	32
  1085  00F088  73                 	db	115	;'s'
  1086  00F089  65                 	db	101	;'e'
  1087  00F08A  74                 	db	116	;'t'
  1088  00F08B  20                 	db	32
  1089  00F08C  74                 	db	116	;'t'
  1090  00F08D  6F                 	db	111	;'o'
  1091  00F08E  20                 	db	32
  1092  00F08F  25                 	db	37
  1093  00F090  6C                 	db	108	;'l'
  1094  00F091  75                 	db	117	;'u'
  1095  00F092  20                 	db	32
  1096  00F093  77                 	db	119	;'w'
  1097  00F094  69                 	db	105	;'i'
  1098  00F095  74                 	db	116	;'t'
  1099  00F096  68                 	db	104	;'h'
  1100  00F097  20                 	db	32
  1101  00F098  45                 	db	69	;'E'
  1102  00F099  76                 	db	118	;'v'
  1103  00F09A  65                 	db	101	;'e'
  1104  00F09B  6E                 	db	110	;'n'
  1105  00F09C  20                 	db	32
  1106  00F09D  70                 	db	112	;'p'
  1107  00F09E  61                 	db	97	;'a'
  1108  00F09F  72                 	db	114	;'r'
  1109  00F0A0  69                 	db	105	;'i'
  1110  00F0A1  74                 	db	116	;'t'
  1111  00F0A2  79                 	db	121	;'y'
  1112  00F0A3  20                 	db	32
  1113  00F0A4  62                 	db	98	;'b'
  1114  00F0A5  69                 	db	105	;'i'
  1115  00F0A6  74                 	db	116	;'t'
  1116  00F0A7  0D                 	db	13
  1117  00F0A8  0A                 	db	10
  1118  00F0A9  00                 	db	0
  1119  00F0AA                     STR_21:
  1120  00F0AA  53                 	db	83	;'S'
  1121  00F0AB  79                 	db	121	;'y'
  1122  00F0AC  73                 	db	115	;'s'
  1123  00F0AD  74                 	db	116	;'t'
  1124  00F0AE  65                 	db	101	;'e'
  1125  00F0AF  6D                 	db	109	;'m'
  1126  00F0B0  20                 	db	32
  1127  00F0B1  42                 	db	66	;'B'
  1128  00F0B2  61                 	db	97	;'a'
  1129  00F0B3  75                 	db	117	;'u'
  1130  00F0B4  64                 	db	100	;'d'
  1131  00F0B5  20                 	db	32
  1132  00F0B6  77                 	db	119	;'w'
  1133  00F0B7  69                 	db	105	;'i'
  1134  00F0B8  6C                 	db	108	;'l'
  1135  00F0B9  6C                 	db	108	;'l'
  1136  00F0BA  20                 	db	32
  1137  00F0BB  62                 	db	98	;'b'
  1138  00F0BC  65                 	db	101	;'e'
  1139  00F0BD  20                 	db	32
  1140  00F0BE  73                 	db	115	;'s'
  1141  00F0BF  65                 	db	101	;'e'
  1142  00F0C0  74                 	db	116	;'t'
  1143  00F0C1  20                 	db	32
  1144  00F0C2  74                 	db	116	;'t'
  1145  00F0C3  6F                 	db	111	;'o'
  1146  00F0C4  20                 	db	32
  1147  00F0C5  25                 	db	37
  1148  00F0C6  6C                 	db	108	;'l'
  1149  00F0C7  75                 	db	117	;'u'
  1150  00F0C8  20                 	db	32
  1151  00F0C9  77                 	db	119	;'w'
  1152  00F0CA  69                 	db	105	;'i'
  1153  00F0CB  74                 	db	116	;'t'
  1154  00F0CC  68                 	db	104	;'h'
  1155  00F0CD  20                 	db	32
  1156  00F0CE  4F                 	db	79	;'O'
  1157  00F0CF  64                 	db	100	;'d'
  1158  00F0D0  64                 	db	100	;'d'
  1159  00F0D1  20                 	db	32
  1160  00F0D2  70                 	db	112	;'p'
  1161  00F0D3  61                 	db	97	;'a'
  1162  00F0D4  72                 	db	114	;'r'
  1163  00F0D5  69                 	db	105	;'i'
  1164  00F0D6  74                 	db	116	;'t'
  1165  00F0D7  79                 	db	121	;'y'
  1166  00F0D8  20                 	db	32
  1167  00F0D9  62                 	db	98	;'b'
  1168  00F0DA  69                 	db	105	;'i'
  1169  00F0DB  74                 	db	116	;'t'
  1170  00F0DC  0D                 	db	13
  1171  00F0DD  0A                 	db	10
  1172  00F0DE  00                 	db	0
  1173  00F0DF                     STR_25:
  1174  00F0DF  53                 	db	83	;'S'
  1175  00F0E0  79                 	db	121	;'y'
  1176  00F0E1  73                 	db	115	;'s'
  1177  00F0E2  74                 	db	116	;'t'
  1178  00F0E3  65                 	db	101	;'e'
  1179  00F0E4  6D                 	db	109	;'m'
  1180  00F0E5  20                 	db	32
  1181  00F0E6  42                 	db	66	;'B'
  1182  00F0E7  61                 	db	97	;'a'
  1183  00F0E8  75                 	db	117	;'u'
  1184  00F0E9  64                 	db	100	;'d'
  1185  00F0EA  20                 	db	32
  1186  00F0EB  77                 	db	119	;'w'
  1187  00F0EC  69                 	db	105	;'i'
  1188  00F0ED  6C                 	db	108	;'l'
  1189  00F0EE  6C                 	db	108	;'l'
  1190  00F0EF  20                 	db	32
  1191  00F0F0  62                 	db	98	;'b'
  1192  00F0F1  65                 	db	101	;'e'
  1193  00F0F2  20                 	db	32
  1194  00F0F3  73                 	db	115	;'s'
  1195  00F0F4  65                 	db	101	;'e'
  1196  00F0F5  74                 	db	116	;'t'
  1197  00F0F6  20                 	db	32
  1198  00F0F7  74                 	db	116	;'t'
  1199  00F0F8  6F                 	db	111	;'o'
  1200  00F0F9  20                 	db	32
  1201  00F0FA  25                 	db	37
  1202  00F0FB  6C                 	db	108	;'l'
  1203  00F0FC  75                 	db	117	;'u'
  1204  00F0FD  20                 	db	32
  1205  00F0FE  77                 	db	119	;'w'
  1206  00F0FF  69                 	db	105	;'i'
  1207  00F100  74                 	db	116	;'t'
  1208  00F101  68                 	db	104	;'h'
  1209  00F102  20                 	db	32
  1210  00F103  6E                 	db	110	;'n'
  1211  00F104  6F                 	db	111	;'o'
  1212  00F105  20                 	db	32
  1213  00F106  70                 	db	112	;'p'
  1214  00F107  61                 	db	97	;'a'
  1215  00F108  72                 	db	114	;'r'
  1216  00F109  69                 	db	105	;'i'
  1217  00F10A  74                 	db	116	;'t'
  1218  00F10B  79                 	db	121	;'y'
  1219  00F10C  20                 	db	32
  1220  00F10D  62                 	db	98	;'b'
  1221  00F10E  69                 	db	105	;'i'
  1222  00F10F  74                 	db	116	;'t'
  1223  00F110  0D                 	db	13
  1224  00F111  0A                 	db	10
  1225  00F112  00                 	db	0
  1226  00F113                     STR_278:
  1227  00F113  46                 	db	70	;'F'
  1228  00F114  6F                 	db	111	;'o'
  1229  00F115  72                 	db	114	;'r'
  1230  00F116  20                 	db	32
  1231  00F117  44                 	db	68	;'D'
  1232  00F118  65                 	db	101	;'e'
  1233  00F119  76                 	db	118	;'v'
  1234  00F11A  69                 	db	105	;'i'
  1235  00F11B  63                 	db	99	;'c'
  1236  00F11C  65                 	db	101	;'e'
  1237  00F11D  20                 	db	32
  1238  00F11E  68                 	db	104	;'h'
  1239  00F11F  65                 	db	101	;'e'
  1240  00F120  6C                 	db	108	;'l'
  1241  00F121  70                 	db	112	;'p'
  1242  00F122  20                 	db	32
  1243  00F123  65                 	db	101	;'e'
  1244  00F124  6E                 	db	110	;'n'
  1245  00F125  74                 	db	116	;'t'
  1246  00F126  65                 	db	101	;'e'
  1247  00F127  72                 	db	114	;'r'
  1248  00F128  20                 	db	32
  1249  00F129  64                 	db	100	;'d'
  1250  00F12A  65                 	db	101	;'e'
  1251  00F12B  76                 	db	118	;'v'
  1252  00F12C  69                 	db	105	;'i'
  1253  00F12D  63                 	db	99	;'c'
  1254  00F12E  65                 	db	101	;'e'
  1255  00F12F  20                 	db	32
  1256  00F130  66                 	db	102	;'f'
  1257  00F131  6F                 	db	111	;'o'
  1258  00F132  6C                 	db	108	;'l'
  1259  00F133  6C                 	db	108	;'l'
  1260  00F134  6F                 	db	111	;'o'
  1261  00F135  77                 	db	119	;'w'
  1262  00F136  65                 	db	101	;'e'
  1263  00F137  64                 	db	100	;'d'
  1264  00F138  20                 	db	32
  1265  00F139  62                 	db	98	;'b'
  1266  00F13A  79                 	db	121	;'y'
  1267  00F13B  20                 	db	32
  1268  00F13C  61                 	db	97	;'a'
  1269  00F13D  20                 	db	32
  1270  00F13E  27                 	db	39
  1271  00F13F  3F                 	db	63	;'?'
  1272  00F140  27                 	db	39
  1273  00F141  20                 	db	32
  1274  00F142  0D                 	db	13
  1275  00F143  0A                 	db	10
  1276  00F144  00                 	db	0
  1277  00F145                     STR_170:
  1278  00F145  72                 	db	114	;'r'
  1279  00F146  65                 	db	101	;'e'
  1280  00F147  64                 	db	100	;'d'
  1281  00F148  6C                 	db	108	;'l'
  1282  00F149  65                 	db	101	;'e'
  1283  00F14A  64                 	db	100	;'d'
  1284  00F14B  20                 	db	32
  1285  00F14C  77                 	db	119	;'w'
  1286  00F14D  68                 	db	104	;'h'
  1287  00F14E  61                 	db	97	;'a'
  1288  00F14F  74                 	db	116	;'t'
  1289  00F150  3F                 	db	63	;'?'
  1290  00F151  3F                 	db	63	;'?'
  1291  00F152  3F                 	db	63	;'?'
  1292  00F153  20                 	db	32
  1293  00F154  44                 	db	68	;'D'
  1294  00F155  6F                 	db	111	;'o'
  1295  00F156  20                 	db	32
  1296  00F157  79                 	db	121	;'y'
  1297  00F158  6F                 	db	111	;'o'
  1298  00F159  75                 	db	117	;'u'
  1299  00F15A  20                 	db	32
  1300  00F15B  6D                 	db	109	;'m'
  1301  00F15C  65                 	db	101	;'e'
  1302  00F15D  61                 	db	97	;'a'
  1303  00F15E  6E                 	db	110	;'n'
  1304  00F15F  20                 	db	32
  1305  00F160  52                 	db	82	;'R'
  1306  00F161  65                 	db	101	;'e'
  1307  00F162  64                 	db	100	;'d'
  1308  00F163  20                 	db	32
  1309  00F164  4C                 	db	76	;'L'
  1310  00F165  65                 	db	101	;'e'
  1311  00F166  64                 	db	100	;'d'
  1312  00F167  20                 	db	32
  1313  00F168  42                 	db	66	;'B'
  1314  00F169  72                 	db	114	;'r'
  1315  00F16A  69                 	db	105	;'i'
  1316  00F16B  67                 	db	103	;'g'
  1317  00F16C  68                 	db	104	;'h'
  1318  00F16D  74                 	db	116	;'t'
  1319  00F16E  6E                 	db	110	;'n'
  1320  00F16F  65                 	db	101	;'e'
  1321  00F170  73                 	db	115	;'s'
  1322  00F171  73                 	db	115	;'s'
  1323  00F172  3F                 	db	63	;'?'
  1324  00F173  3F                 	db	63	;'?'
  1325  00F174  3F                 	db	63	;'?'
  1326  00F175  00                 	db	0
  1327  00F176                     STR_183:
  1328  00F176  49                 	db	73	;'I'
  1329  00F177  6E                 	db	110	;'n'
  1330  00F178  76                 	db	118	;'v'
  1331  00F179  61                 	db	97	;'a'
  1332  00F17A  6C                 	db	108	;'l'
  1333  00F17B  69                 	db	105	;'i'
  1334  00F17C  64                 	db	100	;'d'
  1335  00F17D  20                 	db	32
  1336  00F17E  43                 	db	67	;'C'
  1337  00F17F  6F                 	db	111	;'o'
  1338  00F180  6E                 	db	110	;'n'
  1339  00F181  74                 	db	116	;'t'
  1340  00F182  72                 	db	114	;'r'
  1341  00F183  61                 	db	97	;'a'
  1342  00F184  73                 	db	115	;'s'
  1343  00F185  74                 	db	116	;'t'
  1344  00F186  20                 	db	32
  1345  00F187  44                 	db	68	;'D'
  1346  00F188  75                 	db	117	;'u'
  1347  00F189  74                 	db	116	;'t'
  1348  00F18A  79                 	db	121	;'y'
  1349  00F18B  20                 	db	32
  1350  00F18C  63                 	db	99	;'c'
  1351  00F18D  79                 	db	121	;'y'
  1352  00F18E  63                 	db	99	;'c'
  1353  00F18F  6C                 	db	108	;'l'
  1354  00F190  65                 	db	101	;'e'
  1355  00F191  3A                 	db	58	;':'
  1356  00F192  20                 	db	32
  1357  00F193  47                 	db	71	;'G'
  1358  00F194  72                 	db	114	;'r'
  1359  00F195  65                 	db	101	;'e'
  1360  00F196  61                 	db	97	;'a'
  1361  00F197  74                 	db	116	;'t'
  1362  00F198  65                 	db	101	;'e'
  1363  00F199  72                 	db	114	;'r'
  1364  00F19A  20                 	db	32
  1365  00F19B  74                 	db	116	;'t'
  1366  00F19C  68                 	db	104	;'h'
  1367  00F19D  61                 	db	97	;'a'
  1368  00F19E  6E                 	db	110	;'n'
  1369  00F19F  20                 	db	32
  1370  00F1A0  31                 	db	49	;'1'
  1371  00F1A1  30                 	db	48	;'0'
  1372  00F1A2  30                 	db	48	;'0'
  1373  00F1A3  0D                 	db	13
  1374  00F1A4  0A                 	db	10
  1375  00F1A5  00                 	db	0
  1376  00F1A6                     STR_24:
  1377  00F1A6  53                 	db	83	;'S'
  1378  00F1A7  79                 	db	121	;'y'
  1379  00F1A8  73                 	db	115	;'s'
  1380  00F1A9  74                 	db	116	;'t'
  1381  00F1AA  65                 	db	101	;'e'
  1382  00F1AB  6D                 	db	109	;'m'
  1383  00F1AC  20                 	db	32
  1384  00F1AD  42                 	db	66	;'B'
  1385  00F1AE  61                 	db	97	;'a'
  1386  00F1AF  75                 	db	117	;'u'
  1387  00F1B0  64                 	db	100	;'d'
  1388  00F1B1  20                 	db	32
  1389  00F1B2  77                 	db	119	;'w'
  1390  00F1B3  69                 	db	105	;'i'
  1391  00F1B4  6C                 	db	108	;'l'
  1392  00F1B5  6C                 	db	108	;'l'
  1393  00F1B6  20                 	db	32
  1394  00F1B7  62                 	db	98	;'b'
  1395  00F1B8  65                 	db	101	;'e'
  1396  00F1B9  20                 	db	32
  1397  00F1BA  73                 	db	115	;'s'
  1398  00F1BB  65                 	db	101	;'e'
  1399  00F1BC  74                 	db	116	;'t'
  1400  00F1BD  20                 	db	32
  1401  00F1BE  74                 	db	116	;'t'
  1402  00F1BF  6F                 	db	111	;'o'
  1403  00F1C0  20                 	db	32
  1404  00F1C1  25                 	db	37
  1405  00F1C2  6C                 	db	108	;'l'
  1406  00F1C3  75                 	db	117	;'u'
  1407  00F1C4  20                 	db	32
  1408  00F1C5  77                 	db	119	;'w'
  1409  00F1C6  69                 	db	105	;'i'
  1410  00F1C7  74                 	db	116	;'t'
  1411  00F1C8  68                 	db	104	;'h'
  1412  00F1C9  20                 	db	32
  1413  00F1CA  53                 	db	83	;'S'
  1414  00F1CB  70                 	db	112	;'p'
  1415  00F1CC  61                 	db	97	;'a'
  1416  00F1CD  63                 	db	99	;'c'
  1417  00F1CE  65                 	db	101	;'e'
  1418  00F1CF  20                 	db	32
  1419  00F1D0  62                 	db	98	;'b'
  1420  00F1D1  69                 	db	105	;'i'
  1421  00F1D2  74                 	db	116	;'t'
  1422  00F1D3  0D                 	db	13
  1423  00F1D4  0A                 	db	10
  1424  00F1D5  00                 	db	0
  1425  00F1D6                     STR_23:
  1426  00F1D6  53                 	db	83	;'S'
  1427  00F1D7  79                 	db	121	;'y'
  1428  00F1D8  73                 	db	115	;'s'
  1429  00F1D9  74                 	db	116	;'t'
  1430  00F1DA  65                 	db	101	;'e'
  1431  00F1DB  6D                 	db	109	;'m'
  1432  00F1DC  20                 	db	32
  1433  00F1DD  42                 	db	66	;'B'
  1434  00F1DE  61                 	db	97	;'a'
  1435  00F1DF  75                 	db	117	;'u'
  1436  00F1E0  64                 	db	100	;'d'
  1437  00F1E1  20                 	db	32
  1438  00F1E2  77                 	db	119	;'w'
  1439  00F1E3  69                 	db	105	;'i'
  1440  00F1E4  6C                 	db	108	;'l'
  1441  00F1E5  6C                 	db	108	;'l'
  1442  00F1E6  20                 	db	32
  1443  00F1E7  62                 	db	98	;'b'
  1444  00F1E8  65                 	db	101	;'e'
  1445  00F1E9  20                 	db	32
  1446  00F1EA  73                 	db	115	;'s'
  1447  00F1EB  65                 	db	101	;'e'
  1448  00F1EC  74                 	db	116	;'t'
  1449  00F1ED  20                 	db	32
  1450  00F1EE  74                 	db	116	;'t'
  1451  00F1EF  6F                 	db	111	;'o'
  1452  00F1F0  20                 	db	32
  1453  00F1F1  25                 	db	37
  1454  00F1F2  6C                 	db	108	;'l'
  1455  00F1F3  75                 	db	117	;'u'
  1456  00F1F4  20                 	db	32
  1457  00F1F5  77                 	db	119	;'w'
  1458  00F1F6  69                 	db	105	;'i'
  1459  00F1F7  74                 	db	116	;'t'
  1460  00F1F8  68                 	db	104	;'h'
  1461  00F1F9  20                 	db	32
  1462  00F1FA  4D                 	db	77	;'M'
  1463  00F1FB  61                 	db	97	;'a'
  1464  00F1FC  72                 	db	114	;'r'
  1465  00F1FD  6B                 	db	107	;'k'
  1466  00F1FE  20                 	db	32
  1467  00F1FF  62                 	db	98	;'b'
  1468  00F200  69                 	db	105	;'i'
  1469  00F201  74                 	db	116	;'t'
  1470  00F202  0D                 	db	13
  1471  00F203  0A                 	db	10
  1472  00F204  00                 	db	0
  1473  00F205                     STR_185:
  1474  00F205  49                 	db	73	;'I'
  1475  00F206  6E                 	db	110	;'n'
  1476  00F207  76                 	db	118	;'v'
  1477  00F208  61                 	db	97	;'a'
  1478  00F209  6C                 	db	108	;'l'
  1479  00F20A  69                 	db	105	;'i'
  1480  00F20B  64                 	db	100	;'d'
  1481  00F20C  20                 	db	32
  1482  00F20D  43                 	db	67	;'C'
  1483  00F20E  6F                 	db	111	;'o'
  1484  00F20F  6E                 	db	110	;'n'
  1485  00F210  74                 	db	116	;'t'
  1486  00F211  72                 	db	114	;'r'
  1487  00F212  61                 	db	97	;'a'
  1488  00F213  73                 	db	115	;'s'
  1489  00F214  74                 	db	116	;'t'
  1490  00F215  20                 	db	32
  1491  00F216  44                 	db	68	;'D'
  1492  00F217  75                 	db	117	;'u'
  1493  00F218  74                 	db	116	;'t'
  1494  00F219  79                 	db	121	;'y'
  1495  00F21A  20                 	db	32
  1496  00F21B  43                 	db	67	;'C'
  1497  00F21C  79                 	db	121	;'y'
  1498  00F21D  63                 	db	99	;'c'
  1499  00F21E  6C                 	db	108	;'l'
  1500  00F21F  65                 	db	101	;'e'
  1501  00F220  3A                 	db	58	;':'
  1502  00F221  20                 	db	32
  1503  00F222  4C                 	db	76	;'L'
  1504  00F223  65                 	db	101	;'e'
  1505  00F224  73                 	db	115	;'s'
  1506  00F225  73                 	db	115	;'s'
  1507  00F226  20                 	db	32
  1508  00F227  74                 	db	116	;'t'
  1509  00F228  68                 	db	104	;'h'
  1510  00F229  61                 	db	97	;'a'
  1511  00F22A  6E                 	db	110	;'n'
  1512  00F22B  20                 	db	32
  1513  00F22C  30                 	db	48	;'0'
  1514  00F22D  0D                 	db	13
  1515  00F22E  0A                 	db	10
  1516  00F22F  00                 	db	0
  1517  00F230                     STR_174:
  1518  00F230  77                 	db	119	;'w'
  1519  00F231  68                 	db	104	;'h'
  1520  00F232  65                 	db	101	;'e'
  1521  00F233  72                 	db	114	;'r'
  1522  00F234  65                 	db	101	;'e'
  1523  00F235  20                 	db	32
  1524  00F236  74                 	db	116	;'t'
  1525  00F237  68                 	db	104	;'h'
  1526  00F238  65                 	db	101	;'e'
  1527  00F239  20                 	db	32
  1528  00F23A  64                 	db	100	;'d'
  1529  00F23B  75                 	db	117	;'u'
  1530  00F23C  74                 	db	116	;'t'
  1531  00F23D  79                 	db	121	;'y'
  1532  00F23E  63                 	db	99	;'c'
  1533  00F23F  79                 	db	121	;'y'
  1534  00F240  63                 	db	99	;'c'
  1535  00F241  6C                 	db	108	;'l'
  1536  00F242  65                 	db	101	;'e'
  1537  00F243  20                 	db	32
  1538  00F244  69                 	db	105	;'i'
  1539  00F245  73                 	db	115	;'s'
  1540  00F246  20                 	db	32
  1541  00F247  61                 	db	97	;'a'
  1542  00F248  20                 	db	32
  1543  00F249  6E                 	db	110	;'n'
  1544  00F24A  75                 	db	117	;'u'
  1545  00F24B  6D                 	db	109	;'m'
  1546  00F24C  62                 	db	98	;'b'
  1547  00F24D  65                 	db	101	;'e'
  1548  00F24E  72                 	db	114	;'r'
  1549  00F24F  20                 	db	32
  1550  00F250  30                 	db	48	;'0'
  1551  00F251  20                 	db	32
  1552  00F252  2D                 	db	45
  1553  00F253  20                 	db	32
  1554  00F254  31                 	db	49	;'1'
  1555  00F255  30                 	db	48	;'0'
  1556  00F256  30                 	db	48	;'0'
  1557  00F257  0D                 	db	13
  1558  00F258  0A                 	db	10
  1559  00F259  00                 	db	0
  1560  00F25A                     STR_164:
  1561  00F25A  49                 	db	73	;'I'
  1562  00F25B  6E                 	db	110	;'n'
  1563  00F25C  76                 	db	118	;'v'
  1564  00F25D  61                 	db	97	;'a'
  1565  00F25E  6C                 	db	108	;'l'
  1566  00F25F  69                 	db	105	;'i'
  1567  00F260  64                 	db	100	;'d'
  1568  00F261  20                 	db	32
  1569  00F262  44                 	db	68	;'D'
  1570  00F263  75                 	db	117	;'u'
  1571  00F264  74                 	db	116	;'t'
  1572  00F265  79                 	db	121	;'y'
  1573  00F266  63                 	db	99	;'c'
  1574  00F267  79                 	db	121	;'y'
  1575  00F268  63                 	db	99	;'c'
  1576  00F269  6C                 	db	108	;'l'
  1577  00F26A  65                 	db	101	;'e'
  1578  00F26B  3A                 	db	58	;':'
  1579  00F26C  20                 	db	32
  1580  00F26D  47                 	db	71	;'G'
  1581  00F26E  72                 	db	114	;'r'
  1582  00F26F  65                 	db	101	;'e'
  1583  00F270  61                 	db	97	;'a'
  1584  00F271  74                 	db	116	;'t'
  1585  00F272  65                 	db	101	;'e'
  1586  00F273  72                 	db	114	;'r'
  1587  00F274  20                 	db	32
  1588  00F275  74                 	db	116	;'t'
  1589  00F276  68                 	db	104	;'h'
  1590  00F277  61                 	db	97	;'a'
  1591  00F278  6E                 	db	110	;'n'
  1592  00F279  20                 	db	32
  1593  00F27A  31                 	db	49	;'1'
  1594  00F27B  30                 	db	48	;'0'
  1595  00F27C  30                 	db	48	;'0'
  1596  00F27D  0D                 	db	13
  1597  00F27E  0A                 	db	10
  1598  00F27F  00                 	db	0
  1599  00F280                     STR_134:
  1600  00F280  43                 	db	67	;'C'
  1601  00F281  68                 	db	104	;'h'
  1602  00F282  72                 	db	114	;'r'
  1603  00F283  69                 	db	105	;'i'
  1604  00F284  73                 	db	115	;'s'
  1605  00F285  74                 	db	116	;'t'
  1606  00F286  6D                 	db	109	;'m'
  1607  00F287  61                 	db	97	;'a'
  1608  00F288  73                 	db	115	;'s'
  1609  00F289  20                 	db	32
  1610  00F28A  54                 	db	84	;'T'
  1611  00F28B  72                 	db	114	;'r'
  1612  00F28C  65                 	db	101	;'e'
  1613  00F28D  65                 	db	101	;'e'
  1614  00F28E  20                 	db	32
  1615  00F28F  43                 	db	67	;'C'
  1616  00F290  6F                 	db	111	;'o'
  1617  00F291  6C                 	db	108	;'l'
  1618  00F292  6F                 	db	111	;'o'
  1619  00F293  72                 	db	114	;'r'
  1620  00F294  65                 	db	101	;'e'
  1621  00F295  64                 	db	100	;'d'
  1622  00F296  20                 	db	32
  1623  00F297  4C                 	db	76	;'L'
  1624  00F298  69                 	db	105	;'i'
  1625  00F299  67                 	db	103	;'g'
  1626  00F29A  68                 	db	104	;'h'
  1627  00F29B  74                 	db	116	;'t'
  1628  00F29C  73                 	db	115	;'s'
  1629  00F29D  20                 	db	32
  1630  00F29E  54                 	db	84	;'T'
  1631  00F29F  6F                 	db	111	;'o'
  1632  00F2A0  67                 	db	103	;'g'
  1633  00F2A1  67                 	db	103	;'g'
  1634  00F2A2  6C                 	db	108	;'l'
  1635  00F2A3  65                 	db	101	;'e'
  1636  00F2A4  64                 	db	100	;'d'
  1637  00F2A5  00                 	db	0
  1638  00F2A6                     STR_5:
  1639  00F2A6  0D                 	db	13
  1640  00F2A7  0A                 	db	10
  1641  00F2A8  42                 	db	66	;'B'
  1642  00F2A9  75                 	db	117	;'u'
  1643  00F2AA  66                 	db	102	;'f'
  1644  00F2AB  66                 	db	102	;'f'
  1645  00F2AC  65                 	db	101	;'e'
  1646  00F2AD  72                 	db	114	;'r'
  1647  00F2AE  20                 	db	32
  1648  00F2AF  6F                 	db	111	;'o'
  1649  00F2B0  76                 	db	118	;'v'
  1650  00F2B1  65                 	db	101	;'e'
  1651  00F2B2  72                 	db	114	;'r'
  1652  00F2B3  66                 	db	102	;'f'
  1653  00F2B4  6C                 	db	108	;'l'
  1654  00F2B5  6F                 	db	111	;'o'
  1655  00F2B6  77                 	db	119	;'w'
  1656  00F2B7  21                 	db	33
  1657  00F2B8  20                 	db	32
  1658  00F2B9  44                 	db	68	;'D'
  1659  00F2BA  65                 	db	101	;'e'
  1660  00F2BB  6C                 	db	108	;'l'
  1661  00F2BC  65                 	db	101	;'e'
  1662  00F2BD  74                 	db	116	;'t'
  1663  00F2BE  69                 	db	105	;'i'
  1664  00F2BF  6E                 	db	110	;'n'
  1665  00F2C0  67                 	db	103	;'g'
  1666  00F2C1  20                 	db	32
  1667  00F2C2  42                 	db	66	;'B'
  1668  00F2C3  75                 	db	117	;'u'
  1669  00F2C4  66                 	db	102	;'f'
  1670  00F2C5  66                 	db	102	;'f'
  1671  00F2C6  65                 	db	101	;'e'
  1672  00F2C7  72                 	db	114	;'r'
  1673  00F2C8  20                 	db	32
  1674  00F2C9  0D                 	db	13
  1675  00F2CA  0A                 	db	10
  1676  00F2CB  00                 	db	0
  1677  00F2CC                     STR_151:
  1678  00F2CC  69                 	db	105	;'i'
  1679  00F2CD  2E                 	db	46
  1680  00F2CE  65                 	db	101	;'e'
  1681  00F2CF  2E                 	db	46
  1682  00F2D0  20                 	db	32
  1683  00F2D1  43                 	db	67	;'C'
  1684  00F2D2  68                 	db	104	;'h'
  1685  00F2D3  72                 	db	114	;'r'
  1686  00F2D4  69                 	db	105	;'i'
  1687  00F2D5  73                 	db	115	;'s'
  1688  00F2D6  74                 	db	116	;'t'
  1689  00F2D7  6D                 	db	109	;'m'
  1690  00F2D8  61                 	db	97	;'a'
  1691  00F2D9  73                 	db	115	;'s'
  1692  00F2DA  20                 	db	32
  1693  00F2DB  43                 	db	67	;'C'
  1694  00F2DC  6F                 	db	111	;'o'
  1695  00F2DD  6C                 	db	108	;'l'
  1696  00F2DE  6F                 	db	111	;'o'
  1697  00F2DF  72                 	db	114	;'r'
  1698  00F2E0  65                 	db	101	;'e'
  1699  00F2E1  64                 	db	100	;'d'
  1700  00F2E2  20                 	db	32
  1701  00F2E3  6C                 	db	108	;'l'
  1702  00F2E4  69                 	db	105	;'i'
  1703  00F2E5  67                 	db	103	;'g'
  1704  00F2E6  68                 	db	104	;'h'
  1705  00F2E7  74                 	db	116	;'t'
  1706  00F2E8  73                 	db	115	;'s'
  1707  00F2E9  20                 	db	32
  1708  00F2EA  3D                 	db	61	;'='
  1709  00F2EB  20                 	db	32
  1710  00F2EC  4F                 	db	79	;'O'
  1711  00F2ED  6E                 	db	110	;'n'
  1712  00F2EE  0D                 	db	13
  1713  00F2EF  0A                 	db	10
  1714  00F2F0  00                 	db	0
  1715  00F2F1                     STR_229:
  1716  00F2F1  45                 	db	69	;'E'
  1717  00F2F2  6E                 	db	110	;'n'
  1718  00F2F3  74                 	db	116	;'t'
  1719  00F2F4  65                 	db	101	;'e'
  1720  00F2F5  72                 	db	114	;'r'
  1721  00F2F6  20                 	db	32
  1722  00F2F7  54                 	db	84	;'T'
  1723  00F2F8  69                 	db	105	;'i'
  1724  00F2F9  6D                 	db	109	;'m'
  1725  00F2FA  65                 	db	101	;'e'
  1726  00F2FB  20                 	db	32
  1727  00F2FC  4D                 	db	77	;'M'
  1728  00F2FD  4D                 	db	77	;'M'
  1729  00F2FE  2F                 	db	47
  1730  00F2FF  44                 	db	68	;'D'
  1731  00F300  44                 	db	68	;'D'
  1732  00F301  2F                 	db	47
  1733  00F302  59                 	db	89	;'Y'
  1734  00F303  59                 	db	89	;'Y'
  1735  00F304  20                 	db	32
  1736  00F305  48                 	db	72	;'H'
  1737  00F306  48                 	db	72	;'H'
  1738  00F307  3A                 	db	58	;':'
  1739  00F308  4D                 	db	77	;'M'
  1740  00F309  4D                 	db	77	;'M'
  1741  00F30A  3A                 	db	58	;':'
  1742  00F30B  53                 	db	83	;'S'
  1743  00F30C  53                 	db	83	;'S'
  1744  00F30D  20                 	db	32
  1745  00F30E  41                 	db	65	;'A'
  1746  00F30F  4D                 	db	77	;'M'
  1747  00F310  20                 	db	32
  1748  00F311  6F                 	db	111	;'o'
  1749  00F312  72                 	db	114	;'r'
  1750  00F313  0D                 	db	13
  1751  00F314  0A                 	db	10
  1752  00F315  00                 	db	0
  1753  00F316                     STR_219:
  1754  00F316  20                 	db	32
  1755  00F317  33                 	db	51	;'3'
  1756  00F318  20                 	db	32
  1757  00F319  56                 	db	86	;'V'
  1758  00F31A  6F                 	db	111	;'o'
  1759  00F31B  6C                 	db	108	;'l'
  1760  00F31C  74                 	db	116	;'t'
  1761  00F31D  20                 	db	32
  1762  00F31E  52                 	db	82	;'R'
  1763  00F31F  54                 	db	84	;'T'
  1764  00F320  43                 	db	67	;'C'
  1765  00F321  20                 	db	32
  1766  00F322  42                 	db	66	;'B'
  1767  00F323  61                 	db	97	;'a'
  1768  00F324  74                 	db	116	;'t'
  1769  00F325  74                 	db	116	;'t'
  1770  00F326  65                 	db	101	;'e'
  1771  00F327  72                 	db	114	;'r'
  1772  00F328  79                 	db	121	;'y'
  1773  00F329  20                 	db	32
  1774  00F32A  56                 	db	86	;'V'
  1775  00F32B  6F                 	db	111	;'o'
  1776  00F32C  6C                 	db	108	;'l'
  1777  00F32D  74                 	db	116	;'t'
  1778  00F32E  61                 	db	97	;'a'
  1779  00F32F  67                 	db	103	;'g'
  1780  00F330  65                 	db	101	;'e'
  1781  00F331  20                 	db	32
  1782  00F332  3D                 	db	61	;'='
  1783  00F333  20                 	db	32
  1784  00F334  25                 	db	37
  1785  00F335  64                 	db	100	;'d'
  1786  00F336  2E                 	db	46
  1787  00F337  25                 	db	37
  1788  00F338  64                 	db	100	;'d'
  1789  00F339  00                 	db	0
  1790  00F33A                     STR_315:
  1791  00F33A  25                 	db	37
  1792  00F33B  30                 	db	48	;'0'
  1793  00F33C  32                 	db	50	;'2'
  1794  00F33D  64                 	db	100	;'d'
  1795  00F33E  2F                 	db	47
  1796  00F33F  25                 	db	37
  1797  00F340  30                 	db	48	;'0'
  1798  00F341  32                 	db	50	;'2'
  1799  00F342  64                 	db	100	;'d'
  1800  00F343  2F                 	db	47
  1801  00F344  32                 	db	50	;'2'
  1802  00F345  30                 	db	48	;'0'
  1803  00F346  25                 	db	37
  1804  00F347  30                 	db	48	;'0'
  1805  00F348  32                 	db	50	;'2'
  1806  00F349  64                 	db	100	;'d'
  1807  00F34A  20                 	db	32
  1808  00F34B  25                 	db	37
  1809  00F34C  30                 	db	48	;'0'
  1810  00F34D  32                 	db	50	;'2'
  1811  00F34E  64                 	db	100	;'d'
  1812  00F34F  3A                 	db	58	;':'
  1813  00F350  25                 	db	37
  1814  00F351  30                 	db	48	;'0'
  1815  00F352  32                 	db	50	;'2'
  1816  00F353  64                 	db	100	;'d'
  1817  00F354  3A                 	db	58	;':'
  1818  00F355  25                 	db	37
  1819  00F356  30                 	db	48	;'0'
  1820  00F357  32                 	db	50	;'2'
  1821  00F358  64                 	db	100	;'d'
  1822  00F359  20                 	db	32
  1823  00F35A  41                 	db	65	;'A'
  1824  00F35B  4D                 	db	77	;'M'
  1825  00F35C  00                 	db	0
  1826  00F35D                     STR_316:
  1827  00F35D  25                 	db	37
  1828  00F35E  30                 	db	48	;'0'
  1829  00F35F  32                 	db	50	;'2'
  1830  00F360  64                 	db	100	;'d'
  1831  00F361  2F                 	db	47
  1832  00F362  25                 	db	37
  1833  00F363  30                 	db	48	;'0'
  1834  00F364  32                 	db	50	;'2'
  1835  00F365  64                 	db	100	;'d'
  1836  00F366  2F                 	db	47
  1837  00F367  32                 	db	50	;'2'
  1838  00F368  30                 	db	48	;'0'
  1839  00F369  25                 	db	37
  1840  00F36A  30                 	db	48	;'0'
  1841  00F36B  32                 	db	50	;'2'
  1842  00F36C  64                 	db	100	;'d'
  1843  00F36D  20                 	db	32
  1844  00F36E  25                 	db	37
  1845  00F36F  30                 	db	48	;'0'
  1846  00F370  32                 	db	50	;'2'
  1847  00F371  64                 	db	100	;'d'
  1848  00F372  3A                 	db	58	;':'
  1849  00F373  25                 	db	37
  1850  00F374  30                 	db	48	;'0'
  1851  00F375  32                 	db	50	;'2'
  1852  00F376  64                 	db	100	;'d'
  1853  00F377  3A                 	db	58	;':'
  1854  00F378  25                 	db	37
  1855  00F379  30                 	db	48	;'0'
  1856  00F37A  32                 	db	50	;'2'
  1857  00F37B  64                 	db	100	;'d'
  1858  00F37C  20                 	db	32
  1859  00F37D  50                 	db	80	;'P'
  1860  00F37E  4D                 	db	77	;'M'
  1861  00F37F  00                 	db	0
  1862  00F380                     STR_230:
  1863  00F380  45                 	db	69	;'E'
  1864  00F381  6E                 	db	110	;'n'
  1865  00F382  74                 	db	116	;'t'
  1866  00F383  65                 	db	101	;'e'
  1867  00F384  72                 	db	114	;'r'
  1868  00F385  20                 	db	32
  1869  00F386  54                 	db	84	;'T'
  1870  00F387  69                 	db	105	;'i'
  1871  00F388  6D                 	db	109	;'m'
  1872  00F389  65                 	db	101	;'e'
  1873  00F38A  20                 	db	32
  1874  00F38B  4D                 	db	77	;'M'
  1875  00F38C  4D                 	db	77	;'M'
  1876  00F38D  2F                 	db	47
  1877  00F38E  44                 	db	68	;'D'
  1878  00F38F  44                 	db	68	;'D'
  1879  00F390  2F                 	db	47
  1880  00F391  59                 	db	89	;'Y'
  1881  00F392  59                 	db	89	;'Y'
  1882  00F393  20                 	db	32
  1883  00F394  48                 	db	72	;'H'
  1884  00F395  48                 	db	72	;'H'
  1885  00F396  3A                 	db	58	;':'
  1886  00F397  4D                 	db	77	;'M'
  1887  00F398  4D                 	db	77	;'M'
  1888  00F399  3A                 	db	58	;':'
  1889  00F39A  53                 	db	83	;'S'
  1890  00F39B  53                 	db	83	;'S'
  1891  00F39C  20                 	db	32
  1892  00F39D  50                 	db	80	;'P'
  1893  00F39E  4D                 	db	77	;'M'
  1894  00F39F  0D                 	db	13
  1895  00F3A0  0A                 	db	10
  1896  00F3A1  00                 	db	0
  1897  00F3A2                     STR_166:
  1898  00F3A2  49                 	db	73	;'I'
  1899  00F3A3  6E                 	db	110	;'n'
  1900  00F3A4  76                 	db	118	;'v'
  1901  00F3A5  61                 	db	97	;'a'
  1902  00F3A6  6C                 	db	108	;'l'
  1903  00F3A7  69                 	db	105	;'i'
  1904  00F3A8  64                 	db	100	;'d'
  1905  00F3A9  20                 	db	32
  1906  00F3AA  44                 	db	68	;'D'
  1907  00F3AB  75                 	db	117	;'u'
  1908  00F3AC  74                 	db	116	;'t'
  1909  00F3AD  79                 	db	121	;'y'
  1910  00F3AE  63                 	db	99	;'c'
  1911  00F3AF  79                 	db	121	;'y'
  1912  00F3B0  63                 	db	99	;'c'
  1913  00F3B1  6C                 	db	108	;'l'
  1914  00F3B2  65                 	db	101	;'e'
  1915  00F3B3  3A                 	db	58	;':'
  1916  00F3B4  20                 	db	32
  1917  00F3B5  4C                 	db	76	;'L'
  1918  00F3B6  65                 	db	101	;'e'
  1919  00F3B7  73                 	db	115	;'s'
  1920  00F3B8  73                 	db	115	;'s'
  1921  00F3B9  20                 	db	32
  1922  00F3BA  74                 	db	116	;'t'
  1923  00F3BB  68                 	db	104	;'h'
  1924  00F3BC  61                 	db	97	;'a'
  1925  00F3BD  6E                 	db	110	;'n'
  1926  00F3BE  20                 	db	32
  1927  00F3BF  30                 	db	48	;'0'
  1928  00F3C0  0D                 	db	13
  1929  00F3C1  0A                 	db	10
  1930  00F3C2  00                 	db	0
  1931  00F3C3                     STR_236:
  1932  00F3C3  46                 	db	70	;'F'
  1933  00F3C4  6F                 	db	111	;'o'
  1934  00F3C5  72                 	db	114	;'r'
  1935  00F3C6  6D                 	db	109	;'m'
  1936  00F3C7  61                 	db	97	;'a'
  1937  00F3C8  74                 	db	116	;'t'
  1938  00F3C9  20                 	db	32
  1939  00F3CA  69                 	db	105	;'i'
  1940  00F3CB  73                 	db	115	;'s'
  1941  00F3CC  20                 	db	32
  1942  00F3CD  4D                 	db	77	;'M'
  1943  00F3CE  4D                 	db	77	;'M'
  1944  00F3CF  2F                 	db	47
  1945  00F3D0  44                 	db	68	;'D'
  1946  00F3D1  44                 	db	68	;'D'
  1947  00F3D2  2F                 	db	47
  1948  00F3D3  59                 	db	89	;'Y'
  1949  00F3D4  59                 	db	89	;'Y'
  1950  00F3D5  20                 	db	32
  1951  00F3D6  48                 	db	72	;'H'
  1952  00F3D7  48                 	db	72	;'H'
  1953  00F3D8  3A                 	db	58	;':'
  1954  00F3D9  4D                 	db	77	;'M'
  1955  00F3DA  4D                 	db	77	;'M'
  1956  00F3DB  3A                 	db	58	;':'
  1957  00F3DC  53                 	db	83	;'S'
  1958  00F3DD  53                 	db	83	;'S'
  1959  00F3DE  20                 	db	32
  1960  00F3DF  41                 	db	65	;'A'
  1961  00F3E0  4D                 	db	77	;'M'
  1962  00F3E1  0D                 	db	13
  1963  00F3E2  0A                 	db	10
  1964  00F3E3  00                 	db	0
  1965  00F3E4                     STR_198:
  1966  00F3E4  45                 	db	69	;'E'
  1967  00F3E5  72                 	db	114	;'r'
  1968  00F3E6  72                 	db	114	;'r'
  1969  00F3E7  6F                 	db	111	;'o'
  1970  00F3E8  72                 	db	114	;'r'
  1971  00F3E9  3A                 	db	58	;':'
  1972  00F3EA  20                 	db	32
  1973  00F3EB  6F                 	db	111	;'o'
  1974  00F3EC  6E                 	db	110	;'n'
  1975  00F3ED  6C                 	db	108	;'l'
  1976  00F3EE  79                 	db	121	;'y'
  1977  00F3EF  20                 	db	32
  1978  00F3F0  75                 	db	117	;'u'
  1979  00F3F1  73                 	db	115	;'s'
  1980  00F3F2  65                 	db	101	;'e'
  1981  00F3F3  20                 	db	32
  1982  00F3F4  6F                 	db	111	;'o'
  1983  00F3F5  6E                 	db	110	;'n'
  1984  00F3F6  65                 	db	101	;'e'
  1985  00F3F7  20                 	db	32
  1986  00F3F8  65                 	db	101	;'e'
  1987  00F3F9  71                 	db	113	;'q'
  1988  00F3FA  75                 	db	117	;'u'
  1989  00F3FB  61                 	db	97	;'a'
  1990  00F3FC  6C                 	db	108	;'l'
  1991  00F3FD  20                 	db	32
  1992  00F3FE  73                 	db	115	;'s'
  1993  00F3FF  69                 	db	105	;'i'
  1994  00F400  67                 	db	103	;'g'
  1995  00F401  6E                 	db	110	;'n'
  1996  00F402  0D                 	db	13
  1997  00F403  0A                 	db	10
  1998  00F404  00                 	db	0
  1999  00F405                     STR_317:
  2000  00F405  25                 	db	37
  2001  00F406  30                 	db	48	;'0'
  2002  00F407  32                 	db	50	;'2'
  2003  00F408  64                 	db	100	;'d'
  2004  00F409  2F                 	db	47
  2005  00F40A  25                 	db	37
  2006  00F40B  30                 	db	48	;'0'
  2007  00F40C  32                 	db	50	;'2'
  2008  00F40D  64                 	db	100	;'d'
  2009  00F40E  2F                 	db	47
  2010  00F40F  32                 	db	50	;'2'
  2011  00F410  30                 	db	48	;'0'
  2012  00F411  25                 	db	37
  2013  00F412  30                 	db	48	;'0'
  2014  00F413  32                 	db	50	;'2'
  2015  00F414  64                 	db	100	;'d'
  2016  00F415  20                 	db	32
  2017  00F416  25                 	db	37
  2018  00F417  30                 	db	48	;'0'
  2019  00F418  32                 	db	50	;'2'
  2020  00F419  64                 	db	100	;'d'
  2021  00F41A  3A                 	db	58	;':'
  2022  00F41B  25                 	db	37
  2023  00F41C  30                 	db	48	;'0'
  2024  00F41D  32                 	db	50	;'2'
  2025  00F41E  64                 	db	100	;'d'
  2026  00F41F  3A                 	db	58	;':'
  2027  00F420  25                 	db	37
  2028  00F421  30                 	db	48	;'0'
  2029  00F422  32                 	db	50	;'2'
  2030  00F423  64                 	db	100	;'d'
  2031  00F424  00                 	db	0
  2032  00F425                     STR_187:
  2033  00F425  43                 	db	67	;'C'
  2034  00F426  6F                 	db	111	;'o'
  2035  00F427  6E                 	db	110	;'n'
  2036  00F428  74                 	db	116	;'t'
  2037  00F429  72                 	db	114	;'r'
  2038  00F42A  61                 	db	97	;'a'
  2039  00F42B  73                 	db	115	;'s'
  2040  00F42C  74                 	db	116	;'t'
  2041  00F42D  20                 	db	32
  2042  00F42E  44                 	db	68	;'D'
  2043  00F42F  75                 	db	117	;'u'
  2044  00F430  74                 	db	116	;'t'
  2045  00F431  79                 	db	121	;'y'
  2046  00F432  20                 	db	32
  2047  00F433  43                 	db	67	;'C'
  2048  00F434  79                 	db	121	;'y'
  2049  00F435  63                 	db	99	;'c'
  2050  00F436  6C                 	db	108	;'l'
  2051  00F437  65                 	db	101	;'e'
  2052  00F438  20                 	db	32
  2053  00F439  73                 	db	115	;'s'
  2054  00F43A  65                 	db	101	;'e'
  2055  00F43B  74                 	db	116	;'t'
  2056  00F43C  20                 	db	32
  2057  00F43D  74                 	db	116	;'t'
  2058  00F43E  6F                 	db	111	;'o'
  2059  00F43F  20                 	db	32
  2060  00F440  25                 	db	37
  2061  00F441  64                 	db	100	;'d'
  2062  00F442  0D                 	db	13
  2063  00F443  0A                 	db	10
  2064  00F444  00                 	db	0
  2065  00F445                     STR_142:
  2066  00F445  43                 	db	67	;'C'
  2067  00F446  68                 	db	104	;'h'
  2068  00F447  72                 	db	114	;'r'
  2069  00F448  69                 	db	105	;'i'
  2070  00F449  73                 	db	115	;'s'
  2071  00F44A  74                 	db	116	;'t'
  2072  00F44B  6D                 	db	109	;'m'
  2073  00F44C  61                 	db	97	;'a'
  2074  00F44D  73                 	db	115	;'s'
  2075  00F44E  20                 	db	32
  2076  00F44F  54                 	db	84	;'T'
  2077  00F450  72                 	db	114	;'r'
  2078  00F451  65                 	db	101	;'e'
  2079  00F452  65                 	db	101	;'e'
  2080  00F453  20                 	db	32
  2081  00F454  57                 	db	87	;'W'
  2082  00F455  68                 	db	104	;'h'
  2083  00F456  69                 	db	105	;'i'
  2084  00F457  74                 	db	116	;'t'
  2085  00F458  65                 	db	101	;'e'
  2086  00F459  20                 	db	32
  2087  00F45A  4C                 	db	76	;'L'
  2088  00F45B  69                 	db	105	;'i'
  2089  00F45C  67                 	db	103	;'g'
  2090  00F45D  68                 	db	104	;'h'
  2091  00F45E  74                 	db	116	;'t'
  2092  00F45F  73                 	db	115	;'s'
  2093  00F460  20                 	db	32
  2094  00F461  4F                 	db	79	;'O'
  2095  00F462  66                 	db	102	;'f'
  2096  00F463  66                 	db	102	;'f'
  2097  00F464  00                 	db	0
  2098  00F465                     STR_138:
  2099  00F465  43                 	db	67	;'C'
  2100  00F466  68                 	db	104	;'h'
  2101  00F467  72                 	db	114	;'r'
  2102  00F468  69                 	db	105	;'i'
  2103  00F469  73                 	db	115	;'s'
  2104  00F46A  74                 	db	116	;'t'
  2105  00F46B  6D                 	db	109	;'m'
  2106  00F46C  61                 	db	97	;'a'
  2107  00F46D  73                 	db	115	;'s'
  2108  00F46E  20                 	db	32
  2109  00F46F  54                 	db	84	;'T'
  2110  00F470  72                 	db	114	;'r'
  2111  00F471  65                 	db	101	;'e'
  2112  00F472  65                 	db	101	;'e'
  2113  00F473  20                 	db	32
  2114  00F474  57                 	db	87	;'W'
  2115  00F475  68                 	db	104	;'h'
  2116  00F476  69                 	db	105	;'i'
  2117  00F477  74                 	db	116	;'t'
  2118  00F478  65                 	db	101	;'e'
  2119  00F479  20                 	db	32
  2120  00F47A  4C                 	db	76	;'L'
  2121  00F47B  69                 	db	105	;'i'
  2122  00F47C  67                 	db	103	;'g'
  2123  00F47D  68                 	db	104	;'h'
  2124  00F47E  74                 	db	116	;'t'
  2125  00F47F  73                 	db	115	;'s'
  2126  00F480  20                 	db	32
  2127  00F481  4F                 	db	79	;'O'
  2128  00F482  6E                 	db	110	;'n'
  2129  00F483  00                 	db	0
  2130  00F484                     STR_200:
  2131  00F484  45                 	db	69	;'E'
  2132  00F485  72                 	db	114	;'r'
  2133  00F486  72                 	db	114	;'r'
  2134  00F487  6F                 	db	111	;'o'
  2135  00F488  72                 	db	114	;'r'
  2136  00F489  3A                 	db	58	;':'
  2137  00F48A  20                 	db	32
  2138  00F48B  4E                 	db	78	;'N'
  2139  00F48C  6F                 	db	111	;'o'
  2140  00F48D  20                 	db	32
  2141  00F48E  6E                 	db	110	;'n'
  2142  00F48F  65                 	db	101	;'e'
  2143  00F490  67                 	db	103	;'g'
  2144  00F491  61                 	db	97	;'a'
  2145  00F492  74                 	db	116	;'t'
  2146  00F493  69                 	db	105	;'i'
  2147  00F494  76                 	db	118	;'v'
  2148  00F495  65                 	db	101	;'e'
  2149  00F496  20                 	db	32
  2150  00F497  63                 	db	99	;'c'
  2151  00F498  68                 	db	104	;'h'
  2152  00F499  61                 	db	97	;'a'
  2153  00F49A  6E                 	db	110	;'n'
  2154  00F49B  6E                 	db	110	;'n'
  2155  00F49C  65                 	db	101	;'e'
  2156  00F49D  6C                 	db	108	;'l'
  2157  00F49E  73                 	db	115	;'s'
  2158  00F49F  0D                 	db	13
  2159  00F4A0  0A                 	db	10
  2160  00F4A1  00                 	db	0
  2161  00F4A2                     STR_238:
  2162  00F4A2  52                 	db	82	;'R'
  2163  00F4A3  65                 	db	101	;'e'
  2164  00F4A4  61                 	db	97	;'a'
  2165  00F4A5  6C                 	db	108	;'l'
  2166  00F4A6  20                 	db	32
  2167  00F4A7  54                 	db	84	;'T'
  2168  00F4A8  69                 	db	105	;'i'
  2169  00F4A9  6D                 	db	109	;'m'
  2170  00F4AA  65                 	db	101	;'e'
  2171  00F4AB  20                 	db	32
  2172  00F4AC  43                 	db	67	;'C'
  2173  00F4AD  6C                 	db	108	;'l'
  2174  00F4AE  6F                 	db	111	;'o'
  2175  00F4AF  63                 	db	99	;'c'
  2176  00F4B0  6B                 	db	107	;'k'
  2177  00F4B1  20                 	db	32
  2178  00F4B2  48                 	db	72	;'H'
  2179  00F4B3  65                 	db	101	;'e'
  2180  00F4B4  6C                 	db	108	;'l'
  2181  00F4B5  70                 	db	112	;'p'
  2182  00F4B6  20                 	db	32
  2183  00F4B7  4D                 	db	77	;'M'
  2184  00F4B8  65                 	db	101	;'e'
  2185  00F4B9  6E                 	db	110	;'n'
  2186  00F4BA  75                 	db	117	;'u'
  2187  00F4BB  0D                 	db	13
  2188  00F4BC  0A                 	db	10
  2189  00F4BD  0A                 	db	10
  2190  00F4BE  00                 	db	0
  2191  00F4BF                     STR_204:
  2192  00F4BF  43                 	db	67	;'C'
  2193  00F4C0  68                 	db	104	;'h'
  2194  00F4C1  61                 	db	97	;'a'
  2195  00F4C2  6E                 	db	110	;'n'
  2196  00F4C3  6E                 	db	110	;'n'
  2197  00F4C4  65                 	db	101	;'e'
  2198  00F4C5  6C                 	db	108	;'l'
  2199  00F4C6  20                 	db	32
  2200  00F4C7  25                 	db	37
  2201  00F4C8  64                 	db	100	;'d'
  2202  00F4C9  20                 	db	32
  2203  00F4CA  69                 	db	105	;'i'
  2204  00F4CB  73                 	db	115	;'s'
  2205  00F4CC  20                 	db	32
  2206  00F4CD  6E                 	db	110	;'n'
  2207  00F4CE  6F                 	db	111	;'o'
  2208  00F4CF  74                 	db	116	;'t'
  2209  00F4D0  20                 	db	32
  2210  00F4D1  63                 	db	99	;'c'
  2211  00F4D2  6F                 	db	111	;'o'
  2212  00F4D3  6E                 	db	110	;'n'
  2213  00F4D4  66                 	db	102	;'f'
  2214  00F4D5  69                 	db	105	;'i'
  2215  00F4D6  67                 	db	103	;'g'
  2216  00F4D7  75                 	db	117	;'u'
  2217  00F4D8  72                 	db	114	;'r'
  2218  00F4D9  65                 	db	101	;'e'
  2219  00F4DA  64                 	db	100	;'d'
  2220  00F4DB  00                 	db	0
  2221  00F4DC                     STR_19:
  2222  00F4DC  0D                 	db	13
  2223  00F4DD  0A                 	db	10
  2224  00F4DE  45                 	db	69	;'E'
  2225  00F4DF  6E                 	db	110	;'n'
  2226  00F4E0  74                 	db	116	;'t'
  2227  00F4E1  65                 	db	101	;'e'
  2228  00F4E2  72                 	db	114	;'r'
  2229  00F4E3  20                 	db	32
  2230  00F4E4  27                 	db	39
  2231  00F4E5  3F                 	db	63	;'?'
  2232  00F4E6  27                 	db	39
  2233  00F4E7  20                 	db	32
  2234  00F4E8  66                 	db	102	;'f'
  2235  00F4E9  6F                 	db	111	;'o'
  2236  00F4EA  72                 	db	114	;'r'
  2237  00F4EB  20                 	db	32
  2238  00F4EC  48                 	db	72	;'H'
  2239  00F4ED  65                 	db	101	;'e'
  2240  00F4EE  6C                 	db	108	;'l'
  2241  00F4EF  70                 	db	112	;'p'
  2242  00F4F0  20                 	db	32
  2243  00F4F1  4D                 	db	77	;'M'
  2244  00F4F2  65                 	db	101	;'e'
  2245  00F4F3  6E                 	db	110	;'n'
  2246  00F4F4  75                 	db	117	;'u'
  2247  00F4F5  0D                 	db	13
  2248  00F4F6  0A                 	db	10
  2249  00F4F7  3E                 	db	62	;'>'
  2250  00F4F8  00                 	db	0
  2251  00F4F9                     STR_146:
  2252  00F4F9  43                 	db	67	;'C'
  2253  00F4FA  68                 	db	104	;'h'
  2254  00F4FB  72                 	db	114	;'r'
  2255  00F4FC  69                 	db	105	;'i'
  2256  00F4FD  73                 	db	115	;'s'
  2257  00F4FE  74                 	db	116	;'t'
  2258  00F4FF  6D                 	db	109	;'m'
  2259  00F500  61                 	db	97	;'a'
  2260  00F501  73                 	db	115	;'s'
  2261  00F502  20                 	db	32
  2262  00F503  74                 	db	116	;'t'
  2263  00F504  72                 	db	114	;'r'
  2264  00F505  65                 	db	101	;'e'
  2265  00F506  65                 	db	101	;'e'
  2266  00F507  20                 	db	32
  2267  00F508  48                 	db	72	;'H'
  2268  00F509  65                 	db	101	;'e'
  2269  00F50A  6C                 	db	108	;'l'
  2270  00F50B  70                 	db	112	;'p'
  2271  00F50C  20                 	db	32
  2272  00F50D  4D                 	db	77	;'M'
  2273  00F50E  65                 	db	101	;'e'
  2274  00F50F  6E                 	db	110	;'n'
  2275  00F510  75                 	db	117	;'u'
  2276  00F511  0D                 	db	13
  2277  00F512  0A                 	db	10
  2278  00F513  0A                 	db	10
  2279  00F514  00                 	db	0
  2280  00F515                     STR_202:
  2281  00F515  45                 	db	69	;'E'
  2282  00F516  72                 	db	114	;'r'
  2283  00F517  72                 	db	114	;'r'
  2284  00F518  6F                 	db	111	;'o'
  2285  00F519  72                 	db	114	;'r'
  2286  00F51A  3A                 	db	58	;':'
  2287  00F51B  20                 	db	32
  2288  00F51C  69                 	db	105	;'i'
  2289  00F51D  6E                 	db	110	;'n'
  2290  00F51E  20                 	db	32
  2291  00F51F  70                 	db	112	;'p'
  2292  00F520  61                 	db	97	;'a'
  2293  00F521  72                 	db	114	;'r'
  2294  00F522  73                 	db	115	;'s'
  2295  00F523  69                 	db	105	;'i'
  2296  00F524  6E                 	db	110	;'n'
  2297  00F525  67                 	db	103	;'g'
  2298  00F526  20                 	db	32
  2299  00F527  63                 	db	99	;'c'
  2300  00F528  6F                 	db	111	;'o'
  2301  00F529  6D                 	db	109	;'m'
  2302  00F52A  6D                 	db	109	;'m'
  2303  00F52B  61                 	db	97	;'a'
  2304  00F52C  6E                 	db	110	;'n'
  2305  00F52D  64                 	db	100	;'d'
  2306  00F52E  0D                 	db	13
  2307  00F52F  0A                 	db	10
  2308  00F530  00                 	db	0
  2309  00F531                     STR_161:
  2310  00F531  74                 	db	116	;'t'
  2311  00F532  68                 	db	104	;'h'
  2312  00F533  65                 	db	101	;'e'
  2313  00F534  72                 	db	114	;'r'
  2314  00F535  65                 	db	101	;'e'
  2315  00F536  20                 	db	32
  2316  00F537  69                 	db	105	;'i'
  2317  00F538  73                 	db	115	;'s'
  2318  00F539  20                 	db	32
  2319  00F53A  6E                 	db	110	;'n'
  2320  00F53B  6F                 	db	111	;'o'
  2321  00F53C  20                 	db	32
  2322  00F53D  71                 	db	113	;'q'
  2323  00F53E  75                 	db	117	;'u'
  2324  00F53F  65                 	db	101	;'e'
  2325  00F540  73                 	db	115	;'s'
  2326  00F541  74                 	db	116	;'t'
  2327  00F542  69                 	db	105	;'i'
  2328  00F543  6F                 	db	111	;'o'
  2329  00F544  6E                 	db	110	;'n'
  2330  00F545  20                 	db	32
  2331  00F546  6D                 	db	109	;'m'
  2332  00F547  61                 	db	97	;'a'
  2333  00F548  72                 	db	114	;'r'
  2334  00F549  6B                 	db	107	;'k'
  2335  00F54A  0D                 	db	13
  2336  00F54B  0A                 	db	10
  2337  00F54C  00                 	db	0
  2338  00F54D                     STR_265:
  2339  00F54D  69                 	db	105	;'i'
  2340  00F54E  2E                 	db	46
  2341  00F54F  65                 	db	101	;'e'
  2342  00F550  2E                 	db	46
  2343  00F551  20                 	db	32
  2344  00F552  4A                 	db	74	;'J'
  2345  00F553  6F                 	db	111	;'o'
  2346  00F554  65                 	db	101	;'e'
  2347  00F555  73                 	db	115	;'s'
  2348  00F556  20                 	db	32
  2349  00F557  72                 	db	114	;'r'
  2350  00F558  6F                 	db	111	;'o'
  2351  00F559  6F                 	db	111	;'o'
  2352  00F55A  6D                 	db	109	;'m'
  2353  00F55B  20                 	db	32
  2354  00F55C  6C                 	db	108	;'l'
  2355  00F55D  69                 	db	105	;'i'
  2356  00F55E  67                 	db	103	;'g'
  2357  00F55F  68                 	db	104	;'h'
  2358  00F560  74                 	db	116	;'t'
  2359  00F561  20                 	db	32
  2360  00F562  3D                 	db	61	;'='
  2361  00F563  20                 	db	32
  2362  00F564  4F                 	db	79	;'O'
  2363  00F565  6E                 	db	110	;'n'
  2364  00F566  0D                 	db	13
  2365  00F567  0A                 	db	10
  2366  00F568  00                 	db	0
  2367  00F569                     STR_234:
  2368  00F569  0D                 	db	13
  2369  00F56A  0A                 	db	10
  2370  00F56B  54                 	db	84	;'T'
  2371  00F56C  69                 	db	105	;'i'
  2372  00F56D  6D                 	db	109	;'m'
  2373  00F56E  65                 	db	101	;'e'
  2374  00F56F  20                 	db	32
  2375  00F570  4E                 	db	78	;'N'
  2376  00F571  6F                 	db	111	;'o'
  2377  00F572  74                 	db	116	;'t'
  2378  00F573  20                 	db	32
  2379  00F574  53                 	db	83	;'S'
  2380  00F575  65                 	db	101	;'e'
  2381  00F576  74                 	db	116	;'t'
  2382  00F577  20                 	db	32
  2383  00F578  53                 	db	83	;'S'
  2384  00F579  75                 	db	117	;'u'
  2385  00F57A  63                 	db	99	;'c'
  2386  00F57B  63                 	db	99	;'c'
  2387  00F57C  65                 	db	101	;'e'
  2388  00F57D  73                 	db	115	;'s'
  2389  00F57E  73                 	db	115	;'s'
  2390  00F57F  66                 	db	102	;'f'
  2391  00F580  75                 	db	117	;'u'
  2392  00F581  6C                 	db	108	;'l'
  2393  00F582  6C                 	db	108	;'l'
  2394  00F583  79                 	db	121	;'y'
  2395  00F584  00                 	db	0
  2396  00F585                     STR_162:
  2397  00F585  45                 	db	69	;'E'
  2398  00F586  72                 	db	114	;'r'
  2399  00F587  72                 	db	114	;'r'
  2400  00F588  6F                 	db	111	;'o'
  2401  00F589  72                 	db	114	;'r'
  2402  00F58A  3A                 	db	58	;':'
  2403  00F58B  20                 	db	32
  2404  00F58C  4E                 	db	78	;'N'
  2405  00F58D  6F                 	db	111	;'o'
  2406  00F58E  20                 	db	32
  2407  00F58F  6E                 	db	110	;'n'
  2408  00F590  75                 	db	117	;'u'
  2409  00F591  6D                 	db	109	;'m'
  2410  00F592  62                 	db	98	;'b'
  2411  00F593  65                 	db	101	;'e'
  2412  00F594  72                 	db	114	;'r'
  2413  00F595  20                 	db	32
  2414  00F596  65                 	db	101	;'e'
  2415  00F597  6E                 	db	110	;'n'
  2416  00F598  74                 	db	116	;'t'
  2417  00F599  65                 	db	101	;'e'
  2418  00F59A  72                 	db	114	;'r'
  2419  00F59B  65                 	db	101	;'e'
  2420  00F59C  64                 	db	100	;'d'
  2421  00F59D  0D                 	db	13
  2422  00F59E  0A                 	db	10
  2423  00F59F  00                 	db	0
  2424  00F5A0                     STR_87:
  2425  00F5A0  69                 	db	105	;'i'
  2426  00F5A1  2E                 	db	46
  2427  00F5A2  65                 	db	101	;'e'
  2428  00F5A3  2E                 	db	46
  2429  00F5A4  20                 	db	32
  2430  00F5A5  4C                 	db	76	;'L'
  2431  00F5A6  69                 	db	105	;'i'
  2432  00F5A7  76                 	db	118	;'v'
  2433  00F5A8  69                 	db	105	;'i'
  2434  00F5A9  6E                 	db	110	;'n'
  2435  00F5AA  67                 	db	103	;'g'
  2436  00F5AB  72                 	db	114	;'r'
  2437  00F5AC  6F                 	db	111	;'o'
  2438  00F5AD  6F                 	db	111	;'o'
  2439  00F5AE  6D                 	db	109	;'m'
  2440  00F5AF  20                 	db	32
  2441  00F5B0  66                 	db	102	;'f'
  2442  00F5B1  61                 	db	97	;'a'
  2443  00F5B2  6E                 	db	110	;'n'
  2444  00F5B3  20                 	db	32
  2445  00F5B4  3D                 	db	61	;'='
  2446  00F5B5  20                 	db	32
  2447  00F5B6  4F                 	db	79	;'O'
  2448  00F5B7  6E                 	db	110	;'n'
  2449  00F5B8  0D                 	db	13
  2450  00F5B9  0A                 	db	10
  2451  00F5BA  00                 	db	0
  2452  00F5BB                     STR_314:
  2453  00F5BB  41                 	db	65	;'A'
  2454  00F5BC  44                 	db	68	;'D'
  2455  00F5BD  43                 	db	67	;'C'
  2456  00F5BE  20                 	db	32
  2457  00F5BF  43                 	db	67	;'C'
  2458  00F5C0  68                 	db	104	;'h'
  2459  00F5C1  61                 	db	97	;'a'
  2460  00F5C2  6E                 	db	110	;'n'
  2461  00F5C3  6E                 	db	110	;'n'
  2462  00F5C4  65                 	db	101	;'e'
  2463  00F5C5  6C                 	db	108	;'l'
  2464  00F5C6  20                 	db	32
  2465  00F5C7  4F                 	db	79	;'O'
  2466  00F5C8  75                 	db	117	;'u'
  2467  00F5C9  74                 	db	116	;'t'
  2468  00F5CA  20                 	db	32
  2469  00F5CB  6F                 	db	111	;'o'
  2470  00F5CC  66                 	db	102	;'f'
  2471  00F5CD  20                 	db	32
  2472  00F5CE  42                 	db	66	;'B'
  2473  00F5CF  6F                 	db	111	;'o'
  2474  00F5D0  75                 	db	117	;'u'
  2475  00F5D1  6E                 	db	110	;'n'
  2476  00F5D2  64                 	db	100	;'d'
  2477  00F5D3  73                 	db	115	;'s'
  2478  00F5D4  00                 	db	0
  2479  00F5D5                     STR_189:
  2480  00F5D5  43                 	db	67	;'C'
  2481  00F5D6  6F                 	db	111	;'o'
  2482  00F5D7  6E                 	db	110	;'n'
  2483  00F5D8  74                 	db	116	;'t'
  2484  00F5D9  72                 	db	114	;'r'
  2485  00F5DA  61                 	db	97	;'a'
  2486  00F5DB  73                 	db	115	;'s'
  2487  00F5DC  74                 	db	116	;'t'
  2488  00F5DD  20                 	db	32
  2489  00F5DE  50                 	db	80	;'P'
  2490  00F5DF  57                 	db	87	;'W'
  2491  00F5E0  4D                 	db	77	;'M'
  2492  00F5E1  20                 	db	32
  2493  00F5E2  48                 	db	72	;'H'
  2494  00F5E3  65                 	db	101	;'e'
  2495  00F5E4  6C                 	db	108	;'l'
  2496  00F5E5  70                 	db	112	;'p'
  2497  00F5E6  20                 	db	32
  2498  00F5E7  4D                 	db	77	;'M'
  2499  00F5E8  65                 	db	101	;'e'
  2500  00F5E9  6E                 	db	110	;'n'
  2501  00F5EA  75                 	db	117	;'u'
  2502  00F5EB  0D                 	db	13
  2503  00F5EC  0A                 	db	10
  2504  00F5ED  0A                 	db	10
  2505  00F5EE  00                 	db	0
  2506  00F5EF                     STR_232:
  2507  00F5EF  0D                 	db	13
  2508  00F5F0  0A                 	db	10
  2509  00F5F1  54                 	db	84	;'T'
  2510  00F5F2  69                 	db	105	;'i'
  2511  00F5F3  6D                 	db	109	;'m'
  2512  00F5F4  65                 	db	101	;'e'
  2513  00F5F5  20                 	db	32
  2514  00F5F6  53                 	db	83	;'S'
  2515  00F5F7  65                 	db	101	;'e'
  2516  00F5F8  74                 	db	116	;'t'
  2517  00F5F9  20                 	db	32
  2518  00F5FA  53                 	db	83	;'S'
  2519  00F5FB  75                 	db	117	;'u'
  2520  00F5FC  63                 	db	99	;'c'
  2521  00F5FD  63                 	db	99	;'c'
  2522  00F5FE  65                 	db	101	;'e'
  2523  00F5FF  73                 	db	115	;'s'
  2524  00F600  73                 	db	115	;'s'
  2525  00F601  66                 	db	102	;'f'
  2526  00F602  75                 	db	117	;'u'
  2527  00F603  6C                 	db	108	;'l'
  2528  00F604  6C                 	db	108	;'l'
  2529  00F605  79                 	db	121	;'y'
  2530  00F606  0D                 	db	13
  2531  00F607  0A                 	db	10
  2532  00F608  00                 	db	0
  2533  00F609                     STR_172:
  2534  00F609  52                 	db	82	;'R'
  2535  00F60A  65                 	db	101	;'e'
  2536  00F60B  64                 	db	100	;'d'
  2537  00F60C  20                 	db	32
  2538  00F60D  4C                 	db	76	;'L'
  2539  00F60E  45                 	db	69	;'E'
  2540  00F60F  44                 	db	68	;'D'
  2541  00F610  20                 	db	32
  2542  00F611  50                 	db	80	;'P'
  2543  00F612  57                 	db	87	;'W'
  2544  00F613  4D                 	db	77	;'M'
  2545  00F614  20                 	db	32
  2546  00F615  48                 	db	72	;'H'
  2547  00F616  65                 	db	101	;'e'
  2548  00F617  6C                 	db	108	;'l'
  2549  00F618  70                 	db	112	;'p'
  2550  00F619  20                 	db	32
  2551  00F61A  4D                 	db	77	;'M'
  2552  00F61B  65                 	db	101	;'e'
  2553  00F61C  6E                 	db	110	;'n'
  2554  00F61D  75                 	db	117	;'u'
  2555  00F61E  0D                 	db	13
  2556  00F61F  0A                 	db	10
  2557  00F620  0A                 	db	10
  2558  00F621  00                 	db	0
  2559  00F622                     STR_235:
  2560  00F622  0D                 	db	13
  2561  00F623  0A                 	db	10
  2562  00F624  49                 	db	73	;'I'
  2563  00F625  6E                 	db	110	;'n'
  2564  00F626  76                 	db	118	;'v'
  2565  00F627  61                 	db	97	;'a'
  2566  00F628  6C                 	db	108	;'l'
  2567  00F629  69                 	db	105	;'i'
  2568  00F62A  64                 	db	100	;'d'
  2569  00F62B  20                 	db	32
  2570  00F62C  54                 	db	84	;'T'
  2571  00F62D  69                 	db	105	;'i'
  2572  00F62E  6D                 	db	109	;'m'
  2573  00F62F  65                 	db	101	;'e'
  2574  00F630  20                 	db	32
  2575  00F631  45                 	db	69	;'E'
  2576  00F632  6E                 	db	110	;'n'
  2577  00F633  74                 	db	116	;'t'
  2578  00F634  65                 	db	101	;'e'
  2579  00F635  72                 	db	114	;'r'
  2580  00F636  65                 	db	101	;'e'
  2581  00F637  64                 	db	100	;'d'
  2582  00F638  0D                 	db	13
  2583  00F639  0A                 	db	10
  2584  00F63A  00                 	db	0
  2585  00F63B                     STR_72:
  2586  00F63B  4C                 	db	76	;'L'
  2587  00F63C  69                 	db	105	;'i'
  2588  00F63D  76                 	db	118	;'v'
  2589  00F63E  69                 	db	105	;'i'
  2590  00F63F  6E                 	db	110	;'n'
  2591  00F640  67                 	db	103	;'g'
  2592  00F641  72                 	db	114	;'r'
  2593  00F642  6F                 	db	111	;'o'
  2594  00F643  6F                 	db	111	;'o'
  2595  00F644  6D                 	db	109	;'m'
  2596  00F645  20                 	db	32
  2597  00F646  4C                 	db	76	;'L'
  2598  00F647  69                 	db	105	;'i'
  2599  00F648  67                 	db	103	;'g'
  2600  00F649  68                 	db	104	;'h'
  2601  00F64A  74                 	db	116	;'t'
  2602  00F64B  20                 	db	32
  2603  00F64C  54                 	db	84	;'T'
  2604  00F64D  6F                 	db	111	;'o'
  2605  00F64E  67                 	db	103	;'g'
  2606  00F64F  67                 	db	103	;'g'
  2607  00F650  6C                 	db	108	;'l'
  2608  00F651  65                 	db	101	;'e'
  2609  00F652  64                 	db	100	;'d'
  2610  00F653  00                 	db	0
  2611  00F654                     STR_82:
  2612  00F654  4C                 	db	76	;'L'
  2613  00F655  69                 	db	105	;'i'
  2614  00F656  76                 	db	118	;'v'
  2615  00F657  69                 	db	105	;'i'
  2616  00F658  6E                 	db	110	;'n'
  2617  00F659  67                 	db	103	;'g'
  2618  00F65A  72                 	db	114	;'r'
  2619  00F65B  6F                 	db	111	;'o'
  2620  00F65C  6F                 	db	111	;'o'
  2621  00F65D  6D                 	db	109	;'m'
  2622  00F65E  20                 	db	32
  2623  00F65F  48                 	db	72	;'H'
  2624  00F660  65                 	db	101	;'e'
  2625  00F661  6C                 	db	108	;'l'
  2626  00F662  70                 	db	112	;'p'
  2627  00F663  20                 	db	32
  2628  00F664  4D                 	db	77	;'M'
  2629  00F665  65                 	db	101	;'e'
  2630  00F666  6E                 	db	110	;'n'
  2631  00F667  75                 	db	117	;'u'
  2632  00F668  0D                 	db	13
  2633  00F669  0A                 	db	10
  2634  00F66A  0A                 	db	10
  2635  00F66B  00                 	db	0
  2636  00F66C                     STR_226:
  2637  00F66C  45                 	db	69	;'E'
  2638  00F66D  52                 	db	82	;'R'
  2639  00F66E  52                 	db	82	;'R'
  2640  00F66F  4F                 	db	79	;'O'
  2641  00F670  52                 	db	82	;'R'
  2642  00F671  3A                 	db	58	;':'
  2643  00F672  20                 	db	32
  2644  00F673  43                 	db	67	;'C'
  2645  00F674  61                 	db	97	;'a'
  2646  00F675  6E                 	db	110	;'n'
  2647  00F676  27                 	db	39
  2648  00F677  74                 	db	116	;'t'
  2649  00F678  20                 	db	32
  2650  00F679  52                 	db	82	;'R'
  2651  00F67A  65                 	db	101	;'e'
  2652  00F67B  61                 	db	97	;'a'
  2653  00F67C  64                 	db	100	;'d'
  2654  00F67D  20                 	db	32
  2655  00F67E  52                 	db	82	;'R'
  2656  00F67F  54                 	db	84	;'T'
  2657  00F680  43                 	db	67	;'C'
  2658  00F681  0D                 	db	13
  2659  00F682  0A                 	db	10
  2660  00F683  00                 	db	0
  2661  00F684                     STR_121:
  2662  00F684  69                 	db	105	;'i'
  2663  00F685  2E                 	db	46
  2664  00F686  65                 	db	101	;'e'
  2665  00F687  2E                 	db	46
  2666  00F688  20                 	db	32
  2667  00F689  42                 	db	66	;'B'
  2668  00F68A  65                 	db	101	;'e'
  2669  00F68B  64                 	db	100	;'d'
  2670  00F68C  72                 	db	114	;'r'
  2671  00F68D  6F                 	db	111	;'o'
  2672  00F68E  6F                 	db	111	;'o'
  2673  00F68F  6D                 	db	109	;'m'
  2674  00F690  20                 	db	32
  2675  00F691  66                 	db	102	;'f'
  2676  00F692  61                 	db	97	;'a'
  2677  00F693  6E                 	db	110	;'n'
  2678  00F694  20                 	db	32
  2679  00F695  3D                 	db	61	;'='
  2680  00F696  20                 	db	32
  2681  00F697  4F                 	db	79	;'O'
  2682  00F698  6E                 	db	110	;'n'
  2683  00F699  0D                 	db	13
  2684  00F69A  0A                 	db	10
  2685  00F69B  00                 	db	0
  2686  00F69C                     STR_261:
  2687  00F69C  4A                 	db	74	;'J'
  2688  00F69D  6F                 	db	111	;'o'
  2689  00F69E  65                 	db	101	;'e'
  2690  00F69F  73                 	db	115	;'s'
  2691  00F6A0  20                 	db	32
  2692  00F6A1  52                 	db	82	;'R'
  2693  00F6A2  6F                 	db	111	;'o'
  2694  00F6A3  6F                 	db	111	;'o'
  2695  00F6A4  6D                 	db	109	;'m'
  2696  00F6A5  20                 	db	32
  2697  00F6A6  48                 	db	72	;'H'
  2698  00F6A7  65                 	db	101	;'e'
  2699  00F6A8  6C                 	db	108	;'l'
  2700  00F6A9  70                 	db	112	;'p'
  2701  00F6AA  20                 	db	32
  2702  00F6AB  4D                 	db	77	;'M'
  2703  00F6AC  65                 	db	101	;'e'
  2704  00F6AD  6E                 	db	110	;'n'
  2705  00F6AE  75                 	db	117	;'u'
  2706  00F6AF  0D                 	db	13
  2707  00F6B0  0A                 	db	10
  2708  00F6B1  0A                 	db	10
  2709  00F6B2  00                 	db	0
  2710  00F6B3                     STR_225:
  2711  00F6B3  25                 	db	37
  2712  00F6B4  30                 	db	48	;'0'
  2713  00F6B5  32                 	db	50	;'2'
  2714  00F6B6  64                 	db	100	;'d'
  2715  00F6B7  2F                 	db	47
  2716  00F6B8  25                 	db	37
  2717  00F6B9  30                 	db	48	;'0'
  2718  00F6BA  32                 	db	50	;'2'
  2719  00F6BB  64                 	db	100	;'d'
  2720  00F6BC  20                 	db	32
  2721  00F6BD  25                 	db	37
  2722  00F6BE  30                 	db	48	;'0'
  2723  00F6BF  32                 	db	50	;'2'
  2724  00F6C0  64                 	db	100	;'d'
  2725  00F6C1  3A                 	db	58	;':'
  2726  00F6C2  25                 	db	37
  2727  00F6C3  30                 	db	48	;'0'
  2728  00F6C4  32                 	db	50	;'2'
  2729  00F6C5  64                 	db	100	;'d'
  2730  00F6C6  20                 	db	32
  2731  00F6C7  41                 	db	65	;'A'
  2732  00F6C8  4D                 	db	77	;'M'
  2733  00F6C9  00                 	db	0
  2734  00F6CA                     STR_224:
  2735  00F6CA  25                 	db	37
  2736  00F6CB  30                 	db	48	;'0'
  2737  00F6CC  32                 	db	50	;'2'
  2738  00F6CD  64                 	db	100	;'d'
  2739  00F6CE  2F                 	db	47
  2740  00F6CF  25                 	db	37
  2741  00F6D0  30                 	db	48	;'0'
  2742  00F6D1  32                 	db	50	;'2'
  2743  00F6D2  64                 	db	100	;'d'
  2744  00F6D3  20                 	db	32
  2745  00F6D4  25                 	db	37
  2746  00F6D5  30                 	db	48	;'0'
  2747  00F6D6  32                 	db	50	;'2'
  2748  00F6D7  64                 	db	100	;'d'
  2749  00F6D8  3A                 	db	58	;':'
  2750  00F6D9  25                 	db	37
  2751  00F6DA  30                 	db	48	;'0'
  2752  00F6DB  32                 	db	50	;'2'
  2753  00F6DC  64                 	db	100	;'d'
  2754  00F6DD  20                 	db	32
  2755  00F6DE  50                 	db	80	;'P'
  2756  00F6DF  4D                 	db	77	;'M'
  2757  00F6E0  00                 	db	0
  2758  00F6E1                     STR_279:
  2759  00F6E1  69                 	db	105	;'i'
  2760  00F6E2  2E                 	db	46
  2761  00F6E3  65                 	db	101	;'e'
  2762  00F6E4  2E                 	db	46
  2763  00F6E5  20                 	db	32
  2764  00F6E6  20                 	db	32
  2765  00F6E7  4C                 	db	76	;'L'
  2766  00F6E8  69                 	db	105	;'i'
  2767  00F6E9  76                 	db	118	;'v'
  2768  00F6EA  69                 	db	105	;'i'
  2769  00F6EB  6E                 	db	110	;'n'
  2770  00F6EC  67                 	db	103	;'g'
  2771  00F6ED  72                 	db	114	;'r'
  2772  00F6EE  6F                 	db	111	;'o'
  2773  00F6EF  6F                 	db	111	;'o'
  2774  00F6F0  6D                 	db	109	;'m'
  2775  00F6F1  3F                 	db	63	;'?'
  2776  00F6F2  0D                 	db	13
  2777  00F6F3  0A                 	db	10
  2778  00F6F4  0D                 	db	13
  2779  00F6F5  0A                 	db	10
  2780  00F6F6  00                 	db	0
  2781  00F6F7                     STR_168:
  2782  00F6F7  44                 	db	68	;'D'
  2783  00F6F8  75                 	db	117	;'u'
  2784  00F6F9  74                 	db	116	;'t'
  2785  00F6FA  79                 	db	121	;'y'
  2786  00F6FB  63                 	db	99	;'c'
  2787  00F6FC  79                 	db	121	;'y'
  2788  00F6FD  63                 	db	99	;'c'
  2789  00F6FE  6C                 	db	108	;'l'
  2790  00F6FF  65                 	db	101	;'e'
  2791  00F700  20                 	db	32
  2792  00F701  73                 	db	115	;'s'
  2793  00F702  65                 	db	101	;'e'
  2794  00F703  74                 	db	116	;'t'
  2795  00F704  20                 	db	32
  2796  00F705  74                 	db	116	;'t'
  2797  00F706  6F                 	db	111	;'o'
  2798  00F707  20                 	db	32
  2799  00F708  25                 	db	37
  2800  00F709  64                 	db	100	;'d'
  2801  00F70A  0D                 	db	13
  2802  00F70B  0A                 	db	10
  2803  00F70C  00                 	db	0
  2804  00F70D                     STR_99:
  2805  00F70D  42                 	db	66	;'B'
  2806  00F70E  65                 	db	101	;'e'
  2807  00F70F  64                 	db	100	;'d'
  2808  00F710  72                 	db	114	;'r'
  2809  00F711  6F                 	db	111	;'o'
  2810  00F712  6F                 	db	111	;'o'
  2811  00F713  6D                 	db	109	;'m'
  2812  00F714  20                 	db	32
  2813  00F715  4C                 	db	76	;'L'
  2814  00F716  69                 	db	105	;'i'
  2815  00F717  67                 	db	103	;'g'
  2816  00F718  68                 	db	104	;'h'
  2817  00F719  74                 	db	116	;'t'
  2818  00F71A  20                 	db	32
  2819  00F71B  54                 	db	84	;'T'
  2820  00F71C  6F                 	db	111	;'o'
  2821  00F71D  67                 	db	103	;'g'
  2822  00F71E  67                 	db	103	;'g'
  2823  00F71F  6C                 	db	108	;'l'
  2824  00F720  65                 	db	101	;'e'
  2825  00F721  64                 	db	100	;'d'
  2826  00F722  00                 	db	0
  2827  00F723                     STR_27:
  2828  00F723  53                 	db	83	;'S'
  2829  00F724  79                 	db	121	;'y'
  2830  00F725  73                 	db	115	;'s'
  2831  00F726  74                 	db	116	;'t'
  2832  00F727  65                 	db	101	;'e'
  2833  00F728  6D                 	db	109	;'m'
  2834  00F729  20                 	db	32
  2835  00F72A  50                 	db	80	;'P'
  2836  00F72B  72                 	db	114	;'r'
  2837  00F72C  6F                 	db	111	;'o'
  2838  00F72D  67                 	db	103	;'g'
  2839  00F72E  72                 	db	114	;'r'
  2840  00F72F  61                 	db	97	;'a'
  2841  00F730  6D                 	db	109	;'m'
  2842  00F731  20                 	db	32
  2843  00F732  46                 	db	70	;'F'
  2844  00F733  61                 	db	97	;'a'
  2845  00F734  69                 	db	105	;'i'
  2846  00F735  6C                 	db	108	;'l'
  2847  00F736  0D                 	db	13
  2848  00F737  0A                 	db	10
  2849  00F738  00                 	db	0
  2850  00F739                     STR_115:
  2851  00F739  42                 	db	66	;'B'
  2852  00F73A  65                 	db	101	;'e'
  2853  00F73B  64                 	db	100	;'d'
  2854  00F73C  72                 	db	114	;'r'
  2855  00F73D  6F                 	db	111	;'o'
  2856  00F73E  6F                 	db	111	;'o'
  2857  00F73F  6D                 	db	109	;'m'
  2858  00F740  20                 	db	32
  2859  00F741  48                 	db	72	;'H'
  2860  00F742  65                 	db	101	;'e'
  2861  00F743  6C                 	db	108	;'l'
  2862  00F744  70                 	db	112	;'p'
  2863  00F745  20                 	db	32
  2864  00F746  4D                 	db	77	;'M'
  2865  00F747  65                 	db	101	;'e'
  2866  00F748  6E                 	db	110	;'n'
  2867  00F749  75                 	db	117	;'u'
  2868  00F74A  0D                 	db	13
  2869  00F74B  0A                 	db	10
  2870  00F74C  0A                 	db	10
  2871  00F74D  00                 	db	0
  2872  00F74E                     STR_245:
  2873  00F74E  69                 	db	105	;'i'
  2874  00F74F  2E                 	db	46
  2875  00F750  65                 	db	101	;'e'
  2876  00F751  2E                 	db	46
  2877  00F752  20                 	db	32
  2878  00F753  52                 	db	82	;'R'
  2879  00F754  54                 	db	84	;'T'
  2880  00F755  43                 	db	67	;'C'
  2881  00F756  20                 	db	32
  2882  00F757  53                 	db	83	;'S'
  2883  00F758  65                 	db	101	;'e'
  2884  00F759  74                 	db	116	;'t'
  2885  00F75A  20                 	db	32
  2886  00F75B  54                 	db	84	;'T'
  2887  00F75C  69                 	db	105	;'i'
  2888  00F75D  6D                 	db	109	;'m'
  2889  00F75E  65                 	db	101	;'e'
  2890  00F75F  3F                 	db	63	;'?'
  2891  00F760  0D                 	db	13
  2892  00F761  0A                 	db	10
  2893  00F762  00                 	db	0
  2894  00F763                     STR_305:
  2895  00F763  42                 	db	66	;'B'
  2896  00F764  61                 	db	97	;'a'
  2897  00F765  75                 	db	117	;'u'
  2898  00F766  64                 	db	100	;'d'
  2899  00F767  20                 	db	32
  2900  00F768  4F                 	db	79	;'O'
  2901  00F769  75                 	db	117	;'u'
  2902  00F76A  74                 	db	116	;'t'
  2903  00F76B  20                 	db	32
  2904  00F76C  6F                 	db	111	;'o'
  2905  00F76D  66                 	db	102	;'f'
  2906  00F76E  20                 	db	32
  2907  00F76F  72                 	db	114	;'r'
  2908  00F770  61                 	db	97	;'a'
  2909  00F771  6E                 	db	110	;'n'
  2910  00F772  67                 	db	103	;'g'
  2911  00F773  65                 	db	101	;'e'
  2912  00F774  0D                 	db	13
  2913  00F775  0A                 	db	10
  2914  00F776  00                 	db	0
  2915  00F777                     STR_206:
  2916  00F777  41                 	db	65	;'A'
  2917  00F778  44                 	db	68	;'D'
  2918  00F779  43                 	db	67	;'C'
  2919  00F77A  20                 	db	32
  2920  00F77B  63                 	db	99	;'c'
  2921  00F77C  68                 	db	104	;'h'
  2922  00F77D  61                 	db	97	;'a'
  2923  00F77E  6E                 	db	110	;'n'
  2924  00F77F  6E                 	db	110	;'n'
  2925  00F780  65                 	db	101	;'e'
  2926  00F781  6C                 	db	108	;'l'
  2927  00F782  20                 	db	32
  2928  00F783  25                 	db	37
  2929  00F784  64                 	db	100	;'d'
  2930  00F785  20                 	db	32
  2931  00F786  3D                 	db	61	;'='
  2932  00F787  20                 	db	32
  2933  00F788  25                 	db	37
  2934  00F789  64                 	db	100	;'d'
  2935  00F78A  00                 	db	0
  2936  00F78B                     STR_257:
  2937  00F78B  4A                 	db	74	;'J'
  2938  00F78C  6F                 	db	111	;'o'
  2939  00F78D  65                 	db	101	;'e'
  2940  00F78E  73                 	db	115	;'s'
  2941  00F78F  20                 	db	32
  2942  00F790  72                 	db	114	;'r'
  2943  00F791  6F                 	db	111	;'o'
  2944  00F792  6F                 	db	111	;'o'
  2945  00F793  6D                 	db	109	;'m'
  2946  00F794  20                 	db	32
  2947  00F795  6C                 	db	108	;'l'
  2948  00F796  69                 	db	105	;'i'
  2949  00F797  67                 	db	103	;'g'
  2950  00F798  68                 	db	104	;'h'
  2951  00F799  74                 	db	116	;'t'
  2952  00F79A  20                 	db	32
  2953  00F79B  4F                 	db	79	;'O'
  2954  00F79C  66                 	db	102	;'f'
  2955  00F79D  66                 	db	102	;'f'
  2956  00F79E  00                 	db	0
  2957  00F79F                     STR_71:
  2958  00F79F  6C                 	db	108	;'l'
  2959  00F7A0  69                 	db	105	;'i'
  2960  00F7A1  76                 	db	118	;'v'
  2961  00F7A2  69                 	db	105	;'i'
  2962  00F7A3  6E                 	db	110	;'n'
  2963  00F7A4  67                 	db	103	;'g'
  2964  00F7A5  72                 	db	114	;'r'
  2965  00F7A6  6F                 	db	111	;'o'
  2966  00F7A7  6F                 	db	111	;'o'
  2967  00F7A8  6D                 	db	109	;'m'
  2968  00F7A9  6C                 	db	108	;'l'
  2969  00F7AA  69                 	db	105	;'i'
  2970  00F7AB  67                 	db	103	;'g'
  2971  00F7AC  68                 	db	104	;'h'
  2972  00F7AD  74                 	db	116	;'t'
  2973  00F7AE  3D                 	db	61	;'='
  2974  00F7AF  6F                 	db	111	;'o'
  2975  00F7B0  66                 	db	102	;'f'
  2976  00F7B1  66                 	db	102	;'f'
  2977  00F7B2  00                 	db	0
  2978  00F7B3                     STR_254:
  2979  00F7B3  4A                 	db	74	;'J'
  2980  00F7B4  6F                 	db	111	;'o'
  2981  00F7B5  65                 	db	101	;'e'
  2982  00F7B6  27                 	db	39
  2983  00F7B7  73                 	db	115	;'s'
  2984  00F7B8  20                 	db	32
  2985  00F7B9  72                 	db	114	;'r'
  2986  00F7BA  6F                 	db	111	;'o'
  2987  00F7BB  6F                 	db	111	;'o'
  2988  00F7BC  6D                 	db	109	;'m'
  2989  00F7BD  20                 	db	32
  2990  00F7BE  6C                 	db	108	;'l'
  2991  00F7BF  69                 	db	105	;'i'
  2992  00F7C0  67                 	db	103	;'g'
  2993  00F7C1  68                 	db	104	;'h'
  2994  00F7C2  74                 	db	116	;'t'
  2995  00F7C3  20                 	db	32
  2996  00F7C4  4F                 	db	79	;'O'
  2997  00F7C5  6E                 	db	110	;'n'
  2998  00F7C6  00                 	db	0
  2999  00F7C7                     STR_80:
  3000  00F7C7  4C                 	db	76	;'L'
  3001  00F7C8  69                 	db	105	;'i'
  3002  00F7C9  76                 	db	118	;'v'
  3003  00F7CA  69                 	db	105	;'i'
  3004  00F7CB  6E                 	db	110	;'n'
  3005  00F7CC  67                 	db	103	;'g'
  3006  00F7CD  72                 	db	114	;'r'
  3007  00F7CE  6F                 	db	111	;'o'
  3008  00F7CF  6F                 	db	111	;'o'
  3009  00F7D0  6D                 	db	109	;'m'
  3010  00F7D1  20                 	db	32
  3011  00F7D2  54                 	db	84	;'T'
  3012  00F7D3  61                 	db	97	;'a'
  3013  00F7D4  73                 	db	115	;'s'
  3014  00F7D5  6B                 	db	107	;'k'
  3015  00F7D6  3F                 	db	63	;'?'
  3016  00F7D7  3F                 	db	63	;'?'
  3017  00F7D8  3F                 	db	63	;'?'
  3018  00F7D9  00                 	db	0
  3019  00F7DA                     STR_259:
  3020  00F7DA  4A                 	db	74	;'J'
  3021  00F7DB  6F                 	db	111	;'o'
  3022  00F7DC  65                 	db	101	;'e'
  3023  00F7DD  27                 	db	39
  3024  00F7DE  73                 	db	115	;'s'
  3025  00F7DF  20                 	db	32
  3026  00F7E0  72                 	db	114	;'r'
  3027  00F7E1  6F                 	db	111	;'o'
  3028  00F7E2  6F                 	db	111	;'o'
  3029  00F7E3  6D                 	db	109	;'m'
  3030  00F7E4  20                 	db	32
  3031  00F7E5  77                 	db	119	;'w'
  3032  00F7E6  68                 	db	104	;'h'
  3033  00F7E7  61                 	db	97	;'a'
  3034  00F7E8  74                 	db	116	;'t'
  3035  00F7E9  3F                 	db	63	;'?'
  3036  00F7EA  3F                 	db	63	;'?'
  3037  00F7EB  3F                 	db	63	;'?'
  3038  00F7EC  00                 	db	0
  3039  00F7ED                     STR_78:
  3040  00F7ED  4C                 	db	76	;'L'
  3041  00F7EE  69                 	db	105	;'i'
  3042  00F7EF  76                 	db	118	;'v'
  3043  00F7F0  69                 	db	105	;'i'
  3044  00F7F1  6E                 	db	110	;'n'
  3045  00F7F2  67                 	db	103	;'g'
  3046  00F7F3  72                 	db	114	;'r'
  3047  00F7F4  6F                 	db	111	;'o'
  3048  00F7F5  6F                 	db	111	;'o'
  3049  00F7F6  6D                 	db	109	;'m'
  3050  00F7F7  20                 	db	32
  3051  00F7F8  46                 	db	70	;'F'
  3052  00F7F9  61                 	db	97	;'a'
  3053  00F7FA  6E                 	db	110	;'n'
  3054  00F7FB  20                 	db	32
  3055  00F7FC  4F                 	db	79	;'O'
  3056  00F7FD  66                 	db	102	;'f'
  3057  00F7FE  66                 	db	102	;'f'
  3058  00F7FF  00                 	db	0
  3059  00F800                     STR_111:
  3060  00F800  42                 	db	66	;'B'
  3061  00F801  65                 	db	101	;'e'
  3062  00F802  64                 	db	100	;'d'
  3063  00F803  72                 	db	114	;'r'
  3064  00F804  6F                 	db	111	;'o'
  3065  00F805  6F                 	db	111	;'o'
  3066  00F806  6D                 	db	109	;'m'
  3067  00F807  20                 	db	32
  3068  00F808  53                 	db	83	;'S'
  3069  00F809  68                 	db	104	;'h'
  3070  00F80A  61                 	db	97	;'a'
  3071  00F80B  6B                 	db	107	;'k'
  3072  00F80C  65                 	db	101	;'e'
  3073  00F80D  72                 	db	114	;'r'
  3074  00F80E  20                 	db	32
  3075  00F80F  4F                 	db	79	;'O'
  3076  00F810  66                 	db	102	;'f'
  3077  00F811  66                 	db	102	;'f'
  3078  00F812  00                 	db	0
  3079  00F813                     STR_70:
  3080  00F813  6C                 	db	108	;'l'
  3081  00F814  69                 	db	105	;'i'
  3082  00F815  76                 	db	118	;'v'
  3083  00F816  69                 	db	105	;'i'
  3084  00F817  6E                 	db	110	;'n'
  3085  00F818  67                 	db	103	;'g'
  3086  00F819  72                 	db	114	;'r'
  3087  00F81A  6F                 	db	111	;'o'
  3088  00F81B  6F                 	db	111	;'o'
  3089  00F81C  6D                 	db	109	;'m'
  3090  00F81D  6C                 	db	108	;'l'
  3091  00F81E  69                 	db	105	;'i'
  3092  00F81F  67                 	db	103	;'g'
  3093  00F820  68                 	db	104	;'h'
  3094  00F821  74                 	db	116	;'t'
  3095  00F822  3D                 	db	61	;'='
  3096  00F823  6F                 	db	111	;'o'
  3097  00F824  6E                 	db	110	;'n'
  3098  00F825  00                 	db	0
  3099  00F826                     STR_28:
  3100  00F826  53                 	db	83	;'S'
  3101  00F827  79                 	db	121	;'y'
  3102  00F828  73                 	db	115	;'s'
  3103  00F829  74                 	db	116	;'t'
  3104  00F82A  65                 	db	101	;'e'
  3105  00F82B  6D                 	db	109	;'m'
  3106  00F82C  20                 	db	32
  3107  00F82D  42                 	db	66	;'B'
  3108  00F82E  61                 	db	97	;'a'
  3109  00F82F  75                 	db	117	;'u'
  3110  00F830  64                 	db	100	;'d'
  3111  00F831  20                 	db	32
  3112  00F832  69                 	db	105	;'i'
  3113  00F833  73                 	db	115	;'s'
  3114  00F834  20                 	db	32
  3115  00F835  25                 	db	37
  3116  00F836  6C                 	db	108	;'l'
  3117  00F837  75                 	db	117	;'u'
  3118  00F838  00                 	db	0
  3119  00F839                     STR_6:
  3120  00F839  46                 	db	70	;'F'
  3121  00F83A  69                 	db	105	;'i'
  3122  00F83B  72                 	db	114	;'r'
  3123  00F83C  6D                 	db	109	;'m'
  3124  00F83D  77                 	db	119	;'w'
  3125  00F83E  61                 	db	97	;'a'
  3126  00F83F  72                 	db	114	;'r'
  3127  00F840  65                 	db	101	;'e'
  3128  00F841  20                 	db	32
  3129  00F842  56                 	db	86	;'V'
  3130  00F843  65                 	db	101	;'e'
  3131  00F844  72                 	db	114	;'r'
  3132  00F845  73                 	db	115	;'s'
  3133  00F846  69                 	db	105	;'i'
  3134  00F847  6F                 	db	111	;'o'
  3135  00F848  6E                 	db	110	;'n'
  3136  00F849  3A                 	db	58	;':'
  3137  00F84A  20                 	db	32
  3138  00F84B  00                 	db	0
  3139  00F84C                     STR_149:
  3140  00F84C  63                 	db	99	;'c'
  3141  00F84D  6F                 	db	111	;'o'
  3142  00F84E  6C                 	db	108	;'l'
  3143  00F84F  6F                 	db	111	;'o'
  3144  00F850  72                 	db	114	;'r'
  3145  00F851  65                 	db	101	;'e'
  3146  00F852  64                 	db	100	;'d'
  3147  00F853  20                 	db	32
  3148  00F854  6C                 	db	108	;'l'
  3149  00F855  69                 	db	105	;'i'
  3150  00F856  67                 	db	103	;'g'
  3151  00F857  68                 	db	104	;'h'
  3152  00F858  74                 	db	116	;'t'
  3153  00F859  73                 	db	115	;'s'
  3154  00F85A  0D                 	db	13
  3155  00F85B  0A                 	db	10
  3156  00F85C  0A                 	db	10
  3157  00F85D  00                 	db	0
  3158  00F85E                     STR_309:
  3159  00F85E  49                 	db	73	;'I'
  3160  00F85F  6E                 	db	110	;'n'
  3161  00F860  76                 	db	118	;'v'
  3162  00F861  61                 	db	97	;'a'
  3163  00F862  6C                 	db	108	;'l'
  3164  00F863  69                 	db	105	;'i'
  3165  00F864  64                 	db	100	;'d'
  3166  00F865  20                 	db	32
  3167  00F866  43                 	db	67	;'C'
  3168  00F867  6F                 	db	111	;'o'
  3169  00F868  6D                 	db	109	;'m'
  3170  00F869  6D                 	db	109	;'m'
  3171  00F86A  61                 	db	97	;'a'
  3172  00F86B  6E                 	db	110	;'n'
  3173  00F86C  64                 	db	100	;'d'
  3174  00F86D  0D                 	db	13
  3175  00F86E  0A                 	db	10
  3176  00F86F  00                 	db	0
  3177  00F870                     STR_144:
  3178  00F870  43                 	db	67	;'C'
  3179  00F871  68                 	db	104	;'h'
  3180  00F872  72                 	db	114	;'r'
  3181  00F873  69                 	db	105	;'i'
  3182  00F874  73                 	db	115	;'s'
  3183  00F875  74                 	db	116	;'t'
  3184  00F876  6D                 	db	109	;'m'
  3185  00F877  61                 	db	97	;'a'
  3186  00F878  73                 	db	115	;'s'
  3187  00F879  20                 	db	32
  3188  00F87A  57                 	db	87	;'W'
  3189  00F87B  68                 	db	104	;'h'
  3190  00F87C  61                 	db	97	;'a'
  3191  00F87D  74                 	db	116	;'t'
  3192  00F87E  3F                 	db	63	;'?'
  3193  00F87F  3F                 	db	63	;'?'
  3194  00F880  3F                 	db	63	;'?'
  3195  00F881  00                 	db	0
  3196  00F882                     STR_77:
  3197  00F882  6C                 	db	108	;'l'
  3198  00F883  69                 	db	105	;'i'
  3199  00F884  76                 	db	118	;'v'
  3200  00F885  69                 	db	105	;'i'
  3201  00F886  6E                 	db	110	;'n'
  3202  00F887  67                 	db	103	;'g'
  3203  00F888  72                 	db	114	;'r'
  3204  00F889  6F                 	db	111	;'o'
  3205  00F88A  6F                 	db	111	;'o'
  3206  00F88B  6D                 	db	109	;'m'
  3207  00F88C  66                 	db	102	;'f'
  3208  00F88D  61                 	db	97	;'a'
  3209  00F88E  6E                 	db	110	;'n'
  3210  00F88F  3D                 	db	61	;'='
  3211  00F890  6F                 	db	111	;'o'
  3212  00F891  66                 	db	102	;'f'
  3213  00F892  66                 	db	102	;'f'
  3214  00F893  00                 	db	0
  3215  00F894                     STR_110:
  3216  00F894  62                 	db	98	;'b'
  3217  00F895  65                 	db	101	;'e'
  3218  00F896  64                 	db	100	;'d'
  3219  00F897  72                 	db	114	;'r'
  3220  00F898  6F                 	db	111	;'o'
  3221  00F899  6F                 	db	111	;'o'
  3222  00F89A  6D                 	db	109	;'m'
  3223  00F89B  73                 	db	115	;'s'
  3224  00F89C  68                 	db	104	;'h'
  3225  00F89D  61                 	db	97	;'a'
  3226  00F89E  6B                 	db	107	;'k'
  3227  00F89F  65                 	db	101	;'e'
  3228  00F8A0  72                 	db	114	;'r'
  3229  00F8A1  3D                 	db	61	;'='
  3230  00F8A2  6F                 	db	111	;'o'
  3231  00F8A3  66                 	db	102	;'f'
  3232  00F8A4  66                 	db	102	;'f'
  3233  00F8A5  00                 	db	0
  3234  00F8A6                     STR_256:
  3235  00F8A6  6A                 	db	106	;'j'
  3236  00F8A7  6F                 	db	111	;'o'
  3237  00F8A8  65                 	db	101	;'e'
  3238  00F8A9  73                 	db	115	;'s'
  3239  00F8AA  72                 	db	114	;'r'
  3240  00F8AB  6F                 	db	111	;'o'
  3241  00F8AC  6F                 	db	111	;'o'
  3242  00F8AD  6D                 	db	109	;'m'
  3243  00F8AE  6C                 	db	108	;'l'
  3244  00F8AF  69                 	db	105	;'i'
  3245  00F8B0  67                 	db	103	;'g'
  3246  00F8B1  68                 	db	104	;'h'
  3247  00F8B2  74                 	db	116	;'t'
  3248  00F8B3  3D                 	db	61	;'='
  3249  00F8B4  6F                 	db	111	;'o'
  3250  00F8B5  66                 	db	102	;'f'
  3251  00F8B6  66                 	db	102	;'f'
  3252  00F8B7  00                 	db	0
  3253  00F8B8                     STR_75:
  3254  00F8B8  4C                 	db	76	;'L'
  3255  00F8B9  69                 	db	105	;'i'
  3256  00F8BA  76                 	db	118	;'v'
  3257  00F8BB  69                 	db	105	;'i'
  3258  00F8BC  6E                 	db	110	;'n'
  3259  00F8BD  67                 	db	103	;'g'
  3260  00F8BE  72                 	db	114	;'r'
  3261  00F8BF  6F                 	db	111	;'o'
  3262  00F8C0  6F                 	db	111	;'o'
  3263  00F8C1  6D                 	db	109	;'m'
  3264  00F8C2  20                 	db	32
  3265  00F8C3  46                 	db	70	;'F'
  3266  00F8C4  61                 	db	97	;'a'
  3267  00F8C5  6E                 	db	110	;'n'
  3268  00F8C6  20                 	db	32
  3269  00F8C7  4F                 	db	79	;'O'
  3270  00F8C8  6E                 	db	110	;'n'
  3271  00F8C9  00                 	db	0
  3272  00F8CA                     STR_108:
  3273  00F8CA  42                 	db	66	;'B'
  3274  00F8CB  65                 	db	101	;'e'
  3275  00F8CC  64                 	db	100	;'d'
  3276  00F8CD  72                 	db	114	;'r'
  3277  00F8CE  6F                 	db	111	;'o'
  3278  00F8CF  6F                 	db	111	;'o'
  3279  00F8D0  6D                 	db	109	;'m'
  3280  00F8D1  20                 	db	32
  3281  00F8D2  53                 	db	83	;'S'
  3282  00F8D3  68                 	db	104	;'h'
  3283  00F8D4  61                 	db	97	;'a'
  3284  00F8D5  6B                 	db	107	;'k'
  3285  00F8D6  65                 	db	101	;'e'
  3286  00F8D7  72                 	db	114	;'r'
  3287  00F8D8  20                 	db	32
  3288  00F8D9  4F                 	db	79	;'O'
  3289  00F8DA  6E                 	db	110	;'n'
  3290  00F8DB  00                 	db	0
  3291  00F8DC                     STR_302:
  3292  00F8DC  77                 	db	119	;'w'
  3293  00F8DD  69                 	db	105	;'i'
  3294  00F8DE  74                 	db	116	;'t'
  3295  00F8DF  68                 	db	104	;'h'
  3296  00F8E0  65                 	db	101	;'e'
  3297  00F8E1  76                 	db	118	;'v'
  3298  00F8E2  65                 	db	101	;'e'
  3299  00F8E3  6E                 	db	110	;'n'
  3300  00F8E4  70                 	db	112	;'p'
  3301  00F8E5  61                 	db	97	;'a'
  3302  00F8E6  72                 	db	114	;'r'
  3303  00F8E7  69                 	db	105	;'i'
  3304  00F8E8  74                 	db	116	;'t'
  3305  00F8E9  79                 	db	121	;'y'
  3306  00F8EA  62                 	db	98	;'b'
  3307  00F8EB  69                 	db	105	;'i'
  3308  00F8EC  74                 	db	116	;'t'
  3309  00F8ED  00                 	db	0
  3310  00F8EE                     STR_318:
  3311  00F8EE  30                 	db	48	;'0'
  3312  00F8EF  31                 	db	49	;'1'
  3313  00F8F0  32                 	db	50	;'2'
  3314  00F8F1  33                 	db	51	;'3'
  3315  00F8F2  34                 	db	52	;'4'
  3316  00F8F3  35                 	db	53	;'5'
  3317  00F8F4  36                 	db	54	;'6'
  3318  00F8F5  37                 	db	55	;'7'
  3319  00F8F6  38                 	db	56	;'8'
  3320  00F8F7  39                 	db	57	;'9'
  3321  00F8F8  41                 	db	65	;'A'
  3322  00F8F9  42                 	db	66	;'B'
  3323  00F8FA  43                 	db	67	;'C'
  3324  00F8FB  44                 	db	68	;'D'
  3325  00F8FC  45                 	db	69	;'E'
  3326  00F8FD  46                 	db	70	;'F'
  3327  00F8FE  00                 	db	0
  3328  00F8FF                     STR_319:
  3329  00F8FF  30                 	db	48	;'0'
  3330  00F900  31                 	db	49	;'1'
  3331  00F901  32                 	db	50	;'2'
  3332  00F902  33                 	db	51	;'3'
  3333  00F903  34                 	db	52	;'4'
  3334  00F904  35                 	db	53	;'5'
  3335  00F905  36                 	db	54	;'6'
  3336  00F906  37                 	db	55	;'7'
  3337  00F907  38                 	db	56	;'8'
  3338  00F908  39                 	db	57	;'9'
  3339  00F909  61                 	db	97	;'a'
  3340  00F90A  62                 	db	98	;'b'
  3341  00F90B  63                 	db	99	;'c'
  3342  00F90C  64                 	db	100	;'d'
  3343  00F90D  65                 	db	101	;'e'
  3344  00F90E  66                 	db	102	;'f'
  3345  00F90F  00                 	db	0
  3346  00F910                     STR_208:
  3347  00F910  41                 	db	65	;'A'
  3348  00F911  44                 	db	68	;'D'
  3349  00F912  43                 	db	67	;'C'
  3350  00F913  20                 	db	32
  3351  00F914  48                 	db	72	;'H'
  3352  00F915  65                 	db	101	;'e'
  3353  00F916  6C                 	db	108	;'l'
  3354  00F917  70                 	db	112	;'p'
  3355  00F918  20                 	db	32
  3356  00F919  4D                 	db	77	;'M'
  3357  00F91A  65                 	db	101	;'e'
  3358  00F91B  6E                 	db	110	;'n'
  3359  00F91C  75                 	db	117	;'u'
  3360  00F91D  0D                 	db	13
  3361  00F91E  0A                 	db	10
  3362  00F91F  0A                 	db	10
  3363  00F920  00                 	db	0
  3364  00F921                     STR_58:
  3365  00F921  4C                 	db	76	;'L'
  3366  00F922  45                 	db	69	;'E'
  3367  00F923  44                 	db	68	;'D'
  3368  00F924  20                 	db	32
  3369  00F925  48                 	db	72	;'H'
  3370  00F926  65                 	db	101	;'e'
  3371  00F927  6C                 	db	108	;'l'
  3372  00F928  70                 	db	112	;'p'
  3373  00F929  20                 	db	32
  3374  00F92A  4D                 	db	77	;'M'
  3375  00F92B  65                 	db	101	;'e'
  3376  00F92C  6E                 	db	110	;'n'
  3377  00F92D  75                 	db	117	;'u'
  3378  00F92E  0D                 	db	13
  3379  00F92F  0A                 	db	10
  3380  00F930  0A                 	db	10
  3381  00F931  00                 	db	0
  3382  00F932                     STR_205:
  3383  00F932  43                 	db	67	;'C'
  3384  00F933  68                 	db	104	;'h'
  3385  00F934  6E                 	db	110	;'n'
  3386  00F935  6C                 	db	108	;'l'
  3387  00F936  20                 	db	32
  3388  00F937  73                 	db	115	;'s'
  3389  00F938  65                 	db	101	;'e'
  3390  00F939  74                 	db	116	;'t'
  3391  00F93A  20                 	db	32
  3392  00F93B  74                 	db	116	;'t'
  3393  00F93C  6F                 	db	111	;'o'
  3394  00F93D  20                 	db	32
  3395  00F93E  25                 	db	37
  3396  00F93F  64                 	db	100	;'d'
  3397  00F940  0D                 	db	13
  3398  00F941  0A                 	db	10
  3399  00F942  00                 	db	0
  3400  00F943                     STR_274:
  3401  00F943  43                 	db	67	;'C'
  3402  00F944  68                 	db	104	;'h'
  3403  00F945  72                 	db	114	;'r'
  3404  00F946  69                 	db	105	;'i'
  3405  00F947  73                 	db	115	;'s'
  3406  00F948  74                 	db	116	;'t'
  3407  00F949  6D                 	db	109	;'m'
  3408  00F94A  61                 	db	97	;'a'
  3409  00F94B  73                 	db	115	;'s'
  3410  00F94C  20                 	db	32
  3411  00F94D  54                 	db	84	;'T'
  3412  00F94E  72                 	db	114	;'r'
  3413  00F94F  65                 	db	101	;'e'
  3414  00F950  65                 	db	101	;'e'
  3415  00F951  0D                 	db	13
  3416  00F952  0A                 	db	10
  3417  00F953  00                 	db	0
  3418  00F954                     STR_63:
  3419  00F954  69                 	db	105	;'i'
  3420  00F955  2E                 	db	46
  3421  00F956  65                 	db	101	;'e'
  3422  00F957  2E                 	db	46
  3423  00F958  20                 	db	32
  3424  00F959  4C                 	db	76	;'L'
  3425  00F95A  45                 	db	69	;'E'
  3426  00F95B  44                 	db	68	;'D'
  3427  00F95C  31                 	db	49	;'1'
  3428  00F95D  20                 	db	32
  3429  00F95E  3D                 	db	61	;'='
  3430  00F95F  20                 	db	32
  3431  00F960  4F                 	db	79	;'O'
  3432  00F961  6E                 	db	110	;'n'
  3433  00F962  0D                 	db	13
  3434  00F963  0A                 	db	10
  3435  00F964  00                 	db	0
  3436  00F965                     STR_223:
  3437  00F965  52                 	db	82	;'R'
  3438  00F966  54                 	db	84	;'T'
  3439  00F967  43                 	db	67	;'C'
  3440  00F968  20                 	db	32
  3441  00F969  54                 	db	84	;'T'
  3442  00F96A  69                 	db	105	;'i'
  3443  00F96B  6D                 	db	109	;'m'
  3444  00F96C  65                 	db	101	;'e'
  3445  00F96D  20                 	db	32
  3446  00F96E  69                 	db	105	;'i'
  3447  00F96F  73                 	db	115	;'s'
  3448  00F970  3A                 	db	58	;':'
  3449  00F971  20                 	db	32
  3450  00F972  20                 	db	32
  3451  00F973  20                 	db	32
  3452  00F974  20                 	db	32
  3453  00F975  00                 	db	0
  3454  00F976                     STR_98:
  3455  00F976  62                 	db	98	;'b'
  3456  00F977  65                 	db	101	;'e'
  3457  00F978  64                 	db	100	;'d'
  3458  00F979  72                 	db	114	;'r'
  3459  00F97A  6F                 	db	111	;'o'
  3460  00F97B  6F                 	db	111	;'o'
  3461  00F97C  6D                 	db	109	;'m'
  3462  00F97D  6C                 	db	108	;'l'
  3463  00F97E  69                 	db	105	;'i'
  3464  00F97F  67                 	db	103	;'g'
  3465  00F980  68                 	db	104	;'h'
  3466  00F981  74                 	db	116	;'t'
  3467  00F982  3D                 	db	61	;'='
  3468  00F983  6F                 	db	111	;'o'
  3469  00F984  66                 	db	102	;'f'
  3470  00F985  66                 	db	102	;'f'
  3471  00F986  00                 	db	0
  3472  00F987                     STR_227:
  3473  00F987  52                 	db	82	;'R'
  3474  00F988  54                 	db	84	;'T'
  3475  00F989  43                 	db	67	;'C'
  3476  00F98A  20                 	db	32
  3477  00F98B  69                 	db	105	;'i'
  3478  00F98C  73                 	db	115	;'s'
  3479  00F98D  6E                 	db	110	;'n'
  3480  00F98E  74                 	db	116	;'t'
  3481  00F98F  20                 	db	32
  3482  00F990  77                 	db	119	;'w'
  3483  00F991  6F                 	db	111	;'o'
  3484  00F992  72                 	db	114	;'r'
  3485  00F993  6B                 	db	107	;'k'
  3486  00F994  69                 	db	105	;'i'
  3487  00F995  6E                 	db	110	;'n'
  3488  00F996  67                 	db	103	;'g'
  3489  00F997  00                 	db	0
  3490  00F998                     STR_74:
  3491  00F998  6C                 	db	108	;'l'
  3492  00F999  69                 	db	105	;'i'
  3493  00F99A  76                 	db	118	;'v'
  3494  00F99B  69                 	db	105	;'i'
  3495  00F99C  6E                 	db	110	;'n'
  3496  00F99D  67                 	db	103	;'g'
  3497  00F99E  72                 	db	114	;'r'
  3498  00F99F  6F                 	db	111	;'o'
  3499  00F9A0  6F                 	db	111	;'o'
  3500  00F9A1  6D                 	db	109	;'m'
  3501  00F9A2  66                 	db	102	;'f'
  3502  00F9A3  61                 	db	97	;'a'
  3503  00F9A4  6E                 	db	110	;'n'
  3504  00F9A5  3D                 	db	61	;'='
  3505  00F9A6  6F                 	db	111	;'o'
  3506  00F9A7  6E                 	db	110	;'n'
  3507  00F9A8  00                 	db	0
  3508  00F9A9                     STR_107:
  3509  00F9A9  62                 	db	98	;'b'
  3510  00F9AA  65                 	db	101	;'e'
  3511  00F9AB  64                 	db	100	;'d'
  3512  00F9AC  72                 	db	114	;'r'
  3513  00F9AD  6F                 	db	111	;'o'
  3514  00F9AE  6F                 	db	111	;'o'
  3515  00F9AF  6D                 	db	109	;'m'
  3516  00F9B0  73                 	db	115	;'s'
  3517  00F9B1  68                 	db	104	;'h'
  3518  00F9B2  61                 	db	97	;'a'
  3519  00F9B3  6B                 	db	107	;'k'
  3520  00F9B4  65                 	db	101	;'e'
  3521  00F9B5  72                 	db	114	;'r'
  3522  00F9B6  3D                 	db	61	;'='
  3523  00F9B7  6F                 	db	111	;'o'
  3524  00F9B8  6E                 	db	110	;'n'
  3525  00F9B9  00                 	db	0
  3526  00F9BA                     STR_253:
  3527  00F9BA  6A                 	db	106	;'j'
  3528  00F9BB  6F                 	db	111	;'o'
  3529  00F9BC  65                 	db	101	;'e'
  3530  00F9BD  73                 	db	115	;'s'
  3531  00F9BE  72                 	db	114	;'r'
  3532  00F9BF  6F                 	db	111	;'o'
  3533  00F9C0  6F                 	db	111	;'o'
  3534  00F9C1  6D                 	db	109	;'m'
  3535  00F9C2  6C                 	db	108	;'l'
  3536  00F9C3  69                 	db	105	;'i'
  3537  00F9C4  67                 	db	103	;'g'
  3538  00F9C5  68                 	db	104	;'h'
  3539  00F9C6  74                 	db	116	;'t'
  3540  00F9C7  3D                 	db	61	;'='
  3541  00F9C8  6F                 	db	111	;'o'
  3542  00F9C9  6E                 	db	110	;'n'
  3543  00F9CA  00                 	db	0
  3544  00F9CB                     STR_159:
  3545  00F9CB  72                 	db	114	;'r'
  3546  00F9CC  65                 	db	101	;'e'
  3547  00F9CD  64                 	db	100	;'d'
  3548  00F9CE  6C                 	db	108	;'l'
  3549  00F9CF  65                 	db	101	;'e'
  3550  00F9D0  64                 	db	100	;'d'
  3551  00F9D1  62                 	db	98	;'b'
  3552  00F9D2  72                 	db	114	;'r'
  3553  00F9D3  69                 	db	105	;'i'
  3554  00F9D4  67                 	db	103	;'g'
  3555  00F9D5  68                 	db	104	;'h'
  3556  00F9D6  74                 	db	116	;'t'
  3557  00F9D7  6E                 	db	110	;'n'
  3558  00F9D8  65                 	db	101	;'e'
  3559  00F9D9  73                 	db	115	;'s'
  3560  00F9DA  73                 	db	115	;'s'
  3561  00F9DB  00                 	db	0
  3562  00F9DC                     STR_301:
  3563  00F9DC  77                 	db	119	;'w'
  3564  00F9DD  69                 	db	105	;'i'
  3565  00F9DE  74                 	db	116	;'t'
  3566  00F9DF  68                 	db	104	;'h'
  3567  00F9E0  6F                 	db	111	;'o'
  3568  00F9E1  64                 	db	100	;'d'
  3569  00F9E2  64                 	db	100	;'d'
  3570  00F9E3  70                 	db	112	;'p'
  3571  00F9E4  61                 	db	97	;'a'
  3572  00F9E5  72                 	db	114	;'r'
  3573  00F9E6  69                 	db	105	;'i'
  3574  00F9E7  74                 	db	116	;'t'
  3575  00F9E8  79                 	db	121	;'y'
  3576  00F9E9  62                 	db	98	;'b'
  3577  00F9EA  69                 	db	105	;'i'
  3578  00F9EB  74                 	db	116	;'t'
  3579  00F9EC  00                 	db	0
  3580  00F9ED                     STR_175:
  3581  00F9ED  52                 	db	82	;'R'
  3582  00F9EE  65                 	db	101	;'e'
  3583  00F9EF  64                 	db	100	;'d'
  3584  00F9F0  20                 	db	32
  3585  00F9F1  4C                 	db	76	;'L'
  3586  00F9F2  45                 	db	69	;'E'
  3587  00F9F3  44                 	db	68	;'D'
  3588  00F9F4  20                 	db	32
  3589  00F9F5  43                 	db	67	;'C'
  3590  00F9F6  6F                 	db	111	;'o'
  3591  00F9F7  6E                 	db	110	;'n'
  3592  00F9F8  74                 	db	116	;'t'
  3593  00F9F9  72                 	db	114	;'r'
  3594  00F9FA  61                 	db	97	;'a'
  3595  00F9FB  73                 	db	115	;'s'
  3596  00F9FC  74                 	db	116	;'t'
  3597  00F9FD  00                 	db	0
  3598  00F9FE                     STR_17:
  3599  00F9FE  53                 	db	83	;'S'
  3600  00F9FF  74                 	db	116	;'t'
  3601  00FA00  61                 	db	97	;'a'
  3602  00FA01  72                 	db	114	;'r'
  3603  00FA02  74                 	db	116	;'t'
  3604  00FA03  69                 	db	105	;'i'
  3605  00FA04  6E                 	db	110	;'n'
  3606  00FA05  67                 	db	103	;'g'
  3607  00FA06  2E                 	db	46
  3608  00FA07  2E                 	db	46
  3609  00FA08  2E                 	db	46
  3610  00FA09  2E                 	db	46
  3611  00FA0A  2E                 	db	46
  3612  00FA0B  2E                 	db	46
  3613  00FA0C  2E                 	db	46
  3614  00FA0D  2E                 	db	46
  3615  00FA0E  00                 	db	0
  3616  00FA0F                     STR_184:
  3617  00FA0F  45                 	db	69	;'E'
  3618  00FA10  52                 	db	82	;'R'
  3619  00FA11  52                 	db	82	;'R'
  3620  00FA12  3A                 	db	58	;':'
  3621  00FA13  20                 	db	32
  3622  00FA14  43                 	db	67	;'C'
  3623  00FA15  4E                 	db	78	;'N'
  3624  00FA16  53                 	db	83	;'S'
  3625  00FA17  54                 	db	84	;'T'
  3626  00FA18  20                 	db	32
  3627  00FA19  3E                 	db	62	;'>'
  3628  00FA1A  20                 	db	32
  3629  00FA1B  31                 	db	49	;'1'
  3630  00FA1C  30                 	db	48	;'0'
  3631  00FA1D  30                 	db	48	;'0'
  3632  00FA1E  00                 	db	0
  3633  00FA1F                     STR_165:
  3634  00FA1F  45                 	db	69	;'E'
  3635  00FA20  52                 	db	82	;'R'
  3636  00FA21  52                 	db	82	;'R'
  3637  00FA22  3A                 	db	58	;':'
  3638  00FA23  20                 	db	32
  3639  00FA24  44                 	db	68	;'D'
  3640  00FA25  75                 	db	117	;'u'
  3641  00FA26  74                 	db	116	;'t'
  3642  00FA27  79                 	db	121	;'y'
  3643  00FA28  20                 	db	32
  3644  00FA29  3E                 	db	62	;'>'
  3645  00FA2A  20                 	db	32
  3646  00FA2B  31                 	db	49	;'1'
  3647  00FA2C  30                 	db	48	;'0'
  3648  00FA2D  30                 	db	48	;'0'
  3649  00FA2E  00                 	db	0
  3650  00FA2F                     STR_81:
  3651  00FA2F  4C                 	db	76	;'L'
  3652  00FA30  56                 	db	86	;'V'
  3653  00FA31  4E                 	db	78	;'N'
  3654  00FA32  47                 	db	71	;'G'
  3655  00FA33  20                 	db	32
  3656  00FA34  52                 	db	82	;'R'
  3657  00FA35  6D                 	db	109	;'m'
  3658  00FA36  20                 	db	32
  3659  00FA37  54                 	db	84	;'T'
  3660  00FA38  61                 	db	97	;'a'
  3661  00FA39  73                 	db	115	;'s'
  3662  00FA3A  6B                 	db	107	;'k'
  3663  00FA3B  3F                 	db	63	;'?'
  3664  00FA3C  3F                 	db	63	;'?'
  3665  00FA3D  3F                 	db	63	;'?'
  3666  00FA3E  00                 	db	0
  3667  00FA3F                     STR_113:
  3668  00FA3F  42                 	db	66	;'B'
  3669  00FA40  65                 	db	101	;'e'
  3670  00FA41  64                 	db	100	;'d'
  3671  00FA42  72                 	db	114	;'r'
  3672  00FA43  6F                 	db	111	;'o'
  3673  00FA44  6F                 	db	111	;'o'
  3674  00FA45  6D                 	db	109	;'m'
  3675  00FA46  20                 	db	32
  3676  00FA47  54                 	db	84	;'T'
  3677  00FA48  61                 	db	97	;'a'
  3678  00FA49  73                 	db	115	;'s'
  3679  00FA4A  6B                 	db	107	;'k'
  3680  00FA4B  3F                 	db	63	;'?'
  3681  00FA4C  3F                 	db	63	;'?'
  3682  00FA4D  3F                 	db	63	;'?'
  3683  00FA4E  00                 	db	0
  3684  00FA4F                     STR_122:
  3685  00FA4F  42                 	db	66	;'B'
  3686  00FA50  65                 	db	101	;'e'
  3687  00FA51  64                 	db	100	;'d'
  3688  00FA52  72                 	db	114	;'r'
  3689  00FA53  6F                 	db	111	;'o'
  3690  00FA54  6F                 	db	111	;'o'
  3691  00FA55  6D                 	db	109	;'m'
  3692  00FA56  20                 	db	32
  3693  00FA57  48                 	db	72	;'H'
  3694  00FA58  65                 	db	101	;'e'
  3695  00FA59  6C                 	db	108	;'l'
  3696  00FA5A  70                 	db	112	;'p'
  3697  00FA5B  3F                 	db	63	;'?'
  3698  00FA5C  3F                 	db	63	;'?'
  3699  00FA5D  3F                 	db	63	;'?'
  3700  00FA5E  00                 	db	0
  3701  00FA5F                     STR_171:
  3702  00FA5F  52                 	db	82	;'R'
  3703  00FA60  65                 	db	101	;'e'
  3704  00FA61  64                 	db	100	;'d'
  3705  00FA62  20                 	db	32
  3706  00FA63  4C                 	db	76	;'L'
  3707  00FA64  45                 	db	69	;'E'
  3708  00FA65  44                 	db	68	;'D'
  3709  00FA66  20                 	db	32
  3710  00FA67  57                 	db	87	;'W'
  3711  00FA68  68                 	db	104	;'h'
  3712  00FA69  61                 	db	97	;'a'
  3713  00FA6A  74                 	db	116	;'t'
  3714  00FA6B  3F                 	db	63	;'?'
  3715  00FA6C  3F                 	db	63	;'?'
  3716  00FA6D  3F                 	db	63	;'?'
  3717  00FA6E  00                 	db	0
  3718  00FA6F                     STR_260:
  3719  00FA6F  4A                 	db	74	;'J'
  3720  00FA70  6F                 	db	111	;'o'
  3721  00FA71  65                 	db	101	;'e'
  3722  00FA72  20                 	db	32
  3723  00FA73  72                 	db	114	;'r'
  3724  00FA74  6F                 	db	111	;'o'
  3725  00FA75  6F                 	db	111	;'o'
  3726  00FA76  6D                 	db	109	;'m'
  3727  00FA77  20                 	db	32
  3728  00FA78  77                 	db	119	;'w'
  3729  00FA79  68                 	db	104	;'h'
  3730  00FA7A  61                 	db	97	;'a'
  3731  00FA7B  74                 	db	116	;'t'
  3732  00FA7C  3F                 	db	63	;'?'
  3733  00FA7D  3F                 	db	63	;'?'
  3734  00FA7E  00                 	db	0
  3735  00FA7F                     STR_289:
  3736  00FA7F  43                 	db	67	;'C'
  3737  00FA80  68                 	db	104	;'h'
  3738  00FA81  72                 	db	114	;'r'
  3739  00FA82  69                 	db	105	;'i'
  3740  00FA83  73                 	db	115	;'s'
  3741  00FA84  74                 	db	116	;'t'
  3742  00FA85  6D                 	db	109	;'m'
  3743  00FA86  61                 	db	97	;'a'
  3744  00FA87  73                 	db	115	;'s'
  3745  00FA88  20                 	db	32
  3746  00FA89  54                 	db	84	;'T'
  3747  00FA8A  72                 	db	114	;'r'
  3748  00FA8B  65                 	db	101	;'e'
  3749  00FA8C  65                 	db	101	;'e'
  3750  00FA8D  3F                 	db	63	;'?'
  3751  00FA8E  00                 	db	0
  3752  00FA8F                     STR_135:
  3753  00FA8F  58                 	db	88	;'X'
  3754  00FA90  4D                 	db	77	;'M'
  3755  00FA91  41                 	db	65	;'A'
  3756  00FA92  53                 	db	83	;'S'
  3757  00FA93  20                 	db	32
  3758  00FA94  43                 	db	67	;'C'
  3759  00FA95  6F                 	db	111	;'o'
  3760  00FA96  6C                 	db	108	;'l'
  3761  00FA97  6F                 	db	111	;'o'
  3762  00FA98  72                 	db	114	;'r'
  3763  00FA99  20                 	db	32
  3764  00FA9A  54                 	db	84	;'T'
  3765  00FA9B  47                 	db	71	;'G'
  3766  00FA9C  4C                 	db	76	;'L'
  3767  00FA9D  44                 	db	68	;'D'
  3768  00FA9E  00                 	db	0
  3769  00FA9F                     STR_73:
  3770  00FA9F  4C                 	db	76	;'L'
  3771  00FAA0  56                 	db	86	;'V'
  3772  00FAA1  4E                 	db	78	;'N'
  3773  00FAA2  47                 	db	71	;'G'
  3774  00FAA3  20                 	db	32
  3775  00FAA4  52                 	db	82	;'R'
  3776  00FAA5  6D                 	db	109	;'m'
  3777  00FAA6  20                 	db	32
  3778  00FAA7  4C                 	db	76	;'L'
  3779  00FAA8  74                 	db	116	;'t'
  3780  00FAA9  20                 	db	32
  3781  00FAAA  54                 	db	84	;'T'
  3782  00FAAB  47                 	db	71	;'G'
  3783  00FAAC  4C                 	db	76	;'L'
  3784  00FAAD  44                 	db	68	;'D'
  3785  00FAAE  00                 	db	0
  3786  00FAAF                     STR_100:
  3787  00FAAF  42                 	db	66	;'B'
  3788  00FAB0  65                 	db	101	;'e'
  3789  00FAB1  64                 	db	100	;'d'
  3790  00FAB2  72                 	db	114	;'r'
  3791  00FAB3  6F                 	db	111	;'o'
  3792  00FAB4  6F                 	db	111	;'o'
  3793  00FAB5  6D                 	db	109	;'m'
  3794  00FAB6  20                 	db	32
  3795  00FAB7  4C                 	db	76	;'L'
  3796  00FAB8  74                 	db	116	;'t'
  3797  00FAB9  20                 	db	32
  3798  00FABA  54                 	db	84	;'T'
  3799  00FABB  47                 	db	71	;'G'
  3800  00FABC  4C                 	db	76	;'L'
  3801  00FABD  44                 	db	68	;'D'
  3802  00FABE  00                 	db	0
  3803  00FABF                     STR_220:
  3804  00FABF  52                 	db	82	;'R'
  3805  00FAC0  54                 	db	84	;'T'
  3806  00FAC1  43                 	db	67	;'C'
  3807  00FAC2  20                 	db	32
  3808  00FAC3  42                 	db	66	;'B'
  3809  00FAC4  74                 	db	116	;'t'
  3810  00FAC5  79                 	db	121	;'y'
  3811  00FAC6  20                 	db	32
  3812  00FAC7  3D                 	db	61	;'='
  3813  00FAC8  20                 	db	32
  3814  00FAC9  25                 	db	37
  3815  00FACA  64                 	db	100	;'d'
  3816  00FACB  2E                 	db	46
  3817  00FACC  25                 	db	37
  3818  00FACD  64                 	db	100	;'d'
  3819  00FACE  00                 	db	0
  3820  00FACF                     STR_310:
  3821  00FACF  49                 	db	73	;'I'
  3822  00FAD0  6E                 	db	110	;'n'
  3823  00FAD1  76                 	db	118	;'v'
  3824  00FAD2  61                 	db	97	;'a'
  3825  00FAD3  6C                 	db	108	;'l'
  3826  00FAD4  69                 	db	105	;'i'
  3827  00FAD5  64                 	db	100	;'d'
  3828  00FAD6  20                 	db	32
  3829  00FAD7  43                 	db	67	;'C'
  3830  00FAD8  6F                 	db	111	;'o'
  3831  00FAD9  6D                 	db	109	;'m'
  3832  00FADA  6D                 	db	109	;'m'
  3833  00FADB  61                 	db	97	;'a'
  3834  00FADC  6E                 	db	110	;'n'
  3835  00FADD  64                 	db	100	;'d'
  3836  00FADE  00                 	db	0
  3837  00FADF                     STR_203:
  3838  00FADF  45                 	db	69	;'E'
  3839  00FAE0  52                 	db	82	;'R'
  3840  00FAE1  52                 	db	82	;'R'
  3841  00FAE2  3A                 	db	58	;':'
  3842  00FAE3  20                 	db	32
  3843  00FAE4  43                 	db	67	;'C'
  3844  00FAE5  61                 	db	97	;'a'
  3845  00FAE6  6E                 	db	110	;'n'
  3846  00FAE7  74                 	db	116	;'t'
  3847  00FAE8  20                 	db	32
  3848  00FAE9  70                 	db	112	;'p'
  3849  00FAEA  61                 	db	97	;'a'
  3850  00FAEB  72                 	db	114	;'r'
  3851  00FAEC  73                 	db	115	;'s'
  3852  00FAED  65                 	db	101	;'e'
  3853  00FAEE  00                 	db	0
  3854  00FAEF                     STR_112:
  3855  00FAEF  42                 	db	66	;'B'
  3856  00FAF0  65                 	db	101	;'e'
  3857  00FAF1  64                 	db	100	;'d'
  3858  00FAF2  72                 	db	114	;'r'
  3859  00FAF3  6F                 	db	111	;'o'
  3860  00FAF4  6F                 	db	111	;'o'
  3861  00FAF5  6D                 	db	109	;'m'
  3862  00FAF6  20                 	db	32
  3863  00FAF7  53                 	db	83	;'S'
  3864  00FAF8  4B                 	db	75	;'K'
  3865  00FAF9  52                 	db	82	;'R'
  3866  00FAFA  20                 	db	32
  3867  00FAFB  4F                 	db	79	;'O'
  3868  00FAFC  66                 	db	102	;'f'
  3869  00FAFD  66                 	db	102	;'f'
  3870  00FAFE  00                 	db	0
  3871  00FAFF                     STR_105:
  3872  00FAFF  42                 	db	66	;'B'
  3873  00FB00  65                 	db	101	;'e'
  3874  00FB01  64                 	db	100	;'d'
  3875  00FB02  72                 	db	114	;'r'
  3876  00FB03  6F                 	db	111	;'o'
  3877  00FB04  6F                 	db	111	;'o'
  3878  00FB05  6D                 	db	109	;'m'
  3879  00FB06  20                 	db	32
  3880  00FB07  46                 	db	70	;'F'
  3881  00FB08  61                 	db	97	;'a'
  3882  00FB09  6E                 	db	110	;'n'
  3883  00FB0A  20                 	db	32
  3884  00FB0B  4F                 	db	79	;'O'
  3885  00FB0C  66                 	db	102	;'f'
  3886  00FB0D  66                 	db	102	;'f'
  3887  00FB0E  00                 	db	0
  3888  00FB0F                     STR_258:
  3889  00FB0F  4A                 	db	74	;'J'
  3890  00FB10  6F                 	db	111	;'o'
  3891  00FB11  65                 	db	101	;'e'
  3892  00FB12  20                 	db	32
  3893  00FB13  72                 	db	114	;'r'
  3894  00FB14  6F                 	db	111	;'o'
  3895  00FB15  6F                 	db	111	;'o'
  3896  00FB16  6D                 	db	109	;'m'
  3897  00FB17  20                 	db	32
  3898  00FB18  6C                 	db	108	;'l'
  3899  00FB19  74                 	db	116	;'t'
  3900  00FB1A  20                 	db	32
  3901  00FB1B  4F                 	db	79	;'O'
  3902  00FB1C  66                 	db	102	;'f'
  3903  00FB1D  66                 	db	102	;'f'
  3904  00FB1E  00                 	db	0
  3905  00FB1F                     STR_201:
  3906  00FB1F  45                 	db	69	;'E'
  3907  00FB20  52                 	db	82	;'R'
  3908  00FB21  52                 	db	82	;'R'
  3909  00FB22  3A                 	db	58	;':'
  3910  00FB23  20                 	db	32
  3911  00FB24  55                 	db	85	;'U'
  3912  00FB25  73                 	db	115	;'s'
  3913  00FB26  65                 	db	101	;'e'
  3914  00FB27  20                 	db	32
  3915  00FB28  2B                 	db	43
  3916  00FB29  20                 	db	32
  3917  00FB2A  43                 	db	67	;'C'
  3918  00FB2B  68                 	db	104	;'h'
  3919  00FB2C  6E                 	db	110	;'n'
  3920  00FB2D  6C                 	db	108	;'l'
  3921  00FB2E  00                 	db	0
  3922  00FB2F                     STR_97:
  3923  00FB2F  62                 	db	98	;'b'
  3924  00FB30  65                 	db	101	;'e'
  3925  00FB31  64                 	db	100	;'d'
  3926  00FB32  72                 	db	114	;'r'
  3927  00FB33  6F                 	db	111	;'o'
  3928  00FB34  6F                 	db	111	;'o'
  3929  00FB35  6D                 	db	109	;'m'
  3930  00FB36  6C                 	db	108	;'l'
  3931  00FB37  69                 	db	105	;'i'
  3932  00FB38  67                 	db	103	;'g'
  3933  00FB39  68                 	db	104	;'h'
  3934  00FB3A  74                 	db	116	;'t'
  3935  00FB3B  3D                 	db	61	;'='
  3936  00FB3C  6F                 	db	111	;'o'
  3937  00FB3D  6E                 	db	110	;'n'
  3938  00FB3E  00                 	db	0
  3939  00FB3F                     STR_295:
  3940  00FB3F  62                 	db	98	;'b'
  3941  00FB40  61                 	db	97	;'a'
  3942  00FB41  75                 	db	117	;'u'
  3943  00FB42  64                 	db	100	;'d'
  3944  00FB43  77                 	db	119	;'w'
  3945  00FB44  69                 	db	105	;'i'
  3946  00FB45  6C                 	db	108	;'l'
  3947  00FB46  6C                 	db	108	;'l'
  3948  00FB47  62                 	db	98	;'b'
  3949  00FB48  65                 	db	101	;'e'
  3950  00FB49  73                 	db	115	;'s'
  3951  00FB4A  65                 	db	101	;'e'
  3952  00FB4B  74                 	db	116	;'t'
  3953  00FB4C  74                 	db	116	;'t'
  3954  00FB4D  6F                 	db	111	;'o'
  3955  00FB4E  00                 	db	0
  3956  00FB4F                     STR_88:
  3957  00FB4F  4C                 	db	76	;'L'
  3958  00FB50  56                 	db	86	;'V'
  3959  00FB51  4E                 	db	78	;'N'
  3960  00FB52  47                 	db	71	;'G'
  3961  00FB53  20                 	db	32
  3962  00FB54  52                 	db	82	;'R'
  3963  00FB55  6D                 	db	109	;'m'
  3964  00FB56  20                 	db	32
  3965  00FB57  4C                 	db	76	;'L'
  3966  00FB58  74                 	db	116	;'t'
  3967  00FB59  20                 	db	32
  3968  00FB5A  68                 	db	104	;'h'
  3969  00FB5B  65                 	db	101	;'e'
  3970  00FB5C  6C                 	db	108	;'l'
  3971  00FB5D  70                 	db	112	;'p'
  3972  00FB5E  00                 	db	0
  3973  00FB5F                     STR_300:
  3974  00FB5F  77                 	db	119	;'w'
  3975  00FB60  69                 	db	105	;'i'
  3976  00FB61  74                 	db	116	;'t'
  3977  00FB62  68                 	db	104	;'h'
  3978  00FB63  6E                 	db	110	;'n'
  3979  00FB64  6F                 	db	111	;'o'
  3980  00FB65  70                 	db	112	;'p'
  3981  00FB66  61                 	db	97	;'a'
  3982  00FB67  72                 	db	114	;'r'
  3983  00FB68  69                 	db	105	;'i'
  3984  00FB69  74                 	db	116	;'t'
  3985  00FB6A  79                 	db	121	;'y'
  3986  00FB6B  62                 	db	98	;'b'
  3987  00FB6C  69                 	db	105	;'i'
  3988  00FB6D  74                 	db	116	;'t'
  3989  00FB6E  00                 	db	0
  3990  00FB6F                     STR_16:
  3991  00FB6F  53                 	db	83	;'S'
  3992  00FB70  74                 	db	116	;'t'
  3993  00FB71  61                 	db	97	;'a'
  3994  00FB72  72                 	db	114	;'r'
  3995  00FB73  74                 	db	116	;'t'
  3996  00FB74  69                 	db	105	;'i'
  3997  00FB75  6E                 	db	110	;'n'
  3998  00FB76  67                 	db	103	;'g'
  3999  00FB77  2E                 	db	46
  4000  00FB78  2E                 	db	46
  4001  00FB79  2E                 	db	46
  4002  00FB7A  2E                 	db	46
  4003  00FB7B  2E                 	db	46
  4004  00FB7C  2E                 	db	46
  4005  00FB7D  2E                 	db	46
  4006  00FB7E  00                 	db	0
  4007  00FB7F                     STR_280:
  4008  00FB7F  43                 	db	67	;'C'
  4009  00FB80  75                 	db	117	;'u'
  4010  00FB81  72                 	db	114	;'r'
  4011  00FB82  72                 	db	114	;'r'
  4012  00FB83  65                 	db	101	;'e'
  4013  00FB84  6E                 	db	110	;'n'
  4014  00FB85  74                 	db	116	;'t'
  4015  00FB86  20                 	db	32
  4016  00FB87  54                 	db	84	;'T'
  4017  00FB88  69                 	db	105	;'i'
  4018  00FB89  6D                 	db	109	;'m'
  4019  00FB8A  65                 	db	101	;'e'
  4020  00FB8B  0D                 	db	13
  4021  00FB8C  0A                 	db	10
  4022  00FB8D  00                 	db	0
  4023  00FB8E                     STR_148:
  4024  00FB8E  77                 	db	119	;'w'
  4025  00FB8F  68                 	db	104	;'h'
  4026  00FB90  69                 	db	105	;'i'
  4027  00FB91  74                 	db	116	;'t'
  4028  00FB92  65                 	db	101	;'e'
  4029  00FB93  20                 	db	32
  4030  00FB94  6C                 	db	108	;'l'
  4031  00FB95  69                 	db	105	;'i'
  4032  00FB96  67                 	db	103	;'g'
  4033  00FB97  68                 	db	104	;'h'
  4034  00FB98  74                 	db	116	;'t'
  4035  00FB99  73                 	db	115	;'s'
  4036  00FB9A  0D                 	db	13
  4037  00FB9B  0A                 	db	10
  4038  00FB9C  00                 	db	0
  4039  00FB9D                     STR_188:
  4040  00FB9D  43                 	db	67	;'C'
  4041  00FB9E  4E                 	db	78	;'N'
  4042  00FB9F  53                 	db	83	;'S'
  4043  00FBA0  54                 	db	84	;'T'
  4044  00FBA1  20                 	db	32
  4045  00FBA2  73                 	db	115	;'s'
  4046  00FBA3  65                 	db	101	;'e'
  4047  00FBA4  74                 	db	116	;'t'
  4048  00FBA5  20                 	db	32
  4049  00FBA6  74                 	db	116	;'t'
  4050  00FBA7  6F                 	db	111	;'o'
  4051  00FBA8  20                 	db	32
  4052  00FBA9  25                 	db	37
  4053  00FBAA  64                 	db	100	;'d'
  4054  00FBAB  00                 	db	0
  4055  00FBAC                     STR_169:
  4056  00FBAC  44                 	db	68	;'D'
  4057  00FBAD  75                 	db	117	;'u'
  4058  00FBAE  74                 	db	116	;'t'
  4059  00FBAF  79                 	db	121	;'y'
  4060  00FBB0  20                 	db	32
  4061  00FBB1  73                 	db	115	;'s'
  4062  00FBB2  65                 	db	101	;'e'
  4063  00FBB3  74                 	db	116	;'t'
  4064  00FBB4  20                 	db	32
  4065  00FBB5  74                 	db	116	;'t'
  4066  00FBB6  6F                 	db	111	;'o'
  4067  00FBB7  20                 	db	32
  4068  00FBB8  25                 	db	37
  4069  00FBB9  64                 	db	100	;'d'
  4070  00FBBA  00                 	db	0
  4071  00FBBB                     STR_143:
  4072  00FBBB  58                 	db	88	;'X'
  4073  00FBBC  4D                 	db	77	;'M'
  4074  00FBBD  41                 	db	65	;'A'
  4075  00FBBE  53                 	db	83	;'S'
  4076  00FBBF  20                 	db	32
  4077  00FBC0  57                 	db	87	;'W'
  4078  00FBC1  68                 	db	104	;'h'
  4079  00FBC2  69                 	db	105	;'i'
  4080  00FBC3  74                 	db	116	;'t'
  4081  00FBC4  65                 	db	101	;'e'
  4082  00FBC5  20                 	db	32
  4083  00FBC6  4F                 	db	79	;'O'
  4084  00FBC7  66                 	db	102	;'f'
  4085  00FBC8  66                 	db	102	;'f'
  4086  00FBC9  00                 	db	0
  4087  00FBCA                     STR_79:
  4088  00FBCA  4C                 	db	76	;'L'
  4089  00FBCB  56                 	db	86	;'V'
  4090  00FBCC  4E                 	db	78	;'N'
  4091  00FBCD  47                 	db	71	;'G'
  4092  00FBCE  20                 	db	32
  4093  00FBCF  52                 	db	82	;'R'
  4094  00FBD0  6D                 	db	109	;'m'
  4095  00FBD1  20                 	db	32
  4096  00FBD2  4C                 	db	76	;'L'
  4097  00FBD3  74                 	db	116	;'t'
  4098  00FBD4  20                 	db	32
  4099  00FBD5  4F                 	db	79	;'O'
  4100  00FBD6  66                 	db	102	;'f'
  4101  00FBD7  66                 	db	102	;'f'
  4102  00FBD8  00                 	db	0
  4103  00FBD9                     STR_106:
  4104  00FBD9  42                 	db	66	;'B'
  4105  00FBDA  65                 	db	101	;'e'
  4106  00FBDB  64                 	db	100	;'d'
  4107  00FBDC  72                 	db	114	;'r'
  4108  00FBDD  6F                 	db	111	;'o'
  4109  00FBDE  6F                 	db	111	;'o'
  4110  00FBDF  6D                 	db	109	;'m'
  4111  00FBE0  20                 	db	32
  4112  00FBE1  4C                 	db	76	;'L'
  4113  00FBE2  74                 	db	116	;'t'
  4114  00FBE3  20                 	db	32
  4115  00FBE4  4F                 	db	79	;'O'
  4116  00FBE5  66                 	db	102	;'f'
  4117  00FBE6  66                 	db	102	;'f'
  4118  00FBE7  00                 	db	0
  4119  00FBE8                     STR_104:
  4120  00FBE8  62                 	db	98	;'b'
  4121  00FBE9  65                 	db	101	;'e'
  4122  00FBEA  64                 	db	100	;'d'
  4123  00FBEB  72                 	db	114	;'r'
  4124  00FBEC  6F                 	db	111	;'o'
  4125  00FBED  6F                 	db	111	;'o'
  4126  00FBEE  6D                 	db	109	;'m'
  4127  00FBEF  66                 	db	102	;'f'
  4128  00FBF0  61                 	db	97	;'a'
  4129  00FBF1  6E                 	db	110	;'n'
  4130  00FBF2  3D                 	db	61	;'='
  4131  00FBF3  6F                 	db	111	;'o'
  4132  00FBF4  66                 	db	102	;'f'
  4133  00FBF5  66                 	db	102	;'f'
  4134  00FBF6  00                 	db	0
  4135  00FBF7                     STR_109:
  4136  00FBF7  42                 	db	66	;'B'
  4137  00FBF8  65                 	db	101	;'e'
  4138  00FBF9  64                 	db	100	;'d'
  4139  00FBFA  72                 	db	114	;'r'
  4140  00FBFB  6F                 	db	111	;'o'
  4141  00FBFC  6F                 	db	111	;'o'
  4142  00FBFD  6D                 	db	109	;'m'
  4143  00FBFE  20                 	db	32
  4144  00FBFF  53                 	db	83	;'S'
  4145  00FC00  4B                 	db	75	;'K'
  4146  00FC01  52                 	db	82	;'R'
  4147  00FC02  20                 	db	32
  4148  00FC03  4F                 	db	79	;'O'
  4149  00FC04  6E                 	db	110	;'n'
  4150  00FC05  00                 	db	0
  4151  00FC06                     STR_102:
  4152  00FC06  42                 	db	66	;'B'
  4153  00FC07  65                 	db	101	;'e'
  4154  00FC08  64                 	db	100	;'d'
  4155  00FC09  72                 	db	114	;'r'
  4156  00FC0A  6F                 	db	111	;'o'
  4157  00FC0B  6F                 	db	111	;'o'
  4158  00FC0C  6D                 	db	109	;'m'
  4159  00FC0D  20                 	db	32
  4160  00FC0E  46                 	db	70	;'F'
  4161  00FC0F  61                 	db	97	;'a'
  4162  00FC10  6E                 	db	110	;'n'
  4163  00FC11  20                 	db	32
  4164  00FC12  4F                 	db	79	;'O'
  4165  00FC13  6E                 	db	110	;'n'
  4166  00FC14  00                 	db	0
  4167  00FC15                     STR_255:
  4168  00FC15  4A                 	db	74	;'J'
  4169  00FC16  6F                 	db	111	;'o'
  4170  00FC17  65                 	db	101	;'e'
  4171  00FC18  20                 	db	32
  4172  00FC19  72                 	db	114	;'r'
  4173  00FC1A  6F                 	db	111	;'o'
  4174  00FC1B  6F                 	db	111	;'o'
  4175  00FC1C  6D                 	db	109	;'m'
  4176  00FC1D  20                 	db	32
  4177  00FC1E  6C                 	db	108	;'l'
  4178  00FC1F  74                 	db	116	;'t'
  4179  00FC20  20                 	db	32
  4180  00FC21  4F                 	db	79	;'O'
  4181  00FC22  6E                 	db	110	;'n'
  4182  00FC23  00                 	db	0
  4183  00FC24                     STR_182:
  4184  00FC24  45                 	db	69	;'E'
  4185  00FC25  52                 	db	82	;'R'
  4186  00FC26  52                 	db	82	;'R'
  4187  00FC27  3A                 	db	58	;':'
  4188  00FC28  20                 	db	32
  4189  00FC29  4E                 	db	78	;'N'
  4190  00FC2A  6F                 	db	111	;'o'
  4191  00FC2B  20                 	db	32
  4192  00FC2C  6E                 	db	110	;'n'
  4193  00FC2D  75                 	db	117	;'u'
  4194  00FC2E  6D                 	db	109	;'m'
  4195  00FC2F  62                 	db	98	;'b'
  4196  00FC30  65                 	db	101	;'e'
  4197  00FC31  72                 	db	114	;'r'
  4198  00FC32  00                 	db	0
  4199  00FC33                     STR_163:
  4200  00FC33  45                 	db	69	;'E'
  4201  00FC34  52                 	db	82	;'R'
  4202  00FC35  52                 	db	82	;'R'
  4203  00FC36  3A                 	db	58	;':'
  4204  00FC37  20                 	db	32
  4205  00FC38  6E                 	db	110	;'n'
  4206  00FC39  6F                 	db	111	;'o'
  4207  00FC3A  20                 	db	32
  4208  00FC3B  6E                 	db	110	;'n'
  4209  00FC3C  75                 	db	117	;'u'
  4210  00FC3D  6D                 	db	109	;'m'
  4211  00FC3E  62                 	db	98	;'b'
  4212  00FC3F  65                 	db	101	;'e'
  4213  00FC40  72                 	db	114	;'r'
  4214  00FC41  00                 	db	0
  4215  00FC42                     STR_15:
  4216  00FC42  53                 	db	83	;'S'
  4217  00FC43  74                 	db	116	;'t'
  4218  00FC44  61                 	db	97	;'a'
  4219  00FC45  72                 	db	114	;'r'
  4220  00FC46  74                 	db	116	;'t'
  4221  00FC47  69                 	db	105	;'i'
  4222  00FC48  6E                 	db	110	;'n'
  4223  00FC49  67                 	db	103	;'g'
  4224  00FC4A  2E                 	db	46
  4225  00FC4B  2E                 	db	46
  4226  00FC4C  2E                 	db	46
  4227  00FC4D  2E                 	db	46
  4228  00FC4E  2E                 	db	46
  4229  00FC4F  2E                 	db	46
  4230  00FC50  00                 	db	0
  4231  00FC51                     STR_186:
  4232  00FC51  45                 	db	69	;'E'
  4233  00FC52  52                 	db	82	;'R'
  4234  00FC53  52                 	db	82	;'R'
  4235  00FC54  3A                 	db	58	;':'
  4236  00FC55  20                 	db	32
  4237  00FC56  43                 	db	67	;'C'
  4238  00FC57  4E                 	db	78	;'N'
  4239  00FC58  53                 	db	83	;'S'
  4240  00FC59  54                 	db	84	;'T'
  4241  00FC5A  20                 	db	32
  4242  00FC5B  3C                 	db	60	;'<'
  4243  00FC5C  20                 	db	32
  4244  00FC5D  30                 	db	48	;'0'
  4245  00FC5E  00                 	db	0
  4246  00FC5F                     STR_167:
  4247  00FC5F  45                 	db	69	;'E'
  4248  00FC60  52                 	db	82	;'R'
  4249  00FC61  52                 	db	82	;'R'
  4250  00FC62  3A                 	db	58	;':'
  4251  00FC63  20                 	db	32
  4252  00FC64  44                 	db	68	;'D'
  4253  00FC65  75                 	db	117	;'u'
  4254  00FC66  74                 	db	116	;'t'
  4255  00FC67  79                 	db	121	;'y'
  4256  00FC68  20                 	db	32
  4257  00FC69  3C                 	db	60	;'<'
  4258  00FC6A  20                 	db	32
  4259  00FC6B  30                 	db	48	;'0'
  4260  00FC6C  00                 	db	0
  4261  00FC6D                     STR_285:
  4262  00FC6D  44                 	db	68	;'D'
  4263  00FC6E  65                 	db	101	;'e'
  4264  00FC6F  76                 	db	118	;'v'
  4265  00FC70  69                 	db	105	;'i'
  4266  00FC71  63                 	db	99	;'c'
  4267  00FC72  65                 	db	101	;'e'
  4268  00FC73  20                 	db	32
  4269  00FC74  4D                 	db	77	;'M'
  4270  00FC75  65                 	db	101	;'e'
  4271  00FC76  6E                 	db	110	;'n'
  4272  00FC77  75                 	db	117	;'u'
  4273  00FC78  73                 	db	115	;'s'
  4274  00FC79  3A                 	db	58	;':'
  4275  00FC7A  00                 	db	0
  4276  00FC7B                     STR_307:
  4277  00FC7B  65                 	db	101	;'e'
  4278  00FC7C  6E                 	db	110	;'n'
  4279  00FC7D  74                 	db	116	;'t'
  4280  00FC7E  65                 	db	101	;'e'
  4281  00FC7F  72                 	db	114	;'r'
  4282  00FC80  62                 	db	98	;'b'
  4283  00FC81  61                 	db	97	;'a'
  4284  00FC82  75                 	db	117	;'u'
  4285  00FC83  64                 	db	100	;'d'
  4286  00FC84  72                 	db	114	;'r'
  4287  00FC85  61                 	db	97	;'a'
  4288  00FC86  74                 	db	116	;'t'
  4289  00FC87  65                 	db	101	;'e'
  4290  00FC88  00                 	db	0
  4291  00FC89                     STR_139:
  4292  00FC89  58                 	db	88	;'X'
  4293  00FC8A  4D                 	db	77	;'M'
  4294  00FC8B  41                 	db	65	;'A'
  4295  00FC8C  53                 	db	83	;'S'
  4296  00FC8D  20                 	db	32
  4297  00FC8E  57                 	db	87	;'W'
  4298  00FC8F  68                 	db	104	;'h'
  4299  00FC90  69                 	db	105	;'i'
  4300  00FC91  74                 	db	116	;'t'
  4301  00FC92  65                 	db	101	;'e'
  4302  00FC93  20                 	db	32
  4303  00FC94  4F                 	db	79	;'O'
  4304  00FC95  6E                 	db	110	;'n'
  4305  00FC96  00                 	db	0
  4306  00FC97                     STR_76:
  4307  00FC97  4C                 	db	76	;'L'
  4308  00FC98  56                 	db	86	;'V'
  4309  00FC99  4E                 	db	78	;'N'
  4310  00FC9A  47                 	db	71	;'G'
  4311  00FC9B  20                 	db	32
  4312  00FC9C  52                 	db	82	;'R'
  4313  00FC9D  6D                 	db	109	;'m'
  4314  00FC9E  20                 	db	32
  4315  00FC9F  4C                 	db	76	;'L'
  4316  00FCA0  74                 	db	116	;'t'
  4317  00FCA1  20                 	db	32
  4318  00FCA2  4F                 	db	79	;'O'
  4319  00FCA3  6E                 	db	110	;'n'
  4320  00FCA4  00                 	db	0
  4321  00FCA5                     STR_103:
  4322  00FCA5  42                 	db	66	;'B'
  4323  00FCA6  65                 	db	101	;'e'
  4324  00FCA7  64                 	db	100	;'d'
  4325  00FCA8  72                 	db	114	;'r'
  4326  00FCA9  6F                 	db	111	;'o'
  4327  00FCAA  6F                 	db	111	;'o'
  4328  00FCAB  6D                 	db	109	;'m'
  4329  00FCAC  20                 	db	32
  4330  00FCAD  4C                 	db	76	;'L'
  4331  00FCAE  74                 	db	116	;'t'
  4332  00FCAF  20                 	db	32
  4333  00FCB0  4F                 	db	79	;'O'
  4334  00FCB1  6E                 	db	110	;'n'
  4335  00FCB2  00                 	db	0
  4336  00FCB3                     STR_101:
  4337  00FCB3  62                 	db	98	;'b'
  4338  00FCB4  65                 	db	101	;'e'
  4339  00FCB5  64                 	db	100	;'d'
  4340  00FCB6  72                 	db	114	;'r'
  4341  00FCB7  6F                 	db	111	;'o'
  4342  00FCB8  6F                 	db	111	;'o'
  4343  00FCB9  6D                 	db	109	;'m'
  4344  00FCBA  66                 	db	102	;'f'
  4345  00FCBB  61                 	db	97	;'a'
  4346  00FCBC  6E                 	db	110	;'n'
  4347  00FCBD  3D                 	db	61	;'='
  4348  00FCBE  6F                 	db	111	;'o'
  4349  00FCBF  6E                 	db	110	;'n'
  4350  00FCC0  00                 	db	0
  4351  00FCC1                     STR_266:
  4352  00FCC1  4A                 	db	74	;'J'
  4353  00FCC2  6F                 	db	111	;'o'
  4354  00FCC3  65                 	db	101	;'e'
  4355  00FCC4  20                 	db	32
  4356  00FCC5  72                 	db	114	;'r'
  4357  00FCC6  6F                 	db	111	;'o'
  4358  00FCC7  6F                 	db	111	;'o'
  4359  00FCC8  6D                 	db	109	;'m'
  4360  00FCC9  20                 	db	32
  4361  00FCCA  4D                 	db	77	;'M'
  4362  00FCCB  65                 	db	101	;'e'
  4363  00FCCC  6E                 	db	110	;'n'
  4364  00FCCD  75                 	db	117	;'u'
  4365  00FCCE  00                 	db	0
  4366  00FCCF                     STR_89:
  4367  00FCCF  4C                 	db	76	;'L'
  4368  00FCD0  56                 	db	86	;'V'
  4369  00FCD1  4E                 	db	78	;'N'
  4370  00FCD2  47                 	db	71	;'G'
  4371  00FCD3  72                 	db	114	;'r'
  4372  00FCD4  6F                 	db	111	;'o'
  4373  00FCD5  6F                 	db	111	;'o'
  4374  00FCD6  6D                 	db	109	;'m'
  4375  00FCD7  20                 	db	32
  4376  00FCD8  4D                 	db	77	;'M'
  4377  00FCD9  65                 	db	101	;'e'
  4378  00FCDA  6E                 	db	110	;'n'
  4379  00FCDB  75                 	db	117	;'u'
  4380  00FCDC  00                 	db	0
  4381  00FCDD                     STR_14:
  4382  00FCDD  53                 	db	83	;'S'
  4383  00FCDE  74                 	db	116	;'t'
  4384  00FCDF  61                 	db	97	;'a'
  4385  00FCE0  72                 	db	114	;'r'
  4386  00FCE1  74                 	db	116	;'t'
  4387  00FCE2  69                 	db	105	;'i'
  4388  00FCE3  6E                 	db	110	;'n'
  4389  00FCE4  67                 	db	103	;'g'
  4390  00FCE5  2E                 	db	46
  4391  00FCE6  2E                 	db	46
  4392  00FCE7  2E                 	db	46
  4393  00FCE8  2E                 	db	46
  4394  00FCE9  2E                 	db	46
  4395  00FCEA  00                 	db	0
  4396  00FCEB                     STR_212:
  4397  00FCEB  69                 	db	105	;'i'
  4398  00FCEC  2E                 	db	46
  4399  00FCED  65                 	db	101	;'e'
  4400  00FCEE  2E                 	db	46
  4401  00FCEF  20                 	db	32
  4402  00FCF0  41                 	db	65	;'A'
  4403  00FCF1  44                 	db	68	;'D'
  4404  00FCF2  43                 	db	67	;'C'
  4405  00FCF3  20                 	db	32
  4406  00FCF4  30                 	db	48	;'0'
  4407  00FCF5  0D                 	db	13
  4408  00FCF6  0A                 	db	10
  4409  00FCF7  00                 	db	0
  4410  00FCF8                     STR_272:
  4411  00FCF8  4C                 	db	76	;'L'
  4412  00FCF9  69                 	db	105	;'i'
  4413  00FCFA  76                 	db	118	;'v'
  4414  00FCFB  69                 	db	105	;'i'
  4415  00FCFC  6E                 	db	110	;'n'
  4416  00FCFD  67                 	db	103	;'g'
  4417  00FCFE  72                 	db	114	;'r'
  4418  00FCFF  6F                 	db	111	;'o'
  4419  00FD00  6F                 	db	111	;'o'
  4420  00FD01  6D                 	db	109	;'m'
  4421  00FD02  0D                 	db	13
  4422  00FD03  0A                 	db	10
  4423  00FD04  00                 	db	0
  4424  00FD05                     STR_237:
  4425  00FD05  52                 	db	82	;'R'
  4426  00FD06  54                 	db	84	;'T'
  4427  00FD07  43                 	db	67	;'C'
  4428  00FD08  20                 	db	32
  4429  00FD09  57                 	db	87	;'W'
  4430  00FD0A  68                 	db	104	;'h'
  4431  00FD0B  61                 	db	97	;'a'
  4432  00FD0C  74                 	db	116	;'t'
  4433  00FD0D  3F                 	db	63	;'?'
  4434  00FD0E  3F                 	db	63	;'?'
  4435  00FD0F  3F                 	db	63	;'?'
  4436  00FD10  0A                 	db	10
  4437  00FD11  00                 	db	0
  4438  00FD12                     STR_199:
  4439  00FD12  45                 	db	69	;'E'
  4440  00FD13  52                 	db	82	;'R'
  4441  00FD14  52                 	db	82	;'R'
  4442  00FD15  3A                 	db	58	;':'
  4443  00FD16  20                 	db	32
  4444  00FD17  55                 	db	85	;'U'
  4445  00FD18  73                 	db	115	;'s'
  4446  00FD19  65                 	db	101	;'e'
  4447  00FD1A  20                 	db	32
  4448  00FD1B  31                 	db	49	;'1'
  4449  00FD1C  20                 	db	32
  4450  00FD1D  3D                 	db	61	;'='
  4451  00FD1E  00                 	db	0
  4452  00FD1F                     STR_145:
  4453  00FD1F  58                 	db	88	;'X'
  4454  00FD20  4D                 	db	77	;'M'
  4455  00FD21  41                 	db	65	;'A'
  4456  00FD22  53                 	db	83	;'S'
  4457  00FD23  20                 	db	32
  4458  00FD24  57                 	db	87	;'W'
  4459  00FD25  68                 	db	104	;'h'
  4460  00FD26  61                 	db	97	;'a'
  4461  00FD27  74                 	db	116	;'t'
  4462  00FD28  3F                 	db	63	;'?'
  4463  00FD29  3F                 	db	63	;'?'
  4464  00FD2A  3F                 	db	63	;'?'
  4465  00FD2B  00                 	db	0
  4466  00FD2C                     STR_207:
  4467  00FD2C  43                 	db	67	;'C'
  4468  00FD2D  68                 	db	104	;'h'
  4469  00FD2E  6E                 	db	110	;'n'
  4470  00FD2F  6C                 	db	108	;'l'
  4471  00FD30  20                 	db	32
  4472  00FD31  25                 	db	37
  4473  00FD32  64                 	db	100	;'d'
  4474  00FD33  20                 	db	32
  4475  00FD34  3D                 	db	61	;'='
  4476  00FD35  20                 	db	32
  4477  00FD36  25                 	db	37
  4478  00FD37  64                 	db	100	;'d'
  4479  00FD38  00                 	db	0
  4480  00FD39                     STR_39:
  4481  00FD39  4C                 	db	76	;'L'
  4482  00FD3A  45                 	db	69	;'E'
  4483  00FD3B  44                 	db	68	;'D'
  4484  00FD3C  30                 	db	48	;'0'
  4485  00FD3D  20                 	db	32
  4486  00FD3E  54                 	db	84	;'T'
  4487  00FD3F  6F                 	db	111	;'o'
  4488  00FD40  67                 	db	103	;'g'
  4489  00FD41  67                 	db	103	;'g'
  4490  00FD42  6C                 	db	108	;'l'
  4491  00FD43  65                 	db	101	;'e'
  4492  00FD44  64                 	db	100	;'d'
  4493  00FD45  00                 	db	0
  4494  00FD46                     STR_48:
  4495  00FD46  4C                 	db	76	;'L'
  4496  00FD47  45                 	db	69	;'E'
  4497  00FD48  44                 	db	68	;'D'
  4498  00FD49  31                 	db	49	;'1'
  4499  00FD4A  20                 	db	32
  4500  00FD4B  54                 	db	84	;'T'
  4501  00FD4C  6F                 	db	111	;'o'
  4502  00FD4D  67                 	db	103	;'g'
  4503  00FD4E  67                 	db	103	;'g'
  4504  00FD4F  6C                 	db	108	;'l'
  4505  00FD50  65                 	db	101	;'e'
  4506  00FD51  64                 	db	100	;'d'
  4507  00FD52  00                 	db	0
  4508  00FD53                     STR_304:
  4509  00FD53  77                 	db	119	;'w'
  4510  00FD54  69                 	db	105	;'i'
  4511  00FD55  74                 	db	116	;'t'
  4512  00FD56  68                 	db	104	;'h'
  4513  00FD57  73                 	db	115	;'s'
  4514  00FD58  70                 	db	112	;'p'
  4515  00FD59  61                 	db	97	;'a'
  4516  00FD5A  63                 	db	99	;'c'
  4517  00FD5B  65                 	db	101	;'e'
  4518  00FD5C  62                 	db	98	;'b'
  4519  00FD5D  69                 	db	105	;'i'
  4520  00FD5E  74                 	db	116	;'t'
  4521  00FD5F  00                 	db	0
  4522  00FD60                     STR_192:
  4523  00FD60  4C                 	db	76	;'L'
  4524  00FD61  43                 	db	67	;'C'
  4525  00FD62  44                 	db	68	;'D'
  4526  00FD63  20                 	db	32
  4527  00FD64  43                 	db	67	;'C'
  4528  00FD65  6F                 	db	111	;'o'
  4529  00FD66  6E                 	db	110	;'n'
  4530  00FD67  74                 	db	116	;'t'
  4531  00FD68  72                 	db	114	;'r'
  4532  00FD69  61                 	db	97	;'a'
  4533  00FD6A  73                 	db	115	;'s'
  4534  00FD6B  74                 	db	116	;'t'
  4535  00FD6C  00                 	db	0
  4536  00FD6D                     STR_123:
  4537  00FD6D  42                 	db	66	;'B'
  4538  00FD6E  65                 	db	101	;'e'
  4539  00FD6F  64                 	db	100	;'d'
  4540  00FD70  72                 	db	114	;'r'
  4541  00FD71  6F                 	db	111	;'o'
  4542  00FD72  6F                 	db	111	;'o'
  4543  00FD73  6D                 	db	109	;'m'
  4544  00FD74  20                 	db	32
  4545  00FD75  4D                 	db	77	;'M'
  4546  00FD76  65                 	db	101	;'e'
  4547  00FD77  6E                 	db	110	;'n'
  4548  00FD78  75                 	db	117	;'u'
  4549  00FD79  00                 	db	0
  4550  00FD7A                     STR_13:
  4551  00FD7A  53                 	db	83	;'S'
  4552  00FD7B  74                 	db	116	;'t'
  4553  00FD7C  61                 	db	97	;'a'
  4554  00FD7D  72                 	db	114	;'r'
  4555  00FD7E  74                 	db	116	;'t'
  4556  00FD7F  69                 	db	105	;'i'
  4557  00FD80  6E                 	db	110	;'n'
  4558  00FD81  67                 	db	103	;'g'
  4559  00FD82  2E                 	db	46
  4560  00FD83  2E                 	db	46
  4561  00FD84  2E                 	db	46
  4562  00FD85  2E                 	db	46
  4563  00FD86  00                 	db	0
  4564  00FD87                     STR_270:
  4565  00FD87  44                 	db	68	;'D'
  4566  00FD88  65                 	db	101	;'e'
  4567  00FD89  76                 	db	118	;'v'
  4568  00FD8A  69                 	db	105	;'i'
  4569  00FD8B  63                 	db	99	;'c'
  4570  00FD8C  65                 	db	101	;'e'
  4571  00FD8D  73                 	db	115	;'s'
  4572  00FD8E  3A                 	db	58	;':'
  4573  00FD8F  0D                 	db	13
  4574  00FD90  0A                 	db	10
  4575  00FD91  0A                 	db	10
  4576  00FD92  00                 	db	0
  4577  00FD93                     STR_209:
  4578  00FD93  43                 	db	67	;'C'
  4579  00FD94  68                 	db	104	;'h'
  4580  00FD95  61                 	db	97	;'a'
  4581  00FD96  6E                 	db	110	;'n'
  4582  00FD97  6E                 	db	110	;'n'
  4583  00FD98  65                 	db	101	;'e'
  4584  00FD99  6C                 	db	108	;'l'
  4585  00FD9A  73                 	db	115	;'s'
  4586  00FD9B  3A                 	db	58	;':'
  4587  00FD9C  0D                 	db	13
  4588  00FD9D  0A                 	db	10
  4589  00FD9E  00                 	db	0
  4590  00FD9F                     STR_273:
  4591  00FD9F  4A                 	db	74	;'J'
  4592  00FDA0  6F                 	db	111	;'o'
  4593  00FDA1  65                 	db	101	;'e'
  4594  00FDA2  73                 	db	115	;'s'
  4595  00FDA3  20                 	db	32
  4596  00FDA4  72                 	db	114	;'r'
  4597  00FDA5  6F                 	db	111	;'o'
  4598  00FDA6  6F                 	db	111	;'o'
  4599  00FDA7  6D                 	db	109	;'m'
  4600  00FDA8  0D                 	db	13
  4601  00FDA9  0A                 	db	10
  4602  00FDAA  00                 	db	0
  4603  00FDAB                     STR_287:
  4604  00FDAB  4C                 	db	76	;'L'
  4605  00FDAC  69                 	db	105	;'i'
  4606  00FDAD  76                 	db	118	;'v'
  4607  00FDAE  69                 	db	105	;'i'
  4608  00FDAF  6E                 	db	110	;'n'
  4609  00FDB0  67                 	db	103	;'g'
  4610  00FDB1  72                 	db	114	;'r'
  4611  00FDB2  6F                 	db	111	;'o'
  4612  00FDB3  6F                 	db	111	;'o'
  4613  00FDB4  6D                 	db	109	;'m'
  4614  00FDB5  3F                 	db	63	;'?'
  4615  00FDB6  00                 	db	0
  4616  00FDB7                     STR_303:
  4617  00FDB7  77                 	db	119	;'w'
  4618  00FDB8  69                 	db	105	;'i'
  4619  00FDB9  74                 	db	116	;'t'
  4620  00FDBA  68                 	db	104	;'h'
  4621  00FDBB  6D                 	db	109	;'m'
  4622  00FDBC  61                 	db	97	;'a'
  4623  00FDBD  72                 	db	114	;'r'
  4624  00FDBE  6B                 	db	107	;'k'
  4625  00FDBF  62                 	db	98	;'b'
  4626  00FDC0  69                 	db	105	;'i'
  4627  00FDC1  74                 	db	116	;'t'
  4628  00FDC2  00                 	db	0
  4629  00FDC3                     STR_9:
  4630  00FDC3  53                 	db	83	;'S'
  4631  00FDC4  74                 	db	116	;'t'
  4632  00FDC5  61                 	db	97	;'a'
  4633  00FDC6  72                 	db	114	;'r'
  4634  00FDC7  74                 	db	116	;'t'
  4635  00FDC8  69                 	db	105	;'i'
  4636  00FDC9  6E                 	db	110	;'n'
  4637  00FDCA  67                 	db	103	;'g'
  4638  00FDCB  2E                 	db	46
  4639  00FDCC  2E                 	db	46
  4640  00FDCD  2E                 	db	46
  4641  00FDCE  00                 	db	0
  4642  00FDCF                     STR_59:
  4643  00FDCF  44                 	db	68	;'D'
  4644  00FDD0  65                 	db	101	;'e'
  4645  00FDD1  76                 	db	118	;'v'
  4646  00FDD2  69                 	db	105	;'i'
  4647  00FDD3  63                 	db	99	;'c'
  4648  00FDD4  65                 	db	101	;'e'
  4649  00FDD5  73                 	db	115	;'s'
  4650  00FDD6  3A                 	db	58	;':'
  4651  00FDD7  0D                 	db	13
  4652  00FDD8  0A                 	db	10
  4653  00FDD9  00                 	db	0
  4654  00FDDA                     STR_239:
  4655  00FDDA  41                 	db	65	;'A'
  4656  00FDDB  63                 	db	99	;'c'
  4657  00FDDC  74                 	db	116	;'t'
  4658  00FDDD  69                 	db	105	;'i'
  4659  00FDDE  6F                 	db	111	;'o'
  4660  00FDDF  6E                 	db	110	;'n'
  4661  00FDE0  73                 	db	115	;'s'
  4662  00FDE1  3A                 	db	58	;':'
  4663  00FDE2  0D                 	db	13
  4664  00FDE3  0A                 	db	10
  4665  00FDE4  00                 	db	0
  4666  00FDE5                     STR_275:
  4667  00FDE5  43                 	db	67	;'C'
  4668  00FDE6  6F                 	db	111	;'o'
  4669  00FDE7  6E                 	db	110	;'n'
  4670  00FDE8  74                 	db	116	;'t'
  4671  00FDE9  72                 	db	114	;'r'
  4672  00FDEA  61                 	db	97	;'a'
  4673  00FDEB  73                 	db	115	;'s'
  4674  00FDEC  74                 	db	116	;'t'
  4675  00FDED  0D                 	db	13
  4676  00FDEE  0A                 	db	10
  4677  00FDEF  00                 	db	0
  4678  00FDF0                     STR_288:
  4679  00FDF0  4A                 	db	74	;'J'
  4680  00FDF1  6F                 	db	111	;'o'
  4681  00FDF2  65                 	db	101	;'e'
  4682  00FDF3  73                 	db	115	;'s'
  4683  00FDF4  20                 	db	32
  4684  00FDF5  52                 	db	82	;'R'
  4685  00FDF6  6F                 	db	111	;'o'
  4686  00FDF7  6F                 	db	111	;'o'
  4687  00FDF8  6D                 	db	109	;'m'
  4688  00FDF9  3F                 	db	63	;'?'
  4689  00FDFA  00                 	db	0
  4690  00FDFB                     STR_298:
  4691  00FDFB  63                 	db	99	;'c'
  4692  00FDFC  68                 	db	104	;'h'
  4693  00FDFD  61                 	db	97	;'a'
  4694  00FDFE  6E                 	db	110	;'n'
  4695  00FDFF  67                 	db	103	;'g'
  4696  00FE00  65                 	db	101	;'e'
  4697  00FE01  62                 	db	98	;'b'
  4698  00FE02  61                 	db	97	;'a'
  4699  00FE03  75                 	db	117	;'u'
  4700  00FE04  64                 	db	100	;'d'
  4701  00FE05  00                 	db	0
  4702  00FE06                     STR_68:
  4703  00FE06  6C                 	db	108	;'l'
  4704  00FE07  69                 	db	105	;'i'
  4705  00FE08  76                 	db	118	;'v'
  4706  00FE09  69                 	db	105	;'i'
  4707  00FE0A  6E                 	db	110	;'n'
  4708  00FE0B  67                 	db	103	;'g'
  4709  00FE0C  72                 	db	114	;'r'
  4710  00FE0D  6F                 	db	111	;'o'
  4711  00FE0E  6F                 	db	111	;'o'
  4712  00FE0F  6D                 	db	109	;'m'
  4713  00FE10  00                 	db	0
  4714  00FE11                     STR_11:
  4715  00FE11  53                 	db	83	;'S'
  4716  00FE12  74                 	db	116	;'t'
  4717  00FE13  61                 	db	97	;'a'
  4718  00FE14  72                 	db	114	;'r'
  4719  00FE15  74                 	db	116	;'t'
  4720  00FE16  69                 	db	105	;'i'
  4721  00FE17  6E                 	db	110	;'n'
  4722  00FE18  67                 	db	103	;'g'
  4723  00FE19  2E                 	db	46
  4724  00FE1A  2E                 	db	46
  4725  00FE1B  00                 	db	0
  4726  00FE1C                     STR_119:
  4727  00FE1C  73                 	db	115	;'s'
  4728  00FE1D  68                 	db	104	;'h'
  4729  00FE1E  61                 	db	97	;'a'
  4730  00FE1F  6B                 	db	107	;'k'
  4731  00FE20  65                 	db	101	;'e'
  4732  00FE21  72                 	db	114	;'r'
  4733  00FE22  0D                 	db	13
  4734  00FE23  0A                 	db	10
  4735  00FE24  0A                 	db	10
  4736  00FE25  00                 	db	0
  4737  00FE26                     STR_271:
  4738  00FE26  42                 	db	66	;'B'
  4739  00FE27  65                 	db	101	;'e'
  4740  00FE28  64                 	db	100	;'d'
  4741  00FE29  72                 	db	114	;'r'
  4742  00FE2A  6F                 	db	111	;'o'
  4743  00FE2B  6F                 	db	111	;'o'
  4744  00FE2C  6D                 	db	109	;'m'
  4745  00FE2D  0D                 	db	13
  4746  00FE2E  0A                 	db	10
  4747  00FE2F  00                 	db	0
  4748  00FE30                     STR_240:
  4749  00FE30  42                 	db	66	;'B'
  4750  00FE31  61                 	db	97	;'a'
  4751  00FE32  74                 	db	116	;'t'
  4752  00FE33  74                 	db	116	;'t'
  4753  00FE34  65                 	db	101	;'e'
  4754  00FE35  72                 	db	114	;'r'
  4755  00FE36  79                 	db	121	;'y'
  4756  00FE37  0D                 	db	13
  4757  00FE38  0A                 	db	10
  4758  00FE39  00                 	db	0
  4759  00FE3A                     STR_177:
  4760  00FE3A  52                 	db	82	;'R'
  4761  00FE3B  65                 	db	101	;'e'
  4762  00FE3C  64                 	db	100	;'d'
  4763  00FE3D  20                 	db	32
  4764  00FE3E  4C                 	db	76	;'L'
  4765  00FE3F  45                 	db	69	;'E'
  4766  00FE40  44                 	db	68	;'D'
  4767  00FE41  3D                 	db	61	;'='
  4768  00FE42  23                 	db	35
  4769  00FE43  00                 	db	0
  4770  00FE44                     STR_194:
  4771  00FE44  43                 	db	67	;'C'
  4772  00FE45  6F                 	db	111	;'o'
  4773  00FE46  6E                 	db	110	;'n'
  4774  00FE47  74                 	db	116	;'t'
  4775  00FE48  72                 	db	114	;'r'
  4776  00FE49  61                 	db	97	;'a'
  4777  00FE4A  73                 	db	115	;'s'
  4778  00FE4B  74                 	db	116	;'t'
  4779  00FE4C  23                 	db	35
  4780  00FE4D  00                 	db	0
  4781  00FE4E                     STR_176:
  4782  00FE4E  43                 	db	67	;'C'
  4783  00FE4F  6F                 	db	111	;'o'
  4784  00FE50  6D                 	db	109	;'m'
  4785  00FE51  6D                 	db	109	;'m'
  4786  00FE52  61                 	db	97	;'a'
  4787  00FE53  6E                 	db	110	;'n'
  4788  00FE54  64                 	db	100	;'d'
  4789  00FE55  73                 	db	115	;'s'
  4790  00FE56  3A                 	db	58	;':'
  4791  00FE57  00                 	db	0
  4792  00FE58                     STR_290:
  4793  00FE58  43                 	db	67	;'C'
  4794  00FE59  6F                 	db	111	;'o'
  4795  00FE5A  6E                 	db	110	;'n'
  4796  00FE5B  74                 	db	116	;'t'
  4797  00FE5C  72                 	db	114	;'r'
  4798  00FE5D  61                 	db	97	;'a'
  4799  00FE5E  73                 	db	115	;'s'
  4800  00FE5F  74                 	db	116	;'t'
  4801  00FE60  3F                 	db	63	;'?'
  4802  00FE61  00                 	db	0
  4803  00FE62                     STR_130:
  4804  00FE62  63                 	db	99	;'c'
  4805  00FE63  68                 	db	104	;'h'
  4806  00FE64  72                 	db	114	;'r'
  4807  00FE65  69                 	db	105	;'i'
  4808  00FE66  73                 	db	115	;'s'
  4809  00FE67  74                 	db	116	;'t'
  4810  00FE68  6D                 	db	109	;'m'
  4811  00FE69  61                 	db	97	;'a'
  4812  00FE6A  73                 	db	115	;'s'
  4813  00FE6B  00                 	db	0
  4814  00FE6C                     STR_152:
  4815  00FE6C  58                 	db	88	;'X'
  4816  00FE6D  4D                 	db	77	;'M'
  4817  00FE6E  41                 	db	65	;'A'
  4818  00FE6F  53                 	db	83	;'S'
  4819  00FE70  20                 	db	32
  4820  00FE71  4D                 	db	77	;'M'
  4821  00FE72  65                 	db	101	;'e'
  4822  00FE73  6E                 	db	110	;'n'
  4823  00FE74  75                 	db	117	;'u'
  4824  00FE75  00                 	db	0
  4825  00FE76                     STR_281:
  4826  00FE76  48                 	db	72	;'H'
  4827  00FE77  65                 	db	101	;'e'
  4828  00FE78  6C                 	db	108	;'l'
  4829  00FE79  70                 	db	112	;'p'
  4830  00FE7A  20                 	db	32
  4831  00FE7B  4D                 	db	77	;'M'
  4832  00FE7C  65                 	db	101	;'e'
  4833  00FE7D  6E                 	db	110	;'n'
  4834  00FE7E  75                 	db	117	;'u'
  4835  00FE7F  00                 	db	0
  4836  00FE80                     STR_18:
  4837  00FE80  45                 	db	69	;'E'
  4838  00FE81  6E                 	db	110	;'n'
  4839  00FE82  74                 	db	116	;'t'
  4840  00FE83  65                 	db	101	;'e'
  4841  00FE84  72                 	db	114	;'r'
  4842  00FE85  20                 	db	32
  4843  00FE86  27                 	db	39
  4844  00FE87  3F                 	db	63	;'?'
  4845  00FE88  27                 	db	39
  4846  00FE89  00                 	db	0
  4847  00FE8A                     STR_10:
  4848  00FE8A  53                 	db	83	;'S'
  4849  00FE8B  74                 	db	116	;'t'
  4850  00FE8C  61                 	db	97	;'a'
  4851  00FE8D  72                 	db	114	;'r'
  4852  00FE8E  74                 	db	116	;'t'
  4853  00FE8F  69                 	db	105	;'i'
  4854  00FE90  6E                 	db	110	;'n'
  4855  00FE91  67                 	db	103	;'g'
  4856  00FE92  2E                 	db	46
  4857  00FE93  00                 	db	0
  4858  00FE94                     STR_263:
  4859  00FE94  4C                 	db	76	;'L'
  4860  00FE95  69                 	db	105	;'i'
  4861  00FE96  67                 	db	103	;'g'
  4862  00FE97  68                 	db	104	;'h'
  4863  00FE98  74                 	db	116	;'t'
  4864  00FE99  0D                 	db	13
  4865  00FE9A  0A                 	db	10
  4866  00FE9B  0A                 	db	10
  4867  00FE9C  00                 	db	0
  4868  00FE9D                     STR_65:
  4869  00FE9D  44                 	db	68	;'D'
  4870  00FE9E  65                 	db	101	;'e'
  4871  00FE9F  76                 	db	118	;'v'
  4872  00FEA0  69                 	db	105	;'i'
  4873  00FEA1  63                 	db	99	;'c'
  4874  00FEA2  65                 	db	101	;'e'
  4875  00FEA3  73                 	db	115	;'s'
  4876  00FEA4  3A                 	db	58	;':'
  4877  00FEA5  00                 	db	0
  4878  00FEA6                     STR_286:
  4879  00FEA6  42                 	db	66	;'B'
  4880  00FEA7  65                 	db	101	;'e'
  4881  00FEA8  64                 	db	100	;'d'
  4882  00FEA9  72                 	db	114	;'r'
  4883  00FEAA  6F                 	db	111	;'o'
  4884  00FEAB  6F                 	db	111	;'o'
  4885  00FEAC  6D                 	db	109	;'m'
  4886  00FEAD  3F                 	db	63	;'?'
  4887  00FEAE  00                 	db	0
  4888  00FEAF                     STR_45:
  4889  00FEAF  4C                 	db	76	;'L'
  4890  00FEB0  45                 	db	69	;'E'
  4891  00FEB1  44                 	db	68	;'D'
  4892  00FEB2  30                 	db	48	;'0'
  4893  00FEB3  20                 	db	32
  4894  00FEB4  4F                 	db	79	;'O'
  4895  00FEB5  66                 	db	102	;'f'
  4896  00FEB6  66                 	db	102	;'f'
  4897  00FEB7  00                 	db	0
  4898  00FEB8                     STR_54:
  4899  00FEB8  4C                 	db	76	;'L'
  4900  00FEB9  45                 	db	69	;'E'
  4901  00FEBA  44                 	db	68	;'D'
  4902  00FEBB  31                 	db	49	;'1'
  4903  00FEBC  20                 	db	32
  4904  00FEBD  4F                 	db	79	;'O'
  4905  00FEBE  66                 	db	102	;'f'
  4906  00FEBF  66                 	db	102	;'f'
  4907  00FEC0  00                 	db	0
  4908  00FEC1                     STR_44:
  4909  00FEC1  6C                 	db	108	;'l'
  4910  00FEC2  65                 	db	101	;'e'
  4911  00FEC3  64                 	db	100	;'d'
  4912  00FEC4  30                 	db	48	;'0'
  4913  00FEC5  3D                 	db	61	;'='
  4914  00FEC6  6F                 	db	111	;'o'
  4915  00FEC7  66                 	db	102	;'f'
  4916  00FEC8  66                 	db	102	;'f'
  4917  00FEC9  00                 	db	0
  4918  00FECA                     STR_53:
  4919  00FECA  6C                 	db	108	;'l'
  4920  00FECB  65                 	db	101	;'e'
  4921  00FECC  64                 	db	100	;'d'
  4922  00FECD  31                 	db	49	;'1'
  4923  00FECE  3D                 	db	61	;'='
  4924  00FECF  6F                 	db	111	;'o'
  4925  00FED0  66                 	db	102	;'f'
  4926  00FED1  66                 	db	102	;'f'
  4927  00FED2  00                 	db	0
  4928  00FED3                     STR_178:
  4929  00FED3  63                 	db	99	;'c'
  4930  00FED4  6F                 	db	111	;'o'
  4931  00FED5  6E                 	db	110	;'n'
  4932  00FED6  74                 	db	116	;'t'
  4933  00FED7  72                 	db	114	;'r'
  4934  00FED8  61                 	db	97	;'a'
  4935  00FED9  73                 	db	115	;'s'
  4936  00FEDA  74                 	db	116	;'t'
  4937  00FEDB  00                 	db	0
  4938  00FEDC                     STR_213:
  4939  00FEDC  41                 	db	65	;'A'
  4940  00FEDD  44                 	db	68	;'D'
  4941  00FEDE  43                 	db	67	;'C'
  4942  00FEDF  20                 	db	32
  4943  00FEE0  4D                 	db	77	;'M'
  4944  00FEE1  65                 	db	101	;'e'
  4945  00FEE2  6E                 	db	110	;'n'
  4946  00FEE3  75                 	db	117	;'u'
  4947  00FEE4  00                 	db	0
  4948  00FEE5                     STR_246:
  4949  00FEE5  52                 	db	82	;'R'
  4950  00FEE6  54                 	db	84	;'T'
  4951  00FEE7  43                 	db	67	;'C'
  4952  00FEE8  20                 	db	32
  4953  00FEE9  4D                 	db	77	;'M'
  4954  00FEEA  65                 	db	101	;'e'
  4955  00FEEB  6E                 	db	110	;'n'
  4956  00FEEC  75                 	db	117	;'u'
  4957  00FEED  00                 	db	0
  4958  00FEEE                     STR_64:
  4959  00FEEE  4C                 	db	76	;'L'
  4960  00FEEF  45                 	db	69	;'E'
  4961  00FEF0  44                 	db	68	;'D'
  4962  00FEF1  20                 	db	32
  4963  00FEF2  4D                 	db	77	;'M'
  4964  00FEF3  65                 	db	101	;'e'
  4965  00FEF4  6E                 	db	110	;'n'
  4966  00FEF5  75                 	db	117	;'u'
  4967  00FEF6  00                 	db	0
  4968  00FEF7                     STR_8:
  4969  00FEF7  53                 	db	83	;'S'
  4970  00FEF8  74                 	db	116	;'t'
  4971  00FEF9  61                 	db	97	;'a'
  4972  00FEFA  72                 	db	114	;'r'
  4973  00FEFB  74                 	db	116	;'t'
  4974  00FEFC  69                 	db	105	;'i'
  4975  00FEFD  6E                 	db	110	;'n'
  4976  00FEFE  67                 	db	103	;'g'
  4977  00FEFF  00                 	db	0
  4978  00FF00                     STR_61:
  4979  00FF00  4C                 	db	76	;'L'
  4980  00FF01  45                 	db	69	;'E'
  4981  00FF02  44                 	db	68	;'D'
  4982  00FF03  31                 	db	49	;'1'
  4983  00FF04  0D                 	db	13
  4984  00FF05  0A                 	db	10
  4985  00FF06  0A                 	db	10
  4986  00FF07  00                 	db	0
  4987  00FF08                     STR_84:
  4988  00FF08  6C                 	db	108	;'l'
  4989  00FF09  69                 	db	105	;'i'
  4990  00FF0A  67                 	db	103	;'g'
  4991  00FF0B  68                 	db	104	;'h'
  4992  00FF0C  74                 	db	116	;'t'
  4993  00FF0D  0D                 	db	13
  4994  00FF0E  0A                 	db	10
  4995  00FF0F  00                 	db	0
  4996  00FF10                     STR_297:
  4997  00FF10  73                 	db	115	;'s'
  4998  00FF11  65                 	db	101	;'e'
  4999  00FF12  74                 	db	116	;'t'
  5000  00FF13  62                 	db	98	;'b'
  5001  00FF14  61                 	db	97	;'a'
  5002  00FF15  75                 	db	117	;'u'
  5003  00FF16  64                 	db	100	;'d'
  5004  00FF17  00                 	db	0
  5005  00FF18                     STR_93:
  5006  00FF18  62                 	db	98	;'b'
  5007  00FF19  65                 	db	101	;'e'
  5008  00FF1A  64                 	db	100	;'d'
  5009  00FF1B  72                 	db	114	;'r'
  5010  00FF1C  6F                 	db	111	;'o'
  5011  00FF1D  6F                 	db	111	;'o'
  5012  00FF1E  6D                 	db	109	;'m'
  5013  00FF1F  00                 	db	0
  5014  00FF20                     STR_42:
  5015  00FF20  4C                 	db	76	;'L'
  5016  00FF21  45                 	db	69	;'E'
  5017  00FF22  44                 	db	68	;'D'
  5018  00FF23  30                 	db	48	;'0'
  5019  00FF24  20                 	db	32
  5020  00FF25  4F                 	db	79	;'O'
  5021  00FF26  6E                 	db	110	;'n'
  5022  00FF27  00                 	db	0
  5023  00FF28                     STR_51:
  5024  00FF28  4C                 	db	76	;'L'
  5025  00FF29  45                 	db	69	;'E'
  5026  00FF2A  44                 	db	68	;'D'
  5027  00FF2B  31                 	db	49	;'1'
  5028  00FF2C  20                 	db	32
  5029  00FF2D  4F                 	db	79	;'O'
  5030  00FF2E  6E                 	db	110	;'n'
  5031  00FF2F  00                 	db	0
  5032  00FF30                     STR_41:
  5033  00FF30  6C                 	db	108	;'l'
  5034  00FF31  65                 	db	101	;'e'
  5035  00FF32  64                 	db	100	;'d'
  5036  00FF33  30                 	db	48	;'0'
  5037  00FF34  3D                 	db	61	;'='
  5038  00FF35  6F                 	db	111	;'o'
  5039  00FF36  6E                 	db	110	;'n'
  5040  00FF37  00                 	db	0
  5041  00FF38                     STR_50:
  5042  00FF38  6C                 	db	108	;'l'
  5043  00FF39  65                 	db	101	;'e'
  5044  00FF3A  64                 	db	100	;'d'
  5045  00FF3B  31                 	db	49	;'1'
  5046  00FF3C  3D                 	db	61	;'='
  5047  00FF3D  6F                 	db	111	;'o'
  5048  00FF3E  6E                 	db	110	;'n'
  5049  00FF3F  00                 	db	0
  5050  00FF40                     STR_296:
  5051  00FF40  72                 	db	114	;'r'
  5052  00FF41  65                 	db	101	;'e'
  5053  00FF42  73                 	db	115	;'s'
  5054  00FF43  65                 	db	101	;'e'
  5055  00FF44  74                 	db	116	;'t'
  5056  00FF45  74                 	db	116	;'t'
  5057  00FF46  6F                 	db	111	;'o'
  5058  00FF47  00                 	db	0
  5059  00FF48                     STR_248:
  5060  00FF48  42                 	db	66	;'B'
  5061  00FF49  61                 	db	97	;'a'
  5062  00FF4A  74                 	db	116	;'t'
  5063  00FF4B  74                 	db	116	;'t'
  5064  00FF4C  65                 	db	101	;'e'
  5065  00FF4D  72                 	db	114	;'r'
  5066  00FF4E  79                 	db	121	;'y'
  5067  00FF4F  00                 	db	0
  5068  00FF50                     STR_218:
  5069  00FF50  62                 	db	98	;'b'
  5070  00FF51  61                 	db	97	;'a'
  5071  00FF52  74                 	db	116	;'t'
  5072  00FF53  74                 	db	116	;'t'
  5073  00FF54  65                 	db	101	;'e'
  5074  00FF55  72                 	db	114	;'r'
  5075  00FF56  79                 	db	121	;'y'
  5076  00FF57  00                 	db	0
  5077  00FF58                     STR_277:
  5078  00FF58  52                 	db	82	;'R'
  5079  00FF59  54                 	db	84	;'T'
  5080  00FF5A  43                 	db	67	;'C'
  5081  00FF5B  0D                 	db	13
  5082  00FF5C  0A                 	db	10
  5083  00FF5D  0A                 	db	10
  5084  00FF5E  00                 	db	0
  5085  00FF5F                     STR_85:
  5086  00FF5F  66                 	db	102	;'f'
  5087  00FF60  61                 	db	97	;'a'
  5088  00FF61  6E                 	db	110	;'n'
  5089  00FF62  0D                 	db	13
  5090  00FF63  0A                 	db	10
  5091  00FF64  0A                 	db	10
  5092  00FF65  00                 	db	0
  5093  00FF66                     STR_242:
  5094  00FF66  53                 	db	83	;'S'
  5095  00FF67  65                 	db	101	;'e'
  5096  00FF68  74                 	db	116	;'t'
  5097  00FF69  0D                 	db	13
  5098  00FF6A  0A                 	db	10
  5099  00FF6B  0A                 	db	10
  5100  00FF6C  00                 	db	0
  5101  00FF6D                     STR_60:
  5102  00FF6D  4C                 	db	76	;'L'
  5103  00FF6E  45                 	db	69	;'E'
  5104  00FF6F  44                 	db	68	;'D'
  5105  00FF70  30                 	db	48	;'0'
  5106  00FF71  0D                 	db	13
  5107  00FF72  0A                 	db	10
  5108  00FF73  00                 	db	0
  5109  00FF74                     STR_241:
  5110  00FF74  52                 	db	82	;'R'
  5111  00FF75  65                 	db	101	;'e'
  5112  00FF76  61                 	db	97	;'a'
  5113  00FF77  64                 	db	100	;'d'
  5114  00FF78  0D                 	db	13
  5115  00FF79  0A                 	db	10
  5116  00FF7A  00                 	db	0
  5117  00FF7B                     STR_158:
  5118  00FF7B  72                 	db	114	;'r'
  5119  00FF7C  65                 	db	101	;'e'
  5120  00FF7D  64                 	db	100	;'d'
  5121  00FF7E  6C                 	db	108	;'l'
  5122  00FF7F  65                 	db	101	;'e'
  5123  00FF80  64                 	db	100	;'d'
  5124  00FF81  00                 	db	0
  5125  00FF82                     STR_127:
  5126  00FF82  53                 	db	83	;'S'
  5127  00FF83  68                 	db	104	;'h'
  5128  00FF84  61                 	db	97	;'a'
  5129  00FF85  6B                 	db	107	;'k'
  5130  00FF86  65                 	db	101	;'e'
  5131  00FF87  72                 	db	114	;'r'
  5132  00FF88  00                 	db	0
  5133  00FF89                     STR_306:
  5134  00FF89  62                 	db	98	;'b'
  5135  00FF8A  61                 	db	97	;'a'
  5136  00FF8B  75                 	db	117	;'u'
  5137  00FF8C  64                 	db	100	;'d'
  5138  00FF8D  69                 	db	105	;'i'
  5139  00FF8E  73                 	db	115	;'s'
  5140  00FF8F  00                 	db	0
  5141  00FF90                     STR_276:
  5142  00FF90  41                 	db	65	;'A'
  5143  00FF91  44                 	db	68	;'D'
  5144  00FF92  43                 	db	67	;'C'
  5145  00FF93  0D                 	db	13
  5146  00FF94  0A                 	db	10
  5147  00FF95  00                 	db	0
  5148  00FF96                     STR_118:
  5149  00FF96  66                 	db	102	;'f'
  5150  00FF97  61                 	db	97	;'a'
  5151  00FF98  6E                 	db	110	;'n'
  5152  00FF99  0D                 	db	13
  5153  00FF9A  0A                 	db	10
  5154  00FF9B  00                 	db	0
  5155  00FF9C                     STR_129:
  5156  00FF9C  77                 	db	119	;'w'
  5157  00FF9D  68                 	db	104	;'h'
  5158  00FF9E  69                 	db	105	;'i'
  5159  00FF9F  74                 	db	116	;'t'
  5160  00FFA0  65                 	db	101	;'e'
  5161  00FFA1  00                 	db	0
  5162  00FFA2                     STR_128:
  5163  00FFA2  63                 	db	99	;'c'
  5164  00FFA3  6F                 	db	111	;'o'
  5165  00FFA4  6C                 	db	108	;'l'
  5166  00FFA5  6F                 	db	111	;'o'
  5167  00FFA6  72                 	db	114	;'r'
  5168  00FFA7  00                 	db	0
  5169  00FFA8                     STR_91:
  5170  00FFA8  4C                 	db	76	;'L'
  5171  00FFA9  69                 	db	105	;'i'
  5172  00FFAA  67                 	db	103	;'g'
  5173  00FFAB  68                 	db	104	;'h'
  5174  00FFAC  74                 	db	116	;'t'
  5175  00FFAD  00                 	db	0
  5176  00FFAE                     STR_95:
  5177  00FFAE  6C                 	db	108	;'l'
  5178  00FFAF  69                 	db	105	;'i'
  5179  00FFB0  67                 	db	103	;'g'
  5180  00FFB1  68                 	db	104	;'h'
  5181  00FFB2  74                 	db	116	;'t'
  5182  00FFB3  00                 	db	0
  5183  00FFB4                     STR_210:
  5184  00FFB4  30                 	db	48	;'0'
  5185  00FFB5  0D                 	db	13
  5186  00FFB6  0A                 	db	10
  5187  00FFB7  0A                 	db	10
  5188  00FFB8  00                 	db	0
  5189  00FFB9                     STR_66:
  5190  00FFB9  4C                 	db	76	;'L'
  5191  00FFBA  45                 	db	69	;'E'
  5192  00FFBB  44                 	db	68	;'D'
  5193  00FFBC  30                 	db	48	;'0'
  5194  00FFBD  00                 	db	0
  5195  00FFBE                     STR_38:
  5196  00FFBE  6C                 	db	108	;'l'
  5197  00FFBF  65                 	db	101	;'e'
  5198  00FFC0  64                 	db	100	;'d'
  5199  00FFC1  30                 	db	48	;'0'
  5200  00FFC2  00                 	db	0
  5201  00FFC3                     STR_67:
  5202  00FFC3  4C                 	db	76	;'L'
  5203  00FFC4  45                 	db	69	;'E'
  5204  00FFC5  44                 	db	68	;'D'
  5205  00FFC6  31                 	db	49	;'1'
  5206  00FFC7  00                 	db	0
  5207  00FFC8                     STR_47:
  5208  00FFC8  6C                 	db	108	;'l'
  5209  00FFC9  65                 	db	101	;'e'
  5210  00FFCA  64                 	db	100	;'d'
  5211  00FFCB  31                 	db	49	;'1'
  5212  00FFCC  00                 	db	0
  5213  00FFCD                     STR_291:
  5214  00FFCD  41                 	db	65	;'A'
  5215  00FFCE  44                 	db	68	;'D'
  5216  00FFCF  43                 	db	67	;'C'
  5217  00FFD0  3F                 	db	63	;'?'
  5218  00FFD1  00                 	db	0
  5219  00FFD2                     STR_292:
  5220  00FFD2  52                 	db	82	;'R'
  5221  00FFD3  54                 	db	84	;'T'
  5222  00FFD4  43                 	db	67	;'C'
  5223  00FFD5  3F                 	db	63	;'?'
  5224  00FFD6  00                 	db	0
  5225  00FFD7                     STR_249:
  5226  00FFD7  52                 	db	82	;'R'
  5227  00FFD8  65                 	db	101	;'e'
  5228  00FFD9  61                 	db	97	;'a'
  5229  00FFDA  64                 	db	100	;'d'
  5230  00FFDB  00                 	db	0
  5231  00FFDC                     STR_221:
  5232  00FFDC  72                 	db	114	;'r'
  5233  00FFDD  65                 	db	101	;'e'
  5234  00FFDE  61                 	db	97	;'a'
  5235  00FFDF  64                 	db	100	;'d'
  5236  00FFE0  00                 	db	0
  5237  00FFE1                     STR_195:
  5238  00FFE1  61                 	db	97	;'a'
  5239  00FFE2  64                 	db	100	;'d'
  5240  00FFE3  63                 	db	99	;'c'
  5241  00FFE4  00                 	db	0
  5242  00FFE5                     STR_216:
  5243  00FFE5  72                 	db	114	;'r'
  5244  00FFE6  74                 	db	116	;'t'
  5245  00FFE7  63                 	db	99	;'c'
  5246  00FFE8  00                 	db	0
  5247  00FFE9                     STR_251:
  5248  00FFE9  6A                 	db	106	;'j'
  5249  00FFEA  6F                 	db	111	;'o'
  5250  00FFEB  65                 	db	101	;'e'
  5251  00FFEC  00                 	db	0
  5252  00FFED                     STR_92:
  5253  00FFED  46                 	db	70	;'F'
  5254  00FFEE  61                 	db	97	;'a'
  5255  00FFEF  6E                 	db	110	;'n'
  5256  00FFF0  00                 	db	0
  5257  00FFF1                     STR_96:
  5258  00FFF1  66                 	db	102	;'f'
  5259  00FFF2  61                 	db	97	;'a'
  5260  00FFF3  6E                 	db	110	;'n'
  5261  00FFF4  00                 	db	0
  5262  00FFF5                     STR_250:
  5263  00FFF5  53                 	db	83	;'S'
  5264  00FFF6  65                 	db	101	;'e'
  5265  00FFF7  74                 	db	116	;'t'
  5266  00FFF8  00                 	db	0
  5267  00FFF9                     STR_228:
  5268  00FFF9  73                 	db	115	;'s'
  5269  00FFFA  65                 	db	101	;'e'
  5270  00FFFB  74                 	db	116	;'t'
  5271  00FFFC  00                 	db	0
  5272  00FFFD                     STR_1:
  5273  00FFFD  0D                 	db	13
  5274  00FFFE  00                 	db	0
  5275  00FFFF                     __end_of__stringdata:
  5276                           	opt stack 0
  5277                           
  5278                           ; #config settings
  5279  00FFFF  00                 	db	0	; dummy byte at the end
  5280  0000                     
  5281                           	psect	cinit
  5282  016C70                     __pcinit:
  5283                           	opt stack 0
  5284  016C70                     start_initialization:
  5285                           	opt stack 0
  5286  016C70                     __initialization:
  5287                           	opt stack 0
  5288                           
  5289                           ; Clear objects allocated to BANK4 (100 bytes)
  5290  016C70  EE04  F000         	lfsr	0,__pbssBANK4
  5291  016C74  0E64               	movlw	100
  5292  016C76                     clear_0:
  5293  016C76  6AEE               	clrf	postinc0,c
  5294  016C78  06E8               	decf	wreg,f,c
  5295  016C7A  E1FD               	bnz	clear_0
  5296                           
  5297                           ; Clear objects allocated to BANK3 (200 bytes)
  5298  016C7C  EE03  F000         	lfsr	0,__pbssBANK3
  5299  016C80  0EC8               	movlw	200
  5300  016C82                     clear_1:
  5301  016C82  6AEE               	clrf	postinc0,c
  5302  016C84  06E8               	decf	wreg,f,c
  5303  016C86  E1FD               	bnz	clear_1
  5304                           
  5305                           ; Clear objects allocated to BANK2 (16 bytes)
  5306  016C88  EE02  F043         	lfsr	0,__pbssBANK2
  5307  016C8C  0E10               	movlw	16
  5308  016C8E                     clear_2:
  5309  016C8E  6AEE               	clrf	postinc0,c
  5310  016C90  06E8               	decf	wreg,f,c
  5311  016C92  E1FD               	bnz	clear_2
  5312                           
  5313                           ; Clear objects allocated to BANK1 (94 bytes)
  5314  016C94  EE01  F08C         	lfsr	0,__pbssBANK1
  5315  016C98  0E5E               	movlw	94
  5316  016C9A                     clear_3:
  5317  016C9A  6AEE               	clrf	postinc0,c
  5318  016C9C  06E8               	decf	wreg,f,c
  5319  016C9E  E1FD               	bnz	clear_3
  5320                           
  5321                           ; Clear objects allocated to BANK0 (34 bytes)
  5322  016CA0  EE00  F0D8         	lfsr	0,__pbssBANK0
  5323  016CA4  0E22               	movlw	34
  5324  016CA6                     clear_4:
  5325  016CA6  6AEE               	clrf	postinc0,c
  5326  016CA8  06E8               	decf	wreg,f,c
  5327  016CAA  E1FD               	bnz	clear_4
  5328                           
  5329                           ; Clear objects allocated to COMRAM (32 bytes)
  5330  016CAC  EE00  F027         	lfsr	0,__pbssCOMRAM
  5331  016CB0  0E20               	movlw	32
  5332  016CB2                     clear_5:
  5333  016CB2  6AEE               	clrf	postinc0,c
  5334  016CB4  06E8               	decf	wreg,f,c
  5335  016CB6  E1FD               	bnz	clear_5
  5336                           
  5337                           ; Initialize objects allocated to BANK3 (20 bytes)
  5338                           ; load TBLPTR registers with __pidataBANK3
  5339  016CB8  0E1A               	movlw	low __pidataBANK3
  5340  016CBA  6EF6               	movwf	tblptrl,c
  5341  016CBC  0E7C               	movlw	high __pidataBANK3
  5342  016CBE  6EF7               	movwf	tblptrh,c
  5343  016CC0  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  5344  016CC2  6EF8               	movwf	tblptru,c
  5345  016CC4  EE03  F0C8         	lfsr	0,__pdataBANK3
  5346  016CC8  EE10 F014          	lfsr	1,20
  5347  016CCC                     copy_data0:
  5348  016CCC  0009               	tblrd		*+
  5349  016CCE  CFF5 FFEE          	movff	tablat,postinc0
  5350  016CD2  50E5               	movf	postdec1,w,c
  5351  016CD4  50E1               	movf	fsr1l,w,c
  5352  016CD6  E1FA               	bnz	copy_data0
  5353                           
  5354                           ; Initialize objects allocated to BANK1 (8 bytes)
  5355                           ; load TBLPTR registers with __pidataBANK1
  5356  016CD8  0EA0               	movlw	low __pidataBANK1
  5357  016CDA  6EF6               	movwf	tblptrl,c
  5358  016CDC  0E7C               	movlw	high __pidataBANK1
  5359  016CDE  6EF7               	movwf	tblptrh,c
  5360  016CE0  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  5361  016CE2  6EF8               	movwf	tblptru,c
  5362  016CE4  EE01  F0EA         	lfsr	0,__pdataBANK1
  5363  016CE8  EE10 F008          	lfsr	1,8
  5364  016CEC                     copy_data1:
  5365  016CEC  0009               	tblrd		*+
  5366  016CEE  CFF5 FFEE          	movff	tablat,postinc0
  5367  016CF2  50E5               	movf	postdec1,w,c
  5368  016CF4  50E1               	movf	fsr1l,w,c
  5369  016CF6  E1FA               	bnz	copy_data1
  5370  016CF8                     end_of_initialization:
  5371                           	opt stack 0
  5372  016CF8                     __end_of__initialization:
  5373                           	opt stack 0
  5374  016CF8  0100               	movlb	0
  5375  016CFA  EF24  F0A0         	goto	_main	;jump to C main() function
  5376                           tblptru	equ	0xFF8
  5377                           tblptrh	equ	0xFF7
  5378                           tblptrl	equ	0xFF6
  5379                           tablat	equ	0xFF5
  5380                           postinc0	equ	0xFEE
  5381                           wreg	equ	0xFE8
  5382                           postdec1	equ	0xFE5
  5383                           fsr1l	equ	0xFE1
  5384                           
  5385                           	psect	bssCOMRAM
  5386  000027                     __pbssCOMRAM:
  5387                           	opt stack 0
  5388  000027                     _Scroll_6:
  5389                           	opt stack 0
  5390  000027                     	ds	16
  5391  000037                     _Scroll_7:
  5392                           	opt stack 0
  5393  000037                     	ds	16
  5394                           tblptru	equ	0xFF8
  5395                           tblptrh	equ	0xFF7
  5396                           tblptrl	equ	0xFF6
  5397                           tablat	equ	0xFF5
  5398                           postinc0	equ	0xFEE
  5399                           wreg	equ	0xFE8
  5400                           postdec1	equ	0xFE5
  5401                           fsr1l	equ	0xFE1
  5402                           
  5403                           	psect	bssBANK0
  5404  0000D8                     __pbssBANK0:
  5405                           	opt stack 0
  5406  0000D8                     _TX_OLD:
  5407                           	opt stack 0
  5408  0000D8                     	ds	1
  5409  0000D9                     _bufferCount:
  5410                           	opt stack 0
  5411  0000D9                     	ds	1
  5412  0000DA                     _Scroll_8:
  5413                           	opt stack 0
  5414  0000DA                     	ds	16
  5415  0000EA                     _Scroll_9:
  5416                           	opt stack 0
  5417  0000EA                     	ds	16
  5418                           tblptru	equ	0xFF8
  5419                           tblptrh	equ	0xFF7
  5420                           tblptrl	equ	0xFF6
  5421                           tablat	equ	0xFF5
  5422                           postinc0	equ	0xFEE
  5423                           wreg	equ	0xFE8
  5424                           postdec1	equ	0xFE5
  5425                           fsr1l	equ	0xFE1
  5426                           
  5427                           	psect	bssBANK1
  5428  00018C                     __pbssBANK1:
  5429                           	opt stack 0
  5430  00018C                     _NowTime:
  5431                           	opt stack 0
  5432  00018C                     	ds	9
  5433  000195                     _LCDwait:
  5434                           	opt stack 0
  5435  000195                     	ds	1
  5436  000196                     _PARITY:
  5437                           	opt stack 0
  5438  000196                     	ds	1
  5439  000197                     _ScrollDisplayPosition:
  5440                           	opt stack 0
  5441  000197                     	ds	1
  5442  000198                     _ScrollFIFOCount:
  5443                           	opt stack 0
  5444  000198                     	ds	1
  5445  000199                     _USART_Status:
  5446                           	opt stack 0
  5447  000199                     	ds	1
  5448  00019A                     _Scroll_1:
  5449                           	opt stack 0
  5450  00019A                     	ds	16
  5451  0001AA                     _Scroll_2:
  5452                           	opt stack 0
  5453  0001AA                     	ds	16
  5454  0001BA                     _Scroll_3:
  5455                           	opt stack 0
  5456  0001BA                     	ds	16
  5457  0001CA                     _Scroll_4:
  5458                           	opt stack 0
  5459  0001CA                     	ds	16
  5460  0001DA                     _Scroll_5:
  5461                           	opt stack 0
  5462  0001DA                     	ds	16
  5463                           tblptru	equ	0xFF8
  5464                           tblptrh	equ	0xFF7
  5465                           tblptrl	equ	0xFF6
  5466                           tablat	equ	0xFF5
  5467                           postinc0	equ	0xFEE
  5468                           wreg	equ	0xFE8
  5469                           postdec1	equ	0xFE5
  5470                           fsr1l	equ	0xFE1
  5471                           
  5472                           	psect	dataBANK1
  5473  0001EA                     __pdataBANK1:
  5474                           	opt stack 0
  5475  0001EA                     _BAUD:
  5476                           	opt stack 0
  5477  0001EA                     	ds	4
  5478  0001EE                     _LCDclearCount:
  5479                           	opt stack 0
  5480  0001EE                     	ds	4
  5481                           tblptru	equ	0xFF8
  5482                           tblptrh	equ	0xFF7
  5483                           tblptrl	equ	0xFF6
  5484                           tablat	equ	0xFF5
  5485                           postinc0	equ	0xFEE
  5486                           wreg	equ	0xFE8
  5487                           postdec1	equ	0xFE5
  5488                           fsr1l	equ	0xFE1
  5489                           
  5490                           	psect	bssBANK2
  5491  000243                     __pbssBANK2:
  5492                           	opt stack 0
  5493  000243                     _Scroll_10:
  5494                           	opt stack 0
  5495  000243                     	ds	16
  5496                           tblptru	equ	0xFF8
  5497                           tblptrh	equ	0xFF7
  5498                           tblptrl	equ	0xFF6
  5499                           tablat	equ	0xFF5
  5500                           postinc0	equ	0xFEE
  5501                           wreg	equ	0xFE8
  5502                           postdec1	equ	0xFE5
  5503                           fsr1l	equ	0xFE1
  5504                           
  5505                           	psect	bssBANK3
  5506  000300                     __pbssBANK3:
  5507                           	opt stack 0
  5508  000300                     _buf:
  5509                           	opt stack 0
  5510  000300                     	ds	100
  5511  000364                     _Rxdata:
  5512                           	opt stack 0
  5513  000364                     	ds	100
  5514                           tblptru	equ	0xFF8
  5515                           tblptrh	equ	0xFF7
  5516                           tblptrl	equ	0xFF6
  5517                           tablat	equ	0xFF5
  5518                           postinc0	equ	0xFEE
  5519                           wreg	equ	0xFE8
  5520                           postdec1	equ	0xFE5
  5521                           fsr1l	equ	0xFE1
  5522                           
  5523                           	psect	dataBANK3
  5524  0003C8                     __pdataBANK3:
  5525                           	opt stack 0
  5526  0003C8                     _Version:
  5527                           	opt stack 0
  5528  0003C8                     	ds	20
  5529                           tblptru	equ	0xFF8
  5530                           tblptrh	equ	0xFF7
  5531                           tblptrl	equ	0xFF6
  5532                           tablat	equ	0xFF5
  5533                           postinc0	equ	0xFEE
  5534                           wreg	equ	0xFE8
  5535                           postdec1	equ	0xFE5
  5536                           fsr1l	equ	0xFE1
  5537                           
  5538                           	psect	bssBANK4
  5539  000400                     __pbssBANK4:
  5540                           	opt stack 0
  5541  000400                     _Txdata:
  5542                           	opt stack 0
  5543  000400                     	ds	100
  5544                           tblptru	equ	0xFF8
  5545                           tblptrh	equ	0xFF7
  5546                           tblptrl	equ	0xFF6
  5547                           tablat	equ	0xFF5
  5548                           postinc0	equ	0xFEE
  5549                           wreg	equ	0xFE8
  5550                           postdec1	equ	0xFE5
  5551                           fsr1l	equ	0xFE1
  5552                           
  5553                           	psect	cstackBANK5
  5554  000500                     __pcstackBANK5:
  5555                           	opt stack 0
  5556  000500                     Command@buf:
  5557                           	opt stack 0
  5558                           
  5559                           ; 200 bytes @ 0x0
  5560  000500                     	ds	200
  5561  0005C8                     Command@ADC_Value:
  5562                           	opt stack 0
  5563                           
  5564                           ; 2 bytes @ 0xC8
  5565  0005C8                     	ds	2
  5566  0005CA                     Command@RTC_Battery_Value:
  5567                           	opt stack 0
  5568                           
  5569                           ; 2 bytes @ 0xCA
  5570  0005CA                     	ds	2
  5571  0005CC                     Command@RTC_Battery_Value_HIGH_decimal:
  5572                           	opt stack 0
  5573                           
  5574                           ; 2 bytes @ 0xCC
  5575  0005CC                     	ds	2
  5576  0005CE                     Command@BAUDtemp:
  5577                           	opt stack 0
  5578                           
  5579                           ; 4 bytes @ 0xCE
  5580  0005CE                     	ds	4
  5581  0005D2                     Command@RTC_Battery_Value_LOW_decimal:
  5582                           	opt stack 0
  5583                           
  5584                           ; 2 bytes @ 0xD2
  5585  0005D2                     	ds	2
  5586  0005D4                     Command@PARITYtemp:
  5587                           	opt stack 0
  5588                           
  5589                           ; 4 bytes @ 0xD4
  5590  0005D4                     	ds	4
  5591  0005D8                     Command@contrast:
  5592                           	opt stack 0
  5593                           
  5594                           ; 2 bytes @ 0xD8
  5595  0005D8                     	ds	2
  5596  0005DA                     Command@channel:
  5597                           	opt stack 0
  5598                           
  5599                           ; 2 bytes @ 0xDA
  5600  0005DA                     	ds	2
  5601  0005DC                     Command@duty:
  5602                           	opt stack 0
  5603                           
  5604                           ; 2 bytes @ 0xDC
  5605  0005DC                     	ds	2
  5606  0005DE                     Command@tempLONG:
  5607                           	opt stack 0
  5608                           
  5609                           ; 4 bytes @ 0xDE
  5610  0005DE                     	ds	4
  5611                           tblptru	equ	0xFF8
  5612                           tblptrh	equ	0xFF7
  5613                           tblptrl	equ	0xFF6
  5614                           tablat	equ	0xFF5
  5615                           postinc0	equ	0xFEE
  5616                           wreg	equ	0xFE8
  5617                           postdec1	equ	0xFE5
  5618                           fsr1l	equ	0xFE1
  5619                           
  5620                           	psect	cstackBANK2
  5621  000200                     __pcstackBANK2:
  5622                           	opt stack 0
  5623  000200                     SetBaud@buf:
  5624                           	opt stack 0
  5625                           
  5626                           ; 50 bytes @ 0x0
  5627  000200                     	ds	50
  5628  000232                     SetBaud@i:
  5629                           	opt stack 0
  5630                           
  5631                           ; 1 bytes @ 0x32
  5632  000232                     	ds	1
  5633  000233                     SetBaud@Baudtemp:
  5634                           	opt stack 0
  5635                           
  5636                           ; 4 bytes @ 0x33
  5637  000233                     	ds	4
  5638  000237                     SetBaud@Paritytemp:
  5639                           	opt stack 0
  5640                           
  5641                           ; 4 bytes @ 0x37
  5642  000237                     	ds	4
  5643  00023B                     SetBaud@temp:
  5644                           	opt stack 0
  5645                           
  5646                           ; 4 bytes @ 0x3B
  5647  00023B                     	ds	4
  5648  00023F                     ??_Command:
  5649                           
  5650                           ; 0 bytes @ 0x3F
  5651  00023F                     	ds	4
  5652                           tblptru	equ	0xFF8
  5653                           tblptrh	equ	0xFF7
  5654                           tblptrl	equ	0xFF6
  5655                           tablat	equ	0xFF5
  5656                           postinc0	equ	0xFEE
  5657                           wreg	equ	0xFE8
  5658                           postdec1	equ	0xFE5
  5659                           fsr1l	equ	0xFE1
  5660                           
  5661                           	psect	cstackBANK1
  5662  000100                     __pcstackBANK1:
  5663                           	opt stack 0
  5664  000100                     ??_high_isr:
  5665                           
  5666                           ; 0 bytes @ 0x0
  5667  000100                     	ds	14
  5668  00010E                     ??_readI2C:
  5669  00010E                     ??_isdigit:
  5670  00010E                     ??_IdleI2C:
  5671  00010E                     ?___wmul:
  5672                           	opt stack 0
  5673  00010E                     ?___awdiv:
  5674                           	opt stack 0
  5675  00010E                     ?___awmod:
  5676                           	opt stack 0
  5677  00010E                     ?___lwmod:
  5678                           	opt stack 0
  5679  00010E                     ?___ftpack:
  5680                           	opt stack 0
  5681  00010E                     ?___lmul:
  5682                           	opt stack 0
  5683  00010E                     ?___lldiv:
  5684                           	opt stack 0
  5685  00010E                     ISNUMBER@ascii:
  5686                           	opt stack 0
  5687  00010E                     baudUSART@baudconfig:
  5688                           	opt stack 0
  5689  00010E                     ReadUSART@data:
  5690                           	opt stack 0
  5691  00010E                     EnableInternalADC@config:
  5692                           	opt stack 0
  5693  00010E                     OpenI2C@slew:
  5694                           	opt stack 0
  5695  00010E                     cleanBuffer@data:
  5696                           	opt stack 0
  5697  00010E                     StringMatch@This:
  5698                           	opt stack 0
  5699  00010E                     StringContains@This:
  5700                           	opt stack 0
  5701  00010E                     StartsWith@This:
  5702                           	opt stack 0
  5703  00010E                     lowercase@Input:
  5704                           	opt stack 0
  5705  00010E                     CheckSum_byte@This:
  5706                           	opt stack 0
  5707  00010E                     OpenUSART@spbrg:
  5708                           	opt stack 0
  5709  00010E                     Parse_Time@This:
  5710                           	opt stack 0
  5711  00010E                     ___wmul@multiplier:
  5712                           	opt stack 0
  5713  00010E                     ___awdiv@dividend:
  5714                           	opt stack 0
  5715  00010E                     ___awmod@dividend:
  5716                           	opt stack 0
  5717  00010E                     ___lwmod@dividend:
  5718                           	opt stack 0
  5719  00010E                     ___ftpack@arg:
  5720                           	opt stack 0
  5721  00010E                     delayUS@US:
  5722                           	opt stack 0
  5723  00010E                     ___lmul@multiplier:
  5724                           	opt stack 0
  5725  00010E                     ___lldiv@dividend:
  5726                           	opt stack 0
  5727                           
  5728                           ; 4 bytes @ 0xE
  5729  00010E                     	ds	1
  5730  00010F                     ??_WriteI2C:
  5731  00010F                     EnableInternalADC@channels:
  5732                           	opt stack 0
  5733  00010F                     OpenI2C@sync_mode:
  5734                           	opt stack 0
  5735  00010F                     _isdigit$2640:
  5736                           	opt stack 0
  5737  00010F                     Multiple_I2C_Read@rdptr:
  5738                           	opt stack 0
  5739                           
  5740                           ; 2 bytes @ 0xF
  5741  00010F                     	ds	1
  5742  000110                     ??_OpenUSART:
  5743  000110                     ??_Parse_Time:
  5744  000110                     ??_lowercase:
  5745  000110                     CheckSum_byte@Odd_Even:
  5746                           	opt stack 0
  5747  000110                     WriteI2C@data_out:
  5748                           	opt stack 0
  5749  000110                     isdigit@c:
  5750                           	opt stack 0
  5751  000110                     cleanBuffer@count:
  5752                           	opt stack 0
  5753  000110                     StringMatch@That:
  5754                           	opt stack 0
  5755  000110                     StringContains@That:
  5756                           	opt stack 0
  5757  000110                     StartsWith@That:
  5758                           	opt stack 0
  5759  000110                     Init_I2C_Master@baud:
  5760                           	opt stack 0
  5761  000110                     ___wmul@multiplicand:
  5762                           	opt stack 0
  5763  000110                     ___awdiv@divisor:
  5764                           	opt stack 0
  5765  000110                     ___awmod@divisor:
  5766                           	opt stack 0
  5767  000110                     ___lwmod@divisor:
  5768                           	opt stack 0
  5769                           
  5770                           ; 2 bytes @ 0x10
  5771  000110                     	ds	1
  5772  000111                     ?_I2C_Read_At_Address:
  5773                           	opt stack 0
  5774  000111                     lowercase@i:
  5775                           	opt stack 0
  5776  000111                     Parse_Time@temp:
  5777                           	opt stack 0
  5778  000111                     I2C_Write_At_Address@Register:
  5779                           	opt stack 0
  5780  000111                     I2C_Read_At_Address@Register:
  5781                           	opt stack 0
  5782  000111                     Multiple_I2C_Read@length:
  5783                           	opt stack 0
  5784  000111                     ___ftpack@exp:
  5785                           	opt stack 0
  5786  000111                     CheckSum_byte@ThisTemp:
  5787                           	opt stack 0
  5788                           
  5789                           ; 2 bytes @ 0x11
  5790  000111                     	ds	1
  5791  000112                     ??_cleanBuffer:
  5792  000112                     ??_delayUS:
  5793  000112                     ??_Multiple_I2C_Read:
  5794  000112                     ??_StringContains:
  5795  000112                     ??_StartsWith:
  5796  000112                     I2C_Write_At_Address@data:
  5797                           	opt stack 0
  5798  000112                     ___awdiv@counter:
  5799                           	opt stack 0
  5800  000112                     ___awmod@counter:
  5801                           	opt stack 0
  5802  000112                     ___ftpack@sign:
  5803                           	opt stack 0
  5804  000112                     ___lwmod@counter:
  5805                           	opt stack 0
  5806  000112                     ___wmul@product:
  5807                           	opt stack 0
  5808  000112                     ___lmul@multiplicand:
  5809                           	opt stack 0
  5810  000112                     ___lldiv@divisor:
  5811                           	opt stack 0
  5812  000112                     Parse_Time@TempTime:
  5813                           	opt stack 0
  5814                           
  5815                           ; 9 bytes @ 0x12
  5816  000112                     	ds	1
  5817  000113                     ??_I2C_Write_At_Address:
  5818  000113                     ??___ftpack:
  5819  000113                     CheckSum_byte@Parity:
  5820                           	opt stack 0
  5821  000113                     OpenUSART@config:
  5822                           	opt stack 0
  5823  000113                     I2C_Read_At_Address@I2Caddress:
  5824                           	opt stack 0
  5825  000113                     I2C_Read_Sequential@Register:
  5826                           	opt stack 0
  5827  000113                     ___awdiv@sign:
  5828                           	opt stack 0
  5829  000113                     ___awmod@sign:
  5830                           	opt stack 0
  5831  000113                     delayUS@i:
  5832                           	opt stack 0
  5833                           
  5834                           ; 4 bytes @ 0x13
  5835  000113                     	ds	1
  5836  000114                     ?___aldiv:
  5837                           	opt stack 0
  5838  000114                     CheckSum_byte@i:
  5839                           	opt stack 0
  5840  000114                     I2C_Read_Sequential@rdptr:
  5841                           	opt stack 0
  5842  000114                     ___awdiv@quotient:
  5843                           	opt stack 0
  5844  000114                     ___aldiv@dividend:
  5845                           	opt stack 0
  5846                           
  5847                           ; 4 bytes @ 0x14
  5848  000114                     	ds	1
  5849  000115                     cleanBuffer@i:
  5850                           	opt stack 0
  5851  000115                     UARTchar@NinethBit_override:
  5852                           	opt stack 0
  5853  000115                     I2C_Write_At_Address@I2Caddress:
  5854                           	opt stack 0
  5855                           
  5856                           ; 1 bytes @ 0x15
  5857  000115                     	ds	1
  5858  000116                     ?___lbtoft:
  5859                           	opt stack 0
  5860  000116                     ?___lwtoft:
  5861                           	opt stack 0
  5862  000116                     UARTchar@NinethBit_override_data:
  5863                           	opt stack 0
  5864  000116                     I2C_Read_Sequential@length:
  5865                           	opt stack 0
  5866  000116                     BufferCopy@from:
  5867                           	opt stack 0
  5868  000116                     ___lwtoft@c:
  5869                           	opt stack 0
  5870  000116                     ___lmul@product:
  5871                           	opt stack 0
  5872  000116                     ___lldiv@quotient:
  5873                           	opt stack 0
  5874  000116                     SET_RTC_TIME@SetTime:
  5875                           	opt stack 0
  5876                           
  5877                           ; 9 bytes @ 0x16
  5878  000116                     	ds	1
  5879  000117                     ??_UARTchar:
  5880  000117                     delayUS@j:
  5881                           	opt stack 0
  5882  000117                     I2C_Read_Sequential@I2Caddress:
  5883                           	opt stack 0
  5884                           
  5885                           ; 1 bytes @ 0x17
  5886  000117                     	ds	1
  5887  000118                     ??_RTC_TIME_NONMilitary:
  5888  000118                     UARTchar@data:
  5889                           	opt stack 0
  5890  000118                     Zero_Config1@pin:
  5891                           	opt stack 0
  5892  000118                     One_Config1@pin:
  5893                           	opt stack 0
  5894  000118                     f_Config1@pin:
  5895                           	opt stack 0
  5896  000118                     Zero_Config2@pin:
  5897                           	opt stack 0
  5898  000118                     One_Config2@pin:
  5899                           	opt stack 0
  5900  000118                     SendLCDbyte@isCommand:
  5901                           	opt stack 0
  5902  000118                     BufferCopy@to:
  5903                           	opt stack 0
  5904  000118                     RTC_Clock_Enable@tempSeconds:
  5905                           	opt stack 0
  5906  000118                     ___aldiv@divisor:
  5907                           	opt stack 0
  5908  000118                     READ_RTC_TIME@temp:
  5909                           	opt stack 0
  5910                           
  5911                           ; 7 bytes @ 0x18
  5912  000118                     	ds	1
  5913  000119                     SendLCDbyte@data:
  5914                           	opt stack 0
  5915  000119                     ___lbtoft@c:
  5916                           	opt stack 0
  5917  000119                     UARTstring@data:
  5918                           	opt stack 0
  5919  000119                     UARTstringWAIT@data:
  5920                           	opt stack 0
  5921  000119                     Send_Config1@data:
  5922                           	opt stack 0
  5923  000119                     Send_Config2@data:
  5924                           	opt stack 0
  5925  000119                     RTC_TIME_NONMilitary@Error:
  5926                           	opt stack 0
  5927                           
  5928                           ; 2 bytes @ 0x19
  5929  000119                     	ds	1
  5930  00011A                     ?___ftdiv:
  5931                           	opt stack 0
  5932  00011A                     ?_GetEnteredNumber:
  5933                           	opt stack 0
  5934  00011A                     BufferCopy@count:
  5935                           	opt stack 0
  5936  00011A                     SendLCDbyte@MSB_nibble:
  5937                           	opt stack 0
  5938  00011A                     RTC_Clock_Enable@Error:
  5939                           	opt stack 0
  5940  00011A                     ___lldiv@counter:
  5941                           	opt stack 0
  5942  00011A                     GetEnteredNumber@This:
  5943                           	opt stack 0
  5944  00011A                     ___ftdiv@f1:
  5945                           	opt stack 0
  5946                           
  5947                           ; 3 bytes @ 0x1A
  5948  00011A                     	ds	1
  5949  00011B                     ??_UARTstring:
  5950  00011B                     ??_Send_Config1:
  5951  00011B                     ??_Send_Config2:
  5952  00011B                     ?___llmod:
  5953                           	opt stack 0
  5954  00011B                     BufferCopy@shift:
  5955                           	opt stack 0
  5956  00011B                     SendLCDbyte@LSB_nibble:
  5957                           	opt stack 0
  5958  00011B                     RTC_TIME_NONMilitary@temphours:
  5959                           	opt stack 0
  5960  00011B                     InitUART@Baud:
  5961                           	opt stack 0
  5962  00011B                     ___llmod@dividend:
  5963                           	opt stack 0
  5964                           
  5965                           ; 4 bytes @ 0x1B
  5966  00011B                     	ds	1
  5967  00011C                     BufferCopy@i:
  5968                           	opt stack 0
  5969  00011C                     SetLCDcursor@Col:
  5970                           	opt stack 0
  5971  00011C                     LCDPrintChar@character:
  5972                           	opt stack 0
  5973  00011C                     ___aldiv@counter:
  5974                           	opt stack 0
  5975  00011C                     LCDPrintString@Text:
  5976                           	opt stack 0
  5977                           
  5978                           ; 2 bytes @ 0x1C
  5979  00011C                     	ds	1
  5980  00011D                     ?_InternalADC_Read:
  5981                           	opt stack 0
  5982  00011D                     Send_Config2@pin:
  5983                           	opt stack 0
  5984  00011D                     SetLCDcursor@Row:
  5985                           	opt stack 0
  5986  00011D                     ___aldiv@sign:
  5987                           	opt stack 0
  5988  00011D                     RemoveSpaces@This:
  5989                           	opt stack 0
  5990  00011D                     StringAddEqual@Input:
  5991                           	opt stack 0
  5992  00011D                     LCD_Scroll@This:
  5993                           	opt stack 0
  5994  00011D                     ___ftdiv@f2:
  5995                           	opt stack 0
  5996                           
  5997                           ; 3 bytes @ 0x1D
  5998  00011D                     	ds	1
  5999  00011E                     ??_GetEnteredNumber:
  6000  00011E                     Send_Config1@i:
  6001                           	opt stack 0
  6002  00011E                     Send_Config2@i:
  6003                           	opt stack 0
  6004  00011E                     SetLCDcursor@address:
  6005                           	opt stack 0
  6006  00011E                     LCDPrintString@c:
  6007                           	opt stack 0
  6008  00011E                     ___aldiv@quotient:
  6009                           	opt stack 0
  6010                           
  6011                           ; 4 bytes @ 0x1E
  6012  00011E                     	ds	1
  6013  00011F                     ??_InternalADC_Read:
  6014  00011F                     ??_SET_RTC_TIME:
  6015  00011F                     ??_StringAddEqual:
  6016  00011F                     InitUART@parity:
  6017                           	opt stack 0
  6018  00011F                     Send_Config1@pin:
  6019                           	opt stack 0
  6020  00011F                     READ_RTC_TIME@Error:
  6021                           	opt stack 0
  6022  00011F                     ___llmod@divisor:
  6023                           	opt stack 0
  6024  00011F                     RemoveSpaces@That:
  6025                           	opt stack 0
  6026                           
  6027                           ; 100 bytes @ 0x1F
  6028  00011F                     	ds	1
  6029  000120                     ??_InitUART:
  6030  000120                     ??_LCDScreenUpdate:
  6031  000120                     ??___ftdiv:
  6032  000120                     LCDdisplayFeedback@Text:
  6033                           	opt stack 0
  6034                           
  6035                           ; 2 bytes @ 0x20
  6036  000120                     	ds	1
  6037  000121                     InternalADC_Read@channel:
  6038                           	opt stack 0
  6039  000121                     StringAddEqual@temp:
  6040                           	opt stack 0
  6041                           
  6042                           ; 100 bytes @ 0x21
  6043  000121                     	ds	1
  6044  000122                     SetFreq@freq:
  6045                           	opt stack 0
  6046                           
  6047                           ; 2 bytes @ 0x22
  6048  000122                     	ds	1
  6049  000123                     GetEnteredNumber@i:
  6050                           	opt stack 0
  6051  000123                     ___ftdiv@cntr:
  6052                           	opt stack 0
  6053  000123                     ___llmod@counter:
  6054                           	opt stack 0
  6055  000123                     SET_RTC_TIME@temp:
  6056                           	opt stack 0
  6057                           
  6058                           ; 7 bytes @ 0x23
  6059  000123                     	ds	1
  6060  000124                     ??_SetFreq:
  6061  000124                     ?_sprintf:
  6062                           	opt stack 0
  6063  000124                     GetEnteredNumber@negative:
  6064                           	opt stack 0
  6065  000124                     InitUART@spbrg:
  6066                           	opt stack 0
  6067  000124                     sprintf@sp:
  6068                           	opt stack 0
  6069  000124                     ___ftdiv@f3:
  6070                           	opt stack 0
  6071                           
  6072                           ; 3 bytes @ 0x24
  6073  000124                     	ds	1
  6074  000125                     GetEnteredNumber@temp:
  6075                           	opt stack 0
  6076                           
  6077                           ; 4 bytes @ 0x25
  6078  000125                     	ds	1
  6079  000126                     InitUART@baudconfig:
  6080                           	opt stack 0
  6081  000126                     sprintf@f:
  6082                           	opt stack 0
  6083                           
  6084                           ; 2 bytes @ 0x26
  6085  000126                     	ds	1
  6086  000127                     InitUART@config:
  6087                           	opt stack 0
  6088  000127                     ___ftdiv@exp:
  6089                           	opt stack 0
  6090                           
  6091                           ; 1 bytes @ 0x27
  6092  000127                     	ds	1
  6093  000128                     SetFreq@temp:
  6094                           	opt stack 0
  6095  000128                     ___ftdiv@sign:
  6096                           	opt stack 0
  6097  000128                     InitUART@temp:
  6098                           	opt stack 0
  6099                           
  6100                           ; 4 bytes @ 0x28
  6101  000128                     	ds	1
  6102  000129                     ?___ftmul:
  6103                           	opt stack 0
  6104  000129                     ___ftmul@f1:
  6105                           	opt stack 0
  6106                           
  6107                           ; 3 bytes @ 0x29
  6108  000129                     	ds	1
  6109  00012A                     SET_RTC_TIME@Error:
  6110                           	opt stack 0
  6111                           
  6112                           ; 1 bytes @ 0x2A
  6113  00012A                     	ds	2
  6114  00012C                     ___ftmul@f2:
  6115                           	opt stack 0
  6116                           
  6117                           ; 3 bytes @ 0x2C
  6118  00012C                     	ds	3
  6119  00012F                     ??___ftmul:
  6120                           
  6121                           ; 0 bytes @ 0x2F
  6122  00012F                     	ds	3
  6123  000132                     ___ftmul@exp:
  6124                           	opt stack 0
  6125                           
  6126                           ; 1 bytes @ 0x32
  6127  000132                     	ds	1
  6128  000133                     ___ftmul@f3_as_product:
  6129                           	opt stack 0
  6130                           
  6131                           ; 3 bytes @ 0x33
  6132  000133                     	ds	1
  6133  000134                     ??_sprintf:
  6134                           
  6135                           ; 0 bytes @ 0x34
  6136  000134                     	ds	2
  6137  000136                     ___ftmul@cntr:
  6138                           	opt stack 0
  6139                           
  6140                           ; 1 bytes @ 0x36
  6141  000136                     	ds	1
  6142  000137                     ___ftmul@sign:
  6143                           	opt stack 0
  6144                           
  6145                           ; 1 bytes @ 0x37
  6146  000137                     	ds	1
  6147  000138                     ?___fttol:
  6148                           	opt stack 0
  6149  000138                     ___fttol@f1:
  6150                           	opt stack 0
  6151                           
  6152                           ; 3 bytes @ 0x38
  6153  000138                     	ds	2
  6154  00013A                     sprintf@idx:
  6155                           	opt stack 0
  6156                           
  6157                           ; 1 bytes @ 0x3A
  6158  00013A                     	ds	1
  6159  00013B                     _sprintf$2291:
  6160                           	opt stack 0
  6161                           
  6162                           ; 2 bytes @ 0x3B
  6163  00013B                     	ds	1
  6164  00013C                     ??___fttol:
  6165                           
  6166                           ; 0 bytes @ 0x3C
  6167  00013C                     	ds	1
  6168  00013D                     _sprintf$2292:
  6169                           	opt stack 0
  6170                           
  6171                           ; 2 bytes @ 0x3D
  6172  00013D                     	ds	2
  6173  00013F                     _sprintf$2298:
  6174                           	opt stack 0
  6175                           
  6176                           ; 2 bytes @ 0x3F
  6177  00013F                     	ds	2
  6178  000141                     ___fttol@sign1:
  6179                           	opt stack 0
  6180  000141                     sprintf@ap:
  6181                           	opt stack 0
  6182                           
  6183                           ; 2 bytes @ 0x41
  6184  000141                     	ds	1
  6185  000142                     ___fttol@lval:
  6186                           	opt stack 0
  6187                           
  6188                           ; 4 bytes @ 0x42
  6189  000142                     	ds	1
  6190  000143                     sprintf@prec:
  6191                           	opt stack 0
  6192                           
  6193                           ; 2 bytes @ 0x43
  6194  000143                     	ds	2
  6195  000145                     sprintf@width:
  6196                           	opt stack 0
  6197                           
  6198                           ; 2 bytes @ 0x45
  6199  000145                     	ds	1
  6200  000146                     ___fttol@exp1:
  6201                           	opt stack 0
  6202                           
  6203                           ; 1 bytes @ 0x46
  6204  000146                     	ds	1
  6205  000147                     ??_SetContrast:
  6206  000147                     ??_SetDuty:
  6207  000147                     sprintf@_val:
  6208                           	opt stack 0
  6209                           
  6210                           ; 4 bytes @ 0x47
  6211  000147                     	ds	4
  6212  00014B                     SetDuty@Duty:
  6213                           	opt stack 0
  6214  00014B                     sprintf@c:
  6215                           	opt stack 0
  6216  00014B                     SetContrast@tempPR2:
  6217                           	opt stack 0
  6218                           
  6219                           ; 3 bytes @ 0x4B
  6220  00014B                     	ds	1
  6221  00014C                     sprintf@flag:
  6222                           	opt stack 0
  6223  00014C                     SetDuty@tempPR2:
  6224                           	opt stack 0
  6225                           
  6226                           ; 3 bytes @ 0x4C
  6227  00014C                     	ds	2
  6228  00014E                     SetContrast@MSB:
  6229                           	opt stack 0
  6230  00014E                     SprintDate@ReturnBuf:
  6231                           	opt stack 0
  6232  00014E                     SetBaud@Baud:
  6233                           	opt stack 0
  6234                           
  6235                           ; 4 bytes @ 0x4E
  6236  00014E                     	ds	1
  6237  00014F                     SetContrast@LSB:
  6238                           	opt stack 0
  6239  00014F                     SetDuty@MSB:
  6240                           	opt stack 0
  6241                           
  6242                           ; 1 bytes @ 0x4F
  6243  00014F                     	ds	1
  6244  000150                     SetDuty@LSB:
  6245                           	opt stack 0
  6246  000150                     SetContrast@temp:
  6247                           	opt stack 0
  6248  000150                     SprintDate@DisplayTime:
  6249                           	opt stack 0
  6250                           
  6251                           ; 9 bytes @ 0x50
  6252  000150                     	ds	1
  6253  000151                     SetDuty@temp:
  6254                           	opt stack 0
  6255                           
  6256                           ; 2 bytes @ 0x51
  6257  000151                     	ds	1
  6258  000152                     SetBaud@Parity:
  6259                           	opt stack 0
  6260  000152                     SetContrast@Duty:
  6261                           	opt stack 0
  6262                           
  6263                           ; 1 bytes @ 0x52
  6264  000152                     	ds	1
  6265  000153                     ??_SetBaud:
  6266                           
  6267                           ; 0 bytes @ 0x53
  6268  000153                     	ds	6
  6269  000159                     SprintDate@Military:
  6270                           	opt stack 0
  6271                           
  6272                           ; 1 bytes @ 0x59
  6273  000159                     	ds	1
  6274  00015A                     
  6275                           ; 0 bytes @ 0x5A
  6276  00015A                     	ds	41
  6277  000183                     RemoveSpaces@address:
  6278                           	opt stack 0
  6279                           
  6280                           ; 2 bytes @ 0x83
  6281  000183                     	ds	2
  6282  000185                     RemoveSpaces@i:
  6283                           	opt stack 0
  6284  000185                     StringAddEqual@firstnumber:
  6285                           	opt stack 0
  6286                           
  6287                           ; 1 bytes @ 0x85
  6288  000185                     	ds	1
  6289  000186                     StringAddEqual@i:
  6290                           	opt stack 0
  6291                           
  6292                           ; 1 bytes @ 0x86
  6293  000186                     	ds	1
  6294  000187                     StringAddEqual@j:
  6295                           	opt stack 0
  6296                           
  6297                           ; 1 bytes @ 0x87
  6298  000187                     	ds	1
  6299  000188                     Command@Input:
  6300                           	opt stack 0
  6301                           
  6302                           ; 2 bytes @ 0x88
  6303  000188                     	ds	2
  6304  00018A                     main@ii:
  6305                           	opt stack 0
  6306                           
  6307                           ; 1 bytes @ 0x8A
  6308  00018A                     	ds	1
  6309  00018B                     main@count:
  6310                           	opt stack 0
  6311                           
  6312                           ; 1 bytes @ 0x8B
  6313  00018B                     	ds	1
  6314                           tblptru	equ	0xFF8
  6315                           tblptrh	equ	0xFF7
  6316                           tblptrl	equ	0xFF6
  6317                           tablat	equ	0xFF5
  6318                           postinc0	equ	0xFEE
  6319                           wreg	equ	0xFE8
  6320                           postdec1	equ	0xFE5
  6321                           fsr1l	equ	0xFE1
  6322                           
  6323                           	psect	cstackBANK0
  6324  000060                     __pcstackBANK0:
  6325                           	opt stack 0
  6326  000060                     low_isr@TEMP_Rxdata:
  6327                           	opt stack 0
  6328                           
  6329                           ; 100 bytes @ 0x0
  6330  000060                     	ds	100
  6331  0000C4                     low_isr@LCD_TEMP:
  6332                           	opt stack 0
  6333                           
  6334                           ; 16 bytes @ 0x64
  6335  0000C4                     	ds	16
  6336  0000D4                     low_isr@i:
  6337                           	opt stack 0
  6338                           
  6339                           ; 2 bytes @ 0x74
  6340  0000D4                     	ds	2
  6341  0000D6                     low_isr@j:
  6342                           	opt stack 0
  6343                           
  6344                           ; 1 bytes @ 0x76
  6345  0000D6                     	ds	1
  6346  0000D7                     low_isr@rx:
  6347                           	opt stack 0
  6348                           
  6349                           ; 1 bytes @ 0x77
  6350  0000D7                     	ds	1
  6351                           tblptru	equ	0xFF8
  6352                           tblptrh	equ	0xFF7
  6353                           tblptrl	equ	0xFF6
  6354                           tablat	equ	0xFF5
  6355                           postinc0	equ	0xFEE
  6356                           wreg	equ	0xFE8
  6357                           postdec1	equ	0xFE5
  6358                           fsr1l	equ	0xFE1
  6359                           
  6360                           	psect	cstackCOMRAM
  6361  000001                     __pcstackCOMRAM:
  6362                           	opt stack 0
  6363  000001                     WriteUSART@data:
  6364                           	opt stack 0
  6365  000001                     i1ReadUSART@data:
  6366                           	opt stack 0
  6367  000001                     i1cleanBuffer@data:
  6368                           	opt stack 0
  6369  000001                     i1CheckSum_byte@This:
  6370                           	opt stack 0
  6371  000001                     i1delayUS@US:
  6372                           	opt stack 0
  6373                           
  6374                           ; 4 bytes @ 0x0
  6375  000001                     	ds	2
  6376  000003                     i1CheckSum_byte@Odd_Even:
  6377                           	opt stack 0
  6378  000003                     i1cleanBuffer@count:
  6379                           	opt stack 0
  6380                           
  6381                           ; 2 bytes @ 0x2
  6382  000003                     	ds	1
  6383  000004                     i1CheckSum_byte@ThisTemp:
  6384                           	opt stack 0
  6385                           
  6386                           ; 2 bytes @ 0x3
  6387  000004                     	ds	1
  6388  000005                     ??i1_delayUS:
  6389  000005                     ??i1_cleanBuffer:
  6390                           
  6391                           ; 0 bytes @ 0x4
  6392  000005                     	ds	1
  6393  000006                     i1CheckSum_byte@Parity:
  6394                           	opt stack 0
  6395  000006                     i1delayUS@i:
  6396                           	opt stack 0
  6397                           
  6398                           ; 4 bytes @ 0x5
  6399  000006                     	ds	1
  6400  000007                     i1CheckSum_byte@i:
  6401                           	opt stack 0
  6402                           
  6403                           ; 1 bytes @ 0x6
  6404  000007                     	ds	1
  6405  000008                     i1cleanBuffer@i:
  6406                           	opt stack 0
  6407  000008                     i1UARTchar@NinethBit_override:
  6408                           	opt stack 0
  6409                           
  6410                           ; 1 bytes @ 0x7
  6411  000008                     	ds	1
  6412  000009                     i1UARTchar@NinethBit_override_data:
  6413                           	opt stack 0
  6414  000009                     i1BufferCopy@from:
  6415                           	opt stack 0
  6416                           
  6417                           ; 2 bytes @ 0x8
  6418  000009                     	ds	1
  6419  00000A                     ??i1_UARTchar:
  6420  00000A                     i1delayUS@j:
  6421                           	opt stack 0
  6422                           
  6423                           ; 1 bytes @ 0x9
  6424  00000A                     	ds	1
  6425  00000B                     i1UARTchar@data:
  6426                           	opt stack 0
  6427  00000B                     i1SendLCDbyte@isCommand:
  6428                           	opt stack 0
  6429  00000B                     i1BufferCopy@to:
  6430                           	opt stack 0
  6431                           
  6432                           ; 2 bytes @ 0xA
  6433  00000B                     	ds	1
  6434  00000C                     i1SendLCDbyte@data:
  6435                           	opt stack 0
  6436  00000C                     i1UARTstring@data:
  6437                           	opt stack 0
  6438                           
  6439                           ; 2 bytes @ 0xB
  6440  00000C                     	ds	1
  6441  00000D                     i1BufferCopy@count:
  6442                           	opt stack 0
  6443  00000D                     i1SendLCDbyte@MSB_nibble:
  6444                           	opt stack 0
  6445                           
  6446                           ; 1 bytes @ 0xC
  6447  00000D                     	ds	1
  6448  00000E                     ??i1_UARTstring:
  6449  00000E                     i1BufferCopy@shift:
  6450                           	opt stack 0
  6451  00000E                     i1SendLCDbyte@LSB_nibble:
  6452                           	opt stack 0
  6453                           
  6454                           ; 1 bytes @ 0xD
  6455  00000E                     	ds	1
  6456  00000F                     i1BufferCopy@i:
  6457                           	opt stack 0
  6458  00000F                     i1SetLCDcursor@Col:
  6459                           	opt stack 0
  6460  00000F                     i1LCDPrintChar@character:
  6461                           	opt stack 0
  6462  00000F                     i1LCDPrintString@Text:
  6463                           	opt stack 0
  6464                           
  6465                           ; 2 bytes @ 0xE
  6466  00000F                     	ds	1
  6467  000010                     i1SetLCDcursor@Row:
  6468                           	opt stack 0
  6469                           
  6470                           ; 1 bytes @ 0xF
  6471  000010                     	ds	1
  6472  000011                     i1SetLCDcursor@address:
  6473                           	opt stack 0
  6474  000011                     i1LCDPrintString@c:
  6475                           	opt stack 0
  6476                           
  6477                           ; 2 bytes @ 0x10
  6478  000011                     	ds	2
  6479  000013                     ??_low_isr:
  6480                           
  6481                           ; 0 bytes @ 0x12
  6482  000013                     	ds	20
  6483                           tblptru	equ	0xFF8
  6484                           tblptrh	equ	0xFF7
  6485                           tblptrl	equ	0xFF6
  6486                           tablat	equ	0xFF5
  6487                           postinc0	equ	0xFEE
  6488                           wreg	equ	0xFE8
  6489                           postdec1	equ	0xFE5
  6490                           fsr1l	equ	0xFE1
  6491                           
  6492 ;;
  6493 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6494 ;;
  6495 ;; *************** function _main *****************
  6496 ;; Defined at:
  6497 ;;		line 73 in file "main.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;		None
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;  count           1  139[BANK1 ] unsigned char 
  6502 ;;  ii              1  138[BANK1 ] unsigned char 
  6503 ;; Return value:  Size  Location     Type
  6504 ;;		None               void
  6505 ;; Registers used:
  6506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6513 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6515 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6516 ;;Total ram usage:        2 bytes
  6517 ;; Hardware stack levels required when called:   12
  6518 ;; This function calls:
  6519 ;;		_ClearLCD
  6520 ;;		_Command
  6521 ;;		_ConfigureOscillator
  6522 ;;		_ContrastPWM_init
  6523 ;;		_EnableInternalADC
  6524 ;;		_InitApp
  6525 ;;		_InitUART
  6526 ;;		_Init_I2C_Master
  6527 ;;		_LCDPrintChar
  6528 ;;		_LCDPrintString
  6529 ;;		_LCDScreenUpdate
  6530 ;;		_PWM_init
  6531 ;;		_RTC_INIT
  6532 ;;		_ReadUSART
  6533 ;;		_SetContrast
  6534 ;;		_SetDuty
  6535 ;;		_SetLCDcursor
  6536 ;;		_UARTstring
  6537 ;;		_cleanBuffer
  6538 ;;		_delayUS
  6539 ;;		_init_LCD
  6540 ;; This function is called by:
  6541 ;;		Startup code after reset
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text0
  6546  014048                     __ptext0:
  6547                           	opt stack 0
  6548  014048                     _main:
  6549                           	opt stack 18
  6550                           
  6551                           ;main.c: 75: unsigned char ii =0;
  6552                           
  6553                           ;incstack = 0
  6554  014048  0E00               	movlw	0
  6555  01404A  0101               	movlb	1	; () banked
  6556  01404C  6F8A               	movwf	main@ii& (0+255),b
  6557                           
  6558                           ;main.c: 76: unsigned char count =0;
  6559  01404E  0E00               	movlw	0
  6560  014050  0101               	movlb	1	; () banked
  6561  014052  6F8B               	movwf	main@count& (0+255),b
  6562                           
  6563                           ; BSR set to: 1
  6564                           ;main.c: 78: ConfigureOscillator();
  6565  014054  EC54  F0BE         	call	_ConfigureOscillator	;wreg free
  6566                           
  6567                           ;main.c: 79: InitApp();
  6568  014058  EC21  F0BB         	call	_InitApp	;wreg free
  6569                           
  6570                           ;main.c: 80: InitUART(115200, 0);
  6571  01405C  0E00               	movlw	0
  6572  01405E  0101               	movlb	1	; () banked
  6573  014060  6F1B               	movwf	InitUART@Baud& (0+255),b
  6574  014062  0EC2               	movlw	194
  6575  014064  0101               	movlb	1	; () banked
  6576  014066  6F1C               	movwf	(InitUART@Baud+1)& (0+255),b
  6577  014068  0E01               	movlw	1
  6578  01406A  0101               	movlb	1	; () banked
  6579  01406C  6F1D               	movwf	(InitUART@Baud+2)& (0+255),b
  6580  01406E  0E00               	movlw	0
  6581  014070  0101               	movlb	1	; () banked
  6582  014072  6F1E               	movwf	(InitUART@Baud+3)& (0+255),b
  6583  014074  0E00               	movlw	0
  6584  014076  0101               	movlb	1	; () banked
  6585  014078  6F1F               	movwf	InitUART@parity& (0+255),b
  6586  01407A  EC44  F0A8         	call	_InitUART	;wreg free
  6587                           
  6588                           ;main.c: 81: EnableInternalADC(1);
  6589  01407E  0E01               	movlw	1
  6590  014080  EC89  F0B3         	call	_EnableInternalADC
  6591                           
  6592                           ;main.c: 82: PWM_init();
  6593  014084  ECAD  F0BD         	call	_PWM_init	;wreg free
  6594                           
  6595                           ;main.c: 83: ContrastPWM_init();
  6596  014088  EC4A  F0BE         	call	_ContrastPWM_init	;wreg free
  6597                           
  6598                           ;main.c: 84: init_LCD();
  6599  01408C  EC0D  F0AC         	call	_init_LCD	;wreg free
  6600                           
  6601                           ;main.c: 85: Init_I2C_Master();
  6602  014090  ECA4  F0BB         	call	_Init_I2C_Master	;wreg free
  6603                           
  6604                           ;main.c: 86: RTC_INIT();
  6605  014094  EC34  F0BE         	call	_RTC_INIT	;wreg free
  6606                           
  6607                           ;main.c: 88: UARTstring("Firmware Version: ");
  6608  014098  0EF8               	movlw	high STR_6
  6609  01409A  0101               	movlb	1	; () banked
  6610  01409C  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
  6611  01409E  0E39               	movlw	low STR_6
  6612  0140A0  0101               	movlb	1	; () banked
  6613  0140A2  6F19               	movwf	UARTstring@data& (0+255),b
  6614  0140A4  EC36  F0B3         	call	_UARTstring	;wreg free
  6615                           
  6616                           ;main.c: 89: UARTstring(Version);
  6617  0140A8  0103               	movlb	3	; () banked
  6618  0140AA  0E03               	movlw	high _Version
  6619  0140AC  0101               	movlb	1	; () banked
  6620  0140AE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
  6621  0140B0  0103               	movlb	3	; () banked
  6622  0140B2  0EC8               	movlw	low _Version
  6623  0140B4  0101               	movlb	1	; () banked
  6624  0140B6  6F19               	movwf	UARTstring@data& (0+255),b
  6625  0140B8  EC36  F0B3         	call	_UARTstring	;wreg free
  6626                           
  6627                           ;main.c: 90: UARTstring("\r\n");
  6628  0140BC  0EF6               	movlw	high (STR_279+19)
  6629  0140BE  0101               	movlb	1	; () banked
  6630  0140C0  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
  6631  0140C2  0EF4               	movlw	low (STR_279+19)
  6632  0140C4  0101               	movlb	1	; () banked
  6633  0140C6  6F19               	movwf	UARTstring@data& (0+255),b
  6634  0140C8  EC36  F0B3         	call	_UARTstring	;wreg free
  6635                           
  6636                           ;main.c: 92: for(ii =0; ii <10;ii++)
  6637  0140CC  0E00               	movlw	0
  6638  0140CE  0101               	movlb	1	; () banked
  6639  0140D0  6F8A               	movwf	main@ii& (0+255),b
  6640  0140D2  D022               	goto	L1
  6641  0140D4                     l13250:
  6642                           
  6643                           ; BSR set to: 1
  6644                           ;main.c: 93: {
  6645                           ;main.c: 94: LATD |= 0b00000010;
  6646  0140D4  828C               	bsf	3980,1,c	;volatile
  6647                           
  6648                           ;main.c: 95: LATD &= ~0b00000100;
  6649  0140D6  948C               	bcf	3980,2,c	;volatile
  6650                           
  6651                           ; BSR set to: 1
  6652                           ;main.c: 96: delayUS(50000);
  6653  0140D8  0E50               	movlw	80
  6654  0140DA  0101               	movlb	1	; () banked
  6655  0140DC  6F0E               	movwf	delayUS@US& (0+255),b
  6656  0140DE  0EC3               	movlw	195
  6657  0140E0  0101               	movlb	1	; () banked
  6658  0140E2  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  6659  0140E4  0E00               	movlw	0
  6660  0140E6  0101               	movlb	1	; () banked
  6661  0140E8  6F10               	movwf	(delayUS@US+2)& (0+255),b
  6662  0140EA  0E00               	movlw	0
  6663  0140EC  0101               	movlb	1	; () banked
  6664  0140EE  6F11               	movwf	(delayUS@US+3)& (0+255),b
  6665  0140F0  EC10  F0B9         	call	_delayUS	;wreg free
  6666                           
  6667                           ;main.c: 97: LATD |= 0b00000100;
  6668  0140F4  848C               	bsf	3980,2,c	;volatile
  6669                           
  6670                           ;main.c: 98: LATD &= ~0b00000010;
  6671  0140F6  928C               	bcf	3980,1,c	;volatile
  6672                           
  6673                           ;main.c: 99: delayUS(50000);
  6674  0140F8  0E50               	movlw	80
  6675  0140FA  0101               	movlb	1	; () banked
  6676  0140FC  6F0E               	movwf	delayUS@US& (0+255),b
  6677  0140FE  0EC3               	movlw	195
  6678  014100  0101               	movlb	1	; () banked
  6679  014102  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  6680  014104  0E00               	movlw	0
  6681  014106  0101               	movlb	1	; () banked
  6682  014108  6F10               	movwf	(delayUS@US+2)& (0+255),b
  6683  01410A  0E00               	movlw	0
  6684  01410C  0101               	movlb	1	; () banked
  6685  01410E  6F11               	movwf	(delayUS@US+3)& (0+255),b
  6686  014110  EC10  F0B9         	call	_delayUS	;wreg free
  6687  014114  0101               	movlb	1	; () banked
  6688  014116  2B8A               	incf	main@ii& (0+255),f,b
  6689  014118                     L1:
  6690                           
  6691                           ; BSR set to: 1
  6692  014118  0E09               	movlw	9
  6693  01411A  0101               	movlb	1	; () banked
  6694  01411C  658A               	cpfsgt	main@ii& (0+255),b
  6695  01411E  D7DA               	goto	l13250
  6696                           
  6697                           ; BSR set to: 1
  6698                           ;main.c: 100: }
  6699                           ;main.c: 101: SetContrast(65);
  6700                           
  6701                           ; BSR set to: 1
  6702  014120  0E41               	movlw	65
  6703  014122  ECC3  F0AE         	call	_SetContrast
  6704                           
  6705                           ;main.c: 102: delayUS(20);
  6706  014126  0E14               	movlw	20
  6707  014128  0101               	movlb	1	; () banked
  6708  01412A  6F0E               	movwf	delayUS@US& (0+255),b
  6709  01412C  0E00               	movlw	0
  6710  01412E  0101               	movlb	1	; () banked
  6711  014130  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  6712  014132  0E00               	movlw	0
  6713  014134  0101               	movlb	1	; () banked
  6714  014136  6F10               	movwf	(delayUS@US+2)& (0+255),b
  6715  014138  0E00               	movlw	0
  6716  01413A  0101               	movlb	1	; () banked
  6717  01413C  6F11               	movwf	(delayUS@US+3)& (0+255),b
  6718  01413E  EC10  F0B9         	call	_delayUS	;wreg free
  6719                           
  6720                           ;main.c: 103: SetLCDcursor(0, 0);
  6721  014142  0E00               	movlw	0
  6722  014144  0101               	movlb	1	; () banked
  6723  014146  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  6724  014148  0E00               	movlw	0
  6725  01414A  ECDA  F0BC         	call	_SetLCDcursor
  6726                           
  6727                           ;main.c: 104: LCDPrintString("Starting");
  6728  01414E  0EFE               	movlw	high STR_8
  6729  014150  0101               	movlb	1	; () banked
  6730  014152  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6731  014154  0EF7               	movlw	low STR_8
  6732  014156  0101               	movlb	1	; () banked
  6733  014158  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  6734  01415A  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  6735                           
  6736                           ;main.c: 105: UARTstring("Starting...");
  6737  01415E  0EFD               	movlw	high STR_9
  6738  014160  0101               	movlb	1	; () banked
  6739  014162  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
  6740  014164  0EC3               	movlw	low STR_9
  6741  014166  0101               	movlb	1	; () banked
  6742  014168  6F19               	movwf	UARTstring@data& (0+255),b
  6743  01416A  EC36  F0B3         	call	_UARTstring	;wreg free
  6744                           
  6745                           ;main.c: 106: delayUS(100000);
  6746  01416E  0EA0               	movlw	160
  6747  014170  0101               	movlb	1	; () banked
  6748  014172  6F0E               	movwf	delayUS@US& (0+255),b
  6749  014174  0E86               	movlw	134
  6750  014176  0101               	movlb	1	; () banked
  6751  014178  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  6752  01417A  0E01               	movlw	1
  6753  01417C  0101               	movlb	1	; () banked
  6754  01417E  6F10               	movwf	(delayUS@US+2)& (0+255),b
  6755  014180  0E00               	movlw	0
  6756  014182  0101               	movlb	1	; () banked
  6757  014184  6F11               	movwf	(delayUS@US+3)& (0+255),b
  6758  014186  EC10  F0B9         	call	_delayUS	;wreg free
  6759                           
  6760                           ;main.c: 107: SetLCDcursor(0, 0);
  6761  01418A  0E00               	movlw	0
  6762  01418C  0101               	movlb	1	; () banked
  6763  01418E  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  6764  014190  0E00               	movlw	0
  6765  014192  ECDA  F0BC         	call	_SetLCDcursor
  6766                           
  6767                           ;main.c: 108: LCDPrintString("Starting.");
  6768  014196  0EFE               	movlw	high STR_10
  6769  014198  0101               	movlb	1	; () banked
  6770  01419A  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6771  01419C  0E8A               	movlw	low STR_10
  6772  01419E  0101               	movlb	1	; () banked
  6773  0141A0  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  6774  0141A2  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  6775                           
  6776                           ;main.c: 109: delayUS(100000);
  6777  0141A6  0EA0               	movlw	160
  6778  0141A8  0101               	movlb	1	; () banked
  6779  0141AA  6F0E               	movwf	delayUS@US& (0+255),b
  6780  0141AC  0E86               	movlw	134
  6781  0141AE  0101               	movlb	1	; () banked
  6782  0141B0  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  6783  0141B2  0E01               	movlw	1
  6784  0141B4  0101               	movlb	1	; () banked
  6785  0141B6  6F10               	movwf	(delayUS@US+2)& (0+255),b
  6786  0141B8  0E00               	movlw	0
  6787  0141BA  0101               	movlb	1	; () banked
  6788  0141BC  6F11               	movwf	(delayUS@US+3)& (0+255),b
  6789  0141BE  EC10  F0B9         	call	_delayUS	;wreg free
  6790                           
  6791                           ;main.c: 110: SetLCDcursor(0, 0);
  6792  0141C2  0E00               	movlw	0
  6793  0141C4  0101               	movlb	1	; () banked
  6794  0141C6  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  6795  0141C8  0E00               	movlw	0
  6796  0141CA  ECDA  F0BC         	call	_SetLCDcursor
  6797                           
  6798                           ;main.c: 111: LCDPrintString("Starting..");
  6799  0141CE  0EFE               	movlw	high STR_11
  6800  0141D0  0101               	movlb	1	; () banked
  6801  0141D2  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6802  0141D4  0E11               	movlw	low STR_11
  6803  0141D6  0101               	movlb	1	; () banked
  6804  0141D8  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  6805  0141DA  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  6806                           
  6807                           ;main.c: 112: delayUS(100000);
  6808  0141DE  0EA0               	movlw	160
  6809  0141E0  0101               	movlb	1	; () banked
  6810  0141E2  6F0E               	movwf	delayUS@US& (0+255),b
  6811  0141E4  0E86               	movlw	134
  6812  0141E6  0101               	movlb	1	; () banked
  6813  0141E8  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  6814  0141EA  0E01               	movlw	1
  6815  0141EC  0101               	movlb	1	; () banked
  6816  0141EE  6F10               	movwf	(delayUS@US+2)& (0+255),b
  6817  0141F0  0E00               	movlw	0
  6818  0141F2  0101               	movlb	1	; () banked
  6819  0141F4  6F11               	movwf	(delayUS@US+3)& (0+255),b
  6820  0141F6  EC10  F0B9         	call	_delayUS	;wreg free
  6821                           
  6822                           ;main.c: 113: SetLCDcursor(0, 0);
  6823  0141FA  0E00               	movlw	0
  6824  0141FC  0101               	movlb	1	; () banked
  6825  0141FE  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  6826  014200  0E00               	movlw	0
  6827  014202  ECDA  F0BC         	call	_SetLCDcursor
  6828                           
  6829                           ;main.c: 114: LCDPrintString("Starting...");
  6830  014206  0EFD               	movlw	high STR_9
  6831  014208  0101               	movlb	1	; () banked
  6832  01420A  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6833  01420C  0EC3               	movlw	low STR_9
  6834  01420E  0101               	movlb	1	; () banked
  6835  014210  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  6836  014212  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  6837                           
  6838                           ;main.c: 115: delayUS(100000);
  6839  014216  0EA0               	movlw	160
  6840  014218  0101               	movlb	1	; () banked
  6841  01421A  6F0E               	movwf	delayUS@US& (0+255),b
  6842  01421C  0E86               	movlw	134
  6843  01421E  0101               	movlb	1	; () banked
  6844  014220  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  6845  014222  0E01               	movlw	1
  6846  014224  0101               	movlb	1	; () banked
  6847  014226  6F10               	movwf	(delayUS@US+2)& (0+255),b
  6848  014228  0E00               	movlw	0
  6849  01422A  0101               	movlb	1	; () banked
  6850  01422C  6F11               	movwf	(delayUS@US+3)& (0+255),b
  6851  01422E  EC10  F0B9         	call	_delayUS	;wreg free
  6852                           
  6853                           ;main.c: 116: SetLCDcursor(0, 0);
  6854  014232  0E00               	movlw	0
  6855  014234  0101               	movlb	1	; () banked
  6856  014236  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  6857  014238  0E00               	movlw	0
  6858  01423A  ECDA  F0BC         	call	_SetLCDcursor
  6859                           
  6860                           ;main.c: 117: LCDPrintString("Starting....");
  6861  01423E  0EFD               	movlw	high STR_13
  6862  014240  0101               	movlb	1	; () banked
  6863  014242  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6864  014244  0E7A               	movlw	low STR_13
  6865  014246  0101               	movlb	1	; () banked
  6866  014248  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  6867  01424A  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  6868                           
  6869                           ;main.c: 118: delayUS(100000);
  6870  01424E  0EA0               	movlw	160
  6871  014250  0101               	movlb	1	; () banked
  6872  014252  6F0E               	movwf	delayUS@US& (0+255),b
  6873  014254  0E86               	movlw	134
  6874  014256  0101               	movlb	1	; () banked
  6875  014258  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  6876  01425A  0E01               	movlw	1
  6877  01425C  0101               	movlb	1	; () banked
  6878  01425E  6F10               	movwf	(delayUS@US+2)& (0+255),b
  6879  014260  0E00               	movlw	0
  6880  014262  0101               	movlb	1	; () banked
  6881  014264  6F11               	movwf	(delayUS@US+3)& (0+255),b
  6882  014266  EC10  F0B9         	call	_delayUS	;wreg free
  6883                           
  6884                           ;main.c: 119: SetLCDcursor(0, 0);
  6885  01426A  0E00               	movlw	0
  6886  01426C  0101               	movlb	1	; () banked
  6887  01426E  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  6888  014270  0E00               	movlw	0
  6889  014272  ECDA  F0BC         	call	_SetLCDcursor
  6890                           
  6891                           ;main.c: 120: LCDPrintString("Starting.....");
  6892  014276  0EFC               	movlw	high STR_14
  6893  014278  0101               	movlb	1	; () banked
  6894  01427A  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6895  01427C  0EDD               	movlw	low STR_14
  6896  01427E  0101               	movlb	1	; () banked
  6897  014280  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  6898  014282  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  6899                           
  6900                           ;main.c: 121: delayUS(100000);
  6901  014286  0EA0               	movlw	160
  6902  014288  0101               	movlb	1	; () banked
  6903  01428A  6F0E               	movwf	delayUS@US& (0+255),b
  6904  01428C  0E86               	movlw	134
  6905  01428E  0101               	movlb	1	; () banked
  6906  014290  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  6907  014292  0E01               	movlw	1
  6908  014294  0101               	movlb	1	; () banked
  6909  014296  6F10               	movwf	(delayUS@US+2)& (0+255),b
  6910  014298  0E00               	movlw	0
  6911  01429A  0101               	movlb	1	; () banked
  6912  01429C  6F11               	movwf	(delayUS@US+3)& (0+255),b
  6913  01429E  EC10  F0B9         	call	_delayUS	;wreg free
  6914                           
  6915                           ;main.c: 122: SetLCDcursor(0, 0);
  6916  0142A2  0E00               	movlw	0
  6917  0142A4  0101               	movlb	1	; () banked
  6918  0142A6  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  6919  0142A8  0E00               	movlw	0
  6920  0142AA  ECDA  F0BC         	call	_SetLCDcursor
  6921                           
  6922                           ;main.c: 123: LCDPrintString("Starting......");
  6923  0142AE  0EFC               	movlw	high STR_15
  6924  0142B0  0101               	movlb	1	; () banked
  6925  0142B2  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6926  0142B4  0E42               	movlw	low STR_15
  6927  0142B6  0101               	movlb	1	; () banked
  6928  0142B8  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  6929  0142BA  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  6930                           
  6931                           ;main.c: 124: delayUS(100000);
  6932  0142BE  0EA0               	movlw	160
  6933  0142C0  0101               	movlb	1	; () banked
  6934  0142C2  6F0E               	movwf	delayUS@US& (0+255),b
  6935  0142C4  0E86               	movlw	134
  6936  0142C6  0101               	movlb	1	; () banked
  6937  0142C8  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  6938  0142CA  0E01               	movlw	1
  6939  0142CC  0101               	movlb	1	; () banked
  6940  0142CE  6F10               	movwf	(delayUS@US+2)& (0+255),b
  6941  0142D0  0E00               	movlw	0
  6942  0142D2  0101               	movlb	1	; () banked
  6943  0142D4  6F11               	movwf	(delayUS@US+3)& (0+255),b
  6944  0142D6  EC10  F0B9         	call	_delayUS	;wreg free
  6945                           
  6946                           ;main.c: 125: SetLCDcursor(0, 0);
  6947  0142DA  0E00               	movlw	0
  6948  0142DC  0101               	movlb	1	; () banked
  6949  0142DE  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  6950  0142E0  0E00               	movlw	0
  6951  0142E2  ECDA  F0BC         	call	_SetLCDcursor
  6952                           
  6953                           ;main.c: 126: LCDPrintString("Starting.......");
  6954  0142E6  0EFB               	movlw	high STR_16
  6955  0142E8  0101               	movlb	1	; () banked
  6956  0142EA  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6957  0142EC  0E6F               	movlw	low STR_16
  6958  0142EE  0101               	movlb	1	; () banked
  6959  0142F0  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  6960  0142F2  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  6961                           
  6962                           ;main.c: 127: delayUS(100000);
  6963  0142F6  0EA0               	movlw	160
  6964  0142F8  0101               	movlb	1	; () banked
  6965  0142FA  6F0E               	movwf	delayUS@US& (0+255),b
  6966  0142FC  0E86               	movlw	134
  6967  0142FE  0101               	movlb	1	; () banked
  6968  014300  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  6969  014302  0E01               	movlw	1
  6970  014304  0101               	movlb	1	; () banked
  6971  014306  6F10               	movwf	(delayUS@US+2)& (0+255),b
  6972  014308  0E00               	movlw	0
  6973  01430A  0101               	movlb	1	; () banked
  6974  01430C  6F11               	movwf	(delayUS@US+3)& (0+255),b
  6975  01430E  EC10  F0B9         	call	_delayUS	;wreg free
  6976                           
  6977                           ;main.c: 128: SetLCDcursor(0, 0);
  6978  014312  0E00               	movlw	0
  6979  014314  0101               	movlb	1	; () banked
  6980  014316  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  6981  014318  0E00               	movlw	0
  6982  01431A  ECDA  F0BC         	call	_SetLCDcursor
  6983                           
  6984                           ;main.c: 129: LCDPrintString("Starting........");
  6985  01431E  0EF9               	movlw	high STR_17
  6986  014320  0101               	movlb	1	; () banked
  6987  014322  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6988  014324  0EFE               	movlw	low STR_17
  6989  014326  0101               	movlb	1	; () banked
  6990  014328  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  6991  01432A  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  6992                           
  6993                           ;main.c: 130: delayUS(100000);
  6994  01432E  0EA0               	movlw	160
  6995  014330  0101               	movlb	1	; () banked
  6996  014332  6F0E               	movwf	delayUS@US& (0+255),b
  6997  014334  0E86               	movlw	134
  6998  014336  0101               	movlb	1	; () banked
  6999  014338  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7000  01433A  0E01               	movlw	1
  7001  01433C  0101               	movlb	1	; () banked
  7002  01433E  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7003  014340  0E00               	movlw	0
  7004  014342  0101               	movlb	1	; () banked
  7005  014344  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7006  014346  EC10  F0B9         	call	_delayUS	;wreg free
  7007                           
  7008                           ;main.c: 131: SetLCDcursor(1, 0);
  7009  01434A  0E00               	movlw	0
  7010  01434C  0101               	movlb	1	; () banked
  7011  01434E  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7012  014350  0E01               	movlw	1
  7013  014352  ECDA  F0BC         	call	_SetLCDcursor
  7014                           
  7015                           ;main.c: 132: LCDPrintString("Enter '?'");
  7016  014356  0EFE               	movlw	high STR_18
  7017  014358  0101               	movlb	1	; () banked
  7018  01435A  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7019  01435C  0E80               	movlw	low STR_18
  7020  01435E  0101               	movlb	1	; () banked
  7021  014360  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  7022  014362  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  7023                           
  7024                           ;main.c: 133: delayUS(100000);
  7025  014366  0EA0               	movlw	160
  7026  014368  0101               	movlb	1	; () banked
  7027  01436A  6F0E               	movwf	delayUS@US& (0+255),b
  7028  01436C  0E86               	movlw	134
  7029  01436E  0101               	movlb	1	; () banked
  7030  014370  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7031  014372  0E01               	movlw	1
  7032  014374  0101               	movlb	1	; () banked
  7033  014376  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7034  014378  0E00               	movlw	0
  7035  01437A  0101               	movlb	1	; () banked
  7036  01437C  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7037  01437E  EC10  F0B9         	call	_delayUS	;wreg free
  7038                           
  7039                           ;main.c: 134: UARTstring("\r\nEnter '?' for Help Menu\r\n>");
  7040  014382  0EF4               	movlw	high STR_19
  7041  014384  0101               	movlb	1	; () banked
  7042  014386  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
  7043  014388  0EDC               	movlw	low STR_19
  7044  01438A  0101               	movlb	1	; () banked
  7045  01438C  6F19               	movwf	UARTstring@data& (0+255),b
  7046  01438E  EC36  F0B3         	call	_UARTstring	;wreg free
  7047                           
  7048                           ;main.c: 136: for(count =100; count >0; count-=5)
  7049  014392  0E64               	movlw	100
  7050  014394  0101               	movlb	1	; () banked
  7051  014396  6F8B               	movwf	main@count& (0+255),b
  7052  014398  D015               	goto	L2
  7053  01439A                     l13310:
  7054                           
  7055                           ; BSR set to: 1
  7056                           ;main.c: 137: {
  7057                           ;main.c: 138: SetDuty(count);
  7058  01439A  0101               	movlb	1	; () banked
  7059  01439C  518B               	movf	main@count& (0+255),w,b
  7060  01439E  EC61  F0B1         	call	_SetDuty
  7061                           
  7062                           ;main.c: 139: delayUS(50000);
  7063  0143A2  0E50               	movlw	80
  7064  0143A4  0101               	movlb	1	; () banked
  7065  0143A6  6F0E               	movwf	delayUS@US& (0+255),b
  7066  0143A8  0EC3               	movlw	195
  7067  0143AA  0101               	movlb	1	; () banked
  7068  0143AC  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7069  0143AE  0E00               	movlw	0
  7070  0143B0  0101               	movlb	1	; () banked
  7071  0143B2  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7072  0143B4  0E00               	movlw	0
  7073  0143B6  0101               	movlb	1	; () banked
  7074  0143B8  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7075  0143BA  EC10  F0B9         	call	_delayUS	;wreg free
  7076  0143BE  0E05               	movlw	5
  7077  0143C0  0101               	movlb	1	; () banked
  7078  0143C2  5F8B               	subwf	main@count& (0+255),f,b
  7079  0143C4                     L2:
  7080                           
  7081                           ; BSR set to: 1
  7082  0143C4  0101               	movlb	1	; () banked
  7083  0143C6  678B               	tstfsz	main@count& (0+255),b
  7084  0143C8  D7E8               	goto	l13310
  7085                           
  7086                           ; BSR set to: 1
  7087                           ;main.c: 140: }
  7088                           ;main.c: 142: LATD &= ~(0b00000010+0b00000100);
  7089                           
  7090                           ; BSR set to: 1
  7091  0143CA  0EF9               	movlw	249
  7092  0143CC  168C               	andwf	3980,f,c	;volatile
  7093                           
  7094                           ; BSR set to: 1
  7095                           ;main.c: 143: ReadUSART();
  7096  0143CE  EC0D  F0BD         	call	_ReadUSART	;wreg free
  7097                           
  7098                           ;main.c: 144: ReadUSART();
  7099  0143D2  EC0D  F0BD         	call	_ReadUSART	;wreg free
  7100                           
  7101                           ;main.c: 145: ReadUSART();
  7102  0143D6  EC0D  F0BD         	call	_ReadUSART	;wreg free
  7103                           
  7104                           ;main.c: 147: ClearLCD();
  7105  0143DA  ECF5  F0BD         	call	_ClearLCD	;wreg free
  7106                           
  7107                           ;main.c: 148: SetLCDcursor(0, 0);
  7108  0143DE  0E00               	movlw	0
  7109  0143E0  0101               	movlb	1	; () banked
  7110  0143E2  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7111  0143E4  0E00               	movlw	0
  7112  0143E6  ECDA  F0BC         	call	_SetLCDcursor
  7113                           
  7114                           ;main.c: 149: LCDPrintChar('>');
  7115  0143EA  0E3E               	movlw	62
  7116  0143EC  EC17  F0BE         	call	_LCDPrintChar
  7117  0143F0                     l13330:
  7118                           
  7119                           ;main.c: 152: {
  7120                           ;main.c: 154: LCDScreenUpdate();
  7121  0143F0  ECEA  F09A         	call	_LCDScreenUpdate	;wreg free
  7122                           
  7123                           ;main.c: 155: if(Rxdata[0] != 0)
  7124  0143F4  0103               	movlb	3	; () banked
  7125  0143F6  5164               	movf	_Rxdata& (0+255),w,b
  7126  0143F8  B4D8               	btfsc	status,2,c
  7127  0143FA  D7FA               	goto	l13330
  7128                           
  7129                           ; BSR set to: 3
  7130                           ;main.c: 156: {
  7131                           ;main.c: 157: if (Rxdata[0] != '\r' && Rxdata[0] != '\n')
  7132  0143FC  0103               	movlb	3	; () banked
  7133  0143FE  5164               	movf	_Rxdata& (0+255),w,b
  7134  014400  0A0D               	xorlw	13
  7135  014402  B4D8               	btfsc	status,2,c
  7136  014404  D01A               	goto	l13342
  7137                           
  7138                           ; BSR set to: 3
  7139  014406  0103               	movlb	3	; () banked
  7140  014408  5164               	movf	_Rxdata& (0+255),w,b
  7141  01440A  0A0A               	xorlw	10
  7142  01440C  B4D8               	btfsc	status,2,c
  7143  01440E  D015               	goto	l13342
  7144                           
  7145                           ; BSR set to: 3
  7146                           ;main.c: 158: {
  7147                           ;main.c: 159: if(Command(Rxdata))
  7148  014410  0103               	movlb	3	; () banked
  7149  014412  0E03               	movlw	high _Rxdata
  7150  014414  0101               	movlb	1	; () banked
  7151  014416  6F89               	movwf	(Command@Input+1)& (0+255),b
  7152  014418  0103               	movlb	3	; () banked
  7153  01441A  0E64               	movlw	low _Rxdata
  7154  01441C  0101               	movlb	1	; () banked
  7155  01441E  6F88               	movwf	Command@Input& (0+255),b
  7156  014420  EC00  F080         	call	_Command	;wreg free
  7157  014424  0900               	iorlw	0
  7158  014426  B4D8               	btfsc	status,2,c
  7159  014428  D008               	goto	l13342
  7160                           
  7161                           ;main.c: 160: {
  7162                           ;main.c: 161: UARTstring("\r\n>");
  7163  01442A  0EF4               	movlw	high (STR_19+25)
  7164  01442C  0101               	movlb	1	; () banked
  7165  01442E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
  7166  014430  0EF5               	movlw	low (STR_19+25)
  7167  014432  0101               	movlb	1	; () banked
  7168  014434  6F19               	movwf	UARTstring@data& (0+255),b
  7169  014436  EC36  F0B3         	call	_UARTstring	;wreg free
  7170  01443A                     l13342:
  7171                           
  7172                           ;main.c: 162: }
  7173                           ;main.c: 163: }
  7174                           ;main.c: 164: cleanBuffer(Rxdata, 100);
  7175  01443A  0103               	movlb	3	; () banked
  7176  01443C  0E03               	movlw	high _Rxdata
  7177  01443E  0101               	movlb	1	; () banked
  7178  014440  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
  7179  014442  0103               	movlb	3	; () banked
  7180  014444  0E64               	movlw	low _Rxdata
  7181  014446  0101               	movlb	1	; () banked
  7182  014448  6F0E               	movwf	cleanBuffer@data& (0+255),b
  7183  01444A  0E00               	movlw	0
  7184  01444C  0101               	movlb	1	; () banked
  7185  01444E  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
  7186  014450  0E64               	movlw	100
  7187  014452  0101               	movlb	1	; () banked
  7188  014454  6F10               	movwf	cleanBuffer@count& (0+255),b
  7189  014456  EC50  F0BB         	call	_cleanBuffer	;wreg free
  7190  01445A  D7CA               	goto	l13330
  7191  01445C                     __end_of_main:
  7192                           	opt stack 0
  7193                           tblptru	equ	0xFF8
  7194                           tblptrh	equ	0xFF7
  7195                           tblptrl	equ	0xFF6
  7196                           tablat	equ	0xFF5
  7197                           postinc0	equ	0xFEE
  7198                           wreg	equ	0xFE8
  7199                           postdec1	equ	0xFE5
  7200                           fsr1l	equ	0xFE1
  7201                           status	equ	0xFD8
  7202                           
  7203 ;; *************** function _init_LCD *****************
  7204 ;; Defined at:
  7205 ;;		line 66 in file "LCD.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;		None
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;		None
  7210 ;; Return value:  Size  Location     Type
  7211 ;;		None               void
  7212 ;; Registers used:
  7213 ;;		wreg, status,2, status,0, cstack
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7223 ;;Total ram usage:        0 bytes
  7224 ;; Hardware stack levels used:    1
  7225 ;; Hardware stack levels required when called:   10
  7226 ;; This function calls:
  7227 ;;		_ClearLCD
  7228 ;;		_PulseEnablePin
  7229 ;;		_SendLCDbyte
  7230 ;;		_delayUS
  7231 ;; This function is called by:
  7232 ;;		_main
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text1
  7237  01581A                     __ptext1:
  7238                           	opt stack 0
  7239  01581A                     _init_LCD:
  7240                           	opt stack 19
  7241                           
  7242                           ;LCD.c: 68: LATD &= ~(0b01000000);
  7243                           
  7244                           ;incstack = 0
  7245  01581A  9C8C               	bcf	3980,6,c	;volatile
  7246                           
  7247                           ;LCD.c: 69: PulseEnablePin();
  7248  01581C  EC82  F0BC         	call	_PulseEnablePin	;wreg free
  7249                           
  7250                           ;LCD.c: 70: LATD &= ~(0b10000000 + 0b00100000);
  7251  015820  0E5F               	movlw	95
  7252  015822  168C               	andwf	3980,f,c	;volatile
  7253                           
  7254                           ;LCD.c: 71: PulseEnablePin();
  7255  015824  EC82  F0BC         	call	_PulseEnablePin	;wreg free
  7256                           
  7257                           ;LCD.c: 73: SendLCDbyte(0x00, 1);
  7258  015828  0E01               	movlw	1
  7259  01582A  0101               	movlb	1	; () banked
  7260  01582C  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
  7261  01582E  0E00               	movlw	0
  7262  015830  EC8A  F0B0         	call	_SendLCDbyte
  7263                           
  7264                           ;LCD.c: 74: delayUS(50000);
  7265  015834  0E50               	movlw	80
  7266  015836  0101               	movlb	1	; () banked
  7267  015838  6F0E               	movwf	delayUS@US& (0+255),b
  7268  01583A  0EC3               	movlw	195
  7269  01583C  0101               	movlb	1	; () banked
  7270  01583E  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7271  015840  0E00               	movlw	0
  7272  015842  0101               	movlb	1	; () banked
  7273  015844  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7274  015846  0E00               	movlw	0
  7275  015848  0101               	movlb	1	; () banked
  7276  01584A  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7277  01584C  EC10  F0B9         	call	_delayUS	;wreg free
  7278                           
  7279                           ;LCD.c: 75: SendLCDbyte(0x00, 0);
  7280  015850  0E00               	movlw	0
  7281  015852  0101               	movlb	1	; () banked
  7282  015854  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
  7283  015856  0E00               	movlw	0
  7284  015858  EC8A  F0B0         	call	_SendLCDbyte
  7285                           
  7286                           ;LCD.c: 76: delayUS(50000);
  7287  01585C  0E50               	movlw	80
  7288  01585E  0101               	movlb	1	; () banked
  7289  015860  6F0E               	movwf	delayUS@US& (0+255),b
  7290  015862  0EC3               	movlw	195
  7291  015864  0101               	movlb	1	; () banked
  7292  015866  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7293  015868  0E00               	movlw	0
  7294  01586A  0101               	movlb	1	; () banked
  7295  01586C  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7296  01586E  0E00               	movlw	0
  7297  015870  0101               	movlb	1	; () banked
  7298  015872  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7299  015874  EC10  F0B9         	call	_delayUS	;wreg free
  7300                           
  7301                           ;LCD.c: 78: LATA |= (0b00100000);
  7302  015878  8A89               	bsf	3977,5,c	;volatile
  7303                           
  7304                           ;LCD.c: 79: delayUS(50000);
  7305  01587A  0E50               	movlw	80
  7306  01587C  0101               	movlb	1	; () banked
  7307  01587E  6F0E               	movwf	delayUS@US& (0+255),b
  7308  015880  0EC3               	movlw	195
  7309  015882  0101               	movlb	1	; () banked
  7310  015884  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7311  015886  0E00               	movlw	0
  7312  015888  0101               	movlb	1	; () banked
  7313  01588A  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7314  01588C  0E00               	movlw	0
  7315  01588E  0101               	movlb	1	; () banked
  7316  015890  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7317  015892  EC10  F0B9         	call	_delayUS	;wreg free
  7318                           
  7319                           ;LCD.c: 80: PulseEnablePin();
  7320  015896  EC82  F0BC         	call	_PulseEnablePin	;wreg free
  7321                           
  7322                           ;LCD.c: 81: delayUS(50000);
  7323  01589A  0E50               	movlw	80
  7324  01589C  0101               	movlb	1	; () banked
  7325  01589E  6F0E               	movwf	delayUS@US& (0+255),b
  7326  0158A0  0EC3               	movlw	195
  7327  0158A2  0101               	movlb	1	; () banked
  7328  0158A4  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7329  0158A6  0E00               	movlw	0
  7330  0158A8  0101               	movlb	1	; () banked
  7331  0158AA  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7332  0158AC  0E00               	movlw	0
  7333  0158AE  0101               	movlb	1	; () banked
  7334  0158B0  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7335  0158B2  EC10  F0B9         	call	_delayUS	;wreg free
  7336                           
  7337                           ;LCD.c: 85: SendLCDbyte(0x28, 0);
  7338  0158B6  0E00               	movlw	0
  7339  0158B8  0101               	movlb	1	; () banked
  7340  0158BA  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
  7341  0158BC  0E28               	movlw	40
  7342  0158BE  EC8A  F0B0         	call	_SendLCDbyte
  7343                           
  7344                           ;LCD.c: 86: delayUS(50000);
  7345  0158C2  0E50               	movlw	80
  7346  0158C4  0101               	movlb	1	; () banked
  7347  0158C6  6F0E               	movwf	delayUS@US& (0+255),b
  7348  0158C8  0EC3               	movlw	195
  7349  0158CA  0101               	movlb	1	; () banked
  7350  0158CC  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7351  0158CE  0E00               	movlw	0
  7352  0158D0  0101               	movlb	1	; () banked
  7353  0158D2  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7354  0158D4  0E00               	movlw	0
  7355  0158D6  0101               	movlb	1	; () banked
  7356  0158D8  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7357  0158DA  EC10  F0B9         	call	_delayUS	;wreg free
  7358                           
  7359                           ;LCD.c: 89: SendLCDbyte(0x0C, 0);
  7360  0158DE  0E00               	movlw	0
  7361  0158E0  0101               	movlb	1	; () banked
  7362  0158E2  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
  7363  0158E4  0E0C               	movlw	12
  7364  0158E6  EC8A  F0B0         	call	_SendLCDbyte
  7365                           
  7366                           ;LCD.c: 90: delayUS(50000);
  7367  0158EA  0E50               	movlw	80
  7368  0158EC  0101               	movlb	1	; () banked
  7369  0158EE  6F0E               	movwf	delayUS@US& (0+255),b
  7370  0158F0  0EC3               	movlw	195
  7371  0158F2  0101               	movlb	1	; () banked
  7372  0158F4  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7373  0158F6  0E00               	movlw	0
  7374  0158F8  0101               	movlb	1	; () banked
  7375  0158FA  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7376  0158FC  0E00               	movlw	0
  7377  0158FE  0101               	movlb	1	; () banked
  7378  015900  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7379  015902  EC10  F0B9         	call	_delayUS	;wreg free
  7380                           
  7381                           ;LCD.c: 93: SendLCDbyte(0x06, 0);
  7382  015906  0E00               	movlw	0
  7383  015908  0101               	movlb	1	; () banked
  7384  01590A  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
  7385  01590C  0E06               	movlw	6
  7386  01590E  EC8A  F0B0         	call	_SendLCDbyte
  7387                           
  7388                           ;LCD.c: 94: delayUS(50000);
  7389  015912  0E50               	movlw	80
  7390  015914  0101               	movlb	1	; () banked
  7391  015916  6F0E               	movwf	delayUS@US& (0+255),b
  7392  015918  0EC3               	movlw	195
  7393  01591A  0101               	movlb	1	; () banked
  7394  01591C  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7395  01591E  0E00               	movlw	0
  7396  015920  0101               	movlb	1	; () banked
  7397  015922  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7398  015924  0E00               	movlw	0
  7399  015926  0101               	movlb	1	; () banked
  7400  015928  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7401  01592A  EC10  F0B9         	call	_delayUS	;wreg free
  7402                           
  7403                           ;LCD.c: 96: ClearLCD();
  7404  01592E  ECF5  F0BD         	call	_ClearLCD	;wreg free
  7405                           
  7406                           ;LCD.c: 97: delayUS(50000);
  7407  015932  0E50               	movlw	80
  7408  015934  0101               	movlb	1	; () banked
  7409  015936  6F0E               	movwf	delayUS@US& (0+255),b
  7410  015938  0EC3               	movlw	195
  7411  01593A  0101               	movlb	1	; () banked
  7412  01593C  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7413  01593E  0E00               	movlw	0
  7414  015940  0101               	movlb	1	; () banked
  7415  015942  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7416  015944  0E00               	movlw	0
  7417  015946  0101               	movlb	1	; () banked
  7418  015948  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7419  01594A  EC10  F0B9         	call	_delayUS	;wreg free
  7420  01594E  0012               	return	
  7421  015950                     __end_of_init_LCD:
  7422                           	opt stack 0
  7423                           tblptru	equ	0xFF8
  7424                           tblptrh	equ	0xFF7
  7425                           tblptrl	equ	0xFF6
  7426                           tablat	equ	0xFF5
  7427                           postinc0	equ	0xFEE
  7428                           wreg	equ	0xFE8
  7429                           postdec1	equ	0xFE5
  7430                           fsr1l	equ	0xFE1
  7431                           status	equ	0xFD8
  7432                           
  7433 ;; *************** function _RTC_INIT *****************
  7434 ;; Defined at:
  7435 ;;		line 57 in file "RTC.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;		None
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;		None
  7440 ;; Return value:  Size  Location     Type
  7441 ;;		None               void
  7442 ;; Registers used:
  7443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7453 ;;Total ram usage:        0 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; Hardware stack levels required when called:   10
  7456 ;; This function calls:
  7457 ;;		_InternalADC_Read
  7458 ;;		_RTC_Clock_Enable
  7459 ;;		_RTC_TIME_NONMilitary
  7460 ;; This function is called by:
  7461 ;;		_main
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           	psect	text2
  7466  017C68                     __ptext2:
  7467                           	opt stack 0
  7468  017C68                     _RTC_INIT:
  7469                           	opt stack 19
  7470                           
  7471                           ;RTC.c: 59: RTC_Clock_Enable();
  7472                           
  7473                           ;incstack = 0
  7474  017C68  EC7C  F0BB         	call	_RTC_Clock_Enable	;wreg free
  7475                           
  7476                           ;RTC.c: 60: RTC_TIME_NONMilitary();
  7477  017C6C  EC94  F0B7         	call	_RTC_TIME_NONMilitary	;wreg free
  7478                           
  7479                           ;RTC.c: 61: InternalADC_Read(2);
  7480  017C70  0E02               	movlw	2
  7481  017C72  EC5A  F0BA         	call	_InternalADC_Read
  7482  017C76  0012               	return	
  7483  017C78                     __end_of_RTC_INIT:
  7484                           	opt stack 0
  7485                           tblptru	equ	0xFF8
  7486                           tblptrh	equ	0xFF7
  7487                           tblptrl	equ	0xFF6
  7488                           tablat	equ	0xFF5
  7489                           postinc0	equ	0xFEE
  7490                           wreg	equ	0xFE8
  7491                           postdec1	equ	0xFE5
  7492                           fsr1l	equ	0xFE1
  7493                           status	equ	0xFD8
  7494                           
  7495 ;; *************** function _RTC_TIME_NONMilitary *****************
  7496 ;; Defined at:
  7497 ;;		line 89 in file "RTC.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;		None
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  temphours       2   27[BANK1 ] int 
  7502 ;;  Error           2   25[BANK1 ] int 
  7503 ;; Return value:  Size  Location     Type
  7504 ;;		None               void
  7505 ;; Registers used:
  7506 ;;		wreg, status,2, status,0, prodl, cstack
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7513 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7514 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7515 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7516 ;;Total ram usage:        5 bytes
  7517 ;; Hardware stack levels used:    1
  7518 ;; Hardware stack levels required when called:    9
  7519 ;; This function calls:
  7520 ;;		_I2C_Read_At_Address
  7521 ;;		_I2C_Write_At_Address
  7522 ;;		_ResetI2C
  7523 ;; This function is called by:
  7524 ;;		_RTC_INIT
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528                           	psect	text3
  7529  016F28                     __ptext3:
  7530                           	opt stack 0
  7531  016F28                     _RTC_TIME_NONMilitary:
  7532                           	opt stack 19
  7533                           
  7534                           ;RTC.c: 91: int temphours = 0;
  7535                           
  7536                           ;incstack = 0
  7537  016F28  0E00               	movlw	0
  7538  016F2A  0101               	movlb	1	; () banked
  7539  016F2C  6F1C               	movwf	(RTC_TIME_NONMilitary@temphours+1)& (0+255),b
  7540  016F2E  0E00               	movlw	0
  7541  016F30  0101               	movlb	1	; () banked
  7542  016F32  6F1B               	movwf	RTC_TIME_NONMilitary@temphours& (0+255),b
  7543                           
  7544                           ; BSR set to: 1
  7545                           ;RTC.c: 92: int Error = -1;
  7546  016F34  0101               	movlb	1	; () banked
  7547  016F36  6919               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  7548  016F38  0101               	movlb	1	; () banked
  7549  016F3A  691A               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  7550                           
  7551                           ; BSR set to: 1
  7552                           ;RTC.c: 94: temphours = I2C_Read_At_Address(0b1101000, 0x02);
  7553  016F3C  0E02               	movlw	2
  7554  016F3E  0101               	movlb	1	; () banked
  7555  016F40  6F11               	movwf	I2C_Read_At_Address@Register& (0+255),b
  7556  016F42  0E68               	movlw	104
  7557  016F44  ECA8  F0AC         	call	_I2C_Read_At_Address
  7558  016F48  0101               	movlb	1	; () banked
  7559  016F4A  C111  F11B         	movff	?_I2C_Read_At_Address,RTC_TIME_NONMilitary@temphours
  7560  016F4E  0101               	movlb	1	; () banked
  7561  016F50  C112  F11C         	movff	?_I2C_Read_At_Address+1,RTC_TIME_NONMilitary@temphours+1
  7562                           
  7563                           ; BSR set to: 1
  7564                           ;RTC.c: 95: if(temphours >= 0)
  7565  016F54  0101               	movlb	1	; () banked
  7566  016F56  BF1C               	btfsc	(RTC_TIME_NONMilitary@temphours+1)& (0+255),7,b
  7567  016F58  D016               	goto	l1096
  7568                           
  7569                           ; BSR set to: 1
  7570                           ;RTC.c: 96: {
  7571                           ;RTC.c: 97: if((temphours & 0x40) == 0)
  7572  016F5A  0101               	movlb	1	; () banked
  7573  016F5C  BD1B               	btfsc	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  7574  016F5E  D017               	goto	l12028
  7575                           
  7576                           ; BSR set to: 1
  7577                           ;RTC.c: 98: {
  7578                           ;RTC.c: 99: temphours |= 0x40;
  7579  016F60  0101               	movlb	1	; () banked
  7580  016F62  8D1B               	bsf	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  7581                           
  7582                           ; BSR set to: 1
  7583                           ;RTC.c: 100: Error = I2C_Write_At_Address( 0b1101000, 0x02, temphours );
  7584  016F64  0E02               	movlw	2
  7585  016F66  0101               	movlb	1	; () banked
  7586  016F68  6F11               	movwf	I2C_Write_At_Address@Register& (0+255),b
  7587  016F6A  C11B  F112         	movff	RTC_TIME_NONMilitary@temphours,I2C_Write_At_Address@data
  7588  016F6E  0E68               	movlw	104
  7589  016F70  EC88  F0B2         	call	_I2C_Write_At_Address
  7590  016F74  0101               	movlb	1	; () banked
  7591  016F76  6F18               	movwf	??_RTC_TIME_NONMilitary& (0+255),b
  7592  016F78  0101               	movlb	1	; () banked
  7593  016F7A  5118               	movf	??_RTC_TIME_NONMilitary& (0+255),w,b
  7594  016F7C  0101               	movlb	1	; () banked
  7595  016F7E  6F19               	movwf	RTC_TIME_NONMilitary@Error& (0+255),b
  7596  016F80  0101               	movlb	1	; () banked
  7597  016F82  6B1A               	clrf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  7598  016F84  D004               	goto	l12028
  7599  016F86                     l1096:
  7600                           
  7601                           ; BSR set to: 1
  7602                           ;RTC.c: 103: else
  7603                           ;RTC.c: 104: {
  7604                           ;RTC.c: 105: Error = -1;
  7605  016F86  0101               	movlb	1	; () banked
  7606  016F88  6919               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  7607  016F8A  0101               	movlb	1	; () banked
  7608  016F8C  691A               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  7609  016F8E                     l12028:
  7610                           
  7611                           ; BSR set to: 1
  7612                           ;RTC.c: 106: }
  7613                           ;RTC.c: 107: if(Error < 0 )
  7614  016F8E  0101               	movlb	1	; () banked
  7615  016F90  511A               	movf	(RTC_TIME_NONMilitary@Error+1)& (0+255),w,b
  7616  016F92  0A80               	xorlw	128
  7617  016F94  6EF3               	movwf	prodl,c
  7618  016F96  0E80               	movlw	128
  7619  016F98  5CF3               	subwf	prodl,w,c
  7620  016F9A  0E00               	movlw	0
  7621  016F9C  B4D8               	btfsc	status,2,c
  7622  016F9E  5D19               	subwf	RTC_TIME_NONMilitary@Error& (0+255),w,b
  7623  016FA0  B0D8               	btfsc	status,0,c
  7624  016FA2  0012               	return	
  7625                           
  7626                           ; BSR set to: 1
  7627                           ;RTC.c: 108: {
  7628                           ;RTC.c: 109: ResetI2C();
  7629  016FA4  EC98  F0BD         	call	_ResetI2C	;wreg free
  7630  016FA8  0012               	return	
  7631  016FAA                     __end_of_RTC_TIME_NONMilitary:
  7632                           	opt stack 0
  7633                           tblptru	equ	0xFF8
  7634                           tblptrh	equ	0xFF7
  7635                           tblptrl	equ	0xFF6
  7636                           tablat	equ	0xFF5
  7637                           prodl	equ	0xFF3
  7638                           postinc0	equ	0xFEE
  7639                           wreg	equ	0xFE8
  7640                           postdec1	equ	0xFE5
  7641                           fsr1l	equ	0xFE1
  7642                           status	equ	0xFD8
  7643                           
  7644 ;; *************** function _RTC_Clock_Enable *****************
  7645 ;; Defined at:
  7646 ;;		line 70 in file "RTC.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;		None
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;  tempSeconds     2   24[BANK1 ] int 
  7651 ;;  Error           1   26[BANK1 ] char 
  7652 ;; Return value:  Size  Location     Type
  7653 ;;		None               void
  7654 ;; Registers used:
  7655 ;;		wreg, status,2, status,0, cstack
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;Total ram usage:        3 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; Hardware stack levels required when called:    9
  7668 ;; This function calls:
  7669 ;;		_I2C_Read_At_Address
  7670 ;;		_I2C_Write_At_Address
  7671 ;;		_ResetI2C
  7672 ;; This function is called by:
  7673 ;;		_RTC_INIT
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           	psect	text4
  7678  0176F8                     __ptext4:
  7679                           	opt stack 0
  7680  0176F8                     _RTC_Clock_Enable:
  7681                           	opt stack 19
  7682                           
  7683                           ;RTC.c: 72: int tempSeconds =0;
  7684                           
  7685                           ;incstack = 0
  7686  0176F8  0E00               	movlw	0
  7687  0176FA  0101               	movlb	1	; () banked
  7688  0176FC  6F19               	movwf	(RTC_Clock_Enable@tempSeconds+1)& (0+255),b
  7689  0176FE  0E00               	movlw	0
  7690  017700  0101               	movlb	1	; () banked
  7691  017702  6F18               	movwf	RTC_Clock_Enable@tempSeconds& (0+255),b
  7692                           
  7693                           ;RTC.c: 73: signed char Error=0;
  7694  017704  0E00               	movlw	0
  7695  017706  0101               	movlb	1	; () banked
  7696  017708  6F1A               	movwf	RTC_Clock_Enable@Error& (0+255),b
  7697                           
  7698                           ; BSR set to: 1
  7699                           ;RTC.c: 75: tempSeconds = I2C_Read_At_Address(0b1101000, 0x00);
  7700  01770A  0E00               	movlw	0
  7701  01770C  0101               	movlb	1	; () banked
  7702  01770E  6F11               	movwf	I2C_Read_At_Address@Register& (0+255),b
  7703  017710  0E68               	movlw	104
  7704  017712  ECA8  F0AC         	call	_I2C_Read_At_Address
  7705  017716  0101               	movlb	1	; () banked
  7706  017718  C111  F118         	movff	?_I2C_Read_At_Address,RTC_Clock_Enable@tempSeconds
  7707  01771C  0101               	movlb	1	; () banked
  7708  01771E  C112  F119         	movff	?_I2C_Read_At_Address+1,RTC_Clock_Enable@tempSeconds+1
  7709                           
  7710                           ; BSR set to: 1
  7711                           ;RTC.c: 76: Error = I2C_Write_At_Address( 0b1101000, 0x00, (tempSeconds & 0x7F) );
  7712  017722  0E00               	movlw	0
  7713  017724  0101               	movlb	1	; () banked
  7714  017726  6F11               	movwf	I2C_Write_At_Address@Register& (0+255),b
  7715  017728  0101               	movlb	1	; () banked
  7716  01772A  5118               	movf	RTC_Clock_Enable@tempSeconds& (0+255),w,b
  7717  01772C  0B7F               	andlw	127
  7718  01772E  0101               	movlb	1	; () banked
  7719  017730  6F12               	movwf	I2C_Write_At_Address@data& (0+255),b
  7720  017732  0E68               	movlw	104
  7721  017734  EC88  F0B2         	call	_I2C_Write_At_Address
  7722  017738  0101               	movlb	1	; () banked
  7723  01773A  6F1A               	movwf	RTC_Clock_Enable@Error& (0+255),b
  7724                           
  7725                           ; BSR set to: 1
  7726                           ;RTC.c: 78: if(Error < 0 )
  7727  01773C  0101               	movlb	1	; () banked
  7728  01773E  AF1A               	btfss	RTC_Clock_Enable@Error& (0+255),7,b
  7729  017740  0012               	return	
  7730                           
  7731                           ; BSR set to: 1
  7732                           ;RTC.c: 79: {
  7733                           ;RTC.c: 80: ResetI2C();
  7734  017742  EC98  F0BD         	call	_ResetI2C	;wreg free
  7735  017746  0012               	return	
  7736  017748                     __end_of_RTC_Clock_Enable:
  7737                           	opt stack 0
  7738                           tblptru	equ	0xFF8
  7739                           tblptrh	equ	0xFF7
  7740                           tblptrl	equ	0xFF6
  7741                           tablat	equ	0xFF5
  7742                           prodl	equ	0xFF3
  7743                           postinc0	equ	0xFEE
  7744                           wreg	equ	0xFE8
  7745                           postdec1	equ	0xFE5
  7746                           fsr1l	equ	0xFE1
  7747                           status	equ	0xFD8
  7748                           
  7749 ;; *************** function _I2C_Read_At_Address *****************
  7750 ;; Defined at:
  7751 ;;		line 224 in file "I2C.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  I2Caddress      1    wreg     unsigned char 
  7754 ;;  Register        1   17[BANK1 ] unsigned char 
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;  I2Caddress      1   19[BANK1 ] unsigned char 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  2   17[BANK1 ] int 
  7759 ;; Registers used:
  7760 ;;		wreg, status,2, status,0, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7766 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7767 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7769 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7770 ;;Total ram usage:        3 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:    8
  7773 ;; This function calls:
  7774 ;;		_IdleI2C
  7775 ;;		_WriteI2C
  7776 ;; This function is called by:
  7777 ;;		_RTC_Clock_Enable
  7778 ;;		_RTC_TIME_NONMilitary
  7779 ;;		_RTC_Clock_Disable
  7780 ;;		_READ_RTC_SECONDS
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784                           	psect	text5
  7785  015950                     __ptext5:
  7786                           	opt stack 0
  7787  015950                     _I2C_Read_At_Address:
  7788                           	opt stack 19
  7789                           
  7790                           ;incstack = 0
  7791                           ;I2C_Read_At_Address@I2Caddress stored from wreg
  7792  015950  0101               	movlb	1	; () banked
  7793  015952  6F13               	movwf	I2C_Read_At_Address@I2Caddress& (0+255),b
  7794                           
  7795                           ; BSR set to: 1
  7796                           ;I2C.c: 226: IdleI2C();
  7797  015954  EC2B  F0BE         	call	_IdleI2C	;wreg free
  7798                           
  7799                           ;I2C.c: 227: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  7800  015958  80C5               	bsf	4037,0,c	;volatile
  7801  01595A                     l1303:
  7802  01595A  B0C5               	btfsc	4037,0,c	;volatile
  7803  01595C  D7FE               	goto	l1303
  7804  01595E                     l1306:
  7805  01595E  B0C5               	btfsc	4037,0,c	;volatile
  7806  015960  D7FE               	goto	l1306
  7807                           
  7808                           ;I2C.c: 229: if ( PIR2bits.BCLIF )
  7809  015962  A6A1               	btfss	4001,3,c	;volatile
  7810  015964  D005               	goto	l10706
  7811                           
  7812                           ;I2C.c: 230: {
  7813                           ;I2C.c: 231: return ( -1 );
  7814  015966  0101               	movlb	1	; () banked
  7815  015968  6911               	setf	?_I2C_Read_At_Address& (0+255),b
  7816  01596A  0101               	movlb	1	; () banked
  7817  01596C  6912               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  7818  01596E  0012               	return	
  7819  015970                     l10706:
  7820                           
  7821                           ;I2C.c: 233: else
  7822                           ;I2C.c: 234: {
  7823                           ;I2C.c: 235: if ( WriteI2C( (I2Caddress << 1 ) & 0xFE ) )
  7824  015970  0101               	movlb	1	; () banked
  7825  015972  5113               	movf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  7826  015974  0101               	movlb	1	; () banked
  7827  015976  2513               	addwf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  7828  015978  0BFE               	andlw	254
  7829  01597A  ECC6  F0B6         	call	_WriteI2C
  7830  01597E  0900               	iorlw	0
  7831  015980  B4D8               	btfsc	status,2,c
  7832  015982  D00A               	goto	l1312
  7833                           
  7834                           ;I2C.c: 236: {
  7835                           ;I2C.c: 237: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7836  015984  84C5               	bsf	4037,2,c	;volatile
  7837  015986                     l1313:
  7838  015986  B4C5               	btfsc	4037,2,c	;volatile
  7839  015988  D7FE               	goto	l1313
  7840                           
  7841                           ;I2C.c: 238: return ( -3 );
  7842  01598A  0EFF               	movlw	255
  7843  01598C  0101               	movlb	1	; () banked
  7844  01598E  6F12               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7845  015990  0EFD               	movlw	253
  7846  015992  0101               	movlb	1	; () banked
  7847  015994  6F11               	movwf	?_I2C_Read_At_Address& (0+255),b
  7848  015996  0012               	return	
  7849  015998                     l1312:
  7850                           
  7851                           ;I2C.c: 239: }
  7852                           ;I2C.c: 242: if ( !SSPCON2bits.ACKSTAT )
  7853  015998  BCC5               	btfsc	4037,6,c	;volatile
  7854  01599A  D05C               	goto	l1316
  7855                           
  7856                           ;I2C.c: 243: {
  7857                           ;I2C.c: 244: if ( WriteI2C( Register ) )
  7858  01599C  0101               	movlb	1	; () banked
  7859  01599E  5111               	movf	I2C_Read_At_Address@Register& (0+255),w,b
  7860  0159A0  ECC6  F0B6         	call	_WriteI2C
  7861  0159A4  0900               	iorlw	0
  7862  0159A6  B4D8               	btfsc	status,2,c
  7863  0159A8  D00A               	goto	l1317
  7864                           
  7865                           ;I2C.c: 245: {
  7866                           ;I2C.c: 246: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7867  0159AA  84C5               	bsf	4037,2,c	;volatile
  7868  0159AC                     l1318:
  7869  0159AC  B4C5               	btfsc	4037,2,c	;volatile
  7870  0159AE  D7FE               	goto	l1318
  7871                           
  7872                           ;I2C.c: 247: return ( -3 );
  7873  0159B0  0EFF               	movlw	255
  7874  0159B2  0101               	movlb	1	; () banked
  7875  0159B4  6F12               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7876  0159B6  0EFD               	movlw	253
  7877  0159B8  0101               	movlb	1	; () banked
  7878  0159BA  6F11               	movwf	?_I2C_Read_At_Address& (0+255),b
  7879  0159BC  0012               	return	
  7880  0159BE                     l1317:
  7881                           
  7882                           ;I2C.c: 248: }
  7883                           ;I2C.c: 251: if ( !SSPCON2bits.ACKSTAT )
  7884  0159BE  BCC5               	btfsc	4037,6,c	;volatile
  7885  0159C0  D03F               	goto	l1321
  7886                           
  7887                           ;I2C.c: 252: {
  7888                           ;I2C.c: 253: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  7889  0159C2  82C5               	bsf	4037,1,c	;volatile
  7890  0159C4                     l1322:
  7891  0159C4  B2C5               	btfsc	4037,1,c	;volatile
  7892  0159C6  D7FE               	goto	l1322
  7893  0159C8                     l1325:
  7894  0159C8  B2C5               	btfsc	4037,1,c	;volatile
  7895  0159CA  D7FE               	goto	l1325
  7896                           
  7897                           ;I2C.c: 255: if ( PIR2bits.BCLIF )
  7898  0159CC  A6A1               	btfss	4001,3,c	;volatile
  7899  0159CE  D005               	goto	l10726
  7900                           
  7901                           ;I2C.c: 256: {
  7902                           ;I2C.c: 257: return ( -1 );
  7903  0159D0  0101               	movlb	1	; () banked
  7904  0159D2  6911               	setf	?_I2C_Read_At_Address& (0+255),b
  7905  0159D4  0101               	movlb	1	; () banked
  7906  0159D6  6912               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  7907  0159D8  0012               	return	
  7908  0159DA                     l10726:
  7909                           
  7910                           ;I2C.c: 258: }
  7911                           ;I2C.c: 260: if ( WriteI2C( (I2Caddress << 1) + 1 ) )
  7912  0159DA  80D8               	bsf	status,0,c
  7913  0159DC  0101               	movlb	1	; () banked
  7914  0159DE  3513               	rlcf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  7915  0159E0  ECC6  F0B6         	call	_WriteI2C
  7916  0159E4  0900               	iorlw	0
  7917  0159E6  B4D8               	btfsc	status,2,c
  7918  0159E8  D00A               	goto	l1329
  7919                           
  7920                           ;I2C.c: 261: {
  7921                           ;I2C.c: 262: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7922  0159EA  84C5               	bsf	4037,2,c	;volatile
  7923  0159EC                     l1330:
  7924  0159EC  B4C5               	btfsc	4037,2,c	;volatile
  7925  0159EE  D7FE               	goto	l1330
  7926                           
  7927                           ;I2C.c: 263: return ( -3 );
  7928  0159F0  0EFF               	movlw	255
  7929  0159F2  0101               	movlb	1	; () banked
  7930  0159F4  6F12               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7931  0159F6  0EFD               	movlw	253
  7932  0159F8  0101               	movlb	1	; () banked
  7933  0159FA  6F11               	movwf	?_I2C_Read_At_Address& (0+255),b
  7934  0159FC  0012               	return	
  7935  0159FE                     l1329:
  7936                           
  7937                           ;I2C.c: 264: }
  7938                           ;I2C.c: 267: if ( !SSPCON2bits.ACKSTAT )
  7939  0159FE  BCC5               	btfsc	4037,6,c	;volatile
  7940  015A00  D015               	goto	l1333
  7941                           
  7942                           ;I2C.c: 268: {
  7943                           ;I2C.c: 269: SSPCON2bits.RCEN = 1;
  7944  015A02  86C5               	bsf	4037,3,c	;volatile
  7945  015A04                     l1334:
  7946  015A04  B6C5               	btfsc	4037,3,c	;volatile
  7947  015A06  D7FE               	goto	l1334
  7948                           
  7949                           ;I2C.c: 271: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  7950  015A08  8AC5               	bsf	4037,5,c	;volatile
  7951  015A0A  88C5               	bsf	4037,4,c	;volatile
  7952  015A0C                     l1337:
  7953  015A0C  B8C5               	btfsc	4037,4,c	;volatile
  7954  015A0E  D7FE               	goto	l1337
  7955  015A10                     l1340:
  7956  015A10  B8C5               	btfsc	4037,4,c	;volatile
  7957  015A12  D7FE               	goto	l1340
  7958                           
  7959                           ;I2C.c: 273: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7960  015A14  84C5               	bsf	4037,2,c	;volatile
  7961  015A16                     l1343:
  7962  015A16  B4C5               	btfsc	4037,2,c	;volatile
  7963  015A18  D7FE               	goto	l1343
  7964  015A1A                     l1346:
  7965  015A1A  B4C5               	btfsc	4037,2,c	;volatile
  7966  015A1C  D7FE               	goto	l1346
  7967                           
  7968                           ;I2C.c: 275: if ( PIR2bits.BCLIF )
  7969  015A1E  A6A1               	btfss	4001,3,c	;volatile
  7970  015A20  D023               	goto	l1311
  7971                           
  7972                           ;I2C.c: 276: {
  7973                           ;I2C.c: 277: return ( -1 );
  7974  015A22  0101               	movlb	1	; () banked
  7975  015A24  6911               	setf	?_I2C_Read_At_Address& (0+255),b
  7976  015A26  0101               	movlb	1	; () banked
  7977  015A28  6912               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  7978  015A2A  0012               	return	
  7979  015A2C                     l1333:
  7980                           
  7981                           ;I2C.c: 280: else
  7982                           ;I2C.c: 281: {
  7983                           ;I2C.c: 282: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7984  015A2C  84C5               	bsf	4037,2,c	;volatile
  7985  015A2E                     l1351:
  7986  015A2E  B4C5               	btfsc	4037,2,c	;volatile
  7987  015A30  D7FE               	goto	l1351
  7988                           
  7989                           ;I2C.c: 283: return ( -2 );
  7990  015A32  0EFF               	movlw	255
  7991  015A34  0101               	movlb	1	; () banked
  7992  015A36  6F12               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7993  015A38  0EFE               	movlw	254
  7994  015A3A  0101               	movlb	1	; () banked
  7995  015A3C  6F11               	movwf	?_I2C_Read_At_Address& (0+255),b
  7996  015A3E  0012               	return	
  7997  015A40                     l1321:
  7998                           
  7999                           ;I2C.c: 287: else
  8000                           ;I2C.c: 288: {
  8001                           ;I2C.c: 289: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8002  015A40  84C5               	bsf	4037,2,c	;volatile
  8003  015A42                     l1355:
  8004  015A42  B4C5               	btfsc	4037,2,c	;volatile
  8005  015A44  D7FE               	goto	l1355
  8006                           
  8007                           ;I2C.c: 290: return ( -2 );
  8008  015A46  0EFF               	movlw	255
  8009  015A48  0101               	movlb	1	; () banked
  8010  015A4A  6F12               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  8011  015A4C  0EFE               	movlw	254
  8012  015A4E  0101               	movlb	1	; () banked
  8013  015A50  6F11               	movwf	?_I2C_Read_At_Address& (0+255),b
  8014  015A52  0012               	return	
  8015  015A54                     l1316:
  8016                           
  8017                           ;I2C.c: 293: else
  8018                           ;I2C.c: 294: {
  8019                           ;I2C.c: 295: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8020  015A54  84C5               	bsf	4037,2,c	;volatile
  8021  015A56                     l1359:
  8022  015A56  B4C5               	btfsc	4037,2,c	;volatile
  8023  015A58  D7FE               	goto	l1359
  8024                           
  8025                           ;I2C.c: 296: return ( -2 );
  8026  015A5A  0EFF               	movlw	255
  8027  015A5C  0101               	movlb	1	; () banked
  8028  015A5E  6F12               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  8029  015A60  0EFE               	movlw	254
  8030  015A62  0101               	movlb	1	; () banked
  8031  015A64  6F11               	movwf	?_I2C_Read_At_Address& (0+255),b
  8032  015A66  0012               	return	
  8033  015A68                     l1311:
  8034                           
  8035                           ;I2C.c: 297: }
  8036                           ;I2C.c: 298: }
  8037                           ;I2C.c: 299: return ( (unsigned int) SSPBUF );
  8038  015A68  0101               	movlb	1	; () banked
  8039  015A6A  CFC9 F111          	movff	4041,?_I2C_Read_At_Address	;volatile
  8040  015A6E  0101               	movlb	1	; () banked
  8041  015A70  6B12               	clrf	(?_I2C_Read_At_Address+1)& (0+255),b
  8042                           
  8043                           ; BSR set to: 1
  8044  015A72  0012               	return	
  8045  015A74                     __end_of_I2C_Read_At_Address:
  8046                           	opt stack 0
  8047                           tblptru	equ	0xFF8
  8048                           tblptrh	equ	0xFF7
  8049                           tblptrl	equ	0xFF6
  8050                           tablat	equ	0xFF5
  8051                           prodl	equ	0xFF3
  8052                           postinc0	equ	0xFEE
  8053                           wreg	equ	0xFE8
  8054                           postdec1	equ	0xFE5
  8055                           fsr1l	equ	0xFE1
  8056                           status	equ	0xFD8
  8057                           
  8058 ;; *************** function _PWM_init *****************
  8059 ;; Defined at:
  8060 ;;		line 54 in file "PWM.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;		None
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;		None
  8065 ;; Return value:  Size  Location     Type
  8066 ;;		None               void
  8067 ;; Registers used:
  8068 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8078 ;;Total ram usage:        0 bytes
  8079 ;; Hardware stack levels used:    1
  8080 ;; Hardware stack levels required when called:    9
  8081 ;; This function calls:
  8082 ;;		_SetDuty
  8083 ;;		_SetFreq
  8084 ;; This function is called by:
  8085 ;;		_main
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           	psect	text6
  8090  017B5A                     __ptext6:
  8091                           	opt stack 0
  8092  017B5A                     _PWM_init:
  8093                           	opt stack 20
  8094                           
  8095                           ;PWM.c: 57: SetFreq(60);
  8096                           
  8097                           ; BSR set to: 1
  8098                           ;incstack = 0
  8099  017B5A  0E00               	movlw	0
  8100  017B5C  0101               	movlb	1	; () banked
  8101  017B5E  6F23               	movwf	(SetFreq@freq+1)& (0+255),b
  8102  017B60  0E3C               	movlw	60
  8103  017B62  0101               	movlb	1	; () banked
  8104  017B64  6F22               	movwf	SetFreq@freq& (0+255),b
  8105  017B66  EC85  F0B9         	call	_SetFreq	;wreg free
  8106                           
  8107                           ;PWM.c: 58: SetDuty(0);
  8108  017B6A  0E00               	movlw	0
  8109  017B6C  EC61  F0B1         	call	_SetDuty
  8110                           
  8111                           ;PWM.c: 59: T2CON &= ~0x03;
  8112  017B70  0EFC               	movlw	252
  8113  017B72  16CA               	andwf	4042,f,c	;volatile
  8114                           
  8115                           ;PWM.c: 60: if(16 == 1)
  8116  017B74  D001               	goto	l12190
  8117                           
  8118                           ;PWM.c: 61: {
  8119                           ;PWM.c: 62: __nop();
  8120  017B76  F000               	nop	
  8121  017B78                     l12190:
  8122                           
  8123                           ;PWM.c: 68: else
  8124                           ;PWM.c: 69: {
  8125                           ;PWM.c: 70: T2CON |= 0x10;
  8126  017B78  88CA               	bsf	4042,4,c	;volatile
  8127                           
  8128                           ;PWM.c: 71: }
  8129                           ;PWM.c: 72: T2CON |= 0b00000100;
  8130  017B7A  84CA               	bsf	4042,2,c	;volatile
  8131                           
  8132                           ;PWM.c: 73: CCP1CON |= 0b00001100;
  8133  017B7C  0E0C               	movlw	12
  8134  017B7E  12BD               	iorwf	4029,f,c	;volatile
  8135  017B80  0012               	return	
  8136  017B82                     __end_of_PWM_init:
  8137                           	opt stack 0
  8138                           tblptru	equ	0xFF8
  8139                           tblptrh	equ	0xFF7
  8140                           tblptrl	equ	0xFF6
  8141                           tablat	equ	0xFF5
  8142                           prodl	equ	0xFF3
  8143                           postinc0	equ	0xFEE
  8144                           wreg	equ	0xFE8
  8145                           postdec1	equ	0xFE5
  8146                           fsr1l	equ	0xFE1
  8147                           status	equ	0xFD8
  8148                           
  8149 ;; *************** function _SetFreq *****************
  8150 ;; Defined at:
  8151 ;;		line 144 in file "PWM.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;  freq            2   34[BANK1 ] unsigned int 
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;  temp            1   40[BANK1 ] unsigned char 
  8156 ;; Return value:  Size  Location     Type
  8157 ;;		None               void
  8158 ;; Registers used:
  8159 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8165 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8166 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8167 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8168 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  8169 ;;Total ram usage:        7 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; Hardware stack levels required when called:    7
  8172 ;; This function calls:
  8173 ;;		___aldiv
  8174 ;;		___wmul
  8175 ;; This function is called by:
  8176 ;;		_PWM_init
  8177 ;; This function uses a non-reentrant model
  8178 ;;
  8179                           
  8180                           	psect	text7
  8181  01730A                     __ptext7:
  8182                           	opt stack 0
  8183  01730A                     _SetFreq:
  8184                           	opt stack 21
  8185                           
  8186                           ;PWM.c: 147: unsigned char temp =0;
  8187                           
  8188                           ;incstack = 0
  8189  01730A  0E00               	movlw	0
  8190  01730C  0101               	movlb	1	; () banked
  8191  01730E  6F28               	movwf	SetFreq@temp& (0+255),b
  8192                           
  8193                           ; BSR set to: 1
  8194                           ;PWM.c: 148: temp = (unsigned char)(((40960000L >> 2)/(freq*1000))-1);
  8195  017310  0E00               	movlw	0
  8196  017312  0101               	movlb	1	; () banked
  8197  017314  6F14               	movwf	___aldiv@dividend& (0+255),b
  8198  017316  0E40               	movlw	64
  8199  017318  0101               	movlb	1	; () banked
  8200  01731A  6F15               	movwf	(___aldiv@dividend+1)& (0+255),b
  8201  01731C  0E9C               	movlw	156
  8202  01731E  0101               	movlb	1	; () banked
  8203  017320  6F16               	movwf	(___aldiv@dividend+2)& (0+255),b
  8204  017322  0E00               	movlw	0
  8205  017324  0101               	movlb	1	; () banked
  8206  017326  6F17               	movwf	(___aldiv@dividend+3)& (0+255),b
  8207  017328  C122  F10E         	movff	SetFreq@freq,___wmul@multiplier
  8208  01732C  C123  F10F         	movff	SetFreq@freq+1,___wmul@multiplier+1
  8209  017330  0E03               	movlw	3
  8210  017332  0101               	movlb	1	; () banked
  8211  017334  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8212  017336  0EE8               	movlw	232
  8213  017338  0101               	movlb	1	; () banked
  8214  01733A  6F10               	movwf	___wmul@multiplicand& (0+255),b
  8215  01733C  ECBF  F0BC         	call	___wmul	;wreg free
  8216  017340  0101               	movlb	1	; () banked
  8217  017342  C10E  F118         	movff	?___wmul,___aldiv@divisor
  8218  017346  0101               	movlb	1	; () banked
  8219  017348  C10F  F119         	movff	?___wmul+1,___aldiv@divisor+1
  8220  01734C  0101               	movlb	1	; () banked
  8221  01734E  6B1A               	clrf	(___aldiv@divisor+2)& (0+255),b
  8222  017350  0101               	movlb	1	; () banked
  8223  017352  6B1B               	clrf	(___aldiv@divisor+3)& (0+255),b
  8224  017354  EC20  F0A9         	call	___aldiv	;wreg free
  8225  017358  C114  F124         	movff	?___aldiv,??_SetFreq
  8226  01735C  C115  F125         	movff	?___aldiv+1,??_SetFreq+1
  8227  017360  C116  F126         	movff	?___aldiv+2,??_SetFreq+2
  8228  017364  C117  F127         	movff	?___aldiv+3,??_SetFreq+3
  8229  017368  0101               	movlb	1	; () banked
  8230  01736A  0524               	decf	??_SetFreq& (0+255),w,b
  8231  01736C  0101               	movlb	1	; () banked
  8232  01736E  6F28               	movwf	SetFreq@temp& (0+255),b
  8233                           
  8234                           ; BSR set to: 1
  8235                           ;PWM.c: 150: PR2 = temp;
  8236  017370  C128  FFCB         	movff	SetFreq@temp,4043	;volatile
  8237                           
  8238                           ; BSR set to: 1
  8239  017374  0012               	return	
  8240  017376                     __end_of_SetFreq:
  8241                           	opt stack 0
  8242                           tblptru	equ	0xFF8
  8243                           tblptrh	equ	0xFF7
  8244                           tblptrl	equ	0xFF6
  8245                           tablat	equ	0xFF5
  8246                           prodl	equ	0xFF3
  8247                           postinc0	equ	0xFEE
  8248                           wreg	equ	0xFE8
  8249                           postdec1	equ	0xFE5
  8250                           fsr1l	equ	0xFE1
  8251                           status	equ	0xFD8
  8252                           
  8253 ;; *************** function ___aldiv *****************
  8254 ;; Defined at:
  8255 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  dividend        4   20[BANK1 ] long 
  8258 ;;  divisor         4   24[BANK1 ] long 
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;  quotient        4   30[BANK1 ] long 
  8261 ;;  sign            1   29[BANK1 ] unsigned char 
  8262 ;;  counter         1   28[BANK1 ] unsigned char 
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  4   20[BANK1 ] long 
  8265 ;; Registers used:
  8266 ;;		wreg, status,2, status,0
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8272 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8275 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8276 ;;Total ram usage:       14 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:    6
  8279 ;; This function calls:
  8280 ;;		Nothing
  8281 ;; This function is called by:
  8282 ;;		_SetFreq
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           	psect	text8
  8287  015240                     __ptext8:
  8288                           	opt stack 0
  8289  015240                     ___aldiv:
  8290                           	opt stack 21
  8291                           
  8292                           ; BSR set to: 1
  8293                           ;incstack = 0
  8294  015240  0E00               	movlw	0
  8295  015242  0101               	movlb	1	; () banked
  8296  015244  6F1D               	movwf	___aldiv@sign& (0+255),b
  8297                           
  8298                           ; BSR set to: 1
  8299  015246  0101               	movlb	1	; () banked
  8300  015248  511B               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8301  01524A  0A80               	xorlw	128
  8302  01524C  0F80               	addlw	128
  8303  01524E  E10B               	bnz	u8235
  8304  015250  0E00               	movlw	0
  8305  015252  0101               	movlb	1	; () banked
  8306  015254  5D1A               	subwf	(___aldiv@divisor+2)& (0+255),w,b
  8307  015256  E107               	bnz	u8235
  8308  015258  0E00               	movlw	0
  8309  01525A  0101               	movlb	1	; () banked
  8310  01525C  5D19               	subwf	(___aldiv@divisor+1)& (0+255),w,b
  8311  01525E  E103               	bnz	u8235
  8312  015260  0E00               	movlw	0
  8313  015262  0101               	movlb	1	; () banked
  8314  015264  5D18               	subwf	___aldiv@divisor& (0+255),w,b
  8315  015266                     u8235:
  8316  015266  B0D8               	btfsc	status,0,c
  8317  015268  D012               	goto	l7122
  8318                           
  8319                           ; BSR set to: 1
  8320  01526A  0101               	movlb	1	; () banked
  8321  01526C  1F1B               	comf	(___aldiv@divisor+3)& (0+255),f,b
  8322  01526E  0101               	movlb	1	; () banked
  8323  015270  1F1A               	comf	(___aldiv@divisor+2)& (0+255),f,b
  8324  015272  0101               	movlb	1	; () banked
  8325  015274  1F19               	comf	(___aldiv@divisor+1)& (0+255),f,b
  8326  015276  0101               	movlb	1	; () banked
  8327  015278  6D18               	negf	___aldiv@divisor& (0+255),b
  8328  01527A  0E00               	movlw	0
  8329  01527C  0101               	movlb	1	; () banked
  8330  01527E  2319               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  8331  015280  0101               	movlb	1	; () banked
  8332  015282  231A               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  8333  015284  0101               	movlb	1	; () banked
  8334  015286  231B               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  8335                           
  8336                           ; BSR set to: 1
  8337  015288  0E01               	movlw	1
  8338  01528A  0101               	movlb	1	; () banked
  8339  01528C  6F1D               	movwf	___aldiv@sign& (0+255),b
  8340  01528E                     l7122:
  8341                           
  8342                           ; BSR set to: 1
  8343  01528E  0101               	movlb	1	; () banked
  8344  015290  5117               	movf	(___aldiv@dividend+3)& (0+255),w,b
  8345  015292  0A80               	xorlw	128
  8346  015294  0F80               	addlw	128
  8347  015296  E10B               	bnz	u8245
  8348  015298  0E00               	movlw	0
  8349  01529A  0101               	movlb	1	; () banked
  8350  01529C  5D16               	subwf	(___aldiv@dividend+2)& (0+255),w,b
  8351  01529E  E107               	bnz	u8245
  8352  0152A0  0E00               	movlw	0
  8353  0152A2  0101               	movlb	1	; () banked
  8354  0152A4  5D15               	subwf	(___aldiv@dividend+1)& (0+255),w,b
  8355  0152A6  E103               	bnz	u8245
  8356  0152A8  0E00               	movlw	0
  8357  0152AA  0101               	movlb	1	; () banked
  8358  0152AC  5D14               	subwf	___aldiv@dividend& (0+255),w,b
  8359  0152AE                     u8245:
  8360  0152AE  B0D8               	btfsc	status,0,c
  8361  0152B0  D012               	goto	l7128
  8362                           
  8363                           ; BSR set to: 1
  8364  0152B2  0101               	movlb	1	; () banked
  8365  0152B4  1F17               	comf	(___aldiv@dividend+3)& (0+255),f,b
  8366  0152B6  0101               	movlb	1	; () banked
  8367  0152B8  1F16               	comf	(___aldiv@dividend+2)& (0+255),f,b
  8368  0152BA  0101               	movlb	1	; () banked
  8369  0152BC  1F15               	comf	(___aldiv@dividend+1)& (0+255),f,b
  8370  0152BE  0101               	movlb	1	; () banked
  8371  0152C0  6D14               	negf	___aldiv@dividend& (0+255),b
  8372  0152C2  0E00               	movlw	0
  8373  0152C4  0101               	movlb	1	; () banked
  8374  0152C6  2315               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  8375  0152C8  0101               	movlb	1	; () banked
  8376  0152CA  2316               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  8377  0152CC  0101               	movlb	1	; () banked
  8378  0152CE  2317               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  8379                           
  8380                           ; BSR set to: 1
  8381  0152D0  0E01               	movlw	1
  8382  0152D2  0101               	movlb	1	; () banked
  8383  0152D4  1B1D               	xorwf	___aldiv@sign& (0+255),f,b
  8384  0152D6                     l7128:
  8385                           
  8386                           ; BSR set to: 1
  8387  0152D6  0E00               	movlw	0
  8388  0152D8  0101               	movlb	1	; () banked
  8389  0152DA  6F1E               	movwf	___aldiv@quotient& (0+255),b
  8390  0152DC  0E00               	movlw	0
  8391  0152DE  0101               	movlb	1	; () banked
  8392  0152E0  6F1F               	movwf	(___aldiv@quotient+1)& (0+255),b
  8393  0152E2  0E00               	movlw	0
  8394  0152E4  0101               	movlb	1	; () banked
  8395  0152E6  6F20               	movwf	(___aldiv@quotient+2)& (0+255),b
  8396  0152E8  0E00               	movlw	0
  8397  0152EA  0101               	movlb	1	; () banked
  8398  0152EC  6F21               	movwf	(___aldiv@quotient+3)& (0+255),b
  8399                           
  8400                           ; BSR set to: 1
  8401  0152EE  0101               	movlb	1	; () banked
  8402  0152F0  511B               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8403  0152F2  1118               	iorwf	___aldiv@divisor& (0+255),w,b
  8404  0152F4  1119               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  8405  0152F6  111A               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  8406  0152F8  B4D8               	btfsc	status,2,c
  8407  0152FA  D04E               	goto	l7150
  8408                           
  8409                           ; BSR set to: 1
  8410  0152FC  0E01               	movlw	1
  8411  0152FE  0101               	movlb	1	; () banked
  8412  015300  6F1C               	movwf	___aldiv@counter& (0+255),b
  8413  015302  D00C               	goto	l7136
  8414  015304                     l7134:
  8415                           
  8416                           ; BSR set to: 1
  8417  015304  0101               	movlb	1	; () banked
  8418  015306  90D8               	bcf	status,0,c
  8419  015308  0101               	movlb	1	; () banked
  8420  01530A  3718               	rlcf	___aldiv@divisor& (0+255),f,b
  8421  01530C  0101               	movlb	1	; () banked
  8422  01530E  3719               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  8423  015310  0101               	movlb	1	; () banked
  8424  015312  371A               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  8425  015314  0101               	movlb	1	; () banked
  8426  015316  371B               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  8427  015318  0101               	movlb	1	; () banked
  8428  01531A  2B1C               	incf	___aldiv@counter& (0+255),f,b
  8429  01531C                     l7136:
  8430                           
  8431                           ; BSR set to: 1
  8432  01531C  0101               	movlb	1	; () banked
  8433  01531E  AF1B               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  8434  015320  D7F1               	goto	l7134
  8435  015322                     l7138:
  8436                           
  8437                           ; BSR set to: 1
  8438  015322  0101               	movlb	1	; () banked
  8439  015324  90D8               	bcf	status,0,c
  8440  015326  0101               	movlb	1	; () banked
  8441  015328  371E               	rlcf	___aldiv@quotient& (0+255),f,b
  8442  01532A  0101               	movlb	1	; () banked
  8443  01532C  371F               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  8444  01532E  0101               	movlb	1	; () banked
  8445  015330  3720               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  8446  015332  0101               	movlb	1	; () banked
  8447  015334  3721               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  8448                           
  8449                           ; BSR set to: 1
  8450  015336  0101               	movlb	1	; () banked
  8451  015338  5118               	movf	___aldiv@divisor& (0+255),w,b
  8452  01533A  0101               	movlb	1	; () banked
  8453  01533C  5D14               	subwf	___aldiv@dividend& (0+255),w,b
  8454  01533E  0101               	movlb	1	; () banked
  8455  015340  5119               	movf	(___aldiv@divisor+1)& (0+255),w,b
  8456  015342  0101               	movlb	1	; () banked
  8457  015344  5915               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  8458  015346  0101               	movlb	1	; () banked
  8459  015348  511A               	movf	(___aldiv@divisor+2)& (0+255),w,b
  8460  01534A  0101               	movlb	1	; () banked
  8461  01534C  5916               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  8462  01534E  0101               	movlb	1	; () banked
  8463  015350  511B               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8464  015352  0101               	movlb	1	; () banked
  8465  015354  5917               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  8466  015356  A0D8               	btfss	status,0,c
  8467  015358  D012               	goto	l7146
  8468                           
  8469                           ; BSR set to: 1
  8470  01535A  0101               	movlb	1	; () banked
  8471  01535C  5118               	movf	___aldiv@divisor& (0+255),w,b
  8472  01535E  0101               	movlb	1	; () banked
  8473  015360  5F14               	subwf	___aldiv@dividend& (0+255),f,b
  8474  015362  0101               	movlb	1	; () banked
  8475  015364  5119               	movf	(___aldiv@divisor+1)& (0+255),w,b
  8476  015366  0101               	movlb	1	; () banked
  8477  015368  5B15               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  8478  01536A  0101               	movlb	1	; () banked
  8479  01536C  511A               	movf	(___aldiv@divisor+2)& (0+255),w,b
  8480  01536E  0101               	movlb	1	; () banked
  8481  015370  5B16               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  8482  015372  0101               	movlb	1	; () banked
  8483  015374  511B               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8484  015376  0101               	movlb	1	; () banked
  8485  015378  5B17               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  8486                           
  8487                           ; BSR set to: 1
  8488  01537A  0101               	movlb	1	; () banked
  8489  01537C  811E               	bsf	___aldiv@quotient& (0+255),0,b
  8490  01537E                     l7146:
  8491                           
  8492                           ; BSR set to: 1
  8493  01537E  0101               	movlb	1	; () banked
  8494  015380  90D8               	bcf	status,0,c
  8495  015382  0101               	movlb	1	; () banked
  8496  015384  331B               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  8497  015386  0101               	movlb	1	; () banked
  8498  015388  331A               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  8499  01538A  0101               	movlb	1	; () banked
  8500  01538C  3319               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  8501  01538E  0101               	movlb	1	; () banked
  8502  015390  3318               	rrcf	___aldiv@divisor& (0+255),f,b
  8503                           
  8504                           ; BSR set to: 1
  8505  015392  0101               	movlb	1	; () banked
  8506  015394  2F1C               	decfsz	___aldiv@counter& (0+255),f,b
  8507  015396  D7C5               	goto	l7138
  8508  015398                     l7150:
  8509                           
  8510                           ; BSR set to: 1
  8511  015398  0101               	movlb	1	; () banked
  8512  01539A  511D               	movf	___aldiv@sign& (0+255),w,b
  8513  01539C  B4D8               	btfsc	status,2,c
  8514  01539E  D00F               	goto	l7154
  8515                           
  8516                           ; BSR set to: 1
  8517  0153A0  0101               	movlb	1	; () banked
  8518  0153A2  1F21               	comf	(___aldiv@quotient+3)& (0+255),f,b
  8519  0153A4  0101               	movlb	1	; () banked
  8520  0153A6  1F20               	comf	(___aldiv@quotient+2)& (0+255),f,b
  8521  0153A8  0101               	movlb	1	; () banked
  8522  0153AA  1F1F               	comf	(___aldiv@quotient+1)& (0+255),f,b
  8523  0153AC  0101               	movlb	1	; () banked
  8524  0153AE  6D1E               	negf	___aldiv@quotient& (0+255),b
  8525  0153B0  0E00               	movlw	0
  8526  0153B2  0101               	movlb	1	; () banked
  8527  0153B4  231F               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  8528  0153B6  0101               	movlb	1	; () banked
  8529  0153B8  2320               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  8530  0153BA  0101               	movlb	1	; () banked
  8531  0153BC  2321               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  8532  0153BE                     l7154:
  8533                           
  8534                           ; BSR set to: 1
  8535  0153BE  C11E  F114         	movff	___aldiv@quotient,?___aldiv
  8536  0153C2  C11F  F115         	movff	___aldiv@quotient+1,?___aldiv+1
  8537  0153C6  C120  F116         	movff	___aldiv@quotient+2,?___aldiv+2
  8538  0153CA  C121  F117         	movff	___aldiv@quotient+3,?___aldiv+3
  8539  0153CE  0012               	return	
  8540  0153D0                     __end_of___aldiv:
  8541                           	opt stack 0
  8542                           tblptru	equ	0xFF8
  8543                           tblptrh	equ	0xFF7
  8544                           tblptrl	equ	0xFF6
  8545                           tablat	equ	0xFF5
  8546                           prodl	equ	0xFF3
  8547                           postinc0	equ	0xFEE
  8548                           wreg	equ	0xFE8
  8549                           postdec1	equ	0xFE5
  8550                           fsr1l	equ	0xFE1
  8551                           status	equ	0xFD8
  8552                           
  8553 ;; *************** function _LCDScreenUpdate *****************
  8554 ;; Defined at:
  8555 ;;		line 277 in file "LCD.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;		None
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;		None
  8560 ;; Return value:  Size  Location     Type
  8561 ;;		None               void
  8562 ;; Registers used:
  8563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8571 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8572 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8573 ;;Total ram usage:        4 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:   10
  8576 ;; This function calls:
  8577 ;;		_ClearLCD
  8578 ;;		_LCDPrintChar
  8579 ;;		_LCDPrintString
  8580 ;;		_SetLCDcursor
  8581 ;;		_cleanBuffer
  8582 ;;		_delayUS
  8583 ;; This function is called by:
  8584 ;;		_main
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588                           	psect	text9
  8589  0135D4                     __ptext9:
  8590                           	opt stack 0
  8591  0135D4                     _LCDScreenUpdate:
  8592                           	opt stack 19
  8593                           
  8594                           ;LCD.c: 280: delayUS(10);
  8595                           
  8596                           ; BSR set to: 1
  8597                           ;incstack = 0
  8598  0135D4  0E0A               	movlw	10
  8599  0135D6  0101               	movlb	1	; () banked
  8600  0135D8  6F0E               	movwf	delayUS@US& (0+255),b
  8601  0135DA  0E00               	movlw	0
  8602  0135DC  0101               	movlb	1	; () banked
  8603  0135DE  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  8604  0135E0  0E00               	movlw	0
  8605  0135E2  0101               	movlb	1	; () banked
  8606  0135E4  6F10               	movwf	(delayUS@US+2)& (0+255),b
  8607  0135E6  0E00               	movlw	0
  8608  0135E8  0101               	movlb	1	; () banked
  8609  0135EA  6F11               	movwf	(delayUS@US+3)& (0+255),b
  8610  0135EC  EC10  F0B9         	call	_delayUS	;wreg free
  8611                           
  8612                           ;LCD.c: 281: if(LCDclearCount<(25000-1))
  8613  0135F0  0EA7               	movlw	167
  8614  0135F2  0101               	movlb	1	; () banked
  8615  0135F4  6F20               	movwf	??_LCDScreenUpdate& (0+255),b
  8616  0135F6  0E61               	movlw	97
  8617  0135F8  6F21               	movwf	(??_LCDScreenUpdate+1)& (0+255),b
  8618  0135FA  0E00               	movlw	0
  8619  0135FC  6F22               	movwf	(??_LCDScreenUpdate+2)& (0+255),b
  8620  0135FE  0E00               	movlw	0
  8621  013600  6F23               	movwf	(??_LCDScreenUpdate+3)& (0+255),b
  8622  013602  0101               	movlb	1	; () banked
  8623  013604  5120               	movf	??_LCDScreenUpdate& (0+255),w,b
  8624  013606  0101               	movlb	1	; () banked
  8625  013608  5DEE               	subwf	_LCDclearCount& (0+255),w,b
  8626  01360A  0101               	movlb	1	; () banked
  8627  01360C  5121               	movf	(??_LCDScreenUpdate+1)& (0+255),w,b
  8628  01360E  0101               	movlb	1	; () banked
  8629  013610  59EF               	subwfb	(_LCDclearCount+1)& (0+255),w,b
  8630  013612  0101               	movlb	1	; () banked
  8631  013614  5122               	movf	(??_LCDScreenUpdate+2)& (0+255),w,b
  8632  013616  0101               	movlb	1	; () banked
  8633  013618  59F0               	subwfb	(_LCDclearCount+2)& (0+255),w,b
  8634  01361A  0101               	movlb	1	; () banked
  8635  01361C  5123               	movf	(??_LCDScreenUpdate+3)& (0+255),w,b
  8636  01361E  0101               	movlb	1	; () banked
  8637  013620  59F1               	subwfb	(_LCDclearCount+3)& (0+255),w,b
  8638  013622  B0D8               	btfsc	status,0,c
  8639  013624  D00E               	goto	l12252
  8640                           
  8641                           ; BSR set to: 1
  8642                           ;LCD.c: 282: {
  8643                           ;LCD.c: 283: LCDclearCount++;
  8644  013626  0E01               	movlw	1
  8645  013628  0101               	movlb	1	; () banked
  8646  01362A  27EE               	addwf	_LCDclearCount& (0+255),f,b
  8647  01362C  0E00               	movlw	0
  8648  01362E  0101               	movlb	1	; () banked
  8649  013630  23EF               	addwfc	(_LCDclearCount+1)& (0+255),f,b
  8650  013632  0101               	movlb	1	; () banked
  8651  013634  23F0               	addwfc	(_LCDclearCount+2)& (0+255),f,b
  8652  013636  0101               	movlb	1	; () banked
  8653  013638  23F1               	addwfc	(_LCDclearCount+3)& (0+255),f,b
  8654                           
  8655                           ; BSR set to: 1
  8656                           ;LCD.c: 284: LCDwait = 1;
  8657  01363A  0E01               	movlw	1
  8658  01363C  0101               	movlb	1	; () banked
  8659  01363E  6F95               	movwf	_LCDwait& (0+255),b
  8660                           
  8661                           ;LCD.c: 285: }
  8662  013640  0012               	return	
  8663  013642                     l12252:
  8664                           
  8665                           ; BSR set to: 1
  8666                           ;LCD.c: 286: else if(LCDclearCount == (25000-1))
  8667  013642  0101               	movlb	1	; () banked
  8668  013644  51EF               	movf	(_LCDclearCount+1)& (0+255),w,b
  8669  013646  0A61               	xorlw	97
  8670  013648  0EA7               	movlw	167
  8671  01364A  B4D8               	btfsc	status,2,c
  8672  01364C  19EE               	xorwf	_LCDclearCount& (0+255),w,b
  8673  01364E  11F0               	iorwf	(_LCDclearCount+2)& (0+255),w,b
  8674  013650  11F1               	iorwf	(_LCDclearCount+3)& (0+255),w,b
  8675  013652  A4D8               	btfss	status,2,c
  8676  013654  0012               	return	
  8677                           
  8678                           ; BSR set to: 1
  8679                           ;LCD.c: 287: {
  8680                           ;LCD.c: 288: LCDclearCount++;
  8681  013656  0E01               	movlw	1
  8682  013658  0101               	movlb	1	; () banked
  8683  01365A  27EE               	addwf	_LCDclearCount& (0+255),f,b
  8684  01365C  0E00               	movlw	0
  8685  01365E  0101               	movlb	1	; () banked
  8686  013660  23EF               	addwfc	(_LCDclearCount+1)& (0+255),f,b
  8687  013662  0101               	movlb	1	; () banked
  8688  013664  23F0               	addwfc	(_LCDclearCount+2)& (0+255),f,b
  8689  013666  0101               	movlb	1	; () banked
  8690  013668  23F1               	addwfc	(_LCDclearCount+3)& (0+255),f,b
  8691                           
  8692                           ; BSR set to: 1
  8693                           ;LCD.c: 289: LCDwait = 0;
  8694  01366A  0E00               	movlw	0
  8695  01366C  0101               	movlb	1	; () banked
  8696  01366E  6F95               	movwf	_LCDwait& (0+255),b
  8697                           
  8698                           ; BSR set to: 1
  8699                           ;LCD.c: 290: if(ScrollFIFOCount == 0)
  8700  013670  0101               	movlb	1	; () banked
  8701  013672  6798               	tstfsz	_ScrollFIFOCount& (0+255),b
  8702  013674  D00F               	goto	l12268
  8703                           
  8704                           ; BSR set to: 1
  8705                           ;LCD.c: 291: {
  8706                           ;LCD.c: 292: ScrollDisplayPosition = 0;
  8707  013676  0E00               	movlw	0
  8708  013678  0101               	movlb	1	; () banked
  8709  01367A  6F97               	movwf	_ScrollDisplayPosition& (0+255),b
  8710                           
  8711                           ; BSR set to: 1
  8712                           ;LCD.c: 293: ClearLCD();
  8713  01367C  ECF5  F0BD         	call	_ClearLCD	;wreg free
  8714                           
  8715                           ;LCD.c: 294: SetLCDcursor(0, 0);
  8716  013680  0E00               	movlw	0
  8717  013682  0101               	movlb	1	; () banked
  8718  013684  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  8719  013686  0E00               	movlw	0
  8720  013688  ECDA  F0BC         	call	_SetLCDcursor
  8721                           
  8722                           ;LCD.c: 295: LCDPrintChar('>');
  8723  01368C  0E3E               	movlw	62
  8724  01368E  EC17  F0BE         	call	_LCDPrintChar
  8725                           
  8726                           ;LCD.c: 296: }
  8727  013692  0012               	return	
  8728  013694                     l12268:
  8729                           
  8730                           ;LCD.c: 297: else
  8731                           ;LCD.c: 298: {
  8732                           ;LCD.c: 299: ScrollDisplayPosition++;
  8733  013694  0101               	movlb	1	; () banked
  8734  013696  2B97               	incf	_ScrollDisplayPosition& (0+255),f,b
  8735                           
  8736                           ; BSR set to: 1
  8737                           ;LCD.c: 300: if(ScrollDisplayPosition == 1)
  8738  013698  0101               	movlb	1	; () banked
  8739  01369A  0597               	decf	_ScrollDisplayPosition& (0+255),w,b
  8740  01369C  A4D8               	btfss	status,2,c
  8741  01369E  D013               	goto	l12276
  8742                           
  8743                           ; BSR set to: 1
  8744                           ;LCD.c: 301: {
  8745                           ;LCD.c: 302: ClearLCD();
  8746  0136A0  ECF5  F0BD         	call	_ClearLCD	;wreg free
  8747                           
  8748                           ;LCD.c: 303: SetLCDcursor(1, 0);
  8749  0136A4  0E00               	movlw	0
  8750  0136A6  0101               	movlb	1	; () banked
  8751  0136A8  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  8752  0136AA  0E01               	movlw	1
  8753  0136AC  ECDA  F0BC         	call	_SetLCDcursor
  8754                           
  8755                           ;LCD.c: 304: LCDPrintString(Scroll_1);
  8756  0136B0  0101               	movlb	1	; () banked
  8757  0136B2  0E01               	movlw	high _Scroll_1
  8758  0136B4  0101               	movlb	1	; () banked
  8759  0136B6  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8760  0136B8  0101               	movlb	1	; () banked
  8761  0136BA  0E9A               	movlw	low _Scroll_1
  8762  0136BC  0101               	movlb	1	; () banked
  8763  0136BE  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  8764  0136C0  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  8765                           
  8766                           ;LCD.c: 305: }
  8767  0136C4  D213               	goto	l12374
  8768  0136C6                     l12276:
  8769                           
  8770                           ;LCD.c: 306: else if(ScrollDisplayPosition == 2)
  8771  0136C6  0101               	movlb	1	; () banked
  8772  0136C8  5197               	movf	_ScrollDisplayPosition& (0+255),w,b
  8773  0136CA  0A02               	xorlw	2
  8774  0136CC  A4D8               	btfss	status,2,c
  8775  0136CE  D033               	goto	l12286
  8776                           
  8777                           ; BSR set to: 1
  8778                           ;LCD.c: 307: {
  8779                           ;LCD.c: 308: ClearLCD();
  8780  0136D0  ECF5  F0BD         	call	_ClearLCD	;wreg free
  8781                           
  8782                           ;LCD.c: 309: SetLCDcursor(0, 0);
  8783  0136D4  0E00               	movlw	0
  8784  0136D6  0101               	movlb	1	; () banked
  8785  0136D8  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  8786  0136DA  0E00               	movlw	0
  8787  0136DC  ECDA  F0BC         	call	_SetLCDcursor
  8788                           
  8789                           ;LCD.c: 310: LCDPrintString(Scroll_1);
  8790  0136E0  0101               	movlb	1	; () banked
  8791  0136E2  0E01               	movlw	high _Scroll_1
  8792  0136E4  0101               	movlb	1	; () banked
  8793  0136E6  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8794  0136E8  0101               	movlb	1	; () banked
  8795  0136EA  0E9A               	movlw	low _Scroll_1
  8796  0136EC  0101               	movlb	1	; () banked
  8797  0136EE  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  8798  0136F0  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  8799                           
  8800                           ;LCD.c: 311: SetLCDcursor(1, 0);
  8801  0136F4  0E00               	movlw	0
  8802  0136F6  0101               	movlb	1	; () banked
  8803  0136F8  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  8804  0136FA  0E01               	movlw	1
  8805  0136FC  ECDA  F0BC         	call	_SetLCDcursor
  8806                           
  8807                           ;LCD.c: 312: LCDPrintString(Scroll_2);
  8808  013700  0101               	movlb	1	; () banked
  8809  013702  0E01               	movlw	high _Scroll_2
  8810  013704  0101               	movlb	1	; () banked
  8811  013706  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8812  013708  0101               	movlb	1	; () banked
  8813  01370A  0EAA               	movlw	low _Scroll_2
  8814  01370C  0101               	movlb	1	; () banked
  8815  01370E  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  8816  013710  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  8817                           
  8818                           ;LCD.c: 313: cleanBuffer(Scroll_1, 16);
  8819  013714  0101               	movlb	1	; () banked
  8820  013716  0E01               	movlw	high _Scroll_1
  8821  013718  0101               	movlb	1	; () banked
  8822  01371A  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
  8823  01371C  0101               	movlb	1	; () banked
  8824  01371E  0E9A               	movlw	low _Scroll_1
  8825  013720  0101               	movlb	1	; () banked
  8826  013722  6F0E               	movwf	cleanBuffer@data& (0+255),b
  8827  013724  0E00               	movlw	0
  8828  013726  0101               	movlb	1	; () banked
  8829  013728  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
  8830  01372A  0E10               	movlw	16
  8831  01372C  0101               	movlb	1	; () banked
  8832  01372E  6F10               	movwf	cleanBuffer@count& (0+255),b
  8833  013730  EC50  F0BB         	call	_cleanBuffer	;wreg free
  8834                           
  8835                           ;LCD.c: 314: }
  8836  013734  D1DB               	goto	l12374
  8837  013736                     l12286:
  8838                           
  8839                           ;LCD.c: 315: else if(ScrollDisplayPosition == 3)
  8840  013736  0101               	movlb	1	; () banked
  8841  013738  5197               	movf	_ScrollDisplayPosition& (0+255),w,b
  8842  01373A  0A03               	xorlw	3
  8843  01373C  A4D8               	btfss	status,2,c
  8844  01373E  D033               	goto	l12296
  8845                           
  8846                           ; BSR set to: 1
  8847                           ;LCD.c: 316: {
  8848                           ;LCD.c: 317: ClearLCD();
  8849  013740  ECF5  F0BD         	call	_ClearLCD	;wreg free
  8850                           
  8851                           ;LCD.c: 318: SetLCDcursor(0, 0);
  8852  013744  0E00               	movlw	0
  8853  013746  0101               	movlb	1	; () banked
  8854  013748  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  8855  01374A  0E00               	movlw	0
  8856  01374C  ECDA  F0BC         	call	_SetLCDcursor
  8857                           
  8858                           ;LCD.c: 319: LCDPrintString(Scroll_2);
  8859  013750  0101               	movlb	1	; () banked
  8860  013752  0E01               	movlw	high _Scroll_2
  8861  013754  0101               	movlb	1	; () banked
  8862  013756  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8863  013758  0101               	movlb	1	; () banked
  8864  01375A  0EAA               	movlw	low _Scroll_2
  8865  01375C  0101               	movlb	1	; () banked
  8866  01375E  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  8867  013760  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  8868                           
  8869                           ;LCD.c: 320: SetLCDcursor(1, 0);
  8870  013764  0E00               	movlw	0
  8871  013766  0101               	movlb	1	; () banked
  8872  013768  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  8873  01376A  0E01               	movlw	1
  8874  01376C  ECDA  F0BC         	call	_SetLCDcursor
  8875                           
  8876                           ;LCD.c: 321: LCDPrintString(Scroll_3);
  8877  013770  0101               	movlb	1	; () banked
  8878  013772  0E01               	movlw	high _Scroll_3
  8879  013774  0101               	movlb	1	; () banked
  8880  013776  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8881  013778  0101               	movlb	1	; () banked
  8882  01377A  0EBA               	movlw	low _Scroll_3
  8883  01377C  0101               	movlb	1	; () banked
  8884  01377E  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  8885  013780  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  8886                           
  8887                           ;LCD.c: 322: cleanBuffer(Scroll_2, 16);
  8888  013784  0101               	movlb	1	; () banked
  8889  013786  0E01               	movlw	high _Scroll_2
  8890  013788  0101               	movlb	1	; () banked
  8891  01378A  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
  8892  01378C  0101               	movlb	1	; () banked
  8893  01378E  0EAA               	movlw	low _Scroll_2
  8894  013790  0101               	movlb	1	; () banked
  8895  013792  6F0E               	movwf	cleanBuffer@data& (0+255),b
  8896  013794  0E00               	movlw	0
  8897  013796  0101               	movlb	1	; () banked
  8898  013798  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
  8899  01379A  0E10               	movlw	16
  8900  01379C  0101               	movlb	1	; () banked
  8901  01379E  6F10               	movwf	cleanBuffer@count& (0+255),b
  8902  0137A0  EC50  F0BB         	call	_cleanBuffer	;wreg free
  8903                           
  8904                           ;LCD.c: 323: }
  8905  0137A4  D1A3               	goto	l12374
  8906  0137A6                     l12296:
  8907                           
  8908                           ;LCD.c: 324: else if(ScrollDisplayPosition == 4)
  8909  0137A6  0101               	movlb	1	; () banked
  8910  0137A8  5197               	movf	_ScrollDisplayPosition& (0+255),w,b
  8911  0137AA  0A04               	xorlw	4
  8912  0137AC  A4D8               	btfss	status,2,c
  8913  0137AE  D033               	goto	l12306
  8914                           
  8915                           ; BSR set to: 1
  8916                           ;LCD.c: 325: {
  8917                           ;LCD.c: 326: ClearLCD();
  8918  0137B0  ECF5  F0BD         	call	_ClearLCD	;wreg free
  8919                           
  8920                           ;LCD.c: 327: SetLCDcursor(0, 0);
  8921  0137B4  0E00               	movlw	0
  8922  0137B6  0101               	movlb	1	; () banked
  8923  0137B8  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  8924  0137BA  0E00               	movlw	0
  8925  0137BC  ECDA  F0BC         	call	_SetLCDcursor
  8926                           
  8927                           ;LCD.c: 328: LCDPrintString(Scroll_3);
  8928  0137C0  0101               	movlb	1	; () banked
  8929  0137C2  0E01               	movlw	high _Scroll_3
  8930  0137C4  0101               	movlb	1	; () banked
  8931  0137C6  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8932  0137C8  0101               	movlb	1	; () banked
  8933  0137CA  0EBA               	movlw	low _Scroll_3
  8934  0137CC  0101               	movlb	1	; () banked
  8935  0137CE  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  8936  0137D0  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  8937                           
  8938                           ;LCD.c: 329: SetLCDcursor(1, 0);
  8939  0137D4  0E00               	movlw	0
  8940  0137D6  0101               	movlb	1	; () banked
  8941  0137D8  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  8942  0137DA  0E01               	movlw	1
  8943  0137DC  ECDA  F0BC         	call	_SetLCDcursor
  8944                           
  8945                           ;LCD.c: 330: LCDPrintString(Scroll_4);
  8946  0137E0  0101               	movlb	1	; () banked
  8947  0137E2  0E01               	movlw	high _Scroll_4
  8948  0137E4  0101               	movlb	1	; () banked
  8949  0137E6  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8950  0137E8  0101               	movlb	1	; () banked
  8951  0137EA  0ECA               	movlw	low _Scroll_4
  8952  0137EC  0101               	movlb	1	; () banked
  8953  0137EE  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  8954  0137F0  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  8955                           
  8956                           ;LCD.c: 331: cleanBuffer(Scroll_3, 16);
  8957  0137F4  0101               	movlb	1	; () banked
  8958  0137F6  0E01               	movlw	high _Scroll_3
  8959  0137F8  0101               	movlb	1	; () banked
  8960  0137FA  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
  8961  0137FC  0101               	movlb	1	; () banked
  8962  0137FE  0EBA               	movlw	low _Scroll_3
  8963  013800  0101               	movlb	1	; () banked
  8964  013802  6F0E               	movwf	cleanBuffer@data& (0+255),b
  8965  013804  0E00               	movlw	0
  8966  013806  0101               	movlb	1	; () banked
  8967  013808  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
  8968  01380A  0E10               	movlw	16
  8969  01380C  0101               	movlb	1	; () banked
  8970  01380E  6F10               	movwf	cleanBuffer@count& (0+255),b
  8971  013810  EC50  F0BB         	call	_cleanBuffer	;wreg free
  8972                           
  8973                           ;LCD.c: 332: }
  8974  013814  D16B               	goto	l12374
  8975  013816                     l12306:
  8976                           
  8977                           ;LCD.c: 333: else if(ScrollDisplayPosition == 5)
  8978  013816  0101               	movlb	1	; () banked
  8979  013818  5197               	movf	_ScrollDisplayPosition& (0+255),w,b
  8980  01381A  0A05               	xorlw	5
  8981  01381C  A4D8               	btfss	status,2,c
  8982  01381E  D033               	goto	l12316
  8983                           
  8984                           ; BSR set to: 1
  8985                           ;LCD.c: 334: {
  8986                           ;LCD.c: 335: ClearLCD();
  8987  013820  ECF5  F0BD         	call	_ClearLCD	;wreg free
  8988                           
  8989                           ;LCD.c: 336: SetLCDcursor(0, 0);
  8990  013824  0E00               	movlw	0
  8991  013826  0101               	movlb	1	; () banked
  8992  013828  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  8993  01382A  0E00               	movlw	0
  8994  01382C  ECDA  F0BC         	call	_SetLCDcursor
  8995                           
  8996                           ;LCD.c: 337: LCDPrintString(Scroll_4);
  8997  013830  0101               	movlb	1	; () banked
  8998  013832  0E01               	movlw	high _Scroll_4
  8999  013834  0101               	movlb	1	; () banked
  9000  013836  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9001  013838  0101               	movlb	1	; () banked
  9002  01383A  0ECA               	movlw	low _Scroll_4
  9003  01383C  0101               	movlb	1	; () banked
  9004  01383E  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  9005  013840  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  9006                           
  9007                           ;LCD.c: 338: SetLCDcursor(1, 0);
  9008  013844  0E00               	movlw	0
  9009  013846  0101               	movlb	1	; () banked
  9010  013848  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  9011  01384A  0E01               	movlw	1
  9012  01384C  ECDA  F0BC         	call	_SetLCDcursor
  9013                           
  9014                           ;LCD.c: 339: LCDPrintString(Scroll_5);
  9015  013850  0101               	movlb	1	; () banked
  9016  013852  0E01               	movlw	high _Scroll_5
  9017  013854  0101               	movlb	1	; () banked
  9018  013856  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9019  013858  0101               	movlb	1	; () banked
  9020  01385A  0EDA               	movlw	low _Scroll_5
  9021  01385C  0101               	movlb	1	; () banked
  9022  01385E  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  9023  013860  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  9024                           
  9025                           ;LCD.c: 340: cleanBuffer(Scroll_4, 16);
  9026  013864  0101               	movlb	1	; () banked
  9027  013866  0E01               	movlw	high _Scroll_4
  9028  013868  0101               	movlb	1	; () banked
  9029  01386A  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
  9030  01386C  0101               	movlb	1	; () banked
  9031  01386E  0ECA               	movlw	low _Scroll_4
  9032  013870  0101               	movlb	1	; () banked
  9033  013872  6F0E               	movwf	cleanBuffer@data& (0+255),b
  9034  013874  0E00               	movlw	0
  9035  013876  0101               	movlb	1	; () banked
  9036  013878  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
  9037  01387A  0E10               	movlw	16
  9038  01387C  0101               	movlb	1	; () banked
  9039  01387E  6F10               	movwf	cleanBuffer@count& (0+255),b
  9040  013880  EC50  F0BB         	call	_cleanBuffer	;wreg free
  9041                           
  9042                           ;LCD.c: 341: }
  9043  013884  D133               	goto	l12374
  9044  013886                     l12316:
  9045                           
  9046                           ;LCD.c: 342: else if(ScrollDisplayPosition == 6)
  9047  013886  0101               	movlb	1	; () banked
  9048  013888  5197               	movf	_ScrollDisplayPosition& (0+255),w,b
  9049  01388A  0A06               	xorlw	6
  9050  01388C  A4D8               	btfss	status,2,c
  9051  01388E  D031               	goto	l12326
  9052                           
  9053                           ; BSR set to: 1
  9054                           ;LCD.c: 343: {
  9055                           ;LCD.c: 344: ClearLCD();
  9056  013890  ECF5  F0BD         	call	_ClearLCD	;wreg free
  9057                           
  9058                           ;LCD.c: 345: SetLCDcursor(0, 0);
  9059  013894  0E00               	movlw	0
  9060  013896  0101               	movlb	1	; () banked
  9061  013898  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  9062  01389A  0E00               	movlw	0
  9063  01389C  ECDA  F0BC         	call	_SetLCDcursor
  9064                           
  9065                           ;LCD.c: 346: LCDPrintString(Scroll_5);
  9066  0138A0  0101               	movlb	1	; () banked
  9067  0138A2  0E01               	movlw	high _Scroll_5
  9068  0138A4  0101               	movlb	1	; () banked
  9069  0138A6  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9070  0138A8  0101               	movlb	1	; () banked
  9071  0138AA  0EDA               	movlw	low _Scroll_5
  9072  0138AC  0101               	movlb	1	; () banked
  9073  0138AE  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  9074  0138B0  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  9075                           
  9076                           ;LCD.c: 347: SetLCDcursor(1, 0);
  9077  0138B4  0E00               	movlw	0
  9078  0138B6  0101               	movlb	1	; () banked
  9079  0138B8  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  9080  0138BA  0E01               	movlw	1
  9081  0138BC  ECDA  F0BC         	call	_SetLCDcursor
  9082                           
  9083                           ;LCD.c: 348: LCDPrintString(Scroll_6);
  9084  0138C0  0E00               	movlw	high _Scroll_6
  9085  0138C2  0101               	movlb	1	; () banked
  9086  0138C4  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9087  0138C6  0E27               	movlw	low _Scroll_6
  9088  0138C8  0101               	movlb	1	; () banked
  9089  0138CA  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  9090  0138CC  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  9091                           
  9092                           ;LCD.c: 349: cleanBuffer(Scroll_5, 16);
  9093  0138D0  0101               	movlb	1	; () banked
  9094  0138D2  0E01               	movlw	high _Scroll_5
  9095  0138D4  0101               	movlb	1	; () banked
  9096  0138D6  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
  9097  0138D8  0101               	movlb	1	; () banked
  9098  0138DA  0EDA               	movlw	low _Scroll_5
  9099  0138DC  0101               	movlb	1	; () banked
  9100  0138DE  6F0E               	movwf	cleanBuffer@data& (0+255),b
  9101  0138E0  0E00               	movlw	0
  9102  0138E2  0101               	movlb	1	; () banked
  9103  0138E4  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
  9104  0138E6  0E10               	movlw	16
  9105  0138E8  0101               	movlb	1	; () banked
  9106  0138EA  6F10               	movwf	cleanBuffer@count& (0+255),b
  9107  0138EC  EC50  F0BB         	call	_cleanBuffer	;wreg free
  9108                           
  9109                           ;LCD.c: 350: }
  9110  0138F0  D0FD               	goto	l12374
  9111  0138F2                     l12326:
  9112                           
  9113                           ;LCD.c: 351: else if(ScrollDisplayPosition == 7)
  9114  0138F2  0101               	movlb	1	; () banked
  9115  0138F4  5197               	movf	_ScrollDisplayPosition& (0+255),w,b
  9116  0138F6  0A07               	xorlw	7
  9117  0138F8  A4D8               	btfss	status,2,c
  9118  0138FA  D02D               	goto	l12336
  9119                           
  9120                           ; BSR set to: 1
  9121                           ;LCD.c: 352: {
  9122                           ;LCD.c: 353: ClearLCD();
  9123  0138FC  ECF5  F0BD         	call	_ClearLCD	;wreg free
  9124                           
  9125                           ;LCD.c: 354: SetLCDcursor(0, 0);
  9126  013900  0E00               	movlw	0
  9127  013902  0101               	movlb	1	; () banked
  9128  013904  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  9129  013906  0E00               	movlw	0
  9130  013908  ECDA  F0BC         	call	_SetLCDcursor
  9131                           
  9132                           ;LCD.c: 355: LCDPrintString(Scroll_6);
  9133  01390C  0E00               	movlw	high _Scroll_6
  9134  01390E  0101               	movlb	1	; () banked
  9135  013910  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9136  013912  0E27               	movlw	low _Scroll_6
  9137  013914  0101               	movlb	1	; () banked
  9138  013916  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  9139  013918  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  9140                           
  9141                           ;LCD.c: 356: SetLCDcursor(1, 0);
  9142  01391C  0E00               	movlw	0
  9143  01391E  0101               	movlb	1	; () banked
  9144  013920  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  9145  013922  0E01               	movlw	1
  9146  013924  ECDA  F0BC         	call	_SetLCDcursor
  9147                           
  9148                           ;LCD.c: 357: LCDPrintString(Scroll_7);
  9149  013928  0E00               	movlw	high _Scroll_7
  9150  01392A  0101               	movlb	1	; () banked
  9151  01392C  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9152  01392E  0E37               	movlw	low _Scroll_7
  9153  013930  0101               	movlb	1	; () banked
  9154  013932  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  9155  013934  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  9156                           
  9157                           ;LCD.c: 358: cleanBuffer(Scroll_6, 16);
  9158  013938  0E00               	movlw	high _Scroll_6
  9159  01393A  0101               	movlb	1	; () banked
  9160  01393C  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
  9161  01393E  0E27               	movlw	low _Scroll_6
  9162  013940  0101               	movlb	1	; () banked
  9163  013942  6F0E               	movwf	cleanBuffer@data& (0+255),b
  9164  013944  0E00               	movlw	0
  9165  013946  0101               	movlb	1	; () banked
  9166  013948  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
  9167  01394A  0E10               	movlw	16
  9168  01394C  0101               	movlb	1	; () banked
  9169  01394E  6F10               	movwf	cleanBuffer@count& (0+255),b
  9170  013950  EC50  F0BB         	call	_cleanBuffer	;wreg free
  9171                           
  9172                           ;LCD.c: 359: }
  9173  013954  D0CB               	goto	l12374
  9174  013956                     l12336:
  9175                           
  9176                           ;LCD.c: 360: else if(ScrollDisplayPosition == 8)
  9177  013956  0101               	movlb	1	; () banked
  9178  013958  5197               	movf	_ScrollDisplayPosition& (0+255),w,b
  9179  01395A  0A08               	xorlw	8
  9180  01395C  A4D8               	btfss	status,2,c
  9181  01395E  D02F               	goto	l12346
  9182                           
  9183                           ; BSR set to: 1
  9184                           ;LCD.c: 361: {
  9185                           ;LCD.c: 362: ClearLCD();
  9186  013960  ECF5  F0BD         	call	_ClearLCD	;wreg free
  9187                           
  9188                           ;LCD.c: 363: SetLCDcursor(0, 0);
  9189  013964  0E00               	movlw	0
  9190  013966  0101               	movlb	1	; () banked
  9191  013968  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  9192  01396A  0E00               	movlw	0
  9193  01396C  ECDA  F0BC         	call	_SetLCDcursor
  9194                           
  9195                           ;LCD.c: 364: LCDPrintString(Scroll_7);
  9196  013970  0E00               	movlw	high _Scroll_7
  9197  013972  0101               	movlb	1	; () banked
  9198  013974  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9199  013976  0E37               	movlw	low _Scroll_7
  9200  013978  0101               	movlb	1	; () banked
  9201  01397A  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  9202  01397C  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  9203                           
  9204                           ;LCD.c: 365: SetLCDcursor(1, 0);
  9205  013980  0E00               	movlw	0
  9206  013982  0101               	movlb	1	; () banked
  9207  013984  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  9208  013986  0E01               	movlw	1
  9209  013988  ECDA  F0BC         	call	_SetLCDcursor
  9210                           
  9211                           ;LCD.c: 366: LCDPrintString(Scroll_8);
  9212  01398C  0100               	movlb	0	; () banked
  9213  01398E  0E00               	movlw	high _Scroll_8
  9214  013990  0101               	movlb	1	; () banked
  9215  013992  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9216  013994  0100               	movlb	0	; () banked
  9217  013996  0EDA               	movlw	low _Scroll_8
  9218  013998  0101               	movlb	1	; () banked
  9219  01399A  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  9220  01399C  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  9221                           
  9222                           ;LCD.c: 367: cleanBuffer(Scroll_7, 16);
  9223  0139A0  0E00               	movlw	high _Scroll_7
  9224  0139A2  0101               	movlb	1	; () banked
  9225  0139A4  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
  9226  0139A6  0E37               	movlw	low _Scroll_7
  9227  0139A8  0101               	movlb	1	; () banked
  9228  0139AA  6F0E               	movwf	cleanBuffer@data& (0+255),b
  9229  0139AC  0E00               	movlw	0
  9230  0139AE  0101               	movlb	1	; () banked
  9231  0139B0  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
  9232  0139B2  0E10               	movlw	16
  9233  0139B4  0101               	movlb	1	; () banked
  9234  0139B6  6F10               	movwf	cleanBuffer@count& (0+255),b
  9235  0139B8  EC50  F0BB         	call	_cleanBuffer	;wreg free
  9236                           
  9237                           ;LCD.c: 368: }
  9238  0139BC  D097               	goto	l12374
  9239  0139BE                     l12346:
  9240                           
  9241                           ;LCD.c: 369: else if(ScrollDisplayPosition == 9)
  9242  0139BE  0101               	movlb	1	; () banked
  9243  0139C0  5197               	movf	_ScrollDisplayPosition& (0+255),w,b
  9244  0139C2  0A09               	xorlw	9
  9245  0139C4  A4D8               	btfss	status,2,c
  9246  0139C6  D033               	goto	l12356
  9247                           
  9248                           ; BSR set to: 1
  9249                           ;LCD.c: 370: {
  9250                           ;LCD.c: 371: ClearLCD();
  9251  0139C8  ECF5  F0BD         	call	_ClearLCD	;wreg free
  9252                           
  9253                           ;LCD.c: 372: SetLCDcursor(0, 0);
  9254  0139CC  0E00               	movlw	0
  9255  0139CE  0101               	movlb	1	; () banked
  9256  0139D0  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  9257  0139D2  0E00               	movlw	0
  9258  0139D4  ECDA  F0BC         	call	_SetLCDcursor
  9259                           
  9260                           ;LCD.c: 373: LCDPrintString(Scroll_8);
  9261  0139D8  0100               	movlb	0	; () banked
  9262  0139DA  0E00               	movlw	high _Scroll_8
  9263  0139DC  0101               	movlb	1	; () banked
  9264  0139DE  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9265  0139E0  0100               	movlb	0	; () banked
  9266  0139E2  0EDA               	movlw	low _Scroll_8
  9267  0139E4  0101               	movlb	1	; () banked
  9268  0139E6  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  9269  0139E8  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  9270                           
  9271                           ;LCD.c: 374: SetLCDcursor(1, 0);
  9272  0139EC  0E00               	movlw	0
  9273  0139EE  0101               	movlb	1	; () banked
  9274  0139F0  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  9275  0139F2  0E01               	movlw	1
  9276  0139F4  ECDA  F0BC         	call	_SetLCDcursor
  9277                           
  9278                           ;LCD.c: 375: LCDPrintString(Scroll_9);
  9279  0139F8  0100               	movlb	0	; () banked
  9280  0139FA  0E00               	movlw	high _Scroll_9
  9281  0139FC  0101               	movlb	1	; () banked
  9282  0139FE  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9283  013A00  0100               	movlb	0	; () banked
  9284  013A02  0EEA               	movlw	low _Scroll_9
  9285  013A04  0101               	movlb	1	; () banked
  9286  013A06  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  9287  013A08  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  9288                           
  9289                           ;LCD.c: 376: cleanBuffer(Scroll_8, 16);
  9290  013A0C  0100               	movlb	0	; () banked
  9291  013A0E  0E00               	movlw	high _Scroll_8
  9292  013A10  0101               	movlb	1	; () banked
  9293  013A12  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
  9294  013A14  0100               	movlb	0	; () banked
  9295  013A16  0EDA               	movlw	low _Scroll_8
  9296  013A18  0101               	movlb	1	; () banked
  9297  013A1A  6F0E               	movwf	cleanBuffer@data& (0+255),b
  9298  013A1C  0E00               	movlw	0
  9299  013A1E  0101               	movlb	1	; () banked
  9300  013A20  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
  9301  013A22  0E10               	movlw	16
  9302  013A24  0101               	movlb	1	; () banked
  9303  013A26  6F10               	movwf	cleanBuffer@count& (0+255),b
  9304  013A28  EC50  F0BB         	call	_cleanBuffer	;wreg free
  9305                           
  9306                           ;LCD.c: 377: }
  9307  013A2C  D05F               	goto	l12374
  9308  013A2E                     l12356:
  9309                           
  9310                           ;LCD.c: 378: else if(ScrollDisplayPosition == 10)
  9311  013A2E  0101               	movlb	1	; () banked
  9312  013A30  5197               	movf	_ScrollDisplayPosition& (0+255),w,b
  9313  013A32  0A0A               	xorlw	10
  9314  013A34  A4D8               	btfss	status,2,c
  9315  013A36  D033               	goto	l12366
  9316                           
  9317                           ; BSR set to: 1
  9318                           ;LCD.c: 379: {
  9319                           ;LCD.c: 380: ClearLCD();
  9320  013A38  ECF5  F0BD         	call	_ClearLCD	;wreg free
  9321                           
  9322                           ;LCD.c: 381: SetLCDcursor(0, 0);
  9323  013A3C  0E00               	movlw	0
  9324  013A3E  0101               	movlb	1	; () banked
  9325  013A40  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  9326  013A42  0E00               	movlw	0
  9327  013A44  ECDA  F0BC         	call	_SetLCDcursor
  9328                           
  9329                           ;LCD.c: 382: LCDPrintString(Scroll_9);
  9330  013A48  0100               	movlb	0	; () banked
  9331  013A4A  0E00               	movlw	high _Scroll_9
  9332  013A4C  0101               	movlb	1	; () banked
  9333  013A4E  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9334  013A50  0100               	movlb	0	; () banked
  9335  013A52  0EEA               	movlw	low _Scroll_9
  9336  013A54  0101               	movlb	1	; () banked
  9337  013A56  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  9338  013A58  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  9339                           
  9340                           ;LCD.c: 383: SetLCDcursor(1, 0);
  9341  013A5C  0E00               	movlw	0
  9342  013A5E  0101               	movlb	1	; () banked
  9343  013A60  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  9344  013A62  0E01               	movlw	1
  9345  013A64  ECDA  F0BC         	call	_SetLCDcursor
  9346                           
  9347                           ;LCD.c: 384: LCDPrintString(Scroll_10);
  9348  013A68  0102               	movlb	2	; () banked
  9349  013A6A  0E02               	movlw	high _Scroll_10
  9350  013A6C  0101               	movlb	1	; () banked
  9351  013A6E  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9352  013A70  0102               	movlb	2	; () banked
  9353  013A72  0E43               	movlw	low _Scroll_10
  9354  013A74  0101               	movlb	1	; () banked
  9355  013A76  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  9356  013A78  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  9357                           
  9358                           ;LCD.c: 385: cleanBuffer(Scroll_9, 16);
  9359  013A7C  0100               	movlb	0	; () banked
  9360  013A7E  0E00               	movlw	high _Scroll_9
  9361  013A80  0101               	movlb	1	; () banked
  9362  013A82  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
  9363  013A84  0100               	movlb	0	; () banked
  9364  013A86  0EEA               	movlw	low _Scroll_9
  9365  013A88  0101               	movlb	1	; () banked
  9366  013A8A  6F0E               	movwf	cleanBuffer@data& (0+255),b
  9367  013A8C  0E00               	movlw	0
  9368  013A8E  0101               	movlb	1	; () banked
  9369  013A90  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
  9370  013A92  0E10               	movlw	16
  9371  013A94  0101               	movlb	1	; () banked
  9372  013A96  6F10               	movwf	cleanBuffer@count& (0+255),b
  9373  013A98  EC50  F0BB         	call	_cleanBuffer	;wreg free
  9374                           
  9375                           ;LCD.c: 386: }
  9376  013A9C  D027               	goto	l12374
  9377  013A9E                     l12366:
  9378                           
  9379                           ;LCD.c: 387: else if(ScrollDisplayPosition == 11)
  9380  013A9E  0101               	movlb	1	; () banked
  9381  013AA0  5197               	movf	_ScrollDisplayPosition& (0+255),w,b
  9382  013AA2  0A0B               	xorlw	11
  9383  013AA4  A4D8               	btfss	status,2,c
  9384  013AA6  D022               	goto	l12374
  9385                           
  9386                           ; BSR set to: 1
  9387                           ;LCD.c: 388: {
  9388                           ;LCD.c: 389: ClearLCD();
  9389  013AA8  ECF5  F0BD         	call	_ClearLCD	;wreg free
  9390                           
  9391                           ;LCD.c: 390: SetLCDcursor(0, 0);
  9392  013AAC  0E00               	movlw	0
  9393  013AAE  0101               	movlb	1	; () banked
  9394  013AB0  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  9395  013AB2  0E00               	movlw	0
  9396  013AB4  ECDA  F0BC         	call	_SetLCDcursor
  9397                           
  9398                           ;LCD.c: 391: LCDPrintString(Scroll_10);
  9399  013AB8  0102               	movlb	2	; () banked
  9400  013ABA  0E02               	movlw	high _Scroll_10
  9401  013ABC  0101               	movlb	1	; () banked
  9402  013ABE  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9403  013AC0  0102               	movlb	2	; () banked
  9404  013AC2  0E43               	movlw	low _Scroll_10
  9405  013AC4  0101               	movlb	1	; () banked
  9406  013AC6  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  9407  013AC8  ECD2  F0B8         	call	_LCDPrintString	;wreg free
  9408                           
  9409                           ;LCD.c: 392: cleanBuffer(Scroll_10, 16);
  9410  013ACC  0102               	movlb	2	; () banked
  9411  013ACE  0E02               	movlw	high _Scroll_10
  9412  013AD0  0101               	movlb	1	; () banked
  9413  013AD2  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
  9414  013AD4  0102               	movlb	2	; () banked
  9415  013AD6  0E43               	movlw	low _Scroll_10
  9416  013AD8  0101               	movlb	1	; () banked
  9417  013ADA  6F0E               	movwf	cleanBuffer@data& (0+255),b
  9418  013ADC  0E00               	movlw	0
  9419  013ADE  0101               	movlb	1	; () banked
  9420  013AE0  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
  9421  013AE2  0E10               	movlw	16
  9422  013AE4  0101               	movlb	1	; () banked
  9423  013AE6  6F10               	movwf	cleanBuffer@count& (0+255),b
  9424  013AE8  EC50  F0BB         	call	_cleanBuffer	;wreg free
  9425  013AEC                     l12374:
  9426                           
  9427                           ;LCD.c: 393: }
  9428                           ;LCD.c: 394: if(ScrollDisplayPosition > ScrollFIFOCount)
  9429  013AEC  0101               	movlb	1	; () banked
  9430  013AEE  5197               	movf	_ScrollDisplayPosition& (0+255),w,b
  9431  013AF0  0101               	movlb	1	; () banked
  9432  013AF2  5D98               	subwf	_ScrollFIFOCount& (0+255),w,b
  9433  013AF4  B0D8               	btfsc	status,0,c
  9434  013AF6  D006               	goto	l1044
  9435                           
  9436                           ; BSR set to: 1
  9437                           ;LCD.c: 395: {
  9438                           ;LCD.c: 396: ScrollFIFOCount=0;
  9439  013AF8  0E00               	movlw	0
  9440  013AFA  0101               	movlb	1	; () banked
  9441  013AFC  6F98               	movwf	_ScrollFIFOCount& (0+255),b
  9442                           
  9443                           ;LCD.c: 397: ScrollDisplayPosition=0;
  9444  013AFE  0E00               	movlw	0
  9445  013B00  0101               	movlb	1	; () banked
  9446  013B02  6F97               	movwf	_ScrollDisplayPosition& (0+255),b
  9447  013B04                     l1044:
  9448                           
  9449                           ; BSR set to: 1
  9450                           ;LCD.c: 398: }
  9451                           ;LCD.c: 399: LCDclearCount = 15000;
  9452  013B04  0E98               	movlw	152
  9453  013B06  0101               	movlb	1	; () banked
  9454  013B08  6FEE               	movwf	_LCDclearCount& (0+255),b
  9455  013B0A  0E3A               	movlw	58
  9456  013B0C  0101               	movlb	1	; () banked
  9457  013B0E  6FEF               	movwf	(_LCDclearCount+1)& (0+255),b
  9458  013B10  0E00               	movlw	0
  9459  013B12  0101               	movlb	1	; () banked
  9460  013B14  6FF0               	movwf	(_LCDclearCount+2)& (0+255),b
  9461  013B16  0E00               	movlw	0
  9462  013B18  0101               	movlb	1	; () banked
  9463  013B1A  6FF1               	movwf	(_LCDclearCount+3)& (0+255),b
  9464  013B1C  0012               	return	
  9465  013B1E                     __end_of_LCDScreenUpdate:
  9466                           	opt stack 0
  9467                           tblptru	equ	0xFF8
  9468                           tblptrh	equ	0xFF7
  9469                           tblptrl	equ	0xFF6
  9470                           tablat	equ	0xFF5
  9471                           prodl	equ	0xFF3
  9472                           postinc0	equ	0xFEE
  9473                           wreg	equ	0xFE8
  9474                           postdec1	equ	0xFE5
  9475                           fsr1l	equ	0xFE1
  9476                           status	equ	0xFD8
  9477                           
  9478 ;; *************** function _LCDPrintChar *****************
  9479 ;; Defined at:
  9480 ;;		line 266 in file "LCD.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  character       1    wreg     unsigned char 
  9483 ;; Auto vars:     Size  Location     Type
  9484 ;;  character       1   28[BANK1 ] unsigned char 
  9485 ;; Return value:  Size  Location     Type
  9486 ;;		None               void
  9487 ;; Registers used:
  9488 ;;		wreg, status,2, status,0, cstack
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9495 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9497 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9498 ;;Total ram usage:        1 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; Hardware stack levels required when called:    9
  9501 ;; This function calls:
  9502 ;;		_SendLCDbyte
  9503 ;; This function is called by:
  9504 ;;		_main
  9505 ;;		_LCDScreenUpdate
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509                           	psect	text10
  9510  017C2E                     __ptext10:
  9511                           	opt stack 0
  9512  017C2E                     _LCDPrintChar:
  9513                           	opt stack 19
  9514                           
  9515                           ;incstack = 0
  9516                           ;LCDPrintChar@character stored from wreg
  9517  017C2E  0101               	movlb	1	; () banked
  9518  017C30  6F1C               	movwf	LCDPrintChar@character& (0+255),b
  9519                           
  9520                           ; BSR set to: 1
  9521                           ;LCD.c: 268: SendLCDbyte(character, 1);
  9522  017C32  0E01               	movlw	1
  9523  017C34  0101               	movlb	1	; () banked
  9524  017C36  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
  9525  017C38  0101               	movlb	1	; () banked
  9526  017C3A  511C               	movf	LCDPrintChar@character& (0+255),w,b
  9527  017C3C  EC8A  F0B0         	call	_SendLCDbyte
  9528  017C40  0012               	return	
  9529  017C42                     __end_of_LCDPrintChar:
  9530                           	opt stack 0
  9531                           tblptru	equ	0xFF8
  9532                           tblptrh	equ	0xFF7
  9533                           tblptrl	equ	0xFF6
  9534                           tablat	equ	0xFF5
  9535                           prodl	equ	0xFF3
  9536                           postinc0	equ	0xFEE
  9537                           wreg	equ	0xFE8
  9538                           postdec1	equ	0xFE5
  9539                           fsr1l	equ	0xFE1
  9540                           status	equ	0xFD8
  9541                           
  9542 ;; *************** function _InitApp *****************
  9543 ;; Defined at:
  9544 ;;		line 53 in file "user.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;		None
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;		None               void
  9551 ;; Registers used:
  9552 ;;		wreg, status,2, status,0, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;Total ram usage:        0 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    7
  9565 ;; This function calls:
  9566 ;;		_delayUS
  9567 ;; This function is called by:
  9568 ;;		_main
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           	psect	text11
  9573  017642                     __ptext11:
  9574                           	opt stack 0
  9575  017642                     _InitApp:
  9576                           	opt stack 22
  9577                           
  9578                           ;user.c: 55: TRISDbits.TRISD1 = 0;
  9579                           
  9580                           ;incstack = 0
  9581  017642  9295               	bcf	3989,1,c	;volatile
  9582                           
  9583                           ;user.c: 56: TRISDbits.TRISD2 = 0;
  9584  017644  9495               	bcf	3989,2,c	;volatile
  9585                           
  9586                           ;user.c: 57: TRISDbits.TRISD0 = 0;
  9587  017646  9095               	bcf	3989,0,c	;volatile
  9588                           
  9589                           ;user.c: 58: TRISAbits.TRISA0 = 1;
  9590  017648  8092               	bsf	3986,0,c	;volatile
  9591                           
  9592                           ;user.c: 59: TRISCbits.TRISC2 = 0;
  9593  01764A  9494               	bcf	3988,2,c	;volatile
  9594                           
  9595                           ;user.c: 60: TRISCbits.TRISC1 = 0;
  9596  01764C  9294               	bcf	3988,1,c	;volatile
  9597                           
  9598                           ;user.c: 61: TRISEbits.TRISE2 = 1;
  9599  01764E  8496               	bsf	3990,2,c	;volatile
  9600                           
  9601                           ;user.c: 62: TRISEbits.TRISE1 = 0;
  9602  017650  9296               	bcf	3990,1,c	;volatile
  9603                           
  9604                           ;user.c: 64: TRISCbits.TRISC3 = 0;
  9605  017652  9694               	bcf	3988,3,c	;volatile
  9606                           
  9607                           ;user.c: 65: TRISCbits.TRISC4 = 0;
  9608  017654  9894               	bcf	3988,4,c	;volatile
  9609                           
  9610                           ;user.c: 67: LATC &= ~0b00001000;
  9611  017656  968B               	bcf	3979,3,c	;volatile
  9612                           
  9613                           ;user.c: 68: delayUS(200);
  9614  017658  0EC8               	movlw	200
  9615  01765A  0101               	movlb	1	; () banked
  9616  01765C  6F0E               	movwf	delayUS@US& (0+255),b
  9617  01765E  0E00               	movlw	0
  9618  017660  0101               	movlb	1	; () banked
  9619  017662  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  9620  017664  0E00               	movlw	0
  9621  017666  0101               	movlb	1	; () banked
  9622  017668  6F10               	movwf	(delayUS@US+2)& (0+255),b
  9623  01766A  0E00               	movlw	0
  9624  01766C  0101               	movlb	1	; () banked
  9625  01766E  6F11               	movwf	(delayUS@US+3)& (0+255),b
  9626  017670  EC10  F0B9         	call	_delayUS	;wreg free
  9627                           
  9628                           ;user.c: 69: TRISCbits.TRISC3 = 1;
  9629  017674  8694               	bsf	3988,3,c	;volatile
  9630                           
  9631                           ;user.c: 71: LATD &= ~(0b00000010 + 0b00000100 + 0b00000001);
  9632  017676  0EF8               	movlw	248
  9633  017678  168C               	andwf	3980,f,c	;volatile
  9634                           
  9635                           ;user.c: 72: LATE &= ~0b00000010;
  9636  01767A  928D               	bcf	3981,1,c	;volatile
  9637                           
  9638                           ;user.c: 73: LATC &= ~(0b00000010);
  9639  01767C  928B               	bcf	3979,1,c	;volatile
  9640                           
  9641                           ;user.c: 76: TRISAbits.TRISA3 = 0;
  9642  01767E  9692               	bcf	3986,3,c	;volatile
  9643                           
  9644                           ;user.c: 77: TRISAbits.TRISA4 = 0;
  9645  017680  9892               	bcf	3986,4,c	;volatile
  9646                           
  9647                           ;user.c: 78: TRISAbits.TRISA5 = 0;
  9648  017682  9A92               	bcf	3986,5,c	;volatile
  9649                           
  9650                           ;user.c: 79: TRISEbits.TRISE0 = 0;
  9651  017684  9096               	bcf	3990,0,c	;volatile
  9652                           
  9653                           ;user.c: 80: TRISDbits.TRISD4 = 0;
  9654  017686  9895               	bcf	3989,4,c	;volatile
  9655                           
  9656                           ;user.c: 81: TRISDbits.TRISD7 = 0;
  9657  017688  9E95               	bcf	3989,7,c	;volatile
  9658                           
  9659                           ;user.c: 82: TRISDbits.TRISD6 = 0;
  9660  01768A  9C95               	bcf	3989,6,c	;volatile
  9661                           
  9662                           ;user.c: 83: TRISDbits.TRISD5 = 0;
  9663  01768C  9A95               	bcf	3989,5,c	;volatile
  9664                           
  9665                           ;user.c: 85: LATA &= ~(0b00001000+0b00010000+0b00100000);
  9666  01768E  0EC7               	movlw	199
  9667  017690  1689               	andwf	3977,f,c	;volatile
  9668                           
  9669                           ;user.c: 86: LATD &= ~(0b10000000 + 0b00100000 + 0b01000000);
  9670  017692  0E1F               	movlw	31
  9671  017694  168C               	andwf	3980,f,c	;volatile
  9672                           
  9673                           ;user.c: 87: LATE &= ~0b00000001;
  9674  017696  908D               	bcf	3981,0,c	;volatile
  9675                           
  9676                           ;user.c: 89: RCONbits.IPEN = 1;
  9677  017698  8ED0               	bsf	4048,7,c	;volatile
  9678                           
  9679                           ;user.c: 90: INTCONbits.PEIE = 1;
  9680  01769A  8CF2               	bsf	intcon,6,c	;volatile
  9681                           
  9682                           ;user.c: 91: INTCONbits.GIE = 1;
  9683  01769C  8EF2               	bsf	intcon,7,c	;volatile
  9684  01769E  0012               	return	
  9685  0176A0                     __end_of_InitApp:
  9686                           	opt stack 0
  9687                           tblptru	equ	0xFF8
  9688                           tblptrh	equ	0xFF7
  9689                           tblptrl	equ	0xFF6
  9690                           tablat	equ	0xFF5
  9691                           prodl	equ	0xFF3
  9692                           intcon	equ	0xFF2
  9693                           postinc0	equ	0xFEE
  9694                           wreg	equ	0xFE8
  9695                           postdec1	equ	0xFE5
  9696                           fsr1l	equ	0xFE1
  9697                           status	equ	0xFD8
  9698                           
  9699 ;; *************** function _EnableInternalADC *****************
  9700 ;; Defined at:
  9701 ;;		line 53 in file "ADC.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  channels        1    wreg     unsigned char 
  9704 ;; Auto vars:     Size  Location     Type
  9705 ;;  channels        1   15[BANK1 ] unsigned char 
  9706 ;;  config          1   14[BANK1 ] unsigned char 
  9707 ;; Return value:  Size  Location     Type
  9708 ;;		None               void
  9709 ;; Registers used:
  9710 ;;		wreg, status,2, status,0
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9717 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9719 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9720 ;;Total ram usage:        2 bytes
  9721 ;; Hardware stack levels used:    1
  9722 ;; Hardware stack levels required when called:    6
  9723 ;; This function calls:
  9724 ;;		Nothing
  9725 ;; This function is called by:
  9726 ;;		_main
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           	psect	text12
  9731  016712                     __ptext12:
  9732                           	opt stack 0
  9733  016712                     _EnableInternalADC:
  9734                           	opt stack 23
  9735                           
  9736                           ;incstack = 0
  9737                           ;EnableInternalADC@channels stored from wreg
  9738  016712  0101               	movlb	1	; () banked
  9739  016714  6F0F               	movwf	EnableInternalADC@channels& (0+255),b
  9740                           
  9741                           ; BSR set to: 1
  9742                           ;ADC.c: 55: unsigned char config =0;
  9743  016716  0E00               	movlw	0
  9744  016718  0101               	movlb	1	; () banked
  9745  01671A  6F0E               	movwf	EnableInternalADC@config& (0+255),b
  9746                           
  9747                           ; BSR set to: 1
  9748                           ;ADC.c: 57: if(channels == 1)
  9749  01671C  0101               	movlb	1	; () banked
  9750  01671E  050F               	decf	EnableInternalADC@channels& (0+255),w,b
  9751  016720  A4D8               	btfss	status,2,c
  9752  016722  D002               	goto	l8480
  9753                           
  9754                           ; BSR set to: 1
  9755                           ;ADC.c: 58: {
  9756                           ;ADC.c: 59: config |= 0b00001110;
  9757  016724  0E0E               	movlw	14
  9758  016726  D03F               	goto	L10
  9759  016728                     l8480:
  9760                           
  9761                           ; BSR set to: 1
  9762                           ;ADC.c: 61: else if(channels ==2)
  9763  016728  0101               	movlb	1	; () banked
  9764  01672A  510F               	movf	EnableInternalADC@channels& (0+255),w,b
  9765  01672C  0A02               	xorlw	2
  9766  01672E  A4D8               	btfss	status,2,c
  9767  016730  D002               	goto	l8484
  9768                           
  9769                           ; BSR set to: 1
  9770                           ;ADC.c: 62: {
  9771                           ;ADC.c: 63: config |= 0b00001101;
  9772  016732  0E0D               	movlw	13
  9773  016734  D038               	goto	L10
  9774  016736                     l8484:
  9775                           
  9776                           ; BSR set to: 1
  9777                           ;ADC.c: 65: else if(channels ==3)
  9778  016736  0101               	movlb	1	; () banked
  9779  016738  510F               	movf	EnableInternalADC@channels& (0+255),w,b
  9780  01673A  0A03               	xorlw	3
  9781  01673C  A4D8               	btfss	status,2,c
  9782  01673E  D002               	goto	l8488
  9783                           
  9784                           ; BSR set to: 1
  9785                           ;ADC.c: 66: {
  9786                           ;ADC.c: 67: config |= 0b00001100;
  9787  016740  0E0C               	movlw	12
  9788  016742  D031               	goto	L10
  9789  016744                     l8488:
  9790                           
  9791                           ; BSR set to: 1
  9792                           ;ADC.c: 69: else if(channels ==4)
  9793  016744  0101               	movlb	1	; () banked
  9794  016746  510F               	movf	EnableInternalADC@channels& (0+255),w,b
  9795  016748  0A04               	xorlw	4
  9796  01674A  A4D8               	btfss	status,2,c
  9797  01674C  D002               	goto	l8492
  9798                           
  9799                           ; BSR set to: 1
  9800                           ;ADC.c: 70: {
  9801                           ;ADC.c: 71: config |= 0b00001011;
  9802  01674E  0E0B               	movlw	11
  9803  016750  D02A               	goto	L10
  9804  016752                     l8492:
  9805                           
  9806                           ; BSR set to: 1
  9807                           ;ADC.c: 73: else if(channels ==5)
  9808  016752  0101               	movlb	1	; () banked
  9809  016754  510F               	movf	EnableInternalADC@channels& (0+255),w,b
  9810  016756  0A05               	xorlw	5
  9811  016758  A4D8               	btfss	status,2,c
  9812  01675A  D002               	goto	l8496
  9813                           
  9814                           ; BSR set to: 1
  9815                           ;ADC.c: 74: {
  9816                           ;ADC.c: 75: config |= 0b00001010;
  9817  01675C  0E0A               	movlw	10
  9818  01675E  D023               	goto	L10
  9819  016760                     l8496:
  9820                           
  9821                           ; BSR set to: 1
  9822                           ;ADC.c: 77: else if(channels ==6)
  9823  016760  0101               	movlb	1	; () banked
  9824  016762  510F               	movf	EnableInternalADC@channels& (0+255),w,b
  9825  016764  0A06               	xorlw	6
  9826  016766  A4D8               	btfss	status,2,c
  9827  016768  D002               	goto	l8500
  9828                           
  9829                           ; BSR set to: 1
  9830                           ;ADC.c: 78: {
  9831                           ;ADC.c: 79: config |= 0b00001001;
  9832  01676A  0E09               	movlw	9
  9833  01676C  D01C               	goto	L10
  9834  01676E                     l8500:
  9835                           
  9836                           ; BSR set to: 1
  9837                           ;ADC.c: 81: else if(channels ==7)
  9838  01676E  0101               	movlb	1	; () banked
  9839  016770  510F               	movf	EnableInternalADC@channels& (0+255),w,b
  9840  016772  0A07               	xorlw	7
  9841  016774  A4D8               	btfss	status,2,c
  9842  016776  D003               	goto	l8504
  9843                           
  9844                           ; BSR set to: 1
  9845                           ;ADC.c: 82: {
  9846                           ;ADC.c: 83: config |= 0b00001000;
  9847  016778  0101               	movlb	1	; () banked
  9848  01677A  870E               	bsf	EnableInternalADC@config& (0+255),3,b
  9849                           
  9850                           ;ADC.c: 84: }
  9851  01677C  D019               	goto	l8518
  9852  01677E                     l8504:
  9853                           
  9854                           ; BSR set to: 1
  9855                           ;ADC.c: 85: else if(channels ==8)
  9856  01677E  0101               	movlb	1	; () banked
  9857  016780  510F               	movf	EnableInternalADC@channels& (0+255),w,b
  9858  016782  0A08               	xorlw	8
  9859  016784  A4D8               	btfss	status,2,c
  9860  016786  D002               	goto	l8508
  9861                           
  9862                           ; BSR set to: 1
  9863                           ;ADC.c: 86: {
  9864                           ;ADC.c: 87: config |= 0b00000111;
  9865  016788  0E07               	movlw	7
  9866  01678A  D00D               	goto	L10
  9867  01678C                     l8508:
  9868                           
  9869                           ; BSR set to: 1
  9870                           ;ADC.c: 89: else if(channels ==9)
  9871  01678C  0101               	movlb	1	; () banked
  9872  01678E  510F               	movf	EnableInternalADC@channels& (0+255),w,b
  9873  016790  0A09               	xorlw	9
  9874  016792  A4D8               	btfss	status,2,c
  9875  016794  D002               	goto	l8512
  9876                           
  9877                           ; BSR set to: 1
  9878                           ;ADC.c: 90: {
  9879                           ;ADC.c: 91: config |= 0b00000110;
  9880  016796  0E06               	movlw	6
  9881  016798  D006               	goto	L10
  9882  01679A                     l8512:
  9883                           
  9884                           ; BSR set to: 1
  9885                           ;ADC.c: 93: else if(channels ==10)
  9886  01679A  0101               	movlb	1	; () banked
  9887  01679C  510F               	movf	EnableInternalADC@channels& (0+255),w,b
  9888  01679E  0A0A               	xorlw	10
  9889  0167A0  A4D8               	btfss	status,2,c
  9890  0167A2  D004               	goto	l8516
  9891                           
  9892                           ; BSR set to: 1
  9893                           ;ADC.c: 94: {
  9894                           ;ADC.c: 95: config |= 0b00000101;
  9895  0167A4  0E05               	movlw	5
  9896  0167A6                     L10:
  9897  0167A6  0101               	movlb	1	; () banked
  9898  0167A8  130E               	iorwf	EnableInternalADC@config& (0+255),f,b
  9899                           
  9900                           ;ADC.c: 96: }
  9901  0167AA  D002               	goto	l8518
  9902  0167AC                     l8516:
  9903                           
  9904                           ; BSR set to: 1
  9905                           ;ADC.c: 97: else
  9906                           ;ADC.c: 98: {
  9907                           ;ADC.c: 99: config |= 0b00000100;
  9908  0167AC  0101               	movlb	1	; () banked
  9909  0167AE  850E               	bsf	EnableInternalADC@config& (0+255),2,b
  9910  0167B0                     l8518:
  9911                           
  9912                           ; BSR set to: 1
  9913                           ;ADC.c: 100: }
  9914                           ;ADC.c: 102: ADCON1 = config;
  9915  0167B0  C10E  FFC1         	movff	EnableInternalADC@config,4033	;volatile
  9916                           
  9917                           ; BSR set to: 1
  9918  0167B4  0012               	return	
  9919  0167B6                     __end_of_EnableInternalADC:
  9920                           	opt stack 0
  9921                           tblptru	equ	0xFF8
  9922                           tblptrh	equ	0xFF7
  9923                           tblptrl	equ	0xFF6
  9924                           tablat	equ	0xFF5
  9925                           prodl	equ	0xFF3
  9926                           intcon	equ	0xFF2
  9927                           postinc0	equ	0xFEE
  9928                           wreg	equ	0xFE8
  9929                           postdec1	equ	0xFE5
  9930                           fsr1l	equ	0xFE1
  9931                           status	equ	0xFD8
  9932                           
  9933 ;; *************** function _ContrastPWM_init *****************
  9934 ;; Defined at:
  9935 ;;		line 81 in file "PWM.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;		None
  9938 ;; Auto vars:     Size  Location     Type
  9939 ;;		None
  9940 ;; Return value:  Size  Location     Type
  9941 ;;		None               void
  9942 ;; Registers used:
  9943 ;;		wreg, status,2, status,0, cstack
  9944 ;; Tracked objects:
  9945 ;;		On entry : 0/0
  9946 ;;		On exit  : 0/0
  9947 ;;		Unchanged: 0/0
  9948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9953 ;;Total ram usage:        0 bytes
  9954 ;; Hardware stack levels used:    1
  9955 ;; Hardware stack levels required when called:    9
  9956 ;; This function calls:
  9957 ;;		_SetDuty
  9958 ;; This function is called by:
  9959 ;;		_main
  9960 ;; This function uses a non-reentrant model
  9961 ;;
  9962                           
  9963                           	psect	text13
  9964  017C94                     __ptext13:
  9965                           	opt stack 0
  9966  017C94                     _ContrastPWM_init:
  9967                           	opt stack 20
  9968                           
  9969                           ;PWM.c: 85: SetDuty(0);
  9970                           
  9971                           ; BSR set to: 1
  9972                           ;incstack = 0
  9973  017C94  0E00               	movlw	0
  9974  017C96  EC61  F0B1         	call	_SetDuty
  9975                           
  9976                           ;PWM.c: 86: ECCP1CON |= 0b00001100;
  9977  017C9A  0E0C               	movlw	12
  9978  017C9C  12BA               	iorwf	4026,f,c	;volatile
  9979  017C9E  0012               	return	
  9980  017CA0                     __end_of_ContrastPWM_init:
  9981                           	opt stack 0
  9982                           tblptru	equ	0xFF8
  9983                           tblptrh	equ	0xFF7
  9984                           tblptrl	equ	0xFF6
  9985                           tablat	equ	0xFF5
  9986                           prodl	equ	0xFF3
  9987                           intcon	equ	0xFF2
  9988                           postinc0	equ	0xFEE
  9989                           wreg	equ	0xFE8
  9990                           postdec1	equ	0xFE5
  9991                           fsr1l	equ	0xFE1
  9992                           status	equ	0xFD8
  9993                           
  9994 ;; *************** function _ConfigureOscillator *****************
  9995 ;; Defined at:
  9996 ;;		line 52 in file "system.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;		None
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;		None
 10001 ;; Return value:  Size  Location     Type
 10002 ;;		None               void
 10003 ;; Registers used:
 10004 ;;		None
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10014 ;;Total ram usage:        0 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; Hardware stack levels required when called:    6
 10017 ;; This function calls:
 10018 ;;		Nothing
 10019 ;; This function is called by:
 10020 ;;		_main
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           	psect	text14
 10025  017CA8                     __ptext14:
 10026                           	opt stack 0
 10027  017CA8                     _ConfigureOscillator:
 10028                           	opt stack 23
 10029  017CA8                     l184:
 10030  017CA8  B6D3               	btfsc	4051,3,c	;volatile
 10031  017CAA  0012               	return	
 10032  017CAC  D7FD               	goto	l184
 10033  017CAE                     __end_of_ConfigureOscillator:
 10034                           	opt stack 0
 10035                           tblptru	equ	0xFF8
 10036                           tblptrh	equ	0xFF7
 10037                           tblptrl	equ	0xFF6
 10038                           tablat	equ	0xFF5
 10039                           prodl	equ	0xFF3
 10040                           intcon	equ	0xFF2
 10041                           postinc0	equ	0xFEE
 10042                           wreg	equ	0xFE8
 10043                           postdec1	equ	0xFE5
 10044                           fsr1l	equ	0xFE1
 10045                           status	equ	0xFD8
 10046                           
 10047 ;; *************** function _Command *****************
 10048 ;; Defined at:
 10049 ;;		line 67 in file "StringCommand.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;  Input           2  136[BANK1 ] PTR unsigned char 
 10052 ;;		 -> Rxdata(100), 
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;  buf           200    0[BANK5 ] unsigned char [200]
 10055 ;;  tempLONG        4  222[BANK5 ] long 
 10056 ;;  PARITYtemp      4  212[BANK5 ] unsigned long 
 10057 ;;  BAUDtemp        4  206[BANK5 ] unsigned long 
 10058 ;;  duty            2  220[BANK5 ] int 
 10059 ;;  channel         2  218[BANK5 ] int 
 10060 ;;  contrast        2  216[BANK5 ] int 
 10061 ;;  RTC_Battery_    2  210[BANK5 ] unsigned int 
 10062 ;;  RTC_Battery_    2  204[BANK5 ] unsigned int 
 10063 ;;  RTC_Battery_    2  202[BANK5 ] unsigned int 
 10064 ;;  ADC_Value       2  200[BANK5 ] unsigned int 
 10065 ;; Return value:  Size  Location     Type
 10066 ;;                  1    wreg      unsigned char 
 10067 ;; Registers used:
 10068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10069 ;; Tracked objects:
 10070 ;;		On entry : 0/0
 10071 ;;		On exit  : 0/0
 10072 ;;		Unchanged: 0/0
 10073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10074 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10075 ;;      Locals:         0       0       0       0       0       0     226       0       0       0       0       0       
      +0       0
 10076 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 10077 ;;      Totals:         0       0       2       4       0       0     226       0       0       0       0       0       
      +0       0
 10078 ;;Total ram usage:      232 bytes
 10079 ;; Hardware stack levels used:    1
 10080 ;; Hardware stack levels required when called:   11
 10081 ;; This function calls:
 10082 ;;		_GetEnteredNumber
 10083 ;;		_ISNUMBER
 10084 ;;		_InternalADC_Read
 10085 ;;		_LCDPrintString
 10086 ;;		_LCD_Scroll
 10087 ;;		_LCDdisplayFeedback
 10088 ;;		_Parse_Time
 10089 ;;		_READ_RTC_TIME
 10090 ;;		_RemoveSpaces
 10091 ;;		_SET_RTC_TIME
 10092 ;;		_Send_Config1
 10093 ;;		_Send_Config2
 10094 ;;		_SetBaud
 10095 ;;		_SetContrast
 10096 ;;		_SetDuty
 10097 ;;		_SetLCDcursor
 10098 ;;		_SprintDate
 10099 ;;		_StartsWith
 10100 ;;		_StringAddEqual
 10101 ;;		_StringContains
 10102 ;;		_StringMatch
 10103 ;;		_UARTstring
 10104 ;;		___ftdiv
 10105 ;;		___ftmul
 10106 ;;		___fttol
 10107 ;;		___lwmod
 10108 ;;		___lwtoft
 10109 ;;		_cleanBuffer
 10110 ;;		_delayUS
 10111 ;;		_lowercase
 10112 ;;		_sprintf
 10113 ;; This function is called by:
 10114 ;;		_main
 10115 ;; This function uses a non-reentrant model
 10116 ;;
 10117                           
 10118                           	psect	text15
 10119  010000                     __ptext15:
 10120                           	opt stack 0
 10121  010000                     _Command:
 10122                           	opt stack 18
 10123                           
 10124                           ;StringCommand.c: 69: int channel = 20;
 10125                           
 10126                           ;incstack = 0
 10127  010000  0E00               	movlw	0
 10128  010002  0105               	movlb	5	; () banked
 10129  010004  6FDB               	movwf	(Command@channel+1)& (0+255),b
 10130  010006  0E14               	movlw	20
 10131  010008  0105               	movlb	5	; () banked
 10132  01000A  6FDA               	movwf	Command@channel& (0+255),b
 10133                           
 10134                           ;StringCommand.c: 70: unsigned int ADC_Value = 0;
 10135  01000C  0E00               	movlw	0
 10136  01000E  0105               	movlb	5	; () banked
 10137  010010  6FC9               	movwf	(Command@ADC_Value+1)& (0+255),b
 10138  010012  0E00               	movlw	0
 10139  010014  0105               	movlb	5	; () banked
 10140  010016  6FC8               	movwf	Command@ADC_Value& (0+255),b
 10141                           
 10142                           ;StringCommand.c: 71: unsigned int RTC_Battery_Value =0;
 10143  010018  0E00               	movlw	0
 10144  01001A  0105               	movlb	5	; () banked
 10145  01001C  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
 10146  01001E  0E00               	movlw	0
 10147  010020  0105               	movlb	5	; () banked
 10148  010022  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
 10149                           
 10150                           ;StringCommand.c: 72: unsigned int RTC_Battery_Value_HIGH_decimal =0;
 10151  010024  0E00               	movlw	0
 10152  010026  0105               	movlb	5	; () banked
 10153  010028  6FCD               	movwf	(Command@RTC_Battery_Value_HIGH_decimal+1)& (0+255),b
 10154  01002A  0E00               	movlw	0
 10155  01002C  0105               	movlb	5	; () banked
 10156  01002E  6FCC               	movwf	Command@RTC_Battery_Value_HIGH_decimal& (0+255),b
 10157                           
 10158                           ;StringCommand.c: 73: unsigned int RTC_Battery_Value_LOW_decimal =0;
 10159  010030  0E00               	movlw	0
 10160  010032  0105               	movlb	5	; () banked
 10161  010034  6FD3               	movwf	(Command@RTC_Battery_Value_LOW_decimal+1)& (0+255),b
 10162  010036  0E00               	movlw	0
 10163  010038  0105               	movlb	5	; () banked
 10164  01003A  6FD2               	movwf	Command@RTC_Battery_Value_LOW_decimal& (0+255),b
 10165                           
 10166                           ;StringCommand.c: 74: int duty = 0;
 10167  01003C  0E00               	movlw	0
 10168  01003E  0105               	movlb	5	; () banked
 10169  010040  6FDD               	movwf	(Command@duty+1)& (0+255),b
 10170  010042  0E00               	movlw	0
 10171  010044  0105               	movlb	5	; () banked
 10172  010046  6FDC               	movwf	Command@duty& (0+255),b
 10173                           
 10174                           ;StringCommand.c: 75: long tempLONG;
 10175                           ;StringCommand.c: 76: int contrast = 0;
 10176  010048  0E00               	movlw	0
 10177  01004A  0105               	movlb	5	; () banked
 10178  01004C  6FD9               	movwf	(Command@contrast+1)& (0+255),b
 10179  01004E  0E00               	movlw	0
 10180  010050  0105               	movlb	5	; () banked
 10181  010052  6FD8               	movwf	Command@contrast& (0+255),b
 10182                           
 10183                           ;StringCommand.c: 77: unsigned char buf[200];
 10184                           ;StringCommand.c: 78: unsigned long BAUDtemp = 0;
 10185  010054  0E00               	movlw	0
 10186  010056  0105               	movlb	5	; () banked
 10187  010058  6FCE               	movwf	Command@BAUDtemp& (0+255),b
 10188  01005A  0E00               	movlw	0
 10189  01005C  0105               	movlb	5	; () banked
 10190  01005E  6FCF               	movwf	(Command@BAUDtemp+1)& (0+255),b
 10191  010060  0E00               	movlw	0
 10192  010062  0105               	movlb	5	; () banked
 10193  010064  6FD0               	movwf	(Command@BAUDtemp+2)& (0+255),b
 10194  010066  0E00               	movlw	0
 10195  010068  0105               	movlb	5	; () banked
 10196  01006A  6FD1               	movwf	(Command@BAUDtemp+3)& (0+255),b
 10197                           
 10198                           ;StringCommand.c: 79: unsigned long PARITYtemp = 0;
 10199  01006C  0E00               	movlw	0
 10200  01006E  0105               	movlb	5	; () banked
 10201  010070  6FD4               	movwf	Command@PARITYtemp& (0+255),b
 10202  010072  0E00               	movlw	0
 10203  010074  0105               	movlb	5	; () banked
 10204  010076  6FD5               	movwf	(Command@PARITYtemp+1)& (0+255),b
 10205  010078  0E00               	movlw	0
 10206  01007A  0105               	movlb	5	; () banked
 10207  01007C  6FD6               	movwf	(Command@PARITYtemp+2)& (0+255),b
 10208  01007E  0E00               	movlw	0
 10209  010080  0105               	movlb	5	; () banked
 10210  010082  6FD7               	movwf	(Command@PARITYtemp+3)& (0+255),b
 10211                           
 10212                           ; BSR set to: 5
 10213                           ;StringCommand.c: 81: UARTstring("\r\n\n");
 10214  010084  0EEF               	movlw	high (STR_243+65)
 10215  010086  0101               	movlb	1	; () banked
 10216  010088  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10217  01008A  0E6F               	movlw	low (STR_243+65)
 10218  01008C  0101               	movlb	1	; () banked
 10219  01008E  6F19               	movwf	UARTstring@data& (0+255),b
 10220  010090  EC36  F0B3         	call	_UARTstring	;wreg free
 10221                           
 10222                           ;StringCommand.c: 82: lowercase(Input);
 10223  010094  0101               	movlb	1	; () banked
 10224  010096  C189  F10F         	movff	Command@Input+1,lowercase@Input+1
 10225  01009A  0101               	movlb	1	; () banked
 10226  01009C  C188  F10E         	movff	Command@Input,lowercase@Input
 10227  0100A0  EC7F  F0B6         	call	_lowercase	;wreg free
 10228                           
 10229                           ;StringCommand.c: 83: RemoveSpaces(Input);
 10230  0100A4  0101               	movlb	1	; () banked
 10231  0100A6  C189  F11E         	movff	Command@Input+1,RemoveSpaces@This+1
 10232  0100AA  0101               	movlb	1	; () banked
 10233  0100AC  C188  F11D         	movff	Command@Input,RemoveSpaces@This
 10234  0100B0  ECE0  F0B2         	call	_RemoveSpaces	;wreg free
 10235                           
 10236                           ;StringCommand.c: 85: if(StringMatch(Input, ">"))
 10237  0100B4  0101               	movlb	1	; () banked
 10238  0100B6  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 10239  0100BA  0101               	movlb	1	; () banked
 10240  0100BC  C188  F10E         	movff	Command@Input,StringMatch@This
 10241  0100C0  0EF4               	movlw	high (STR_19+27)
 10242  0100C2  0101               	movlb	1	; () banked
 10243  0100C4  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 10244  0100C6  0EF7               	movlw	low (STR_19+27)
 10245  0100C8  0101               	movlb	1	; () banked
 10246  0100CA  6F10               	movwf	StringMatch@That& (0+255),b
 10247  0100CC  EC94  F0B8         	call	_StringMatch	;wreg free
 10248  0100D0  0900               	iorlw	0
 10249  0100D2  B4D8               	btfsc	status,2,c
 10250  0100D4  D002               	goto	l12394
 10251                           
 10252                           ;StringCommand.c: 86: {
 10253                           ;StringCommand.c: 87: return 0;
 10254  0100D6  0E00               	movlw	0
 10255  0100D8  0012               	return	
 10256  0100DA                     l12394:
 10257                           
 10258                           ;StringCommand.c: 89: else if (StartsWith(Input, "led"))
 10259  0100DA  0101               	movlb	1	; () banked
 10260  0100DC  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 10261  0100E0  0101               	movlb	1	; () banked
 10262  0100E2  C188  F10E         	movff	Command@Input,StartsWith@This
 10263  0100E6  0EFF               	movlw	high (STR_158+3)
 10264  0100E8  0101               	movlb	1	; () banked
 10265  0100EA  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 10266  0100EC  0E7E               	movlw	low (STR_158+3)
 10267  0100EE  0101               	movlb	1	; () banked
 10268  0100F0  6F10               	movwf	StartsWith@That& (0+255),b
 10269  0100F2  ECCA  F0B4         	call	_StartsWith	;wreg free
 10270  0100F6  0900               	iorlw	0
 10271  0100F8  B4D8               	btfsc	status,2,c
 10272  0100FA  D14F               	goto	l12458
 10273                           
 10274                           ;StringCommand.c: 90: {
 10275                           ;StringCommand.c: 91: if (!StringContains(Input, "?"))
 10276  0100FC  0101               	movlb	1	; () banked
 10277  0100FE  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 10278  010102  0101               	movlb	1	; () banked
 10279  010104  C188  F10E         	movff	Command@Input,StringContains@This
 10280  010108  0EFA               	movlw	high (STR_81+14)
 10281  01010A  0101               	movlb	1	; () banked
 10282  01010C  6F11               	movwf	(StringContains@That+1)& (0+255),b
 10283  01010E  0E3D               	movlw	low (STR_81+14)
 10284  010110  0101               	movlb	1	; () banked
 10285  010112  6F10               	movwf	StringContains@That& (0+255),b
 10286  010114  EC55  F0B8         	call	_StringContains	;wreg free
 10287  010118  0900               	iorlw	0
 10288  01011A  A4D8               	btfss	status,2,c
 10289  01011C  D0EC               	goto	l12448
 10290                           
 10291                           ;StringCommand.c: 92: {
 10292                           ;StringCommand.c: 93: if (StringMatch(Input, "led0"))
 10293  01011E  0101               	movlb	1	; () banked
 10294  010120  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 10295  010124  0101               	movlb	1	; () banked
 10296  010126  C188  F10E         	movff	Command@Input,StringMatch@This
 10297  01012A  0EFF               	movlw	high STR_38
 10298  01012C  0101               	movlb	1	; () banked
 10299  01012E  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 10300  010130  0EBE               	movlw	low STR_38
 10301  010132  0101               	movlb	1	; () banked
 10302  010134  6F10               	movwf	StringMatch@That& (0+255),b
 10303  010136  EC94  F0B8         	call	_StringMatch	;wreg free
 10304  01013A  0900               	iorlw	0
 10305  01013C  B4D8               	btfsc	status,2,c
 10306  01013E  D014               	goto	l12406
 10307                           
 10308                           ;StringCommand.c: 94: {
 10309                           ;StringCommand.c: 95: LATD ^= 0b00000010;
 10310  010140  0E02               	movlw	2
 10311  010142  1A8C               	xorwf	3980,f,c	;volatile
 10312                           
 10313                           ;StringCommand.c: 96: UARTstring("LED0 Toggled");
 10314  010144  0EFD               	movlw	high STR_39
 10315  010146  0101               	movlb	1	; () banked
 10316  010148  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10317  01014A  0E39               	movlw	low STR_39
 10318  01014C  0101               	movlb	1	; () banked
 10319  01014E  6F19               	movwf	UARTstring@data& (0+255),b
 10320  010150  EC36  F0B3         	call	_UARTstring	;wreg free
 10321                           
 10322                           ;StringCommand.c: 97: LCDdisplayFeedback("LED0 Toggled");
 10323  010154  0EFD               	movlw	high STR_39
 10324  010156  0101               	movlb	1	; () banked
 10325  010158  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10326  01015A  0E39               	movlw	low STR_39
 10327  01015C  0101               	movlb	1	; () banked
 10328  01015E  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10329  010160  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 10330                           
 10331                           ;StringCommand.c: 98: }
 10332  010164  EF62  F094         	goto	l590
 10333  010168                     l12406:
 10334                           
 10335                           ;StringCommand.c: 99: else if (StringMatch(Input, "led0=on"))
 10336  010168  0101               	movlb	1	; () banked
 10337  01016A  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 10338  01016E  0101               	movlb	1	; () banked
 10339  010170  C188  F10E         	movff	Command@Input,StringMatch@This
 10340  010174  0EFF               	movlw	high STR_41
 10341  010176  0101               	movlb	1	; () banked
 10342  010178  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 10343  01017A  0E30               	movlw	low STR_41
 10344  01017C  0101               	movlb	1	; () banked
 10345  01017E  6F10               	movwf	StringMatch@That& (0+255),b
 10346  010180  EC94  F0B8         	call	_StringMatch	;wreg free
 10347  010184  0900               	iorlw	0
 10348  010186  B4D8               	btfsc	status,2,c
 10349  010188  D013               	goto	l12414
 10350                           
 10351                           ;StringCommand.c: 100: {
 10352                           ;StringCommand.c: 101: LATD |= 0b00000010;
 10353  01018A  828C               	bsf	3980,1,c	;volatile
 10354                           
 10355                           ;StringCommand.c: 102: UARTstring("LED0 On");
 10356  01018C  0EFF               	movlw	high STR_42
 10357  01018E  0101               	movlb	1	; () banked
 10358  010190  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10359  010192  0E20               	movlw	low STR_42
 10360  010194  0101               	movlb	1	; () banked
 10361  010196  6F19               	movwf	UARTstring@data& (0+255),b
 10362  010198  EC36  F0B3         	call	_UARTstring	;wreg free
 10363                           
 10364                           ;StringCommand.c: 103: LCDdisplayFeedback("LED0 On");
 10365  01019C  0EFF               	movlw	high STR_42
 10366  01019E  0101               	movlb	1	; () banked
 10367  0101A0  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10368  0101A2  0E20               	movlw	low STR_42
 10369  0101A4  0101               	movlb	1	; () banked
 10370  0101A6  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10371  0101A8  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 10372                           
 10373                           ;StringCommand.c: 104: }
 10374  0101AC  EF62  F094         	goto	l590
 10375  0101B0                     l12414:
 10376                           
 10377                           ;StringCommand.c: 105: else if (StringMatch(Input, "led0=off"))
 10378  0101B0  0101               	movlb	1	; () banked
 10379  0101B2  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 10380  0101B6  0101               	movlb	1	; () banked
 10381  0101B8  C188  F10E         	movff	Command@Input,StringMatch@This
 10382  0101BC  0EFE               	movlw	high STR_44
 10383  0101BE  0101               	movlb	1	; () banked
 10384  0101C0  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 10385  0101C2  0EC1               	movlw	low STR_44
 10386  0101C4  0101               	movlb	1	; () banked
 10387  0101C6  6F10               	movwf	StringMatch@That& (0+255),b
 10388  0101C8  EC94  F0B8         	call	_StringMatch	;wreg free
 10389  0101CC  0900               	iorlw	0
 10390  0101CE  B4D8               	btfsc	status,2,c
 10391  0101D0  D013               	goto	l12422
 10392                           
 10393                           ;StringCommand.c: 106: {
 10394                           ;StringCommand.c: 107: LATD &= ~0b00000010;
 10395  0101D2  928C               	bcf	3980,1,c	;volatile
 10396                           
 10397                           ;StringCommand.c: 108: UARTstring("LED0 Off");
 10398  0101D4  0EFE               	movlw	high STR_45
 10399  0101D6  0101               	movlb	1	; () banked
 10400  0101D8  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10401  0101DA  0EAF               	movlw	low STR_45
 10402  0101DC  0101               	movlb	1	; () banked
 10403  0101DE  6F19               	movwf	UARTstring@data& (0+255),b
 10404  0101E0  EC36  F0B3         	call	_UARTstring	;wreg free
 10405                           
 10406                           ;StringCommand.c: 109: LCDdisplayFeedback("LED0 Off");
 10407  0101E4  0EFE               	movlw	high STR_45
 10408  0101E6  0101               	movlb	1	; () banked
 10409  0101E8  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10410  0101EA  0EAF               	movlw	low STR_45
 10411  0101EC  0101               	movlb	1	; () banked
 10412  0101EE  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10413  0101F0  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 10414                           
 10415                           ;StringCommand.c: 110: }
 10416  0101F4  EF62  F094         	goto	l590
 10417  0101F8                     l12422:
 10418                           
 10419                           ;StringCommand.c: 111: else if (StringMatch(Input, "led1"))
 10420  0101F8  0101               	movlb	1	; () banked
 10421  0101FA  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 10422  0101FE  0101               	movlb	1	; () banked
 10423  010200  C188  F10E         	movff	Command@Input,StringMatch@This
 10424  010204  0EFF               	movlw	high STR_47
 10425  010206  0101               	movlb	1	; () banked
 10426  010208  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 10427  01020A  0EC8               	movlw	low STR_47
 10428  01020C  0101               	movlb	1	; () banked
 10429  01020E  6F10               	movwf	StringMatch@That& (0+255),b
 10430  010210  EC94  F0B8         	call	_StringMatch	;wreg free
 10431  010214  0900               	iorlw	0
 10432  010216  B4D8               	btfsc	status,2,c
 10433  010218  D014               	goto	l12430
 10434                           
 10435                           ;StringCommand.c: 112: {
 10436                           ;StringCommand.c: 113: LATD ^= 0b00000100;
 10437  01021A  0E04               	movlw	4
 10438  01021C  1A8C               	xorwf	3980,f,c	;volatile
 10439                           
 10440                           ;StringCommand.c: 114: UARTstring("LED1 Toggled");
 10441  01021E  0EFD               	movlw	high STR_48
 10442  010220  0101               	movlb	1	; () banked
 10443  010222  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10444  010224  0E46               	movlw	low STR_48
 10445  010226  0101               	movlb	1	; () banked
 10446  010228  6F19               	movwf	UARTstring@data& (0+255),b
 10447  01022A  EC36  F0B3         	call	_UARTstring	;wreg free
 10448                           
 10449                           ;StringCommand.c: 115: LCDdisplayFeedback("LED1 Toggled");
 10450  01022E  0EFD               	movlw	high STR_48
 10451  010230  0101               	movlb	1	; () banked
 10452  010232  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10453  010234  0E46               	movlw	low STR_48
 10454  010236  0101               	movlb	1	; () banked
 10455  010238  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10456  01023A  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 10457                           
 10458                           ;StringCommand.c: 116: }
 10459  01023E  EF62  F094         	goto	l590
 10460  010242                     l12430:
 10461                           
 10462                           ;StringCommand.c: 117: else if (StringMatch(Input, "led1=on"))
 10463  010242  0101               	movlb	1	; () banked
 10464  010244  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 10465  010248  0101               	movlb	1	; () banked
 10466  01024A  C188  F10E         	movff	Command@Input,StringMatch@This
 10467  01024E  0EFF               	movlw	high STR_50
 10468  010250  0101               	movlb	1	; () banked
 10469  010252  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 10470  010254  0E38               	movlw	low STR_50
 10471  010256  0101               	movlb	1	; () banked
 10472  010258  6F10               	movwf	StringMatch@That& (0+255),b
 10473  01025A  EC94  F0B8         	call	_StringMatch	;wreg free
 10474  01025E  0900               	iorlw	0
 10475  010260  B4D8               	btfsc	status,2,c
 10476  010262  D013               	goto	l12438
 10477                           
 10478                           ;StringCommand.c: 118: {
 10479                           ;StringCommand.c: 119: LATD |= 0b00000100;
 10480  010264  848C               	bsf	3980,2,c	;volatile
 10481                           
 10482                           ;StringCommand.c: 120: UARTstring("LED1 On");
 10483  010266  0EFF               	movlw	high STR_51
 10484  010268  0101               	movlb	1	; () banked
 10485  01026A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10486  01026C  0E28               	movlw	low STR_51
 10487  01026E  0101               	movlb	1	; () banked
 10488  010270  6F19               	movwf	UARTstring@data& (0+255),b
 10489  010272  EC36  F0B3         	call	_UARTstring	;wreg free
 10490                           
 10491                           ;StringCommand.c: 121: LCDdisplayFeedback("LED1 On");
 10492  010276  0EFF               	movlw	high STR_51
 10493  010278  0101               	movlb	1	; () banked
 10494  01027A  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10495  01027C  0E28               	movlw	low STR_51
 10496  01027E  0101               	movlb	1	; () banked
 10497  010280  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10498  010282  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 10499                           
 10500                           ;StringCommand.c: 122: }
 10501  010286  EF62  F094         	goto	l590
 10502  01028A                     l12438:
 10503                           
 10504                           ;StringCommand.c: 123: else if (StringMatch(Input, "led1=off"))
 10505  01028A  0101               	movlb	1	; () banked
 10506  01028C  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 10507  010290  0101               	movlb	1	; () banked
 10508  010292  C188  F10E         	movff	Command@Input,StringMatch@This
 10509  010296  0EFE               	movlw	high STR_53
 10510  010298  0101               	movlb	1	; () banked
 10511  01029A  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 10512  01029C  0ECA               	movlw	low STR_53
 10513  01029E  0101               	movlb	1	; () banked
 10514  0102A0  6F10               	movwf	StringMatch@That& (0+255),b
 10515  0102A2  EC94  F0B8         	call	_StringMatch	;wreg free
 10516  0102A6  0900               	iorlw	0
 10517  0102A8  B4D8               	btfsc	status,2,c
 10518  0102AA  D013               	goto	l12446
 10519                           
 10520                           ;StringCommand.c: 124: {
 10521                           ;StringCommand.c: 125: LATD &= ~0b00000100;
 10522  0102AC  948C               	bcf	3980,2,c	;volatile
 10523                           
 10524                           ;StringCommand.c: 126: UARTstring("LED1 Off");
 10525  0102AE  0EFE               	movlw	high STR_54
 10526  0102B0  0101               	movlb	1	; () banked
 10527  0102B2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10528  0102B4  0EB8               	movlw	low STR_54
 10529  0102B6  0101               	movlb	1	; () banked
 10530  0102B8  6F19               	movwf	UARTstring@data& (0+255),b
 10531  0102BA  EC36  F0B3         	call	_UARTstring	;wreg free
 10532                           
 10533                           ;StringCommand.c: 127: LCDdisplayFeedback("LED1 Off");
 10534  0102BE  0EFE               	movlw	high STR_54
 10535  0102C0  0101               	movlb	1	; () banked
 10536  0102C2  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10537  0102C4  0EB8               	movlw	low STR_54
 10538  0102C6  0101               	movlb	1	; () banked
 10539  0102C8  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10540  0102CA  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 10541                           
 10542                           ;StringCommand.c: 128: }
 10543  0102CE  EF62  F094         	goto	l590
 10544  0102D2                     l12446:
 10545                           
 10546                           ;StringCommand.c: 129: else
 10547                           ;StringCommand.c: 130: {
 10548                           ;StringCommand.c: 131: UARTstring("LED What???");
 10549  0102D2  0EFA               	movlw	high (STR_171+4)
 10550  0102D4  0101               	movlb	1	; () banked
 10551  0102D6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10552  0102D8  0E63               	movlw	low (STR_171+4)
 10553  0102DA  0101               	movlb	1	; () banked
 10554  0102DC  6F19               	movwf	UARTstring@data& (0+255),b
 10555  0102DE  EC36  F0B3         	call	_UARTstring	;wreg free
 10556                           
 10557                           ;StringCommand.c: 132: LCDdisplayFeedback("LED What???");
 10558  0102E2  0EFA               	movlw	high (STR_171+4)
 10559  0102E4  0101               	movlb	1	; () banked
 10560  0102E6  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10561  0102E8  0E63               	movlw	low (STR_171+4)
 10562  0102EA  0101               	movlb	1	; () banked
 10563  0102EC  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10564  0102EE  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 10565  0102F2  EF62  F094         	goto	l590
 10566  0102F6                     l12448:
 10567                           
 10568                           ;StringCommand.c: 135: else
 10569                           ;StringCommand.c: 136: {
 10570                           ;StringCommand.c: 137: UARTstring("LED Help Menu\r\n\n");
 10571  0102F6  0EF9               	movlw	high STR_58
 10572  0102F8  0101               	movlb	1	; () banked
 10573  0102FA  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10574  0102FC  0E21               	movlw	low STR_58
 10575  0102FE  0101               	movlb	1	; () banked
 10576  010300  6F19               	movwf	UARTstring@data& (0+255),b
 10577  010302  EC36  F0B3         	call	_UARTstring	;wreg free
 10578                           
 10579                           ;StringCommand.c: 138: UARTstring("Devices:\r\n");
 10580  010306  0EFD               	movlw	high STR_59
 10581  010308  0101               	movlb	1	; () banked
 10582  01030A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10583  01030C  0ECF               	movlw	low STR_59
 10584  01030E  0101               	movlb	1	; () banked
 10585  010310  6F19               	movwf	UARTstring@data& (0+255),b
 10586  010312  EC36  F0B3         	call	_UARTstring	;wreg free
 10587                           
 10588                           ;StringCommand.c: 139: UARTstring("LED0\r\n");
 10589  010316  0EFF               	movlw	high STR_60
 10590  010318  0101               	movlb	1	; () banked
 10591  01031A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10592  01031C  0E6D               	movlw	low STR_60
 10593  01031E  0101               	movlb	1	; () banked
 10594  010320  6F19               	movwf	UARTstring@data& (0+255),b
 10595  010322  EC36  F0B3         	call	_UARTstring	;wreg free
 10596                           
 10597                           ;StringCommand.c: 140: UARTstring("LED1\r\n\n");
 10598  010326  0EFF               	movlw	high STR_61
 10599  010328  0101               	movlb	1	; () banked
 10600  01032A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10601  01032C  0E00               	movlw	low STR_61
 10602  01032E  0101               	movlb	1	; () banked
 10603  010330  6F19               	movwf	UARTstring@data& (0+255),b
 10604  010332  EC36  F0B3         	call	_UARTstring	;wreg free
 10605                           
 10606                           ;StringCommand.c: 141: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 10607  010336  0EEF               	movlw	high STR_62
 10608  010338  0101               	movlb	1	; () banked
 10609  01033A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10610  01033C  0E73               	movlw	low STR_62
 10611  01033E  0101               	movlb	1	; () banked
 10612  010340  6F19               	movwf	UARTstring@data& (0+255),b
 10613  010342  EC36  F0B3         	call	_UARTstring	;wreg free
 10614                           
 10615                           ;StringCommand.c: 142: UARTstring("i.e. LED1 = On\r\n");
 10616  010346  0EF9               	movlw	high STR_63
 10617  010348  0101               	movlb	1	; () banked
 10618  01034A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10619  01034C  0E54               	movlw	low STR_63
 10620  01034E  0101               	movlb	1	; () banked
 10621  010350  6F19               	movwf	UARTstring@data& (0+255),b
 10622  010352  EC36  F0B3         	call	_UARTstring	;wreg free
 10623                           
 10624                           ;StringCommand.c: 143: LCD_Scroll("LED Menu");
 10625  010356  0EFE               	movlw	high STR_64
 10626  010358  0101               	movlb	1	; () banked
 10627  01035A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10628  01035C  0EEE               	movlw	low STR_64
 10629  01035E  0101               	movlb	1	; () banked
 10630  010360  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 10631  010362  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 10632                           
 10633                           ;StringCommand.c: 144: LCD_Scroll("Devices:");
 10634  010366  0EFE               	movlw	high STR_65
 10635  010368  0101               	movlb	1	; () banked
 10636  01036A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10637  01036C  0E9D               	movlw	low STR_65
 10638  01036E  0101               	movlb	1	; () banked
 10639  010370  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 10640  010372  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 10641                           
 10642                           ;StringCommand.c: 145: LCD_Scroll("LED0");
 10643  010376  0EFF               	movlw	high STR_66
 10644  010378  0101               	movlb	1	; () banked
 10645  01037A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10646  01037C  0EB9               	movlw	low STR_66
 10647  01037E  0101               	movlb	1	; () banked
 10648  010380  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 10649  010382  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 10650                           
 10651                           ;StringCommand.c: 146: LCD_Scroll("LED1");
 10652  010386  0EFF               	movlw	high STR_67
 10653  010388  0101               	movlb	1	; () banked
 10654  01038A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10655  01038C  0EC3               	movlw	low STR_67
 10656  01038E  0101               	movlb	1	; () banked
 10657  010390  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 10658  010392  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 10659  010396  EF62  F094         	goto	l590
 10660  01039A                     l12458:
 10661                           
 10662                           ;StringCommand.c: 150: else if (StartsWith(Input, "livingroom"))
 10663  01039A  0101               	movlb	1	; () banked
 10664  01039C  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 10665  0103A0  0101               	movlb	1	; () banked
 10666  0103A2  C188  F10E         	movff	Command@Input,StartsWith@This
 10667  0103A6  0EFE               	movlw	high STR_68
 10668  0103A8  0101               	movlb	1	; () banked
 10669  0103AA  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 10670  0103AC  0E06               	movlw	low STR_68
 10671  0103AE  0101               	movlb	1	; () banked
 10672  0103B0  6F10               	movwf	StartsWith@That& (0+255),b
 10673  0103B2  ECCA  F0B4         	call	_StartsWith	;wreg free
 10674  0103B6  0900               	iorlw	0
 10675  0103B8  B4D8               	btfsc	status,2,c
 10676  0103BA  D1D5               	goto	l12510
 10677                           
 10678                           ;StringCommand.c: 151: {
 10679                           ;StringCommand.c: 152: if (!StringContains(Input, "?"))
 10680  0103BC  0101               	movlb	1	; () banked
 10681  0103BE  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 10682  0103C2  0101               	movlb	1	; () banked
 10683  0103C4  C188  F10E         	movff	Command@Input,StringContains@This
 10684  0103C8  0EFA               	movlw	high (STR_81+14)
 10685  0103CA  0101               	movlb	1	; () banked
 10686  0103CC  6F11               	movwf	(StringContains@That+1)& (0+255),b
 10687  0103CE  0E3D               	movlw	low (STR_81+14)
 10688  0103D0  0101               	movlb	1	; () banked
 10689  0103D2  6F10               	movwf	StringContains@That& (0+255),b
 10690  0103D4  EC55  F0B8         	call	_StringContains	;wreg free
 10691  0103D8  0900               	iorlw	0
 10692  0103DA  A4D8               	btfss	status,2,c
 10693  0103DC  D16A               	goto	l12500
 10694                           
 10695                           ;StringCommand.c: 153: {
 10696                           ;StringCommand.c: 154: if (StringMatch(Input, "livingroomlight=on") || StringMatch(Input
      +                          , "livingroomlight=off"))
 10697  0103DE  0101               	movlb	1	; () banked
 10698  0103E0  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 10699  0103E4  0101               	movlb	1	; () banked
 10700  0103E6  C188  F10E         	movff	Command@Input,StringMatch@This
 10701  0103EA  0EF8               	movlw	high STR_70
 10702  0103EC  0101               	movlb	1	; () banked
 10703  0103EE  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 10704  0103F0  0E13               	movlw	low STR_70
 10705  0103F2  0101               	movlb	1	; () banked
 10706  0103F4  6F10               	movwf	StringMatch@That& (0+255),b
 10707  0103F6  EC94  F0B8         	call	_StringMatch	;wreg free
 10708  0103FA  0900               	iorlw	0
 10709  0103FC  A4D8               	btfss	status,2,c
 10710  0103FE  D011               	goto	l611
 10711  010400  0101               	movlb	1	; () banked
 10712  010402  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 10713  010406  0101               	movlb	1	; () banked
 10714  010408  C188  F10E         	movff	Command@Input,StringMatch@This
 10715  01040C  0EF7               	movlw	high STR_71
 10716  01040E  0101               	movlb	1	; () banked
 10717  010410  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 10718  010412  0E9F               	movlw	low STR_71
 10719  010414  0101               	movlb	1	; () banked
 10720  010416  6F10               	movwf	StringMatch@That& (0+255),b
 10721  010418  EC94  F0B8         	call	_StringMatch	;wreg free
 10722  01041C  0900               	iorlw	0
 10723  01041E  B4D8               	btfsc	status,2,c
 10724  010420  D053               	goto	l12474
 10725  010422                     l611:
 10726                           
 10727                           ;StringCommand.c: 155: {
 10728                           ;StringCommand.c: 156: INTCONbits.GIE = 0;
 10729  010422  9EF2               	bcf	intcon,7,c	;volatile
 10730                           
 10731                           ;StringCommand.c: 157: Send_Config1(0b00000001, TXdataD);
 10732  010424  0EEE               	movlw	high _TXdataD
 10733  010426  0101               	movlb	1	; () banked
 10734  010428  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 10735  01042A  0EC1               	movlw	low _TXdataD
 10736  01042C  0101               	movlb	1	; () banked
 10737  01042E  6F19               	movwf	Send_Config1@data& (0+255),b
 10738  010430  0E01               	movlw	1
 10739  010432  EC4C  F0AE         	call	_Send_Config1
 10740                           
 10741                           ;StringCommand.c: 158: Send_Config1(0b00000001, TXdataD);
 10742  010436  0EEE               	movlw	high _TXdataD
 10743  010438  0101               	movlb	1	; () banked
 10744  01043A  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 10745  01043C  0EC1               	movlw	low _TXdataD
 10746  01043E  0101               	movlb	1	; () banked
 10747  010440  6F19               	movwf	Send_Config1@data& (0+255),b
 10748  010442  0E01               	movlw	1
 10749  010444  EC4C  F0AE         	call	_Send_Config1
 10750                           
 10751                           ;StringCommand.c: 159: Send_Config1(0b00000001, TXdataD);
 10752  010448  0EEE               	movlw	high _TXdataD
 10753  01044A  0101               	movlb	1	; () banked
 10754  01044C  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 10755  01044E  0EC1               	movlw	low _TXdataD
 10756  010450  0101               	movlb	1	; () banked
 10757  010452  6F19               	movwf	Send_Config1@data& (0+255),b
 10758  010454  0E01               	movlw	1
 10759  010456  EC4C  F0AE         	call	_Send_Config1
 10760                           
 10761                           ;StringCommand.c: 160: Send_Config1(0b00000001, TXdataD);
 10762  01045A  0EEE               	movlw	high _TXdataD
 10763  01045C  0101               	movlb	1	; () banked
 10764  01045E  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 10765  010460  0EC1               	movlw	low _TXdataD
 10766  010462  0101               	movlb	1	; () banked
 10767  010464  6F19               	movwf	Send_Config1@data& (0+255),b
 10768  010466  0E01               	movlw	1
 10769  010468  EC4C  F0AE         	call	_Send_Config1
 10770                           
 10771                           ;StringCommand.c: 161: Send_Config1(0b00000001, TXdataD);
 10772  01046C  0EEE               	movlw	high _TXdataD
 10773  01046E  0101               	movlb	1	; () banked
 10774  010470  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 10775  010472  0EC1               	movlw	low _TXdataD
 10776  010474  0101               	movlb	1	; () banked
 10777  010476  6F19               	movwf	Send_Config1@data& (0+255),b
 10778  010478  0E01               	movlw	1
 10779  01047A  EC4C  F0AE         	call	_Send_Config1
 10780                           
 10781                           ;StringCommand.c: 162: Send_Config1(0b00000001, TXdataD);
 10782  01047E  0EEE               	movlw	high _TXdataD
 10783  010480  0101               	movlb	1	; () banked
 10784  010482  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 10785  010484  0EC1               	movlw	low _TXdataD
 10786  010486  0101               	movlb	1	; () banked
 10787  010488  6F19               	movwf	Send_Config1@data& (0+255),b
 10788  01048A  0E01               	movlw	1
 10789  01048C  EC4C  F0AE         	call	_Send_Config1
 10790                           
 10791                           ;StringCommand.c: 163: Send_Config1(0b00000001, TXdataD);
 10792  010490  0EEE               	movlw	high _TXdataD
 10793  010492  0101               	movlb	1	; () banked
 10794  010494  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 10795  010496  0EC1               	movlw	low _TXdataD
 10796  010498  0101               	movlb	1	; () banked
 10797  01049A  6F19               	movwf	Send_Config1@data& (0+255),b
 10798  01049C  0E01               	movlw	1
 10799  01049E  EC4C  F0AE         	call	_Send_Config1
 10800                           
 10801                           ;StringCommand.c: 164: INTCONbits.GIE = 1;
 10802  0104A2  8EF2               	bsf	intcon,7,c	;volatile
 10803                           
 10804                           ;StringCommand.c: 165: UARTstring("Livingroom Light Toggled");
 10805  0104A4  0EF6               	movlw	high STR_72
 10806  0104A6  0101               	movlb	1	; () banked
 10807  0104A8  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10808  0104AA  0E3B               	movlw	low STR_72
 10809  0104AC  0101               	movlb	1	; () banked
 10810  0104AE  6F19               	movwf	UARTstring@data& (0+255),b
 10811  0104B0  EC36  F0B3         	call	_UARTstring	;wreg free
 10812                           
 10813                           ;StringCommand.c: 166: LCDdisplayFeedback("LVNG Rm Lt TGLD");
 10814  0104B4  0EFA               	movlw	high STR_73
 10815  0104B6  0101               	movlb	1	; () banked
 10816  0104B8  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10817  0104BA  0E9F               	movlw	low STR_73
 10818  0104BC  0101               	movlb	1	; () banked
 10819  0104BE  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10820  0104C0  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 10821                           
 10822                           ;StringCommand.c: 167: }
 10823  0104C4  EF62  F094         	goto	l590
 10824  0104C8                     l12474:
 10825                           
 10826                           ;StringCommand.c: 168: else if (StringMatch(Input, "livingroomfan=on"))
 10827  0104C8  0101               	movlb	1	; () banked
 10828  0104CA  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 10829  0104CE  0101               	movlb	1	; () banked
 10830  0104D0  C188  F10E         	movff	Command@Input,StringMatch@This
 10831  0104D4  0EF9               	movlw	high STR_74
 10832  0104D6  0101               	movlb	1	; () banked
 10833  0104D8  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 10834  0104DA  0E98               	movlw	low STR_74
 10835  0104DC  0101               	movlb	1	; () banked
 10836  0104DE  6F10               	movwf	StringMatch@That& (0+255),b
 10837  0104E0  EC94  F0B8         	call	_StringMatch	;wreg free
 10838  0104E4  0900               	iorlw	0
 10839  0104E6  B4D8               	btfsc	status,2,c
 10840  0104E8  D05C               	goto	l12486
 10841                           
 10842                           ;StringCommand.c: 169: {
 10843                           ;StringCommand.c: 170: INTCONbits.GIE = 0;
 10844  0104EA  9EF2               	bcf	intcon,7,c	;volatile
 10845                           
 10846                           ;StringCommand.c: 171: Send_Config2(0b00000001, fanON);
 10847  0104EC  0EEE               	movlw	high _fanON
 10848  0104EE  0101               	movlb	1	; () banked
 10849  0104F0  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 10850  0104F2  0EB1               	movlw	low _fanON
 10851  0104F4  0101               	movlb	1	; () banked
 10852  0104F6  6F19               	movwf	Send_Config2@data& (0+255),b
 10853  0104F8  0E01               	movlw	1
 10854  0104FA  EC0C  F0B7         	call	_Send_Config2
 10855                           
 10856                           ;StringCommand.c: 172: Send_Config2(0b00000001, fanON);
 10857  0104FE  0EEE               	movlw	high _fanON
 10858  010500  0101               	movlb	1	; () banked
 10859  010502  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 10860  010504  0EB1               	movlw	low _fanON
 10861  010506  0101               	movlb	1	; () banked
 10862  010508  6F19               	movwf	Send_Config2@data& (0+255),b
 10863  01050A  0E01               	movlw	1
 10864  01050C  EC0C  F0B7         	call	_Send_Config2
 10865                           
 10866                           ;StringCommand.c: 173: Send_Config2(0b00000001, fanON);
 10867  010510  0EEE               	movlw	high _fanON
 10868  010512  0101               	movlb	1	; () banked
 10869  010514  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 10870  010516  0EB1               	movlw	low _fanON
 10871  010518  0101               	movlb	1	; () banked
 10872  01051A  6F19               	movwf	Send_Config2@data& (0+255),b
 10873  01051C  0E01               	movlw	1
 10874  01051E  EC0C  F0B7         	call	_Send_Config2
 10875                           
 10876                           ;StringCommand.c: 174: Send_Config2(0b00000001, fanON);
 10877  010522  0EEE               	movlw	high _fanON
 10878  010524  0101               	movlb	1	; () banked
 10879  010526  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 10880  010528  0EB1               	movlw	low _fanON
 10881  01052A  0101               	movlb	1	; () banked
 10882  01052C  6F19               	movwf	Send_Config2@data& (0+255),b
 10883  01052E  0E01               	movlw	1
 10884  010530  EC0C  F0B7         	call	_Send_Config2
 10885                           
 10886                           ;StringCommand.c: 175: Send_Config2(0b00000001, fanON);
 10887  010534  0EEE               	movlw	high _fanON
 10888  010536  0101               	movlb	1	; () banked
 10889  010538  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 10890  01053A  0EB1               	movlw	low _fanON
 10891  01053C  0101               	movlb	1	; () banked
 10892  01053E  6F19               	movwf	Send_Config2@data& (0+255),b
 10893  010540  0E01               	movlw	1
 10894  010542  EC0C  F0B7         	call	_Send_Config2
 10895                           
 10896                           ;StringCommand.c: 176: Send_Config2(0b00000001, fanON);
 10897  010546  0EEE               	movlw	high _fanON
 10898  010548  0101               	movlb	1	; () banked
 10899  01054A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 10900  01054C  0EB1               	movlw	low _fanON
 10901  01054E  0101               	movlb	1	; () banked
 10902  010550  6F19               	movwf	Send_Config2@data& (0+255),b
 10903  010552  0E01               	movlw	1
 10904  010554  EC0C  F0B7         	call	_Send_Config2
 10905                           
 10906                           ;StringCommand.c: 177: Send_Config2(0b00000001, fanON);
 10907  010558  0EEE               	movlw	high _fanON
 10908  01055A  0101               	movlb	1	; () banked
 10909  01055C  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 10910  01055E  0EB1               	movlw	low _fanON
 10911  010560  0101               	movlb	1	; () banked
 10912  010562  6F19               	movwf	Send_Config2@data& (0+255),b
 10913  010564  0E01               	movlw	1
 10914  010566  EC0C  F0B7         	call	_Send_Config2
 10915                           
 10916                           ;StringCommand.c: 178: Send_Config2(0b00000001, fanON);
 10917  01056A  0EEE               	movlw	high _fanON
 10918  01056C  0101               	movlb	1	; () banked
 10919  01056E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 10920  010570  0EB1               	movlw	low _fanON
 10921  010572  0101               	movlb	1	; () banked
 10922  010574  6F19               	movwf	Send_Config2@data& (0+255),b
 10923  010576  0E01               	movlw	1
 10924  010578  EC0C  F0B7         	call	_Send_Config2
 10925                           
 10926                           ;StringCommand.c: 179: INTCONbits.GIE = 1;
 10927  01057C  8EF2               	bsf	intcon,7,c	;volatile
 10928                           
 10929                           ;StringCommand.c: 180: UARTstring("Livingroom Fan On");
 10930  01057E  0EF8               	movlw	high STR_75
 10931  010580  0101               	movlb	1	; () banked
 10932  010582  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 10933  010584  0EB8               	movlw	low STR_75
 10934  010586  0101               	movlb	1	; () banked
 10935  010588  6F19               	movwf	UARTstring@data& (0+255),b
 10936  01058A  EC36  F0B3         	call	_UARTstring	;wreg free
 10937                           
 10938                           ;StringCommand.c: 181: LCDdisplayFeedback("LVNG Rm Lt On");
 10939  01058E  0EFC               	movlw	high STR_76
 10940  010590  0101               	movlb	1	; () banked
 10941  010592  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10942  010594  0E97               	movlw	low STR_76
 10943  010596  0101               	movlb	1	; () banked
 10944  010598  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10945  01059A  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 10946                           
 10947                           ;StringCommand.c: 182: }
 10948  01059E  EF62  F094         	goto	l590
 10949  0105A2                     l12486:
 10950                           
 10951                           ;StringCommand.c: 183: else if (StringMatch(Input, "livingroomfan=off"))
 10952  0105A2  0101               	movlb	1	; () banked
 10953  0105A4  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 10954  0105A8  0101               	movlb	1	; () banked
 10955  0105AA  C188  F10E         	movff	Command@Input,StringMatch@This
 10956  0105AE  0EF8               	movlw	high STR_77
 10957  0105B0  0101               	movlb	1	; () banked
 10958  0105B2  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 10959  0105B4  0E82               	movlw	low STR_77
 10960  0105B6  0101               	movlb	1	; () banked
 10961  0105B8  6F10               	movwf	StringMatch@That& (0+255),b
 10962  0105BA  EC94  F0B8         	call	_StringMatch	;wreg free
 10963  0105BE  0900               	iorlw	0
 10964  0105C0  B4D8               	btfsc	status,2,c
 10965  0105C2  D065               	goto	l12498
 10966                           
 10967                           ;StringCommand.c: 184: {
 10968                           ;StringCommand.c: 185: INTCONbits.GIE = 0;
 10969  0105C4  9EF2               	bcf	intcon,7,c	;volatile
 10970                           
 10971                           ;StringCommand.c: 186: Send_Config2(0b00000001, fanOFF);
 10972  0105C6  0EEE               	movlw	high _fanOFF
 10973  0105C8  0101               	movlb	1	; () banked
 10974  0105CA  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 10975  0105CC  0EA1               	movlw	low _fanOFF
 10976  0105CE  0101               	movlb	1	; () banked
 10977  0105D0  6F19               	movwf	Send_Config2@data& (0+255),b
 10978  0105D2  0E01               	movlw	1
 10979  0105D4  EC0C  F0B7         	call	_Send_Config2
 10980                           
 10981                           ;StringCommand.c: 187: Send_Config2(0b00000001, fanOFF);
 10982  0105D8  0EEE               	movlw	high _fanOFF
 10983  0105DA  0101               	movlb	1	; () banked
 10984  0105DC  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 10985  0105DE  0EA1               	movlw	low _fanOFF
 10986  0105E0  0101               	movlb	1	; () banked
 10987  0105E2  6F19               	movwf	Send_Config2@data& (0+255),b
 10988  0105E4  0E01               	movlw	1
 10989  0105E6  EC0C  F0B7         	call	_Send_Config2
 10990                           
 10991                           ;StringCommand.c: 188: Send_Config2(0b00000001, fanOFF);
 10992  0105EA  0EEE               	movlw	high _fanOFF
 10993  0105EC  0101               	movlb	1	; () banked
 10994  0105EE  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 10995  0105F0  0EA1               	movlw	low _fanOFF
 10996  0105F2  0101               	movlb	1	; () banked
 10997  0105F4  6F19               	movwf	Send_Config2@data& (0+255),b
 10998  0105F6  0E01               	movlw	1
 10999  0105F8  EC0C  F0B7         	call	_Send_Config2
 11000                           
 11001                           ;StringCommand.c: 189: Send_Config2(0b00000001, fanOFF);
 11002  0105FC  0EEE               	movlw	high _fanOFF
 11003  0105FE  0101               	movlb	1	; () banked
 11004  010600  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11005  010602  0EA1               	movlw	low _fanOFF
 11006  010604  0101               	movlb	1	; () banked
 11007  010606  6F19               	movwf	Send_Config2@data& (0+255),b
 11008  010608  0E01               	movlw	1
 11009  01060A  EC0C  F0B7         	call	_Send_Config2
 11010                           
 11011                           ;StringCommand.c: 190: Send_Config2(0b00000001, fanOFF);
 11012  01060E  0EEE               	movlw	high _fanOFF
 11013  010610  0101               	movlb	1	; () banked
 11014  010612  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11015  010614  0EA1               	movlw	low _fanOFF
 11016  010616  0101               	movlb	1	; () banked
 11017  010618  6F19               	movwf	Send_Config2@data& (0+255),b
 11018  01061A  0E01               	movlw	1
 11019  01061C  EC0C  F0B7         	call	_Send_Config2
 11020                           
 11021                           ;StringCommand.c: 191: Send_Config2(0b00000001, fanOFF);
 11022  010620  0EEE               	movlw	high _fanOFF
 11023  010622  0101               	movlb	1	; () banked
 11024  010624  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11025  010626  0EA1               	movlw	low _fanOFF
 11026  010628  0101               	movlb	1	; () banked
 11027  01062A  6F19               	movwf	Send_Config2@data& (0+255),b
 11028  01062C  0E01               	movlw	1
 11029  01062E  EC0C  F0B7         	call	_Send_Config2
 11030                           
 11031                           ;StringCommand.c: 192: Send_Config2(0b00000001, fanOFF);
 11032  010632  0EEE               	movlw	high _fanOFF
 11033  010634  0101               	movlb	1	; () banked
 11034  010636  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11035  010638  0EA1               	movlw	low _fanOFF
 11036  01063A  0101               	movlb	1	; () banked
 11037  01063C  6F19               	movwf	Send_Config2@data& (0+255),b
 11038  01063E  0E01               	movlw	1
 11039  010640  EC0C  F0B7         	call	_Send_Config2
 11040                           
 11041                           ;StringCommand.c: 193: Send_Config2(0b00000001, fanOFF);
 11042  010644  0EEE               	movlw	high _fanOFF
 11043  010646  0101               	movlb	1	; () banked
 11044  010648  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11045  01064A  0EA1               	movlw	low _fanOFF
 11046  01064C  0101               	movlb	1	; () banked
 11047  01064E  6F19               	movwf	Send_Config2@data& (0+255),b
 11048  010650  0E01               	movlw	1
 11049  010652  EC0C  F0B7         	call	_Send_Config2
 11050                           
 11051                           ;StringCommand.c: 194: Send_Config2(0b00000001, fanOFF);
 11052  010656  0EEE               	movlw	high _fanOFF
 11053  010658  0101               	movlb	1	; () banked
 11054  01065A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11055  01065C  0EA1               	movlw	low _fanOFF
 11056  01065E  0101               	movlb	1	; () banked
 11057  010660  6F19               	movwf	Send_Config2@data& (0+255),b
 11058  010662  0E01               	movlw	1
 11059  010664  EC0C  F0B7         	call	_Send_Config2
 11060                           
 11061                           ;StringCommand.c: 195: INTCONbits.GIE = 1;
 11062  010668  8EF2               	bsf	intcon,7,c	;volatile
 11063                           
 11064                           ;StringCommand.c: 196: UARTstring("Livingroom Fan Off");
 11065  01066A  0EF7               	movlw	high STR_78
 11066  01066C  0101               	movlb	1	; () banked
 11067  01066E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11068  010670  0EED               	movlw	low STR_78
 11069  010672  0101               	movlb	1	; () banked
 11070  010674  6F19               	movwf	UARTstring@data& (0+255),b
 11071  010676  EC36  F0B3         	call	_UARTstring	;wreg free
 11072                           
 11073                           ;StringCommand.c: 197: LCDdisplayFeedback("LVNG Rm Lt Off");
 11074  01067A  0EFB               	movlw	high STR_79
 11075  01067C  0101               	movlb	1	; () banked
 11076  01067E  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11077  010680  0ECA               	movlw	low STR_79
 11078  010682  0101               	movlb	1	; () banked
 11079  010684  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11080  010686  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 11081                           
 11082                           ;StringCommand.c: 198: }
 11083  01068A  EF62  F094         	goto	l590
 11084  01068E                     l12498:
 11085                           
 11086                           ;StringCommand.c: 199: else
 11087                           ;StringCommand.c: 200: {
 11088                           ;StringCommand.c: 201: UARTstring("Livingroom Task???");
 11089  01068E  0EF7               	movlw	high STR_80
 11090  010690  0101               	movlb	1	; () banked
 11091  010692  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11092  010694  0EC7               	movlw	low STR_80
 11093  010696  0101               	movlb	1	; () banked
 11094  010698  6F19               	movwf	UARTstring@data& (0+255),b
 11095  01069A  EC36  F0B3         	call	_UARTstring	;wreg free
 11096                           
 11097                           ;StringCommand.c: 202: LCDdisplayFeedback("LVNG Rm Task???");
 11098  01069E  0EFA               	movlw	high STR_81
 11099  0106A0  0101               	movlb	1	; () banked
 11100  0106A2  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11101  0106A4  0E2F               	movlw	low STR_81
 11102  0106A6  0101               	movlb	1	; () banked
 11103  0106A8  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11104  0106AA  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 11105  0106AE  EF62  F094         	goto	l590
 11106  0106B2                     l12500:
 11107                           
 11108                           ;StringCommand.c: 205: else
 11109                           ;StringCommand.c: 206: {
 11110                           ;StringCommand.c: 207: UARTstring("Livingroom Help Menu\r\n\n");
 11111  0106B2  0EF6               	movlw	high STR_82
 11112  0106B4  0101               	movlb	1	; () banked
 11113  0106B6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11114  0106B8  0E54               	movlw	low STR_82
 11115  0106BA  0101               	movlb	1	; () banked
 11116  0106BC  6F19               	movwf	UARTstring@data& (0+255),b
 11117  0106BE  EC36  F0B3         	call	_UARTstring	;wreg free
 11118                           
 11119                           ;StringCommand.c: 208: UARTstring("Devices:\r\n");
 11120  0106C2  0EFD               	movlw	high STR_59
 11121  0106C4  0101               	movlb	1	; () banked
 11122  0106C6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11123  0106C8  0ECF               	movlw	low STR_59
 11124  0106CA  0101               	movlb	1	; () banked
 11125  0106CC  6F19               	movwf	UARTstring@data& (0+255),b
 11126  0106CE  EC36  F0B3         	call	_UARTstring	;wreg free
 11127                           
 11128                           ;StringCommand.c: 209: UARTstring("light\r\n");
 11129  0106D2  0EFF               	movlw	high STR_84
 11130  0106D4  0101               	movlb	1	; () banked
 11131  0106D6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11132  0106D8  0E08               	movlw	low STR_84
 11133  0106DA  0101               	movlb	1	; () banked
 11134  0106DC  6F19               	movwf	UARTstring@data& (0+255),b
 11135  0106DE  EC36  F0B3         	call	_UARTstring	;wreg free
 11136                           
 11137                           ;StringCommand.c: 210: UARTstring("fan\r\n\n");
 11138  0106E2  0EFF               	movlw	high STR_85
 11139  0106E4  0101               	movlb	1	; () banked
 11140  0106E6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11141  0106E8  0E5F               	movlw	low STR_85
 11142  0106EA  0101               	movlb	1	; () banked
 11143  0106EC  6F19               	movwf	UARTstring@data& (0+255),b
 11144  0106EE  EC36  F0B3         	call	_UARTstring	;wreg free
 11145                           
 11146                           ;StringCommand.c: 211: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 11147  0106F2  0EEF               	movlw	high STR_62
 11148  0106F4  0101               	movlb	1	; () banked
 11149  0106F6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11150  0106F8  0E73               	movlw	low STR_62
 11151  0106FA  0101               	movlb	1	; () banked
 11152  0106FC  6F19               	movwf	UARTstring@data& (0+255),b
 11153  0106FE  EC36  F0B3         	call	_UARTstring	;wreg free
 11154                           
 11155                           ;StringCommand.c: 212: UARTstring("i.e. Livingroom fan = On\r\n");
 11156  010702  0EF5               	movlw	high STR_87
 11157  010704  0101               	movlb	1	; () banked
 11158  010706  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11159  010708  0EA0               	movlw	low STR_87
 11160  01070A  0101               	movlb	1	; () banked
 11161  01070C  6F19               	movwf	UARTstring@data& (0+255),b
 11162  01070E  EC36  F0B3         	call	_UARTstring	;wreg free
 11163                           
 11164                           ;StringCommand.c: 213: LCDdisplayFeedback("LVNG Rm Lt help");
 11165  010712  0EFB               	movlw	high STR_88
 11166  010714  0101               	movlb	1	; () banked
 11167  010716  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11168  010718  0E4F               	movlw	low STR_88
 11169  01071A  0101               	movlb	1	; () banked
 11170  01071C  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11171  01071E  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 11172                           
 11173                           ;StringCommand.c: 214: LCD_Scroll("LVNGroom Menu");
 11174  010722  0EFC               	movlw	high STR_89
 11175  010724  0101               	movlb	1	; () banked
 11176  010726  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11177  010728  0ECF               	movlw	low STR_89
 11178  01072A  0101               	movlb	1	; () banked
 11179  01072C  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 11180  01072E  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 11181                           
 11182                           ;StringCommand.c: 215: LCD_Scroll("Devices:");
 11183  010732  0EFE               	movlw	high STR_65
 11184  010734  0101               	movlb	1	; () banked
 11185  010736  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11186  010738  0E9D               	movlw	low STR_65
 11187  01073A  0101               	movlb	1	; () banked
 11188  01073C  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 11189  01073E  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 11190                           
 11191                           ;StringCommand.c: 216: LCD_Scroll("Light");
 11192  010742  0EFF               	movlw	high STR_91
 11193  010744  0101               	movlb	1	; () banked
 11194  010746  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11195  010748  0EA8               	movlw	low STR_91
 11196  01074A  0101               	movlb	1	; () banked
 11197  01074C  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 11198  01074E  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 11199                           
 11200                           ;StringCommand.c: 217: LCD_Scroll("Fan");
 11201  010752  0EFF               	movlw	high STR_92
 11202  010754  0101               	movlb	1	; () banked
 11203  010756  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11204  010758  0EED               	movlw	low STR_92
 11205  01075A  0101               	movlb	1	; () banked
 11206  01075C  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 11207  01075E  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 11208  010762  EF62  F094         	goto	l590
 11209  010766                     l12510:
 11210                           
 11211                           ;StringCommand.c: 221: else if (StartsWith(Input, "bedroom"))
 11212  010766  0101               	movlb	1	; () banked
 11213  010768  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 11214  01076C  0101               	movlb	1	; () banked
 11215  01076E  C188  F10E         	movff	Command@Input,StartsWith@This
 11216  010772  0EFF               	movlw	high STR_93
 11217  010774  0101               	movlb	1	; () banked
 11218  010776  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 11219  010778  0E18               	movlw	low STR_93
 11220  01077A  0101               	movlb	1	; () banked
 11221  01077C  6F10               	movwf	StartsWith@That& (0+255),b
 11222  01077E  ECCA  F0B4         	call	_StartsWith	;wreg free
 11223  010782  0900               	iorlw	0
 11224  010784  B4D8               	btfsc	status,2,c
 11225  010786  D2E2               	goto	l12592
 11226                           
 11227                           ;StringCommand.c: 222: {
 11228                           ;StringCommand.c: 223: if (!StringContains(Input, "?"))
 11229  010788  0101               	movlb	1	; () banked
 11230  01078A  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 11231  01078E  0101               	movlb	1	; () banked
 11232  010790  C188  F10E         	movff	Command@Input,StringContains@This
 11233  010794  0EFA               	movlw	high (STR_81+14)
 11234  010796  0101               	movlb	1	; () banked
 11235  010798  6F11               	movwf	(StringContains@That+1)& (0+255),b
 11236  01079A  0E3D               	movlw	low (STR_81+14)
 11237  01079C  0101               	movlb	1	; () banked
 11238  01079E  6F10               	movwf	StringContains@That& (0+255),b
 11239  0107A0  EC55  F0B8         	call	_StringContains	;wreg free
 11240  0107A4  0900               	iorlw	0
 11241  0107A6  A4D8               	btfss	status,2,c
 11242  0107A8  D267               	goto	l12580
 11243                           
 11244                           ;StringCommand.c: 224: {
 11245                           ;StringCommand.c: 225: if (StringContains(Input, "light") || StringContains(Input, "fan"
      +                          ))
 11246  0107AA  0101               	movlb	1	; () banked
 11247  0107AC  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 11248  0107B0  0101               	movlb	1	; () banked
 11249  0107B2  C188  F10E         	movff	Command@Input,StringContains@This
 11250  0107B6  0EFF               	movlw	high STR_95
 11251  0107B8  0101               	movlb	1	; () banked
 11252  0107BA  6F11               	movwf	(StringContains@That+1)& (0+255),b
 11253  0107BC  0EAE               	movlw	low STR_95
 11254  0107BE  0101               	movlb	1	; () banked
 11255  0107C0  6F10               	movwf	StringContains@That& (0+255),b
 11256  0107C2  EC55  F0B8         	call	_StringContains	;wreg free
 11257  0107C6  0900               	iorlw	0
 11258  0107C8  A4D8               	btfss	status,2,c
 11259  0107CA  D011               	goto	l12518
 11260  0107CC  0101               	movlb	1	; () banked
 11261  0107CE  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 11262  0107D2  0101               	movlb	1	; () banked
 11263  0107D4  C188  F10E         	movff	Command@Input,StringContains@This
 11264  0107D8  0EFF               	movlw	high STR_96
 11265  0107DA  0101               	movlb	1	; () banked
 11266  0107DC  6F11               	movwf	(StringContains@That+1)& (0+255),b
 11267  0107DE  0EF1               	movlw	low STR_96
 11268  0107E0  0101               	movlb	1	; () banked
 11269  0107E2  6F10               	movwf	StringContains@That& (0+255),b
 11270  0107E4  EC55  F0B8         	call	_StringContains	;wreg free
 11271  0107E8  0900               	iorlw	0
 11272  0107EA  B4D8               	btfsc	status,2,c
 11273  0107EC  D233               	goto	l12578
 11274  0107EE                     l12518:
 11275                           
 11276                           ;StringCommand.c: 226: {
 11277                           ;StringCommand.c: 227: if (StringMatch(Input, "bedroomlight=on") || StringMatch(Input, "
      +                          bedroomlight=off"))
 11278  0107EE  0101               	movlb	1	; () banked
 11279  0107F0  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 11280  0107F4  0101               	movlb	1	; () banked
 11281  0107F6  C188  F10E         	movff	Command@Input,StringMatch@This
 11282  0107FA  0EFB               	movlw	high STR_97
 11283  0107FC  0101               	movlb	1	; () banked
 11284  0107FE  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 11285  010800  0E2F               	movlw	low STR_97
 11286  010802  0101               	movlb	1	; () banked
 11287  010804  6F10               	movwf	StringMatch@That& (0+255),b
 11288  010806  EC94  F0B8         	call	_StringMatch	;wreg free
 11289  01080A  0900               	iorlw	0
 11290  01080C  A4D8               	btfss	status,2,c
 11291  01080E  D011               	goto	l626
 11292  010810  0101               	movlb	1	; () banked
 11293  010812  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 11294  010816  0101               	movlb	1	; () banked
 11295  010818  C188  F10E         	movff	Command@Input,StringMatch@This
 11296  01081C  0EF9               	movlw	high STR_98
 11297  01081E  0101               	movlb	1	; () banked
 11298  010820  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 11299  010822  0E76               	movlw	low STR_98
 11300  010824  0101               	movlb	1	; () banked
 11301  010826  6F10               	movwf	StringMatch@That& (0+255),b
 11302  010828  EC94  F0B8         	call	_StringMatch	;wreg free
 11303  01082C  0900               	iorlw	0
 11304  01082E  B4D8               	btfsc	status,2,c
 11305  010830  D053               	goto	l12530
 11306  010832                     l626:
 11307                           
 11308                           ;StringCommand.c: 228: {
 11309                           ;StringCommand.c: 229: INTCONbits.GIE = 0;
 11310  010832  9EF2               	bcf	intcon,7,c	;volatile
 11311                           
 11312                           ;StringCommand.c: 230: Send_Config1(0b00000001, TXdataE);
 11313  010834  0EEE               	movlw	high _TXdataE
 11314  010836  0101               	movlb	1	; () banked
 11315  010838  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 11316  01083A  0ECD               	movlw	low _TXdataE
 11317  01083C  0101               	movlb	1	; () banked
 11318  01083E  6F19               	movwf	Send_Config1@data& (0+255),b
 11319  010840  0E01               	movlw	1
 11320  010842  EC4C  F0AE         	call	_Send_Config1
 11321                           
 11322                           ;StringCommand.c: 231: Send_Config1(0b00000001, TXdataE);
 11323  010846  0EEE               	movlw	high _TXdataE
 11324  010848  0101               	movlb	1	; () banked
 11325  01084A  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 11326  01084C  0ECD               	movlw	low _TXdataE
 11327  01084E  0101               	movlb	1	; () banked
 11328  010850  6F19               	movwf	Send_Config1@data& (0+255),b
 11329  010852  0E01               	movlw	1
 11330  010854  EC4C  F0AE         	call	_Send_Config1
 11331                           
 11332                           ;StringCommand.c: 232: Send_Config1(0b00000001, TXdataE);
 11333  010858  0EEE               	movlw	high _TXdataE
 11334  01085A  0101               	movlb	1	; () banked
 11335  01085C  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 11336  01085E  0ECD               	movlw	low _TXdataE
 11337  010860  0101               	movlb	1	; () banked
 11338  010862  6F19               	movwf	Send_Config1@data& (0+255),b
 11339  010864  0E01               	movlw	1
 11340  010866  EC4C  F0AE         	call	_Send_Config1
 11341                           
 11342                           ;StringCommand.c: 233: Send_Config1(0b00000001, TXdataE);
 11343  01086A  0EEE               	movlw	high _TXdataE
 11344  01086C  0101               	movlb	1	; () banked
 11345  01086E  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 11346  010870  0ECD               	movlw	low _TXdataE
 11347  010872  0101               	movlb	1	; () banked
 11348  010874  6F19               	movwf	Send_Config1@data& (0+255),b
 11349  010876  0E01               	movlw	1
 11350  010878  EC4C  F0AE         	call	_Send_Config1
 11351                           
 11352                           ;StringCommand.c: 234: Send_Config1(0b00000001, TXdataE);
 11353  01087C  0EEE               	movlw	high _TXdataE
 11354  01087E  0101               	movlb	1	; () banked
 11355  010880  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 11356  010882  0ECD               	movlw	low _TXdataE
 11357  010884  0101               	movlb	1	; () banked
 11358  010886  6F19               	movwf	Send_Config1@data& (0+255),b
 11359  010888  0E01               	movlw	1
 11360  01088A  EC4C  F0AE         	call	_Send_Config1
 11361                           
 11362                           ;StringCommand.c: 235: Send_Config1(0b00000001, TXdataE);
 11363  01088E  0EEE               	movlw	high _TXdataE
 11364  010890  0101               	movlb	1	; () banked
 11365  010892  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 11366  010894  0ECD               	movlw	low _TXdataE
 11367  010896  0101               	movlb	1	; () banked
 11368  010898  6F19               	movwf	Send_Config1@data& (0+255),b
 11369  01089A  0E01               	movlw	1
 11370  01089C  EC4C  F0AE         	call	_Send_Config1
 11371                           
 11372                           ;StringCommand.c: 236: Send_Config1(0b00000001, TXdataE);
 11373  0108A0  0EEE               	movlw	high _TXdataE
 11374  0108A2  0101               	movlb	1	; () banked
 11375  0108A4  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 11376  0108A6  0ECD               	movlw	low _TXdataE
 11377  0108A8  0101               	movlb	1	; () banked
 11378  0108AA  6F19               	movwf	Send_Config1@data& (0+255),b
 11379  0108AC  0E01               	movlw	1
 11380  0108AE  EC4C  F0AE         	call	_Send_Config1
 11381                           
 11382                           ;StringCommand.c: 237: INTCONbits.GIE = 1;
 11383  0108B2  8EF2               	bsf	intcon,7,c	;volatile
 11384                           
 11385                           ;StringCommand.c: 238: UARTstring("Bedroom Light Toggled");
 11386  0108B4  0EF7               	movlw	high STR_99
 11387  0108B6  0101               	movlb	1	; () banked
 11388  0108B8  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11389  0108BA  0E0D               	movlw	low STR_99
 11390  0108BC  0101               	movlb	1	; () banked
 11391  0108BE  6F19               	movwf	UARTstring@data& (0+255),b
 11392  0108C0  EC36  F0B3         	call	_UARTstring	;wreg free
 11393                           
 11394                           ;StringCommand.c: 239: LCDdisplayFeedback("Bedroom Lt TGLD");
 11395  0108C4  0EFA               	movlw	high STR_100
 11396  0108C6  0101               	movlb	1	; () banked
 11397  0108C8  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11398  0108CA  0EAF               	movlw	low STR_100
 11399  0108CC  0101               	movlb	1	; () banked
 11400  0108CE  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11401  0108D0  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 11402                           
 11403                           ;StringCommand.c: 240: }
 11404  0108D4  EF62  F094         	goto	l590
 11405  0108D8                     l12530:
 11406                           
 11407                           ;StringCommand.c: 241: else if (StringMatch(Input, "bedroomfan=on"))
 11408  0108D8  0101               	movlb	1	; () banked
 11409  0108DA  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 11410  0108DE  0101               	movlb	1	; () banked
 11411  0108E0  C188  F10E         	movff	Command@Input,StringMatch@This
 11412  0108E4  0EFC               	movlw	high STR_101
 11413  0108E6  0101               	movlb	1	; () banked
 11414  0108E8  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 11415  0108EA  0EB3               	movlw	low STR_101
 11416  0108EC  0101               	movlb	1	; () banked
 11417  0108EE  6F10               	movwf	StringMatch@That& (0+255),b
 11418  0108F0  EC94  F0B8         	call	_StringMatch	;wreg free
 11419  0108F4  0900               	iorlw	0
 11420  0108F6  B4D8               	btfsc	status,2,c
 11421  0108F8  D05C               	goto	l12542
 11422                           
 11423                           ;StringCommand.c: 242: {
 11424                           ;StringCommand.c: 243: INTCONbits.GIE = 0;
 11425  0108FA  9EF2               	bcf	intcon,7,c	;volatile
 11426                           
 11427                           ;StringCommand.c: 244: Send_Config2(0b00000001, AuxON);
 11428  0108FC  0EEE               	movlw	high _AuxON
 11429  0108FE  0101               	movlb	1	; () banked
 11430  010900  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11431  010902  0E51               	movlw	low _AuxON
 11432  010904  0101               	movlb	1	; () banked
 11433  010906  6F19               	movwf	Send_Config2@data& (0+255),b
 11434  010908  0E01               	movlw	1
 11435  01090A  EC0C  F0B7         	call	_Send_Config2
 11436                           
 11437                           ;StringCommand.c: 245: Send_Config2(0b00000001, AuxON);
 11438  01090E  0EEE               	movlw	high _AuxON
 11439  010910  0101               	movlb	1	; () banked
 11440  010912  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11441  010914  0E51               	movlw	low _AuxON
 11442  010916  0101               	movlb	1	; () banked
 11443  010918  6F19               	movwf	Send_Config2@data& (0+255),b
 11444  01091A  0E01               	movlw	1
 11445  01091C  EC0C  F0B7         	call	_Send_Config2
 11446                           
 11447                           ;StringCommand.c: 246: Send_Config2(0b00000001, AuxON);
 11448  010920  0EEE               	movlw	high _AuxON
 11449  010922  0101               	movlb	1	; () banked
 11450  010924  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11451  010926  0E51               	movlw	low _AuxON
 11452  010928  0101               	movlb	1	; () banked
 11453  01092A  6F19               	movwf	Send_Config2@data& (0+255),b
 11454  01092C  0E01               	movlw	1
 11455  01092E  EC0C  F0B7         	call	_Send_Config2
 11456                           
 11457                           ;StringCommand.c: 247: Send_Config2(0b00000001, AuxON);
 11458  010932  0EEE               	movlw	high _AuxON
 11459  010934  0101               	movlb	1	; () banked
 11460  010936  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11461  010938  0E51               	movlw	low _AuxON
 11462  01093A  0101               	movlb	1	; () banked
 11463  01093C  6F19               	movwf	Send_Config2@data& (0+255),b
 11464  01093E  0E01               	movlw	1
 11465  010940  EC0C  F0B7         	call	_Send_Config2
 11466                           
 11467                           ;StringCommand.c: 248: Send_Config2(0b00000001, AuxON);
 11468  010944  0EEE               	movlw	high _AuxON
 11469  010946  0101               	movlb	1	; () banked
 11470  010948  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11471  01094A  0E51               	movlw	low _AuxON
 11472  01094C  0101               	movlb	1	; () banked
 11473  01094E  6F19               	movwf	Send_Config2@data& (0+255),b
 11474  010950  0E01               	movlw	1
 11475  010952  EC0C  F0B7         	call	_Send_Config2
 11476                           
 11477                           ;StringCommand.c: 249: Send_Config2(0b00000001, AuxON);
 11478  010956  0EEE               	movlw	high _AuxON
 11479  010958  0101               	movlb	1	; () banked
 11480  01095A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11481  01095C  0E51               	movlw	low _AuxON
 11482  01095E  0101               	movlb	1	; () banked
 11483  010960  6F19               	movwf	Send_Config2@data& (0+255),b
 11484  010962  0E01               	movlw	1
 11485  010964  EC0C  F0B7         	call	_Send_Config2
 11486                           
 11487                           ;StringCommand.c: 250: Send_Config2(0b00000001, AuxON);
 11488  010968  0EEE               	movlw	high _AuxON
 11489  01096A  0101               	movlb	1	; () banked
 11490  01096C  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11491  01096E  0E51               	movlw	low _AuxON
 11492  010970  0101               	movlb	1	; () banked
 11493  010972  6F19               	movwf	Send_Config2@data& (0+255),b
 11494  010974  0E01               	movlw	1
 11495  010976  EC0C  F0B7         	call	_Send_Config2
 11496                           
 11497                           ;StringCommand.c: 251: Send_Config2(0b00000001, AuxON);
 11498  01097A  0EEE               	movlw	high _AuxON
 11499  01097C  0101               	movlb	1	; () banked
 11500  01097E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11501  010980  0E51               	movlw	low _AuxON
 11502  010982  0101               	movlb	1	; () banked
 11503  010984  6F19               	movwf	Send_Config2@data& (0+255),b
 11504  010986  0E01               	movlw	1
 11505  010988  EC0C  F0B7         	call	_Send_Config2
 11506                           
 11507                           ;StringCommand.c: 252: INTCONbits.GIE = 1;
 11508  01098C  8EF2               	bsf	intcon,7,c	;volatile
 11509                           
 11510                           ;StringCommand.c: 253: UARTstring("Bedroom Fan On");
 11511  01098E  0EFC               	movlw	high STR_102
 11512  010990  0101               	movlb	1	; () banked
 11513  010992  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11514  010994  0E06               	movlw	low STR_102
 11515  010996  0101               	movlb	1	; () banked
 11516  010998  6F19               	movwf	UARTstring@data& (0+255),b
 11517  01099A  EC36  F0B3         	call	_UARTstring	;wreg free
 11518                           
 11519                           ;StringCommand.c: 254: LCDdisplayFeedback("Bedroom Lt On");
 11520  01099E  0EFC               	movlw	high STR_103
 11521  0109A0  0101               	movlb	1	; () banked
 11522  0109A2  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11523  0109A4  0EA5               	movlw	low STR_103
 11524  0109A6  0101               	movlb	1	; () banked
 11525  0109A8  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11526  0109AA  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 11527                           
 11528                           ;StringCommand.c: 255: }
 11529  0109AE  EF62  F094         	goto	l590
 11530  0109B2                     l12542:
 11531                           
 11532                           ;StringCommand.c: 256: else if (StringMatch(Input, "bedroomfan=off"))
 11533  0109B2  0101               	movlb	1	; () banked
 11534  0109B4  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 11535  0109B8  0101               	movlb	1	; () banked
 11536  0109BA  C188  F10E         	movff	Command@Input,StringMatch@This
 11537  0109BE  0EFB               	movlw	high STR_104
 11538  0109C0  0101               	movlb	1	; () banked
 11539  0109C2  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 11540  0109C4  0EE8               	movlw	low STR_104
 11541  0109C6  0101               	movlb	1	; () banked
 11542  0109C8  6F10               	movwf	StringMatch@That& (0+255),b
 11543  0109CA  EC94  F0B8         	call	_StringMatch	;wreg free
 11544  0109CE  0900               	iorlw	0
 11545  0109D0  B4D8               	btfsc	status,2,c
 11546  0109D2  D065               	goto	l12554
 11547                           
 11548                           ;StringCommand.c: 257: {
 11549                           ;StringCommand.c: 258: INTCONbits.GIE = 0;
 11550  0109D4  9EF2               	bcf	intcon,7,c	;volatile
 11551                           
 11552                           ;StringCommand.c: 259: Send_Config2(0b00000001, AuxOFF);
 11553  0109D6  0EEE               	movlw	high _AuxOFF
 11554  0109D8  0101               	movlb	1	; () banked
 11555  0109DA  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11556  0109DC  0E41               	movlw	low _AuxOFF
 11557  0109DE  0101               	movlb	1	; () banked
 11558  0109E0  6F19               	movwf	Send_Config2@data& (0+255),b
 11559  0109E2  0E01               	movlw	1
 11560  0109E4  EC0C  F0B7         	call	_Send_Config2
 11561                           
 11562                           ;StringCommand.c: 260: Send_Config2(0b00000001, AuxOFF);
 11563  0109E8  0EEE               	movlw	high _AuxOFF
 11564  0109EA  0101               	movlb	1	; () banked
 11565  0109EC  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11566  0109EE  0E41               	movlw	low _AuxOFF
 11567  0109F0  0101               	movlb	1	; () banked
 11568  0109F2  6F19               	movwf	Send_Config2@data& (0+255),b
 11569  0109F4  0E01               	movlw	1
 11570  0109F6  EC0C  F0B7         	call	_Send_Config2
 11571                           
 11572                           ;StringCommand.c: 261: Send_Config2(0b00000001, AuxOFF);
 11573  0109FA  0EEE               	movlw	high _AuxOFF
 11574  0109FC  0101               	movlb	1	; () banked
 11575  0109FE  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11576  010A00  0E41               	movlw	low _AuxOFF
 11577  010A02  0101               	movlb	1	; () banked
 11578  010A04  6F19               	movwf	Send_Config2@data& (0+255),b
 11579  010A06  0E01               	movlw	1
 11580  010A08  EC0C  F0B7         	call	_Send_Config2
 11581                           
 11582                           ;StringCommand.c: 262: Send_Config2(0b00000001, AuxOFF);
 11583  010A0C  0EEE               	movlw	high _AuxOFF
 11584  010A0E  0101               	movlb	1	; () banked
 11585  010A10  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11586  010A12  0E41               	movlw	low _AuxOFF
 11587  010A14  0101               	movlb	1	; () banked
 11588  010A16  6F19               	movwf	Send_Config2@data& (0+255),b
 11589  010A18  0E01               	movlw	1
 11590  010A1A  EC0C  F0B7         	call	_Send_Config2
 11591                           
 11592                           ;StringCommand.c: 263: Send_Config2(0b00000001, AuxOFF);
 11593  010A1E  0EEE               	movlw	high _AuxOFF
 11594  010A20  0101               	movlb	1	; () banked
 11595  010A22  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11596  010A24  0E41               	movlw	low _AuxOFF
 11597  010A26  0101               	movlb	1	; () banked
 11598  010A28  6F19               	movwf	Send_Config2@data& (0+255),b
 11599  010A2A  0E01               	movlw	1
 11600  010A2C  EC0C  F0B7         	call	_Send_Config2
 11601                           
 11602                           ;StringCommand.c: 264: Send_Config2(0b00000001, AuxOFF);
 11603  010A30  0EEE               	movlw	high _AuxOFF
 11604  010A32  0101               	movlb	1	; () banked
 11605  010A34  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11606  010A36  0E41               	movlw	low _AuxOFF
 11607  010A38  0101               	movlb	1	; () banked
 11608  010A3A  6F19               	movwf	Send_Config2@data& (0+255),b
 11609  010A3C  0E01               	movlw	1
 11610  010A3E  EC0C  F0B7         	call	_Send_Config2
 11611                           
 11612                           ;StringCommand.c: 265: Send_Config2(0b00000001, AuxOFF);
 11613  010A42  0EEE               	movlw	high _AuxOFF
 11614  010A44  0101               	movlb	1	; () banked
 11615  010A46  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11616  010A48  0E41               	movlw	low _AuxOFF
 11617  010A4A  0101               	movlb	1	; () banked
 11618  010A4C  6F19               	movwf	Send_Config2@data& (0+255),b
 11619  010A4E  0E01               	movlw	1
 11620  010A50  EC0C  F0B7         	call	_Send_Config2
 11621                           
 11622                           ;StringCommand.c: 266: Send_Config2(0b00000001, AuxOFF);
 11623  010A54  0EEE               	movlw	high _AuxOFF
 11624  010A56  0101               	movlb	1	; () banked
 11625  010A58  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11626  010A5A  0E41               	movlw	low _AuxOFF
 11627  010A5C  0101               	movlb	1	; () banked
 11628  010A5E  6F19               	movwf	Send_Config2@data& (0+255),b
 11629  010A60  0E01               	movlw	1
 11630  010A62  EC0C  F0B7         	call	_Send_Config2
 11631                           
 11632                           ;StringCommand.c: 267: Send_Config2(0b00000001, AuxOFF);
 11633  010A66  0EEE               	movlw	high _AuxOFF
 11634  010A68  0101               	movlb	1	; () banked
 11635  010A6A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11636  010A6C  0E41               	movlw	low _AuxOFF
 11637  010A6E  0101               	movlb	1	; () banked
 11638  010A70  6F19               	movwf	Send_Config2@data& (0+255),b
 11639  010A72  0E01               	movlw	1
 11640  010A74  EC0C  F0B7         	call	_Send_Config2
 11641                           
 11642                           ;StringCommand.c: 268: INTCONbits.GIE = 1;
 11643  010A78  8EF2               	bsf	intcon,7,c	;volatile
 11644                           
 11645                           ;StringCommand.c: 269: UARTstring("Bedroom Fan Off");
 11646  010A7A  0EFA               	movlw	high STR_105
 11647  010A7C  0101               	movlb	1	; () banked
 11648  010A7E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11649  010A80  0EFF               	movlw	low STR_105
 11650  010A82  0101               	movlb	1	; () banked
 11651  010A84  6F19               	movwf	UARTstring@data& (0+255),b
 11652  010A86  EC36  F0B3         	call	_UARTstring	;wreg free
 11653                           
 11654                           ;StringCommand.c: 270: LCDdisplayFeedback("Bedroom Lt Off");
 11655  010A8A  0EFB               	movlw	high STR_106
 11656  010A8C  0101               	movlb	1	; () banked
 11657  010A8E  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11658  010A90  0ED9               	movlw	low STR_106
 11659  010A92  0101               	movlb	1	; () banked
 11660  010A94  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11661  010A96  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 11662                           
 11663                           ;StringCommand.c: 271: }
 11664  010A9A  EF62  F094         	goto	l590
 11665  010A9E                     l12554:
 11666                           
 11667                           ;StringCommand.c: 272: else if (StringMatch(Input, "bedroomshaker=on"))
 11668  010A9E  0101               	movlb	1	; () banked
 11669  010AA0  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 11670  010AA4  0101               	movlb	1	; () banked
 11671  010AA6  C188  F10E         	movff	Command@Input,StringMatch@This
 11672  010AAA  0EF9               	movlw	high STR_107
 11673  010AAC  0101               	movlb	1	; () banked
 11674  010AAE  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 11675  010AB0  0EA9               	movlw	low STR_107
 11676  010AB2  0101               	movlb	1	; () banked
 11677  010AB4  6F10               	movwf	StringMatch@That& (0+255),b
 11678  010AB6  EC94  F0B8         	call	_StringMatch	;wreg free
 11679  010ABA  0900               	iorlw	0
 11680  010ABC  B4D8               	btfsc	status,2,c
 11681  010ABE  D05C               	goto	l12566
 11682                           
 11683                           ;StringCommand.c: 273: {
 11684                           ;StringCommand.c: 274: INTCONbits.GIE = 0;
 11685  010AC0  9EF2               	bcf	intcon,7,c	;volatile
 11686                           
 11687                           ;StringCommand.c: 275: Send_Config2(0b00000001, BedON);
 11688  010AC2  0EEE               	movlw	high _BedON
 11689  010AC4  0101               	movlb	1	; () banked
 11690  010AC6  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11691  010AC8  0E71               	movlw	low _BedON
 11692  010ACA  0101               	movlb	1	; () banked
 11693  010ACC  6F19               	movwf	Send_Config2@data& (0+255),b
 11694  010ACE  0E01               	movlw	1
 11695  010AD0  EC0C  F0B7         	call	_Send_Config2
 11696                           
 11697                           ;StringCommand.c: 276: Send_Config2(0b00000001, BedON);
 11698  010AD4  0EEE               	movlw	high _BedON
 11699  010AD6  0101               	movlb	1	; () banked
 11700  010AD8  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11701  010ADA  0E71               	movlw	low _BedON
 11702  010ADC  0101               	movlb	1	; () banked
 11703  010ADE  6F19               	movwf	Send_Config2@data& (0+255),b
 11704  010AE0  0E01               	movlw	1
 11705  010AE2  EC0C  F0B7         	call	_Send_Config2
 11706                           
 11707                           ;StringCommand.c: 277: Send_Config2(0b00000001, BedON);
 11708  010AE6  0EEE               	movlw	high _BedON
 11709  010AE8  0101               	movlb	1	; () banked
 11710  010AEA  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11711  010AEC  0E71               	movlw	low _BedON
 11712  010AEE  0101               	movlb	1	; () banked
 11713  010AF0  6F19               	movwf	Send_Config2@data& (0+255),b
 11714  010AF2  0E01               	movlw	1
 11715  010AF4  EC0C  F0B7         	call	_Send_Config2
 11716                           
 11717                           ;StringCommand.c: 278: Send_Config2(0b00000001, BedON);
 11718  010AF8  0EEE               	movlw	high _BedON
 11719  010AFA  0101               	movlb	1	; () banked
 11720  010AFC  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11721  010AFE  0E71               	movlw	low _BedON
 11722  010B00  0101               	movlb	1	; () banked
 11723  010B02  6F19               	movwf	Send_Config2@data& (0+255),b
 11724  010B04  0E01               	movlw	1
 11725  010B06  EC0C  F0B7         	call	_Send_Config2
 11726                           
 11727                           ;StringCommand.c: 279: Send_Config2(0b00000001, BedON);
 11728  010B0A  0EEE               	movlw	high _BedON
 11729  010B0C  0101               	movlb	1	; () banked
 11730  010B0E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11731  010B10  0E71               	movlw	low _BedON
 11732  010B12  0101               	movlb	1	; () banked
 11733  010B14  6F19               	movwf	Send_Config2@data& (0+255),b
 11734  010B16  0E01               	movlw	1
 11735  010B18  EC0C  F0B7         	call	_Send_Config2
 11736                           
 11737                           ;StringCommand.c: 280: Send_Config2(0b00000001, BedON);
 11738  010B1C  0EEE               	movlw	high _BedON
 11739  010B1E  0101               	movlb	1	; () banked
 11740  010B20  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11741  010B22  0E71               	movlw	low _BedON
 11742  010B24  0101               	movlb	1	; () banked
 11743  010B26  6F19               	movwf	Send_Config2@data& (0+255),b
 11744  010B28  0E01               	movlw	1
 11745  010B2A  EC0C  F0B7         	call	_Send_Config2
 11746                           
 11747                           ;StringCommand.c: 281: Send_Config2(0b00000001, BedON);
 11748  010B2E  0EEE               	movlw	high _BedON
 11749  010B30  0101               	movlb	1	; () banked
 11750  010B32  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11751  010B34  0E71               	movlw	low _BedON
 11752  010B36  0101               	movlb	1	; () banked
 11753  010B38  6F19               	movwf	Send_Config2@data& (0+255),b
 11754  010B3A  0E01               	movlw	1
 11755  010B3C  EC0C  F0B7         	call	_Send_Config2
 11756                           
 11757                           ;StringCommand.c: 282: Send_Config2(0b00000001, BedON);
 11758  010B40  0EEE               	movlw	high _BedON
 11759  010B42  0101               	movlb	1	; () banked
 11760  010B44  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11761  010B46  0E71               	movlw	low _BedON
 11762  010B48  0101               	movlb	1	; () banked
 11763  010B4A  6F19               	movwf	Send_Config2@data& (0+255),b
 11764  010B4C  0E01               	movlw	1
 11765  010B4E  EC0C  F0B7         	call	_Send_Config2
 11766                           
 11767                           ;StringCommand.c: 283: INTCONbits.GIE = 1;
 11768  010B52  8EF2               	bsf	intcon,7,c	;volatile
 11769                           
 11770                           ;StringCommand.c: 284: UARTstring("Bedroom Shaker On");
 11771  010B54  0EF8               	movlw	high STR_108
 11772  010B56  0101               	movlb	1	; () banked
 11773  010B58  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11774  010B5A  0ECA               	movlw	low STR_108
 11775  010B5C  0101               	movlb	1	; () banked
 11776  010B5E  6F19               	movwf	UARTstring@data& (0+255),b
 11777  010B60  EC36  F0B3         	call	_UARTstring	;wreg free
 11778                           
 11779                           ;StringCommand.c: 285: LCDdisplayFeedback("Bedroom SKR On");
 11780  010B64  0EFB               	movlw	high STR_109
 11781  010B66  0101               	movlb	1	; () banked
 11782  010B68  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11783  010B6A  0EF7               	movlw	low STR_109
 11784  010B6C  0101               	movlb	1	; () banked
 11785  010B6E  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11786  010B70  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 11787                           
 11788                           ;StringCommand.c: 286: }
 11789  010B74  EF62  F094         	goto	l590
 11790  010B78                     l12566:
 11791                           
 11792                           ;StringCommand.c: 287: else if (StringMatch(Input, "bedroomshaker=off"))
 11793  010B78  0101               	movlb	1	; () banked
 11794  010B7A  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 11795  010B7E  0101               	movlb	1	; () banked
 11796  010B80  C188  F10E         	movff	Command@Input,StringMatch@This
 11797  010B84  0EF8               	movlw	high STR_110
 11798  010B86  0101               	movlb	1	; () banked
 11799  010B88  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 11800  010B8A  0E94               	movlw	low STR_110
 11801  010B8C  0101               	movlb	1	; () banked
 11802  010B8E  6F10               	movwf	StringMatch@That& (0+255),b
 11803  010B90  EC94  F0B8         	call	_StringMatch	;wreg free
 11804  010B94  0900               	iorlw	0
 11805  010B96  B4D8               	btfsc	status,2,c
 11806  010B98  EF62  F094         	goto	l590
 11807                           
 11808                           ;StringCommand.c: 288: {
 11809                           ;StringCommand.c: 289: INTCONbits.GIE = 0;
 11810  010B9C  9EF2               	bcf	intcon,7,c	;volatile
 11811                           
 11812                           ;StringCommand.c: 290: Send_Config2(0b00000001, BedOFF);
 11813  010B9E  0EEE               	movlw	high _BedOFF
 11814  010BA0  0101               	movlb	1	; () banked
 11815  010BA2  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11816  010BA4  0E61               	movlw	low _BedOFF
 11817  010BA6  0101               	movlb	1	; () banked
 11818  010BA8  6F19               	movwf	Send_Config2@data& (0+255),b
 11819  010BAA  0E01               	movlw	1
 11820  010BAC  EC0C  F0B7         	call	_Send_Config2
 11821                           
 11822                           ;StringCommand.c: 291: Send_Config2(0b00000001, BedOFF);
 11823  010BB0  0EEE               	movlw	high _BedOFF
 11824  010BB2  0101               	movlb	1	; () banked
 11825  010BB4  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11826  010BB6  0E61               	movlw	low _BedOFF
 11827  010BB8  0101               	movlb	1	; () banked
 11828  010BBA  6F19               	movwf	Send_Config2@data& (0+255),b
 11829  010BBC  0E01               	movlw	1
 11830  010BBE  EC0C  F0B7         	call	_Send_Config2
 11831                           
 11832                           ;StringCommand.c: 292: Send_Config2(0b00000001, BedOFF);
 11833  010BC2  0EEE               	movlw	high _BedOFF
 11834  010BC4  0101               	movlb	1	; () banked
 11835  010BC6  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11836  010BC8  0E61               	movlw	low _BedOFF
 11837  010BCA  0101               	movlb	1	; () banked
 11838  010BCC  6F19               	movwf	Send_Config2@data& (0+255),b
 11839  010BCE  0E01               	movlw	1
 11840  010BD0  EC0C  F0B7         	call	_Send_Config2
 11841                           
 11842                           ;StringCommand.c: 293: Send_Config2(0b00000001, BedOFF);
 11843  010BD4  0EEE               	movlw	high _BedOFF
 11844  010BD6  0101               	movlb	1	; () banked
 11845  010BD8  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11846  010BDA  0E61               	movlw	low _BedOFF
 11847  010BDC  0101               	movlb	1	; () banked
 11848  010BDE  6F19               	movwf	Send_Config2@data& (0+255),b
 11849  010BE0  0E01               	movlw	1
 11850  010BE2  EC0C  F0B7         	call	_Send_Config2
 11851                           
 11852                           ;StringCommand.c: 294: Send_Config2(0b00000001, BedOFF);
 11853  010BE6  0EEE               	movlw	high _BedOFF
 11854  010BE8  0101               	movlb	1	; () banked
 11855  010BEA  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11856  010BEC  0E61               	movlw	low _BedOFF
 11857  010BEE  0101               	movlb	1	; () banked
 11858  010BF0  6F19               	movwf	Send_Config2@data& (0+255),b
 11859  010BF2  0E01               	movlw	1
 11860  010BF4  EC0C  F0B7         	call	_Send_Config2
 11861                           
 11862                           ;StringCommand.c: 295: Send_Config2(0b00000001, BedOFF);
 11863  010BF8  0EEE               	movlw	high _BedOFF
 11864  010BFA  0101               	movlb	1	; () banked
 11865  010BFC  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11866  010BFE  0E61               	movlw	low _BedOFF
 11867  010C00  0101               	movlb	1	; () banked
 11868  010C02  6F19               	movwf	Send_Config2@data& (0+255),b
 11869  010C04  0E01               	movlw	1
 11870  010C06  EC0C  F0B7         	call	_Send_Config2
 11871                           
 11872                           ;StringCommand.c: 296: Send_Config2(0b00000001, BedOFF);
 11873  010C0A  0EEE               	movlw	high _BedOFF
 11874  010C0C  0101               	movlb	1	; () banked
 11875  010C0E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11876  010C10  0E61               	movlw	low _BedOFF
 11877  010C12  0101               	movlb	1	; () banked
 11878  010C14  6F19               	movwf	Send_Config2@data& (0+255),b
 11879  010C16  0E01               	movlw	1
 11880  010C18  EC0C  F0B7         	call	_Send_Config2
 11881                           
 11882                           ;StringCommand.c: 297: Send_Config2(0b00000001, BedOFF);
 11883  010C1C  0EEE               	movlw	high _BedOFF
 11884  010C1E  0101               	movlb	1	; () banked
 11885  010C20  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 11886  010C22  0E61               	movlw	low _BedOFF
 11887  010C24  0101               	movlb	1	; () banked
 11888  010C26  6F19               	movwf	Send_Config2@data& (0+255),b
 11889  010C28  0E01               	movlw	1
 11890  010C2A  EC0C  F0B7         	call	_Send_Config2
 11891                           
 11892                           ;StringCommand.c: 298: INTCONbits.GIE = 1;
 11893  010C2E  8EF2               	bsf	intcon,7,c	;volatile
 11894                           
 11895                           ;StringCommand.c: 299: UARTstring("Bedroom Shaker Off");
 11896  010C30  0EF8               	movlw	high STR_111
 11897  010C32  0101               	movlb	1	; () banked
 11898  010C34  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11899  010C36  0E00               	movlw	low STR_111
 11900  010C38  0101               	movlb	1	; () banked
 11901  010C3A  6F19               	movwf	UARTstring@data& (0+255),b
 11902  010C3C  EC36  F0B3         	call	_UARTstring	;wreg free
 11903                           
 11904                           ;StringCommand.c: 300: LCDdisplayFeedback("Bedroom SKR Off");
 11905  010C40  0EFA               	movlw	high STR_112
 11906  010C42  0101               	movlb	1	; () banked
 11907  010C44  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11908  010C46  0EEF               	movlw	low STR_112
 11909  010C48  0101               	movlb	1	; () banked
 11910  010C4A  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11911  010C4C  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 11912  010C50  EF62  F094         	goto	l590
 11913  010C54                     l12578:
 11914                           
 11915                           ;StringCommand.c: 303: else
 11916                           ;StringCommand.c: 304: {
 11917                           ;StringCommand.c: 305: UARTstring("Bedroom Task???");
 11918  010C54  0EFA               	movlw	high STR_113
 11919  010C56  0101               	movlb	1	; () banked
 11920  010C58  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11921  010C5A  0E3F               	movlw	low STR_113
 11922  010C5C  0101               	movlb	1	; () banked
 11923  010C5E  6F19               	movwf	UARTstring@data& (0+255),b
 11924  010C60  EC36  F0B3         	call	_UARTstring	;wreg free
 11925                           
 11926                           ;StringCommand.c: 306: LCDdisplayFeedback("Bedroom Task???");
 11927  010C64  0EFA               	movlw	high STR_113
 11928  010C66  0101               	movlb	1	; () banked
 11929  010C68  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11930  010C6A  0E3F               	movlw	low STR_113
 11931  010C6C  0101               	movlb	1	; () banked
 11932  010C6E  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11933  010C70  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 11934  010C74  EF62  F094         	goto	l590
 11935  010C78                     l12580:
 11936                           
 11937                           ;StringCommand.c: 309: else
 11938                           ;StringCommand.c: 310: {
 11939                           ;StringCommand.c: 311: UARTstring("Bedroom Help Menu\r\n\n");
 11940  010C78  0EF7               	movlw	high STR_115
 11941  010C7A  0101               	movlb	1	; () banked
 11942  010C7C  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11943  010C7E  0E39               	movlw	low STR_115
 11944  010C80  0101               	movlb	1	; () banked
 11945  010C82  6F19               	movwf	UARTstring@data& (0+255),b
 11946  010C84  EC36  F0B3         	call	_UARTstring	;wreg free
 11947                           
 11948                           ;StringCommand.c: 312: UARTstring("Devices:\r\n");
 11949  010C88  0EFD               	movlw	high STR_59
 11950  010C8A  0101               	movlb	1	; () banked
 11951  010C8C  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11952  010C8E  0ECF               	movlw	low STR_59
 11953  010C90  0101               	movlb	1	; () banked
 11954  010C92  6F19               	movwf	UARTstring@data& (0+255),b
 11955  010C94  EC36  F0B3         	call	_UARTstring	;wreg free
 11956                           
 11957                           ;StringCommand.c: 313: UARTstring("light\r\n");
 11958  010C98  0EFF               	movlw	high STR_84
 11959  010C9A  0101               	movlb	1	; () banked
 11960  010C9C  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11961  010C9E  0E08               	movlw	low STR_84
 11962  010CA0  0101               	movlb	1	; () banked
 11963  010CA2  6F19               	movwf	UARTstring@data& (0+255),b
 11964  010CA4  EC36  F0B3         	call	_UARTstring	;wreg free
 11965                           
 11966                           ;StringCommand.c: 314: UARTstring("fan\r\n");
 11967  010CA8  0EFF               	movlw	high STR_118
 11968  010CAA  0101               	movlb	1	; () banked
 11969  010CAC  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11970  010CAE  0E96               	movlw	low STR_118
 11971  010CB0  0101               	movlb	1	; () banked
 11972  010CB2  6F19               	movwf	UARTstring@data& (0+255),b
 11973  010CB4  EC36  F0B3         	call	_UARTstring	;wreg free
 11974                           
 11975                           ;StringCommand.c: 315: UARTstring("shaker\r\n\n");
 11976  010CB8  0EFE               	movlw	high STR_119
 11977  010CBA  0101               	movlb	1	; () banked
 11978  010CBC  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11979  010CBE  0E1C               	movlw	low STR_119
 11980  010CC0  0101               	movlb	1	; () banked
 11981  010CC2  6F19               	movwf	UARTstring@data& (0+255),b
 11982  010CC4  EC36  F0B3         	call	_UARTstring	;wreg free
 11983                           
 11984                           ;StringCommand.c: 316: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 11985  010CC8  0EEF               	movlw	high STR_62
 11986  010CCA  0101               	movlb	1	; () banked
 11987  010CCC  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11988  010CCE  0E73               	movlw	low STR_62
 11989  010CD0  0101               	movlb	1	; () banked
 11990  010CD2  6F19               	movwf	UARTstring@data& (0+255),b
 11991  010CD4  EC36  F0B3         	call	_UARTstring	;wreg free
 11992                           
 11993                           ;StringCommand.c: 317: UARTstring("i.e. Bedroom fan = On\r\n");
 11994  010CD8  0EF6               	movlw	high STR_121
 11995  010CDA  0101               	movlb	1	; () banked
 11996  010CDC  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11997  010CDE  0E84               	movlw	low STR_121
 11998  010CE0  0101               	movlb	1	; () banked
 11999  010CE2  6F19               	movwf	UARTstring@data& (0+255),b
 12000  010CE4  EC36  F0B3         	call	_UARTstring	;wreg free
 12001                           
 12002                           ;StringCommand.c: 318: LCDdisplayFeedback("Bedroom Help???");
 12003  010CE8  0EFA               	movlw	high STR_122
 12004  010CEA  0101               	movlb	1	; () banked
 12005  010CEC  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12006  010CEE  0E4F               	movlw	low STR_122
 12007  010CF0  0101               	movlb	1	; () banked
 12008  010CF2  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12009  010CF4  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 12010                           
 12011                           ;StringCommand.c: 319: LCD_Scroll("Bedroom Menu");
 12012  010CF8  0EFD               	movlw	high STR_123
 12013  010CFA  0101               	movlb	1	; () banked
 12014  010CFC  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12015  010CFE  0E6D               	movlw	low STR_123
 12016  010D00  0101               	movlb	1	; () banked
 12017  010D02  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12018  010D04  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 12019                           
 12020                           ;StringCommand.c: 320: LCD_Scroll("Devices:");
 12021  010D08  0EFE               	movlw	high STR_65
 12022  010D0A  0101               	movlb	1	; () banked
 12023  010D0C  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12024  010D0E  0E9D               	movlw	low STR_65
 12025  010D10  0101               	movlb	1	; () banked
 12026  010D12  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12027  010D14  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 12028                           
 12029                           ;StringCommand.c: 321: LCD_Scroll("Light");
 12030  010D18  0EFF               	movlw	high STR_91
 12031  010D1A  0101               	movlb	1	; () banked
 12032  010D1C  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12033  010D1E  0EA8               	movlw	low STR_91
 12034  010D20  0101               	movlb	1	; () banked
 12035  010D22  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12036  010D24  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 12037                           
 12038                           ;StringCommand.c: 322: LCD_Scroll("Fan");
 12039  010D28  0EFF               	movlw	high STR_92
 12040  010D2A  0101               	movlb	1	; () banked
 12041  010D2C  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12042  010D2E  0EED               	movlw	low STR_92
 12043  010D30  0101               	movlb	1	; () banked
 12044  010D32  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12045  010D34  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 12046                           
 12047                           ;StringCommand.c: 323: LCD_Scroll("Shaker");
 12048  010D38  0EFF               	movlw	high STR_127
 12049  010D3A  0101               	movlb	1	; () banked
 12050  010D3C  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12051  010D3E  0E82               	movlw	low STR_127
 12052  010D40  0101               	movlb	1	; () banked
 12053  010D42  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12054  010D44  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 12055  010D48  EF62  F094         	goto	l590
 12056  010D4C                     l12592:
 12057                           
 12058                           ;StringCommand.c: 327: else if (StringContains(Input, "color") || StringContains(Input, 
      +                          "white") || StringContains(Input, "christmas"))
 12059  010D4C  0101               	movlb	1	; () banked
 12060  010D4E  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12061  010D52  0101               	movlb	1	; () banked
 12062  010D54  C188  F10E         	movff	Command@Input,StringContains@This
 12063  010D58  0EFF               	movlw	high STR_128
 12064  010D5A  0101               	movlb	1	; () banked
 12065  010D5C  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12066  010D5E  0EA2               	movlw	low STR_128
 12067  010D60  0101               	movlb	1	; () banked
 12068  010D62  6F10               	movwf	StringContains@That& (0+255),b
 12069  010D64  EC55  F0B8         	call	_StringContains	;wreg free
 12070  010D68  0900               	iorlw	0
 12071  010D6A  A4D8               	btfss	status,2,c
 12072  010D6C  D022               	goto	l12598
 12073  010D6E  0101               	movlb	1	; () banked
 12074  010D70  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12075  010D74  0101               	movlb	1	; () banked
 12076  010D76  C188  F10E         	movff	Command@Input,StringContains@This
 12077  010D7A  0EFF               	movlw	high STR_129
 12078  010D7C  0101               	movlb	1	; () banked
 12079  010D7E  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12080  010D80  0E9C               	movlw	low STR_129
 12081  010D82  0101               	movlb	1	; () banked
 12082  010D84  6F10               	movwf	StringContains@That& (0+255),b
 12083  010D86  EC55  F0B8         	call	_StringContains	;wreg free
 12084  010D8A  0900               	iorlw	0
 12085  010D8C  A4D8               	btfss	status,2,c
 12086  010D8E  D011               	goto	l12598
 12087  010D90  0101               	movlb	1	; () banked
 12088  010D92  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12089  010D96  0101               	movlb	1	; () banked
 12090  010D98  C188  F10E         	movff	Command@Input,StringContains@This
 12091  010D9C  0EFE               	movlw	high STR_130
 12092  010D9E  0101               	movlb	1	; () banked
 12093  010DA0  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12094  010DA2  0E62               	movlw	low STR_130
 12095  010DA4  0101               	movlb	1	; () banked
 12096  010DA6  6F10               	movwf	StringContains@That& (0+255),b
 12097  010DA8  EC55  F0B8         	call	_StringContains	;wreg free
 12098  010DAC  0900               	iorlw	0
 12099  010DAE  B4D8               	btfsc	status,2,c
 12100  010DB0  D1D4               	goto	l12654
 12101  010DB2                     l12598:
 12102                           
 12103                           ;StringCommand.c: 328: {
 12104                           ;StringCommand.c: 329: if (!StringContains(Input, "?"))
 12105  010DB2  0101               	movlb	1	; () banked
 12106  010DB4  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12107  010DB8  0101               	movlb	1	; () banked
 12108  010DBA  C188  F10E         	movff	Command@Input,StringContains@This
 12109  010DBE  0EFA               	movlw	high (STR_81+14)
 12110  010DC0  0101               	movlb	1	; () banked
 12111  010DC2  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12112  010DC4  0E3D               	movlw	low (STR_81+14)
 12113  010DC6  0101               	movlb	1	; () banked
 12114  010DC8  6F10               	movwf	StringContains@That& (0+255),b
 12115  010DCA  EC55  F0B8         	call	_StringContains	;wreg free
 12116  010DCE  0900               	iorlw	0
 12117  010DD0  A4D8               	btfss	status,2,c
 12118  010DD2  D171               	goto	l12644
 12119                           
 12120                           ;StringCommand.c: 330: {
 12121                           ;StringCommand.c: 331: if (StringContains(Input, "color") && StringContains(Input, "="))
 12122  010DD4  0101               	movlb	1	; () banked
 12123  010DD6  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12124  010DDA  0101               	movlb	1	; () banked
 12125  010DDC  C188  F10E         	movff	Command@Input,StringContains@This
 12126  010DE0  0EFF               	movlw	high STR_128
 12127  010DE2  0101               	movlb	1	; () banked
 12128  010DE4  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12129  010DE6  0EA2               	movlw	low STR_128
 12130  010DE8  0101               	movlb	1	; () banked
 12131  010DEA  6F10               	movwf	StringContains@That& (0+255),b
 12132  010DEC  EC55  F0B8         	call	_StringContains	;wreg free
 12133  010DF0  0900               	iorlw	0
 12134  010DF2  B4D8               	btfsc	status,2,c
 12135  010DF4  D064               	goto	l12614
 12136  010DF6  0101               	movlb	1	; () banked
 12137  010DF8  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12138  010DFC  0101               	movlb	1	; () banked
 12139  010DFE  C188  F10E         	movff	Command@Input,StringContains@This
 12140  010E02  0EFD               	movlw	high (STR_199+11)
 12141  010E04  0101               	movlb	1	; () banked
 12142  010E06  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12143  010E08  0E1D               	movlw	low (STR_199+11)
 12144  010E0A  0101               	movlb	1	; () banked
 12145  010E0C  6F10               	movwf	StringContains@That& (0+255),b
 12146  010E0E  EC55  F0B8         	call	_StringContains	;wreg free
 12147  010E12  0900               	iorlw	0
 12148  010E14  B4D8               	btfsc	status,2,c
 12149  010E16  D053               	goto	l12614
 12150                           
 12151                           ;StringCommand.c: 332: {
 12152                           ;StringCommand.c: 333: INTCONbits.GIE = 0;
 12153  010E18  9EF2               	bcf	intcon,7,c	;volatile
 12154                           
 12155                           ;StringCommand.c: 334: Send_Config1(0b00000001, TXdataF);
 12156  010E1A  0EEE               	movlw	high _TXdataF
 12157  010E1C  0101               	movlb	1	; () banked
 12158  010E1E  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12159  010E20  0ED9               	movlw	low _TXdataF
 12160  010E22  0101               	movlb	1	; () banked
 12161  010E24  6F19               	movwf	Send_Config1@data& (0+255),b
 12162  010E26  0E01               	movlw	1
 12163  010E28  EC4C  F0AE         	call	_Send_Config1
 12164                           
 12165                           ;StringCommand.c: 335: Send_Config1(0b00000001, TXdataF);
 12166  010E2C  0EEE               	movlw	high _TXdataF
 12167  010E2E  0101               	movlb	1	; () banked
 12168  010E30  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12169  010E32  0ED9               	movlw	low _TXdataF
 12170  010E34  0101               	movlb	1	; () banked
 12171  010E36  6F19               	movwf	Send_Config1@data& (0+255),b
 12172  010E38  0E01               	movlw	1
 12173  010E3A  EC4C  F0AE         	call	_Send_Config1
 12174                           
 12175                           ;StringCommand.c: 336: Send_Config1(0b00000001, TXdataF);
 12176  010E3E  0EEE               	movlw	high _TXdataF
 12177  010E40  0101               	movlb	1	; () banked
 12178  010E42  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12179  010E44  0ED9               	movlw	low _TXdataF
 12180  010E46  0101               	movlb	1	; () banked
 12181  010E48  6F19               	movwf	Send_Config1@data& (0+255),b
 12182  010E4A  0E01               	movlw	1
 12183  010E4C  EC4C  F0AE         	call	_Send_Config1
 12184                           
 12185                           ;StringCommand.c: 337: Send_Config1(0b00000001, TXdataF);
 12186  010E50  0EEE               	movlw	high _TXdataF
 12187  010E52  0101               	movlb	1	; () banked
 12188  010E54  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12189  010E56  0ED9               	movlw	low _TXdataF
 12190  010E58  0101               	movlb	1	; () banked
 12191  010E5A  6F19               	movwf	Send_Config1@data& (0+255),b
 12192  010E5C  0E01               	movlw	1
 12193  010E5E  EC4C  F0AE         	call	_Send_Config1
 12194                           
 12195                           ;StringCommand.c: 338: Send_Config1(0b00000001, TXdataF);
 12196  010E62  0EEE               	movlw	high _TXdataF
 12197  010E64  0101               	movlb	1	; () banked
 12198  010E66  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12199  010E68  0ED9               	movlw	low _TXdataF
 12200  010E6A  0101               	movlb	1	; () banked
 12201  010E6C  6F19               	movwf	Send_Config1@data& (0+255),b
 12202  010E6E  0E01               	movlw	1
 12203  010E70  EC4C  F0AE         	call	_Send_Config1
 12204                           
 12205                           ;StringCommand.c: 339: Send_Config1(0b00000001, TXdataF);
 12206  010E74  0EEE               	movlw	high _TXdataF
 12207  010E76  0101               	movlb	1	; () banked
 12208  010E78  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12209  010E7A  0ED9               	movlw	low _TXdataF
 12210  010E7C  0101               	movlb	1	; () banked
 12211  010E7E  6F19               	movwf	Send_Config1@data& (0+255),b
 12212  010E80  0E01               	movlw	1
 12213  010E82  EC4C  F0AE         	call	_Send_Config1
 12214                           
 12215                           ;StringCommand.c: 340: Send_Config1(0b00000001, TXdataF);
 12216  010E86  0EEE               	movlw	high _TXdataF
 12217  010E88  0101               	movlb	1	; () banked
 12218  010E8A  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12219  010E8C  0ED9               	movlw	low _TXdataF
 12220  010E8E  0101               	movlb	1	; () banked
 12221  010E90  6F19               	movwf	Send_Config1@data& (0+255),b
 12222  010E92  0E01               	movlw	1
 12223  010E94  EC4C  F0AE         	call	_Send_Config1
 12224                           
 12225                           ;StringCommand.c: 341: INTCONbits.GIE = 1;
 12226  010E98  8EF2               	bsf	intcon,7,c	;volatile
 12227                           
 12228                           ;StringCommand.c: 342: UARTstring("Christmas Tree Colored Lights Toggled");
 12229  010E9A  0EF2               	movlw	high STR_134
 12230  010E9C  0101               	movlb	1	; () banked
 12231  010E9E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12232  010EA0  0E80               	movlw	low STR_134
 12233  010EA2  0101               	movlb	1	; () banked
 12234  010EA4  6F19               	movwf	UARTstring@data& (0+255),b
 12235  010EA6  EC36  F0B3         	call	_UARTstring	;wreg free
 12236                           
 12237                           ;StringCommand.c: 343: LCDdisplayFeedback("XMAS Color TGLD");
 12238  010EAA  0EFA               	movlw	high STR_135
 12239  010EAC  0101               	movlb	1	; () banked
 12240  010EAE  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12241  010EB0  0E8F               	movlw	low STR_135
 12242  010EB2  0101               	movlb	1	; () banked
 12243  010EB4  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12244  010EB6  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 12245                           
 12246                           ;StringCommand.c: 344: }
 12247  010EBA  EF62  F094         	goto	l590
 12248  010EBE                     l12614:
 12249                           
 12250                           ;StringCommand.c: 345: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=on"))
 12251  010EBE  0101               	movlb	1	; () banked
 12252  010EC0  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12253  010EC4  0101               	movlb	1	; () banked
 12254  010EC6  C188  F10E         	movff	Command@Input,StringContains@This
 12255  010ECA  0EFF               	movlw	high STR_129
 12256  010ECC  0101               	movlb	1	; () banked
 12257  010ECE  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12258  010ED0  0E9C               	movlw	low STR_129
 12259  010ED2  0101               	movlb	1	; () banked
 12260  010ED4  6F10               	movwf	StringContains@That& (0+255),b
 12261  010ED6  EC55  F0B8         	call	_StringContains	;wreg free
 12262  010EDA  0900               	iorlw	0
 12263  010EDC  B4D8               	btfsc	status,2,c
 12264  010EDE  D064               	goto	l12628
 12265  010EE0  0101               	movlb	1	; () banked
 12266  010EE2  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12267  010EE6  0101               	movlb	1	; () banked
 12268  010EE8  C188  F10E         	movff	Command@Input,StringContains@This
 12269  010EEC  0EFF               	movlw	high (STR_41+4)
 12270  010EEE  0101               	movlb	1	; () banked
 12271  010EF0  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12272  010EF2  0E34               	movlw	low (STR_41+4)
 12273  010EF4  0101               	movlb	1	; () banked
 12274  010EF6  6F10               	movwf	StringContains@That& (0+255),b
 12275  010EF8  EC55  F0B8         	call	_StringContains	;wreg free
 12276  010EFC  0900               	iorlw	0
 12277  010EFE  B4D8               	btfsc	status,2,c
 12278  010F00  D053               	goto	l12628
 12279                           
 12280                           ;StringCommand.c: 346: {
 12281                           ;StringCommand.c: 347: INTCONbits.GIE = 0;
 12282  010F02  9EF2               	bcf	intcon,7,c	;volatile
 12283                           
 12284                           ;StringCommand.c: 348: Send_Config2(0b00000001, Aux2ON);
 12285  010F04  0EEE               	movlw	high _Aux2ON
 12286  010F06  0101               	movlb	1	; () banked
 12287  010F08  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12288  010F0A  0E31               	movlw	low _Aux2ON
 12289  010F0C  0101               	movlb	1	; () banked
 12290  010F0E  6F19               	movwf	Send_Config2@data& (0+255),b
 12291  010F10  0E01               	movlw	1
 12292  010F12  EC0C  F0B7         	call	_Send_Config2
 12293                           
 12294                           ;StringCommand.c: 349: Send_Config2(0b00000001, Aux2ON);
 12295  010F16  0EEE               	movlw	high _Aux2ON
 12296  010F18  0101               	movlb	1	; () banked
 12297  010F1A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12298  010F1C  0E31               	movlw	low _Aux2ON
 12299  010F1E  0101               	movlb	1	; () banked
 12300  010F20  6F19               	movwf	Send_Config2@data& (0+255),b
 12301  010F22  0E01               	movlw	1
 12302  010F24  EC0C  F0B7         	call	_Send_Config2
 12303                           
 12304                           ;StringCommand.c: 350: Send_Config2(0b00000001, Aux2ON);
 12305  010F28  0EEE               	movlw	high _Aux2ON
 12306  010F2A  0101               	movlb	1	; () banked
 12307  010F2C  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12308  010F2E  0E31               	movlw	low _Aux2ON
 12309  010F30  0101               	movlb	1	; () banked
 12310  010F32  6F19               	movwf	Send_Config2@data& (0+255),b
 12311  010F34  0E01               	movlw	1
 12312  010F36  EC0C  F0B7         	call	_Send_Config2
 12313                           
 12314                           ;StringCommand.c: 351: Send_Config2(0b00000001, Aux2ON);
 12315  010F3A  0EEE               	movlw	high _Aux2ON
 12316  010F3C  0101               	movlb	1	; () banked
 12317  010F3E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12318  010F40  0E31               	movlw	low _Aux2ON
 12319  010F42  0101               	movlb	1	; () banked
 12320  010F44  6F19               	movwf	Send_Config2@data& (0+255),b
 12321  010F46  0E01               	movlw	1
 12322  010F48  EC0C  F0B7         	call	_Send_Config2
 12323                           
 12324                           ;StringCommand.c: 352: Send_Config2(0b00000001, Aux2ON);
 12325  010F4C  0EEE               	movlw	high _Aux2ON
 12326  010F4E  0101               	movlb	1	; () banked
 12327  010F50  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12328  010F52  0E31               	movlw	low _Aux2ON
 12329  010F54  0101               	movlb	1	; () banked
 12330  010F56  6F19               	movwf	Send_Config2@data& (0+255),b
 12331  010F58  0E01               	movlw	1
 12332  010F5A  EC0C  F0B7         	call	_Send_Config2
 12333                           
 12334                           ;StringCommand.c: 353: Send_Config2(0b00000001, Aux2ON);
 12335  010F5E  0EEE               	movlw	high _Aux2ON
 12336  010F60  0101               	movlb	1	; () banked
 12337  010F62  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12338  010F64  0E31               	movlw	low _Aux2ON
 12339  010F66  0101               	movlb	1	; () banked
 12340  010F68  6F19               	movwf	Send_Config2@data& (0+255),b
 12341  010F6A  0E01               	movlw	1
 12342  010F6C  EC0C  F0B7         	call	_Send_Config2
 12343                           
 12344                           ;StringCommand.c: 354: Send_Config2(0b00000001, Aux2ON);
 12345  010F70  0EEE               	movlw	high _Aux2ON
 12346  010F72  0101               	movlb	1	; () banked
 12347  010F74  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12348  010F76  0E31               	movlw	low _Aux2ON
 12349  010F78  0101               	movlb	1	; () banked
 12350  010F7A  6F19               	movwf	Send_Config2@data& (0+255),b
 12351  010F7C  0E01               	movlw	1
 12352  010F7E  EC0C  F0B7         	call	_Send_Config2
 12353                           
 12354                           ;StringCommand.c: 355: INTCONbits.GIE = 1;
 12355  010F82  8EF2               	bsf	intcon,7,c	;volatile
 12356                           
 12357                           ;StringCommand.c: 356: UARTstring("Christmas Tree White Lights On");
 12358  010F84  0EF4               	movlw	high STR_138
 12359  010F86  0101               	movlb	1	; () banked
 12360  010F88  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12361  010F8A  0E65               	movlw	low STR_138
 12362  010F8C  0101               	movlb	1	; () banked
 12363  010F8E  6F19               	movwf	UARTstring@data& (0+255),b
 12364  010F90  EC36  F0B3         	call	_UARTstring	;wreg free
 12365                           
 12366                           ;StringCommand.c: 357: LCDdisplayFeedback("XMAS White On");
 12367  010F94  0EFC               	movlw	high STR_139
 12368  010F96  0101               	movlb	1	; () banked
 12369  010F98  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12370  010F9A  0E89               	movlw	low STR_139
 12371  010F9C  0101               	movlb	1	; () banked
 12372  010F9E  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12373  010FA0  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 12374                           
 12375                           ;StringCommand.c: 358: }
 12376  010FA4  EF62  F094         	goto	l590
 12377  010FA8                     l12628:
 12378                           
 12379                           ;StringCommand.c: 359: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=off"))
 12380  010FA8  0101               	movlb	1	; () banked
 12381  010FAA  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12382  010FAE  0101               	movlb	1	; () banked
 12383  010FB0  C188  F10E         	movff	Command@Input,StringContains@This
 12384  010FB4  0EFF               	movlw	high STR_129
 12385  010FB6  0101               	movlb	1	; () banked
 12386  010FB8  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12387  010FBA  0E9C               	movlw	low STR_129
 12388  010FBC  0101               	movlb	1	; () banked
 12389  010FBE  6F10               	movwf	StringContains@That& (0+255),b
 12390  010FC0  EC55  F0B8         	call	_StringContains	;wreg free
 12391  010FC4  0900               	iorlw	0
 12392  010FC6  B4D8               	btfsc	status,2,c
 12393  010FC8  D064               	goto	l12642
 12394  010FCA  0101               	movlb	1	; () banked
 12395  010FCC  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12396  010FD0  0101               	movlb	1	; () banked
 12397  010FD2  C188  F10E         	movff	Command@Input,StringContains@This
 12398  010FD6  0EFE               	movlw	high (STR_44+4)
 12399  010FD8  0101               	movlb	1	; () banked
 12400  010FDA  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12401  010FDC  0EC5               	movlw	low (STR_44+4)
 12402  010FDE  0101               	movlb	1	; () banked
 12403  010FE0  6F10               	movwf	StringContains@That& (0+255),b
 12404  010FE2  EC55  F0B8         	call	_StringContains	;wreg free
 12405  010FE6  0900               	iorlw	0
 12406  010FE8  B4D8               	btfsc	status,2,c
 12407  010FEA  D053               	goto	l12642
 12408                           
 12409                           ;StringCommand.c: 360: {
 12410                           ;StringCommand.c: 361: INTCONbits.GIE = 0;
 12411  010FEC  9EF2               	bcf	intcon,7,c	;volatile
 12412                           
 12413                           ;StringCommand.c: 362: Send_Config2(0b00000001, Aux2OFF);
 12414  010FEE  0EEE               	movlw	high _Aux2OFF
 12415  010FF0  0101               	movlb	1	; () banked
 12416  010FF2  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12417  010FF4  0E21               	movlw	low _Aux2OFF
 12418  010FF6  0101               	movlb	1	; () banked
 12419  010FF8  6F19               	movwf	Send_Config2@data& (0+255),b
 12420  010FFA  0E01               	movlw	1
 12421  010FFC  EC0C  F0B7         	call	_Send_Config2
 12422                           
 12423                           ;StringCommand.c: 363: Send_Config2(0b00000001, Aux2OFF);
 12424  011000  0EEE               	movlw	high _Aux2OFF
 12425  011002  0101               	movlb	1	; () banked
 12426  011004  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12427  011006  0E21               	movlw	low _Aux2OFF
 12428  011008  0101               	movlb	1	; () banked
 12429  01100A  6F19               	movwf	Send_Config2@data& (0+255),b
 12430  01100C  0E01               	movlw	1
 12431  01100E  EC0C  F0B7         	call	_Send_Config2
 12432                           
 12433                           ;StringCommand.c: 364: Send_Config2(0b00000001, Aux2OFF);
 12434  011012  0EEE               	movlw	high _Aux2OFF
 12435  011014  0101               	movlb	1	; () banked
 12436  011016  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12437  011018  0E21               	movlw	low _Aux2OFF
 12438  01101A  0101               	movlb	1	; () banked
 12439  01101C  6F19               	movwf	Send_Config2@data& (0+255),b
 12440  01101E  0E01               	movlw	1
 12441  011020  EC0C  F0B7         	call	_Send_Config2
 12442                           
 12443                           ;StringCommand.c: 365: Send_Config2(0b00000001, Aux2OFF);
 12444  011024  0EEE               	movlw	high _Aux2OFF
 12445  011026  0101               	movlb	1	; () banked
 12446  011028  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12447  01102A  0E21               	movlw	low _Aux2OFF
 12448  01102C  0101               	movlb	1	; () banked
 12449  01102E  6F19               	movwf	Send_Config2@data& (0+255),b
 12450  011030  0E01               	movlw	1
 12451  011032  EC0C  F0B7         	call	_Send_Config2
 12452                           
 12453                           ;StringCommand.c: 366: Send_Config2(0b00000001, Aux2OFF);
 12454  011036  0EEE               	movlw	high _Aux2OFF
 12455  011038  0101               	movlb	1	; () banked
 12456  01103A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12457  01103C  0E21               	movlw	low _Aux2OFF
 12458  01103E  0101               	movlb	1	; () banked
 12459  011040  6F19               	movwf	Send_Config2@data& (0+255),b
 12460  011042  0E01               	movlw	1
 12461  011044  EC0C  F0B7         	call	_Send_Config2
 12462                           
 12463                           ;StringCommand.c: 367: Send_Config2(0b00000001, Aux2OFF);
 12464  011048  0EEE               	movlw	high _Aux2OFF
 12465  01104A  0101               	movlb	1	; () banked
 12466  01104C  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12467  01104E  0E21               	movlw	low _Aux2OFF
 12468  011050  0101               	movlb	1	; () banked
 12469  011052  6F19               	movwf	Send_Config2@data& (0+255),b
 12470  011054  0E01               	movlw	1
 12471  011056  EC0C  F0B7         	call	_Send_Config2
 12472                           
 12473                           ;StringCommand.c: 368: Send_Config2(0b00000001, Aux2OFF);
 12474  01105A  0EEE               	movlw	high _Aux2OFF
 12475  01105C  0101               	movlb	1	; () banked
 12476  01105E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12477  011060  0E21               	movlw	low _Aux2OFF
 12478  011062  0101               	movlb	1	; () banked
 12479  011064  6F19               	movwf	Send_Config2@data& (0+255),b
 12480  011066  0E01               	movlw	1
 12481  011068  EC0C  F0B7         	call	_Send_Config2
 12482                           
 12483                           ;StringCommand.c: 369: INTCONbits.GIE = 1;
 12484  01106C  8EF2               	bsf	intcon,7,c	;volatile
 12485                           
 12486                           ;StringCommand.c: 370: UARTstring("Christmas Tree White Lights Off");
 12487  01106E  0EF4               	movlw	high STR_142
 12488  011070  0101               	movlb	1	; () banked
 12489  011072  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12490  011074  0E45               	movlw	low STR_142
 12491  011076  0101               	movlb	1	; () banked
 12492  011078  6F19               	movwf	UARTstring@data& (0+255),b
 12493  01107A  EC36  F0B3         	call	_UARTstring	;wreg free
 12494                           
 12495                           ;StringCommand.c: 371: LCDdisplayFeedback("XMAS White Off");
 12496  01107E  0EFB               	movlw	high STR_143
 12497  011080  0101               	movlb	1	; () banked
 12498  011082  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12499  011084  0EBB               	movlw	low STR_143
 12500  011086  0101               	movlb	1	; () banked
 12501  011088  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12502  01108A  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 12503                           
 12504                           ;StringCommand.c: 372: }
 12505  01108E  EF62  F094         	goto	l590
 12506  011092                     l12642:
 12507                           
 12508                           ;StringCommand.c: 373: else
 12509                           ;StringCommand.c: 374: {
 12510                           ;StringCommand.c: 375: UARTstring("Christmas What???");
 12511  011092  0EF8               	movlw	high STR_144
 12512  011094  0101               	movlb	1	; () banked
 12513  011096  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12514  011098  0E70               	movlw	low STR_144
 12515  01109A  0101               	movlb	1	; () banked
 12516  01109C  6F19               	movwf	UARTstring@data& (0+255),b
 12517  01109E  EC36  F0B3         	call	_UARTstring	;wreg free
 12518                           
 12519                           ;StringCommand.c: 376: LCDdisplayFeedback("XMAS What???");
 12520  0110A2  0EFD               	movlw	high STR_145
 12521  0110A4  0101               	movlb	1	; () banked
 12522  0110A6  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12523  0110A8  0E1F               	movlw	low STR_145
 12524  0110AA  0101               	movlb	1	; () banked
 12525  0110AC  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12526  0110AE  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 12527  0110B2  EF62  F094         	goto	l590
 12528  0110B6                     l12644:
 12529                           
 12530                           ;StringCommand.c: 379: else
 12531                           ;StringCommand.c: 380: {
 12532                           ;StringCommand.c: 381: UARTstring("Christmas tree Help Menu\r\n\n");
 12533  0110B6  0EF4               	movlw	high STR_146
 12534  0110B8  0101               	movlb	1	; () banked
 12535  0110BA  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12536  0110BC  0EF9               	movlw	low STR_146
 12537  0110BE  0101               	movlb	1	; () banked
 12538  0110C0  6F19               	movwf	UARTstring@data& (0+255),b
 12539  0110C2  EC36  F0B3         	call	_UARTstring	;wreg free
 12540                           
 12541                           ;StringCommand.c: 382: UARTstring("Devices:\r\n");
 12542  0110C6  0EFD               	movlw	high STR_59
 12543  0110C8  0101               	movlb	1	; () banked
 12544  0110CA  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12545  0110CC  0ECF               	movlw	low STR_59
 12546  0110CE  0101               	movlb	1	; () banked
 12547  0110D0  6F19               	movwf	UARTstring@data& (0+255),b
 12548  0110D2  EC36  F0B3         	call	_UARTstring	;wreg free
 12549                           
 12550                           ;StringCommand.c: 383: UARTstring("white lights\r\n");
 12551  0110D6  0EFB               	movlw	high STR_148
 12552  0110D8  0101               	movlb	1	; () banked
 12553  0110DA  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12554  0110DC  0E8E               	movlw	low STR_148
 12555  0110DE  0101               	movlb	1	; () banked
 12556  0110E0  6F19               	movwf	UARTstring@data& (0+255),b
 12557  0110E2  EC36  F0B3         	call	_UARTstring	;wreg free
 12558                           
 12559                           ;StringCommand.c: 384: UARTstring("colored lights\r\n\n");
 12560  0110E6  0EF8               	movlw	high STR_149
 12561  0110E8  0101               	movlb	1	; () banked
 12562  0110EA  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12563  0110EC  0E4C               	movlw	low STR_149
 12564  0110EE  0101               	movlb	1	; () banked
 12565  0110F0  6F19               	movwf	UARTstring@data& (0+255),b
 12566  0110F2  EC36  F0B3         	call	_UARTstring	;wreg free
 12567                           
 12568                           ;StringCommand.c: 385: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 12569  0110F6  0EEF               	movlw	high STR_62
 12570  0110F8  0101               	movlb	1	; () banked
 12571  0110FA  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12572  0110FC  0E73               	movlw	low STR_62
 12573  0110FE  0101               	movlb	1	; () banked
 12574  011100  6F19               	movwf	UARTstring@data& (0+255),b
 12575  011102  EC36  F0B3         	call	_UARTstring	;wreg free
 12576                           
 12577                           ;StringCommand.c: 386: UARTstring("i.e. Christmas Colored lights = On\r\n");
 12578  011106  0EF2               	movlw	high STR_151
 12579  011108  0101               	movlb	1	; () banked
 12580  01110A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12581  01110C  0ECC               	movlw	low STR_151
 12582  01110E  0101               	movlb	1	; () banked
 12583  011110  6F19               	movwf	UARTstring@data& (0+255),b
 12584  011112  EC36  F0B3         	call	_UARTstring	;wreg free
 12585                           
 12586                           ;StringCommand.c: 387: LCD_Scroll("XMAS Menu");
 12587  011116  0EFE               	movlw	high STR_152
 12588  011118  0101               	movlb	1	; () banked
 12589  01111A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12590  01111C  0E6C               	movlw	low STR_152
 12591  01111E  0101               	movlb	1	; () banked
 12592  011120  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12593  011122  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 12594                           
 12595                           ;StringCommand.c: 388: LCD_Scroll("Devices:");
 12596  011126  0EFE               	movlw	high STR_65
 12597  011128  0101               	movlb	1	; () banked
 12598  01112A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12599  01112C  0E9D               	movlw	low STR_65
 12600  01112E  0101               	movlb	1	; () banked
 12601  011130  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12602  011132  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 12603                           
 12604                           ;StringCommand.c: 389: LCD_Scroll("white");
 12605  011136  0EFF               	movlw	high STR_129
 12606  011138  0101               	movlb	1	; () banked
 12607  01113A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12608  01113C  0E9C               	movlw	low STR_129
 12609  01113E  0101               	movlb	1	; () banked
 12610  011140  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12611  011142  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 12612                           
 12613                           ;StringCommand.c: 390: LCD_Scroll("color");
 12614  011146  0EFF               	movlw	high STR_128
 12615  011148  0101               	movlb	1	; () banked
 12616  01114A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12617  01114C  0EA2               	movlw	low STR_128
 12618  01114E  0101               	movlb	1	; () banked
 12619  011150  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12620  011152  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 12621  011156  EF62  F094         	goto	l590
 12622  01115A                     l12654:
 12623                           
 12624                           ;StringCommand.c: 394: else if (StartsWith(Input, "red"))
 12625  01115A  0101               	movlb	1	; () banked
 12626  01115C  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 12627  011160  0101               	movlb	1	; () banked
 12628  011162  C188  F10E         	movff	Command@Input,StartsWith@This
 12629  011166  0EF4               	movlw	high (STR_204+25)
 12630  011168  0101               	movlb	1	; () banked
 12631  01116A  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 12632  01116C  0ED8               	movlw	low (STR_204+25)
 12633  01116E  0101               	movlb	1	; () banked
 12634  011170  6F10               	movwf	StartsWith@That& (0+255),b
 12635  011172  ECCA  F0B4         	call	_StartsWith	;wreg free
 12636  011176  0900               	iorlw	0
 12637  011178  B4D8               	btfsc	status,2,c
 12638  01117A  D151               	goto	l12706
 12639                           
 12640                           ;StringCommand.c: 395: {
 12641                           ;StringCommand.c: 396: if (!StringContains(Input, "?"))
 12642  01117C  0101               	movlb	1	; () banked
 12643  01117E  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12644  011182  0101               	movlb	1	; () banked
 12645  011184  C188  F10E         	movff	Command@Input,StringContains@This
 12646  011188  0EFA               	movlw	high (STR_81+14)
 12647  01118A  0101               	movlb	1	; () banked
 12648  01118C  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12649  01118E  0E3D               	movlw	low (STR_81+14)
 12650  011190  0101               	movlb	1	; () banked
 12651  011192  6F10               	movwf	StringContains@That& (0+255),b
 12652  011194  EC55  F0B8         	call	_StringContains	;wreg free
 12653  011198  0900               	iorlw	0
 12654  01119A  A4D8               	btfss	status,2,c
 12655  01119C  D10E               	goto	l12698
 12656                           
 12657                           ;StringCommand.c: 397: {
 12658                           ;StringCommand.c: 398: if (StartsWith(Input, "redled") || StartsWith(Input, "redledbrigh
      +                          tness"))
 12659  01119E  0101               	movlb	1	; () banked
 12660  0111A0  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 12661  0111A4  0101               	movlb	1	; () banked
 12662  0111A6  C188  F10E         	movff	Command@Input,StartsWith@This
 12663  0111AA  0EFF               	movlw	high STR_158
 12664  0111AC  0101               	movlb	1	; () banked
 12665  0111AE  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 12666  0111B0  0E7B               	movlw	low STR_158
 12667  0111B2  0101               	movlb	1	; () banked
 12668  0111B4  6F10               	movwf	StartsWith@That& (0+255),b
 12669  0111B6  ECCA  F0B4         	call	_StartsWith	;wreg free
 12670  0111BA  0900               	iorlw	0
 12671  0111BC  A4D8               	btfss	status,2,c
 12672  0111BE  D011               	goto	l12662
 12673  0111C0  0101               	movlb	1	; () banked
 12674  0111C2  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 12675  0111C6  0101               	movlb	1	; () banked
 12676  0111C8  C188  F10E         	movff	Command@Input,StartsWith@This
 12677  0111CC  0EF9               	movlw	high STR_159
 12678  0111CE  0101               	movlb	1	; () banked
 12679  0111D0  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 12680  0111D2  0ECB               	movlw	low STR_159
 12681  0111D4  0101               	movlb	1	; () banked
 12682  0111D6  6F10               	movwf	StartsWith@That& (0+255),b
 12683  0111D8  ECCA  F0B4         	call	_StartsWith	;wreg free
 12684  0111DC  0900               	iorlw	0
 12685  0111DE  B4D8               	btfsc	status,2,c
 12686  0111E0  D0DA               	goto	l12696
 12687  0111E2                     l12662:
 12688                           
 12689                           ;StringCommand.c: 399: {
 12690                           ;StringCommand.c: 400: if (!StringContains(Input, "="))
 12691  0111E2  0101               	movlb	1	; () banked
 12692  0111E4  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12693  0111E8  0101               	movlb	1	; () banked
 12694  0111EA  C188  F10E         	movff	Command@Input,StringContains@This
 12695  0111EE  0EFD               	movlw	high (STR_199+11)
 12696  0111F0  0101               	movlb	1	; () banked
 12697  0111F2  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12698  0111F4  0E1D               	movlw	low (STR_199+11)
 12699  0111F6  0101               	movlb	1	; () banked
 12700  0111F8  6F10               	movwf	StringContains@That& (0+255),b
 12701  0111FA  EC55  F0B8         	call	_StringContains	;wreg free
 12702  0111FE  0900               	iorlw	0
 12703  011200  A4D8               	btfss	status,2,c
 12704  011202  D008               	goto	l12666
 12705                           
 12706                           ;StringCommand.c: 401: {
 12707                           ;StringCommand.c: 402: UARTstring("there is no question mark\r\n");
 12708  011204  0EF5               	movlw	high STR_161
 12709  011206  0101               	movlb	1	; () banked
 12710  011208  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12711  01120A  0E31               	movlw	low STR_161
 12712  01120C  0101               	movlb	1	; () banked
 12713  01120E  6F19               	movwf	UARTstring@data& (0+255),b
 12714  011210  EC36  F0B3         	call	_UARTstring	;wreg free
 12715  011214                     l12666:
 12716                           
 12717                           ;StringCommand.c: 403: }
 12718                           ;StringCommand.c: 404: tempLONG = GetEnteredNumber(Input);
 12719  011214  0101               	movlb	1	; () banked
 12720  011216  C189  F11B         	movff	Command@Input+1,GetEnteredNumber@This+1
 12721  01121A  0101               	movlb	1	; () banked
 12722  01121C  C188  F11A         	movff	Command@Input,GetEnteredNumber@This
 12723  011220  EC6A  F0A6         	call	_GetEnteredNumber	;wreg free
 12724  011224  C11A  F5DE         	movff	?_GetEnteredNumber,Command@tempLONG
 12725  011228  C11B  F5DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 12726  01122C  C11C  F5E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 12727  011230  C11D  F5E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 12728                           
 12729                           ;StringCommand.c: 405: if(tempLONG < 1000 && tempLONG >= 0 )
 12730  011234  0105               	movlb	5	; () banked
 12731  011236  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 12732  011238  0A80               	xorlw	128
 12733  01123A  0F80               	addlw	128
 12734  01123C  E10B               	bnz	u16525
 12735  01123E  0E00               	movlw	0
 12736  011240  0105               	movlb	5	; () banked
 12737  011242  5DE0               	subwf	(Command@tempLONG+2)& (0+255),w,b
 12738  011244  E107               	bnz	u16525
 12739  011246  0E03               	movlw	3
 12740  011248  0105               	movlb	5	; () banked
 12741  01124A  5DDF               	subwf	(Command@tempLONG+1)& (0+255),w,b
 12742  01124C  E103               	bnz	u16525
 12743  01124E  0EE8               	movlw	232
 12744  011250  0105               	movlb	5	; () banked
 12745  011252  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 12746  011254                     u16525:
 12747  011254  B0D8               	btfsc	status,0,c
 12748  011256  D007               	goto	l12674
 12749                           
 12750                           ; BSR set to: 5
 12751  011258  0105               	movlb	5	; () banked
 12752  01125A  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 12753  01125C  D004               	goto	l12674
 12754                           
 12755                           ; BSR set to: 5
 12756                           ;StringCommand.c: 406: {
 12757                           ;StringCommand.c: 407: duty = (int)tempLONG;
 12758  01125E  C5DE  F5DC         	movff	Command@tempLONG,Command@duty
 12759  011262  C5DF  F5DD         	movff	Command@tempLONG+1,Command@duty+1
 12760  011266                     l12674:
 12761                           
 12762                           ; BSR set to: 5
 12763                           ;StringCommand.c: 408: }
 12764                           ;StringCommand.c: 409: if (tempLONG == 2147483645L)
 12765  011266  0105               	movlb	5	; () banked
 12766  011268  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 12767  01126A  0EFD               	movlw	253
 12768  01126C  B4D8               	btfsc	status,2,c
 12769  01126E  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 12770  011270  B4D8               	btfsc	status,2,c
 12771  011272  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 12772  011274  0E7F               	movlw	127
 12773  011276  B4D8               	btfsc	status,2,c
 12774  011278  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 12775  01127A  A4D8               	btfss	status,2,c
 12776  01127C  D012               	goto	l12678
 12777                           
 12778                           ; BSR set to: 5
 12779                           ;StringCommand.c: 410: {
 12780                           ;StringCommand.c: 411: UARTstring("Error: No number entered\r\n");
 12781  01127E  0EF5               	movlw	high STR_162
 12782  011280  0101               	movlb	1	; () banked
 12783  011282  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12784  011284  0E85               	movlw	low STR_162
 12785  011286  0101               	movlb	1	; () banked
 12786  011288  6F19               	movwf	UARTstring@data& (0+255),b
 12787  01128A  EC36  F0B3         	call	_UARTstring	;wreg free
 12788                           
 12789                           ;StringCommand.c: 412: LCDdisplayFeedback("ERR: no number");
 12790  01128E  0EFC               	movlw	high STR_163
 12791  011290  0101               	movlb	1	; () banked
 12792  011292  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12793  011294  0E33               	movlw	low STR_163
 12794  011296  0101               	movlb	1	; () banked
 12795  011298  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12796  01129A  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 12797                           
 12798                           ;StringCommand.c: 413: }
 12799  01129E  EF62  F094         	goto	l590
 12800  0112A2                     l12678:
 12801                           
 12802                           ;StringCommand.c: 414: else if (duty > 100)
 12803  0112A2  0105               	movlb	5	; () banked
 12804  0112A4  51DD               	movf	(Command@duty+1)& (0+255),w,b
 12805  0112A6  0A80               	xorlw	128
 12806  0112A8  0F80               	addlw	-128
 12807  0112AA  0E65               	movlw	101
 12808  0112AC  B4D8               	btfsc	status,2,c
 12809  0112AE  5DDC               	subwf	Command@duty& (0+255),w,b
 12810  0112B0  A0D8               	btfss	status,0,c
 12811  0112B2  D012               	goto	l12682
 12812                           
 12813                           ; BSR set to: 5
 12814                           ;StringCommand.c: 415: {
 12815                           ;StringCommand.c: 416: UARTstring("Invalid Dutycycle: Greater than 100\r\n");
 12816  0112B4  0EF2               	movlw	high STR_164
 12817  0112B6  0101               	movlb	1	; () banked
 12818  0112B8  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12819  0112BA  0E5A               	movlw	low STR_164
 12820  0112BC  0101               	movlb	1	; () banked
 12821  0112BE  6F19               	movwf	UARTstring@data& (0+255),b
 12822  0112C0  EC36  F0B3         	call	_UARTstring	;wreg free
 12823                           
 12824                           ;StringCommand.c: 417: LCDdisplayFeedback("ERR: Duty > 100");
 12825  0112C4  0EFA               	movlw	high STR_165
 12826  0112C6  0101               	movlb	1	; () banked
 12827  0112C8  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12828  0112CA  0E1F               	movlw	low STR_165
 12829  0112CC  0101               	movlb	1	; () banked
 12830  0112CE  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12831  0112D0  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 12832                           
 12833                           ;StringCommand.c: 418: }
 12834  0112D4  EF62  F094         	goto	l590
 12835  0112D8                     l12682:
 12836                           
 12837                           ;StringCommand.c: 419: else if (duty < 0)
 12838  0112D8  0105               	movlb	5	; () banked
 12839  0112DA  51DD               	movf	(Command@duty+1)& (0+255),w,b
 12840  0112DC  0A80               	xorlw	128
 12841  0112DE  6EF3               	movwf	prodl,c
 12842  0112E0  0E80               	movlw	128
 12843  0112E2  5CF3               	subwf	prodl,w,c
 12844  0112E4  0E00               	movlw	0
 12845  0112E6  B4D8               	btfsc	status,2,c
 12846  0112E8  5DDC               	subwf	Command@duty& (0+255),w,b
 12847  0112EA  B0D8               	btfsc	status,0,c
 12848  0112EC  D012               	goto	l12686
 12849                           
 12850                           ; BSR set to: 5
 12851                           ;StringCommand.c: 420: {
 12852                           ;StringCommand.c: 421: UARTstring("Invalid Dutycycle: Less than 0\r\n");
 12853  0112EE  0EF3               	movlw	high STR_166
 12854  0112F0  0101               	movlb	1	; () banked
 12855  0112F2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12856  0112F4  0EA2               	movlw	low STR_166
 12857  0112F6  0101               	movlb	1	; () banked
 12858  0112F8  6F19               	movwf	UARTstring@data& (0+255),b
 12859  0112FA  EC36  F0B3         	call	_UARTstring	;wreg free
 12860                           
 12861                           ;StringCommand.c: 422: LCDdisplayFeedback("ERR: Duty < 0");
 12862  0112FE  0EFC               	movlw	high STR_167
 12863  011300  0101               	movlb	1	; () banked
 12864  011302  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12865  011304  0E5F               	movlw	low STR_167
 12866  011306  0101               	movlb	1	; () banked
 12867  011308  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12868  01130A  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 12869                           
 12870                           ;StringCommand.c: 423: }
 12871  01130E  EF62  F094         	goto	l590
 12872  011312                     l12686:
 12873                           
 12874                           ;StringCommand.c: 424: else
 12875                           ;StringCommand.c: 425: {
 12876                           ;StringCommand.c: 426: SetDuty(duty);
 12877  011312  0105               	movlb	5	; () banked
 12878  011314  51DC               	movf	Command@duty& (0+255),w,b
 12879  011316  EC61  F0B1         	call	_SetDuty
 12880                           
 12881                           ;StringCommand.c: 427: sprintf(buf, "Dutycycle set to %d\r\n", duty);
 12882  01131A  0105               	movlb	5	; () banked
 12883  01131C  0E05               	movlw	high Command@buf
 12884  01131E  0101               	movlb	1	; () banked
 12885  011320  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 12886  011322  0105               	movlb	5	; () banked
 12887  011324  0E00               	movlw	low Command@buf
 12888  011326  0101               	movlb	1	; () banked
 12889  011328  6F24               	movwf	sprintf@sp& (0+255),b
 12890  01132A  0EF6               	movlw	high STR_168
 12891  01132C  0101               	movlb	1	; () banked
 12892  01132E  6F27               	movwf	(sprintf@f+1)& (0+255),b
 12893  011330  0EF7               	movlw	low STR_168
 12894  011332  0101               	movlb	1	; () banked
 12895  011334  6F26               	movwf	sprintf@f& (0+255),b
 12896  011336  C5DC  F128         	movff	Command@duty,?_sprintf+4
 12897  01133A  C5DD  F129         	movff	Command@duty+1,?_sprintf+5
 12898  01133E  EC6C  F094         	call	_sprintf	;wreg free
 12899                           
 12900                           ;StringCommand.c: 428: UARTstring(buf);
 12901  011342  0105               	movlb	5	; () banked
 12902  011344  0E05               	movlw	high Command@buf
 12903  011346  0101               	movlb	1	; () banked
 12904  011348  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12905  01134A  0105               	movlb	5	; () banked
 12906  01134C  0E00               	movlw	low Command@buf
 12907  01134E  0101               	movlb	1	; () banked
 12908  011350  6F19               	movwf	UARTstring@data& (0+255),b
 12909  011352  EC36  F0B3         	call	_UARTstring	;wreg free
 12910                           
 12911                           ;StringCommand.c: 429: sprintf(buf, "Duty set to %d", duty);
 12912  011356  0105               	movlb	5	; () banked
 12913  011358  0E05               	movlw	high Command@buf
 12914  01135A  0101               	movlb	1	; () banked
 12915  01135C  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 12916  01135E  0105               	movlb	5	; () banked
 12917  011360  0E00               	movlw	low Command@buf
 12918  011362  0101               	movlb	1	; () banked
 12919  011364  6F24               	movwf	sprintf@sp& (0+255),b
 12920  011366  0EFB               	movlw	high STR_169
 12921  011368  0101               	movlb	1	; () banked
 12922  01136A  6F27               	movwf	(sprintf@f+1)& (0+255),b
 12923  01136C  0EAC               	movlw	low STR_169
 12924  01136E  0101               	movlb	1	; () banked
 12925  011370  6F26               	movwf	sprintf@f& (0+255),b
 12926  011372  C5DC  F128         	movff	Command@duty,?_sprintf+4
 12927  011376  C5DD  F129         	movff	Command@duty+1,?_sprintf+5
 12928  01137A  EC6C  F094         	call	_sprintf	;wreg free
 12929                           
 12930                           ;StringCommand.c: 430: LCDdisplayFeedback(buf);
 12931  01137E  0105               	movlb	5	; () banked
 12932  011380  0E05               	movlw	high Command@buf
 12933  011382  0101               	movlb	1	; () banked
 12934  011384  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12935  011386  0105               	movlb	5	; () banked
 12936  011388  0E00               	movlw	low Command@buf
 12937  01138A  0101               	movlb	1	; () banked
 12938  01138C  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12939  01138E  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 12940  011392  EF62  F094         	goto	l590
 12941  011396                     l12696:
 12942                           
 12943                           ;StringCommand.c: 433: else
 12944                           ;StringCommand.c: 434: {
 12945                           ;StringCommand.c: 435: UARTstring("redled what??? Do you mean Red Led Brightness???");
 12946  011396  0EF1               	movlw	high STR_170
 12947  011398  0101               	movlb	1	; () banked
 12948  01139A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12949  01139C  0E45               	movlw	low STR_170
 12950  01139E  0101               	movlb	1	; () banked
 12951  0113A0  6F19               	movwf	UARTstring@data& (0+255),b
 12952  0113A2  EC36  F0B3         	call	_UARTstring	;wreg free
 12953                           
 12954                           ;StringCommand.c: 436: LCDdisplayFeedback("Red LED What???");
 12955  0113A6  0EFA               	movlw	high STR_171
 12956  0113A8  0101               	movlb	1	; () banked
 12957  0113AA  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12958  0113AC  0E5F               	movlw	low STR_171
 12959  0113AE  0101               	movlb	1	; () banked
 12960  0113B0  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12961  0113B2  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 12962  0113B6  EF62  F094         	goto	l590
 12963  0113BA                     l12698:
 12964                           
 12965                           ;StringCommand.c: 439: else
 12966                           ;StringCommand.c: 440: {
 12967                           ;StringCommand.c: 441: UARTstring("Red LED PWM Help Menu\r\n\n");
 12968  0113BA  0EF6               	movlw	high STR_172
 12969  0113BC  0101               	movlb	1	; () banked
 12970  0113BE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12971  0113C0  0E09               	movlw	low STR_172
 12972  0113C2  0101               	movlb	1	; () banked
 12973  0113C4  6F19               	movwf	UARTstring@data& (0+255),b
 12974  0113C6  EC36  F0B3         	call	_UARTstring	;wreg free
 12975                           
 12976                           ;StringCommand.c: 442: UARTstring("To set te PWM brightness enter 'Red LED brightness = 
      +                          dutycycle'\r\n");
 12977  0113CA  0EEF               	movlw	high STR_173
 12978  0113CC  0101               	movlb	1	; () banked
 12979  0113CE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12980  0113D0  0EB7               	movlw	low STR_173
 12981  0113D2  0101               	movlb	1	; () banked
 12982  0113D4  6F19               	movwf	UARTstring@data& (0+255),b
 12983  0113D6  EC36  F0B3         	call	_UARTstring	;wreg free
 12984                           
 12985                           ;StringCommand.c: 443: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 12986  0113DA  0EF2               	movlw	high STR_174
 12987  0113DC  0101               	movlb	1	; () banked
 12988  0113DE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12989  0113E0  0E30               	movlw	low STR_174
 12990  0113E2  0101               	movlb	1	; () banked
 12991  0113E4  6F19               	movwf	UARTstring@data& (0+255),b
 12992  0113E6  EC36  F0B3         	call	_UARTstring	;wreg free
 12993                           
 12994                           ;StringCommand.c: 444: LCD_Scroll("Red LED Contrast");
 12995  0113EA  0EF9               	movlw	high STR_175
 12996  0113EC  0101               	movlb	1	; () banked
 12997  0113EE  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12998  0113F0  0EED               	movlw	low STR_175
 12999  0113F2  0101               	movlb	1	; () banked
 13000  0113F4  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13001  0113F6  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 13002                           
 13003                           ;StringCommand.c: 445: LCD_Scroll("Commands:");
 13004  0113FA  0EFE               	movlw	high STR_176
 13005  0113FC  0101               	movlb	1	; () banked
 13006  0113FE  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13007  011400  0E4E               	movlw	low STR_176
 13008  011402  0101               	movlb	1	; () banked
 13009  011404  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13010  011406  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 13011                           
 13012                           ;StringCommand.c: 446: LCD_Scroll("Red LED=#");
 13013  01140A  0EFE               	movlw	high STR_177
 13014  01140C  0101               	movlb	1	; () banked
 13015  01140E  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13016  011410  0E3A               	movlw	low STR_177
 13017  011412  0101               	movlb	1	; () banked
 13018  011414  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13019  011416  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 13020  01141A  EF62  F094         	goto	l590
 13021  01141E                     l12706:
 13022                           
 13023                           ;StringCommand.c: 450: else if (StartsWith(Input, "contrast"))
 13024  01141E  0101               	movlb	1	; () banked
 13025  011420  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 13026  011424  0101               	movlb	1	; () banked
 13027  011426  C188  F10E         	movff	Command@Input,StartsWith@This
 13028  01142A  0EFE               	movlw	high STR_178
 13029  01142C  0101               	movlb	1	; () banked
 13030  01142E  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 13031  011430  0ED3               	movlw	low STR_178
 13032  011432  0101               	movlb	1	; () banked
 13033  011434  6F10               	movwf	StartsWith@That& (0+255),b
 13034  011436  ECCA  F0B4         	call	_StartsWith	;wreg free
 13035  01143A  0900               	iorlw	0
 13036  01143C  B4D8               	btfsc	status,2,c
 13037  01143E  D11D               	goto	l12752
 13038                           
 13039                           ;StringCommand.c: 451: {
 13040                           ;StringCommand.c: 452: if (!StringContains(Input, "?"))
 13041  011440  0101               	movlb	1	; () banked
 13042  011442  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13043  011446  0101               	movlb	1	; () banked
 13044  011448  C188  F10E         	movff	Command@Input,StringContains@This
 13045  01144C  0EFA               	movlw	high (STR_81+14)
 13046  01144E  0101               	movlb	1	; () banked
 13047  011450  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13048  011452  0E3D               	movlw	low (STR_81+14)
 13049  011454  0101               	movlb	1	; () banked
 13050  011456  6F10               	movwf	StringContains@That& (0+255),b
 13051  011458  EC55  F0B8         	call	_StringContains	;wreg free
 13052  01145C  0900               	iorlw	0
 13053  01145E  A4D8               	btfss	status,2,c
 13054  011460  D0DA               	goto	l12744
 13055                           
 13056                           ;StringCommand.c: 453: {
 13057                           ;StringCommand.c: 454: if (!StringContains(Input, "="))
 13058  011462  0101               	movlb	1	; () banked
 13059  011464  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13060  011468  0101               	movlb	1	; () banked
 13061  01146A  C188  F10E         	movff	Command@Input,StringContains@This
 13062  01146E  0EFD               	movlw	high (STR_199+11)
 13063  011470  0101               	movlb	1	; () banked
 13064  011472  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13065  011474  0E1D               	movlw	low (STR_199+11)
 13066  011476  0101               	movlb	1	; () banked
 13067  011478  6F10               	movwf	StringContains@That& (0+255),b
 13068  01147A  EC55  F0B8         	call	_StringContains	;wreg free
 13069  01147E  0900               	iorlw	0
 13070  011480  A4D8               	btfss	status,2,c
 13071  011482  D008               	goto	l12714
 13072                           
 13073                           ;StringCommand.c: 455: {
 13074                           ;StringCommand.c: 456: StringAddEqual(Input);
 13075  011484  0101               	movlb	1	; () banked
 13076  011486  C189  F11E         	movff	Command@Input+1,StringAddEqual@Input+1
 13077  01148A  0101               	movlb	1	; () banked
 13078  01148C  C188  F11D         	movff	Command@Input,StringAddEqual@Input
 13079  011490  EC68  F0A7         	call	_StringAddEqual	;wreg free
 13080  011494                     l12714:
 13081                           
 13082                           ;StringCommand.c: 457: }
 13083                           ;StringCommand.c: 458: tempLONG = GetEnteredNumber(Input);
 13084  011494  0101               	movlb	1	; () banked
 13085  011496  C189  F11B         	movff	Command@Input+1,GetEnteredNumber@This+1
 13086  01149A  0101               	movlb	1	; () banked
 13087  01149C  C188  F11A         	movff	Command@Input,GetEnteredNumber@This
 13088  0114A0  EC6A  F0A6         	call	_GetEnteredNumber	;wreg free
 13089  0114A4  C11A  F5DE         	movff	?_GetEnteredNumber,Command@tempLONG
 13090  0114A8  C11B  F5DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 13091  0114AC  C11C  F5E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 13092  0114B0  C11D  F5E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 13093                           
 13094                           ;StringCommand.c: 459: if(tempLONG < 1000 && tempLONG >= 0 )
 13095  0114B4  0105               	movlb	5	; () banked
 13096  0114B6  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 13097  0114B8  0A80               	xorlw	128
 13098  0114BA  0F80               	addlw	128
 13099  0114BC  E10B               	bnz	u16605
 13100  0114BE  0E00               	movlw	0
 13101  0114C0  0105               	movlb	5	; () banked
 13102  0114C2  5DE0               	subwf	(Command@tempLONG+2)& (0+255),w,b
 13103  0114C4  E107               	bnz	u16605
 13104  0114C6  0E03               	movlw	3
 13105  0114C8  0105               	movlb	5	; () banked
 13106  0114CA  5DDF               	subwf	(Command@tempLONG+1)& (0+255),w,b
 13107  0114CC  E103               	bnz	u16605
 13108  0114CE  0EE8               	movlw	232
 13109  0114D0  0105               	movlb	5	; () banked
 13110  0114D2  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 13111  0114D4                     u16605:
 13112  0114D4  B0D8               	btfsc	status,0,c
 13113  0114D6  D007               	goto	l12722
 13114                           
 13115                           ; BSR set to: 5
 13116  0114D8  0105               	movlb	5	; () banked
 13117  0114DA  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 13118  0114DC  D004               	goto	l12722
 13119                           
 13120                           ; BSR set to: 5
 13121                           ;StringCommand.c: 460: {
 13122                           ;StringCommand.c: 461: contrast = (int)tempLONG;
 13123  0114DE  C5DE  F5D8         	movff	Command@tempLONG,Command@contrast
 13124  0114E2  C5DF  F5D9         	movff	Command@tempLONG+1,Command@contrast+1
 13125  0114E6                     l12722:
 13126                           
 13127                           ; BSR set to: 5
 13128                           ;StringCommand.c: 462: }
 13129                           ;StringCommand.c: 463: if (tempLONG == 2147483645L)
 13130  0114E6  0105               	movlb	5	; () banked
 13131  0114E8  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 13132  0114EA  0EFD               	movlw	253
 13133  0114EC  B4D8               	btfsc	status,2,c
 13134  0114EE  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 13135  0114F0  B4D8               	btfsc	status,2,c
 13136  0114F2  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 13137  0114F4  0E7F               	movlw	127
 13138  0114F6  B4D8               	btfsc	status,2,c
 13139  0114F8  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 13140  0114FA  A4D8               	btfss	status,2,c
 13141  0114FC  D012               	goto	l12726
 13142                           
 13143                           ; BSR set to: 5
 13144                           ;StringCommand.c: 464: {
 13145                           ;StringCommand.c: 465: UARTstring("Error: No number entered\r\n");
 13146  0114FE  0EF5               	movlw	high STR_162
 13147  011500  0101               	movlb	1	; () banked
 13148  011502  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13149  011504  0E85               	movlw	low STR_162
 13150  011506  0101               	movlb	1	; () banked
 13151  011508  6F19               	movwf	UARTstring@data& (0+255),b
 13152  01150A  EC36  F0B3         	call	_UARTstring	;wreg free
 13153                           
 13154                           ;StringCommand.c: 466: LCDdisplayFeedback("ERR: No number");
 13155  01150E  0EFC               	movlw	high STR_182
 13156  011510  0101               	movlb	1	; () banked
 13157  011512  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13158  011514  0E24               	movlw	low STR_182
 13159  011516  0101               	movlb	1	; () banked
 13160  011518  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13161  01151A  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 13162                           
 13163                           ;StringCommand.c: 467: }
 13164  01151E  EF62  F094         	goto	l590
 13165  011522                     l12726:
 13166                           
 13167                           ;StringCommand.c: 468: else if (contrast > 100)
 13168  011522  0105               	movlb	5	; () banked
 13169  011524  51D9               	movf	(Command@contrast+1)& (0+255),w,b
 13170  011526  0A80               	xorlw	128
 13171  011528  0F80               	addlw	-128
 13172  01152A  0E65               	movlw	101
 13173  01152C  B4D8               	btfsc	status,2,c
 13174  01152E  5DD8               	subwf	Command@contrast& (0+255),w,b
 13175  011530  A0D8               	btfss	status,0,c
 13176  011532  D012               	goto	l12730
 13177                           
 13178                           ; BSR set to: 5
 13179                           ;StringCommand.c: 469: {
 13180                           ;StringCommand.c: 470: UARTstring("Invalid Contrast Duty cycle: Greater than 100\r\n");
 13181  011534  0EF1               	movlw	high STR_183
 13182  011536  0101               	movlb	1	; () banked
 13183  011538  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13184  01153A  0E76               	movlw	low STR_183
 13185  01153C  0101               	movlb	1	; () banked
 13186  01153E  6F19               	movwf	UARTstring@data& (0+255),b
 13187  011540  EC36  F0B3         	call	_UARTstring	;wreg free
 13188                           
 13189                           ;StringCommand.c: 471: LCDdisplayFeedback("ERR: CNST > 100");
 13190  011544  0EFA               	movlw	high STR_184
 13191  011546  0101               	movlb	1	; () banked
 13192  011548  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13193  01154A  0E0F               	movlw	low STR_184
 13194  01154C  0101               	movlb	1	; () banked
 13195  01154E  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13196  011550  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 13197                           
 13198                           ;StringCommand.c: 472: }
 13199  011554  EF62  F094         	goto	l590
 13200  011558                     l12730:
 13201                           
 13202                           ;StringCommand.c: 473: else if (contrast < 0)
 13203  011558  0105               	movlb	5	; () banked
 13204  01155A  51D9               	movf	(Command@contrast+1)& (0+255),w,b
 13205  01155C  0A80               	xorlw	128
 13206  01155E  6EF3               	movwf	prodl,c
 13207  011560  0E80               	movlw	128
 13208  011562  5CF3               	subwf	prodl,w,c
 13209  011564  0E00               	movlw	0
 13210  011566  B4D8               	btfsc	status,2,c
 13211  011568  5DD8               	subwf	Command@contrast& (0+255),w,b
 13212  01156A  B0D8               	btfsc	status,0,c
 13213  01156C  D012               	goto	l12734
 13214                           
 13215                           ; BSR set to: 5
 13216                           ;StringCommand.c: 474: {
 13217                           ;StringCommand.c: 475: UARTstring("Invalid Contrast Duty Cycle: Less than 0\r\n");
 13218  01156E  0EF2               	movlw	high STR_185
 13219  011570  0101               	movlb	1	; () banked
 13220  011572  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13221  011574  0E05               	movlw	low STR_185
 13222  011576  0101               	movlb	1	; () banked
 13223  011578  6F19               	movwf	UARTstring@data& (0+255),b
 13224  01157A  EC36  F0B3         	call	_UARTstring	;wreg free
 13225                           
 13226                           ;StringCommand.c: 476: LCDdisplayFeedback("ERR: CNST < 0");
 13227  01157E  0EFC               	movlw	high STR_186
 13228  011580  0101               	movlb	1	; () banked
 13229  011582  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13230  011584  0E51               	movlw	low STR_186
 13231  011586  0101               	movlb	1	; () banked
 13232  011588  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13233  01158A  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 13234                           
 13235                           ;StringCommand.c: 477: }
 13236  01158E  EF62  F094         	goto	l590
 13237  011592                     l12734:
 13238                           
 13239                           ;StringCommand.c: 478: else
 13240                           ;StringCommand.c: 479: {
 13241                           ;StringCommand.c: 480: SetContrast(contrast);
 13242  011592  0105               	movlb	5	; () banked
 13243  011594  51D8               	movf	Command@contrast& (0+255),w,b
 13244  011596  ECC3  F0AE         	call	_SetContrast
 13245                           
 13246                           ;StringCommand.c: 481: sprintf(buf, "Contrast Duty Cycle set to %d\r\n", contrast);
 13247  01159A  0105               	movlb	5	; () banked
 13248  01159C  0E05               	movlw	high Command@buf
 13249  01159E  0101               	movlb	1	; () banked
 13250  0115A0  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 13251  0115A2  0105               	movlb	5	; () banked
 13252  0115A4  0E00               	movlw	low Command@buf
 13253  0115A6  0101               	movlb	1	; () banked
 13254  0115A8  6F24               	movwf	sprintf@sp& (0+255),b
 13255  0115AA  0EF4               	movlw	high STR_187
 13256  0115AC  0101               	movlb	1	; () banked
 13257  0115AE  6F27               	movwf	(sprintf@f+1)& (0+255),b
 13258  0115B0  0E25               	movlw	low STR_187
 13259  0115B2  0101               	movlb	1	; () banked
 13260  0115B4  6F26               	movwf	sprintf@f& (0+255),b
 13261  0115B6  C5D8  F128         	movff	Command@contrast,?_sprintf+4
 13262  0115BA  C5D9  F129         	movff	Command@contrast+1,?_sprintf+5
 13263  0115BE  EC6C  F094         	call	_sprintf	;wreg free
 13264                           
 13265                           ;StringCommand.c: 482: UARTstring(buf);
 13266  0115C2  0105               	movlb	5	; () banked
 13267  0115C4  0E05               	movlw	high Command@buf
 13268  0115C6  0101               	movlb	1	; () banked
 13269  0115C8  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13270  0115CA  0105               	movlb	5	; () banked
 13271  0115CC  0E00               	movlw	low Command@buf
 13272  0115CE  0101               	movlb	1	; () banked
 13273  0115D0  6F19               	movwf	UARTstring@data& (0+255),b
 13274  0115D2  EC36  F0B3         	call	_UARTstring	;wreg free
 13275                           
 13276                           ;StringCommand.c: 483: sprintf(buf, "CNST set to %d", duty);
 13277  0115D6  0105               	movlb	5	; () banked
 13278  0115D8  0E05               	movlw	high Command@buf
 13279  0115DA  0101               	movlb	1	; () banked
 13280  0115DC  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 13281  0115DE  0105               	movlb	5	; () banked
 13282  0115E0  0E00               	movlw	low Command@buf
 13283  0115E2  0101               	movlb	1	; () banked
 13284  0115E4  6F24               	movwf	sprintf@sp& (0+255),b
 13285  0115E6  0EFB               	movlw	high STR_188
 13286  0115E8  0101               	movlb	1	; () banked
 13287  0115EA  6F27               	movwf	(sprintf@f+1)& (0+255),b
 13288  0115EC  0E9D               	movlw	low STR_188
 13289  0115EE  0101               	movlb	1	; () banked
 13290  0115F0  6F26               	movwf	sprintf@f& (0+255),b
 13291  0115F2  C5DC  F128         	movff	Command@duty,?_sprintf+4
 13292  0115F6  C5DD  F129         	movff	Command@duty+1,?_sprintf+5
 13293  0115FA  EC6C  F094         	call	_sprintf	;wreg free
 13294                           
 13295                           ;StringCommand.c: 484: LCDdisplayFeedback(buf);
 13296  0115FE  0105               	movlb	5	; () banked
 13297  011600  0E05               	movlw	high Command@buf
 13298  011602  0101               	movlb	1	; () banked
 13299  011604  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13300  011606  0105               	movlb	5	; () banked
 13301  011608  0E00               	movlw	low Command@buf
 13302  01160A  0101               	movlb	1	; () banked
 13303  01160C  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13304  01160E  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 13305  011612  EF62  F094         	goto	l590
 13306  011616                     l12744:
 13307                           
 13308                           ;StringCommand.c: 487: else
 13309                           ;StringCommand.c: 488: {
 13310                           ;StringCommand.c: 489: UARTstring("Contrast PWM Help Menu\r\n\n");
 13311  011616  0EF5               	movlw	high STR_189
 13312  011618  0101               	movlb	1	; () banked
 13313  01161A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13314  01161C  0ED5               	movlw	low STR_189
 13315  01161E  0101               	movlb	1	; () banked
 13316  011620  6F19               	movwf	UARTstring@data& (0+255),b
 13317  011622  EC36  F0B3         	call	_UARTstring	;wreg free
 13318                           
 13319                           ;StringCommand.c: 490: UARTstring("To set Contrast PWM brightness enter 'Contrast = duty
      +                          cycle'\r\n");
 13320  011626  0EEF               	movlw	high STR_190
 13321  011628  0101               	movlb	1	; () banked
 13322  01162A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13323  01162C  0EF9               	movlw	low STR_190
 13324  01162E  0101               	movlb	1	; () banked
 13325  011630  6F19               	movwf	UARTstring@data& (0+255),b
 13326  011632  EC36  F0B3         	call	_UARTstring	;wreg free
 13327                           
 13328                           ;StringCommand.c: 491: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 13329  011636  0EF2               	movlw	high STR_174
 13330  011638  0101               	movlb	1	; () banked
 13331  01163A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13332  01163C  0E30               	movlw	low STR_174
 13333  01163E  0101               	movlb	1	; () banked
 13334  011640  6F19               	movwf	UARTstring@data& (0+255),b
 13335  011642  EC36  F0B3         	call	_UARTstring	;wreg free
 13336                           
 13337                           ;StringCommand.c: 492: LCD_Scroll("LCD Contrast");
 13338  011646  0EFD               	movlw	high STR_192
 13339  011648  0101               	movlb	1	; () banked
 13340  01164A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13341  01164C  0E60               	movlw	low STR_192
 13342  01164E  0101               	movlb	1	; () banked
 13343  011650  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13344  011652  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 13345                           
 13346                           ;StringCommand.c: 493: LCD_Scroll("Commands:");
 13347  011656  0EFE               	movlw	high STR_176
 13348  011658  0101               	movlb	1	; () banked
 13349  01165A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13350  01165C  0E4E               	movlw	low STR_176
 13351  01165E  0101               	movlb	1	; () banked
 13352  011660  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13353  011662  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 13354                           
 13355                           ;StringCommand.c: 494: LCD_Scroll("Contrast#");
 13356  011666  0EFE               	movlw	high STR_194
 13357  011668  0101               	movlb	1	; () banked
 13358  01166A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13359  01166C  0E44               	movlw	low STR_194
 13360  01166E  0101               	movlb	1	; () banked
 13361  011670  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13362  011672  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 13363  011676  EF62  F094         	goto	l590
 13364  01167A                     l12752:
 13365                           
 13366                           ;StringCommand.c: 498: else if (StartsWith(Input, "adc"))
 13367  01167A  0101               	movlb	1	; () banked
 13368  01167C  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 13369  011680  0101               	movlb	1	; () banked
 13370  011682  C188  F10E         	movff	Command@Input,StartsWith@This
 13371  011686  0EFF               	movlw	high STR_195
 13372  011688  0101               	movlb	1	; () banked
 13373  01168A  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 13374  01168C  0EE1               	movlw	low STR_195
 13375  01168E  0101               	movlb	1	; () banked
 13376  011690  6F10               	movwf	StartsWith@That& (0+255),b
 13377  011692  ECCA  F0B4         	call	_StartsWith	;wreg free
 13378  011696  0900               	iorlw	0
 13379  011698  B4D8               	btfsc	status,2,c
 13380  01169A  D18E               	goto	l12812
 13381                           
 13382                           ;StringCommand.c: 499: {
 13383                           ;StringCommand.c: 500: if (!StringContains(Input, "?"))
 13384  01169C  0101               	movlb	1	; () banked
 13385  01169E  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13386  0116A2  0101               	movlb	1	; () banked
 13387  0116A4  C188  F10E         	movff	Command@Input,StringContains@This
 13388  0116A8  0EFA               	movlw	high (STR_81+14)
 13389  0116AA  0101               	movlb	1	; () banked
 13390  0116AC  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13391  0116AE  0E3D               	movlw	low (STR_81+14)
 13392  0116B0  0101               	movlb	1	; () banked
 13393  0116B2  6F10               	movwf	StringContains@That& (0+255),b
 13394  0116B4  EC55  F0B8         	call	_StringContains	;wreg free
 13395  0116B8  0900               	iorlw	0
 13396  0116BA  A4D8               	btfss	status,2,c
 13397  0116BC  D13B               	goto	l12804
 13398                           
 13399                           ;StringCommand.c: 501: {
 13400                           ;StringCommand.c: 502: if (!StringContains(Input, "="))
 13401  0116BE  0101               	movlb	1	; () banked
 13402  0116C0  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13403  0116C4  0101               	movlb	1	; () banked
 13404  0116C6  C188  F10E         	movff	Command@Input,StringContains@This
 13405  0116CA  0EFD               	movlw	high (STR_199+11)
 13406  0116CC  0101               	movlb	1	; () banked
 13407  0116CE  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13408  0116D0  0E1D               	movlw	low (STR_199+11)
 13409  0116D2  0101               	movlb	1	; () banked
 13410  0116D4  6F10               	movwf	StringContains@That& (0+255),b
 13411  0116D6  EC55  F0B8         	call	_StringContains	;wreg free
 13412  0116DA  0900               	iorlw	0
 13413  0116DC  A4D8               	btfss	status,2,c
 13414  0116DE  D008               	goto	l12760
 13415                           
 13416                           ;StringCommand.c: 503: {
 13417                           ;StringCommand.c: 504: StringAddEqual(Input);
 13418  0116E0  0101               	movlb	1	; () banked
 13419  0116E2  C189  F11E         	movff	Command@Input+1,StringAddEqual@Input+1
 13420  0116E6  0101               	movlb	1	; () banked
 13421  0116E8  C188  F11D         	movff	Command@Input,StringAddEqual@Input
 13422  0116EC  EC68  F0A7         	call	_StringAddEqual	;wreg free
 13423  0116F0                     l12760:
 13424                           
 13425                           ;StringCommand.c: 505: }
 13426                           ;StringCommand.c: 506: tempLONG = GetEnteredNumber(Input);
 13427  0116F0  0101               	movlb	1	; () banked
 13428  0116F2  C189  F11B         	movff	Command@Input+1,GetEnteredNumber@This+1
 13429  0116F6  0101               	movlb	1	; () banked
 13430  0116F8  C188  F11A         	movff	Command@Input,GetEnteredNumber@This
 13431  0116FC  EC6A  F0A6         	call	_GetEnteredNumber	;wreg free
 13432  011700  C11A  F5DE         	movff	?_GetEnteredNumber,Command@tempLONG
 13433  011704  C11B  F5DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 13434  011708  C11C  F5E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 13435  01170C  C11D  F5E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 13436                           
 13437                           ;StringCommand.c: 507: if(tempLONG < 1000 && tempLONG >= 0 )
 13438  011710  0105               	movlb	5	; () banked
 13439  011712  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 13440  011714  0A80               	xorlw	128
 13441  011716  0F80               	addlw	128
 13442  011718  E10B               	bnz	u16685
 13443  01171A  0E00               	movlw	0
 13444  01171C  0105               	movlb	5	; () banked
 13445  01171E  5DE0               	subwf	(Command@tempLONG+2)& (0+255),w,b
 13446  011720  E107               	bnz	u16685
 13447  011722  0E03               	movlw	3
 13448  011724  0105               	movlb	5	; () banked
 13449  011726  5DDF               	subwf	(Command@tempLONG+1)& (0+255),w,b
 13450  011728  E103               	bnz	u16685
 13451  01172A  0EE8               	movlw	232
 13452  01172C  0105               	movlb	5	; () banked
 13453  01172E  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 13454  011730                     u16685:
 13455  011730  B0D8               	btfsc	status,0,c
 13456  011732  D007               	goto	l12768
 13457                           
 13458                           ; BSR set to: 5
 13459  011734  0105               	movlb	5	; () banked
 13460  011736  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 13461  011738  D004               	goto	l12768
 13462                           
 13463                           ; BSR set to: 5
 13464                           ;StringCommand.c: 508: {
 13465                           ;StringCommand.c: 509: channel = (int)tempLONG;
 13466  01173A  C5DE  F5DA         	movff	Command@tempLONG,Command@channel
 13467  01173E  C5DF  F5DB         	movff	Command@tempLONG+1,Command@channel+1
 13468  011742                     l12768:
 13469                           
 13470                           ; BSR set to: 5
 13471                           ;StringCommand.c: 510: }
 13472                           ;StringCommand.c: 511: if (tempLONG == 2147483645L) {
 13473  011742  0105               	movlb	5	; () banked
 13474  011744  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 13475  011746  0EFD               	movlw	253
 13476  011748  B4D8               	btfsc	status,2,c
 13477  01174A  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 13478  01174C  B4D8               	btfsc	status,2,c
 13479  01174E  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 13480  011750  0E7F               	movlw	127
 13481  011752  B4D8               	btfsc	status,2,c
 13482  011754  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 13483  011756  A4D8               	btfss	status,2,c
 13484  011758  D012               	goto	l12772
 13485                           
 13486                           ; BSR set to: 5
 13487                           ;StringCommand.c: 512: UARTstring("Error: only use one equal sign\r\n");
 13488  01175A  0EF3               	movlw	high STR_198
 13489  01175C  0101               	movlb	1	; () banked
 13490  01175E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13491  011760  0EE4               	movlw	low STR_198
 13492  011762  0101               	movlb	1	; () banked
 13493  011764  6F19               	movwf	UARTstring@data& (0+255),b
 13494  011766  EC36  F0B3         	call	_UARTstring	;wreg free
 13495                           
 13496                           ;StringCommand.c: 513: LCDdisplayFeedback("ERR: Use 1 =");
 13497  01176A  0EFD               	movlw	high STR_199
 13498  01176C  0101               	movlb	1	; () banked
 13499  01176E  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13500  011770  0E12               	movlw	low STR_199
 13501  011772  0101               	movlb	1	; () banked
 13502  011774  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13503  011776  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 13504                           
 13505                           ;StringCommand.c: 514: }
 13506  01177A  EF62  F094         	goto	l590
 13507  01177E                     l12772:
 13508                           
 13509                           ;StringCommand.c: 515: else if (channel < 0)
 13510  01177E  0105               	movlb	5	; () banked
 13511  011780  51DB               	movf	(Command@channel+1)& (0+255),w,b
 13512  011782  0A80               	xorlw	128
 13513  011784  6EF3               	movwf	prodl,c
 13514  011786  0E80               	movlw	128
 13515  011788  5CF3               	subwf	prodl,w,c
 13516  01178A  0E00               	movlw	0
 13517  01178C  B4D8               	btfsc	status,2,c
 13518  01178E  5DDA               	subwf	Command@channel& (0+255),w,b
 13519  011790  B0D8               	btfsc	status,0,c
 13520  011792  D012               	goto	l12776
 13521                           
 13522                           ; BSR set to: 5
 13523                           ;StringCommand.c: 516: {
 13524                           ;StringCommand.c: 517: UARTstring("Error: No negative channels\r\n");
 13525  011794  0EF4               	movlw	high STR_200
 13526  011796  0101               	movlb	1	; () banked
 13527  011798  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13528  01179A  0E84               	movlw	low STR_200
 13529  01179C  0101               	movlb	1	; () banked
 13530  01179E  6F19               	movwf	UARTstring@data& (0+255),b
 13531  0117A0  EC36  F0B3         	call	_UARTstring	;wreg free
 13532                           
 13533                           ;StringCommand.c: 518: LCDdisplayFeedback("ERR: Use + Chnl");
 13534  0117A4  0EFB               	movlw	high STR_201
 13535  0117A6  0101               	movlb	1	; () banked
 13536  0117A8  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13537  0117AA  0E1F               	movlw	low STR_201
 13538  0117AC  0101               	movlb	1	; () banked
 13539  0117AE  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13540  0117B0  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 13541                           
 13542                           ;StringCommand.c: 519: }
 13543  0117B4  EF62  F094         	goto	l590
 13544  0117B8                     l12776:
 13545                           
 13546                           ;StringCommand.c: 520: else if (channel >= 32000)
 13547  0117B8  0105               	movlb	5	; () banked
 13548  0117BA  51DB               	movf	(Command@channel+1)& (0+255),w,b
 13549  0117BC  0A80               	xorlw	128
 13550  0117BE  0F03               	addlw	-253
 13551  0117C0  0E00               	movlw	0
 13552  0117C2  B4D8               	btfsc	status,2,c
 13553  0117C4  5DDA               	subwf	Command@channel& (0+255),w,b
 13554  0117C6  A0D8               	btfss	status,0,c
 13555  0117C8  D012               	goto	l12780
 13556                           
 13557                           ; BSR set to: 5
 13558                           ;StringCommand.c: 521: {
 13559                           ;StringCommand.c: 522: UARTstring("Error: in parsing command\r\n");
 13560  0117CA  0EF5               	movlw	high STR_202
 13561  0117CC  0101               	movlb	1	; () banked
 13562  0117CE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13563  0117D0  0E15               	movlw	low STR_202
 13564  0117D2  0101               	movlb	1	; () banked
 13565  0117D4  6F19               	movwf	UARTstring@data& (0+255),b
 13566  0117D6  EC36  F0B3         	call	_UARTstring	;wreg free
 13567                           
 13568                           ;StringCommand.c: 523: LCDdisplayFeedback("ERR: Cant parse");
 13569  0117DA  0EFA               	movlw	high STR_203
 13570  0117DC  0101               	movlb	1	; () banked
 13571  0117DE  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13572  0117E0  0EDF               	movlw	low STR_203
 13573  0117E2  0101               	movlb	1	; () banked
 13574  0117E4  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13575  0117E6  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 13576                           
 13577                           ;StringCommand.c: 524: }
 13578  0117EA  EF62  F094         	goto	l590
 13579  0117EE                     l12780:
 13580                           
 13581                           ;StringCommand.c: 525: else if (channel != 0)
 13582  0117EE  0105               	movlb	5	; () banked
 13583  0117F0  51DB               	movf	(Command@channel+1)& (0+255),w,b
 13584  0117F2  11DA               	iorwf	Command@channel& (0+255),w,b
 13585  0117F4  B4D8               	btfsc	status,2,c
 13586  0117F6  D03E               	goto	l12788
 13587                           
 13588                           ; BSR set to: 5
 13589                           ;StringCommand.c: 526: {
 13590                           ;StringCommand.c: 527: sprintf(buf, "Channel %d is not configured", channel);
 13591  0117F8  0105               	movlb	5	; () banked
 13592  0117FA  0E05               	movlw	high Command@buf
 13593  0117FC  0101               	movlb	1	; () banked
 13594  0117FE  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 13595  011800  0105               	movlb	5	; () banked
 13596  011802  0E00               	movlw	low Command@buf
 13597  011804  0101               	movlb	1	; () banked
 13598  011806  6F24               	movwf	sprintf@sp& (0+255),b
 13599  011808  0EF4               	movlw	high STR_204
 13600  01180A  0101               	movlb	1	; () banked
 13601  01180C  6F27               	movwf	(sprintf@f+1)& (0+255),b
 13602  01180E  0EBF               	movlw	low STR_204
 13603  011810  0101               	movlb	1	; () banked
 13604  011812  6F26               	movwf	sprintf@f& (0+255),b
 13605  011814  C5DA  F128         	movff	Command@channel,?_sprintf+4
 13606  011818  C5DB  F129         	movff	Command@channel+1,?_sprintf+5
 13607  01181C  EC6C  F094         	call	_sprintf	;wreg free
 13608                           
 13609                           ;StringCommand.c: 528: UARTstring(buf);
 13610  011820  0105               	movlb	5	; () banked
 13611  011822  0E05               	movlw	high Command@buf
 13612  011824  0101               	movlb	1	; () banked
 13613  011826  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13614  011828  0105               	movlb	5	; () banked
 13615  01182A  0E00               	movlw	low Command@buf
 13616  01182C  0101               	movlb	1	; () banked
 13617  01182E  6F19               	movwf	UARTstring@data& (0+255),b
 13618  011830  EC36  F0B3         	call	_UARTstring	;wreg free
 13619                           
 13620                           ;StringCommand.c: 529: sprintf(buf, "Chnl set to %d\r\n", duty);
 13621  011834  0105               	movlb	5	; () banked
 13622  011836  0E05               	movlw	high Command@buf
 13623  011838  0101               	movlb	1	; () banked
 13624  01183A  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 13625  01183C  0105               	movlb	5	; () banked
 13626  01183E  0E00               	movlw	low Command@buf
 13627  011840  0101               	movlb	1	; () banked
 13628  011842  6F24               	movwf	sprintf@sp& (0+255),b
 13629  011844  0EF9               	movlw	high STR_205
 13630  011846  0101               	movlb	1	; () banked
 13631  011848  6F27               	movwf	(sprintf@f+1)& (0+255),b
 13632  01184A  0E32               	movlw	low STR_205
 13633  01184C  0101               	movlb	1	; () banked
 13634  01184E  6F26               	movwf	sprintf@f& (0+255),b
 13635  011850  C5DC  F128         	movff	Command@duty,?_sprintf+4
 13636  011854  C5DD  F129         	movff	Command@duty+1,?_sprintf+5
 13637  011858  EC6C  F094         	call	_sprintf	;wreg free
 13638                           
 13639                           ;StringCommand.c: 530: LCDdisplayFeedback(buf);
 13640  01185C  0105               	movlb	5	; () banked
 13641  01185E  0E05               	movlw	high Command@buf
 13642  011860  0101               	movlb	1	; () banked
 13643  011862  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13644  011864  0105               	movlb	5	; () banked
 13645  011866  0E00               	movlw	low Command@buf
 13646  011868  0101               	movlb	1	; () banked
 13647  01186A  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13648  01186C  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 13649                           
 13650                           ;StringCommand.c: 531: }
 13651  011870  EF62  F094         	goto	l590
 13652  011874                     l12788:
 13653                           
 13654                           ;StringCommand.c: 532: else
 13655                           ;StringCommand.c: 533: {
 13656                           ;StringCommand.c: 534: LATE |= 0b00000010;
 13657  011874  828D               	bsf	3981,1,c	;volatile
 13658                           
 13659                           ;StringCommand.c: 535: delayUS(1000);
 13660  011876  0EE8               	movlw	232
 13661  011878  0101               	movlb	1	; () banked
 13662  01187A  6F0E               	movwf	delayUS@US& (0+255),b
 13663  01187C  0E03               	movlw	3
 13664  01187E  0101               	movlb	1	; () banked
 13665  011880  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 13666  011882  0E00               	movlw	0
 13667  011884  0101               	movlb	1	; () banked
 13668  011886  6F10               	movwf	(delayUS@US+2)& (0+255),b
 13669  011888  0E00               	movlw	0
 13670  01188A  0101               	movlb	1	; () banked
 13671  01188C  6F11               	movwf	(delayUS@US+3)& (0+255),b
 13672  01188E  EC10  F0B9         	call	_delayUS	;wreg free
 13673                           
 13674                           ;StringCommand.c: 536: ADC_Value = InternalADC_Read(channel);
 13675  011892  0105               	movlb	5	; () banked
 13676  011894  51DA               	movf	Command@channel& (0+255),w,b
 13677  011896  EC5A  F0BA         	call	_InternalADC_Read
 13678  01189A  0101               	movlb	1	; () banked
 13679  01189C  C11D  F5C8         	movff	?_InternalADC_Read,Command@ADC_Value
 13680  0118A0  0101               	movlb	1	; () banked
 13681  0118A2  C11E  F5C9         	movff	?_InternalADC_Read+1,Command@ADC_Value+1
 13682                           
 13683                           ; BSR set to: 1
 13684                           ;StringCommand.c: 537: sprintf(buf, "ADC channel %d = %d", channel, ADC_Value);
 13685  0118A6  0105               	movlb	5	; () banked
 13686  0118A8  0E05               	movlw	high Command@buf
 13687  0118AA  0101               	movlb	1	; () banked
 13688  0118AC  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 13689  0118AE  0105               	movlb	5	; () banked
 13690  0118B0  0E00               	movlw	low Command@buf
 13691  0118B2  0101               	movlb	1	; () banked
 13692  0118B4  6F24               	movwf	sprintf@sp& (0+255),b
 13693  0118B6  0EF7               	movlw	high STR_206
 13694  0118B8  0101               	movlb	1	; () banked
 13695  0118BA  6F27               	movwf	(sprintf@f+1)& (0+255),b
 13696  0118BC  0E77               	movlw	low STR_206
 13697  0118BE  0101               	movlb	1	; () banked
 13698  0118C0  6F26               	movwf	sprintf@f& (0+255),b
 13699  0118C2  C5DA  F128         	movff	Command@channel,?_sprintf+4
 13700  0118C6  C5DB  F129         	movff	Command@channel+1,?_sprintf+5
 13701  0118CA  C5C8  F12A         	movff	Command@ADC_Value,?_sprintf+6
 13702  0118CE  C5C9  F12B         	movff	Command@ADC_Value+1,?_sprintf+7
 13703  0118D2  EC6C  F094         	call	_sprintf	;wreg free
 13704                           
 13705                           ;StringCommand.c: 538: LATE &= ~0b00000010;
 13706  0118D6  928D               	bcf	3981,1,c	;volatile
 13707                           
 13708                           ;StringCommand.c: 539: UARTstring(buf);
 13709  0118D8  0105               	movlb	5	; () banked
 13710  0118DA  0E05               	movlw	high Command@buf
 13711  0118DC  0101               	movlb	1	; () banked
 13712  0118DE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13713  0118E0  0105               	movlb	5	; () banked
 13714  0118E2  0E00               	movlw	low Command@buf
 13715  0118E4  0101               	movlb	1	; () banked
 13716  0118E6  6F19               	movwf	UARTstring@data& (0+255),b
 13717  0118E8  EC36  F0B3         	call	_UARTstring	;wreg free
 13718                           
 13719                           ;StringCommand.c: 540: sprintf(buf, "Chnl %d = %d", channel, ADC_Value);
 13720  0118EC  0105               	movlb	5	; () banked
 13721  0118EE  0E05               	movlw	high Command@buf
 13722  0118F0  0101               	movlb	1	; () banked
 13723  0118F2  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 13724  0118F4  0105               	movlb	5	; () banked
 13725  0118F6  0E00               	movlw	low Command@buf
 13726  0118F8  0101               	movlb	1	; () banked
 13727  0118FA  6F24               	movwf	sprintf@sp& (0+255),b
 13728  0118FC  0EFD               	movlw	high STR_207
 13729  0118FE  0101               	movlb	1	; () banked
 13730  011900  6F27               	movwf	(sprintf@f+1)& (0+255),b
 13731  011902  0E2C               	movlw	low STR_207
 13732  011904  0101               	movlb	1	; () banked
 13733  011906  6F26               	movwf	sprintf@f& (0+255),b
 13734  011908  C5DA  F128         	movff	Command@channel,?_sprintf+4
 13735  01190C  C5DB  F129         	movff	Command@channel+1,?_sprintf+5
 13736  011910  C5C8  F12A         	movff	Command@ADC_Value,?_sprintf+6
 13737  011914  C5C9  F12B         	movff	Command@ADC_Value+1,?_sprintf+7
 13738  011918  EC6C  F094         	call	_sprintf	;wreg free
 13739                           
 13740                           ;StringCommand.c: 541: LCDdisplayFeedback(buf);
 13741  01191C  0105               	movlb	5	; () banked
 13742  01191E  0E05               	movlw	high Command@buf
 13743  011920  0101               	movlb	1	; () banked
 13744  011922  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13745  011924  0105               	movlb	5	; () banked
 13746  011926  0E00               	movlw	low Command@buf
 13747  011928  0101               	movlb	1	; () banked
 13748  01192A  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13749  01192C  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 13750  011930  EF62  F094         	goto	l590
 13751  011934                     l12804:
 13752                           
 13753                           ;StringCommand.c: 544: else
 13754                           ;StringCommand.c: 545: {
 13755                           ;StringCommand.c: 546: UARTstring("ADC Help Menu\r\n\n");
 13756  011934  0EF9               	movlw	high STR_208
 13757  011936  0101               	movlb	1	; () banked
 13758  011938  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13759  01193A  0E10               	movlw	low STR_208
 13760  01193C  0101               	movlb	1	; () banked
 13761  01193E  6F19               	movwf	UARTstring@data& (0+255),b
 13762  011940  EC36  F0B3         	call	_UARTstring	;wreg free
 13763                           
 13764                           ;StringCommand.c: 547: UARTstring("Channels:\r\n");
 13765  011944  0EFD               	movlw	high STR_209
 13766  011946  0101               	movlb	1	; () banked
 13767  011948  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13768  01194A  0E93               	movlw	low STR_209
 13769  01194C  0101               	movlb	1	; () banked
 13770  01194E  6F19               	movwf	UARTstring@data& (0+255),b
 13771  011950  EC36  F0B3         	call	_UARTstring	;wreg free
 13772                           
 13773                           ;StringCommand.c: 548: UARTstring("0\r\n\n");
 13774  011954  0EFF               	movlw	high STR_210
 13775  011956  0101               	movlb	1	; () banked
 13776  011958  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13777  01195A  0EB4               	movlw	low STR_210
 13778  01195C  0101               	movlb	1	; () banked
 13779  01195E  6F19               	movwf	UARTstring@data& (0+255),b
 13780  011960  EC36  F0B3         	call	_UARTstring	;wreg free
 13781                           
 13782                           ;StringCommand.c: 549: UARTstring("To read and adc channel, type the command\r\n ADC"
 13783                           ;StringCommand.c: 550: " followed by 'Channel' \r\n");
 13784  011964  0EEE               	movlw	high STR_211
 13785  011966  0101               	movlb	1	; () banked
 13786  011968  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13787  01196A  0EE5               	movlw	low STR_211
 13788  01196C  0101               	movlb	1	; () banked
 13789  01196E  6F19               	movwf	UARTstring@data& (0+255),b
 13790  011970  EC36  F0B3         	call	_UARTstring	;wreg free
 13791                           
 13792                           ;StringCommand.c: 551: UARTstring("i.e. ADC 0\r\n");
 13793  011974  0EFC               	movlw	high STR_212
 13794  011976  0101               	movlb	1	; () banked
 13795  011978  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13796  01197A  0EEB               	movlw	low STR_212
 13797  01197C  0101               	movlb	1	; () banked
 13798  01197E  6F19               	movwf	UARTstring@data& (0+255),b
 13799  011980  EC36  F0B3         	call	_UARTstring	;wreg free
 13800                           
 13801                           ;StringCommand.c: 552: LCD_Scroll("ADC Menu");
 13802  011984  0EFE               	movlw	high STR_213
 13803  011986  0101               	movlb	1	; () banked
 13804  011988  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13805  01198A  0EDC               	movlw	low STR_213
 13806  01198C  0101               	movlb	1	; () banked
 13807  01198E  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13808  011990  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 13809                           
 13810                           ;StringCommand.c: 553: LCD_Scroll("Commands:");
 13811  011994  0EFE               	movlw	high STR_176
 13812  011996  0101               	movlb	1	; () banked
 13813  011998  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13814  01199A  0E4E               	movlw	low STR_176
 13815  01199C  0101               	movlb	1	; () banked
 13816  01199E  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13817  0119A0  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 13818                           
 13819                           ;StringCommand.c: 554: LCD_Scroll("0");
 13820  0119A4  0EFC               	movlw	high (STR_186+12)
 13821  0119A6  0101               	movlb	1	; () banked
 13822  0119A8  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13823  0119AA  0E5D               	movlw	low (STR_186+12)
 13824  0119AC  0101               	movlb	1	; () banked
 13825  0119AE  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13826  0119B0  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 13827  0119B4  EF62  F094         	goto	l590
 13828  0119B8                     l12812:
 13829                           
 13830                           ;StringCommand.c: 558: else if (StartsWith(Input, "rtc"))
 13831  0119B8  0101               	movlb	1	; () banked
 13832  0119BA  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 13833  0119BE  0101               	movlb	1	; () banked
 13834  0119C0  C188  F10E         	movff	Command@Input,StartsWith@This
 13835  0119C4  0EFF               	movlw	high STR_216
 13836  0119C6  0101               	movlb	1	; () banked
 13837  0119C8  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 13838  0119CA  0EE5               	movlw	low STR_216
 13839  0119CC  0101               	movlb	1	; () banked
 13840  0119CE  6F10               	movwf	StartsWith@That& (0+255),b
 13841  0119D0  ECCA  F0B4         	call	_StartsWith	;wreg free
 13842  0119D4  0900               	iorlw	0
 13843  0119D6  B4D8               	btfsc	status,2,c
 13844  0119D8  D2ED               	goto	l12908
 13845                           
 13846                           ;StringCommand.c: 559: {
 13847                           ;StringCommand.c: 560: if (!StringContains(Input, "?"))
 13848  0119DA  0101               	movlb	1	; () banked
 13849  0119DC  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13850  0119E0  0101               	movlb	1	; () banked
 13851  0119E2  C188  F10E         	movff	Command@Input,StringContains@This
 13852  0119E6  0EFA               	movlw	high (STR_81+14)
 13853  0119E8  0101               	movlb	1	; () banked
 13854  0119EA  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13855  0119EC  0E3D               	movlw	low (STR_81+14)
 13856  0119EE  0101               	movlb	1	; () banked
 13857  0119F0  6F10               	movwf	StringContains@That& (0+255),b
 13858  0119F2  EC55  F0B8         	call	_StringContains	;wreg free
 13859  0119F6  0900               	iorlw	0
 13860  0119F8  A4D8               	btfss	status,2,c
 13861  0119FA  D272               	goto	l12896
 13862                           
 13863                           ;StringCommand.c: 561: {
 13864                           ;StringCommand.c: 562: if (StringContains(Input, "battery"))
 13865  0119FC  0101               	movlb	1	; () banked
 13866  0119FE  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13867  011A02  0101               	movlb	1	; () banked
 13868  011A04  C188  F10E         	movff	Command@Input,StringContains@This
 13869  011A08  0EFF               	movlw	high STR_218
 13870  011A0A  0101               	movlb	1	; () banked
 13871  011A0C  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13872  011A0E  0E50               	movlw	low STR_218
 13873  011A10  0101               	movlb	1	; () banked
 13874  011A12  6F10               	movwf	StringContains@That& (0+255),b
 13875  011A14  EC55  F0B8         	call	_StringContains	;wreg free
 13876  011A18  0900               	iorlw	0
 13877  011A1A  B4D8               	btfsc	status,2,c
 13878  011A1C  D0DD               	goto	l12834
 13879                           
 13880                           ;StringCommand.c: 563: {
 13881                           ;StringCommand.c: 564: RTC_Battery_Value = (InternalADC_Read(2) + 8);
 13882  011A1E  0E02               	movlw	2
 13883  011A20  EC5A  F0BA         	call	_InternalADC_Read
 13884  011A24  0E08               	movlw	8
 13885  011A26  0101               	movlb	1	; () banked
 13886  011A28  251D               	addwf	?_InternalADC_Read& (0+255),w,b
 13887  011A2A  0105               	movlb	5	; () banked
 13888  011A2C  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
 13889  011A2E  0E00               	movlw	0
 13890  011A30  0101               	movlb	1	; () banked
 13891  011A32  211E               	addwfc	(?_InternalADC_Read+1)& (0+255),w,b
 13892  011A34  0105               	movlb	5	; () banked
 13893  011A36  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
 13894                           
 13895                           ; BSR set to: 5
 13896                           ;StringCommand.c: 565: RTC_Battery_Value_HIGH_decimal = (unsigned int)(((float)RTC_Batte
      +                          ry_Value / 1024) * 5);
 13897  011A38  0E00               	movlw	0
 13898  011A3A  0101               	movlb	1	; () banked
 13899  011A3C  6F2C               	movwf	___ftmul@f2& (0+255),b
 13900  011A3E  0EA0               	movlw	160
 13901  011A40  0101               	movlb	1	; () banked
 13902  011A42  6F2D               	movwf	(___ftmul@f2+1)& (0+255),b
 13903  011A44  0E40               	movlw	64
 13904  011A46  0101               	movlb	1	; () banked
 13905  011A48  6F2E               	movwf	(___ftmul@f2+2)& (0+255),b
 13906  011A4A  0E00               	movlw	0
 13907  011A4C  0101               	movlb	1	; () banked
 13908  011A4E  6F1D               	movwf	___ftdiv@f2& (0+255),b
 13909  011A50  0E80               	movlw	128
 13910  011A52  0101               	movlb	1	; () banked
 13911  011A54  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
 13912  011A56  0E44               	movlw	68
 13913  011A58  0101               	movlb	1	; () banked
 13914  011A5A  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
 13915  011A5C  C5CA  F116         	movff	Command@RTC_Battery_Value,___lwtoft@c
 13916  011A60  C5CB  F117         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 13917  011A64  EC3D  F0BD         	call	___lwtoft	;wreg free
 13918  011A68  C116  F11A         	movff	?___lwtoft,___ftdiv@f1
 13919  011A6C  C117  F11B         	movff	?___lwtoft+1,___ftdiv@f1+1
 13920  011A70  C118  F11C         	movff	?___lwtoft+2,___ftdiv@f1+2
 13921  011A74  EC61  F0AB         	call	___ftdiv	;wreg free
 13922  011A78  C11A  F129         	movff	?___ftdiv,___ftmul@f1
 13923  011A7C  C11B  F12A         	movff	?___ftdiv+1,___ftmul@f1+1
 13924  011A80  C11C  F12B         	movff	?___ftdiv+2,___ftmul@f1+2
 13925  011A84  ECA6  F0AA         	call	___ftmul	;wreg free
 13926  011A88  C129  F138         	movff	?___ftmul,___fttol@f1
 13927  011A8C  C12A  F139         	movff	?___ftmul+1,___fttol@f1+1
 13928  011A90  C12B  F13A         	movff	?___ftmul+2,___fttol@f1+2
 13929  011A94  ECE8  F0A9         	call	___fttol	;wreg free
 13930  011A98  C138  F23F         	movff	?___fttol,??_Command
 13931  011A9C  C139  F240         	movff	?___fttol+1,??_Command+1
 13932  011AA0  C13A  F241         	movff	?___fttol+2,??_Command+2
 13933  011AA4  C13B  F242         	movff	?___fttol+3,??_Command+3
 13934  011AA8  C23F  F5CC         	movff	??_Command,Command@RTC_Battery_Value_HIGH_decimal
 13935  011AAC  C240  F5CD         	movff	??_Command+1,Command@RTC_Battery_Value_HIGH_decimal+1
 13936                           
 13937                           ;StringCommand.c: 566: RTC_Battery_Value_LOW_decimal = (unsigned int)((((float)RTC_Batte
      +                          ry_Value / 1024) * 500));
 13938  011AB0  0E00               	movlw	0
 13939  011AB2  0101               	movlb	1	; () banked
 13940  011AB4  6F2C               	movwf	___ftmul@f2& (0+255),b
 13941  011AB6  0EFA               	movlw	250
 13942  011AB8  0101               	movlb	1	; () banked
 13943  011ABA  6F2D               	movwf	(___ftmul@f2+1)& (0+255),b
 13944  011ABC  0E43               	movlw	67
 13945  011ABE  0101               	movlb	1	; () banked
 13946  011AC0  6F2E               	movwf	(___ftmul@f2+2)& (0+255),b
 13947  011AC2  0E00               	movlw	0
 13948  011AC4  0101               	movlb	1	; () banked
 13949  011AC6  6F1D               	movwf	___ftdiv@f2& (0+255),b
 13950  011AC8  0E80               	movlw	128
 13951  011ACA  0101               	movlb	1	; () banked
 13952  011ACC  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
 13953  011ACE  0E44               	movlw	68
 13954  011AD0  0101               	movlb	1	; () banked
 13955  011AD2  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
 13956  011AD4  C5CA  F116         	movff	Command@RTC_Battery_Value,___lwtoft@c
 13957  011AD8  C5CB  F117         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 13958  011ADC  EC3D  F0BD         	call	___lwtoft	;wreg free
 13959  011AE0  C116  F11A         	movff	?___lwtoft,___ftdiv@f1
 13960  011AE4  C117  F11B         	movff	?___lwtoft+1,___ftdiv@f1+1
 13961  011AE8  C118  F11C         	movff	?___lwtoft+2,___ftdiv@f1+2
 13962  011AEC  EC61  F0AB         	call	___ftdiv	;wreg free
 13963  011AF0  C11A  F129         	movff	?___ftdiv,___ftmul@f1
 13964  011AF4  C11B  F12A         	movff	?___ftdiv+1,___ftmul@f1+1
 13965  011AF8  C11C  F12B         	movff	?___ftdiv+2,___ftmul@f1+2
 13966  011AFC  ECA6  F0AA         	call	___ftmul	;wreg free
 13967  011B00  C129  F138         	movff	?___ftmul,___fttol@f1
 13968  011B04  C12A  F139         	movff	?___ftmul+1,___fttol@f1+1
 13969  011B08  C12B  F13A         	movff	?___ftmul+2,___fttol@f1+2
 13970  011B0C  ECE8  F0A9         	call	___fttol	;wreg free
 13971  011B10  C138  F23F         	movff	?___fttol,??_Command
 13972  011B14  C139  F240         	movff	?___fttol+1,??_Command+1
 13973  011B18  C13A  F241         	movff	?___fttol+2,??_Command+2
 13974  011B1C  C13B  F242         	movff	?___fttol+3,??_Command+3
 13975  011B20  C23F  F5D2         	movff	??_Command,Command@RTC_Battery_Value_LOW_decimal
 13976  011B24  C240  F5D3         	movff	??_Command+1,Command@RTC_Battery_Value_LOW_decimal+1
 13977                           
 13978                           ;StringCommand.c: 567: RTC_Battery_Value_LOW_decimal = RTC_Battery_Value_LOW_decimal % 1
      +                          00;
 13979  011B28  C5D2  F10E         	movff	Command@RTC_Battery_Value_LOW_decimal,___lwmod@dividend
 13980  011B2C  C5D3  F10F         	movff	Command@RTC_Battery_Value_LOW_decimal+1,___lwmod@dividend+1
 13981  011B30  0E00               	movlw	0
 13982  011B32  0101               	movlb	1	; () banked
 13983  011B34  6F11               	movwf	(___lwmod@divisor+1)& (0+255),b
 13984  011B36  0E64               	movlw	100
 13985  011B38  0101               	movlb	1	; () banked
 13986  011B3A  6F10               	movwf	___lwmod@divisor& (0+255),b
 13987  011B3C  ECC1  F0BA         	call	___lwmod	;wreg free
 13988  011B40  0101               	movlb	1	; () banked
 13989  011B42  C10E  F5D2         	movff	?___lwmod,Command@RTC_Battery_Value_LOW_decimal
 13990  011B46  0101               	movlb	1	; () banked
 13991  011B48  C10F  F5D3         	movff	?___lwmod+1,Command@RTC_Battery_Value_LOW_decimal+1
 13992                           
 13993                           ; BSR set to: 1
 13994                           ;StringCommand.c: 568: sprintf(buf, " 3 Volt RTC Battery Voltage = %d.%d",
 13995                           ;StringCommand.c: 569: RTC_Battery_Value_HIGH_decimal, RTC_Battery_Value_LOW_decimal);
 13996  011B4C  0105               	movlb	5	; () banked
 13997  011B4E  0E05               	movlw	high Command@buf
 13998  011B50  0101               	movlb	1	; () banked
 13999  011B52  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 14000  011B54  0105               	movlb	5	; () banked
 14001  011B56  0E00               	movlw	low Command@buf
 14002  011B58  0101               	movlb	1	; () banked
 14003  011B5A  6F24               	movwf	sprintf@sp& (0+255),b
 14004  011B5C  0EF3               	movlw	high STR_219
 14005  011B5E  0101               	movlb	1	; () banked
 14006  011B60  6F27               	movwf	(sprintf@f+1)& (0+255),b
 14007  011B62  0E16               	movlw	low STR_219
 14008  011B64  0101               	movlb	1	; () banked
 14009  011B66  6F26               	movwf	sprintf@f& (0+255),b
 14010  011B68  C5CC  F128         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 14011  011B6C  C5CD  F129         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 14012  011B70  C5D2  F12A         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 14013  011B74  C5D3  F12B         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 14014  011B78  EC6C  F094         	call	_sprintf	;wreg free
 14015                           
 14016                           ;StringCommand.c: 570: UARTstring(buf);
 14017  011B7C  0105               	movlb	5	; () banked
 14018  011B7E  0E05               	movlw	high Command@buf
 14019  011B80  0101               	movlb	1	; () banked
 14020  011B82  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14021  011B84  0105               	movlb	5	; () banked
 14022  011B86  0E00               	movlw	low Command@buf
 14023  011B88  0101               	movlb	1	; () banked
 14024  011B8A  6F19               	movwf	UARTstring@data& (0+255),b
 14025  011B8C  EC36  F0B3         	call	_UARTstring	;wreg free
 14026                           
 14027                           ;StringCommand.c: 571: sprintf(buf, "RTC Bty = %d.%d", RTC_Battery_Value_HIGH_decimal,
 14028                           ;StringCommand.c: 572: RTC_Battery_Value_LOW_decimal);
 14029  011B90  0105               	movlb	5	; () banked
 14030  011B92  0E05               	movlw	high Command@buf
 14031  011B94  0101               	movlb	1	; () banked
 14032  011B96  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 14033  011B98  0105               	movlb	5	; () banked
 14034  011B9A  0E00               	movlw	low Command@buf
 14035  011B9C  0101               	movlb	1	; () banked
 14036  011B9E  6F24               	movwf	sprintf@sp& (0+255),b
 14037  011BA0  0EFA               	movlw	high STR_220
 14038  011BA2  0101               	movlb	1	; () banked
 14039  011BA4  6F27               	movwf	(sprintf@f+1)& (0+255),b
 14040  011BA6  0EBF               	movlw	low STR_220
 14041  011BA8  0101               	movlb	1	; () banked
 14042  011BAA  6F26               	movwf	sprintf@f& (0+255),b
 14043  011BAC  C5CC  F128         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 14044  011BB0  C5CD  F129         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 14045  011BB4  C5D2  F12A         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 14046  011BB8  C5D3  F12B         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 14047  011BBC  EC6C  F094         	call	_sprintf	;wreg free
 14048                           
 14049                           ;StringCommand.c: 573: LCDdisplayFeedback(buf);
 14050  011BC0  0105               	movlb	5	; () banked
 14051  011BC2  0E05               	movlw	high Command@buf
 14052  011BC4  0101               	movlb	1	; () banked
 14053  011BC6  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14054  011BC8  0105               	movlb	5	; () banked
 14055  011BCA  0E00               	movlw	low Command@buf
 14056  011BCC  0101               	movlb	1	; () banked
 14057  011BCE  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14058  011BD0  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 14059                           
 14060                           ;StringCommand.c: 574: }
 14061  011BD4  EF62  F094         	goto	l590
 14062  011BD8                     l12834:
 14063                           
 14064                           ;StringCommand.c: 575: else if(StringContains(Input, "read"))
 14065  011BD8  0101               	movlb	1	; () banked
 14066  011BDA  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 14067  011BDE  0101               	movlb	1	; () banked
 14068  011BE0  C188  F10E         	movff	Command@Input,StringContains@This
 14069  011BE4  0EFF               	movlw	high STR_221
 14070  011BE6  0101               	movlb	1	; () banked
 14071  011BE8  6F11               	movwf	(StringContains@That+1)& (0+255),b
 14072  011BEA  0EDC               	movlw	low STR_221
 14073  011BEC  0101               	movlb	1	; () banked
 14074  011BEE  6F10               	movwf	StringContains@That& (0+255),b
 14075  011BF0  EC55  F0B8         	call	_StringContains	;wreg free
 14076  011BF4  0900               	iorlw	0
 14077  011BF6  B4D8               	btfsc	status,2,c
 14078  011BF8  D0BA               	goto	l12866
 14079                           
 14080                           ;StringCommand.c: 576: {
 14081                           ;StringCommand.c: 577: if(!READ_RTC_TIME())
 14082  011BFA  EC37  F0AF         	call	_READ_RTC_TIME	;wreg free
 14083  011BFE  0900               	iorlw	0
 14084  011C00  A4D8               	btfss	status,2,c
 14085  011C02  D09E               	goto	l12858
 14086                           
 14087                           ;StringCommand.c: 578: {
 14088                           ;StringCommand.c: 579: SprintDate(buf, NowTime, 0);
 14089  011C04  0105               	movlb	5	; () banked
 14090  011C06  0E05               	movlw	high Command@buf
 14091  011C08  0101               	movlb	1	; () banked
 14092  011C0A  6F4F               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 14093  011C0C  0105               	movlb	5	; () banked
 14094  011C0E  0E00               	movlw	low Command@buf
 14095  011C10  0101               	movlb	1	; () banked
 14096  011C12  6F4E               	movwf	SprintDate@ReturnBuf& (0+255),b
 14097  011C14  EE21  F08C         	lfsr	2,_NowTime
 14098  011C18  EE11  F050         	lfsr	1,SprintDate@DisplayTime
 14099  011C1C  0E09               	movlw	9
 14100  011C1E                     u16791:
 14101  011C1E  CFDE FFE6          	movff	postinc2,postinc1
 14102  011C22  2EE8               	decfsz	wreg,f,c
 14103  011C24  D7FC               	goto	u16791
 14104  011C26  0E00               	movlw	0
 14105  011C28  0101               	movlb	1	; () banked
 14106  011C2A  6F59               	movwf	SprintDate@Military& (0+255),b
 14107  011C2C  EC3A  F0AD         	call	_SprintDate	;wreg free
 14108                           
 14109                           ;StringCommand.c: 580: UARTstring(buf);
 14110  011C30  0105               	movlb	5	; () banked
 14111  011C32  0E05               	movlw	high Command@buf
 14112  011C34  0101               	movlb	1	; () banked
 14113  011C36  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14114  011C38  0105               	movlb	5	; () banked
 14115  011C3A  0E00               	movlw	low Command@buf
 14116  011C3C  0101               	movlb	1	; () banked
 14117  011C3E  6F19               	movwf	UARTstring@data& (0+255),b
 14118  011C40  EC36  F0B3         	call	_UARTstring	;wreg free
 14119                           
 14120                           ;StringCommand.c: 581: UARTstring("\r\n");
 14121  011C44  0EF6               	movlw	high (STR_279+19)
 14122  011C46  0101               	movlb	1	; () banked
 14123  011C48  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14124  011C4A  0EF4               	movlw	low (STR_279+19)
 14125  011C4C  0101               	movlb	1	; () banked
 14126  011C4E  6F19               	movwf	UARTstring@data& (0+255),b
 14127  011C50  EC36  F0B3         	call	_UARTstring	;wreg free
 14128                           
 14129                           ;StringCommand.c: 582: SetLCDcursor(0, 0);
 14130  011C54  0E00               	movlw	0
 14131  011C56  0101               	movlb	1	; () banked
 14132  011C58  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 14133  011C5A  0E00               	movlw	0
 14134  011C5C  ECDA  F0BC         	call	_SetLCDcursor
 14135                           
 14136                           ;StringCommand.c: 583: LCDPrintString("RTC Time is:    ");
 14137  011C60  0EF9               	movlw	high STR_223
 14138  011C62  0101               	movlb	1	; () banked
 14139  011C64  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
 14140  011C66  0E65               	movlw	low STR_223
 14141  011C68  0101               	movlb	1	; () banked
 14142  011C6A  6F1C               	movwf	LCDPrintString@Text& (0+255),b
 14143  011C6C  ECD2  F0B8         	call	_LCDPrintString	;wreg free
 14144                           
 14145                           ;StringCommand.c: 584: if(NowTime.HoursAM_PM)
 14146  011C70  0101               	movlb	1	; () banked
 14147  011C72  5190               	movf	(_NowTime+4)& (0+255),w,b
 14148  011C74  B4D8               	btfsc	status,2,c
 14149  011C76  D02A               	goto	l12852
 14150                           
 14151                           ; BSR set to: 1
 14152                           ;StringCommand.c: 585: {
 14153                           ;StringCommand.c: 586: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 14154  011C78  0105               	movlb	5	; () banked
 14155  011C7A  0E05               	movlw	high Command@buf
 14156  011C7C  0101               	movlb	1	; () banked
 14157  011C7E  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 14158  011C80  0105               	movlb	5	; () banked
 14159  011C82  0E00               	movlw	low Command@buf
 14160  011C84  0101               	movlb	1	; () banked
 14161  011C86  6F24               	movwf	sprintf@sp& (0+255),b
 14162  011C88  0EF6               	movlw	high STR_224
 14163  011C8A  0101               	movlb	1	; () banked
 14164  011C8C  6F27               	movwf	(sprintf@f+1)& (0+255),b
 14165  011C8E  0ECA               	movlw	low STR_224
 14166  011C90  0101               	movlb	1	; () banked
 14167  011C92  6F26               	movwf	sprintf@f& (0+255),b
 14168  011C94  0101               	movlb	1	; () banked
 14169  011C96  C193  F128         	movff	_NowTime+7,?_sprintf+4
 14170  011C9A  0101               	movlb	1	; () banked
 14171  011C9C  6B29               	clrf	(?_sprintf+5)& (0+255),b
 14172  011C9E  0101               	movlb	1	; () banked
 14173  011CA0  C192  F12A         	movff	_NowTime+6,?_sprintf+6
 14174  011CA4  0101               	movlb	1	; () banked
 14175  011CA6  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 14176  011CA8  0101               	movlb	1	; () banked
 14177  011CAA  C18E  F12C         	movff	_NowTime+2,?_sprintf+8
 14178  011CAE  0101               	movlb	1	; () banked
 14179  011CB0  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 14180  011CB2  0101               	movlb	1	; () banked
 14181  011CB4  C18D  F12E         	movff	_NowTime+1,?_sprintf+10
 14182  011CB8  0101               	movlb	1	; () banked
 14183  011CBA  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 14184  011CBC  0101               	movlb	1	; () banked
 14185  011CBE  C18C  F130         	movff	_NowTime,?_sprintf+12
 14186  011CC2  0101               	movlb	1	; () banked
 14187  011CC4  6B31               	clrf	(?_sprintf+13)& (0+255),b
 14188  011CC6  EC6C  F094         	call	_sprintf	;wreg free
 14189                           
 14190                           ;StringCommand.c: 587: }
 14191  011CCA  D029               	goto	l12854
 14192  011CCC                     l12852:
 14193                           
 14194                           ;StringCommand.c: 588: else
 14195                           ;StringCommand.c: 589: {
 14196                           ;StringCommand.c: 590: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 14197  011CCC  0105               	movlb	5	; () banked
 14198  011CCE  0E05               	movlw	high Command@buf
 14199  011CD0  0101               	movlb	1	; () banked
 14200  011CD2  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 14201  011CD4  0105               	movlb	5	; () banked
 14202  011CD6  0E00               	movlw	low Command@buf
 14203  011CD8  0101               	movlb	1	; () banked
 14204  011CDA  6F24               	movwf	sprintf@sp& (0+255),b
 14205  011CDC  0EF6               	movlw	high STR_225
 14206  011CDE  0101               	movlb	1	; () banked
 14207  011CE0  6F27               	movwf	(sprintf@f+1)& (0+255),b
 14208  011CE2  0EB3               	movlw	low STR_225
 14209  011CE4  0101               	movlb	1	; () banked
 14210  011CE6  6F26               	movwf	sprintf@f& (0+255),b
 14211  011CE8  0101               	movlb	1	; () banked
 14212  011CEA  C193  F128         	movff	_NowTime+7,?_sprintf+4
 14213  011CEE  0101               	movlb	1	; () banked
 14214  011CF0  6B29               	clrf	(?_sprintf+5)& (0+255),b
 14215  011CF2  0101               	movlb	1	; () banked
 14216  011CF4  C192  F12A         	movff	_NowTime+6,?_sprintf+6
 14217  011CF8  0101               	movlb	1	; () banked
 14218  011CFA  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 14219  011CFC  0101               	movlb	1	; () banked
 14220  011CFE  C18E  F12C         	movff	_NowTime+2,?_sprintf+8
 14221  011D02  0101               	movlb	1	; () banked
 14222  011D04  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 14223  011D06  0101               	movlb	1	; () banked
 14224  011D08  C18D  F12E         	movff	_NowTime+1,?_sprintf+10
 14225  011D0C  0101               	movlb	1	; () banked
 14226  011D0E  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 14227  011D10  0101               	movlb	1	; () banked
 14228  011D12  C18C  F130         	movff	_NowTime,?_sprintf+12
 14229  011D16  0101               	movlb	1	; () banked
 14230  011D18  6B31               	clrf	(?_sprintf+13)& (0+255),b
 14231  011D1A  EC6C  F094         	call	_sprintf	;wreg free
 14232  011D1E                     l12854:
 14233                           
 14234                           ;StringCommand.c: 591: }
 14235                           ;StringCommand.c: 592: SetLCDcursor(1, 0);
 14236  011D1E  0E00               	movlw	0
 14237  011D20  0101               	movlb	1	; () banked
 14238  011D22  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 14239  011D24  0E01               	movlw	1
 14240  011D26  ECDA  F0BC         	call	_SetLCDcursor
 14241                           
 14242                           ;StringCommand.c: 593: LCDPrintString(buf);
 14243  011D2A  0105               	movlb	5	; () banked
 14244  011D2C  0E05               	movlw	high Command@buf
 14245  011D2E  0101               	movlb	1	; () banked
 14246  011D30  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
 14247  011D32  0105               	movlb	5	; () banked
 14248  011D34  0E00               	movlw	low Command@buf
 14249  011D36  0101               	movlb	1	; () banked
 14250  011D38  6F1C               	movwf	LCDPrintString@Text& (0+255),b
 14251  011D3A  ECD2  F0B8         	call	_LCDPrintString	;wreg free
 14252                           
 14253                           ;StringCommand.c: 594: }
 14254  011D3E  D3FA               	goto	l12994
 14255  011D40                     l12858:
 14256                           
 14257                           ;StringCommand.c: 595: else
 14258                           ;StringCommand.c: 596: {
 14259                           ;StringCommand.c: 597: UARTstring("ERROR: Can't Read RTC\r\n");
 14260  011D40  0EF6               	movlw	high STR_226
 14261  011D42  0101               	movlb	1	; () banked
 14262  011D44  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14263  011D46  0E6C               	movlw	low STR_226
 14264  011D48  0101               	movlb	1	; () banked
 14265  011D4A  6F19               	movwf	UARTstring@data& (0+255),b
 14266  011D4C  EC36  F0B3         	call	_UARTstring	;wreg free
 14267                           
 14268                           ;StringCommand.c: 598: SetLCDcursor(1, 0);
 14269  011D50  0E00               	movlw	0
 14270  011D52  0101               	movlb	1	; () banked
 14271  011D54  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 14272  011D56  0E01               	movlw	1
 14273  011D58  ECDA  F0BC         	call	_SetLCDcursor
 14274                           
 14275                           ;StringCommand.c: 599: LCDPrintString("RTC isnt working");
 14276  011D5C  0EF9               	movlw	high STR_227
 14277  011D5E  0101               	movlb	1	; () banked
 14278  011D60  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
 14279  011D62  0E87               	movlw	low STR_227
 14280  011D64  0101               	movlb	1	; () banked
 14281  011D66  6F1C               	movwf	LCDPrintString@Text& (0+255),b
 14282  011D68  ECD2  F0B8         	call	_LCDPrintString	;wreg free
 14283  011D6C  D3E3               	goto	l12994
 14284  011D6E                     l12866:
 14285                           
 14286                           ;StringCommand.c: 603: else if(StringContains(Input, "set"))
 14287  011D6E  0101               	movlb	1	; () banked
 14288  011D70  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 14289  011D74  0101               	movlb	1	; () banked
 14290  011D76  C188  F10E         	movff	Command@Input,StringContains@This
 14291  011D7A  0EFF               	movlw	high STR_228
 14292  011D7C  0101               	movlb	1	; () banked
 14293  011D7E  6F11               	movwf	(StringContains@That+1)& (0+255),b
 14294  011D80  0EF9               	movlw	low STR_228
 14295  011D82  0101               	movlb	1	; () banked
 14296  011D84  6F10               	movwf	StringContains@That& (0+255),b
 14297  011D86  EC55  F0B8         	call	_StringContains	;wreg free
 14298  011D8A  0900               	iorlw	0
 14299  011D8C  B4D8               	btfsc	status,2,c
 14300  011D8E  D09E               	goto	l12894
 14301                           
 14302                           ;StringCommand.c: 604: {
 14303                           ;StringCommand.c: 605: UARTstring("Enter Time MM/DD/YY HH:MM:SS AM or\r\n");
 14304  011D90  0EF2               	movlw	high STR_229
 14305  011D92  0101               	movlb	1	; () banked
 14306  011D94  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14307  011D96  0EF1               	movlw	low STR_229
 14308  011D98  0101               	movlb	1	; () banked
 14309  011D9A  6F19               	movwf	UARTstring@data& (0+255),b
 14310  011D9C  EC36  F0B3         	call	_UARTstring	;wreg free
 14311                           
 14312                           ;StringCommand.c: 606: UARTstring("Enter Time MM/DD/YY HH:MM:SS PM\r\n");
 14313  011DA0  0EF3               	movlw	high STR_230
 14314  011DA2  0101               	movlb	1	; () banked
 14315  011DA4  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14316  011DA6  0E80               	movlw	low STR_230
 14317  011DA8  0101               	movlb	1	; () banked
 14318  011DAA  6F19               	movwf	UARTstring@data& (0+255),b
 14319  011DAC  EC36  F0B3         	call	_UARTstring	;wreg free
 14320                           
 14321                           ;StringCommand.c: 607: cleanBuffer(Input, 100);
 14322  011DB0  0101               	movlb	1	; () banked
 14323  011DB2  C189  F10F         	movff	Command@Input+1,cleanBuffer@data+1
 14324  011DB6  0101               	movlb	1	; () banked
 14325  011DB8  C188  F10E         	movff	Command@Input,cleanBuffer@data
 14326  011DBC  0E00               	movlw	0
 14327  011DBE  0101               	movlb	1	; () banked
 14328  011DC0  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
 14329  011DC2  0E64               	movlw	100
 14330  011DC4  0101               	movlb	1	; () banked
 14331  011DC6  6F10               	movwf	cleanBuffer@count& (0+255),b
 14332  011DC8  EC50  F0BB         	call	_cleanBuffer	;wreg free
 14333                           
 14334                           ;StringCommand.c: 608: UARTstring(">");
 14335  011DCC  0EF4               	movlw	high (STR_19+27)
 14336  011DCE  0101               	movlb	1	; () banked
 14337  011DD0  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14338  011DD2  0EF7               	movlw	low (STR_19+27)
 14339  011DD4  0101               	movlb	1	; () banked
 14340  011DD6  6F19               	movwf	UARTstring@data& (0+255),b
 14341  011DD8  EC36  F0B3         	call	_UARTstring	;wreg free
 14342  011DDC                     l12874:
 14343                           
 14344                           ;StringCommand.c: 610: {
 14345                           ;StringCommand.c: 611: if(Input[0] != 0)
 14346  011DDC  C188  FFD9         	movff	Command@Input,fsr2l
 14347  011DE0  C189  FFDA         	movff	Command@Input+1,fsr2h
 14348  011DE4  50DF               	movf	indf2,w,c
 14349  011DE6  B4D8               	btfsc	status,2,c
 14350  011DE8  D7F9               	goto	l12874
 14351                           
 14352                           ;StringCommand.c: 612: {
 14353                           ;StringCommand.c: 613: lowercase(Input);
 14354  011DEA  0101               	movlb	1	; () banked
 14355  011DEC  C189  F10F         	movff	Command@Input+1,lowercase@Input+1
 14356  011DF0  0101               	movlb	1	; () banked
 14357  011DF2  C188  F10E         	movff	Command@Input,lowercase@Input
 14358  011DF6  EC7F  F0B6         	call	_lowercase	;wreg free
 14359                           
 14360                           ;StringCommand.c: 614: if(Parse_Time(Input))
 14361  011DFA  0101               	movlb	1	; () banked
 14362  011DFC  C189  F10F         	movff	Command@Input+1,Parse_Time@This+1
 14363  011E00  0101               	movlb	1	; () banked
 14364  011E02  C188  F10E         	movff	Command@Input,Parse_Time@This
 14365  011E06  EC8F  F09D         	call	_Parse_Time	;wreg free
 14366  011E0A  0900               	iorlw	0
 14367  011E0C  B4D8               	btfsc	status,2,c
 14368  011E0E  D04C               	goto	l12892
 14369                           
 14370                           ;StringCommand.c: 615: {
 14371                           ;StringCommand.c: 616: if(!SET_RTC_TIME(NowTime))
 14372  011E10  EE21  F08C         	lfsr	2,_NowTime
 14373  011E14  EE11  F016         	lfsr	1,SET_RTC_TIME@SetTime
 14374  011E18  0E09               	movlw	9
 14375  011E1A                     u16841:
 14376  011E1A  CFDE FFE6          	movff	postinc2,postinc1
 14377  011E1E  2EE8               	decfsz	wreg,f,c
 14378  011E20  D7FC               	goto	u16841
 14379  011E22  ECE4  F0A3         	call	_SET_RTC_TIME	;wreg free
 14380  011E26  0900               	iorlw	0
 14381  011E28  A4D8               	btfss	status,2,c
 14382  011E2A  D034               	goto	l12890
 14383                           
 14384                           ;StringCommand.c: 617: {
 14385                           ;StringCommand.c: 618: UARTstring("\r\nTime Set Successfully\r\n");
 14386  011E2C  0EF5               	movlw	high STR_232
 14387  011E2E  0101               	movlb	1	; () banked
 14388  011E30  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14389  011E32  0EEF               	movlw	low STR_232
 14390  011E34  0101               	movlb	1	; () banked
 14391  011E36  6F19               	movwf	UARTstring@data& (0+255),b
 14392  011E38  EC36  F0B3         	call	_UARTstring	;wreg free
 14393                           
 14394                           ;StringCommand.c: 619: READ_RTC_TIME();
 14395  011E3C  EC37  F0AF         	call	_READ_RTC_TIME	;wreg free
 14396                           
 14397                           ;StringCommand.c: 620: SprintDate(buf, NowTime, 0);
 14398  011E40  0105               	movlb	5	; () banked
 14399  011E42  0E05               	movlw	high Command@buf
 14400  011E44  0101               	movlb	1	; () banked
 14401  011E46  6F4F               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 14402  011E48  0105               	movlb	5	; () banked
 14403  011E4A  0E00               	movlw	low Command@buf
 14404  011E4C  0101               	movlb	1	; () banked
 14405  011E4E  6F4E               	movwf	SprintDate@ReturnBuf& (0+255),b
 14406  011E50  EE21  F08C         	lfsr	2,_NowTime
 14407  011E54  EE11  F050         	lfsr	1,SprintDate@DisplayTime
 14408  011E58  0E09               	movlw	9
 14409  011E5A                     u16861:
 14410  011E5A  CFDE FFE6          	movff	postinc2,postinc1
 14411  011E5E  2EE8               	decfsz	wreg,f,c
 14412  011E60  D7FC               	goto	u16861
 14413  011E62  0E00               	movlw	0
 14414  011E64  0101               	movlb	1	; () banked
 14415  011E66  6F59               	movwf	SprintDate@Military& (0+255),b
 14416  011E68  EC3A  F0AD         	call	_SprintDate	;wreg free
 14417                           
 14418                           ;StringCommand.c: 621: UARTstring(buf);
 14419  011E6C  0105               	movlb	5	; () banked
 14420  011E6E  0E05               	movlw	high Command@buf
 14421  011E70  0101               	movlb	1	; () banked
 14422  011E72  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14423  011E74  0105               	movlb	5	; () banked
 14424  011E76  0E00               	movlw	low Command@buf
 14425  011E78  0101               	movlb	1	; () banked
 14426  011E7A  6F19               	movwf	UARTstring@data& (0+255),b
 14427  011E7C  EC36  F0B3         	call	_UARTstring	;wreg free
 14428                           
 14429                           ;StringCommand.c: 622: UARTstring("\r\n");
 14430  011E80  0EF6               	movlw	high (STR_279+19)
 14431  011E82  0101               	movlb	1	; () banked
 14432  011E84  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14433  011E86  0EF4               	movlw	low (STR_279+19)
 14434  011E88  0101               	movlb	1	; () banked
 14435  011E8A  6F19               	movwf	UARTstring@data& (0+255),b
 14436  011E8C  EC36  F0B3         	call	_UARTstring	;wreg free
 14437                           
 14438                           ;StringCommand.c: 623: }
 14439  011E90  EF62  F094         	goto	l590
 14440  011E94                     l12890:
 14441                           
 14442                           ;StringCommand.c: 624: else
 14443                           ;StringCommand.c: 625: {
 14444                           ;StringCommand.c: 626: UARTstring("\r\nTime Not Set Successfully");
 14445  011E94  0EF5               	movlw	high STR_234
 14446  011E96  0101               	movlb	1	; () banked
 14447  011E98  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14448  011E9A  0E69               	movlw	low STR_234
 14449  011E9C  0101               	movlb	1	; () banked
 14450  011E9E  6F19               	movwf	UARTstring@data& (0+255),b
 14451  011EA0  EC36  F0B3         	call	_UARTstring	;wreg free
 14452  011EA4  EF62  F094         	goto	l590
 14453  011EA8                     l12892:
 14454                           
 14455                           ;StringCommand.c: 629: else
 14456                           ;StringCommand.c: 630: {
 14457                           ;StringCommand.c: 631: UARTstring("\r\nInvalid Time Entered\r\n");
 14458  011EA8  0EF6               	movlw	high STR_235
 14459  011EAA  0101               	movlb	1	; () banked
 14460  011EAC  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14461  011EAE  0E22               	movlw	low STR_235
 14462  011EB0  0101               	movlb	1	; () banked
 14463  011EB2  6F19               	movwf	UARTstring@data& (0+255),b
 14464  011EB4  EC36  F0B3         	call	_UARTstring	;wreg free
 14465                           
 14466                           ;StringCommand.c: 632: UARTstring("Format is MM/DD/YY HH:MM:SS AM\r\n");
 14467  011EB8  0EF3               	movlw	high STR_236
 14468  011EBA  0101               	movlb	1	; () banked
 14469  011EBC  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14470  011EBE  0EC3               	movlw	low STR_236
 14471  011EC0  0101               	movlb	1	; () banked
 14472  011EC2  6F19               	movwf	UARTstring@data& (0+255),b
 14473  011EC4  EC36  F0B3         	call	_UARTstring	;wreg free
 14474  011EC8  EF62  F094         	goto	l590
 14475  011ECC                     l12894:
 14476                           
 14477                           ;StringCommand.c: 638: else
 14478                           ;StringCommand.c: 639: {
 14479                           ;StringCommand.c: 640: UARTstring("RTC What???\n");
 14480  011ECC  0EFD               	movlw	high STR_237
 14481  011ECE  0101               	movlb	1	; () banked
 14482  011ED0  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14483  011ED2  0E05               	movlw	low STR_237
 14484  011ED4  0101               	movlb	1	; () banked
 14485  011ED6  6F19               	movwf	UARTstring@data& (0+255),b
 14486  011ED8  EC36  F0B3         	call	_UARTstring	;wreg free
 14487  011EDC  EF62  F094         	goto	l590
 14488  011EE0                     l12896:
 14489                           
 14490                           ;StringCommand.c: 643: else
 14491                           ;StringCommand.c: 644: {
 14492                           ;StringCommand.c: 645: UARTstring("Real Time Clock Help Menu\r\n\n");
 14493  011EE0  0EF4               	movlw	high STR_238
 14494  011EE2  0101               	movlb	1	; () banked
 14495  011EE4  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14496  011EE6  0EA2               	movlw	low STR_238
 14497  011EE8  0101               	movlb	1	; () banked
 14498  011EEA  6F19               	movwf	UARTstring@data& (0+255),b
 14499  011EEC  EC36  F0B3         	call	_UARTstring	;wreg free
 14500                           
 14501                           ;StringCommand.c: 646: UARTstring("Actions:\r\n");
 14502  011EF0  0EFD               	movlw	high STR_239
 14503  011EF2  0101               	movlb	1	; () banked
 14504  011EF4  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14505  011EF6  0EDA               	movlw	low STR_239
 14506  011EF8  0101               	movlb	1	; () banked
 14507  011EFA  6F19               	movwf	UARTstring@data& (0+255),b
 14508  011EFC  EC36  F0B3         	call	_UARTstring	;wreg free
 14509                           
 14510                           ;StringCommand.c: 647: UARTstring("Battery\r\n");
 14511  011F00  0EFE               	movlw	high STR_240
 14512  011F02  0101               	movlb	1	; () banked
 14513  011F04  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14514  011F06  0E30               	movlw	low STR_240
 14515  011F08  0101               	movlb	1	; () banked
 14516  011F0A  6F19               	movwf	UARTstring@data& (0+255),b
 14517  011F0C  EC36  F0B3         	call	_UARTstring	;wreg free
 14518                           
 14519                           ;StringCommand.c: 648: UARTstring("Read\r\n");
 14520  011F10  0EFF               	movlw	high STR_241
 14521  011F12  0101               	movlb	1	; () banked
 14522  011F14  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14523  011F16  0E74               	movlw	low STR_241
 14524  011F18  0101               	movlb	1	; () banked
 14525  011F1A  6F19               	movwf	UARTstring@data& (0+255),b
 14526  011F1C  EC36  F0B3         	call	_UARTstring	;wreg free
 14527                           
 14528                           ;StringCommand.c: 649: UARTstring("Set\r\n\n");
 14529  011F20  0EFF               	movlw	high STR_242
 14530  011F22  0101               	movlb	1	; () banked
 14531  011F24  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14532  011F26  0E66               	movlw	low STR_242
 14533  011F28  0101               	movlb	1	; () banked
 14534  011F2A  6F19               	movwf	UARTstring@data& (0+255),b
 14535  011F2C  EC36  F0B3         	call	_UARTstring	;wreg free
 14536                           
 14537                           ;StringCommand.c: 650: UARTstring("To command the RTC, type the action\r\n followed by"
 14538                           ;StringCommand.c: 651: " the parameters \r\n\n");
 14539  011F30  0EEF               	movlw	high STR_243
 14540  011F32  0101               	movlb	1	; () banked
 14541  011F34  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14542  011F36  0E2E               	movlw	low STR_243
 14543  011F38  0101               	movlb	1	; () banked
 14544  011F3A  6F19               	movwf	UARTstring@data& (0+255),b
 14545  011F3C  EC36  F0B3         	call	_UARTstring	;wreg free
 14546                           
 14547                           ;StringCommand.c: 652: UARTstring("further sub menus available by entering the action an
      +                          d a '?'");
 14548  011F40  0EF0               	movlw	high STR_244
 14549  011F42  0101               	movlb	1	; () banked
 14550  011F44  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14551  011F46  0E37               	movlw	low STR_244
 14552  011F48  0101               	movlb	1	; () banked
 14553  011F4A  6F19               	movwf	UARTstring@data& (0+255),b
 14554  011F4C  EC36  F0B3         	call	_UARTstring	;wreg free
 14555                           
 14556                           ;StringCommand.c: 653: UARTstring("i.e. RTC Set Time?\r\n");
 14557  011F50  0EF7               	movlw	high STR_245
 14558  011F52  0101               	movlb	1	; () banked
 14559  011F54  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14560  011F56  0E4E               	movlw	low STR_245
 14561  011F58  0101               	movlb	1	; () banked
 14562  011F5A  6F19               	movwf	UARTstring@data& (0+255),b
 14563  011F5C  EC36  F0B3         	call	_UARTstring	;wreg free
 14564                           
 14565                           ;StringCommand.c: 654: LCD_Scroll("RTC Menu");
 14566  011F60  0EFE               	movlw	high STR_246
 14567  011F62  0101               	movlb	1	; () banked
 14568  011F64  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14569  011F66  0EE5               	movlw	low STR_246
 14570  011F68  0101               	movlb	1	; () banked
 14571  011F6A  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14572  011F6C  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 14573                           
 14574                           ;StringCommand.c: 655: LCD_Scroll("Commands:");
 14575  011F70  0EFE               	movlw	high STR_176
 14576  011F72  0101               	movlb	1	; () banked
 14577  011F74  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14578  011F76  0E4E               	movlw	low STR_176
 14579  011F78  0101               	movlb	1	; () banked
 14580  011F7A  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14581  011F7C  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 14582                           
 14583                           ;StringCommand.c: 656: LCD_Scroll("Battery");
 14584  011F80  0EFF               	movlw	high STR_248
 14585  011F82  0101               	movlb	1	; () banked
 14586  011F84  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14587  011F86  0E48               	movlw	low STR_248
 14588  011F88  0101               	movlb	1	; () banked
 14589  011F8A  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14590  011F8C  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 14591                           
 14592                           ;StringCommand.c: 657: LCD_Scroll("Read");
 14593  011F90  0EFF               	movlw	high STR_249
 14594  011F92  0101               	movlb	1	; () banked
 14595  011F94  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14596  011F96  0ED7               	movlw	low STR_249
 14597  011F98  0101               	movlb	1	; () banked
 14598  011F9A  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14599  011F9C  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 14600                           
 14601                           ;StringCommand.c: 658: LCD_Scroll("Set");
 14602  011FA0  0EFF               	movlw	high STR_250
 14603  011FA2  0101               	movlb	1	; () banked
 14604  011FA4  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14605  011FA6  0EF5               	movlw	low STR_250
 14606  011FA8  0101               	movlb	1	; () banked
 14607  011FAA  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14608  011FAC  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 14609  011FB0  EF62  F094         	goto	l590
 14610  011FB4                     l12908:
 14611                           
 14612                           ;StringCommand.c: 663: else if (StartsWith(Input, "joe"))
 14613  011FB4  0101               	movlb	1	; () banked
 14614  011FB6  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 14615  011FBA  0101               	movlb	1	; () banked
 14616  011FBC  C188  F10E         	movff	Command@Input,StartsWith@This
 14617  011FC0  0EFF               	movlw	high STR_251
 14618  011FC2  0101               	movlb	1	; () banked
 14619  011FC4  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 14620  011FC6  0EE9               	movlw	low STR_251
 14621  011FC8  0101               	movlb	1	; () banked
 14622  011FCA  6F10               	movwf	StartsWith@That& (0+255),b
 14623  011FCC  ECCA  F0B4         	call	_StartsWith	;wreg free
 14624  011FD0  0900               	iorlw	0
 14625  011FD2  B4D8               	btfsc	status,2,c
 14626  011FD4  D14D               	goto	l12946
 14627                           
 14628                           ;StringCommand.c: 664: {
 14629                           ;StringCommand.c: 665: if (!StringContains(Input, "?"))
 14630  011FD6  0101               	movlb	1	; () banked
 14631  011FD8  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 14632  011FDC  0101               	movlb	1	; () banked
 14633  011FDE  C188  F10E         	movff	Command@Input,StringContains@This
 14634  011FE2  0EFA               	movlw	high (STR_81+14)
 14635  011FE4  0101               	movlb	1	; () banked
 14636  011FE6  6F11               	movwf	(StringContains@That+1)& (0+255),b
 14637  011FE8  0E3D               	movlw	low (STR_81+14)
 14638  011FEA  0101               	movlb	1	; () banked
 14639  011FEC  6F10               	movwf	StringContains@That& (0+255),b
 14640  011FEE  EC55  F0B8         	call	_StringContains	;wreg free
 14641  011FF2  0900               	iorlw	0
 14642  011FF4  A4D8               	btfss	status,2,c
 14643  011FF6  D0FB               	goto	l12938
 14644                           
 14645                           ;StringCommand.c: 666: {
 14646                           ;StringCommand.c: 667: if (StringMatch(Input, "joesroomlight=on"))
 14647  011FF8  0101               	movlb	1	; () banked
 14648  011FFA  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 14649  011FFE  0101               	movlb	1	; () banked
 14650  012000  C188  F10E         	movff	Command@Input,StringMatch@This
 14651  012004  0EF9               	movlw	high STR_253
 14652  012006  0101               	movlb	1	; () banked
 14653  012008  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 14654  01200A  0EBA               	movlw	low STR_253
 14655  01200C  0101               	movlb	1	; () banked
 14656  01200E  6F10               	movwf	StringMatch@That& (0+255),b
 14657  012010  EC94  F0B8         	call	_StringMatch	;wreg free
 14658  012014  0900               	iorlw	0
 14659  012016  B4D8               	btfsc	status,2,c
 14660  012018  D064               	goto	l12924
 14661                           
 14662                           ;StringCommand.c: 668: {
 14663                           ;StringCommand.c: 669: INTCONbits.GIE = 0;
 14664  01201A  9EF2               	bcf	intcon,7,c	;volatile
 14665                           
 14666                           ;StringCommand.c: 670: Send_Config2(0b00000001, SubLightON);
 14667  01201C  0EEE               	movlw	high _SubLightON
 14668  01201E  0101               	movlb	1	; () banked
 14669  012020  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14670  012022  0E91               	movlw	low _SubLightON
 14671  012024  0101               	movlb	1	; () banked
 14672  012026  6F19               	movwf	Send_Config2@data& (0+255),b
 14673  012028  0E01               	movlw	1
 14674  01202A  EC0C  F0B7         	call	_Send_Config2
 14675                           
 14676                           ;StringCommand.c: 671: Send_Config2(0b00000001, SubLightON);
 14677  01202E  0EEE               	movlw	high _SubLightON
 14678  012030  0101               	movlb	1	; () banked
 14679  012032  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14680  012034  0E91               	movlw	low _SubLightON
 14681  012036  0101               	movlb	1	; () banked
 14682  012038  6F19               	movwf	Send_Config2@data& (0+255),b
 14683  01203A  0E01               	movlw	1
 14684  01203C  EC0C  F0B7         	call	_Send_Config2
 14685                           
 14686                           ;StringCommand.c: 672: Send_Config2(0b00000001, SubLightON);
 14687  012040  0EEE               	movlw	high _SubLightON
 14688  012042  0101               	movlb	1	; () banked
 14689  012044  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14690  012046  0E91               	movlw	low _SubLightON
 14691  012048  0101               	movlb	1	; () banked
 14692  01204A  6F19               	movwf	Send_Config2@data& (0+255),b
 14693  01204C  0E01               	movlw	1
 14694  01204E  EC0C  F0B7         	call	_Send_Config2
 14695                           
 14696                           ;StringCommand.c: 673: Send_Config2(0b00000001, SubLightON);
 14697  012052  0EEE               	movlw	high _SubLightON
 14698  012054  0101               	movlb	1	; () banked
 14699  012056  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14700  012058  0E91               	movlw	low _SubLightON
 14701  01205A  0101               	movlb	1	; () banked
 14702  01205C  6F19               	movwf	Send_Config2@data& (0+255),b
 14703  01205E  0E01               	movlw	1
 14704  012060  EC0C  F0B7         	call	_Send_Config2
 14705                           
 14706                           ;StringCommand.c: 674: Send_Config2(0b00000001, SubLightON);
 14707  012064  0EEE               	movlw	high _SubLightON
 14708  012066  0101               	movlb	1	; () banked
 14709  012068  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14710  01206A  0E91               	movlw	low _SubLightON
 14711  01206C  0101               	movlb	1	; () banked
 14712  01206E  6F19               	movwf	Send_Config2@data& (0+255),b
 14713  012070  0E01               	movlw	1
 14714  012072  EC0C  F0B7         	call	_Send_Config2
 14715                           
 14716                           ;StringCommand.c: 675: Send_Config2(0b00000001, SubLightON);
 14717  012076  0EEE               	movlw	high _SubLightON
 14718  012078  0101               	movlb	1	; () banked
 14719  01207A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14720  01207C  0E91               	movlw	low _SubLightON
 14721  01207E  0101               	movlb	1	; () banked
 14722  012080  6F19               	movwf	Send_Config2@data& (0+255),b
 14723  012082  0E01               	movlw	1
 14724  012084  EC0C  F0B7         	call	_Send_Config2
 14725                           
 14726                           ;StringCommand.c: 676: Send_Config2(0b00000001, SubLightON);
 14727  012088  0EEE               	movlw	high _SubLightON
 14728  01208A  0101               	movlb	1	; () banked
 14729  01208C  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14730  01208E  0E91               	movlw	low _SubLightON
 14731  012090  0101               	movlb	1	; () banked
 14732  012092  6F19               	movwf	Send_Config2@data& (0+255),b
 14733  012094  0E01               	movlw	1
 14734  012096  EC0C  F0B7         	call	_Send_Config2
 14735                           
 14736                           ;StringCommand.c: 677: Send_Config2(0b00000001, SubLightON);
 14737  01209A  0EEE               	movlw	high _SubLightON
 14738  01209C  0101               	movlb	1	; () banked
 14739  01209E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14740  0120A0  0E91               	movlw	low _SubLightON
 14741  0120A2  0101               	movlb	1	; () banked
 14742  0120A4  6F19               	movwf	Send_Config2@data& (0+255),b
 14743  0120A6  0E01               	movlw	1
 14744  0120A8  EC0C  F0B7         	call	_Send_Config2
 14745                           
 14746                           ;StringCommand.c: 678: Send_Config2(0b00000001, SubLightON);
 14747  0120AC  0EEE               	movlw	high _SubLightON
 14748  0120AE  0101               	movlb	1	; () banked
 14749  0120B0  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14750  0120B2  0E91               	movlw	low _SubLightON
 14751  0120B4  0101               	movlb	1	; () banked
 14752  0120B6  6F19               	movwf	Send_Config2@data& (0+255),b
 14753  0120B8  0E01               	movlw	1
 14754  0120BA  EC0C  F0B7         	call	_Send_Config2
 14755                           
 14756                           ;StringCommand.c: 679: INTCONbits.GIE = 1;
 14757  0120BE  8EF2               	bsf	intcon,7,c	;volatile
 14758                           
 14759                           ;StringCommand.c: 680: UARTstring("Joe's room light On");
 14760  0120C0  0EF7               	movlw	high STR_254
 14761  0120C2  0101               	movlb	1	; () banked
 14762  0120C4  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14763  0120C6  0EB3               	movlw	low STR_254
 14764  0120C8  0101               	movlb	1	; () banked
 14765  0120CA  6F19               	movwf	UARTstring@data& (0+255),b
 14766  0120CC  EC36  F0B3         	call	_UARTstring	;wreg free
 14767                           
 14768                           ;StringCommand.c: 681: LCDdisplayFeedback("Joe room lt On");
 14769  0120D0  0EFC               	movlw	high STR_255
 14770  0120D2  0101               	movlb	1	; () banked
 14771  0120D4  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14772  0120D6  0E15               	movlw	low STR_255
 14773  0120D8  0101               	movlb	1	; () banked
 14774  0120DA  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14775  0120DC  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 14776                           
 14777                           ;StringCommand.c: 682: }
 14778  0120E0  D3F1               	goto	l590
 14779  0120E2                     l12924:
 14780                           
 14781                           ;StringCommand.c: 683: else if (StringMatch(Input, "joesroomlight=off"))
 14782  0120E2  0101               	movlb	1	; () banked
 14783  0120E4  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 14784  0120E8  0101               	movlb	1	; () banked
 14785  0120EA  C188  F10E         	movff	Command@Input,StringMatch@This
 14786  0120EE  0EF8               	movlw	high STR_256
 14787  0120F0  0101               	movlb	1	; () banked
 14788  0120F2  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 14789  0120F4  0EA6               	movlw	low STR_256
 14790  0120F6  0101               	movlb	1	; () banked
 14791  0120F8  6F10               	movwf	StringMatch@That& (0+255),b
 14792  0120FA  EC94  F0B8         	call	_StringMatch	;wreg free
 14793  0120FE  0900               	iorlw	0
 14794  012100  B4D8               	btfsc	status,2,c
 14795  012102  D064               	goto	l12936
 14796                           
 14797                           ;StringCommand.c: 684: {
 14798                           ;StringCommand.c: 685: INTCONbits.GIE = 0;
 14799  012104  9EF2               	bcf	intcon,7,c	;volatile
 14800                           
 14801                           ;StringCommand.c: 686: Send_Config2(0b00000001, SubLightOFF);
 14802  012106  0EEE               	movlw	high _SubLightOFF
 14803  012108  0101               	movlb	1	; () banked
 14804  01210A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14805  01210C  0E81               	movlw	low _SubLightOFF
 14806  01210E  0101               	movlb	1	; () banked
 14807  012110  6F19               	movwf	Send_Config2@data& (0+255),b
 14808  012112  0E01               	movlw	1
 14809  012114  EC0C  F0B7         	call	_Send_Config2
 14810                           
 14811                           ;StringCommand.c: 687: Send_Config2(0b00000001, SubLightOFF);
 14812  012118  0EEE               	movlw	high _SubLightOFF
 14813  01211A  0101               	movlb	1	; () banked
 14814  01211C  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14815  01211E  0E81               	movlw	low _SubLightOFF
 14816  012120  0101               	movlb	1	; () banked
 14817  012122  6F19               	movwf	Send_Config2@data& (0+255),b
 14818  012124  0E01               	movlw	1
 14819  012126  EC0C  F0B7         	call	_Send_Config2
 14820                           
 14821                           ;StringCommand.c: 688: Send_Config2(0b00000001, SubLightOFF);
 14822  01212A  0EEE               	movlw	high _SubLightOFF
 14823  01212C  0101               	movlb	1	; () banked
 14824  01212E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14825  012130  0E81               	movlw	low _SubLightOFF
 14826  012132  0101               	movlb	1	; () banked
 14827  012134  6F19               	movwf	Send_Config2@data& (0+255),b
 14828  012136  0E01               	movlw	1
 14829  012138  EC0C  F0B7         	call	_Send_Config2
 14830                           
 14831                           ;StringCommand.c: 689: Send_Config2(0b00000001, SubLightOFF);
 14832  01213C  0EEE               	movlw	high _SubLightOFF
 14833  01213E  0101               	movlb	1	; () banked
 14834  012140  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14835  012142  0E81               	movlw	low _SubLightOFF
 14836  012144  0101               	movlb	1	; () banked
 14837  012146  6F19               	movwf	Send_Config2@data& (0+255),b
 14838  012148  0E01               	movlw	1
 14839  01214A  EC0C  F0B7         	call	_Send_Config2
 14840                           
 14841                           ;StringCommand.c: 690: Send_Config2(0b00000001, SubLightOFF);
 14842  01214E  0EEE               	movlw	high _SubLightOFF
 14843  012150  0101               	movlb	1	; () banked
 14844  012152  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14845  012154  0E81               	movlw	low _SubLightOFF
 14846  012156  0101               	movlb	1	; () banked
 14847  012158  6F19               	movwf	Send_Config2@data& (0+255),b
 14848  01215A  0E01               	movlw	1
 14849  01215C  EC0C  F0B7         	call	_Send_Config2
 14850                           
 14851                           ;StringCommand.c: 691: Send_Config2(0b00000001, SubLightOFF);
 14852  012160  0EEE               	movlw	high _SubLightOFF
 14853  012162  0101               	movlb	1	; () banked
 14854  012164  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14855  012166  0E81               	movlw	low _SubLightOFF
 14856  012168  0101               	movlb	1	; () banked
 14857  01216A  6F19               	movwf	Send_Config2@data& (0+255),b
 14858  01216C  0E01               	movlw	1
 14859  01216E  EC0C  F0B7         	call	_Send_Config2
 14860                           
 14861                           ;StringCommand.c: 692: Send_Config2(0b00000001, SubLightOFF);
 14862  012172  0EEE               	movlw	high _SubLightOFF
 14863  012174  0101               	movlb	1	; () banked
 14864  012176  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14865  012178  0E81               	movlw	low _SubLightOFF
 14866  01217A  0101               	movlb	1	; () banked
 14867  01217C  6F19               	movwf	Send_Config2@data& (0+255),b
 14868  01217E  0E01               	movlw	1
 14869  012180  EC0C  F0B7         	call	_Send_Config2
 14870                           
 14871                           ;StringCommand.c: 693: Send_Config2(0b00000001, SubLightOFF);
 14872  012184  0EEE               	movlw	high _SubLightOFF
 14873  012186  0101               	movlb	1	; () banked
 14874  012188  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14875  01218A  0E81               	movlw	low _SubLightOFF
 14876  01218C  0101               	movlb	1	; () banked
 14877  01218E  6F19               	movwf	Send_Config2@data& (0+255),b
 14878  012190  0E01               	movlw	1
 14879  012192  EC0C  F0B7         	call	_Send_Config2
 14880                           
 14881                           ;StringCommand.c: 694: Send_Config2(0b00000001, SubLightOFF);
 14882  012196  0EEE               	movlw	high _SubLightOFF
 14883  012198  0101               	movlb	1	; () banked
 14884  01219A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 14885  01219C  0E81               	movlw	low _SubLightOFF
 14886  01219E  0101               	movlb	1	; () banked
 14887  0121A0  6F19               	movwf	Send_Config2@data& (0+255),b
 14888  0121A2  0E01               	movlw	1
 14889  0121A4  EC0C  F0B7         	call	_Send_Config2
 14890                           
 14891                           ;StringCommand.c: 695: INTCONbits.GIE = 1;
 14892  0121A8  8EF2               	bsf	intcon,7,c	;volatile
 14893                           
 14894                           ;StringCommand.c: 696: UARTstring("Joes room light Off");
 14895  0121AA  0EF7               	movlw	high STR_257
 14896  0121AC  0101               	movlb	1	; () banked
 14897  0121AE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14898  0121B0  0E8B               	movlw	low STR_257
 14899  0121B2  0101               	movlb	1	; () banked
 14900  0121B4  6F19               	movwf	UARTstring@data& (0+255),b
 14901  0121B6  EC36  F0B3         	call	_UARTstring	;wreg free
 14902                           
 14903                           ;StringCommand.c: 697: LCDdisplayFeedback("Joe room lt Off");
 14904  0121BA  0EFB               	movlw	high STR_258
 14905  0121BC  0101               	movlb	1	; () banked
 14906  0121BE  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14907  0121C0  0E0F               	movlw	low STR_258
 14908  0121C2  0101               	movlb	1	; () banked
 14909  0121C4  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14910  0121C6  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 14911                           
 14912                           ;StringCommand.c: 698: }
 14913  0121CA  D37C               	goto	l590
 14914  0121CC                     l12936:
 14915                           
 14916                           ;StringCommand.c: 699: else
 14917                           ;StringCommand.c: 700: {
 14918                           ;StringCommand.c: 701: UARTstring("Joe's room what???");
 14919  0121CC  0EF7               	movlw	high STR_259
 14920  0121CE  0101               	movlb	1	; () banked
 14921  0121D0  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14922  0121D2  0EDA               	movlw	low STR_259
 14923  0121D4  0101               	movlb	1	; () banked
 14924  0121D6  6F19               	movwf	UARTstring@data& (0+255),b
 14925  0121D8  EC36  F0B3         	call	_UARTstring	;wreg free
 14926                           
 14927                           ;StringCommand.c: 702: LCDdisplayFeedback("Joe room what??");
 14928  0121DC  0EFA               	movlw	high STR_260
 14929  0121DE  0101               	movlb	1	; () banked
 14930  0121E0  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14931  0121E2  0E6F               	movlw	low STR_260
 14932  0121E4  0101               	movlb	1	; () banked
 14933  0121E6  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14934  0121E8  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 14935  0121EC  D36B               	goto	l590
 14936  0121EE                     l12938:
 14937                           
 14938                           ;StringCommand.c: 705: else
 14939                           ;StringCommand.c: 706: {
 14940                           ;StringCommand.c: 707: UARTstring("Joes Room Help Menu\r\n\n");
 14941  0121EE  0EF6               	movlw	high STR_261
 14942  0121F0  0101               	movlb	1	; () banked
 14943  0121F2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14944  0121F4  0E9C               	movlw	low STR_261
 14945  0121F6  0101               	movlb	1	; () banked
 14946  0121F8  6F19               	movwf	UARTstring@data& (0+255),b
 14947  0121FA  EC36  F0B3         	call	_UARTstring	;wreg free
 14948                           
 14949                           ;StringCommand.c: 708: UARTstring("Devices:\r\n");
 14950  0121FE  0EFD               	movlw	high STR_59
 14951  012200  0101               	movlb	1	; () banked
 14952  012202  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14953  012204  0ECF               	movlw	low STR_59
 14954  012206  0101               	movlb	1	; () banked
 14955  012208  6F19               	movwf	UARTstring@data& (0+255),b
 14956  01220A  EC36  F0B3         	call	_UARTstring	;wreg free
 14957                           
 14958                           ;StringCommand.c: 709: UARTstring("Light\r\n\n");
 14959  01220E  0EFE               	movlw	high STR_263
 14960  012210  0101               	movlb	1	; () banked
 14961  012212  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14962  012214  0E94               	movlw	low STR_263
 14963  012216  0101               	movlb	1	; () banked
 14964  012218  6F19               	movwf	UARTstring@data& (0+255),b
 14965  01221A  EC36  F0B3         	call	_UARTstring	;wreg free
 14966                           
 14967                           ;StringCommand.c: 710: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 14968  01221E  0EEF               	movlw	high STR_62
 14969  012220  0101               	movlb	1	; () banked
 14970  012222  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14971  012224  0E73               	movlw	low STR_62
 14972  012226  0101               	movlb	1	; () banked
 14973  012228  6F19               	movwf	UARTstring@data& (0+255),b
 14974  01222A  EC36  F0B3         	call	_UARTstring	;wreg free
 14975                           
 14976                           ;StringCommand.c: 711: UARTstring("i.e. Joes room light = On\r\n");
 14977  01222E  0EF5               	movlw	high STR_265
 14978  012230  0101               	movlb	1	; () banked
 14979  012232  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14980  012234  0E4D               	movlw	low STR_265
 14981  012236  0101               	movlb	1	; () banked
 14982  012238  6F19               	movwf	UARTstring@data& (0+255),b
 14983  01223A  EC36  F0B3         	call	_UARTstring	;wreg free
 14984                           
 14985                           ;StringCommand.c: 712: LCD_Scroll("Joe room Menu");
 14986  01223E  0EFC               	movlw	high STR_266
 14987  012240  0101               	movlb	1	; () banked
 14988  012242  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14989  012244  0EC1               	movlw	low STR_266
 14990  012246  0101               	movlb	1	; () banked
 14991  012248  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14992  01224A  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 14993                           
 14994                           ;StringCommand.c: 713: LCD_Scroll("Devices:");
 14995  01224E  0EFE               	movlw	high STR_65
 14996  012250  0101               	movlb	1	; () banked
 14997  012252  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14998  012254  0E9D               	movlw	low STR_65
 14999  012256  0101               	movlb	1	; () banked
 15000  012258  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15001  01225A  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 15002                           
 15003                           ;StringCommand.c: 714: LCD_Scroll("Light");
 15004  01225E  0EFF               	movlw	high STR_91
 15005  012260  0101               	movlb	1	; () banked
 15006  012262  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15007  012264  0EA8               	movlw	low STR_91
 15008  012266  0101               	movlb	1	; () banked
 15009  012268  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15010  01226A  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 15011  01226E  D32A               	goto	l590
 15012  012270                     l12946:
 15013                           
 15014                           ;StringCommand.c: 718: else if (StringMatch(Input, "?"))
 15015  012270  0101               	movlb	1	; () banked
 15016  012272  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 15017  012276  0101               	movlb	1	; () banked
 15018  012278  C188  F10E         	movff	Command@Input,StringMatch@This
 15019  01227C  0EFA               	movlw	high (STR_81+14)
 15020  01227E  0101               	movlb	1	; () banked
 15021  012280  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 15022  012282  0E3D               	movlw	low (STR_81+14)
 15023  012284  0101               	movlb	1	; () banked
 15024  012286  6F10               	movwf	StringMatch@That& (0+255),b
 15025  012288  EC94  F0B8         	call	_StringMatch	;wreg free
 15026  01228C  0900               	iorlw	0
 15027  01228E  B4D8               	btfsc	status,2,c
 15028  012290  D15E               	goto	l12996
 15029                           
 15030                           ;StringCommand.c: 719: {
 15031                           ;StringCommand.c: 720: UARTstring("Devices:\r\n\n");
 15032  012292  0EFD               	movlw	high STR_270
 15033  012294  0101               	movlb	1	; () banked
 15034  012296  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15035  012298  0E87               	movlw	low STR_270
 15036  01229A  0101               	movlb	1	; () banked
 15037  01229C  6F19               	movwf	UARTstring@data& (0+255),b
 15038  01229E  EC36  F0B3         	call	_UARTstring	;wreg free
 15039                           
 15040                           ;StringCommand.c: 721: UARTstring("Bedroom\r\n");
 15041  0122A2  0EFE               	movlw	high STR_271
 15042  0122A4  0101               	movlb	1	; () banked
 15043  0122A6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15044  0122A8  0E26               	movlw	low STR_271
 15045  0122AA  0101               	movlb	1	; () banked
 15046  0122AC  6F19               	movwf	UARTstring@data& (0+255),b
 15047  0122AE  EC36  F0B3         	call	_UARTstring	;wreg free
 15048                           
 15049                           ;StringCommand.c: 722: UARTstring("Livingroom\r\n");
 15050  0122B2  0EFC               	movlw	high STR_272
 15051  0122B4  0101               	movlb	1	; () banked
 15052  0122B6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15053  0122B8  0EF8               	movlw	low STR_272
 15054  0122BA  0101               	movlb	1	; () banked
 15055  0122BC  6F19               	movwf	UARTstring@data& (0+255),b
 15056  0122BE  EC36  F0B3         	call	_UARTstring	;wreg free
 15057                           
 15058                           ;StringCommand.c: 723: UARTstring("Joes room\r\n");
 15059  0122C2  0EFD               	movlw	high STR_273
 15060  0122C4  0101               	movlb	1	; () banked
 15061  0122C6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15062  0122C8  0E9F               	movlw	low STR_273
 15063  0122CA  0101               	movlb	1	; () banked
 15064  0122CC  6F19               	movwf	UARTstring@data& (0+255),b
 15065  0122CE  EC36  F0B3         	call	_UARTstring	;wreg free
 15066                           
 15067                           ;StringCommand.c: 724: UARTstring("Christmas Tree\r\n");
 15068  0122D2  0EF9               	movlw	high STR_274
 15069  0122D4  0101               	movlb	1	; () banked
 15070  0122D6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15071  0122D8  0E43               	movlw	low STR_274
 15072  0122DA  0101               	movlb	1	; () banked
 15073  0122DC  6F19               	movwf	UARTstring@data& (0+255),b
 15074  0122DE  EC36  F0B3         	call	_UARTstring	;wreg free
 15075                           
 15076                           ;StringCommand.c: 725: UARTstring("Contrast\r\n");
 15077  0122E2  0EFD               	movlw	high STR_275
 15078  0122E4  0101               	movlb	1	; () banked
 15079  0122E6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15080  0122E8  0EE5               	movlw	low STR_275
 15081  0122EA  0101               	movlb	1	; () banked
 15082  0122EC  6F19               	movwf	UARTstring@data& (0+255),b
 15083  0122EE  EC36  F0B3         	call	_UARTstring	;wreg free
 15084                           
 15085                           ;StringCommand.c: 726: UARTstring("ADC\r\n");
 15086  0122F2  0EFF               	movlw	high STR_276
 15087  0122F4  0101               	movlb	1	; () banked
 15088  0122F6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15089  0122F8  0E90               	movlw	low STR_276
 15090  0122FA  0101               	movlb	1	; () banked
 15091  0122FC  6F19               	movwf	UARTstring@data& (0+255),b
 15092  0122FE  EC36  F0B3         	call	_UARTstring	;wreg free
 15093                           
 15094                           ;StringCommand.c: 727: UARTstring("RTC\r\n\n");
 15095  012302  0EFF               	movlw	high STR_277
 15096  012304  0101               	movlb	1	; () banked
 15097  012306  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15098  012308  0E58               	movlw	low STR_277
 15099  01230A  0101               	movlb	1	; () banked
 15100  01230C  6F19               	movwf	UARTstring@data& (0+255),b
 15101  01230E  EC36  F0B3         	call	_UARTstring	;wreg free
 15102                           
 15103                           ;StringCommand.c: 728: UARTstring("For Device help enter device followed by a '?' \r\n")
      +                          ;
 15104  012312  0EF1               	movlw	high STR_278
 15105  012314  0101               	movlb	1	; () banked
 15106  012316  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15107  012318  0E13               	movlw	low STR_278
 15108  01231A  0101               	movlb	1	; () banked
 15109  01231C  6F19               	movwf	UARTstring@data& (0+255),b
 15110  01231E  EC36  F0B3         	call	_UARTstring	;wreg free
 15111                           
 15112                           ;StringCommand.c: 729: UARTstring("i.e.  Livingroom?\r\n\r\n");
 15113  012322  0EF6               	movlw	high STR_279
 15114  012324  0101               	movlb	1	; () banked
 15115  012326  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15116  012328  0EE1               	movlw	low STR_279
 15117  01232A  0101               	movlb	1	; () banked
 15118  01232C  6F19               	movwf	UARTstring@data& (0+255),b
 15119  01232E  EC36  F0B3         	call	_UARTstring	;wreg free
 15120                           
 15121                           ;StringCommand.c: 730: UARTstring("Current Time\r\n");
 15122  012332  0EFB               	movlw	high STR_280
 15123  012334  0101               	movlb	1	; () banked
 15124  012336  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15125  012338  0E7F               	movlw	low STR_280
 15126  01233A  0101               	movlb	1	; () banked
 15127  01233C  6F19               	movwf	UARTstring@data& (0+255),b
 15128  01233E  EC36  F0B3         	call	_UARTstring	;wreg free
 15129                           
 15130                           ;StringCommand.c: 731: SetLCDcursor(0, 0);
 15131  012342  0E00               	movlw	0
 15132  012344  0101               	movlb	1	; () banked
 15133  012346  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 15134  012348  0E00               	movlw	0
 15135  01234A  ECDA  F0BC         	call	_SetLCDcursor
 15136                           
 15137                           ;StringCommand.c: 732: LCDPrintString("Help Menu");
 15138  01234E  0EFE               	movlw	high STR_281
 15139  012350  0101               	movlb	1	; () banked
 15140  012352  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15141  012354  0E76               	movlw	low STR_281
 15142  012356  0101               	movlb	1	; () banked
 15143  012358  6F1C               	movwf	LCDPrintString@Text& (0+255),b
 15144  01235A  ECD2  F0B8         	call	_LCDPrintString	;wreg free
 15145                           
 15146                           ;StringCommand.c: 733: if(!READ_RTC_TIME())
 15147  01235E  EC37  F0AF         	call	_READ_RTC_TIME	;wreg free
 15148  012362  0900               	iorlw	0
 15149  012364  A4D8               	btfss	status,2,c
 15150  012366  D0D0               	goto	l12988
 15151                           
 15152                           ;StringCommand.c: 734: {
 15153                           ;StringCommand.c: 735: SprintDate(buf, NowTime, 0);
 15154  012368  0105               	movlb	5	; () banked
 15155  01236A  0E05               	movlw	high Command@buf
 15156  01236C  0101               	movlb	1	; () banked
 15157  01236E  6F4F               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 15158  012370  0105               	movlb	5	; () banked
 15159  012372  0E00               	movlw	low Command@buf
 15160  012374  0101               	movlb	1	; () banked
 15161  012376  6F4E               	movwf	SprintDate@ReturnBuf& (0+255),b
 15162  012378  EE21  F08C         	lfsr	2,_NowTime
 15163  01237C  EE11  F050         	lfsr	1,SprintDate@DisplayTime
 15164  012380  0E09               	movlw	9
 15165  012382                     u16931:
 15166  012382  CFDE FFE6          	movff	postinc2,postinc1
 15167  012386  2EE8               	decfsz	wreg,f,c
 15168  012388  D7FC               	goto	u16931
 15169  01238A  0E00               	movlw	0
 15170  01238C  0101               	movlb	1	; () banked
 15171  01238E  6F59               	movwf	SprintDate@Military& (0+255),b
 15172  012390  EC3A  F0AD         	call	_SprintDate	;wreg free
 15173                           
 15174                           ;StringCommand.c: 736: UARTstring(buf);
 15175  012394  0105               	movlb	5	; () banked
 15176  012396  0E05               	movlw	high Command@buf
 15177  012398  0101               	movlb	1	; () banked
 15178  01239A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15179  01239C  0105               	movlb	5	; () banked
 15180  01239E  0E00               	movlw	low Command@buf
 15181  0123A0  0101               	movlb	1	; () banked
 15182  0123A2  6F19               	movwf	UARTstring@data& (0+255),b
 15183  0123A4  EC36  F0B3         	call	_UARTstring	;wreg free
 15184                           
 15185                           ;StringCommand.c: 737: UARTstring("\r\n");
 15186  0123A8  0EF6               	movlw	high (STR_279+19)
 15187  0123AA  0101               	movlb	1	; () banked
 15188  0123AC  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15189  0123AE  0EF4               	movlw	low (STR_279+19)
 15190  0123B0  0101               	movlb	1	; () banked
 15191  0123B2  6F19               	movwf	UARTstring@data& (0+255),b
 15192  0123B4  EC36  F0B3         	call	_UARTstring	;wreg free
 15193                           
 15194                           ;StringCommand.c: 739: if(NowTime.HoursAM_PM)
 15195  0123B8  0101               	movlb	1	; () banked
 15196  0123BA  5190               	movf	(_NowTime+4)& (0+255),w,b
 15197  0123BC  B4D8               	btfsc	status,2,c
 15198  0123BE  D02A               	goto	l12966
 15199                           
 15200                           ; BSR set to: 1
 15201                           ;StringCommand.c: 740: {
 15202                           ;StringCommand.c: 741: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 15203  0123C0  0105               	movlb	5	; () banked
 15204  0123C2  0E05               	movlw	high Command@buf
 15205  0123C4  0101               	movlb	1	; () banked
 15206  0123C6  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 15207  0123C8  0105               	movlb	5	; () banked
 15208  0123CA  0E00               	movlw	low Command@buf
 15209  0123CC  0101               	movlb	1	; () banked
 15210  0123CE  6F24               	movwf	sprintf@sp& (0+255),b
 15211  0123D0  0EF6               	movlw	high STR_224
 15212  0123D2  0101               	movlb	1	; () banked
 15213  0123D4  6F27               	movwf	(sprintf@f+1)& (0+255),b
 15214  0123D6  0ECA               	movlw	low STR_224
 15215  0123D8  0101               	movlb	1	; () banked
 15216  0123DA  6F26               	movwf	sprintf@f& (0+255),b
 15217  0123DC  0101               	movlb	1	; () banked
 15218  0123DE  C193  F128         	movff	_NowTime+7,?_sprintf+4
 15219  0123E2  0101               	movlb	1	; () banked
 15220  0123E4  6B29               	clrf	(?_sprintf+5)& (0+255),b
 15221  0123E6  0101               	movlb	1	; () banked
 15222  0123E8  C192  F12A         	movff	_NowTime+6,?_sprintf+6
 15223  0123EC  0101               	movlb	1	; () banked
 15224  0123EE  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 15225  0123F0  0101               	movlb	1	; () banked
 15226  0123F2  C18E  F12C         	movff	_NowTime+2,?_sprintf+8
 15227  0123F6  0101               	movlb	1	; () banked
 15228  0123F8  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 15229  0123FA  0101               	movlb	1	; () banked
 15230  0123FC  C18D  F12E         	movff	_NowTime+1,?_sprintf+10
 15231  012400  0101               	movlb	1	; () banked
 15232  012402  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 15233  012404  0101               	movlb	1	; () banked
 15234  012406  C18C  F130         	movff	_NowTime,?_sprintf+12
 15235  01240A  0101               	movlb	1	; () banked
 15236  01240C  6B31               	clrf	(?_sprintf+13)& (0+255),b
 15237  01240E  EC6C  F094         	call	_sprintf	;wreg free
 15238                           
 15239                           ;StringCommand.c: 742: }
 15240  012412  D029               	goto	l12968
 15241  012414                     l12966:
 15242                           
 15243                           ;StringCommand.c: 743: else
 15244                           ;StringCommand.c: 744: {
 15245                           ;StringCommand.c: 745: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 15246  012414  0105               	movlb	5	; () banked
 15247  012416  0E05               	movlw	high Command@buf
 15248  012418  0101               	movlb	1	; () banked
 15249  01241A  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 15250  01241C  0105               	movlb	5	; () banked
 15251  01241E  0E00               	movlw	low Command@buf
 15252  012420  0101               	movlb	1	; () banked
 15253  012422  6F24               	movwf	sprintf@sp& (0+255),b
 15254  012424  0EF6               	movlw	high STR_225
 15255  012426  0101               	movlb	1	; () banked
 15256  012428  6F27               	movwf	(sprintf@f+1)& (0+255),b
 15257  01242A  0EB3               	movlw	low STR_225
 15258  01242C  0101               	movlb	1	; () banked
 15259  01242E  6F26               	movwf	sprintf@f& (0+255),b
 15260  012430  0101               	movlb	1	; () banked
 15261  012432  C193  F128         	movff	_NowTime+7,?_sprintf+4
 15262  012436  0101               	movlb	1	; () banked
 15263  012438  6B29               	clrf	(?_sprintf+5)& (0+255),b
 15264  01243A  0101               	movlb	1	; () banked
 15265  01243C  C192  F12A         	movff	_NowTime+6,?_sprintf+6
 15266  012440  0101               	movlb	1	; () banked
 15267  012442  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 15268  012444  0101               	movlb	1	; () banked
 15269  012446  C18E  F12C         	movff	_NowTime+2,?_sprintf+8
 15270  01244A  0101               	movlb	1	; () banked
 15271  01244C  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 15272  01244E  0101               	movlb	1	; () banked
 15273  012450  C18D  F12E         	movff	_NowTime+1,?_sprintf+10
 15274  012454  0101               	movlb	1	; () banked
 15275  012456  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 15276  012458  0101               	movlb	1	; () banked
 15277  01245A  C18C  F130         	movff	_NowTime,?_sprintf+12
 15278  01245E  0101               	movlb	1	; () banked
 15279  012460  6B31               	clrf	(?_sprintf+13)& (0+255),b
 15280  012462  EC6C  F094         	call	_sprintf	;wreg free
 15281  012466                     l12968:
 15282                           
 15283                           ;StringCommand.c: 746: }
 15284                           ;StringCommand.c: 747: SetLCDcursor(1, 0);
 15285  012466  0E00               	movlw	0
 15286  012468  0101               	movlb	1	; () banked
 15287  01246A  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 15288  01246C  0E01               	movlw	1
 15289  01246E  ECDA  F0BC         	call	_SetLCDcursor
 15290                           
 15291                           ;StringCommand.c: 748: LCDPrintString(buf);
 15292  012472  0105               	movlb	5	; () banked
 15293  012474  0E05               	movlw	high Command@buf
 15294  012476  0101               	movlb	1	; () banked
 15295  012478  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15296  01247A  0105               	movlb	5	; () banked
 15297  01247C  0E00               	movlw	low Command@buf
 15298  01247E  0101               	movlb	1	; () banked
 15299  012480  6F1C               	movwf	LCDPrintString@Text& (0+255),b
 15300  012482  ECD2  F0B8         	call	_LCDPrintString	;wreg free
 15301                           
 15302                           ;StringCommand.c: 749: LCD_Scroll("Device Menus:");
 15303  012486  0EFC               	movlw	high STR_285
 15304  012488  0101               	movlb	1	; () banked
 15305  01248A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15306  01248C  0E6D               	movlw	low STR_285
 15307  01248E  0101               	movlb	1	; () banked
 15308  012490  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15309  012492  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 15310                           
 15311                           ;StringCommand.c: 750: LCD_Scroll("Bedroom?");
 15312  012496  0EFE               	movlw	high STR_286
 15313  012498  0101               	movlb	1	; () banked
 15314  01249A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15315  01249C  0EA6               	movlw	low STR_286
 15316  01249E  0101               	movlb	1	; () banked
 15317  0124A0  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15318  0124A2  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 15319                           
 15320                           ;StringCommand.c: 751: LCD_Scroll("Livingroom?");
 15321  0124A6  0EFD               	movlw	high STR_287
 15322  0124A8  0101               	movlb	1	; () banked
 15323  0124AA  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15324  0124AC  0EAB               	movlw	low STR_287
 15325  0124AE  0101               	movlb	1	; () banked
 15326  0124B0  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15327  0124B2  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 15328                           
 15329                           ;StringCommand.c: 752: LCD_Scroll("Joes Room?");
 15330  0124B6  0EFD               	movlw	high STR_288
 15331  0124B8  0101               	movlb	1	; () banked
 15332  0124BA  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15333  0124BC  0EF0               	movlw	low STR_288
 15334  0124BE  0101               	movlb	1	; () banked
 15335  0124C0  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15336  0124C2  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 15337                           
 15338                           ;StringCommand.c: 753: LCD_Scroll("Christmas Tree?");
 15339  0124C6  0EFA               	movlw	high STR_289
 15340  0124C8  0101               	movlb	1	; () banked
 15341  0124CA  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15342  0124CC  0E7F               	movlw	low STR_289
 15343  0124CE  0101               	movlb	1	; () banked
 15344  0124D0  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15345  0124D2  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 15346                           
 15347                           ;StringCommand.c: 754: LCD_Scroll("Contrast?");
 15348  0124D6  0EFE               	movlw	high STR_290
 15349  0124D8  0101               	movlb	1	; () banked
 15350  0124DA  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15351  0124DC  0E58               	movlw	low STR_290
 15352  0124DE  0101               	movlb	1	; () banked
 15353  0124E0  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15354  0124E2  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 15355                           
 15356                           ;StringCommand.c: 755: LCD_Scroll("ADC?");
 15357  0124E6  0EFF               	movlw	high STR_291
 15358  0124E8  0101               	movlb	1	; () banked
 15359  0124EA  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15360  0124EC  0ECD               	movlw	low STR_291
 15361  0124EE  0101               	movlb	1	; () banked
 15362  0124F0  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15363  0124F2  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 15364                           
 15365                           ;StringCommand.c: 756: LCD_Scroll("RTC?");
 15366  0124F6  0EFF               	movlw	high STR_292
 15367  0124F8  0101               	movlb	1	; () banked
 15368  0124FA  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15369  0124FC  0ED2               	movlw	low STR_292
 15370  0124FE  0101               	movlb	1	; () banked
 15371  012500  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15372  012502  EC46  F0A5         	call	_LCD_Scroll	;wreg free
 15373                           
 15374                           ;StringCommand.c: 757: }
 15375  012506  D016               	goto	l12994
 15376  012508                     l12988:
 15377                           
 15378                           ;StringCommand.c: 758: else
 15379                           ;StringCommand.c: 759: {
 15380                           ;StringCommand.c: 760: UARTstring("ERROR: Can't Read RTC\r\n");
 15381  012508  0EF6               	movlw	high STR_226
 15382  01250A  0101               	movlb	1	; () banked
 15383  01250C  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15384  01250E  0E6C               	movlw	low STR_226
 15385  012510  0101               	movlb	1	; () banked
 15386  012512  6F19               	movwf	UARTstring@data& (0+255),b
 15387  012514  EC36  F0B3         	call	_UARTstring	;wreg free
 15388                           
 15389                           ;StringCommand.c: 761: SetLCDcursor(1, 0);
 15390  012518  0E00               	movlw	0
 15391  01251A  0101               	movlb	1	; () banked
 15392  01251C  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 15393  01251E  0E01               	movlw	1
 15394  012520  ECDA  F0BC         	call	_SetLCDcursor
 15395                           
 15396                           ;StringCommand.c: 762: LCDPrintString("RTC isnt working");
 15397  012524  0EF9               	movlw	high STR_227
 15398  012526  0101               	movlb	1	; () banked
 15399  012528  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15400  01252A  0E87               	movlw	low STR_227
 15401  01252C  0101               	movlb	1	; () banked
 15402  01252E  6F1C               	movwf	LCDPrintString@Text& (0+255),b
 15403  012530  ECD2  F0B8         	call	_LCDPrintString	;wreg free
 15404  012534                     l12994:
 15405                           
 15406                           ;StringCommand.c: 763: }
 15407                           ;StringCommand.c: 764: LCDclearCount =0;
 15408  012534  0E00               	movlw	0
 15409  012536  0101               	movlb	1	; () banked
 15410  012538  6FEE               	movwf	_LCDclearCount& (0+255),b
 15411  01253A  0E00               	movlw	0
 15412  01253C  0101               	movlb	1	; () banked
 15413  01253E  6FEF               	movwf	(_LCDclearCount+1)& (0+255),b
 15414  012540  0E00               	movlw	0
 15415  012542  0101               	movlb	1	; () banked
 15416  012544  6FF0               	movwf	(_LCDclearCount+2)& (0+255),b
 15417  012546  0E00               	movlw	0
 15418  012548  0101               	movlb	1	; () banked
 15419  01254A  6FF1               	movwf	(_LCDclearCount+3)& (0+255),b
 15420                           
 15421                           ;StringCommand.c: 765: }
 15422  01254C  D1BB               	goto	l590
 15423  01254E                     l12996:
 15424                           
 15425                           ;StringCommand.c: 766: else if(StringContains(Input, "baudwillbesetto") || StringContain
      +                          s(Input, "resetto") || StringContains(Input, "setbaud") || StringContains(Input, "change
      +                          baud"))
 15426  01254E  0101               	movlb	1	; () banked
 15427  012550  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15428  012554  0101               	movlb	1	; () banked
 15429  012556  C188  F10E         	movff	Command@Input,StringContains@This
 15430  01255A  0EFB               	movlw	high STR_295
 15431  01255C  0101               	movlb	1	; () banked
 15432  01255E  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15433  012560  0E3F               	movlw	low STR_295
 15434  012562  0101               	movlb	1	; () banked
 15435  012564  6F10               	movwf	StringContains@That& (0+255),b
 15436  012566  EC55  F0B8         	call	_StringContains	;wreg free
 15437  01256A  0900               	iorlw	0
 15438  01256C  A4D8               	btfss	status,2,c
 15439  01256E  D033               	goto	l13004
 15440  012570  0101               	movlb	1	; () banked
 15441  012572  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15442  012576  0101               	movlb	1	; () banked
 15443  012578  C188  F10E         	movff	Command@Input,StringContains@This
 15444  01257C  0EFF               	movlw	high STR_296
 15445  01257E  0101               	movlb	1	; () banked
 15446  012580  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15447  012582  0E40               	movlw	low STR_296
 15448  012584  0101               	movlb	1	; () banked
 15449  012586  6F10               	movwf	StringContains@That& (0+255),b
 15450  012588  EC55  F0B8         	call	_StringContains	;wreg free
 15451  01258C  0900               	iorlw	0
 15452  01258E  A4D8               	btfss	status,2,c
 15453  012590  D022               	goto	l13004
 15454  012592  0101               	movlb	1	; () banked
 15455  012594  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15456  012598  0101               	movlb	1	; () banked
 15457  01259A  C188  F10E         	movff	Command@Input,StringContains@This
 15458  01259E  0EFF               	movlw	high STR_297
 15459  0125A0  0101               	movlb	1	; () banked
 15460  0125A2  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15461  0125A4  0E10               	movlw	low STR_297
 15462  0125A6  0101               	movlb	1	; () banked
 15463  0125A8  6F10               	movwf	StringContains@That& (0+255),b
 15464  0125AA  EC55  F0B8         	call	_StringContains	;wreg free
 15465  0125AE  0900               	iorlw	0
 15466  0125B0  A4D8               	btfss	status,2,c
 15467  0125B2  D011               	goto	l13004
 15468  0125B4  0101               	movlb	1	; () banked
 15469  0125B6  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15470  0125BA  0101               	movlb	1	; () banked
 15471  0125BC  C188  F10E         	movff	Command@Input,StringContains@This
 15472  0125C0  0EFD               	movlw	high STR_298
 15473  0125C2  0101               	movlb	1	; () banked
 15474  0125C4  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15475  0125C6  0EFB               	movlw	low STR_298
 15476  0125C8  0101               	movlb	1	; () banked
 15477  0125CA  6F10               	movwf	StringContains@That& (0+255),b
 15478  0125CC  EC55  F0B8         	call	_StringContains	;wreg free
 15479  0125D0  0900               	iorlw	0
 15480  0125D2  B4D8               	btfsc	status,2,c
 15481  0125D4  D0DB               	goto	l13042
 15482  0125D6                     l13004:
 15483                           
 15484                           ;StringCommand.c: 767: {
 15485                           ;StringCommand.c: 768: if (!StringContains(Input, "="))
 15486  0125D6  0101               	movlb	1	; () banked
 15487  0125D8  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15488  0125DC  0101               	movlb	1	; () banked
 15489  0125DE  C188  F10E         	movff	Command@Input,StringContains@This
 15490  0125E2  0EFD               	movlw	high (STR_199+11)
 15491  0125E4  0101               	movlb	1	; () banked
 15492  0125E6  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15493  0125E8  0E1D               	movlw	low (STR_199+11)
 15494  0125EA  0101               	movlb	1	; () banked
 15495  0125EC  6F10               	movwf	StringContains@That& (0+255),b
 15496  0125EE  EC55  F0B8         	call	_StringContains	;wreg free
 15497  0125F2  0900               	iorlw	0
 15498  0125F4  A4D8               	btfss	status,2,c
 15499  0125F6  D008               	goto	l13008
 15500                           
 15501                           ;StringCommand.c: 769: {
 15502                           ;StringCommand.c: 770: StringAddEqual(Input);
 15503  0125F8  0101               	movlb	1	; () banked
 15504  0125FA  C189  F11E         	movff	Command@Input+1,StringAddEqual@Input+1
 15505  0125FE  0101               	movlb	1	; () banked
 15506  012600  C188  F11D         	movff	Command@Input,StringAddEqual@Input
 15507  012604  EC68  F0A7         	call	_StringAddEqual	;wreg free
 15508  012608                     l13008:
 15509                           
 15510                           ;StringCommand.c: 771: }
 15511                           ;StringCommand.c: 772: BAUDtemp = (unsigned long)GetEnteredNumber(Input);
 15512  012608  0101               	movlb	1	; () banked
 15513  01260A  C189  F11B         	movff	Command@Input+1,GetEnteredNumber@This+1
 15514  01260E  0101               	movlb	1	; () banked
 15515  012610  C188  F11A         	movff	Command@Input,GetEnteredNumber@This
 15516  012614  EC6A  F0A6         	call	_GetEnteredNumber	;wreg free
 15517  012618  C11A  F5CE         	movff	?_GetEnteredNumber,Command@BAUDtemp
 15518  01261C  C11B  F5CF         	movff	?_GetEnteredNumber+1,Command@BAUDtemp+1
 15519  012620  C11C  F5D0         	movff	?_GetEnteredNumber+2,Command@BAUDtemp+2
 15520  012624  C11D  F5D1         	movff	?_GetEnteredNumber+3,Command@BAUDtemp+3
 15521                           
 15522                           ;StringCommand.c: 773: if(BAUDtemp >=2400 && BAUDtemp <= 115200)
 15523  012628  0E60               	movlw	96
 15524  01262A  0105               	movlb	5	; () banked
 15525  01262C  5DCE               	subwf	Command@BAUDtemp& (0+255),w,b
 15526  01262E  0E09               	movlw	9
 15527  012630  0105               	movlb	5	; () banked
 15528  012632  59CF               	subwfb	(Command@BAUDtemp+1)& (0+255),w,b
 15529  012634  0E00               	movlw	0
 15530  012636  0105               	movlb	5	; () banked
 15531  012638  59D0               	subwfb	(Command@BAUDtemp+2)& (0+255),w,b
 15532  01263A  0E00               	movlw	0
 15533  01263C  0105               	movlb	5	; () banked
 15534  01263E  59D1               	subwfb	(Command@BAUDtemp+3)& (0+255),w,b
 15535  012640  A0D8               	btfss	status,0,c
 15536  012642  D09B               	goto	l13040
 15537                           
 15538                           ; BSR set to: 5
 15539  012644  0E01               	movlw	1
 15540  012646  0102               	movlb	2	; () banked
 15541  012648  6F3F               	movwf	??_Command& (0+255),b
 15542  01264A  0EC2               	movlw	194
 15543  01264C  6F40               	movwf	(??_Command+1)& (0+255),b
 15544  01264E  0E01               	movlw	1
 15545  012650  6F41               	movwf	(??_Command+2)& (0+255),b
 15546  012652  0E00               	movlw	0
 15547  012654  6F42               	movwf	(??_Command+3)& (0+255),b
 15548  012656  0102               	movlb	2	; () banked
 15549  012658  513F               	movf	??_Command& (0+255),w,b
 15550  01265A  0105               	movlb	5	; () banked
 15551  01265C  5DCE               	subwf	Command@BAUDtemp& (0+255),w,b
 15552  01265E  0102               	movlb	2	; () banked
 15553  012660  5140               	movf	(??_Command+1)& (0+255),w,b
 15554  012662  0105               	movlb	5	; () banked
 15555  012664  59CF               	subwfb	(Command@BAUDtemp+1)& (0+255),w,b
 15556  012666  0102               	movlb	2	; () banked
 15557  012668  5141               	movf	(??_Command+2)& (0+255),w,b
 15558  01266A  0105               	movlb	5	; () banked
 15559  01266C  59D0               	subwfb	(Command@BAUDtemp+2)& (0+255),w,b
 15560  01266E  0102               	movlb	2	; () banked
 15561  012670  5142               	movf	(??_Command+3)& (0+255),w,b
 15562  012672  0105               	movlb	5	; () banked
 15563  012674  59D1               	subwfb	(Command@BAUDtemp+3)& (0+255),w,b
 15564  012676  B0D8               	btfsc	status,0,c
 15565  012678  D080               	goto	l13040
 15566                           
 15567                           ; BSR set to: 5
 15568                           ;StringCommand.c: 774: {
 15569                           ;StringCommand.c: 775: if(StringContains(Input, "withnoparitybit"))
 15570  01267A  0101               	movlb	1	; () banked
 15571  01267C  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15572  012680  0101               	movlb	1	; () banked
 15573  012682  C188  F10E         	movff	Command@Input,StringContains@This
 15574  012686  0EFB               	movlw	high STR_300
 15575  012688  0101               	movlb	1	; () banked
 15576  01268A  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15577  01268C  0E5F               	movlw	low STR_300
 15578  01268E  0101               	movlb	1	; () banked
 15579  012690  6F10               	movwf	StringContains@That& (0+255),b
 15580  012692  EC55  F0B8         	call	_StringContains	;wreg free
 15581  012696  0900               	iorlw	0
 15582  012698  B4D8               	btfsc	status,2,c
 15583  01269A  D002               	goto	l13018
 15584                           
 15585                           ;StringCommand.c: 776: {
 15586                           ;StringCommand.c: 777: PARITYtemp =0;
 15587  01269C  0E00               	movlw	0
 15588  01269E  D04D               	goto	L15
 15589  0126A0                     l13018:
 15590                           
 15591                           ;StringCommand.c: 779: else if(StringContains(Input, "withoddparitybit"))
 15592  0126A0  0101               	movlb	1	; () banked
 15593  0126A2  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15594  0126A6  0101               	movlb	1	; () banked
 15595  0126A8  C188  F10E         	movff	Command@Input,StringContains@This
 15596  0126AC  0EF9               	movlw	high STR_301
 15597  0126AE  0101               	movlb	1	; () banked
 15598  0126B0  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15599  0126B2  0EDC               	movlw	low STR_301
 15600  0126B4  0101               	movlb	1	; () banked
 15601  0126B6  6F10               	movwf	StringContains@That& (0+255),b
 15602  0126B8  EC55  F0B8         	call	_StringContains	;wreg free
 15603  0126BC  0900               	iorlw	0
 15604  0126BE  B4D8               	btfsc	status,2,c
 15605  0126C0  D002               	goto	l13022
 15606                           
 15607                           ;StringCommand.c: 780: {
 15608                           ;StringCommand.c: 781: PARITYtemp =1;
 15609  0126C2  0E01               	movlw	1
 15610  0126C4  D03A               	goto	L15
 15611  0126C6                     l13022:
 15612                           
 15613                           ;StringCommand.c: 783: else if(StringContains(Input, "withevenparitybit"))
 15614  0126C6  0101               	movlb	1	; () banked
 15615  0126C8  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15616  0126CC  0101               	movlb	1	; () banked
 15617  0126CE  C188  F10E         	movff	Command@Input,StringContains@This
 15618  0126D2  0EF8               	movlw	high STR_302
 15619  0126D4  0101               	movlb	1	; () banked
 15620  0126D6  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15621  0126D8  0EDC               	movlw	low STR_302
 15622  0126DA  0101               	movlb	1	; () banked
 15623  0126DC  6F10               	movwf	StringContains@That& (0+255),b
 15624  0126DE  EC55  F0B8         	call	_StringContains	;wreg free
 15625  0126E2  0900               	iorlw	0
 15626  0126E4  B4D8               	btfsc	status,2,c
 15627  0126E6  D002               	goto	l13026
 15628                           
 15629                           ;StringCommand.c: 784: {
 15630                           ;StringCommand.c: 785: PARITYtemp =2;
 15631  0126E8  0E02               	movlw	2
 15632  0126EA  D027               	goto	L15
 15633  0126EC                     l13026:
 15634                           
 15635                           ;StringCommand.c: 787: else if(StringContains(Input, "withmarkbit"))
 15636  0126EC  0101               	movlb	1	; () banked
 15637  0126EE  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15638  0126F2  0101               	movlb	1	; () banked
 15639  0126F4  C188  F10E         	movff	Command@Input,StringContains@This
 15640  0126F8  0EFD               	movlw	high STR_303
 15641  0126FA  0101               	movlb	1	; () banked
 15642  0126FC  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15643  0126FE  0EB7               	movlw	low STR_303
 15644  012700  0101               	movlb	1	; () banked
 15645  012702  6F10               	movwf	StringContains@That& (0+255),b
 15646  012704  EC55  F0B8         	call	_StringContains	;wreg free
 15647  012708  0900               	iorlw	0
 15648  01270A  B4D8               	btfsc	status,2,c
 15649  01270C  D002               	goto	l13030
 15650                           
 15651                           ;StringCommand.c: 788: {
 15652                           ;StringCommand.c: 789: PARITYtemp =3;
 15653  01270E  0E03               	movlw	3
 15654  012710  D014               	goto	L15
 15655  012712                     l13030:
 15656                           
 15657                           ;StringCommand.c: 791: else if(StringContains(Input, "withspacebit"))
 15658  012712  0101               	movlb	1	; () banked
 15659  012714  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15660  012718  0101               	movlb	1	; () banked
 15661  01271A  C188  F10E         	movff	Command@Input,StringContains@This
 15662  01271E  0EFD               	movlw	high STR_304
 15663  012720  0101               	movlb	1	; () banked
 15664  012722  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15665  012724  0E53               	movlw	low STR_304
 15666  012726  0101               	movlb	1	; () banked
 15667  012728  6F10               	movwf	StringContains@That& (0+255),b
 15668  01272A  EC55  F0B8         	call	_StringContains	;wreg free
 15669  01272E  0900               	iorlw	0
 15670  012730  B4D8               	btfsc	status,2,c
 15671  012732  D002               	goto	l13034
 15672                           
 15673                           ;StringCommand.c: 792: {
 15674                           ;StringCommand.c: 793: PARITYtemp =4;
 15675  012734  0E04               	movlw	4
 15676  012736  D001               	goto	L15
 15677  012738                     l13034:
 15678                           
 15679                           ;StringCommand.c: 795: else
 15680                           ;StringCommand.c: 796: {
 15681                           ;StringCommand.c: 797: PARITYtemp = 5;
 15682  012738  0E05               	movlw	5
 15683  01273A                     L15:
 15684  01273A  0105               	movlb	5	; () banked
 15685  01273C  6FD4               	movwf	Command@PARITYtemp& (0+255),b
 15686  01273E  0E00               	movlw	0
 15687  012740  0105               	movlb	5	; () banked
 15688  012742  6FD5               	movwf	(Command@PARITYtemp+1)& (0+255),b
 15689  012744  0E00               	movlw	0
 15690  012746  0105               	movlb	5	; () banked
 15691  012748  6FD6               	movwf	(Command@PARITYtemp+2)& (0+255),b
 15692  01274A  0E00               	movlw	0
 15693  01274C  0105               	movlb	5	; () banked
 15694  01274E  6FD7               	movwf	(Command@PARITYtemp+3)& (0+255),b
 15695                           
 15696                           ; BSR set to: 5
 15697                           ;StringCommand.c: 798: }
 15698                           ;StringCommand.c: 799: if(PARITYtemp != 5)
 15699                           
 15700                           ; BSR set to: 5
 15701                           
 15702                           ; BSR set to: 5
 15703                           
 15704                           ; BSR set to: 5
 15705                           
 15706                           ; BSR set to: 5
 15707                           
 15708                           ; BSR set to: 5
 15709  012750  0105               	movlb	5	; () banked
 15710  012752  51D4               	movf	Command@PARITYtemp& (0+255),w,b
 15711  012754  0A05               	xorlw	5
 15712  012756  11D5               	iorwf	(Command@PARITYtemp+1)& (0+255),w,b
 15713  012758  11D6               	iorwf	(Command@PARITYtemp+2)& (0+255),w,b
 15714  01275A  11D7               	iorwf	(Command@PARITYtemp+3)& (0+255),w,b
 15715  01275C  B4D8               	btfsc	status,2,c
 15716  01275E  D0B2               	goto	l590
 15717                           
 15718                           ; BSR set to: 5
 15719                           ;StringCommand.c: 800: {
 15720                           ;StringCommand.c: 801: SetBaud(BAUDtemp, PARITYtemp);
 15721  012760  C5CE  F14E         	movff	Command@BAUDtemp,SetBaud@Baud
 15722  012764  C5CF  F14F         	movff	Command@BAUDtemp+1,SetBaud@Baud+1
 15723  012768  C5D0  F150         	movff	Command@BAUDtemp+2,SetBaud@Baud+2
 15724  01276C  C5D1  F151         	movff	Command@BAUDtemp+3,SetBaud@Baud+3
 15725  012770  C5D4  F152         	movff	Command@PARITYtemp,SetBaud@Parity
 15726  012774  EC2E  F0A2         	call	_SetBaud	;wreg free
 15727  012778  D0A5               	goto	l590
 15728  01277A                     l13040:
 15729                           
 15730                           ;StringCommand.c: 804: else
 15731                           ;StringCommand.c: 805: {
 15732                           ;StringCommand.c: 806: UARTstring("Baud Out of range\r\n");
 15733  01277A  0EF7               	movlw	high STR_305
 15734  01277C  0101               	movlb	1	; () banked
 15735  01277E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15736  012780  0E63               	movlw	low STR_305
 15737  012782  0101               	movlb	1	; () banked
 15738  012784  6F19               	movwf	UARTstring@data& (0+255),b
 15739  012786  EC36  F0B3         	call	_UARTstring	;wreg free
 15740  01278A  D09C               	goto	l590
 15741  01278C                     l13042:
 15742                           
 15743                           ;StringCommand.c: 809: else if(StringContains(Input, "baudis"))
 15744  01278C  0101               	movlb	1	; () banked
 15745  01278E  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15746  012792  0101               	movlb	1	; () banked
 15747  012794  C188  F10E         	movff	Command@Input,StringContains@This
 15748  012798  0EFF               	movlw	high STR_306
 15749  01279A  0101               	movlb	1	; () banked
 15750  01279C  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15751  01279E  0E89               	movlw	low STR_306
 15752  0127A0  0101               	movlb	1	; () banked
 15753  0127A2  6F10               	movwf	StringContains@That& (0+255),b
 15754  0127A4  EC55  F0B8         	call	_StringContains	;wreg free
 15755  0127A8  0900               	iorlw	0
 15756  0127AA  A4D8               	btfss	status,2,c
 15757  0127AC  D068               	goto	u17130
 15758                           
 15759                           ;StringCommand.c: 817: else if(StringContains(Input, "enterbaudrate"))
 15760                           
 15761                           ;StringCommand.c: 816: }
 15762                           
 15763                           ;StringCommand.c: 810: {
 15764                           ;StringCommand.c: 815: __nop();
 15765  0127AE  0101               	movlb	1	; () banked
 15766  0127B0  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15767  0127B4  0101               	movlb	1	; () banked
 15768  0127B6  C188  F10E         	movff	Command@Input,StringContains@This
 15769  0127BA  0EFC               	movlw	high STR_307
 15770  0127BC  0101               	movlb	1	; () banked
 15771  0127BE  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15772  0127C0  0E7B               	movlw	low STR_307
 15773  0127C2  0101               	movlb	1	; () banked
 15774  0127C4  6F10               	movwf	StringContains@That& (0+255),b
 15775  0127C6  EC55  F0B8         	call	_StringContains	;wreg free
 15776  0127CA  0900               	iorlw	0
 15777  0127CC  A4D8               	btfss	status,2,c
 15778  0127CE  D057               	goto	u17130
 15779                           
 15780                           ;StringCommand.c: 822: else if(ISNUMBER(Input[0]))
 15781                           
 15782                           ;StringCommand.c: 821: }
 15783                           
 15784                           ;StringCommand.c: 818: {
 15785                           ;StringCommand.c: 820: __nop();
 15786  0127D0  C188  FFD9         	movff	Command@Input,fsr2l
 15787  0127D4  C189  FFDA         	movff	Command@Input+1,fsr2h
 15788  0127D8  50DF               	movf	indf2,w,c
 15789  0127DA  ECE6  F0BD         	call	_ISNUMBER
 15790  0127DE  0900               	iorlw	0
 15791  0127E0  B4D8               	btfsc	status,2,c
 15792  0127E2  D060               	goto	l13066
 15793                           
 15794                           ;StringCommand.c: 823: {
 15795                           ;StringCommand.c: 825: if (!StringContains(Input, "="))
 15796  0127E4  0101               	movlb	1	; () banked
 15797  0127E6  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15798  0127EA  0101               	movlb	1	; () banked
 15799  0127EC  C188  F10E         	movff	Command@Input,StringContains@This
 15800  0127F0  0EFD               	movlw	high (STR_199+11)
 15801  0127F2  0101               	movlb	1	; () banked
 15802  0127F4  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15803  0127F6  0E1D               	movlw	low (STR_199+11)
 15804  0127F8  0101               	movlb	1	; () banked
 15805  0127FA  6F10               	movwf	StringContains@That& (0+255),b
 15806  0127FC  EC55  F0B8         	call	_StringContains	;wreg free
 15807  012800  0900               	iorlw	0
 15808  012802  A4D8               	btfss	status,2,c
 15809  012804  D008               	goto	l13056
 15810                           
 15811                           ;StringCommand.c: 826: {
 15812                           ;StringCommand.c: 827: StringAddEqual(Input);
 15813  012806  0101               	movlb	1	; () banked
 15814  012808  C189  F11E         	movff	Command@Input+1,StringAddEqual@Input+1
 15815  01280C  0101               	movlb	1	; () banked
 15816  01280E  C188  F11D         	movff	Command@Input,StringAddEqual@Input
 15817  012812  EC68  F0A7         	call	_StringAddEqual	;wreg free
 15818  012816                     l13056:
 15819                           
 15820                           ;StringCommand.c: 828: }
 15821                           ;StringCommand.c: 829: tempLONG = (unsigned long)GetEnteredNumber(Input);
 15822  012816  0101               	movlb	1	; () banked
 15823  012818  C189  F11B         	movff	Command@Input+1,GetEnteredNumber@This+1
 15824  01281C  0101               	movlb	1	; () banked
 15825  01281E  C188  F11A         	movff	Command@Input,GetEnteredNumber@This
 15826  012822  EC6A  F0A6         	call	_GetEnteredNumber	;wreg free
 15827  012826  C11A  F5DE         	movff	?_GetEnteredNumber,Command@tempLONG
 15828  01282A  C11B  F5DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 15829  01282E  C11C  F5E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 15830  012832  C11D  F5E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 15831                           
 15832                           ;StringCommand.c: 830: {
 15833                           ;StringCommand.c: 831: if(tempLONG >=2400 && tempLONG <=115200)
 15834  012836  0105               	movlb	5	; () banked
 15835  012838  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 15836  01283A  0A80               	xorlw	128
 15837  01283C  0F80               	addlw	128
 15838  01283E  E10B               	bnz	u17125
 15839  012840  0E00               	movlw	0
 15840  012842  0105               	movlb	5	; () banked
 15841  012844  5DE0               	subwf	(Command@tempLONG+2)& (0+255),w,b
 15842  012846  E107               	bnz	u17125
 15843  012848  0E09               	movlw	9
 15844  01284A  0105               	movlb	5	; () banked
 15845  01284C  5DDF               	subwf	(Command@tempLONG+1)& (0+255),w,b
 15846  01284E  E103               	bnz	u17125
 15847  012850  0E60               	movlw	96
 15848  012852  0105               	movlb	5	; () banked
 15849  012854  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 15850  012856                     u17125:
 15851  012856  A0D8               	btfss	status,0,c
 15852  012858  D014               	goto	l13064
 15853                           
 15854                           ; BSR set to: 5
 15855  01285A  0105               	movlb	5	; () banked
 15856  01285C  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 15857  01285E  0A80               	xorlw	128
 15858  012860  0F80               	addlw	128
 15859  012862  E10B               	bnz	u17135
 15860  012864  0E01               	movlw	1
 15861  012866  0105               	movlb	5	; () banked
 15862  012868  5DE0               	subwf	(Command@tempLONG+2)& (0+255),w,b
 15863  01286A  E107               	bnz	u17135
 15864  01286C  0EC2               	movlw	194
 15865  01286E  0105               	movlb	5	; () banked
 15866  012870  5DDF               	subwf	(Command@tempLONG+1)& (0+255),w,b
 15867  012872  E103               	bnz	u17135
 15868  012874  0E01               	movlw	1
 15869  012876  0105               	movlb	5	; () banked
 15870  012878  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 15871  01287A                     u17135:
 15872  01287A  B0D8               	btfsc	status,0,c
 15873  01287C  D002               	goto	l13064
 15874  01287E                     u17130:
 15875                           
 15876                           ; BSR set to: 5
 15877                           ;StringCommand.c: 832: {
 15878                           ;StringCommand.c: 833: __nop();
 15879  01287E  F000               	nop	
 15880                           
 15881                           ;StringCommand.c: 834: }
 15882  012880  D021               	goto	l590
 15883  012882                     l13064:
 15884                           
 15885                           ;StringCommand.c: 835: else
 15886                           ;StringCommand.c: 836: {
 15887                           ;StringCommand.c: 837: UARTstring("Invalid Command\r\n");
 15888  012882  0EF8               	movlw	high STR_309
 15889  012884  0101               	movlb	1	; () banked
 15890  012886  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15891  012888  0E5E               	movlw	low STR_309
 15892  01288A  0101               	movlb	1	; () banked
 15893  01288C  6F19               	movwf	UARTstring@data& (0+255),b
 15894  01288E  EC36  F0B3         	call	_UARTstring	;wreg free
 15895                           
 15896                           ;StringCommand.c: 838: LCDdisplayFeedback("Invalid Command");
 15897  012892  0EFA               	movlw	high STR_310
 15898  012894  0101               	movlb	1	; () banked
 15899  012896  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15900  012898  0ECF               	movlw	low STR_310
 15901  01289A  0101               	movlb	1	; () banked
 15902  01289C  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15903  01289E  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 15904  0128A2  D010               	goto	l590
 15905  0128A4                     l13066:
 15906                           
 15907                           ;StringCommand.c: 842: else
 15908                           ;StringCommand.c: 843: {
 15909                           ;StringCommand.c: 844: UARTstring("Invalid Command\r\n");
 15910  0128A4  0EF8               	movlw	high STR_309
 15911  0128A6  0101               	movlb	1	; () banked
 15912  0128A8  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15913  0128AA  0E5E               	movlw	low STR_309
 15914  0128AC  0101               	movlb	1	; () banked
 15915  0128AE  6F19               	movwf	UARTstring@data& (0+255),b
 15916  0128B0  EC36  F0B3         	call	_UARTstring	;wreg free
 15917                           
 15918                           ;StringCommand.c: 845: LCDdisplayFeedback("Invalid Command");
 15919  0128B4  0EFA               	movlw	high STR_310
 15920  0128B6  0101               	movlb	1	; () banked
 15921  0128B8  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15922  0128BA  0ECF               	movlw	low STR_310
 15923  0128BC  0101               	movlb	1	; () banked
 15924  0128BE  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15925  0128C0  EC62  F0BC         	call	_LCDdisplayFeedback	;wreg free
 15926  0128C4                     l590:
 15927                           
 15928                           ;StringCommand.c: 846: }
 15929                           ;StringCommand.c: 847: UARTstring("\r\n");
 15930  0128C4  0EF6               	movlw	high (STR_279+19)
 15931  0128C6  0101               	movlb	1	; () banked
 15932  0128C8  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15933  0128CA  0EF4               	movlw	low (STR_279+19)
 15934  0128CC  0101               	movlb	1	; () banked
 15935  0128CE  6F19               	movwf	UARTstring@data& (0+255),b
 15936  0128D0  EC36  F0B3         	call	_UARTstring	;wreg free
 15937                           
 15938                           ;StringCommand.c: 848: return 1;
 15939  0128D4  0E01               	movlw	1
 15940  0128D6  0012               	return	
 15941  0128D8                     __end_of_Command:
 15942                           	opt stack 0
 15943                           tblptru	equ	0xFF8
 15944                           tblptrh	equ	0xFF7
 15945                           tblptrl	equ	0xFF6
 15946                           tablat	equ	0xFF5
 15947                           prodl	equ	0xFF3
 15948                           intcon	equ	0xFF2
 15949                           postinc0	equ	0xFEE
 15950                           wreg	equ	0xFE8
 15951                           postinc1	equ	0xFE6
 15952                           postdec1	equ	0xFE5
 15953                           fsr1l	equ	0xFE1
 15954                           indf2	equ	0xFDF
 15955                           postinc2	equ	0xFDE
 15956                           fsr2h	equ	0xFDA
 15957                           fsr2l	equ	0xFD9
 15958                           status	equ	0xFD8
 15959                           
 15960 ;; *************** function _lowercase *****************
 15961 ;; Defined at:
 15962 ;;		line 281 in file "MISC.c"
 15963 ;; Parameters:    Size  Location     Type
 15964 ;;  Input           2   14[BANK1 ] PTR unsigned char 
 15965 ;;		 -> Rxdata(100), 
 15966 ;; Auto vars:     Size  Location     Type
 15967 ;;  i               1   17[BANK1 ] unsigned char 
 15968 ;; Return value:  Size  Location     Type
 15969 ;;		None               void
 15970 ;; Registers used:
 15971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15972 ;; Tracked objects:
 15973 ;;		On entry : 0/0
 15974 ;;		On exit  : 0/0
 15975 ;;		Unchanged: 0/0
 15976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15977 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15978 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15979 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15980 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15981 ;;Total ram usage:        4 bytes
 15982 ;; Hardware stack levels used:    1
 15983 ;; Hardware stack levels required when called:    6
 15984 ;; This function calls:
 15985 ;;		Nothing
 15986 ;; This function is called by:
 15987 ;;		_Command
 15988 ;; This function uses a non-reentrant model
 15989 ;;
 15990                           
 15991                           	psect	text16
 15992  016CFE                     __ptext16:
 15993                           	opt stack 0
 15994  016CFE                     _lowercase:
 15995                           	opt stack 22
 15996                           
 15997                           ;MISC.c: 283: unsigned char i =0;
 15998                           
 15999                           ;incstack = 0
 16000  016CFE  0E00               	movlw	0
 16001  016D00  0101               	movlb	1	; () banked
 16002  016D02  6F11               	movwf	lowercase@i& (0+255),b
 16003                           
 16004                           ;MISC.c: 284: while((Input[i]!= 0) && (i < 100))
 16005  016D04  D030               	goto	l11372
 16006  016D06                     l11364:
 16007                           
 16008                           ; BSR set to: 1
 16009                           ;MISC.c: 285: {
 16010                           ;MISC.c: 286: if((Input[i] >= 65) && (Input[i] <= 90 ))
 16011  016D06  0101               	movlb	1	; () banked
 16012  016D08  5111               	movf	lowercase@i& (0+255),w,b
 16013  016D0A  0D01               	mullw	1
 16014  016D0C  50F3               	movf	prodl,w,c
 16015  016D0E  0101               	movlb	1	; () banked
 16016  016D10  250E               	addwf	lowercase@Input& (0+255),w,b
 16017  016D12  6ED9               	movwf	fsr2l,c
 16018  016D14  50F4               	movf	prodh,w,c
 16019  016D16  0101               	movlb	1	; () banked
 16020  016D18  210F               	addwfc	(lowercase@Input+1)& (0+255),w,b
 16021  016D1A  6EDA               	movwf	fsr2h,c
 16022  016D1C  0E40               	movlw	64
 16023  016D1E  64DF               	cpfsgt	indf2,c
 16024  016D20  D020               	goto	l11370
 16025                           
 16026                           ; BSR set to: 1
 16027  016D22  0101               	movlb	1	; () banked
 16028  016D24  5111               	movf	lowercase@i& (0+255),w,b
 16029  016D26  0D01               	mullw	1
 16030  016D28  50F3               	movf	prodl,w,c
 16031  016D2A  0101               	movlb	1	; () banked
 16032  016D2C  250E               	addwf	lowercase@Input& (0+255),w,b
 16033  016D2E  6ED9               	movwf	fsr2l,c
 16034  016D30  50F4               	movf	prodh,w,c
 16035  016D32  0101               	movlb	1	; () banked
 16036  016D34  210F               	addwfc	(lowercase@Input+1)& (0+255),w,b
 16037  016D36  6EDA               	movwf	fsr2h,c
 16038  016D38  50DF               	movf	indf2,w,c
 16039  016D3A  0101               	movlb	1	; () banked
 16040  016D3C  6F10               	movwf	??_lowercase& (0+255),b
 16041  016D3E  0E5B               	movlw	91
 16042  016D40  0101               	movlb	1	; () banked
 16043  016D42  5D10               	subwf	??_lowercase& (0+255),w,b
 16044  016D44  B0D8               	btfsc	status,0,c
 16045  016D46  D00D               	goto	l11370
 16046                           
 16047                           ; BSR set to: 1
 16048                           ;MISC.c: 287: {
 16049                           ;MISC.c: 288: Input[i] += 32;
 16050  016D48  0101               	movlb	1	; () banked
 16051  016D4A  5111               	movf	lowercase@i& (0+255),w,b
 16052  016D4C  0D01               	mullw	1
 16053  016D4E  50F3               	movf	prodl,w,c
 16054  016D50  0101               	movlb	1	; () banked
 16055  016D52  250E               	addwf	lowercase@Input& (0+255),w,b
 16056  016D54  6ED9               	movwf	fsr2l,c
 16057  016D56  50F4               	movf	prodh,w,c
 16058  016D58  0101               	movlb	1	; () banked
 16059  016D5A  210F               	addwfc	(lowercase@Input+1)& (0+255),w,b
 16060  016D5C  6EDA               	movwf	fsr2h,c
 16061  016D5E  0E20               	movlw	32
 16062  016D60  26DF               	addwf	indf2,f,c
 16063  016D62                     l11370:
 16064                           
 16065                           ; BSR set to: 1
 16066                           ;MISC.c: 289: }
 16067                           ;MISC.c: 290: i++;
 16068  016D62  0101               	movlb	1	; () banked
 16069  016D64  2B11               	incf	lowercase@i& (0+255),f,b
 16070  016D66                     l11372:
 16071                           
 16072                           ; BSR set to: 1
 16073  016D66  0101               	movlb	1	; () banked
 16074  016D68  5111               	movf	lowercase@i& (0+255),w,b
 16075  016D6A  0D01               	mullw	1
 16076  016D6C  50F3               	movf	prodl,w,c
 16077  016D6E  0101               	movlb	1	; () banked
 16078  016D70  250E               	addwf	lowercase@Input& (0+255),w,b
 16079  016D72  6ED9               	movwf	fsr2l,c
 16080  016D74  50F4               	movf	prodh,w,c
 16081  016D76  0101               	movlb	1	; () banked
 16082  016D78  210F               	addwfc	(lowercase@Input+1)& (0+255),w,b
 16083  016D7A  6EDA               	movwf	fsr2h,c
 16084  016D7C  50DF               	movf	indf2,w,c
 16085  016D7E  B4D8               	btfsc	status,2,c
 16086  016D80  0012               	return	
 16087                           
 16088                           ; BSR set to: 1
 16089  016D82  0E63               	movlw	99
 16090  016D84  0101               	movlb	1	; () banked
 16091  016D86  6511               	cpfsgt	lowercase@i& (0+255),b
 16092  016D88  D7BE               	goto	l11364
 16093  016D8A  0012               	return	
 16094  016D8C                     __end_of_lowercase:
 16095                           	opt stack 0
 16096                           tblptru	equ	0xFF8
 16097                           tblptrh	equ	0xFF7
 16098                           tblptrl	equ	0xFF6
 16099                           tablat	equ	0xFF5
 16100                           prodh	equ	0xFF4
 16101                           prodl	equ	0xFF3
 16102                           intcon	equ	0xFF2
 16103                           postinc0	equ	0xFEE
 16104                           wreg	equ	0xFE8
 16105                           postinc1	equ	0xFE6
 16106                           postdec1	equ	0xFE5
 16107                           fsr1l	equ	0xFE1
 16108                           indf2	equ	0xFDF
 16109                           postinc2	equ	0xFDE
 16110                           fsr2h	equ	0xFDA
 16111                           fsr2l	equ	0xFD9
 16112                           status	equ	0xFD8
 16113                           
 16114 ;; *************** function ___lwtoft *****************
 16115 ;; Defined at:
 16116 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
 16117 ;; Parameters:    Size  Location     Type
 16118 ;;  c               2   22[BANK1 ] unsigned int 
 16119 ;; Auto vars:     Size  Location     Type
 16120 ;;		None
 16121 ;; Return value:  Size  Location     Type
 16122 ;;                  3   22[BANK1 ] float 
 16123 ;; Registers used:
 16124 ;;		wreg, status,2, status,0, cstack
 16125 ;; Tracked objects:
 16126 ;;		On entry : 0/0
 16127 ;;		On exit  : 0/0
 16128 ;;		Unchanged: 0/0
 16129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16130 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 16131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16133 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 16134 ;;Total ram usage:        3 bytes
 16135 ;; Hardware stack levels used:    1
 16136 ;; Hardware stack levels required when called:    7
 16137 ;; This function calls:
 16138 ;;		___ftpack
 16139 ;; This function is called by:
 16140 ;;		_Command
 16141 ;; This function uses a non-reentrant model
 16142 ;;
 16143                           
 16144                           	psect	text17
 16145  017A7A                     __ptext17:
 16146                           	opt stack 0
 16147  017A7A                     ___lwtoft:
 16148                           	opt stack 21
 16149                           
 16150                           ; BSR set to: 1
 16151                           ;incstack = 0
 16152  017A7A  0101               	movlb	1	; () banked
 16153  017A7C  C116  F10E         	movff	___lwtoft@c,___ftpack@arg
 16154  017A80  0101               	movlb	1	; () banked
 16155  017A82  C117  F10F         	movff	___lwtoft@c+1,___ftpack@arg+1
 16156  017A86  0101               	movlb	1	; () banked
 16157  017A88  6B10               	clrf	(___ftpack@arg+2)& (0+255),b
 16158  017A8A  0E8E               	movlw	142
 16159  017A8C  0101               	movlb	1	; () banked
 16160  017A8E  6F11               	movwf	___ftpack@exp& (0+255),b
 16161  017A90  0E00               	movlw	0
 16162  017A92  0101               	movlb	1	; () banked
 16163  017A94  6F12               	movwf	___ftpack@sign& (0+255),b
 16164  017A96  ECC7  F0AD         	call	___ftpack	;wreg free
 16165  017A9A  C10E  F116         	movff	?___ftpack,?___lwtoft
 16166  017A9E  C10F  F117         	movff	?___ftpack+1,?___lwtoft+1
 16167  017AA2  C110  F118         	movff	?___ftpack+2,?___lwtoft+2
 16168  017AA6  0012               	return	
 16169  017AA8                     __end_of___lwtoft:
 16170                           	opt stack 0
 16171                           tblptru	equ	0xFF8
 16172                           tblptrh	equ	0xFF7
 16173                           tblptrl	equ	0xFF6
 16174                           tablat	equ	0xFF5
 16175                           prodh	equ	0xFF4
 16176                           prodl	equ	0xFF3
 16177                           intcon	equ	0xFF2
 16178                           postinc0	equ	0xFEE
 16179                           wreg	equ	0xFE8
 16180                           postinc1	equ	0xFE6
 16181                           postdec1	equ	0xFE5
 16182                           fsr1l	equ	0xFE1
 16183                           indf2	equ	0xFDF
 16184                           postinc2	equ	0xFDE
 16185                           fsr2h	equ	0xFDA
 16186                           fsr2l	equ	0xFD9
 16187                           status	equ	0xFD8
 16188                           
 16189 ;; *************** function ___lwmod *****************
 16190 ;; Defined at:
 16191 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
 16192 ;; Parameters:    Size  Location     Type
 16193 ;;  dividend        2   14[BANK1 ] unsigned int 
 16194 ;;  divisor         2   16[BANK1 ] unsigned int 
 16195 ;; Auto vars:     Size  Location     Type
 16196 ;;  counter         1   18[BANK1 ] unsigned char 
 16197 ;; Return value:  Size  Location     Type
 16198 ;;                  2   14[BANK1 ] unsigned int 
 16199 ;; Registers used:
 16200 ;;		wreg, status,2, status,0
 16201 ;; Tracked objects:
 16202 ;;		On entry : 0/0
 16203 ;;		On exit  : 0/0
 16204 ;;		Unchanged: 0/0
 16205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16206 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16207 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16209 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 16210 ;;Total ram usage:        5 bytes
 16211 ;; Hardware stack levels used:    1
 16212 ;; Hardware stack levels required when called:    6
 16213 ;; This function calls:
 16214 ;;		Nothing
 16215 ;; This function is called by:
 16216 ;;		_Command
 16217 ;; This function uses a non-reentrant model
 16218 ;;
 16219                           
 16220                           	psect	text18
 16221  017582                     __ptext18:
 16222                           	opt stack 0
 16223  017582                     ___lwmod:
 16224                           	opt stack 22
 16225                           
 16226                           ;incstack = 0
 16227  017582  0101               	movlb	1	; () banked
 16228  017584  5111               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16229  017586  1110               	iorwf	___lwmod@divisor& (0+255),w,b
 16230  017588  B4D8               	btfsc	status,2,c
 16231  01758A  D026               	goto	l2139
 16232                           
 16233                           ; BSR set to: 1
 16234  01758C  0E01               	movlw	1
 16235  01758E  0101               	movlb	1	; () banked
 16236  017590  6F12               	movwf	___lwmod@counter& (0+255),b
 16237  017592  D006               	goto	l12038
 16238  017594                     l12036:
 16239                           
 16240                           ; BSR set to: 1
 16241  017594  0101               	movlb	1	; () banked
 16242  017596  90D8               	bcf	status,0,c
 16243  017598  3710               	rlcf	___lwmod@divisor& (0+255),f,b
 16244  01759A  3711               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 16245  01759C  0101               	movlb	1	; () banked
 16246  01759E  2B12               	incf	___lwmod@counter& (0+255),f,b
 16247  0175A0                     l12038:
 16248                           
 16249                           ; BSR set to: 1
 16250  0175A0  0101               	movlb	1	; () banked
 16251  0175A2  AF11               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 16252  0175A4  D7F7               	goto	l12036
 16253  0175A6                     l12040:
 16254                           
 16255                           ; BSR set to: 1
 16256  0175A6  0101               	movlb	1	; () banked
 16257  0175A8  5110               	movf	___lwmod@divisor& (0+255),w,b
 16258  0175AA  0101               	movlb	1	; () banked
 16259  0175AC  5D0E               	subwf	___lwmod@dividend& (0+255),w,b
 16260  0175AE  0101               	movlb	1	; () banked
 16261  0175B0  5111               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16262  0175B2  0101               	movlb	1	; () banked
 16263  0175B4  590F               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 16264  0175B6  A0D8               	btfss	status,0,c
 16265  0175B8  D008               	goto	l12044
 16266                           
 16267                           ; BSR set to: 1
 16268  0175BA  0101               	movlb	1	; () banked
 16269  0175BC  5110               	movf	___lwmod@divisor& (0+255),w,b
 16270  0175BE  0101               	movlb	1	; () banked
 16271  0175C0  5F0E               	subwf	___lwmod@dividend& (0+255),f,b
 16272  0175C2  0101               	movlb	1	; () banked
 16273  0175C4  5111               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16274  0175C6  0101               	movlb	1	; () banked
 16275  0175C8  5B0F               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 16276  0175CA                     l12044:
 16277                           
 16278                           ; BSR set to: 1
 16279  0175CA  0101               	movlb	1	; () banked
 16280  0175CC  90D8               	bcf	status,0,c
 16281  0175CE  3311               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 16282  0175D0  3310               	rrcf	___lwmod@divisor& (0+255),f,b
 16283                           
 16284                           ; BSR set to: 1
 16285  0175D2  0101               	movlb	1	; () banked
 16286  0175D4  2F12               	decfsz	___lwmod@counter& (0+255),f,b
 16287  0175D6  D7E7               	goto	l12040
 16288  0175D8                     l2139:
 16289                           
 16290                           ; BSR set to: 1
 16291  0175D8  C10E  F10E         	movff	___lwmod@dividend,?___lwmod
 16292  0175DC  C10F  F10F         	movff	___lwmod@dividend+1,?___lwmod+1
 16293                           
 16294                           ; BSR set to: 1
 16295  0175E0  0012               	return	
 16296  0175E2                     __end_of___lwmod:
 16297                           	opt stack 0
 16298                           tblptru	equ	0xFF8
 16299                           tblptrh	equ	0xFF7
 16300                           tblptrl	equ	0xFF6
 16301                           tablat	equ	0xFF5
 16302                           prodh	equ	0xFF4
 16303                           prodl	equ	0xFF3
 16304                           intcon	equ	0xFF2
 16305                           postinc0	equ	0xFEE
 16306                           wreg	equ	0xFE8
 16307                           postinc1	equ	0xFE6
 16308                           postdec1	equ	0xFE5
 16309                           fsr1l	equ	0xFE1
 16310                           indf2	equ	0xFDF
 16311                           postinc2	equ	0xFDE
 16312                           fsr2h	equ	0xFDA
 16313                           fsr2l	equ	0xFD9
 16314                           status	equ	0xFD8
 16315                           
 16316 ;; *************** function _StringMatch *****************
 16317 ;; Defined at:
 16318 ;;		line 110 in file "MISC.c"
 16319 ;; Parameters:    Size  Location     Type
 16320 ;;  This            2   14[BANK1 ] PTR unsigned char 
 16321 ;;		 -> Rxdata(100), 
 16322 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 16323 ;;		 -> STR_269(2), STR_256(18), STR_253(17), STR_110(18), 
 16324 ;;		 -> STR_107(17), STR_104(15), STR_101(14), STR_98(17), 
 16325 ;;		 -> STR_97(16), STR_77(18), STR_74(17), STR_71(20), 
 16326 ;;		 -> STR_70(19), STR_53(9), STR_50(8), STR_47(5), 
 16327 ;;		 -> STR_44(9), STR_41(8), STR_38(5), STR_35(2), 
 16328 ;; Auto vars:     Size  Location     Type
 16329 ;;		None
 16330 ;; Return value:  Size  Location     Type
 16331 ;;                  1    wreg      unsigned char 
 16332 ;; Registers used:
 16333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16334 ;; Tracked objects:
 16335 ;;		On entry : 0/0
 16336 ;;		On exit  : 0/0
 16337 ;;		Unchanged: 0/0
 16338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16339 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16342 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16343 ;;Total ram usage:        4 bytes
 16344 ;; Hardware stack levels used:    1
 16345 ;; Hardware stack levels required when called:    6
 16346 ;; This function calls:
 16347 ;;		Nothing
 16348 ;; This function is called by:
 16349 ;;		_Command
 16350 ;; This function uses a non-reentrant model
 16351 ;;
 16352                           
 16353                           	psect	text19
 16354  017128                     __ptext19:
 16355                           	opt stack 0
 16356  017128                     _StringMatch:
 16357                           	opt stack 22
 16358                           
 16359                           ;MISC.c: 112: while(*This != 0)
 16360                           
 16361                           ; BSR set to: 1
 16362                           ;incstack = 0
 16363  017128  D025               	goto	l11204
 16364  01712A                     l11194:
 16365                           
 16366                           ;MISC.c: 113: {
 16367                           ;MISC.c: 114: if(*This != *That || *That == 0)
 16368  01712A  0101               	movlb	1	; () banked
 16369  01712C  C110  FFF6         	movff	StringMatch@That,tblptrl
 16370  017130  0101               	movlb	1	; () banked
 16371  017132  C111  FFF7         	movff	StringMatch@That+1,tblptrh
 16372  017136                     	if	0	;tblptru may be non-zero
 16373  017136                     	endif
 16374  017136                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16375  017136  0E00               	movlw	low (__mediumconst shr (0+16))
 16376  017138  6EF8               	movwf	tblptru,c
 16377  01713A                     	endif
 16378  01713A  0008               	tblrd		*
 16379  01713C  50F5               	movf	tablat,w,c
 16380  01713E  C10E  FFD9         	movff	StringMatch@This,fsr2l
 16381  017142  C10F  FFDA         	movff	StringMatch@This+1,fsr2h
 16382  017146  62DF               	cpfseq	indf2,c
 16383  017148  D00D               	goto	l11198
 16384                           
 16385                           ; BSR set to: 1
 16386  01714A  0101               	movlb	1	; () banked
 16387  01714C  C110  FFF6         	movff	StringMatch@That,tblptrl
 16388  017150  0101               	movlb	1	; () banked
 16389  017152  C111  FFF7         	movff	StringMatch@That+1,tblptrh
 16390  017156                     	if	0	;tblptru may be non-zero
 16391  017156                     	endif
 16392  017156                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16393  017156  0E00               	movlw	low (__mediumconst shr (0+16))
 16394  017158  6EF8               	movwf	tblptru,c
 16395  01715A                     	endif
 16396  01715A  0008               	tblrd		*
 16397  01715C  50F5               	movf	tablat,w,c
 16398  01715E  0900               	iorlw	0
 16399  017160  A4D8               	btfss	status,2,c
 16400  017162  D002               	goto	l11202
 16401  017164                     l11198:
 16402                           
 16403                           ; BSR set to: 1
 16404                           ;MISC.c: 115: {
 16405                           ;MISC.c: 116: return 0;
 16406  017164  0E00               	movlw	0
 16407  017166  0012               	return	
 16408  017168                     l11202:
 16409                           
 16410                           ; BSR set to: 1
 16411                           ;MISC.c: 117: }
 16412                           ;MISC.c: 118: This++;
 16413  017168  0101               	movlb	1	; () banked
 16414  01716A  4B0E               	infsnz	StringMatch@This& (0+255),f,b
 16415  01716C  2B0F               	incf	(StringMatch@This+1)& (0+255),f,b
 16416                           
 16417                           ;MISC.c: 119: That++;
 16418  01716E  0101               	movlb	1	; () banked
 16419  017170  4B10               	infsnz	StringMatch@That& (0+255),f,b
 16420  017172  2B11               	incf	(StringMatch@That+1)& (0+255),f,b
 16421  017174                     l11204:
 16422  017174  C10E  FFD9         	movff	StringMatch@This,fsr2l
 16423  017178  C10F  FFDA         	movff	StringMatch@This+1,fsr2h
 16424  01717C  50DF               	movf	indf2,w,c
 16425  01717E  A4D8               	btfss	status,2,c
 16426  017180  D7D4               	goto	l11194
 16427                           
 16428                           ;MISC.c: 120: }
 16429                           ;MISC.c: 121: if(*That == 0)
 16430  017182  0101               	movlb	1	; () banked
 16431  017184  C110  FFF6         	movff	StringMatch@That,tblptrl
 16432  017188  0101               	movlb	1	; () banked
 16433  01718A  C111  FFF7         	movff	StringMatch@That+1,tblptrh
 16434  01718E                     	if	0	;tblptru may be non-zero
 16435  01718E                     	endif
 16436  01718E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16437  01718E  0E00               	movlw	low (__mediumconst shr (0+16))
 16438  017190  6EF8               	movwf	tblptru,c
 16439  017192                     	endif
 16440  017192  0008               	tblrd		*
 16441  017194  50F5               	movf	tablat,w,c
 16442  017196  0900               	iorlw	0
 16443  017198  A4D8               	btfss	status,2,c
 16444  01719A  D002               	goto	l11214
 16445                           
 16446                           ; BSR set to: 1
 16447                           ;MISC.c: 122: {
 16448                           ;MISC.c: 123: return 1;
 16449  01719C  0E01               	movlw	1
 16450  01719E  0012               	return	
 16451  0171A0                     l11214:
 16452                           
 16453                           ; BSR set to: 1
 16454                           ;MISC.c: 125: else
 16455                           ;MISC.c: 126: {
 16456                           ;MISC.c: 127: return 0;
 16457  0171A0  0E00               	movlw	0
 16458  0171A2  0012               	return	
 16459  0171A4                     __end_of_StringMatch:
 16460                           	opt stack 0
 16461                           tblptru	equ	0xFF8
 16462                           tblptrh	equ	0xFF7
 16463                           tblptrl	equ	0xFF6
 16464                           tablat	equ	0xFF5
 16465                           prodh	equ	0xFF4
 16466                           prodl	equ	0xFF3
 16467                           intcon	equ	0xFF2
 16468                           postinc0	equ	0xFEE
 16469                           wreg	equ	0xFE8
 16470                           postinc1	equ	0xFE6
 16471                           postdec1	equ	0xFE5
 16472                           fsr1l	equ	0xFE1
 16473                           indf2	equ	0xFDF
 16474                           postinc2	equ	0xFDE
 16475                           fsr2h	equ	0xFDA
 16476                           fsr2l	equ	0xFD9
 16477                           status	equ	0xFD8
 16478                           
 16479 ;; *************** function _StringContains *****************
 16480 ;; Defined at:
 16481 ;;		line 137 in file "MISC.c"
 16482 ;; Parameters:    Size  Location     Type
 16483 ;;  This            2   14[BANK1 ] PTR unsigned char 
 16484 ;;		 -> Rxdata(100), 
 16485 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 16486 ;;		 -> STR_308(2), STR_307(14), STR_306(7), STR_304(13), 
 16487 ;;		 -> STR_303(12), STR_302(18), STR_301(17), STR_300(16), 
 16488 ;;		 -> STR_299(2), STR_298(11), STR_297(8), STR_296(8), 
 16489 ;;		 -> STR_295(16), STR_252(2), STR_228(4), STR_221(5), 
 16490 ;;		 -> STR_218(8), STR_217(2), STR_197(2), STR_196(2), 
 16491 ;;		 -> STR_180(2), STR_179(2), STR_160(2), STR_157(2), 
 16492 ;;		 -> STR_141(5), STR_140(6), STR_137(4), STR_136(6), 
 16493 ;;		 -> STR_133(2), STR_132(6), STR_131(2), STR_130(10), 
 16494 ;;		 -> STR_129(6), STR_128(6), STR_96(4), STR_95(6), 
 16495 ;;		 -> STR_94(2), STR_69(2), STR_37(2), 
 16496 ;; Auto vars:     Size  Location     Type
 16497 ;;		None
 16498 ;; Return value:  Size  Location     Type
 16499 ;;                  1    wreg      unsigned char 
 16500 ;; Registers used:
 16501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16502 ;; Tracked objects:
 16503 ;;		On entry : 0/0
 16504 ;;		On exit  : 0/0
 16505 ;;		Unchanged: 0/0
 16506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16507 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16509 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16510 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 16511 ;;Total ram usage:        5 bytes
 16512 ;; Hardware stack levels used:    1
 16513 ;; Hardware stack levels required when called:    6
 16514 ;; This function calls:
 16515 ;;		Nothing
 16516 ;; This function is called by:
 16517 ;;		_Command
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521                           	psect	text20
 16522  0170AA                     __ptext20:
 16523                           	opt stack 0
 16524  0170AA                     _StringContains:
 16525                           	opt stack 22
 16526                           
 16527                           ;MISC.c: 139: while(*This != 0)
 16528                           
 16529                           ; BSR set to: 1
 16530                           ;incstack = 0
 16531  0170AA  D035               	goto	l11238
 16532  0170AC                     l11220:
 16533                           
 16534                           ;MISC.c: 142: {
 16535                           ;MISC.c: 143: That++;
 16536  0170AC  0101               	movlb	1	; () banked
 16537  0170AE  4B10               	infsnz	StringContains@That& (0+255),f,b
 16538  0170B0  2B11               	incf	(StringContains@That+1)& (0+255),f,b
 16539                           
 16540                           ;MISC.c: 144: This++;
 16541  0170B2  0101               	movlb	1	; () banked
 16542  0170B4  4B0E               	infsnz	StringContains@This& (0+255),f,b
 16543  0170B6  2B0F               	incf	(StringContains@This+1)& (0+255),f,b
 16544                           
 16545                           ; BSR set to: 1
 16546                           ;MISC.c: 145: if(*That == 0)
 16547  0170B8  0101               	movlb	1	; () banked
 16548  0170BA  C110  FFF6         	movff	StringContains@That,tblptrl
 16549  0170BE  0101               	movlb	1	; () banked
 16550  0170C0  C111  FFF7         	movff	StringContains@That+1,tblptrh
 16551  0170C4                     	if	0	;tblptru may be non-zero
 16552  0170C4                     	endif
 16553  0170C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16554  0170C4  0E00               	movlw	low (__mediumconst shr (0+16))
 16555  0170C6  6EF8               	movwf	tblptru,c
 16556  0170C8                     	endif
 16557  0170C8  0008               	tblrd		*
 16558  0170CA  50F5               	movf	tablat,w,c
 16559  0170CC  0900               	iorlw	0
 16560  0170CE  A4D8               	btfss	status,2,c
 16561  0170D0  D002               	goto	l11228
 16562                           
 16563                           ; BSR set to: 1
 16564                           ;MISC.c: 146: {
 16565                           ;MISC.c: 147: return 1;
 16566  0170D2  0E01               	movlw	1
 16567  0170D4  0012               	return	
 16568  0170D6                     l11228:
 16569                           
 16570                           ; BSR set to: 1
 16571                           ;MISC.c: 148: }
 16572                           ;MISC.c: 149: if(*This == 0)
 16573  0170D6  C10E  FFD9         	movff	StringContains@This,fsr2l
 16574  0170DA  C10F  FFDA         	movff	StringContains@This+1,fsr2h
 16575  0170DE  50DF               	movf	indf2,w,c
 16576  0170E0  A4D8               	btfss	status,2,c
 16577  0170E2  D002               	goto	l11234
 16578                           
 16579                           ; BSR set to: 1
 16580                           ;MISC.c: 150: {
 16581                           ;MISC.c: 151: return 0;
 16582  0170E4  0E00               	movlw	0
 16583  0170E6  0012               	return	
 16584  0170E8                     l11234:
 16585  0170E8  0101               	movlb	1	; () banked
 16586  0170EA  C110  FFF6         	movff	StringContains@That,tblptrl
 16587  0170EE  0101               	movlb	1	; () banked
 16588  0170F0  C111  FFF7         	movff	StringContains@That+1,tblptrh
 16589  0170F4                     	if	0	;tblptru may be non-zero
 16590  0170F4                     	endif
 16591  0170F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16592  0170F4  0E00               	movlw	low (__mediumconst shr (0+16))
 16593  0170F6  6EF8               	movwf	tblptru,c
 16594  0170F8                     	endif
 16595  0170F8  0008               	tblrd		*
 16596  0170FA  CFF5 F112          	movff	tablat,??_StringContains
 16597  0170FE  C10E  FFD9         	movff	StringContains@This,fsr2l
 16598  017102  C10F  FFDA         	movff	StringContains@This+1,fsr2h
 16599  017106  50DF               	movf	indf2,w,c
 16600  017108  0101               	movlb	1	; () banked
 16601  01710A  1912               	xorwf	??_StringContains& (0+255),w,b
 16602  01710C  B4D8               	btfsc	status,2,c
 16603  01710E  D7CE               	goto	l11220
 16604                           
 16605                           ; BSR set to: 1
 16606                           ;MISC.c: 152: }
 16607                           ;MISC.c: 153: }
 16608                           ;MISC.c: 154: This++;
 16609                           
 16610                           ; BSR set to: 1
 16611  017110  0101               	movlb	1	; () banked
 16612  017112  4B0E               	infsnz	StringContains@This& (0+255),f,b
 16613  017114  2B0F               	incf	(StringContains@This+1)& (0+255),f,b
 16614  017116                     l11238:
 16615  017116  C10E  FFD9         	movff	StringContains@This,fsr2l
 16616  01711A  C10F  FFDA         	movff	StringContains@This+1,fsr2h
 16617  01711E  50DF               	movf	indf2,w,c
 16618  017120  A4D8               	btfss	status,2,c
 16619  017122  D7E2               	goto	l11234
 16620                           
 16621                           ;MISC.c: 155: }
 16622                           ;MISC.c: 156: return 0;
 16623  017124  0E00               	movlw	0
 16624  017126  0012               	return	
 16625  017128                     __end_of_StringContains:
 16626                           	opt stack 0
 16627                           tblptru	equ	0xFF8
 16628                           tblptrh	equ	0xFF7
 16629                           tblptrl	equ	0xFF6
 16630                           tablat	equ	0xFF5
 16631                           prodh	equ	0xFF4
 16632                           prodl	equ	0xFF3
 16633                           intcon	equ	0xFF2
 16634                           postinc0	equ	0xFEE
 16635                           wreg	equ	0xFE8
 16636                           postinc1	equ	0xFE6
 16637                           postdec1	equ	0xFE5
 16638                           fsr1l	equ	0xFE1
 16639                           indf2	equ	0xFDF
 16640                           postinc2	equ	0xFDE
 16641                           fsr2h	equ	0xFDA
 16642                           fsr2l	equ	0xFD9
 16643                           status	equ	0xFD8
 16644                           
 16645 ;; *************** function _StringAddEqual *****************
 16646 ;; Defined at:
 16647 ;;		line 299 in file "MISC.c"
 16648 ;; Parameters:    Size  Location     Type
 16649 ;;  Input           2   29[BANK1 ] PTR unsigned char 
 16650 ;;		 -> Rxdata(100), 
 16651 ;; Auto vars:     Size  Location     Type
 16652 ;;  temp          100   33[BANK1 ] unsigned char [100]
 16653 ;;  j               1  135[BANK1 ] unsigned char 
 16654 ;;  i               1  134[BANK1 ] unsigned char 
 16655 ;;  firstnumber     1  133[BANK1 ] unsigned char 
 16656 ;; Return value:  Size  Location     Type
 16657 ;;                  1    wreg      unsigned char 
 16658 ;; Registers used:
 16659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16660 ;; Tracked objects:
 16661 ;;		On entry : 0/0
 16662 ;;		On exit  : 0/0
 16663 ;;		Unchanged: 0/0
 16664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16665 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16666 ;;      Locals:         0       0     103       0       0       0       0       0       0       0       0       0       
      +0       0
 16667 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16668 ;;      Totals:         0       0     107       0       0       0       0       0       0       0       0       0       
      +0       0
 16669 ;;Total ram usage:      107 bytes
 16670 ;; Hardware stack levels used:    1
 16671 ;; Hardware stack levels required when called:    8
 16672 ;; This function calls:
 16673 ;;		_BufferCopy
 16674 ;;		_cleanBuffer
 16675 ;; This function is called by:
 16676 ;;		_Command
 16677 ;; This function uses a non-reentrant model
 16678 ;;
 16679                           
 16680                           	psect	text21
 16681  014ED0                     __ptext21:
 16682                           	opt stack 0
 16683  014ED0                     _StringAddEqual:
 16684                           	opt stack 20
 16685                           
 16686                           ;MISC.c: 301: unsigned char i =0;
 16687                           
 16688                           ;incstack = 0
 16689  014ED0  0E00               	movlw	0
 16690  014ED2  0101               	movlb	1	; () banked
 16691  014ED4  6F86               	movwf	StringAddEqual@i& (0+255),b
 16692                           
 16693                           ;MISC.c: 302: unsigned char j =0;
 16694  014ED6  0E00               	movlw	0
 16695  014ED8  0101               	movlb	1	; () banked
 16696  014EDA  6F87               	movwf	StringAddEqual@j& (0+255),b
 16697                           
 16698                           ;MISC.c: 303: unsigned char firstnumber =200;
 16699  014EDC  0EC8               	movlw	200
 16700  014EDE  0101               	movlb	1	; () banked
 16701  014EE0  6F85               	movwf	StringAddEqual@firstnumber& (0+255),b
 16702                           
 16703                           ; BSR set to: 1
 16704                           ;MISC.c: 304: unsigned char temp[100];
 16705                           ;MISC.c: 305: cleanBuffer(temp,100);
 16706  014EE2  0101               	movlb	1	; () banked
 16707  014EE4  0E01               	movlw	high StringAddEqual@temp
 16708  014EE6  0101               	movlb	1	; () banked
 16709  014EE8  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
 16710  014EEA  0101               	movlb	1	; () banked
 16711  014EEC  0E21               	movlw	low StringAddEqual@temp
 16712  014EEE  0101               	movlb	1	; () banked
 16713  014EF0  6F0E               	movwf	cleanBuffer@data& (0+255),b
 16714  014EF2  0E00               	movlw	0
 16715  014EF4  0101               	movlb	1	; () banked
 16716  014EF6  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
 16717  014EF8  0E64               	movlw	100
 16718  014EFA  0101               	movlb	1	; () banked
 16719  014EFC  6F10               	movwf	cleanBuffer@count& (0+255),b
 16720  014EFE  EC50  F0BB         	call	_cleanBuffer	;wreg free
 16721                           
 16722                           ;MISC.c: 306: while(Input[i] != 0)
 16723  014F02  D02F               	goto	l11388
 16724  014F04                     l11380:
 16725                           
 16726                           ;MISC.c: 307: {
 16727                           ;MISC.c: 308: if((Input[i] >= 48) && (Input[i] <= 57) || (Input[i] == '-'))
 16728  014F04  0101               	movlb	1	; () banked
 16729  014F06  5186               	movf	StringAddEqual@i& (0+255),w,b
 16730  014F08  0D01               	mullw	1
 16731  014F0A  50F3               	movf	prodl,w,c
 16732  014F0C  0101               	movlb	1	; () banked
 16733  014F0E  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 16734  014F10  6ED9               	movwf	fsr2l,c
 16735  014F12  50F4               	movf	prodh,w,c
 16736  014F14  0101               	movlb	1	; () banked
 16737  014F16  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16738  014F18  6EDA               	movwf	fsr2h,c
 16739  014F1A  0E2F               	movlw	47
 16740  014F1C  64DF               	cpfsgt	indf2,c
 16741  014F1E  D00E               	goto	l11384
 16742                           
 16743                           ; BSR set to: 1
 16744  014F20  0101               	movlb	1	; () banked
 16745  014F22  5186               	movf	StringAddEqual@i& (0+255),w,b
 16746  014F24  0D01               	mullw	1
 16747  014F26  50F3               	movf	prodl,w,c
 16748  014F28  0101               	movlb	1	; () banked
 16749  014F2A  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 16750  014F2C  6ED9               	movwf	fsr2l,c
 16751  014F2E  50F4               	movf	prodh,w,c
 16752  014F30  0101               	movlb	1	; () banked
 16753  014F32  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16754  014F34  6EDA               	movwf	fsr2h,c
 16755  014F36  0E39               	movlw	57
 16756  014F38  64DF               	cpfsgt	indf2,c
 16757  014F3A  D00E               	goto	l317
 16758  014F3C                     l11384:
 16759                           
 16760                           ; BSR set to: 1
 16761  014F3C  0101               	movlb	1	; () banked
 16762  014F3E  5186               	movf	StringAddEqual@i& (0+255),w,b
 16763  014F40  0D01               	mullw	1
 16764  014F42  50F3               	movf	prodl,w,c
 16765  014F44  0101               	movlb	1	; () banked
 16766  014F46  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 16767  014F48  6ED9               	movwf	fsr2l,c
 16768  014F4A  50F4               	movf	prodh,w,c
 16769  014F4C  0101               	movlb	1	; () banked
 16770  014F4E  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16771  014F50  6EDA               	movwf	fsr2h,c
 16772  014F52  0E2D               	movlw	45
 16773  014F54  62DF               	cpfseq	indf2,c
 16774  014F56  D003               	goto	l11386
 16775  014F58                     l317:
 16776                           
 16777                           ; BSR set to: 1
 16778                           ;MISC.c: 309: {
 16779                           ;MISC.c: 310: firstnumber=i;
 16780  014F58  C186  F185         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 16781                           
 16782                           ;MISC.c: 311: break;
 16783  014F5C  D010               	goto	l11390
 16784  014F5E                     l11386:
 16785                           
 16786                           ; BSR set to: 1
 16787                           ;MISC.c: 312: }
 16788                           ;MISC.c: 313: i++;
 16789  014F5E  0101               	movlb	1	; () banked
 16790  014F60  2B86               	incf	StringAddEqual@i& (0+255),f,b
 16791  014F62                     l11388:
 16792  014F62  0101               	movlb	1	; () banked
 16793  014F64  5186               	movf	StringAddEqual@i& (0+255),w,b
 16794  014F66  0D01               	mullw	1
 16795  014F68  50F3               	movf	prodl,w,c
 16796  014F6A  0101               	movlb	1	; () banked
 16797  014F6C  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 16798  014F6E  6ED9               	movwf	fsr2l,c
 16799  014F70  50F4               	movf	prodh,w,c
 16800  014F72  0101               	movlb	1	; () banked
 16801  014F74  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16802  014F76  6EDA               	movwf	fsr2h,c
 16803  014F78  50DF               	movf	indf2,w,c
 16804  014F7A  A4D8               	btfss	status,2,c
 16805  014F7C  D7C3               	goto	l11380
 16806  014F7E                     l11390:
 16807                           
 16808                           ; BSR set to: 1
 16809                           ;MISC.c: 314: }
 16810                           ;MISC.c: 315: if(firstnumber ==200)
 16811  014F7E  0101               	movlb	1	; () banked
 16812  014F80  5185               	movf	StringAddEqual@firstnumber& (0+255),w,b
 16813  014F82  0AC8               	xorlw	200
 16814  014F84  B4D8               	btfsc	status,2,c
 16815  014F86  0012               	return	
 16816                           
 16817                           ; BSR set to: 1
 16818                           ;MISC.c: 318: }
 16819                           ;MISC.c: 319: for(j=0;j<firstnumber;j++)
 16820                           
 16821                           ; BSR set to: 1
 16822                           
 16823                           ; BSR set to: 1
 16824                           ;MISC.c: 316: {
 16825                           ;MISC.c: 317: return 0;
 16826                           ;	Return value of _StringAddEqual is never used
 16827  014F88  0E00               	movlw	0
 16828  014F8A  0101               	movlb	1	; () banked
 16829  014F8C  6F87               	movwf	StringAddEqual@j& (0+255),b
 16830  014F8E  D01A               	goto	l11400
 16831  014F90                     l11396:
 16832                           
 16833                           ; BSR set to: 1
 16834                           ;MISC.c: 320: {
 16835                           ;MISC.c: 321: temp[j] = Input[j];
 16836  014F90  0101               	movlb	1	; () banked
 16837  014F92  5187               	movf	StringAddEqual@j& (0+255),w,b
 16838  014F94  0D01               	mullw	1
 16839  014F96  50F3               	movf	prodl,w,c
 16840  014F98  0101               	movlb	1	; () banked
 16841  014F9A  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 16842  014F9C  6ED9               	movwf	fsr2l,c
 16843  014F9E  50F4               	movf	prodh,w,c
 16844  014FA0  0101               	movlb	1	; () banked
 16845  014FA2  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16846  014FA4  6EDA               	movwf	fsr2h,c
 16847  014FA6  0101               	movlb	1	; () banked
 16848  014FA8  5187               	movf	StringAddEqual@j& (0+255),w,b
 16849  014FAA  0D01               	mullw	1
 16850  014FAC  0101               	movlb	1	; () banked
 16851  014FAE  0E21               	movlw	low StringAddEqual@temp
 16852  014FB0  24F3               	addwf	prodl,w,c
 16853  014FB2  6EE1               	movwf	fsr1l,c
 16854  014FB4  0101               	movlb	1	; () banked
 16855  014FB6  0E01               	movlw	high StringAddEqual@temp
 16856  014FB8  20F4               	addwfc	prodh,w,c
 16857  014FBA  6EE2               	movwf	fsr1h,c
 16858  014FBC  CFDF FFE7          	movff	indf2,indf1
 16859                           
 16860                           ; BSR set to: 1
 16861  014FC0  0101               	movlb	1	; () banked
 16862  014FC2  2B87               	incf	StringAddEqual@j& (0+255),f,b
 16863  014FC4                     l11400:
 16864                           
 16865                           ; BSR set to: 1
 16866  014FC4  0101               	movlb	1	; () banked
 16867  014FC6  5185               	movf	StringAddEqual@firstnumber& (0+255),w,b
 16868  014FC8  0101               	movlb	1	; () banked
 16869  014FCA  5D87               	subwf	StringAddEqual@j& (0+255),w,b
 16870  014FCC  A0D8               	btfss	status,0,c
 16871  014FCE  D7E0               	goto	l11396
 16872                           
 16873                           ; BSR set to: 1
 16874                           ;MISC.c: 322: }
 16875                           ;MISC.c: 323: temp[firstnumber] = '=';
 16876                           
 16877                           ; BSR set to: 1
 16878  014FD0  0101               	movlb	1	; () banked
 16879  014FD2  5185               	movf	StringAddEqual@firstnumber& (0+255),w,b
 16880  014FD4  0D01               	mullw	1
 16881  014FD6  0101               	movlb	1	; () banked
 16882  014FD8  0E21               	movlw	low StringAddEqual@temp
 16883  014FDA  24F3               	addwf	prodl,w,c
 16884  014FDC  6ED9               	movwf	fsr2l,c
 16885  014FDE  0101               	movlb	1	; () banked
 16886  014FE0  0E01               	movlw	high StringAddEqual@temp
 16887  014FE2  20F4               	addwfc	prodh,w,c
 16888  014FE4  6EDA               	movwf	fsr2h,c
 16889  014FE6  0E3D               	movlw	61
 16890  014FE8  6EDF               	movwf	indf2,c
 16891                           
 16892                           ; BSR set to: 1
 16893                           ;MISC.c: 324: for(j = (firstnumber);j<99;j++)
 16894  014FEA  C185  F187         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 16895  014FEE  D031               	goto	L16
 16896  014FF0                     l11410:
 16897                           
 16898                           ; BSR set to: 1
 16899                           ;MISC.c: 325: {
 16900                           ;MISC.c: 326: temp[j+1] = Input[j];
 16901  014FF0  0101               	movlb	1	; () banked
 16902  014FF2  5187               	movf	StringAddEqual@j& (0+255),w,b
 16903  014FF4  0D01               	mullw	1
 16904  014FF6  50F3               	movf	prodl,w,c
 16905  014FF8  0101               	movlb	1	; () banked
 16906  014FFA  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 16907  014FFC  6ED9               	movwf	fsr2l,c
 16908  014FFE  50F4               	movf	prodh,w,c
 16909  015000  0101               	movlb	1	; () banked
 16910  015002  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16911  015004  6EDA               	movwf	fsr2h,c
 16912  015006  0101               	movlb	1	; () banked
 16913  015008  5187               	movf	StringAddEqual@j& (0+255),w,b
 16914  01500A  0101               	movlb	1	; () banked
 16915  01500C  6F1F               	movwf	??_StringAddEqual& (0+255),b
 16916  01500E  6B20               	clrf	(??_StringAddEqual+1)& (0+255),b
 16917  015010  0E01               	movlw	1
 16918  015012  0101               	movlb	1	; () banked
 16919  015014  271F               	addwf	??_StringAddEqual& (0+255),f,b
 16920  015016  0E00               	movlw	0
 16921  015018  2320               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 16922  01501A  0101               	movlb	1	; () banked
 16923  01501C  0E21               	movlw	low StringAddEqual@temp
 16924  01501E  0101               	movlb	1	; () banked
 16925  015020  251F               	addwf	??_StringAddEqual& (0+255),w,b
 16926  015022  6EE1               	movwf	fsr1l,c
 16927  015024  0101               	movlb	1	; () banked
 16928  015026  0E01               	movlw	high StringAddEqual@temp
 16929  015028  0101               	movlb	1	; () banked
 16930  01502A  2120               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 16931  01502C  6EE2               	movwf	fsr1h,c
 16932  01502E  CFDF FFE7          	movff	indf2,indf1
 16933                           
 16934                           ; BSR set to: 1
 16935                           ;MISC.c: 327: if(Input[j] ==0)
 16936  015032  0101               	movlb	1	; () banked
 16937  015034  5187               	movf	StringAddEqual@j& (0+255),w,b
 16938  015036  0D01               	mullw	1
 16939  015038  50F3               	movf	prodl,w,c
 16940  01503A  0101               	movlb	1	; () banked
 16941  01503C  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 16942  01503E  6ED9               	movwf	fsr2l,c
 16943  015040  50F4               	movf	prodh,w,c
 16944  015042  0101               	movlb	1	; () banked
 16945  015044  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16946  015046  6EDA               	movwf	fsr2h,c
 16947  015048  50DF               	movf	indf2,w,c
 16948  01504A  B4D8               	btfsc	status,2,c
 16949  01504C  D006               	goto	l11420
 16950                           
 16951                           ; BSR set to: 1
 16952                           
 16953                           ; BSR set to: 1
 16954                           
 16955                           ; BSR set to: 1
 16956                           ;MISC.c: 328: {
 16957                           ;MISC.c: 329: break;
 16958  01504E  0101               	movlb	1	; () banked
 16959  015050  2B87               	incf	StringAddEqual@j& (0+255),f,b
 16960  015052                     L16:
 16961                           
 16962                           ; BSR set to: 1
 16963  015052  0E62               	movlw	98
 16964  015054  0101               	movlb	1	; () banked
 16965  015056  6587               	cpfsgt	StringAddEqual@j& (0+255),b
 16966  015058  D7CB               	goto	l11410
 16967  01505A                     l11420:
 16968                           
 16969                           ; BSR set to: 1
 16970                           ;MISC.c: 330: }
 16971                           ;MISC.c: 331: }
 16972                           ;MISC.c: 332: BufferCopy(temp,Input,100, 0);
 16973  01505A  0101               	movlb	1	; () banked
 16974  01505C  0E01               	movlw	high StringAddEqual@temp
 16975  01505E  0101               	movlb	1	; () banked
 16976  015060  6F17               	movwf	(BufferCopy@from+1)& (0+255),b
 16977  015062  0101               	movlb	1	; () banked
 16978  015064  0E21               	movlw	low StringAddEqual@temp
 16979  015066  0101               	movlb	1	; () banked
 16980  015068  6F16               	movwf	BufferCopy@from& (0+255),b
 16981  01506A  0101               	movlb	1	; () banked
 16982  01506C  C11E  F119         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 16983  015070  0101               	movlb	1	; () banked
 16984  015072  C11D  F118         	movff	StringAddEqual@Input,BufferCopy@to
 16985  015076  0E64               	movlw	100
 16986  015078  0101               	movlb	1	; () banked
 16987  01507A  6F1A               	movwf	BufferCopy@count& (0+255),b
 16988  01507C  0E00               	movlw	0
 16989  01507E  0101               	movlb	1	; () banked
 16990  015080  6F1B               	movwf	BufferCopy@shift& (0+255),b
 16991  015082  EC2C  F0B2         	call	_BufferCopy	;wreg free
 16992  015086  0012               	return	
 16993  015088                     __end_of_StringAddEqual:
 16994                           	opt stack 0
 16995                           tblptru	equ	0xFF8
 16996                           tblptrh	equ	0xFF7
 16997                           tblptrl	equ	0xFF6
 16998                           tablat	equ	0xFF5
 16999                           prodh	equ	0xFF4
 17000                           prodl	equ	0xFF3
 17001                           intcon	equ	0xFF2
 17002                           postinc0	equ	0xFEE
 17003                           wreg	equ	0xFE8
 17004                           indf1	equ	0xFE7
 17005                           postinc1	equ	0xFE6
 17006                           postdec1	equ	0xFE5
 17007                           fsr1h	equ	0xFE2
 17008                           fsr1l	equ	0xFE1
 17009                           indf2	equ	0xFDF
 17010                           postinc2	equ	0xFDE
 17011                           fsr2h	equ	0xFDA
 17012                           fsr2l	equ	0xFD9
 17013                           status	equ	0xFD8
 17014                           
 17015 ;; *************** function _StartsWith *****************
 17016 ;; Defined at:
 17017 ;;		line 165 in file "MISC.c"
 17018 ;; Parameters:    Size  Location     Type
 17019 ;;  This            2   14[BANK1 ] PTR unsigned char 
 17020 ;;		 -> Rxdata(100), 
 17021 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 17022 ;;		 -> STR_251(4), STR_216(4), STR_195(4), STR_178(9), 
 17023 ;;		 -> STR_159(17), STR_158(7), STR_156(4), STR_93(8), 
 17024 ;;		 -> STR_68(11), STR_36(4), 
 17025 ;; Auto vars:     Size  Location     Type
 17026 ;;		None
 17027 ;; Return value:  Size  Location     Type
 17028 ;;                  1    wreg      unsigned char 
 17029 ;; Registers used:
 17030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17031 ;; Tracked objects:
 17032 ;;		On entry : 0/0
 17033 ;;		On exit  : 0/0
 17034 ;;		Unchanged: 0/0
 17035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17036 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17038 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17039 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 17040 ;;Total ram usage:        5 bytes
 17041 ;; Hardware stack levels used:    1
 17042 ;; Hardware stack levels required when called:    6
 17043 ;; This function calls:
 17044 ;;		Nothing
 17045 ;; This function is called by:
 17046 ;;		_Command
 17047 ;; This function uses a non-reentrant model
 17048 ;;
 17049                           
 17050                           	psect	text22
 17051  016994                     __ptext22:
 17052                           	opt stack 0
 17053  016994                     _StartsWith:
 17054                           	opt stack 22
 17055                           
 17056                           ;MISC.c: 167: while(*This != 0)
 17057                           
 17058                           ;incstack = 0
 17059  016994  D02B               	goto	l11262
 17060  016996                     l11246:
 17061                           
 17062                           ;MISC.c: 168: {
 17063                           ;MISC.c: 169: if(*This != *That)
 17064  016996  0101               	movlb	1	; () banked
 17065  016998  C110  FFF6         	movff	StartsWith@That,tblptrl
 17066  01699C  0101               	movlb	1	; () banked
 17067  01699E  C111  FFF7         	movff	StartsWith@That+1,tblptrh
 17068  0169A2                     	if	0	;tblptru may be non-zero
 17069  0169A2                     	endif
 17070  0169A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17071  0169A2  0E00               	movlw	low (__mediumconst shr (0+16))
 17072  0169A4  6EF8               	movwf	tblptru,c
 17073  0169A6                     	endif
 17074  0169A6  0008               	tblrd		*
 17075  0169A8  CFF5 F112          	movff	tablat,??_StartsWith
 17076  0169AC  C10E  FFD9         	movff	StartsWith@This,fsr2l
 17077  0169B0  C10F  FFDA         	movff	StartsWith@This+1,fsr2h
 17078  0169B4  50DF               	movf	indf2,w,c
 17079  0169B6  0101               	movlb	1	; () banked
 17080  0169B8  1912               	xorwf	??_StartsWith& (0+255),w,b
 17081  0169BA  B4D8               	btfsc	status,2,c
 17082  0169BC  D011               	goto	l11260
 17083                           
 17084                           ; BSR set to: 1
 17085                           ;MISC.c: 170: {
 17086                           ;MISC.c: 171: if(*That != 0)
 17087  0169BE  0101               	movlb	1	; () banked
 17088  0169C0  C110  FFF6         	movff	StartsWith@That,tblptrl
 17089  0169C4  0101               	movlb	1	; () banked
 17090  0169C6  C111  FFF7         	movff	StartsWith@That+1,tblptrh
 17091  0169CA                     	if	0	;tblptru may be non-zero
 17092  0169CA                     	endif
 17093  0169CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17094  0169CA  0E00               	movlw	low (__mediumconst shr (0+16))
 17095  0169CC  6EF8               	movwf	tblptru,c
 17096  0169CE                     	endif
 17097  0169CE  0008               	tblrd		*
 17098  0169D0  50F5               	movf	tablat,w,c
 17099  0169D2  0900               	iorlw	0
 17100  0169D4  B4D8               	btfsc	status,2,c
 17101  0169D6  D002               	goto	l11256
 17102                           
 17103                           ; BSR set to: 1
 17104                           ;MISC.c: 172: {
 17105                           ;MISC.c: 173: return 0;
 17106  0169D8  0E00               	movlw	0
 17107  0169DA  0012               	return	
 17108  0169DC                     l11256:
 17109                           
 17110                           ; BSR set to: 1
 17111                           ;MISC.c: 175: else
 17112                           ;MISC.c: 176: {
 17113                           ;MISC.c: 177: return 1;
 17114  0169DC  0E01               	movlw	1
 17115  0169DE  0012               	return	
 17116  0169E0                     l11260:
 17117                           
 17118                           ; BSR set to: 1
 17119                           ;MISC.c: 178: }
 17120                           ;MISC.c: 179: }
 17121                           ;MISC.c: 180: This++;
 17122  0169E0  0101               	movlb	1	; () banked
 17123  0169E2  4B0E               	infsnz	StartsWith@This& (0+255),f,b
 17124  0169E4  2B0F               	incf	(StartsWith@This+1)& (0+255),f,b
 17125                           
 17126                           ;MISC.c: 181: That++;
 17127  0169E6  0101               	movlb	1	; () banked
 17128  0169E8  4B10               	infsnz	StartsWith@That& (0+255),f,b
 17129  0169EA  2B11               	incf	(StartsWith@That+1)& (0+255),f,b
 17130  0169EC                     l11262:
 17131  0169EC  C10E  FFD9         	movff	StartsWith@This,fsr2l
 17132  0169F0  C10F  FFDA         	movff	StartsWith@This+1,fsr2h
 17133  0169F4  50DF               	movf	indf2,w,c
 17134  0169F6  A4D8               	btfss	status,2,c
 17135  0169F8  D7CE               	goto	l11246
 17136                           
 17137                           ;MISC.c: 182: }
 17138                           ;MISC.c: 183: if(*This == 0 && *That == 0)
 17139  0169FA  C10E  FFD9         	movff	StartsWith@This,fsr2l
 17140  0169FE  C10F  FFDA         	movff	StartsWith@This+1,fsr2h
 17141  016A02  50DF               	movf	indf2,w,c
 17142  016A04  A4D8               	btfss	status,2,c
 17143  016A06  D00F               	goto	l11274
 17144  016A08  0101               	movlb	1	; () banked
 17145  016A0A  C110  FFF6         	movff	StartsWith@That,tblptrl
 17146  016A0E  0101               	movlb	1	; () banked
 17147  016A10  C111  FFF7         	movff	StartsWith@That+1,tblptrh
 17148  016A14                     	if	0	;tblptru may be non-zero
 17149  016A14                     	endif
 17150  016A14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17151  016A14  0E00               	movlw	low (__mediumconst shr (0+16))
 17152  016A16  6EF8               	movwf	tblptru,c
 17153  016A18                     	endif
 17154  016A18  0008               	tblrd		*
 17155  016A1A  50F5               	movf	tablat,w,c
 17156  016A1C  0900               	iorlw	0
 17157  016A1E  A4D8               	btfss	status,2,c
 17158  016A20  D002               	goto	l11274
 17159                           
 17160                           ; BSR set to: 1
 17161                           ;MISC.c: 184: {
 17162                           ;MISC.c: 186: return 1;
 17163  016A22  0E01               	movlw	1
 17164  016A24  0012               	return	
 17165  016A26                     l11274:
 17166                           
 17167                           ;MISC.c: 188: else
 17168                           ;MISC.c: 189: {
 17169                           ;MISC.c: 191: return 0;
 17170  016A26  0E00               	movlw	0
 17171  016A28  0012               	return	
 17172  016A2A                     __end_of_StartsWith:
 17173                           	opt stack 0
 17174                           tblptru	equ	0xFF8
 17175                           tblptrh	equ	0xFF7
 17176                           tblptrl	equ	0xFF6
 17177                           tablat	equ	0xFF5
 17178                           prodh	equ	0xFF4
 17179                           prodl	equ	0xFF3
 17180                           intcon	equ	0xFF2
 17181                           postinc0	equ	0xFEE
 17182                           wreg	equ	0xFE8
 17183                           indf1	equ	0xFE7
 17184                           postinc1	equ	0xFE6
 17185                           postdec1	equ	0xFE5
 17186                           fsr1h	equ	0xFE2
 17187                           fsr1l	equ	0xFE1
 17188                           indf2	equ	0xFDF
 17189                           postinc2	equ	0xFDE
 17190                           fsr2h	equ	0xFDA
 17191                           fsr2l	equ	0xFD9
 17192                           status	equ	0xFD8
 17193                           
 17194 ;; *************** function _SprintDate *****************
 17195 ;; Defined at:
 17196 ;;		line 254 in file "RTC.c"
 17197 ;; Parameters:    Size  Location     Type
 17198 ;;  ReturnBuf       2   78[BANK1 ] PTR unsigned char 
 17199 ;;		 -> Command@buf(200), 
 17200 ;;  DisplayTime     9   80[BANK1 ] struct TIME
 17201 ;;  Military        1   89[BANK1 ] unsigned char 
 17202 ;; Auto vars:     Size  Location     Type
 17203 ;;		None
 17204 ;; Return value:  Size  Location     Type
 17205 ;;		None               void
 17206 ;; Registers used:
 17207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17208 ;; Tracked objects:
 17209 ;;		On entry : 0/0
 17210 ;;		On exit  : 0/0
 17211 ;;		Unchanged: 0/0
 17212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17213 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 17214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17216 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 17217 ;;Total ram usage:       12 bytes
 17218 ;; Hardware stack levels used:    1
 17219 ;; Hardware stack levels required when called:    8
 17220 ;; This function calls:
 17221 ;;		_sprintf
 17222 ;; This function is called by:
 17223 ;;		_Command
 17224 ;; This function uses a non-reentrant model
 17225 ;;
 17226                           
 17227                           	psect	text23
 17228  015A74                     __ptext23:
 17229                           	opt stack 0
 17230  015A74                     _SprintDate:
 17231                           	opt stack 20
 17232                           
 17233                           ;RTC.c: 256: if(!Military)
 17234                           
 17235                           ;incstack = 0
 17236  015A74  0101               	movlb	1	; () banked
 17237  015A76  6759               	tstfsz	SprintDate@Military& (0+255),b
 17238  015A78  D05D               	goto	l11652
 17239                           
 17240                           ; BSR set to: 1
 17241                           ;RTC.c: 257: {
 17242                           ;RTC.c: 258: if(!DisplayTime.HoursAM_PM)
 17243  015A7A  0101               	movlb	1	; () banked
 17244  015A7C  6754               	tstfsz	(SprintDate@DisplayTime+4)& (0+255),b
 17245  015A7E  D02D               	goto	l11650
 17246                           
 17247                           ; BSR set to: 1
 17248                           ;RTC.c: 259: {
 17249                           ;RTC.c: 260: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d AM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 17250  015A80  0101               	movlb	1	; () banked
 17251  015A82  C14F  F125         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 17252  015A86  0101               	movlb	1	; () banked
 17253  015A88  C14E  F124         	movff	SprintDate@ReturnBuf,sprintf@sp
 17254  015A8C  0EF3               	movlw	high STR_315
 17255  015A8E  0101               	movlb	1	; () banked
 17256  015A90  6F27               	movwf	(sprintf@f+1)& (0+255),b
 17257  015A92  0E3A               	movlw	low STR_315
 17258  015A94  0101               	movlb	1	; () banked
 17259  015A96  6F26               	movwf	sprintf@f& (0+255),b
 17260  015A98  0101               	movlb	1	; () banked
 17261  015A9A  C157  F128         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 17262  015A9E  0101               	movlb	1	; () banked
 17263  015AA0  6B29               	clrf	(?_sprintf+5)& (0+255),b
 17264  015AA2  0101               	movlb	1	; () banked
 17265  015AA4  C156  F12A         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 17266  015AA8  0101               	movlb	1	; () banked
 17267  015AAA  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 17268  015AAC  0101               	movlb	1	; () banked
 17269  015AAE  C158  F12C         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 17270  015AB2  0101               	movlb	1	; () banked
 17271  015AB4  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 17272  015AB6  0101               	movlb	1	; () banked
 17273  015AB8  C152  F12E         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 17274  015ABC  0101               	movlb	1	; () banked
 17275  015ABE  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 17276  015AC0  0101               	movlb	1	; () banked
 17277  015AC2  C151  F130         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 17278  015AC6  0101               	movlb	1	; () banked
 17279  015AC8  6B31               	clrf	(?_sprintf+13)& (0+255),b
 17280  015ACA  0101               	movlb	1	; () banked
 17281  015ACC  C150  F132         	movff	SprintDate@DisplayTime,?_sprintf+14
 17282  015AD0  0101               	movlb	1	; () banked
 17283  015AD2  6B33               	clrf	(?_sprintf+15)& (0+255),b
 17284  015AD4  EC6C  F094         	call	_sprintf	;wreg free
 17285                           
 17286                           ;RTC.c: 261: }
 17287  015AD8  0012               	return	
 17288  015ADA                     l11650:
 17289                           
 17290                           ;RTC.c: 262: else
 17291                           ;RTC.c: 263: {
 17292                           ;RTC.c: 264: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d PM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 17293  015ADA  0101               	movlb	1	; () banked
 17294  015ADC  C14F  F125         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 17295  015AE0  0101               	movlb	1	; () banked
 17296  015AE2  C14E  F124         	movff	SprintDate@ReturnBuf,sprintf@sp
 17297  015AE6  0EF3               	movlw	high STR_316
 17298  015AE8  0101               	movlb	1	; () banked
 17299  015AEA  6F27               	movwf	(sprintf@f+1)& (0+255),b
 17300  015AEC  0E5D               	movlw	low STR_316
 17301  015AEE  0101               	movlb	1	; () banked
 17302  015AF0  6F26               	movwf	sprintf@f& (0+255),b
 17303  015AF2  0101               	movlb	1	; () banked
 17304  015AF4  C157  F128         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 17305  015AF8  0101               	movlb	1	; () banked
 17306  015AFA  6B29               	clrf	(?_sprintf+5)& (0+255),b
 17307  015AFC  0101               	movlb	1	; () banked
 17308  015AFE  C156  F12A         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 17309  015B02  0101               	movlb	1	; () banked
 17310  015B04  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 17311  015B06  0101               	movlb	1	; () banked
 17312  015B08  C158  F12C         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 17313  015B0C  0101               	movlb	1	; () banked
 17314  015B0E  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 17315  015B10  0101               	movlb	1	; () banked
 17316  015B12  C152  F12E         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 17317  015B16  0101               	movlb	1	; () banked
 17318  015B18  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 17319  015B1A  0101               	movlb	1	; () banked
 17320  015B1C  C151  F130         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 17321  015B20  0101               	movlb	1	; () banked
 17322  015B22  6B31               	clrf	(?_sprintf+13)& (0+255),b
 17323  015B24  0101               	movlb	1	; () banked
 17324  015B26  C150  F132         	movff	SprintDate@DisplayTime,?_sprintf+14
 17325  015B2A  0101               	movlb	1	; () banked
 17326  015B2C  6B33               	clrf	(?_sprintf+15)& (0+255),b
 17327  015B2E  EC6C  F094         	call	_sprintf	;wreg free
 17328  015B32  0012               	return	
 17329  015B34                     l11652:
 17330                           
 17331                           ;RTC.c: 267: else
 17332                           ;RTC.c: 268: {
 17333                           ;RTC.c: 269: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d", DisplayTime.Month, Dis
      +                          playTime.Date, DisplayTime.Year, DisplayTime.HoursMilitary, DisplayTime.Minutes, Display
      +                          Time.Seconds);
 17334  015B34  0101               	movlb	1	; () banked
 17335  015B36  C14F  F125         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 17336  015B3A  0101               	movlb	1	; () banked
 17337  015B3C  C14E  F124         	movff	SprintDate@ReturnBuf,sprintf@sp
 17338  015B40  0EF4               	movlw	high STR_317
 17339  015B42  0101               	movlb	1	; () banked
 17340  015B44  6F27               	movwf	(sprintf@f+1)& (0+255),b
 17341  015B46  0E05               	movlw	low STR_317
 17342  015B48  0101               	movlb	1	; () banked
 17343  015B4A  6F26               	movwf	sprintf@f& (0+255),b
 17344  015B4C  0101               	movlb	1	; () banked
 17345  015B4E  C157  F128         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 17346  015B52  0101               	movlb	1	; () banked
 17347  015B54  6B29               	clrf	(?_sprintf+5)& (0+255),b
 17348  015B56  0101               	movlb	1	; () banked
 17349  015B58  C156  F12A         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 17350  015B5C  0101               	movlb	1	; () banked
 17351  015B5E  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 17352  015B60  0101               	movlb	1	; () banked
 17353  015B62  C158  F12C         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 17354  015B66  0101               	movlb	1	; () banked
 17355  015B68  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 17356  015B6A  0101               	movlb	1	; () banked
 17357  015B6C  C153  F12E         	movff	SprintDate@DisplayTime+3,?_sprintf+10
 17358  015B70  0101               	movlb	1	; () banked
 17359  015B72  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 17360  015B74  0101               	movlb	1	; () banked
 17361  015B76  C151  F130         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 17362  015B7A  0101               	movlb	1	; () banked
 17363  015B7C  6B31               	clrf	(?_sprintf+13)& (0+255),b
 17364  015B7E  0101               	movlb	1	; () banked
 17365  015B80  C150  F132         	movff	SprintDate@DisplayTime,?_sprintf+14
 17366  015B84  0101               	movlb	1	; () banked
 17367  015B86  6B33               	clrf	(?_sprintf+15)& (0+255),b
 17368  015B88  EC6C  F094         	call	_sprintf	;wreg free
 17369  015B8C  0012               	return	
 17370  015B8E                     __end_of_SprintDate:
 17371                           	opt stack 0
 17372                           tblptru	equ	0xFF8
 17373                           tblptrh	equ	0xFF7
 17374                           tblptrl	equ	0xFF6
 17375                           tablat	equ	0xFF5
 17376                           prodh	equ	0xFF4
 17377                           prodl	equ	0xFF3
 17378                           intcon	equ	0xFF2
 17379                           postinc0	equ	0xFEE
 17380                           wreg	equ	0xFE8
 17381                           indf1	equ	0xFE7
 17382                           postinc1	equ	0xFE6
 17383                           postdec1	equ	0xFE5
 17384                           fsr1h	equ	0xFE2
 17385                           fsr1l	equ	0xFE1
 17386                           indf2	equ	0xFDF
 17387                           postinc2	equ	0xFDE
 17388                           fsr2h	equ	0xFDA
 17389                           fsr2l	equ	0xFD9
 17390                           status	equ	0xFD8
 17391                           
 17392 ;; *************** function _SetDuty *****************
 17393 ;; Defined at:
 17394 ;;		line 120 in file "PWM.c"
 17395 ;; Parameters:    Size  Location     Type
 17396 ;;  Duty            1    wreg     unsigned char 
 17397 ;; Auto vars:     Size  Location     Type
 17398 ;;  Duty            1   75[BANK1 ] unsigned char 
 17399 ;;  tempPR2         3   76[BANK1 ] float 
 17400 ;;  temp            2   81[BANK1 ] unsigned int 
 17401 ;;  LSB             1   80[BANK1 ] unsigned char 
 17402 ;;  MSB             1   79[BANK1 ] unsigned char 
 17403 ;; Return value:  Size  Location     Type
 17404 ;;		None               void
 17405 ;; Registers used:
 17406 ;;		wreg, status,2, status,0, cstack
 17407 ;; Tracked objects:
 17408 ;;		On entry : 0/0
 17409 ;;		On exit  : 0/0
 17410 ;;		Unchanged: 0/0
 17411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17413 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 17414 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17415 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 17416 ;;Total ram usage:       12 bytes
 17417 ;; Hardware stack levels used:    1
 17418 ;; Hardware stack levels required when called:    8
 17419 ;; This function calls:
 17420 ;;		___ftdiv
 17421 ;;		___ftmul
 17422 ;;		___fttol
 17423 ;;		___lbtoft
 17424 ;; This function is called by:
 17425 ;;		_main
 17426 ;;		_Command
 17427 ;;		_PWM_init
 17428 ;;		_ContrastPWM_init
 17429 ;; This function uses a non-reentrant model
 17430 ;;
 17431                           
 17432                           	psect	text24
 17433  0162C2                     __ptext24:
 17434                           	opt stack 0
 17435  0162C2                     _SetDuty:
 17436                           	opt stack 21
 17437                           
 17438                           ;incstack = 0
 17439                           ;SetDuty@Duty stored from wreg
 17440  0162C2  0101               	movlb	1	; () banked
 17441  0162C4  6F4B               	movwf	SetDuty@Duty& (0+255),b
 17442                           
 17443                           ; BSR set to: 1
 17444                           ;PWM.c: 122: unsigned int temp=0;
 17445  0162C6  0E00               	movlw	0
 17446  0162C8  0101               	movlb	1	; () banked
 17447  0162CA  6F52               	movwf	(SetDuty@temp+1)& (0+255),b
 17448  0162CC  0E00               	movlw	0
 17449  0162CE  0101               	movlb	1	; () banked
 17450  0162D0  6F51               	movwf	SetDuty@temp& (0+255),b
 17451                           
 17452                           ; BSR set to: 1
 17453                           ;PWM.c: 123: float tempPR2=0;
 17454  0162D2  0E00               	movlw	0
 17455  0162D4  0101               	movlb	1	; () banked
 17456  0162D6  6F4C               	movwf	SetDuty@tempPR2& (0+255),b
 17457  0162D8  0E00               	movlw	0
 17458  0162DA  0101               	movlb	1	; () banked
 17459  0162DC  6F4D               	movwf	(SetDuty@tempPR2+1)& (0+255),b
 17460  0162DE  0E00               	movlw	0
 17461  0162E0  0101               	movlb	1	; () banked
 17462  0162E2  6F4E               	movwf	(SetDuty@tempPR2+2)& (0+255),b
 17463                           
 17464                           ; BSR set to: 1
 17465                           ;PWM.c: 124: unsigned char MSB,LSB;
 17466                           ;PWM.c: 126: tempPR2 = (float) PR2;
 17467  0162E4  50CB               	movf	4043,w,c	;volatile
 17468  0162E6  ECF4  F0BC         	call	___lbtoft
 17469  0162EA  C116  F14C         	movff	?___lbtoft,SetDuty@tempPR2
 17470  0162EE  C117  F14D         	movff	?___lbtoft+1,SetDuty@tempPR2+1
 17471  0162F2  C118  F14E         	movff	?___lbtoft+2,SetDuty@tempPR2+2
 17472                           
 17473                           ;PWM.c: 128: temp = (int)(tempPR2 * ((float)Duty/100));
 17474  0162F6  C14C  F12C         	movff	SetDuty@tempPR2,___ftmul@f2
 17475  0162FA  C14D  F12D         	movff	SetDuty@tempPR2+1,___ftmul@f2+1
 17476  0162FE  C14E  F12E         	movff	SetDuty@tempPR2+2,___ftmul@f2+2
 17477  016302  0E00               	movlw	0
 17478  016304  0101               	movlb	1	; () banked
 17479  016306  6F1D               	movwf	___ftdiv@f2& (0+255),b
 17480  016308  0EC8               	movlw	200
 17481  01630A  0101               	movlb	1	; () banked
 17482  01630C  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
 17483  01630E  0E42               	movlw	66
 17484  016310  0101               	movlb	1	; () banked
 17485  016312  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
 17486  016314  0101               	movlb	1	; () banked
 17487  016316  514B               	movf	SetDuty@Duty& (0+255),w,b
 17488  016318  ECF4  F0BC         	call	___lbtoft
 17489  01631C  C116  F11A         	movff	?___lbtoft,___ftdiv@f1
 17490  016320  C117  F11B         	movff	?___lbtoft+1,___ftdiv@f1+1
 17491  016324  C118  F11C         	movff	?___lbtoft+2,___ftdiv@f1+2
 17492  016328  EC61  F0AB         	call	___ftdiv	;wreg free
 17493  01632C  C11A  F129         	movff	?___ftdiv,___ftmul@f1
 17494  016330  C11B  F12A         	movff	?___ftdiv+1,___ftmul@f1+1
 17495  016334  C11C  F12B         	movff	?___ftdiv+2,___ftmul@f1+2
 17496  016338  ECA6  F0AA         	call	___ftmul	;wreg free
 17497  01633C  C129  F138         	movff	?___ftmul,___fttol@f1
 17498  016340  C12A  F139         	movff	?___ftmul+1,___fttol@f1+1
 17499  016344  C12B  F13A         	movff	?___ftmul+2,___fttol@f1+2
 17500  016348  ECE8  F0A9         	call	___fttol	;wreg free
 17501  01634C  C138  F147         	movff	?___fttol,??_SetDuty
 17502  016350  C139  F148         	movff	?___fttol+1,??_SetDuty+1
 17503  016354  C13A  F149         	movff	?___fttol+2,??_SetDuty+2
 17504  016358  C13B  F14A         	movff	?___fttol+3,??_SetDuty+3
 17505  01635C  C147  F151         	movff	??_SetDuty,SetDuty@temp
 17506  016360  C148  F152         	movff	??_SetDuty+1,SetDuty@temp+1
 17507                           
 17508                           ;PWM.c: 129: MSB = (temp & 0x300)>>8;
 17509  016364  0101               	movlb	1	; () banked
 17510  016366  C152  F147         	movff	SetDuty@temp+1,??_SetDuty
 17511  01636A  C147  F148         	movff	??_SetDuty,??_SetDuty+1
 17512  01636E  0101               	movlb	1	; () banked
 17513  016370  6B49               	clrf	(??_SetDuty+2)& (0+255),b
 17514  016372  0101               	movlb	1	; () banked
 17515  016374  5148               	movf	(??_SetDuty+1)& (0+255),w,b
 17516  016376  0B03               	andlw	3
 17517  016378  0101               	movlb	1	; () banked
 17518  01637A  6F4F               	movwf	SetDuty@MSB& (0+255),b
 17519                           
 17520                           ; BSR set to: 1
 17521                           ;PWM.c: 130: LSB = temp & 0xff;
 17522  01637C  C151  F150         	movff	SetDuty@temp,SetDuty@LSB
 17523                           
 17524                           ; BSR set to: 1
 17525                           ;PWM.c: 132: CCP1CON &= ~(0b00110000);
 17526  016380  0ECF               	movlw	207
 17527  016382  16BD               	andwf	4029,f,c	;volatile
 17528                           
 17529                           ; BSR set to: 1
 17530                           ;PWM.c: 133: CCP1CON |= MSB << 4;
 17531  016384  0101               	movlb	1	; () banked
 17532  016386  394F               	swapf	SetDuty@MSB& (0+255),w,b
 17533  016388  0BF0               	andlw	240
 17534  01638A  12BD               	iorwf	4029,f,c	;volatile
 17535                           
 17536                           ; BSR set to: 1
 17537                           ;PWM.c: 134: CCPR1L = LSB;
 17538  01638C  C150  FFBE         	movff	SetDuty@LSB,4030	;volatile
 17539                           
 17540                           ; BSR set to: 1
 17541                           ;PWM.c: 135: __nop();
 17542  016390  F000               	nop	
 17543  016392  0012               	return	
 17544  016394                     __end_of_SetDuty:
 17545                           	opt stack 0
 17546                           tblptru	equ	0xFF8
 17547                           tblptrh	equ	0xFF7
 17548                           tblptrl	equ	0xFF6
 17549                           tablat	equ	0xFF5
 17550                           prodh	equ	0xFF4
 17551                           prodl	equ	0xFF3
 17552                           intcon	equ	0xFF2
 17553                           postinc0	equ	0xFEE
 17554                           wreg	equ	0xFE8
 17555                           indf1	equ	0xFE7
 17556                           postinc1	equ	0xFE6
 17557                           postdec1	equ	0xFE5
 17558                           fsr1h	equ	0xFE2
 17559                           fsr1l	equ	0xFE1
 17560                           indf2	equ	0xFDF
 17561                           postinc2	equ	0xFDE
 17562                           fsr2h	equ	0xFDA
 17563                           fsr2l	equ	0xFD9
 17564                           status	equ	0xFD8
 17565                           
 17566 ;; *************** function _SetContrast *****************
 17567 ;; Defined at:
 17568 ;;		line 94 in file "PWM.c"
 17569 ;; Parameters:    Size  Location     Type
 17570 ;;  Duty            1    wreg     unsigned char 
 17571 ;; Auto vars:     Size  Location     Type
 17572 ;;  Duty            1   82[BANK1 ] unsigned char 
 17573 ;;  tempPR2         3   75[BANK1 ] float 
 17574 ;;  temp            2   80[BANK1 ] unsigned int 
 17575 ;;  LSB             1   79[BANK1 ] unsigned char 
 17576 ;;  MSB             1   78[BANK1 ] unsigned char 
 17577 ;; Return value:  Size  Location     Type
 17578 ;;		None               void
 17579 ;; Registers used:
 17580 ;;		wreg, status,2, status,0, cstack
 17581 ;; Tracked objects:
 17582 ;;		On entry : 0/0
 17583 ;;		On exit  : 0/0
 17584 ;;		Unchanged: 0/0
 17585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17587 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 17588 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17589 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 17590 ;;Total ram usage:       12 bytes
 17591 ;; Hardware stack levels used:    1
 17592 ;; Hardware stack levels required when called:    8
 17593 ;; This function calls:
 17594 ;;		___ftdiv
 17595 ;;		___ftmul
 17596 ;;		___fttol
 17597 ;;		___lbtoft
 17598 ;; This function is called by:
 17599 ;;		_main
 17600 ;;		_Command
 17601 ;; This function uses a non-reentrant model
 17602 ;;
 17603                           
 17604                           	psect	text25
 17605  015D86                     __ptext25:
 17606                           	opt stack 0
 17607  015D86                     _SetContrast:
 17608                           	opt stack 21
 17609                           
 17610                           ;incstack = 0
 17611                           ;SetContrast@Duty stored from wreg
 17612  015D86  0101               	movlb	1	; () banked
 17613  015D88  6F52               	movwf	SetContrast@Duty& (0+255),b
 17614                           
 17615                           ; BSR set to: 1
 17616                           ;PWM.c: 96: unsigned int temp=0;
 17617  015D8A  0E00               	movlw	0
 17618  015D8C  0101               	movlb	1	; () banked
 17619  015D8E  6F51               	movwf	(SetContrast@temp+1)& (0+255),b
 17620  015D90  0E00               	movlw	0
 17621  015D92  0101               	movlb	1	; () banked
 17622  015D94  6F50               	movwf	SetContrast@temp& (0+255),b
 17623                           
 17624                           ; BSR set to: 1
 17625                           ;PWM.c: 97: float tempPR2=0;
 17626  015D96  0E00               	movlw	0
 17627  015D98  0101               	movlb	1	; () banked
 17628  015D9A  6F4B               	movwf	SetContrast@tempPR2& (0+255),b
 17629  015D9C  0E00               	movlw	0
 17630  015D9E  0101               	movlb	1	; () banked
 17631  015DA0  6F4C               	movwf	(SetContrast@tempPR2+1)& (0+255),b
 17632  015DA2  0E00               	movlw	0
 17633  015DA4  0101               	movlb	1	; () banked
 17634  015DA6  6F4D               	movwf	(SetContrast@tempPR2+2)& (0+255),b
 17635                           
 17636                           ; BSR set to: 1
 17637                           ;PWM.c: 98: unsigned char MSB,LSB;
 17638                           ;PWM.c: 100: Duty = 100 - Duty;
 17639  015DA8  0101               	movlb	1	; () banked
 17640  015DAA  5152               	movf	SetContrast@Duty& (0+255),w,b
 17641  015DAC  0800               	sublw	0
 17642  015DAE  0F64               	addlw	100
 17643  015DB0  0101               	movlb	1	; () banked
 17644  015DB2  6F52               	movwf	SetContrast@Duty& (0+255),b
 17645                           
 17646                           ; BSR set to: 1
 17647                           ;PWM.c: 101: Duty = (Duty>>1);
 17648  015DB4  0101               	movlb	1	; () banked
 17649  015DB6  90D8               	bcf	status,0,c
 17650  015DB8  3152               	rrcf	SetContrast@Duty& (0+255),w,b
 17651  015DBA  0101               	movlb	1	; () banked
 17652  015DBC  6F52               	movwf	SetContrast@Duty& (0+255),b
 17653                           
 17654                           ; BSR set to: 1
 17655                           ;PWM.c: 103: tempPR2 = (float) PR2;
 17656  015DBE  50CB               	movf	4043,w,c	;volatile
 17657  015DC0  ECF4  F0BC         	call	___lbtoft
 17658  015DC4  C116  F14B         	movff	?___lbtoft,SetContrast@tempPR2
 17659  015DC8  C117  F14C         	movff	?___lbtoft+1,SetContrast@tempPR2+1
 17660  015DCC  C118  F14D         	movff	?___lbtoft+2,SetContrast@tempPR2+2
 17661                           
 17662                           ;PWM.c: 105: temp = (int)(tempPR2 * ((float)Duty/100));
 17663  015DD0  C14B  F12C         	movff	SetContrast@tempPR2,___ftmul@f2
 17664  015DD4  C14C  F12D         	movff	SetContrast@tempPR2+1,___ftmul@f2+1
 17665  015DD8  C14D  F12E         	movff	SetContrast@tempPR2+2,___ftmul@f2+2
 17666  015DDC  0E00               	movlw	0
 17667  015DDE  0101               	movlb	1	; () banked
 17668  015DE0  6F1D               	movwf	___ftdiv@f2& (0+255),b
 17669  015DE2  0EC8               	movlw	200
 17670  015DE4  0101               	movlb	1	; () banked
 17671  015DE6  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
 17672  015DE8  0E42               	movlw	66
 17673  015DEA  0101               	movlb	1	; () banked
 17674  015DEC  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
 17675  015DEE  0101               	movlb	1	; () banked
 17676  015DF0  5152               	movf	SetContrast@Duty& (0+255),w,b
 17677  015DF2  ECF4  F0BC         	call	___lbtoft
 17678  015DF6  C116  F11A         	movff	?___lbtoft,___ftdiv@f1
 17679  015DFA  C117  F11B         	movff	?___lbtoft+1,___ftdiv@f1+1
 17680  015DFE  C118  F11C         	movff	?___lbtoft+2,___ftdiv@f1+2
 17681  015E02  EC61  F0AB         	call	___ftdiv	;wreg free
 17682  015E06  C11A  F129         	movff	?___ftdiv,___ftmul@f1
 17683  015E0A  C11B  F12A         	movff	?___ftdiv+1,___ftmul@f1+1
 17684  015E0E  C11C  F12B         	movff	?___ftdiv+2,___ftmul@f1+2
 17685  015E12  ECA6  F0AA         	call	___ftmul	;wreg free
 17686  015E16  C129  F138         	movff	?___ftmul,___fttol@f1
 17687  015E1A  C12A  F139         	movff	?___ftmul+1,___fttol@f1+1
 17688  015E1E  C12B  F13A         	movff	?___ftmul+2,___fttol@f1+2
 17689  015E22  ECE8  F0A9         	call	___fttol	;wreg free
 17690  015E26  C138  F147         	movff	?___fttol,??_SetContrast
 17691  015E2A  C139  F148         	movff	?___fttol+1,??_SetContrast+1
 17692  015E2E  C13A  F149         	movff	?___fttol+2,??_SetContrast+2
 17693  015E32  C13B  F14A         	movff	?___fttol+3,??_SetContrast+3
 17694  015E36  C147  F150         	movff	??_SetContrast,SetContrast@temp
 17695  015E3A  C148  F151         	movff	??_SetContrast+1,SetContrast@temp+1
 17696                           
 17697                           ;PWM.c: 106: MSB = (temp & 0x300)>>8;
 17698  015E3E  0101               	movlb	1	; () banked
 17699  015E40  C151  F147         	movff	SetContrast@temp+1,??_SetContrast
 17700  015E44  C147  F148         	movff	??_SetContrast,??_SetContrast+1
 17701  015E48  0101               	movlb	1	; () banked
 17702  015E4A  6B49               	clrf	(??_SetContrast+2)& (0+255),b
 17703  015E4C  0101               	movlb	1	; () banked
 17704  015E4E  5148               	movf	(??_SetContrast+1)& (0+255),w,b
 17705  015E50  0B03               	andlw	3
 17706  015E52  0101               	movlb	1	; () banked
 17707  015E54  6F4E               	movwf	SetContrast@MSB& (0+255),b
 17708                           
 17709                           ; BSR set to: 1
 17710                           ;PWM.c: 107: LSB = temp & 0xff;
 17711  015E56  C150  F14F         	movff	SetContrast@temp,SetContrast@LSB
 17712                           
 17713                           ; BSR set to: 1
 17714                           ;PWM.c: 109: ECCP1CON &= ~0b00110000;
 17715  015E5A  0ECF               	movlw	207
 17716  015E5C  16BA               	andwf	4026,f,c	;volatile
 17717                           
 17718                           ; BSR set to: 1
 17719                           ;PWM.c: 110: ECCP1CON |= MSB << 4;
 17720  015E5E  0101               	movlb	1	; () banked
 17721  015E60  394E               	swapf	SetContrast@MSB& (0+255),w,b
 17722  015E62  0BF0               	andlw	240
 17723  015E64  12BA               	iorwf	4026,f,c	;volatile
 17724                           
 17725                           ; BSR set to: 1
 17726                           ;PWM.c: 111: ECCPR1L = LSB;
 17727  015E66  C14F  FFBB         	movff	SetContrast@LSB,4027	;volatile
 17728                           
 17729                           ; BSR set to: 1
 17730                           ;PWM.c: 112: __nop();
 17731  015E6A  F000               	nop	
 17732  015E6C  0012               	return	
 17733  015E6E                     __end_of_SetContrast:
 17734                           	opt stack 0
 17735                           tblptru	equ	0xFF8
 17736                           tblptrh	equ	0xFF7
 17737                           tblptrl	equ	0xFF6
 17738                           tablat	equ	0xFF5
 17739                           prodh	equ	0xFF4
 17740                           prodl	equ	0xFF3
 17741                           intcon	equ	0xFF2
 17742                           postinc0	equ	0xFEE
 17743                           wreg	equ	0xFE8
 17744                           indf1	equ	0xFE7
 17745                           postinc1	equ	0xFE6
 17746                           postdec1	equ	0xFE5
 17747                           fsr1h	equ	0xFE2
 17748                           fsr1l	equ	0xFE1
 17749                           indf2	equ	0xFDF
 17750                           postinc2	equ	0xFDE
 17751                           fsr2h	equ	0xFDA
 17752                           fsr2l	equ	0xFD9
 17753                           status	equ	0xFD8
 17754                           
 17755 ;; *************** function ___lbtoft *****************
 17756 ;; Defined at:
 17757 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lbtoft.c"
 17758 ;; Parameters:    Size  Location     Type
 17759 ;;  c               1    wreg     unsigned char 
 17760 ;; Auto vars:     Size  Location     Type
 17761 ;;  c               1   25[BANK1 ] unsigned char 
 17762 ;; Return value:  Size  Location     Type
 17763 ;;                  3   22[BANK1 ] float 
 17764 ;; Registers used:
 17765 ;;		wreg, status,2, status,0, cstack
 17766 ;; Tracked objects:
 17767 ;;		On entry : 0/0
 17768 ;;		On exit  : 0/0
 17769 ;;		Unchanged: 0/0
 17770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17771 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 17772 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17774 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17775 ;;Total ram usage:        4 bytes
 17776 ;; Hardware stack levels used:    1
 17777 ;; Hardware stack levels required when called:    7
 17778 ;; This function calls:
 17779 ;;		___ftpack
 17780 ;; This function is called by:
 17781 ;;		_SetContrast
 17782 ;;		_SetDuty
 17783 ;; This function uses a non-reentrant model
 17784 ;;
 17785                           
 17786                           	psect	text26
 17787  0179E8                     __ptext26:
 17788                           	opt stack 0
 17789  0179E8                     ___lbtoft:
 17790                           	opt stack 21
 17791                           
 17792                           ;incstack = 0
 17793                           ;___lbtoft@c stored from wreg
 17794  0179E8  0101               	movlb	1	; () banked
 17795  0179EA  6F19               	movwf	___lbtoft@c& (0+255),b
 17796                           
 17797                           ; BSR set to: 1
 17798  0179EC  0101               	movlb	1	; () banked
 17799  0179EE  5119               	movf	___lbtoft@c& (0+255),w,b
 17800  0179F0  0101               	movlb	1	; () banked
 17801  0179F2  6F0E               	movwf	___ftpack@arg& (0+255),b
 17802  0179F4  0101               	movlb	1	; () banked
 17803  0179F6  6B0F               	clrf	(___ftpack@arg+1)& (0+255),b
 17804  0179F8  0101               	movlb	1	; () banked
 17805  0179FA  6B10               	clrf	(___ftpack@arg+2)& (0+255),b
 17806  0179FC  0E8E               	movlw	142
 17807  0179FE  0101               	movlb	1	; () banked
 17808  017A00  6F11               	movwf	___ftpack@exp& (0+255),b
 17809  017A02  0E00               	movlw	0
 17810  017A04  0101               	movlb	1	; () banked
 17811  017A06  6F12               	movwf	___ftpack@sign& (0+255),b
 17812  017A08  ECC7  F0AD         	call	___ftpack	;wreg free
 17813  017A0C  C10E  F116         	movff	?___ftpack,?___lbtoft
 17814  017A10  C10F  F117         	movff	?___ftpack+1,?___lbtoft+1
 17815  017A14  C110  F118         	movff	?___ftpack+2,?___lbtoft+2
 17816  017A18  0012               	return	
 17817  017A1A                     __end_of___lbtoft:
 17818                           	opt stack 0
 17819                           tblptru	equ	0xFF8
 17820                           tblptrh	equ	0xFF7
 17821                           tblptrl	equ	0xFF6
 17822                           tablat	equ	0xFF5
 17823                           prodh	equ	0xFF4
 17824                           prodl	equ	0xFF3
 17825                           intcon	equ	0xFF2
 17826                           postinc0	equ	0xFEE
 17827                           wreg	equ	0xFE8
 17828                           indf1	equ	0xFE7
 17829                           postinc1	equ	0xFE6
 17830                           postdec1	equ	0xFE5
 17831                           fsr1h	equ	0xFE2
 17832                           fsr1l	equ	0xFE1
 17833                           indf2	equ	0xFDF
 17834                           postinc2	equ	0xFDE
 17835                           fsr2h	equ	0xFDA
 17836                           fsr2l	equ	0xFD9
 17837                           status	equ	0xFD8
 17838                           
 17839 ;; *************** function ___fttol *****************
 17840 ;; Defined at:
 17841 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
 17842 ;; Parameters:    Size  Location     Type
 17843 ;;  f1              3   56[BANK1 ] float 
 17844 ;; Auto vars:     Size  Location     Type
 17845 ;;  lval            4   66[BANK1 ] unsigned long 
 17846 ;;  exp1            1   70[BANK1 ] unsigned char 
 17847 ;;  sign1           1   65[BANK1 ] unsigned char 
 17848 ;; Return value:  Size  Location     Type
 17849 ;;                  4   56[BANK1 ] long 
 17850 ;; Registers used:
 17851 ;;		wreg, status,2, status,0
 17852 ;; Tracked objects:
 17853 ;;		On entry : 0/0
 17854 ;;		On exit  : 0/0
 17855 ;;		Unchanged: 0/0
 17856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17857 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17858 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 17859 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 17860 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 17861 ;;Total ram usage:       15 bytes
 17862 ;; Hardware stack levels used:    1
 17863 ;; Hardware stack levels required when called:    6
 17864 ;; This function calls:
 17865 ;;		Nothing
 17866 ;; This function is called by:
 17867 ;;		_Command
 17868 ;;		_SetContrast
 17869 ;;		_SetDuty
 17870 ;; This function uses a non-reentrant model
 17871 ;;
 17872                           
 17873                           	psect	text27
 17874  0153D0                     __ptext27:
 17875                           	opt stack 0
 17876  0153D0                     ___fttol:
 17877                           	opt stack 22
 17878                           
 17879                           ;incstack = 0
 17880  0153D0  0101               	movlb	1	; () banked
 17881  0153D2  C13A  F13C         	movff	___fttol@f1+2,??___fttol
 17882  0153D6  0101               	movlb	1	; () banked
 17883  0153D8  6B3D               	clrf	(??___fttol+1)& (0+255),b
 17884  0153DA  6B3E               	clrf	(??___fttol+2)& (0+255),b
 17885  0153DC  0101               	movlb	1	; () banked
 17886  0153DE  3539               	rlcf	(___fttol@f1+1)& (0+255),w,b
 17887  0153E0  0101               	movlb	1	; () banked
 17888  0153E2  373C               	rlcf	??___fttol& (0+255),f,b
 17889  0153E4  E301               	bnc	u14411
 17890  0153E6  813D               	bsf	(??___fttol+1)& (0+255),0,b
 17891  0153E8                     u14411:
 17892  0153E8  0101               	movlb	1	; () banked
 17893  0153EA  513C               	movf	??___fttol& (0+255),w,b
 17894  0153EC  0101               	movlb	1	; () banked
 17895  0153EE  6F46               	movwf	___fttol@exp1& (0+255),b
 17896  0153F0  0101               	movlb	1	; () banked
 17897  0153F2  6746               	tstfsz	___fttol@exp1& (0+255),b
 17898  0153F4  D00D               	goto	l11062
 17899                           
 17900                           ; BSR set to: 1
 17901  0153F6  0E00               	movlw	0
 17902  0153F8  0101               	movlb	1	; () banked
 17903  0153FA  6F38               	movwf	?___fttol& (0+255),b
 17904  0153FC  0E00               	movlw	0
 17905  0153FE  0101               	movlb	1	; () banked
 17906  015400  6F39               	movwf	(?___fttol+1)& (0+255),b
 17907  015402  0E00               	movlw	0
 17908  015404  0101               	movlb	1	; () banked
 17909  015406  6F3A               	movwf	(?___fttol+2)& (0+255),b
 17910  015408  0E00               	movlw	0
 17911  01540A  0101               	movlb	1	; () banked
 17912  01540C  6F3B               	movwf	(?___fttol+3)& (0+255),b
 17913  01540E  0012               	return	
 17914  015410                     l11062:
 17915                           
 17916                           ; BSR set to: 1
 17917  015410  0E17               	movlw	23
 17918  015412  0101               	movlb	1	; () banked
 17919  015414  6F3C               	movwf	??___fttol& (0+255),b
 17920  015416  0101               	movlb	1	; () banked
 17921  015418  C138  F13D         	movff	___fttol@f1,??___fttol+1
 17922  01541C  0101               	movlb	1	; () banked
 17923  01541E  C139  F13E         	movff	___fttol@f1+1,??___fttol+2
 17924  015422  0101               	movlb	1	; () banked
 17925  015424  C13A  F13F         	movff	___fttol@f1+2,??___fttol+3
 17926  015428  0101               	movlb	1	; () banked
 17927  01542A  293C               	incf	??___fttol& (0+255),w,b
 17928  01542C  0101               	movlb	1	; () banked
 17929  01542E  6F40               	movwf	(??___fttol+4)& (0+255),b
 17930  015430  D005               	goto	u14430
 17931  015432                     u14435:
 17932  015432  0101               	movlb	1	; () banked
 17933  015434  90D8               	bcf	status,0,c
 17934  015436  333F               	rrcf	(??___fttol+3)& (0+255),f,b
 17935  015438  333E               	rrcf	(??___fttol+2)& (0+255),f,b
 17936  01543A  333D               	rrcf	(??___fttol+1)& (0+255),f,b
 17937  01543C                     u14430:
 17938  01543C  0101               	movlb	1	; () banked
 17939  01543E  2F40               	decfsz	(??___fttol+4)& (0+255),f,b
 17940  015440  D7F8               	goto	u14435
 17941  015442  0101               	movlb	1	; () banked
 17942  015444  513D               	movf	(??___fttol+1)& (0+255),w,b
 17943  015446  0101               	movlb	1	; () banked
 17944  015448  6F41               	movwf	___fttol@sign1& (0+255),b
 17945                           
 17946                           ; BSR set to: 1
 17947  01544A  0101               	movlb	1	; () banked
 17948  01544C  8F39               	bsf	(___fttol@f1+1)& (0+255),7,b
 17949                           
 17950                           ; BSR set to: 1
 17951  01544E  0EFF               	movlw	255
 17952  015450  0101               	movlb	1	; () banked
 17953  015452  1738               	andwf	___fttol@f1& (0+255),f,b
 17954  015454  0EFF               	movlw	255
 17955  015456  0101               	movlb	1	; () banked
 17956  015458  1739               	andwf	(___fttol@f1+1)& (0+255),f,b
 17957  01545A  0E00               	movlw	0
 17958  01545C  0101               	movlb	1	; () banked
 17959  01545E  173A               	andwf	(___fttol@f1+2)& (0+255),f,b
 17960                           
 17961                           ; BSR set to: 1
 17962  015460  0101               	movlb	1	; () banked
 17963  015462  5138               	movf	___fttol@f1& (0+255),w,b
 17964  015464  0101               	movlb	1	; () banked
 17965  015466  6F42               	movwf	___fttol@lval& (0+255),b
 17966  015468  0101               	movlb	1	; () banked
 17967  01546A  5139               	movf	(___fttol@f1+1)& (0+255),w,b
 17968  01546C  0101               	movlb	1	; () banked
 17969  01546E  6F43               	movwf	(___fttol@lval+1)& (0+255),b
 17970  015470  0101               	movlb	1	; () banked
 17971  015472  513A               	movf	(___fttol@f1+2)& (0+255),w,b
 17972  015474  0101               	movlb	1	; () banked
 17973  015476  6F44               	movwf	(___fttol@lval+2)& (0+255),b
 17974  015478  0101               	movlb	1	; () banked
 17975  01547A  6B45               	clrf	(___fttol@lval+3)& (0+255),b
 17976                           
 17977                           ; BSR set to: 1
 17978  01547C  0E8E               	movlw	142
 17979  01547E  0101               	movlb	1	; () banked
 17980  015480  5F46               	subwf	___fttol@exp1& (0+255),f,b
 17981                           
 17982                           ; BSR set to: 1
 17983  015482  0101               	movlb	1	; () banked
 17984  015484  AF46               	btfss	___fttol@exp1& (0+255),7,b
 17985  015486  D026               	goto	l11084
 17986                           
 17987                           ; BSR set to: 1
 17988  015488  0101               	movlb	1	; () banked
 17989  01548A  5146               	movf	___fttol@exp1& (0+255),w,b
 17990  01548C  0A80               	xorlw	128
 17991  01548E  0101               	movlb	1	; () banked
 17992  015490  6F3C               	movwf	??___fttol& (0+255),b
 17993  015492  0EF1               	movlw	241
 17994  015494  0A80               	xorlw	128
 17995  015496  0101               	movlb	1	; () banked
 17996  015498  5D3C               	subwf	??___fttol& (0+255),w,b
 17997  01549A  B0D8               	btfsc	status,0,c
 17998  01549C  D00D               	goto	l11080
 17999                           
 18000                           ; BSR set to: 1
 18001  01549E  0E00               	movlw	0
 18002  0154A0  0101               	movlb	1	; () banked
 18003  0154A2  6F38               	movwf	?___fttol& (0+255),b
 18004  0154A4  0E00               	movlw	0
 18005  0154A6  0101               	movlb	1	; () banked
 18006  0154A8  6F39               	movwf	(?___fttol+1)& (0+255),b
 18007  0154AA  0E00               	movlw	0
 18008  0154AC  0101               	movlb	1	; () banked
 18009  0154AE  6F3A               	movwf	(?___fttol+2)& (0+255),b
 18010  0154B0  0E00               	movlw	0
 18011  0154B2  0101               	movlb	1	; () banked
 18012  0154B4  6F3B               	movwf	(?___fttol+3)& (0+255),b
 18013  0154B6  0012               	return	
 18014  0154B8                     l11080:
 18015                           
 18016                           ; BSR set to: 1
 18017  0154B8  0101               	movlb	1	; () banked
 18018  0154BA  90D8               	bcf	status,0,c
 18019  0154BC  0101               	movlb	1	; () banked
 18020  0154BE  3345               	rrcf	(___fttol@lval+3)& (0+255),f,b
 18021  0154C0  0101               	movlb	1	; () banked
 18022  0154C2  3344               	rrcf	(___fttol@lval+2)& (0+255),f,b
 18023  0154C4  0101               	movlb	1	; () banked
 18024  0154C6  3343               	rrcf	(___fttol@lval+1)& (0+255),f,b
 18025  0154C8  0101               	movlb	1	; () banked
 18026  0154CA  3342               	rrcf	___fttol@lval& (0+255),f,b
 18027                           
 18028                           ; BSR set to: 1
 18029  0154CC  0101               	movlb	1	; () banked
 18030  0154CE  3F46               	incfsz	___fttol@exp1& (0+255),f,b
 18031  0154D0  D7F3               	goto	l11080
 18032  0154D2  D020               	goto	l11094
 18033  0154D4                     l11084:
 18034                           
 18035                           ; BSR set to: 1
 18036  0154D4  0E17               	movlw	23
 18037  0154D6  0101               	movlb	1	; () banked
 18038  0154D8  6546               	cpfsgt	___fttol@exp1& (0+255),b
 18039  0154DA  D019               	goto	l11092
 18040                           
 18041                           ; BSR set to: 1
 18042  0154DC  0E00               	movlw	0
 18043  0154DE  0101               	movlb	1	; () banked
 18044  0154E0  6F38               	movwf	?___fttol& (0+255),b
 18045  0154E2  0E00               	movlw	0
 18046  0154E4  0101               	movlb	1	; () banked
 18047  0154E6  6F39               	movwf	(?___fttol+1)& (0+255),b
 18048  0154E8  0E00               	movlw	0
 18049  0154EA  0101               	movlb	1	; () banked
 18050  0154EC  6F3A               	movwf	(?___fttol+2)& (0+255),b
 18051  0154EE  0E00               	movlw	0
 18052  0154F0  0101               	movlb	1	; () banked
 18053  0154F2  6F3B               	movwf	(?___fttol+3)& (0+255),b
 18054  0154F4  0012               	return	
 18055  0154F6                     l11090:
 18056                           
 18057                           ; BSR set to: 1
 18058  0154F6  0101               	movlb	1	; () banked
 18059  0154F8  90D8               	bcf	status,0,c
 18060  0154FA  0101               	movlb	1	; () banked
 18061  0154FC  3742               	rlcf	___fttol@lval& (0+255),f,b
 18062  0154FE  0101               	movlb	1	; () banked
 18063  015500  3743               	rlcf	(___fttol@lval+1)& (0+255),f,b
 18064  015502  0101               	movlb	1	; () banked
 18065  015504  3744               	rlcf	(___fttol@lval+2)& (0+255),f,b
 18066  015506  0101               	movlb	1	; () banked
 18067  015508  3745               	rlcf	(___fttol@lval+3)& (0+255),f,b
 18068  01550A  0101               	movlb	1	; () banked
 18069  01550C  0746               	decf	___fttol@exp1& (0+255),f,b
 18070  01550E                     l11092:
 18071                           
 18072                           ; BSR set to: 1
 18073  01550E  0101               	movlb	1	; () banked
 18074  015510  6746               	tstfsz	___fttol@exp1& (0+255),b
 18075  015512  D7F1               	goto	l11090
 18076  015514                     l11094:
 18077                           
 18078                           ; BSR set to: 1
 18079  015514  0101               	movlb	1	; () banked
 18080  015516  5141               	movf	___fttol@sign1& (0+255),w,b
 18081  015518  B4D8               	btfsc	status,2,c
 18082  01551A  D00F               	goto	l11098
 18083                           
 18084                           ; BSR set to: 1
 18085  01551C  0101               	movlb	1	; () banked
 18086  01551E  1F45               	comf	(___fttol@lval+3)& (0+255),f,b
 18087  015520  0101               	movlb	1	; () banked
 18088  015522  1F44               	comf	(___fttol@lval+2)& (0+255),f,b
 18089  015524  0101               	movlb	1	; () banked
 18090  015526  1F43               	comf	(___fttol@lval+1)& (0+255),f,b
 18091  015528  0101               	movlb	1	; () banked
 18092  01552A  6D42               	negf	___fttol@lval& (0+255),b
 18093  01552C  0E00               	movlw	0
 18094  01552E  0101               	movlb	1	; () banked
 18095  015530  2343               	addwfc	(___fttol@lval+1)& (0+255),f,b
 18096  015532  0101               	movlb	1	; () banked
 18097  015534  2344               	addwfc	(___fttol@lval+2)& (0+255),f,b
 18098  015536  0101               	movlb	1	; () banked
 18099  015538  2345               	addwfc	(___fttol@lval+3)& (0+255),f,b
 18100  01553A                     l11098:
 18101                           
 18102                           ; BSR set to: 1
 18103  01553A  C142  F138         	movff	___fttol@lval,?___fttol
 18104  01553E  C143  F139         	movff	___fttol@lval+1,?___fttol+1
 18105  015542  C144  F13A         	movff	___fttol@lval+2,?___fttol+2
 18106  015546  C145  F13B         	movff	___fttol@lval+3,?___fttol+3
 18107  01554A  0012               	return	
 18108  01554C                     __end_of___fttol:
 18109                           	opt stack 0
 18110                           tblptru	equ	0xFF8
 18111                           tblptrh	equ	0xFF7
 18112                           tblptrl	equ	0xFF6
 18113                           tablat	equ	0xFF5
 18114                           prodh	equ	0xFF4
 18115                           prodl	equ	0xFF3
 18116                           intcon	equ	0xFF2
 18117                           postinc0	equ	0xFEE
 18118                           wreg	equ	0xFE8
 18119                           indf1	equ	0xFE7
 18120                           postinc1	equ	0xFE6
 18121                           postdec1	equ	0xFE5
 18122                           fsr1h	equ	0xFE2
 18123                           fsr1l	equ	0xFE1
 18124                           indf2	equ	0xFDF
 18125                           postinc2	equ	0xFDE
 18126                           fsr2h	equ	0xFDA
 18127                           fsr2l	equ	0xFD9
 18128                           status	equ	0xFD8
 18129                           
 18130 ;; *************** function ___ftmul *****************
 18131 ;; Defined at:
 18132 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
 18133 ;; Parameters:    Size  Location     Type
 18134 ;;  f1              3   41[BANK1 ] float 
 18135 ;;  f2              3   44[BANK1 ] float 
 18136 ;; Auto vars:     Size  Location     Type
 18137 ;;  f3_as_produc    3   51[BANK1 ] unsigned um
 18138 ;;  sign            1   55[BANK1 ] unsigned char 
 18139 ;;  cntr            1   54[BANK1 ] unsigned char 
 18140 ;;  exp             1   50[BANK1 ] unsigned char 
 18141 ;; Return value:  Size  Location     Type
 18142 ;;                  3   41[BANK1 ] float 
 18143 ;; Registers used:
 18144 ;;		wreg, status,2, status,0, cstack
 18145 ;; Tracked objects:
 18146 ;;		On entry : 0/0
 18147 ;;		On exit  : 0/0
 18148 ;;		Unchanged: 0/0
 18149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18150 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 18151 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 18152 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18153 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 18154 ;;Total ram usage:       15 bytes
 18155 ;; Hardware stack levels used:    1
 18156 ;; Hardware stack levels required when called:    7
 18157 ;; This function calls:
 18158 ;;		___ftpack
 18159 ;; This function is called by:
 18160 ;;		_Command
 18161 ;;		_SetContrast
 18162 ;;		_SetDuty
 18163 ;; This function uses a non-reentrant model
 18164 ;;
 18165                           
 18166                           	psect	text28
 18167  01554C                     __ptext28:
 18168                           	opt stack 0
 18169  01554C                     ___ftmul:
 18170                           	opt stack 21
 18171                           
 18172                           ; BSR set to: 1
 18173                           ;incstack = 0
 18174  01554C  0101               	movlb	1	; () banked
 18175  01554E  C12B  F12F         	movff	___ftmul@f1+2,??___ftmul
 18176  015552  0101               	movlb	1	; () banked
 18177  015554  6B30               	clrf	(??___ftmul+1)& (0+255),b
 18178  015556  6B31               	clrf	(??___ftmul+2)& (0+255),b
 18179  015558  0101               	movlb	1	; () banked
 18180  01555A  352A               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 18181  01555C  0101               	movlb	1	; () banked
 18182  01555E  372F               	rlcf	??___ftmul& (0+255),f,b
 18183  015560  E301               	bnc	u14231
 18184  015562  8130               	bsf	(??___ftmul+1)& (0+255),0,b
 18185  015564                     u14231:
 18186  015564  0101               	movlb	1	; () banked
 18187  015566  512F               	movf	??___ftmul& (0+255),w,b
 18188  015568  0101               	movlb	1	; () banked
 18189  01556A  6F32               	movwf	___ftmul@exp& (0+255),b
 18190  01556C  0101               	movlb	1	; () banked
 18191  01556E  6732               	tstfsz	___ftmul@exp& (0+255),b
 18192  015570  D00A               	goto	l10934
 18193                           
 18194                           ; BSR set to: 1
 18195  015572  0E00               	movlw	0
 18196  015574  0101               	movlb	1	; () banked
 18197  015576  6F29               	movwf	?___ftmul& (0+255),b
 18198  015578  0E00               	movlw	0
 18199  01557A  0101               	movlb	1	; () banked
 18200  01557C  6F2A               	movwf	(?___ftmul+1)& (0+255),b
 18201  01557E  0E00               	movlw	0
 18202  015580  0101               	movlb	1	; () banked
 18203  015582  6F2B               	movwf	(?___ftmul+2)& (0+255),b
 18204  015584  0012               	return	
 18205  015586                     l10934:
 18206                           
 18207                           ; BSR set to: 1
 18208  015586  0101               	movlb	1	; () banked
 18209  015588  C12E  F12F         	movff	___ftmul@f2+2,??___ftmul
 18210  01558C  0101               	movlb	1	; () banked
 18211  01558E  6B30               	clrf	(??___ftmul+1)& (0+255),b
 18212  015590  6B31               	clrf	(??___ftmul+2)& (0+255),b
 18213  015592  0101               	movlb	1	; () banked
 18214  015594  352D               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 18215  015596  0101               	movlb	1	; () banked
 18216  015598  372F               	rlcf	??___ftmul& (0+255),f,b
 18217  01559A  E301               	bnc	u14251
 18218  01559C  8130               	bsf	(??___ftmul+1)& (0+255),0,b
 18219  01559E                     u14251:
 18220  01559E  0101               	movlb	1	; () banked
 18221  0155A0  512F               	movf	??___ftmul& (0+255),w,b
 18222  0155A2  0101               	movlb	1	; () banked
 18223  0155A4  6F37               	movwf	___ftmul@sign& (0+255),b
 18224  0155A6  0101               	movlb	1	; () banked
 18225  0155A8  6737               	tstfsz	___ftmul@sign& (0+255),b
 18226  0155AA  D00A               	goto	l10940
 18227                           
 18228                           ; BSR set to: 1
 18229  0155AC  0E00               	movlw	0
 18230  0155AE  0101               	movlb	1	; () banked
 18231  0155B0  6F29               	movwf	?___ftmul& (0+255),b
 18232  0155B2  0E00               	movlw	0
 18233  0155B4  0101               	movlb	1	; () banked
 18234  0155B6  6F2A               	movwf	(?___ftmul+1)& (0+255),b
 18235  0155B8  0E00               	movlw	0
 18236  0155BA  0101               	movlb	1	; () banked
 18237  0155BC  6F2B               	movwf	(?___ftmul+2)& (0+255),b
 18238  0155BE  0012               	return	
 18239  0155C0                     l10940:
 18240                           
 18241                           ; BSR set to: 1
 18242  0155C0  0101               	movlb	1	; () banked
 18243  0155C2  5137               	movf	___ftmul@sign& (0+255),w,b
 18244  0155C4  0F7B               	addlw	123
 18245  0155C6  0101               	movlb	1	; () banked
 18246  0155C8  2732               	addwf	___ftmul@exp& (0+255),f,b
 18247                           
 18248                           ; BSR set to: 1
 18249  0155CA  C12B  F137         	movff	___ftmul@f1+2,___ftmul@sign
 18250  0155CE  0101               	movlb	1	; () banked
 18251  0155D0  512E               	movf	(___ftmul@f2+2)& (0+255),w,b
 18252  0155D2  0101               	movlb	1	; () banked
 18253  0155D4  1B37               	xorwf	___ftmul@sign& (0+255),f,b
 18254  0155D6  0E80               	movlw	128
 18255  0155D8  0101               	movlb	1	; () banked
 18256  0155DA  1737               	andwf	___ftmul@sign& (0+255),f,b
 18257                           
 18258                           ; BSR set to: 1
 18259  0155DC  0101               	movlb	1	; () banked
 18260  0155DE  8F2A               	bsf	(___ftmul@f1+1)& (0+255),7,b
 18261                           
 18262                           ; BSR set to: 1
 18263  0155E0  0101               	movlb	1	; () banked
 18264  0155E2  8F2D               	bsf	(___ftmul@f2+1)& (0+255),7,b
 18265                           
 18266                           ; BSR set to: 1
 18267  0155E4  0EFF               	movlw	255
 18268  0155E6  0101               	movlb	1	; () banked
 18269  0155E8  172C               	andwf	___ftmul@f2& (0+255),f,b
 18270  0155EA  0EFF               	movlw	255
 18271  0155EC  0101               	movlb	1	; () banked
 18272  0155EE  172D               	andwf	(___ftmul@f2+1)& (0+255),f,b
 18273  0155F0  0E00               	movlw	0
 18274  0155F2  0101               	movlb	1	; () banked
 18275  0155F4  172E               	andwf	(___ftmul@f2+2)& (0+255),f,b
 18276                           
 18277                           ; BSR set to: 1
 18278  0155F6  0E00               	movlw	0
 18279  0155F8  0101               	movlb	1	; () banked
 18280  0155FA  6F33               	movwf	___ftmul@f3_as_product& (0+255),b
 18281  0155FC  0E00               	movlw	0
 18282  0155FE  0101               	movlb	1	; () banked
 18283  015600  6F34               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 18284  015602  0E00               	movlw	0
 18285  015604  0101               	movlb	1	; () banked
 18286  015606  6F35               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 18287                           
 18288                           ; BSR set to: 1
 18289  015608  0E07               	movlw	7
 18290  01560A  0101               	movlb	1	; () banked
 18291  01560C  6F36               	movwf	___ftmul@cntr& (0+255),b
 18292  01560E                     l10954:
 18293                           
 18294                           ; BSR set to: 1
 18295  01560E  0101               	movlb	1	; () banked
 18296  015610  A129               	btfss	___ftmul@f1& (0+255),0,b
 18297  015612  D00C               	goto	l10958
 18298                           
 18299                           ; BSR set to: 1
 18300  015614  0101               	movlb	1	; () banked
 18301  015616  512C               	movf	___ftmul@f2& (0+255),w,b
 18302  015618  0101               	movlb	1	; () banked
 18303  01561A  2733               	addwf	___ftmul@f3_as_product& (0+255),f,b
 18304  01561C  0101               	movlb	1	; () banked
 18305  01561E  512D               	movf	(___ftmul@f2+1)& (0+255),w,b
 18306  015620  0101               	movlb	1	; () banked
 18307  015622  2334               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 18308  015624  0101               	movlb	1	; () banked
 18309  015626  512E               	movf	(___ftmul@f2+2)& (0+255),w,b
 18310  015628  0101               	movlb	1	; () banked
 18311  01562A  2335               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 18312  01562C                     l10958:
 18313                           
 18314                           ; BSR set to: 1
 18315  01562C  0101               	movlb	1	; () banked
 18316  01562E  90D8               	bcf	status,0,c
 18317  015630  0101               	movlb	1	; () banked
 18318  015632  332B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 18319  015634  0101               	movlb	1	; () banked
 18320  015636  332A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 18321  015638  0101               	movlb	1	; () banked
 18322  01563A  3329               	rrcf	___ftmul@f1& (0+255),f,b
 18323  01563C  0101               	movlb	1	; () banked
 18324  01563E  90D8               	bcf	status,0,c
 18325  015640  0101               	movlb	1	; () banked
 18326  015642  372C               	rlcf	___ftmul@f2& (0+255),f,b
 18327  015644  0101               	movlb	1	; () banked
 18328  015646  372D               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 18329  015648  0101               	movlb	1	; () banked
 18330  01564A  372E               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 18331                           
 18332                           ; BSR set to: 1
 18333  01564C  0101               	movlb	1	; () banked
 18334  01564E  2F36               	decfsz	___ftmul@cntr& (0+255),f,b
 18335  015650  D7DE               	goto	l10954
 18336                           
 18337                           ; BSR set to: 1
 18338                           
 18339                           ; BSR set to: 1
 18340  015652  0E09               	movlw	9
 18341  015654  0101               	movlb	1	; () banked
 18342  015656  6F36               	movwf	___ftmul@cntr& (0+255),b
 18343  015658                     l10964:
 18344                           
 18345                           ; BSR set to: 1
 18346  015658  0101               	movlb	1	; () banked
 18347  01565A  A129               	btfss	___ftmul@f1& (0+255),0,b
 18348  01565C  D00C               	goto	l10968
 18349                           
 18350                           ; BSR set to: 1
 18351  01565E  0101               	movlb	1	; () banked
 18352  015660  512C               	movf	___ftmul@f2& (0+255),w,b
 18353  015662  0101               	movlb	1	; () banked
 18354  015664  2733               	addwf	___ftmul@f3_as_product& (0+255),f,b
 18355  015666  0101               	movlb	1	; () banked
 18356  015668  512D               	movf	(___ftmul@f2+1)& (0+255),w,b
 18357  01566A  0101               	movlb	1	; () banked
 18358  01566C  2334               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 18359  01566E  0101               	movlb	1	; () banked
 18360  015670  512E               	movf	(___ftmul@f2+2)& (0+255),w,b
 18361  015672  0101               	movlb	1	; () banked
 18362  015674  2335               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 18363  015676                     l10968:
 18364                           
 18365                           ; BSR set to: 1
 18366  015676  0101               	movlb	1	; () banked
 18367  015678  90D8               	bcf	status,0,c
 18368  01567A  0101               	movlb	1	; () banked
 18369  01567C  332B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 18370  01567E  0101               	movlb	1	; () banked
 18371  015680  332A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 18372  015682  0101               	movlb	1	; () banked
 18373  015684  3329               	rrcf	___ftmul@f1& (0+255),f,b
 18374  015686  0101               	movlb	1	; () banked
 18375  015688  90D8               	bcf	status,0,c
 18376  01568A  0101               	movlb	1	; () banked
 18377  01568C  3335               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 18378  01568E  0101               	movlb	1	; () banked
 18379  015690  3334               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 18380  015692  0101               	movlb	1	; () banked
 18381  015694  3333               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 18382                           
 18383                           ; BSR set to: 1
 18384  015696  0101               	movlb	1	; () banked
 18385  015698  2F36               	decfsz	___ftmul@cntr& (0+255),f,b
 18386  01569A  D7DE               	goto	l10964
 18387                           
 18388                           ; BSR set to: 1
 18389                           
 18390                           ; BSR set to: 1
 18391  01569C  C133  F10E         	movff	___ftmul@f3_as_product,___ftpack@arg
 18392  0156A0  C134  F10F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 18393  0156A4  C135  F110         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 18394  0156A8  C132  F111         	movff	___ftmul@exp,___ftpack@exp
 18395  0156AC  C137  F112         	movff	___ftmul@sign,___ftpack@sign
 18396  0156B0  ECC7  F0AD         	call	___ftpack	;wreg free
 18397  0156B4  C10E  F129         	movff	?___ftpack,?___ftmul
 18398  0156B8  C10F  F12A         	movff	?___ftpack+1,?___ftmul+1
 18399  0156BC  C110  F12B         	movff	?___ftpack+2,?___ftmul+2
 18400  0156C0  0012               	return	
 18401  0156C2                     __end_of___ftmul:
 18402                           	opt stack 0
 18403                           tblptru	equ	0xFF8
 18404                           tblptrh	equ	0xFF7
 18405                           tblptrl	equ	0xFF6
 18406                           tablat	equ	0xFF5
 18407                           prodh	equ	0xFF4
 18408                           prodl	equ	0xFF3
 18409                           intcon	equ	0xFF2
 18410                           postinc0	equ	0xFEE
 18411                           wreg	equ	0xFE8
 18412                           indf1	equ	0xFE7
 18413                           postinc1	equ	0xFE6
 18414                           postdec1	equ	0xFE5
 18415                           fsr1h	equ	0xFE2
 18416                           fsr1l	equ	0xFE1
 18417                           indf2	equ	0xFDF
 18418                           postinc2	equ	0xFDE
 18419                           fsr2h	equ	0xFDA
 18420                           fsr2l	equ	0xFD9
 18421                           status	equ	0xFD8
 18422                           
 18423 ;; *************** function ___ftdiv *****************
 18424 ;; Defined at:
 18425 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
 18426 ;; Parameters:    Size  Location     Type
 18427 ;;  f1              3   26[BANK1 ] float 
 18428 ;;  f2              3   29[BANK1 ] float 
 18429 ;; Auto vars:     Size  Location     Type
 18430 ;;  f3              3   36[BANK1 ] float 
 18431 ;;  sign            1   40[BANK1 ] unsigned char 
 18432 ;;  exp             1   39[BANK1 ] unsigned char 
 18433 ;;  cntr            1   35[BANK1 ] unsigned char 
 18434 ;; Return value:  Size  Location     Type
 18435 ;;                  3   26[BANK1 ] float 
 18436 ;; Registers used:
 18437 ;;		wreg, status,2, status,0, cstack
 18438 ;; Tracked objects:
 18439 ;;		On entry : 0/0
 18440 ;;		On exit  : 0/0
 18441 ;;		Unchanged: 0/0
 18442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18443 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 18444 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 18445 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18446 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 18447 ;;Total ram usage:       15 bytes
 18448 ;; Hardware stack levels used:    1
 18449 ;; Hardware stack levels required when called:    7
 18450 ;; This function calls:
 18451 ;;		___ftpack
 18452 ;; This function is called by:
 18453 ;;		_Command
 18454 ;;		_SetContrast
 18455 ;;		_SetDuty
 18456 ;; This function uses a non-reentrant model
 18457 ;;
 18458                           
 18459                           	psect	text29
 18460  0156C2                     __ptext29:
 18461                           	opt stack 0
 18462  0156C2                     ___ftdiv:
 18463                           	opt stack 21
 18464                           
 18465                           ;incstack = 0
 18466  0156C2  0101               	movlb	1	; () banked
 18467  0156C4  C11C  F120         	movff	___ftdiv@f1+2,??___ftdiv
 18468  0156C8  0101               	movlb	1	; () banked
 18469  0156CA  6B21               	clrf	(??___ftdiv+1)& (0+255),b
 18470  0156CC  6B22               	clrf	(??___ftdiv+2)& (0+255),b
 18471  0156CE  0101               	movlb	1	; () banked
 18472  0156D0  351B               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 18473  0156D2  0101               	movlb	1	; () banked
 18474  0156D4  3720               	rlcf	??___ftdiv& (0+255),f,b
 18475  0156D6  E301               	bnc	u14181
 18476  0156D8  8121               	bsf	(??___ftdiv+1)& (0+255),0,b
 18477  0156DA                     u14181:
 18478  0156DA  0101               	movlb	1	; () banked
 18479  0156DC  5120               	movf	??___ftdiv& (0+255),w,b
 18480  0156DE  0101               	movlb	1	; () banked
 18481  0156E0  6F27               	movwf	___ftdiv@exp& (0+255),b
 18482  0156E2  0101               	movlb	1	; () banked
 18483  0156E4  6727               	tstfsz	___ftdiv@exp& (0+255),b
 18484  0156E6  D00A               	goto	l10888
 18485                           
 18486                           ; BSR set to: 1
 18487  0156E8  0E00               	movlw	0
 18488  0156EA  0101               	movlb	1	; () banked
 18489  0156EC  6F1A               	movwf	?___ftdiv& (0+255),b
 18490  0156EE  0E00               	movlw	0
 18491  0156F0  0101               	movlb	1	; () banked
 18492  0156F2  6F1B               	movwf	(?___ftdiv+1)& (0+255),b
 18493  0156F4  0E00               	movlw	0
 18494  0156F6  0101               	movlb	1	; () banked
 18495  0156F8  6F1C               	movwf	(?___ftdiv+2)& (0+255),b
 18496  0156FA  0012               	return	
 18497  0156FC                     l10888:
 18498                           
 18499                           ; BSR set to: 1
 18500  0156FC  0101               	movlb	1	; () banked
 18501  0156FE  C11F  F120         	movff	___ftdiv@f2+2,??___ftdiv
 18502  015702  0101               	movlb	1	; () banked
 18503  015704  6B21               	clrf	(??___ftdiv+1)& (0+255),b
 18504  015706  6B22               	clrf	(??___ftdiv+2)& (0+255),b
 18505  015708  0101               	movlb	1	; () banked
 18506  01570A  351E               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 18507  01570C  0101               	movlb	1	; () banked
 18508  01570E  3720               	rlcf	??___ftdiv& (0+255),f,b
 18509  015710  E301               	bnc	u14201
 18510  015712  8121               	bsf	(??___ftdiv+1)& (0+255),0,b
 18511  015714                     u14201:
 18512  015714  0101               	movlb	1	; () banked
 18513  015716  5120               	movf	??___ftdiv& (0+255),w,b
 18514  015718  0101               	movlb	1	; () banked
 18515  01571A  6F28               	movwf	___ftdiv@sign& (0+255),b
 18516  01571C  0101               	movlb	1	; () banked
 18517  01571E  6728               	tstfsz	___ftdiv@sign& (0+255),b
 18518  015720  D00A               	goto	l10894
 18519                           
 18520                           ; BSR set to: 1
 18521  015722  0E00               	movlw	0
 18522  015724  0101               	movlb	1	; () banked
 18523  015726  6F1A               	movwf	?___ftdiv& (0+255),b
 18524  015728  0E00               	movlw	0
 18525  01572A  0101               	movlb	1	; () banked
 18526  01572C  6F1B               	movwf	(?___ftdiv+1)& (0+255),b
 18527  01572E  0E00               	movlw	0
 18528  015730  0101               	movlb	1	; () banked
 18529  015732  6F1C               	movwf	(?___ftdiv+2)& (0+255),b
 18530  015734  0012               	return	
 18531  015736                     l10894:
 18532                           
 18533                           ; BSR set to: 1
 18534  015736  0E00               	movlw	0
 18535  015738  0101               	movlb	1	; () banked
 18536  01573A  6F24               	movwf	___ftdiv@f3& (0+255),b
 18537  01573C  0E00               	movlw	0
 18538  01573E  0101               	movlb	1	; () banked
 18539  015740  6F25               	movwf	(___ftdiv@f3+1)& (0+255),b
 18540  015742  0E00               	movlw	0
 18541  015744  0101               	movlb	1	; () banked
 18542  015746  6F26               	movwf	(___ftdiv@f3+2)& (0+255),b
 18543                           
 18544                           ; BSR set to: 1
 18545  015748  0101               	movlb	1	; () banked
 18546  01574A  5128               	movf	___ftdiv@sign& (0+255),w,b
 18547  01574C  0F89               	addlw	137
 18548  01574E  0101               	movlb	1	; () banked
 18549  015750  5F27               	subwf	___ftdiv@exp& (0+255),f,b
 18550                           
 18551                           ; BSR set to: 1
 18552  015752  C11C  F128         	movff	___ftdiv@f1+2,___ftdiv@sign
 18553                           
 18554                           ; BSR set to: 1
 18555  015756  0101               	movlb	1	; () banked
 18556  015758  511F               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18557  01575A  0101               	movlb	1	; () banked
 18558  01575C  1B28               	xorwf	___ftdiv@sign& (0+255),f,b
 18559                           
 18560                           ; BSR set to: 1
 18561  01575E  0E80               	movlw	128
 18562  015760  0101               	movlb	1	; () banked
 18563  015762  1728               	andwf	___ftdiv@sign& (0+255),f,b
 18564                           
 18565                           ; BSR set to: 1
 18566  015764  0101               	movlb	1	; () banked
 18567  015766  8F1B               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 18568                           
 18569                           ; BSR set to: 1
 18570  015768  0EFF               	movlw	255
 18571  01576A  0101               	movlb	1	; () banked
 18572  01576C  171A               	andwf	___ftdiv@f1& (0+255),f,b
 18573  01576E  0EFF               	movlw	255
 18574  015770  0101               	movlb	1	; () banked
 18575  015772  171B               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 18576  015774  0E00               	movlw	0
 18577  015776  0101               	movlb	1	; () banked
 18578  015778  171C               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 18579                           
 18580                           ; BSR set to: 1
 18581  01577A  0101               	movlb	1	; () banked
 18582  01577C  8F1E               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 18583                           
 18584                           ; BSR set to: 1
 18585  01577E  0EFF               	movlw	255
 18586  015780  0101               	movlb	1	; () banked
 18587  015782  171D               	andwf	___ftdiv@f2& (0+255),f,b
 18588  015784  0EFF               	movlw	255
 18589  015786  0101               	movlb	1	; () banked
 18590  015788  171E               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 18591  01578A  0E00               	movlw	0
 18592  01578C  0101               	movlb	1	; () banked
 18593  01578E  171F               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 18594                           
 18595                           ; BSR set to: 1
 18596  015790  0E18               	movlw	24
 18597  015792  0101               	movlb	1	; () banked
 18598  015794  6F23               	movwf	___ftdiv@cntr& (0+255),b
 18599  015796                     l10914:
 18600                           
 18601                           ; BSR set to: 1
 18602  015796  0101               	movlb	1	; () banked
 18603  015798  90D8               	bcf	status,0,c
 18604  01579A  0101               	movlb	1	; () banked
 18605  01579C  3724               	rlcf	___ftdiv@f3& (0+255),f,b
 18606  01579E  0101               	movlb	1	; () banked
 18607  0157A0  3725               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 18608  0157A2  0101               	movlb	1	; () banked
 18609  0157A4  3726               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 18610                           
 18611                           ; BSR set to: 1
 18612  0157A6  0101               	movlb	1	; () banked
 18613  0157A8  511D               	movf	___ftdiv@f2& (0+255),w,b
 18614  0157AA  0101               	movlb	1	; () banked
 18615  0157AC  5D1A               	subwf	___ftdiv@f1& (0+255),w,b
 18616  0157AE  0101               	movlb	1	; () banked
 18617  0157B0  511E               	movf	(___ftdiv@f2+1)& (0+255),w,b
 18618  0157B2  0101               	movlb	1	; () banked
 18619  0157B4  591B               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 18620  0157B6  0101               	movlb	1	; () banked
 18621  0157B8  511F               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18622  0157BA  0101               	movlb	1	; () banked
 18623  0157BC  591C               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 18624  0157BE  A0D8               	btfss	status,0,c
 18625  0157C0  D00E               	goto	l1990
 18626                           
 18627                           ; BSR set to: 1
 18628  0157C2  0101               	movlb	1	; () banked
 18629  0157C4  511D               	movf	___ftdiv@f2& (0+255),w,b
 18630  0157C6  0101               	movlb	1	; () banked
 18631  0157C8  5F1A               	subwf	___ftdiv@f1& (0+255),f,b
 18632  0157CA  0101               	movlb	1	; () banked
 18633  0157CC  511E               	movf	(___ftdiv@f2+1)& (0+255),w,b
 18634  0157CE  0101               	movlb	1	; () banked
 18635  0157D0  5B1B               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 18636  0157D2  0101               	movlb	1	; () banked
 18637  0157D4  511F               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18638  0157D6  0101               	movlb	1	; () banked
 18639  0157D8  5B1C               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 18640                           
 18641                           ; BSR set to: 1
 18642  0157DA  0101               	movlb	1	; () banked
 18643  0157DC  8124               	bsf	___ftdiv@f3& (0+255),0,b
 18644  0157DE                     l1990:
 18645                           
 18646                           ; BSR set to: 1
 18647  0157DE  0101               	movlb	1	; () banked
 18648  0157E0  90D8               	bcf	status,0,c
 18649  0157E2  0101               	movlb	1	; () banked
 18650  0157E4  371A               	rlcf	___ftdiv@f1& (0+255),f,b
 18651  0157E6  0101               	movlb	1	; () banked
 18652  0157E8  371B               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 18653  0157EA  0101               	movlb	1	; () banked
 18654  0157EC  371C               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 18655                           
 18656                           ; BSR set to: 1
 18657  0157EE  0101               	movlb	1	; () banked
 18658  0157F0  2F23               	decfsz	___ftdiv@cntr& (0+255),f,b
 18659  0157F2  D7D1               	goto	l10914
 18660                           
 18661                           ; BSR set to: 1
 18662                           
 18663                           ; BSR set to: 1
 18664  0157F4  C124  F10E         	movff	___ftdiv@f3,___ftpack@arg
 18665  0157F8  C125  F10F         	movff	___ftdiv@f3+1,___ftpack@arg+1
 18666  0157FC  C126  F110         	movff	___ftdiv@f3+2,___ftpack@arg+2
 18667  015800  C127  F111         	movff	___ftdiv@exp,___ftpack@exp
 18668  015804  C128  F112         	movff	___ftdiv@sign,___ftpack@sign
 18669  015808  ECC7  F0AD         	call	___ftpack	;wreg free
 18670  01580C  C10E  F11A         	movff	?___ftpack,?___ftdiv
 18671  015810  C10F  F11B         	movff	?___ftpack+1,?___ftdiv+1
 18672  015814  C110  F11C         	movff	?___ftpack+2,?___ftdiv+2
 18673  015818  0012               	return	
 18674  01581A                     __end_of___ftdiv:
 18675                           	opt stack 0
 18676                           tblptru	equ	0xFF8
 18677                           tblptrh	equ	0xFF7
 18678                           tblptrl	equ	0xFF6
 18679                           tablat	equ	0xFF5
 18680                           prodh	equ	0xFF4
 18681                           prodl	equ	0xFF3
 18682                           intcon	equ	0xFF2
 18683                           postinc0	equ	0xFEE
 18684                           wreg	equ	0xFE8
 18685                           indf1	equ	0xFE7
 18686                           postinc1	equ	0xFE6
 18687                           postdec1	equ	0xFE5
 18688                           fsr1h	equ	0xFE2
 18689                           fsr1l	equ	0xFE1
 18690                           indf2	equ	0xFDF
 18691                           postinc2	equ	0xFDE
 18692                           fsr2h	equ	0xFDA
 18693                           fsr2l	equ	0xFD9
 18694                           status	equ	0xFD8
 18695                           
 18696 ;; *************** function ___ftpack *****************
 18697 ;; Defined at:
 18698 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
 18699 ;; Parameters:    Size  Location     Type
 18700 ;;  arg             3   14[BANK1 ] unsigned um
 18701 ;;  exp             1   17[BANK1 ] unsigned char 
 18702 ;;  sign            1   18[BANK1 ] unsigned char 
 18703 ;; Auto vars:     Size  Location     Type
 18704 ;;		None
 18705 ;; Return value:  Size  Location     Type
 18706 ;;                  3   14[BANK1 ] float 
 18707 ;; Registers used:
 18708 ;;		wreg, status,2, status,0
 18709 ;; Tracked objects:
 18710 ;;		On entry : 0/0
 18711 ;;		On exit  : 0/0
 18712 ;;		Unchanged: 0/0
 18713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18714 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 18715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18716 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18717 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 18718 ;;Total ram usage:        8 bytes
 18719 ;; Hardware stack levels used:    1
 18720 ;; Hardware stack levels required when called:    6
 18721 ;; This function calls:
 18722 ;;		Nothing
 18723 ;; This function is called by:
 18724 ;;		___ftdiv
 18725 ;;		___ftmul
 18726 ;;		___lbtoft
 18727 ;;		___lwtoft
 18728 ;; This function uses a non-reentrant model
 18729 ;;
 18730                           
 18731                           	psect	text30
 18732  015B8E                     __ptext30:
 18733                           	opt stack 0
 18734  015B8E                     ___ftpack:
 18735                           	opt stack 21
 18736                           
 18737                           ;incstack = 0
 18738  015B8E  0101               	movlb	1	; () banked
 18739  015B90  5111               	movf	___ftpack@exp& (0+255),w,b
 18740  015B92  B4D8               	btfsc	status,2,c
 18741  015B94  D008               	goto	l10092
 18742                           
 18743                           ; BSR set to: 1
 18744  015B96  0101               	movlb	1	; () banked
 18745  015B98  510E               	movf	___ftpack@arg& (0+255),w,b
 18746  015B9A  0101               	movlb	1	; () banked
 18747  015B9C  110F               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 18748  015B9E  0101               	movlb	1	; () banked
 18749  015BA0  1110               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 18750  015BA2  A4D8               	btfss	status,2,c
 18751  015BA4  D014               	goto	l10098
 18752  015BA6                     l10092:
 18753                           
 18754                           ; BSR set to: 1
 18755  015BA6  0E00               	movlw	0
 18756  015BA8  0101               	movlb	1	; () banked
 18757  015BAA  6F0E               	movwf	?___ftpack& (0+255),b
 18758  015BAC  0E00               	movlw	0
 18759  015BAE  0101               	movlb	1	; () banked
 18760  015BB0  6F0F               	movwf	(?___ftpack+1)& (0+255),b
 18761  015BB2  0E00               	movlw	0
 18762  015BB4  0101               	movlb	1	; () banked
 18763  015BB6  6F10               	movwf	(?___ftpack+2)& (0+255),b
 18764  015BB8  0012               	return	
 18765  015BBA                     l10096:
 18766                           
 18767                           ; BSR set to: 1
 18768  015BBA  0101               	movlb	1	; () banked
 18769  015BBC  2B11               	incf	___ftpack@exp& (0+255),f,b
 18770  015BBE  0101               	movlb	1	; () banked
 18771  015BC0  90D8               	bcf	status,0,c
 18772  015BC2  0101               	movlb	1	; () banked
 18773  015BC4  3310               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 18774  015BC6  0101               	movlb	1	; () banked
 18775  015BC8  330F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 18776  015BCA  0101               	movlb	1	; () banked
 18777  015BCC  330E               	rrcf	___ftpack@arg& (0+255),f,b
 18778  015BCE                     l10098:
 18779                           
 18780                           ; BSR set to: 1
 18781  015BCE  0E00               	movlw	0
 18782  015BD0  0101               	movlb	1	; () banked
 18783  015BD2  150E               	andwf	___ftpack@arg& (0+255),w,b
 18784  015BD4  0101               	movlb	1	; () banked
 18785  015BD6  6F13               	movwf	??___ftpack& (0+255),b
 18786  015BD8  0E00               	movlw	0
 18787  015BDA  0101               	movlb	1	; () banked
 18788  015BDC  150F               	andwf	(___ftpack@arg+1)& (0+255),w,b
 18789  015BDE  0101               	movlb	1	; () banked
 18790  015BE0  6F14               	movwf	(??___ftpack+1)& (0+255),b
 18791  015BE2  0EFE               	movlw	254
 18792  015BE4  0101               	movlb	1	; () banked
 18793  015BE6  1510               	andwf	(___ftpack@arg+2)& (0+255),w,b
 18794  015BE8  0101               	movlb	1	; () banked
 18795  015BEA  6F15               	movwf	(??___ftpack+2)& (0+255),b
 18796  015BEC  0101               	movlb	1	; () banked
 18797  015BEE  5113               	movf	??___ftpack& (0+255),w,b
 18798  015BF0  1114               	iorwf	(??___ftpack+1)& (0+255),w,b
 18799  015BF2  1115               	iorwf	(??___ftpack+2)& (0+255),w,b
 18800  015BF4  B4D8               	btfsc	status,2,c
 18801  015BF6  D014               	goto	l10104
 18802  015BF8  D7E0               	goto	l10096
 18803  015BFA                     l10100:
 18804                           
 18805                           ; BSR set to: 1
 18806  015BFA  0101               	movlb	1	; () banked
 18807  015BFC  2B11               	incf	___ftpack@exp& (0+255),f,b
 18808                           
 18809                           ; BSR set to: 1
 18810  015BFE  0E01               	movlw	1
 18811  015C00  0101               	movlb	1	; () banked
 18812  015C02  270E               	addwf	___ftpack@arg& (0+255),f,b
 18813  015C04  0E00               	movlw	0
 18814  015C06  0101               	movlb	1	; () banked
 18815  015C08  230F               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 18816  015C0A  0E00               	movlw	0
 18817  015C0C  0101               	movlb	1	; () banked
 18818  015C0E  2310               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 18819  015C10  0101               	movlb	1	; () banked
 18820  015C12  90D8               	bcf	status,0,c
 18821  015C14  0101               	movlb	1	; () banked
 18822  015C16  3310               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 18823  015C18  0101               	movlb	1	; () banked
 18824  015C1A  330F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 18825  015C1C  0101               	movlb	1	; () banked
 18826  015C1E  330E               	rrcf	___ftpack@arg& (0+255),f,b
 18827  015C20                     l10104:
 18828                           
 18829                           ; BSR set to: 1
 18830  015C20  0E00               	movlw	0
 18831  015C22  0101               	movlb	1	; () banked
 18832  015C24  150E               	andwf	___ftpack@arg& (0+255),w,b
 18833  015C26  0101               	movlb	1	; () banked
 18834  015C28  6F13               	movwf	??___ftpack& (0+255),b
 18835  015C2A  0E00               	movlw	0
 18836  015C2C  0101               	movlb	1	; () banked
 18837  015C2E  150F               	andwf	(___ftpack@arg+1)& (0+255),w,b
 18838  015C30  0101               	movlb	1	; () banked
 18839  015C32  6F14               	movwf	(??___ftpack+1)& (0+255),b
 18840  015C34  0EFF               	movlw	255
 18841  015C36  0101               	movlb	1	; () banked
 18842  015C38  1510               	andwf	(___ftpack@arg+2)& (0+255),w,b
 18843  015C3A  0101               	movlb	1	; () banked
 18844  015C3C  6F15               	movwf	(??___ftpack+2)& (0+255),b
 18845  015C3E  0101               	movlb	1	; () banked
 18846  015C40  5113               	movf	??___ftpack& (0+255),w,b
 18847  015C42  1114               	iorwf	(??___ftpack+1)& (0+255),w,b
 18848  015C44  1115               	iorwf	(??___ftpack+2)& (0+255),w,b
 18849  015C46  B4D8               	btfsc	status,2,c
 18850  015C48  D00B               	goto	l10108
 18851  015C4A  D7D7               	goto	l10100
 18852  015C4C                     l10106:
 18853                           
 18854                           ; BSR set to: 1
 18855  015C4C  0101               	movlb	1	; () banked
 18856  015C4E  0711               	decf	___ftpack@exp& (0+255),f,b
 18857  015C50  0101               	movlb	1	; () banked
 18858  015C52  90D8               	bcf	status,0,c
 18859  015C54  0101               	movlb	1	; () banked
 18860  015C56  370E               	rlcf	___ftpack@arg& (0+255),f,b
 18861  015C58  0101               	movlb	1	; () banked
 18862  015C5A  370F               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 18863  015C5C  0101               	movlb	1	; () banked
 18864  015C5E  3710               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 18865  015C60                     l10108:
 18866                           
 18867                           ; BSR set to: 1
 18868  015C60  0101               	movlb	1	; () banked
 18869  015C62  AF0F               	btfss	(___ftpack@arg+1)& (0+255),7,b
 18870  015C64  D7F3               	goto	l10106
 18871                           
 18872                           ; BSR set to: 1
 18873  015C66  0101               	movlb	1	; () banked
 18874  015C68  B111               	btfsc	___ftpack@exp& (0+255),0,b
 18875  015C6A  D002               	goto	l10112
 18876                           
 18877                           ; BSR set to: 1
 18878  015C6C  0101               	movlb	1	; () banked
 18879  015C6E  9F0F               	bcf	(___ftpack@arg+1)& (0+255),7,b
 18880  015C70                     l10112:
 18881                           
 18882                           ; BSR set to: 1
 18883  015C70  0101               	movlb	1	; () banked
 18884  015C72  90D8               	bcf	status,0,c
 18885  015C74  3311               	rrcf	___ftpack@exp& (0+255),f,b
 18886  015C76  0101               	movlb	1	; () banked
 18887  015C78  5111               	movf	___ftpack@exp& (0+255),w,b
 18888  015C7A  0101               	movlb	1	; () banked
 18889  015C7C  1310               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 18890                           
 18891                           ; BSR set to: 1
 18892  015C7E  0101               	movlb	1	; () banked
 18893  015C80  5112               	movf	___ftpack@sign& (0+255),w,b
 18894  015C82  B4D8               	btfsc	status,2,c
 18895  015C84  D002               	goto	l10118
 18896                           
 18897                           ; BSR set to: 1
 18898  015C86  0101               	movlb	1	; () banked
 18899  015C88  8F10               	bsf	(___ftpack@arg+2)& (0+255),7,b
 18900  015C8A                     l10118:
 18901                           
 18902                           ; BSR set to: 1
 18903  015C8A  C10E  F10E         	movff	___ftpack@arg,?___ftpack
 18904  015C8E  C10F  F10F         	movff	___ftpack@arg+1,?___ftpack+1
 18905  015C92  C110  F110         	movff	___ftpack@arg+2,?___ftpack+2
 18906  015C96  0012               	return	
 18907  015C98                     __end_of___ftpack:
 18908                           	opt stack 0
 18909                           tblptru	equ	0xFF8
 18910                           tblptrh	equ	0xFF7
 18911                           tblptrl	equ	0xFF6
 18912                           tablat	equ	0xFF5
 18913                           prodh	equ	0xFF4
 18914                           prodl	equ	0xFF3
 18915                           intcon	equ	0xFF2
 18916                           postinc0	equ	0xFEE
 18917                           wreg	equ	0xFE8
 18918                           indf1	equ	0xFE7
 18919                           postinc1	equ	0xFE6
 18920                           postdec1	equ	0xFE5
 18921                           fsr1h	equ	0xFE2
 18922                           fsr1l	equ	0xFE1
 18923                           indf2	equ	0xFDF
 18924                           postinc2	equ	0xFDE
 18925                           fsr2h	equ	0xFDA
 18926                           fsr2l	equ	0xFD9
 18927                           status	equ	0xFD8
 18928                           
 18929 ;; *************** function _SetBaud *****************
 18930 ;; Defined at:
 18931 ;;		line 314 in file "UART.c"
 18932 ;; Parameters:    Size  Location     Type
 18933 ;;  Baud            4   78[BANK1 ] unsigned long 
 18934 ;;  Parity          1   82[BANK1 ] unsigned char 
 18935 ;; Auto vars:     Size  Location     Type
 18936 ;;  buf            50    0[BANK2 ] unsigned char [50]
 18937 ;;  temp            4   59[BANK2 ] unsigned long 
 18938 ;;  Paritytemp      4   55[BANK2 ] unsigned long 
 18939 ;;  Baudtemp        4   51[BANK2 ] unsigned long 
 18940 ;;  i               1   50[BANK2 ] unsigned char 
 18941 ;; Return value:  Size  Location     Type
 18942 ;;		None               void
 18943 ;; Registers used:
 18944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18945 ;; Tracked objects:
 18946 ;;		On entry : 0/0
 18947 ;;		On exit  : 0/0
 18948 ;;		Unchanged: 0/0
 18949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18950 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 18951 ;;      Locals:         0       0       0      63       0       0       0       0       0       0       0       0       
      +0       0
 18952 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18953 ;;      Totals:         0       0       9      63       0       0       0       0       0       0       0       0       
      +0       0
 18954 ;;Total ram usage:       72 bytes
 18955 ;; Hardware stack levels used:    1
 18956 ;; Hardware stack levels required when called:    9
 18957 ;; This function calls:
 18958 ;;		_InitUART
 18959 ;;		_UARTstring
 18960 ;;		_UARTstringWAIT
 18961 ;;		_delayUS
 18962 ;;		_sprintf
 18963 ;; This function is called by:
 18964 ;;		_Command
 18965 ;; This function uses a non-reentrant model
 18966 ;;
 18967                           
 18968                           	psect	text31
 18969  01445C                     __ptext31:
 18970                           	opt stack 0
 18971  01445C                     _SetBaud:
 18972                           	opt stack 19
 18973                           
 18974                           ;UART.c: 316: unsigned char buf[50];
 18975                           ;UART.c: 317: unsigned long Baudtemp=0;
 18976                           
 18977                           ; BSR set to: 1
 18978                           ;incstack = 0
 18979  01445C  0E00               	movlw	0
 18980  01445E  0102               	movlb	2	; () banked
 18981  014460  6F33               	movwf	SetBaud@Baudtemp& (0+255),b
 18982  014462  0E00               	movlw	0
 18983  014464  0102               	movlb	2	; () banked
 18984  014466  6F34               	movwf	(SetBaud@Baudtemp+1)& (0+255),b
 18985  014468  0E00               	movlw	0
 18986  01446A  0102               	movlb	2	; () banked
 18987  01446C  6F35               	movwf	(SetBaud@Baudtemp+2)& (0+255),b
 18988  01446E  0E00               	movlw	0
 18989  014470  0102               	movlb	2	; () banked
 18990  014472  6F36               	movwf	(SetBaud@Baudtemp+3)& (0+255),b
 18991                           
 18992                           ;UART.c: 318: unsigned long Paritytemp=0;
 18993  014474  0E00               	movlw	0
 18994  014476  0102               	movlb	2	; () banked
 18995  014478  6F37               	movwf	SetBaud@Paritytemp& (0+255),b
 18996  01447A  0E00               	movlw	0
 18997  01447C  0102               	movlb	2	; () banked
 18998  01447E  6F38               	movwf	(SetBaud@Paritytemp+1)& (0+255),b
 18999  014480  0E00               	movlw	0
 19000  014482  0102               	movlb	2	; () banked
 19001  014484  6F39               	movwf	(SetBaud@Paritytemp+2)& (0+255),b
 19002  014486  0E00               	movlw	0
 19003  014488  0102               	movlb	2	; () banked
 19004  01448A  6F3A               	movwf	(SetBaud@Paritytemp+3)& (0+255),b
 19005                           
 19006                           ;UART.c: 319: unsigned long temp;
 19007                           ;UART.c: 320: unsigned char i =0;
 19008  01448C  0E00               	movlw	0
 19009  01448E  0102               	movlb	2	; () banked
 19010  014490  6F32               	movwf	SetBaud@i& (0+255),b
 19011                           
 19012                           ;UART.c: 322: if(Parity)
 19013  014492  0101               	movlb	1	; () banked
 19014  014494  5152               	movf	SetBaud@Parity& (0+255),w,b
 19015  014496  A4D8               	btfss	status,2,c
 19016  014498  D065               	goto	l11452
 19017  01449A  D070               	goto	l11454
 19018  01449C                     l11442:
 19019                           
 19020                           ; BSR set to: 1
 19021                           ;UART.c: 327: sprintf(buf,"System Baud will be set to %lu with Odd parity bit\r\n",Baud)
      +                          ;
 19022  01449C  0102               	movlb	2	; () banked
 19023  01449E  0E02               	movlw	high SetBaud@buf
 19024  0144A0  0101               	movlb	1	; () banked
 19025  0144A2  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 19026  0144A4  0102               	movlb	2	; () banked
 19027  0144A6  0E00               	movlw	low SetBaud@buf
 19028  0144A8  0101               	movlb	1	; () banked
 19029  0144AA  6F24               	movwf	sprintf@sp& (0+255),b
 19030  0144AC  0EF0               	movlw	high STR_21
 19031  0144AE  0101               	movlb	1	; () banked
 19032  0144B0  6F27               	movwf	(sprintf@f+1)& (0+255),b
 19033  0144B2  0EAA               	movlw	low STR_21
 19034  0144B4  0101               	movlb	1	; () banked
 19035  0144B6  6F26               	movwf	sprintf@f& (0+255),b
 19036  0144B8  C14E  F128         	movff	SetBaud@Baud,?_sprintf+4
 19037  0144BC  C14F  F129         	movff	SetBaud@Baud+1,?_sprintf+5
 19038  0144C0  C150  F12A         	movff	SetBaud@Baud+2,?_sprintf+6
 19039  0144C4  C151  F12B         	movff	SetBaud@Baud+3,?_sprintf+7
 19040  0144C8  EC6C  F094         	call	_sprintf	;wreg free
 19041                           
 19042                           ;UART.c: 328: break;
 19043  0144CC  D06F               	goto	l11456
 19044  0144CE                     l11444:
 19045                           
 19046                           ;UART.c: 330: sprintf(buf,"System Baud will be set to %lu with Even parity bit\r\n",Baud
      +                          );
 19047  0144CE  0102               	movlb	2	; () banked
 19048  0144D0  0E02               	movlw	high SetBaud@buf
 19049  0144D2  0101               	movlb	1	; () banked
 19050  0144D4  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 19051  0144D6  0102               	movlb	2	; () banked
 19052  0144D8  0E00               	movlw	low SetBaud@buf
 19053  0144DA  0101               	movlb	1	; () banked
 19054  0144DC  6F24               	movwf	sprintf@sp& (0+255),b
 19055  0144DE  0EF0               	movlw	high STR_22
 19056  0144E0  0101               	movlb	1	; () banked
 19057  0144E2  6F27               	movwf	(sprintf@f+1)& (0+255),b
 19058  0144E4  0E74               	movlw	low STR_22
 19059  0144E6  0101               	movlb	1	; () banked
 19060  0144E8  6F26               	movwf	sprintf@f& (0+255),b
 19061  0144EA  C14E  F128         	movff	SetBaud@Baud,?_sprintf+4
 19062  0144EE  C14F  F129         	movff	SetBaud@Baud+1,?_sprintf+5
 19063  0144F2  C150  F12A         	movff	SetBaud@Baud+2,?_sprintf+6
 19064  0144F6  C151  F12B         	movff	SetBaud@Baud+3,?_sprintf+7
 19065  0144FA  EC6C  F094         	call	_sprintf	;wreg free
 19066                           
 19067                           ;UART.c: 331: break;
 19068  0144FE  D056               	goto	l11456
 19069  014500                     l11446:
 19070                           
 19071                           ;UART.c: 333: sprintf(buf,"System Baud will be set to %lu with Mark bit\r\n",Baud);
 19072  014500  0102               	movlb	2	; () banked
 19073  014502  0E02               	movlw	high SetBaud@buf
 19074  014504  0101               	movlb	1	; () banked
 19075  014506  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 19076  014508  0102               	movlb	2	; () banked
 19077  01450A  0E00               	movlw	low SetBaud@buf
 19078  01450C  0101               	movlb	1	; () banked
 19079  01450E  6F24               	movwf	sprintf@sp& (0+255),b
 19080  014510  0EF1               	movlw	high STR_23
 19081  014512  0101               	movlb	1	; () banked
 19082  014514  6F27               	movwf	(sprintf@f+1)& (0+255),b
 19083  014516  0ED6               	movlw	low STR_23
 19084  014518  0101               	movlb	1	; () banked
 19085  01451A  6F26               	movwf	sprintf@f& (0+255),b
 19086  01451C  C14E  F128         	movff	SetBaud@Baud,?_sprintf+4
 19087  014520  C14F  F129         	movff	SetBaud@Baud+1,?_sprintf+5
 19088  014524  C150  F12A         	movff	SetBaud@Baud+2,?_sprintf+6
 19089  014528  C151  F12B         	movff	SetBaud@Baud+3,?_sprintf+7
 19090  01452C  EC6C  F094         	call	_sprintf	;wreg free
 19091                           
 19092                           ;UART.c: 334: break;
 19093  014530  D03D               	goto	l11456
 19094  014532                     l11448:
 19095                           
 19096                           ;UART.c: 336: sprintf(buf,"System Baud will be set to %lu with Space bit\r\n",Baud);
 19097  014532  0102               	movlb	2	; () banked
 19098  014534  0E02               	movlw	high SetBaud@buf
 19099  014536  0101               	movlb	1	; () banked
 19100  014538  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 19101  01453A  0102               	movlb	2	; () banked
 19102  01453C  0E00               	movlw	low SetBaud@buf
 19103  01453E  0101               	movlb	1	; () banked
 19104  014540  6F24               	movwf	sprintf@sp& (0+255),b
 19105  014542  0EF1               	movlw	high STR_24
 19106  014544  0101               	movlb	1	; () banked
 19107  014546  6F27               	movwf	(sprintf@f+1)& (0+255),b
 19108  014548  0EA6               	movlw	low STR_24
 19109  01454A  0101               	movlb	1	; () banked
 19110  01454C  6F26               	movwf	sprintf@f& (0+255),b
 19111  01454E  C14E  F128         	movff	SetBaud@Baud,?_sprintf+4
 19112  014552  C14F  F129         	movff	SetBaud@Baud+1,?_sprintf+5
 19113  014556  C150  F12A         	movff	SetBaud@Baud+2,?_sprintf+6
 19114  01455A  C151  F12B         	movff	SetBaud@Baud+3,?_sprintf+7
 19115  01455E  EC6C  F094         	call	_sprintf	;wreg free
 19116                           
 19117                           ;UART.c: 337: break;
 19118  014562  D024               	goto	l11456
 19119  014564                     l11452:
 19120  014564  0101               	movlb	1	; () banked
 19121  014566  5152               	movf	SetBaud@Parity& (0+255),w,b
 19122                           
 19123                           ; Switch size 1, requested type "space"
 19124                           ; Number of cases is 3, Range of values is 1 to 3
 19125                           ; switch strategies available:
 19126                           ; Name         Instructions Cycles
 19127                           ; simple_byte           10     6 (average)
 19128                           ;	Chosen strategy is simple_byte
 19129  014568  0A01               	xorlw	1	; case 1
 19130  01456A  B4D8               	btfsc	status,2,c
 19131  01456C  D797               	goto	l11442
 19132  01456E  0A03               	xorlw	3	; case 2
 19133  014570  B4D8               	btfsc	status,2,c
 19134  014572  D7AD               	goto	l11444
 19135  014574  0A01               	xorlw	1	; case 3
 19136  014576  B4D8               	btfsc	status,2,c
 19137  014578  D7C3               	goto	l11446
 19138  01457A  D7DB               	goto	l11448
 19139  01457C                     l11454:
 19140                           
 19141                           ; BSR set to: 1
 19142                           ;UART.c: 340: else
 19143                           ;UART.c: 341: {
 19144                           ;UART.c: 342: sprintf(buf,"System Baud will be set to %lu with no parity bit\r\n",Baud);
 19145  01457C  0102               	movlb	2	; () banked
 19146  01457E  0E02               	movlw	high SetBaud@buf
 19147  014580  0101               	movlb	1	; () banked
 19148  014582  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 19149  014584  0102               	movlb	2	; () banked
 19150  014586  0E00               	movlw	low SetBaud@buf
 19151  014588  0101               	movlb	1	; () banked
 19152  01458A  6F24               	movwf	sprintf@sp& (0+255),b
 19153  01458C  0EF0               	movlw	high STR_25
 19154  01458E  0101               	movlb	1	; () banked
 19155  014590  6F27               	movwf	(sprintf@f+1)& (0+255),b
 19156  014592  0EDF               	movlw	low STR_25
 19157  014594  0101               	movlb	1	; () banked
 19158  014596  6F26               	movwf	sprintf@f& (0+255),b
 19159  014598  C14E  F128         	movff	SetBaud@Baud,?_sprintf+4
 19160  01459C  C14F  F129         	movff	SetBaud@Baud+1,?_sprintf+5
 19161  0145A0  C150  F12A         	movff	SetBaud@Baud+2,?_sprintf+6
 19162  0145A4  C151  F12B         	movff	SetBaud@Baud+3,?_sprintf+7
 19163  0145A8  EC6C  F094         	call	_sprintf	;wreg free
 19164  0145AC                     l11456:
 19165                           
 19166                           ;UART.c: 343: }
 19167                           ;UART.c: 346: Baudtemp = temp & 0x000FFFFF;
 19168  0145AC  0EFF               	movlw	255
 19169  0145AE  0102               	movlb	2	; () banked
 19170  0145B0  153B               	andwf	SetBaud@temp& (0+255),w,b
 19171  0145B2  0102               	movlb	2	; () banked
 19172  0145B4  6F33               	movwf	SetBaud@Baudtemp& (0+255),b
 19173  0145B6  0EFF               	movlw	255
 19174  0145B8  0102               	movlb	2	; () banked
 19175  0145BA  153C               	andwf	(SetBaud@temp+1)& (0+255),w,b
 19176  0145BC  0102               	movlb	2	; () banked
 19177  0145BE  6F34               	movwf	(SetBaud@Baudtemp+1)& (0+255),b
 19178  0145C0  0E0F               	movlw	15
 19179  0145C2  0102               	movlb	2	; () banked
 19180  0145C4  153D               	andwf	(SetBaud@temp+2)& (0+255),w,b
 19181  0145C6  0102               	movlb	2	; () banked
 19182  0145C8  6F35               	movwf	(SetBaud@Baudtemp+2)& (0+255),b
 19183  0145CA  0E00               	movlw	0
 19184  0145CC  0102               	movlb	2	; () banked
 19185  0145CE  153E               	andwf	(SetBaud@temp+3)& (0+255),w,b
 19186  0145D0  0102               	movlb	2	; () banked
 19187  0145D2  6F36               	movwf	(SetBaud@Baudtemp+3)& (0+255),b
 19188                           
 19189                           ; BSR set to: 2
 19190                           ;UART.c: 347: Paritytemp = (unsigned char)((temp & 0x00F00000) >> 20);
 19191  0145D4  0102               	movlb	2	; () banked
 19192  0145D6  C23B  F153         	movff	SetBaud@temp,??_SetBaud
 19193  0145DA  0102               	movlb	2	; () banked
 19194  0145DC  C23C  F154         	movff	SetBaud@temp+1,??_SetBaud+1
 19195  0145E0  0102               	movlb	2	; () banked
 19196  0145E2  C23D  F155         	movff	SetBaud@temp+2,??_SetBaud+2
 19197  0145E6  0102               	movlb	2	; () banked
 19198  0145E8  C23E  F156         	movff	SetBaud@temp+3,??_SetBaud+3
 19199  0145EC  0E15               	movlw	21
 19200  0145EE  D006               	goto	u14970
 19201  0145F0                     u14975:
 19202  0145F0  0101               	movlb	1	; () banked
 19203  0145F2  90D8               	bcf	status,0,c
 19204  0145F4  3356               	rrcf	(??_SetBaud+3)& (0+255),f,b
 19205  0145F6  3355               	rrcf	(??_SetBaud+2)& (0+255),f,b
 19206  0145F8  3354               	rrcf	(??_SetBaud+1)& (0+255),f,b
 19207  0145FA  3353               	rrcf	??_SetBaud& (0+255),f,b
 19208  0145FC                     u14970:
 19209  0145FC  2EE8               	decfsz	wreg,f,c
 19210  0145FE  D7F8               	goto	u14975
 19211  014600  0E0F               	movlw	15
 19212  014602  0101               	movlb	1	; () banked
 19213  014604  1753               	andwf	??_SetBaud& (0+255),f,b
 19214  014606  0101               	movlb	1	; () banked
 19215  014608  5153               	movf	??_SetBaud& (0+255),w,b
 19216  01460A  0102               	movlb	2	; () banked
 19217  01460C  6F37               	movwf	SetBaud@Paritytemp& (0+255),b
 19218  01460E  0102               	movlb	2	; () banked
 19219  014610  6B38               	clrf	(SetBaud@Paritytemp+1)& (0+255),b
 19220  014612  0102               	movlb	2	; () banked
 19221  014614  6B39               	clrf	(SetBaud@Paritytemp+2)& (0+255),b
 19222  014616  0102               	movlb	2	; () banked
 19223  014618  6B3A               	clrf	(SetBaud@Paritytemp+3)& (0+255),b
 19224                           
 19225                           ; BSR set to: 2
 19226                           ;UART.c: 349: InitUART(Baud, Parity);
 19227  01461A  C14E  F11B         	movff	SetBaud@Baud,InitUART@Baud
 19228  01461E  C14F  F11C         	movff	SetBaud@Baud+1,InitUART@Baud+1
 19229  014622  C150  F11D         	movff	SetBaud@Baud+2,InitUART@Baud+2
 19230  014626  C151  F11E         	movff	SetBaud@Baud+3,InitUART@Baud+3
 19231  01462A  C152  F11F         	movff	SetBaud@Parity,InitUART@parity
 19232  01462E  EC44  F0A8         	call	_InitUART	;wreg free
 19233                           
 19234                           ;UART.c: 350: UARTstring("\r\n");
 19235  014632  0EF6               	movlw	high (STR_279+19)
 19236  014634  0101               	movlb	1	; () banked
 19237  014636  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 19238  014638  0EF4               	movlw	low (STR_279+19)
 19239  01463A  0101               	movlb	1	; () banked
 19240  01463C  6F19               	movwf	UARTstring@data& (0+255),b
 19241  01463E  EC36  F0B3         	call	_UARTstring	;wreg free
 19242                           
 19243                           ;UART.c: 351: delayUS(10000);
 19244  014642  0E10               	movlw	16
 19245  014644  0101               	movlb	1	; () banked
 19246  014646  6F0E               	movwf	delayUS@US& (0+255),b
 19247  014648  0E27               	movlw	39
 19248  01464A  0101               	movlb	1	; () banked
 19249  01464C  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 19250  01464E  0E00               	movlw	0
 19251  014650  0101               	movlb	1	; () banked
 19252  014652  6F10               	movwf	(delayUS@US+2)& (0+255),b
 19253  014654  0E00               	movlw	0
 19254  014656  0101               	movlb	1	; () banked
 19255  014658  6F11               	movwf	(delayUS@US+3)& (0+255),b
 19256  01465A  EC10  F0B9         	call	_delayUS	;wreg free
 19257                           
 19258                           ;UART.c: 352: if((Baud != Baudtemp) || (Parity != Paritytemp))
 19259  01465E  0102               	movlb	2	; () banked
 19260  014660  5136               	movf	(SetBaud@Baudtemp+3)& (0+255),w,b
 19261  014662  0101               	movlb	1	; () banked
 19262  014664  1951               	xorwf	(SetBaud@Baud+3)& (0+255),w,b
 19263  014666  E10E               	bnz	u14985
 19264  014668  0102               	movlb	2	; () banked
 19265  01466A  5135               	movf	(SetBaud@Baudtemp+2)& (0+255),w,b
 19266  01466C  0101               	movlb	1	; () banked
 19267  01466E  1950               	xorwf	(SetBaud@Baud+2)& (0+255),w,b
 19268  014670  E109               	bnz	u14985
 19269  014672  0102               	movlb	2	; () banked
 19270  014674  5134               	movf	(SetBaud@Baudtemp+1)& (0+255),w,b
 19271  014676  0101               	movlb	1	; () banked
 19272  014678  194F               	xorwf	(SetBaud@Baud+1)& (0+255),w,b
 19273  01467A  E104               	bnz	u14985
 19274  01467C  0102               	movlb	2	; () banked
 19275  01467E  5133               	movf	SetBaud@Baudtemp& (0+255),w,b
 19276  014680  0101               	movlb	1	; () banked
 19277  014682  194E               	xorwf	SetBaud@Baud& (0+255),w,b
 19278  014684                     u14985:
 19279  014684  A4D8               	btfss	status,2,c
 19280  014686  D01C               	goto	l11470
 19281                           
 19282                           ; BSR set to: 1
 19283  014688  0101               	movlb	1	; () banked
 19284  01468A  C152  F153         	movff	SetBaud@Parity,??_SetBaud
 19285  01468E  0101               	movlb	1	; () banked
 19286  014690  6B54               	clrf	(??_SetBaud+1)& (0+255),b
 19287  014692  6B55               	clrf	(??_SetBaud+2)& (0+255),b
 19288  014694  6B56               	clrf	(??_SetBaud+3)& (0+255),b
 19289  014696  0102               	movlb	2	; () banked
 19290  014698  513A               	movf	(SetBaud@Paritytemp+3)& (0+255),w,b
 19291  01469A  0101               	movlb	1	; () banked
 19292  01469C  1956               	xorwf	(??_SetBaud+3)& (0+255),w,b
 19293  01469E  E10E               	bnz	u14995
 19294  0146A0  0102               	movlb	2	; () banked
 19295  0146A2  5139               	movf	(SetBaud@Paritytemp+2)& (0+255),w,b
 19296  0146A4  0101               	movlb	1	; () banked
 19297  0146A6  1955               	xorwf	(??_SetBaud+2)& (0+255),w,b
 19298  0146A8  E109               	bnz	u14995
 19299  0146AA  0102               	movlb	2	; () banked
 19300  0146AC  5138               	movf	(SetBaud@Paritytemp+1)& (0+255),w,b
 19301  0146AE  0101               	movlb	1	; () banked
 19302  0146B0  1954               	xorwf	(??_SetBaud+1)& (0+255),w,b
 19303  0146B2  E104               	bnz	u14995
 19304  0146B4  0102               	movlb	2	; () banked
 19305  0146B6  5137               	movf	SetBaud@Paritytemp& (0+255),w,b
 19306  0146B8  0101               	movlb	1	; () banked
 19307  0146BA  1953               	xorwf	??_SetBaud& (0+255),w,b
 19308  0146BC                     u14995:
 19309  0146BC  B4D8               	btfsc	status,2,c
 19310  0146BE  D016               	goto	l11474
 19311  0146C0                     l11470:
 19312                           
 19313                           ; BSR set to: 1
 19314                           ;UART.c: 353: {
 19315                           ;UART.c: 354: UARTstring("System Program Fail\r\n");
 19316  0146C0  0EF7               	movlw	high STR_27
 19317  0146C2  0101               	movlb	1	; () banked
 19318  0146C4  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 19319  0146C6  0E23               	movlw	low STR_27
 19320  0146C8  0101               	movlb	1	; () banked
 19321  0146CA  6F19               	movwf	UARTstring@data& (0+255),b
 19322  0146CC  EC36  F0B3         	call	_UARTstring	;wreg free
 19323                           
 19324                           ;UART.c: 355: delayUS(10000);
 19325  0146D0  0E10               	movlw	16
 19326  0146D2  0101               	movlb	1	; () banked
 19327  0146D4  6F0E               	movwf	delayUS@US& (0+255),b
 19328  0146D6  0E27               	movlw	39
 19329  0146D8  0101               	movlb	1	; () banked
 19330  0146DA  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 19331  0146DC  0E00               	movlw	0
 19332  0146DE  0101               	movlb	1	; () banked
 19333  0146E0  6F10               	movwf	(delayUS@US+2)& (0+255),b
 19334  0146E2  0E00               	movlw	0
 19335  0146E4  0101               	movlb	1	; () banked
 19336  0146E6  6F11               	movwf	(delayUS@US+3)& (0+255),b
 19337  0146E8  EC10  F0B9         	call	_delayUS	;wreg free
 19338  0146EC                     l11474:
 19339                           
 19340                           ;UART.c: 356: }
 19341                           ;UART.c: 357: sprintf(buf,"System Baud is %lu",Baud);
 19342  0146EC  0102               	movlb	2	; () banked
 19343  0146EE  0E02               	movlw	high SetBaud@buf
 19344  0146F0  0101               	movlb	1	; () banked
 19345  0146F2  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 19346  0146F4  0102               	movlb	2	; () banked
 19347  0146F6  0E00               	movlw	low SetBaud@buf
 19348  0146F8  0101               	movlb	1	; () banked
 19349  0146FA  6F24               	movwf	sprintf@sp& (0+255),b
 19350  0146FC  0EF8               	movlw	high STR_28
 19351  0146FE  0101               	movlb	1	; () banked
 19352  014700  6F27               	movwf	(sprintf@f+1)& (0+255),b
 19353  014702  0E26               	movlw	low STR_28
 19354  014704  0101               	movlb	1	; () banked
 19355  014706  6F26               	movwf	sprintf@f& (0+255),b
 19356  014708  C14E  F128         	movff	SetBaud@Baud,?_sprintf+4
 19357  01470C  C14F  F129         	movff	SetBaud@Baud+1,?_sprintf+5
 19358  014710  C150  F12A         	movff	SetBaud@Baud+2,?_sprintf+6
 19359  014714  C151  F12B         	movff	SetBaud@Baud+3,?_sprintf+7
 19360  014718  EC6C  F094         	call	_sprintf	;wreg free
 19361                           
 19362                           ;UART.c: 358: UARTstring(buf);
 19363  01471C  0102               	movlb	2	; () banked
 19364  01471E  0E02               	movlw	high SetBaud@buf
 19365  014720  0101               	movlb	1	; () banked
 19366  014722  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 19367  014724  0102               	movlb	2	; () banked
 19368  014726  0E00               	movlw	low SetBaud@buf
 19369  014728  0101               	movlb	1	; () banked
 19370  01472A  6F19               	movwf	UARTstring@data& (0+255),b
 19371  01472C  EC36  F0B3         	call	_UARTstring	;wreg free
 19372                           
 19373                           ;UART.c: 359: if(Parity)
 19374  014730  0101               	movlb	1	; () banked
 19375  014732  5152               	movf	SetBaud@Parity& (0+255),w,b
 19376  014734  A4D8               	btfss	status,2,c
 19377  014736  D025               	goto	l11492
 19378  014738  D030               	goto	l11494
 19379  01473A                     l11482:
 19380                           
 19381                           ; BSR set to: 1
 19382                           ;UART.c: 364: UARTstringWAIT(" with Odd parity bit\r\n");
 19383  01473A  0EF0               	movlw	high (STR_21+30)
 19384  01473C  0101               	movlb	1	; () banked
 19385  01473E  6F1A               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 19386  014740  0EC8               	movlw	low (STR_21+30)
 19387  014742  0101               	movlb	1	; () banked
 19388  014744  6F19               	movwf	UARTstringWAIT@data& (0+255),b
 19389  014746  ECD5  F0B7         	call	_UARTstringWAIT	;wreg free
 19390                           
 19391                           ;UART.c: 365: break;
 19392  01474A  D02F               	goto	l11496
 19393  01474C                     l11484:
 19394                           
 19395                           ;UART.c: 367: UARTstringWAIT(" with Even parity bit\r\n");
 19396  01474C  0EF0               	movlw	high (STR_22+30)
 19397  01474E  0101               	movlb	1	; () banked
 19398  014750  6F1A               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 19399  014752  0E92               	movlw	low (STR_22+30)
 19400  014754  0101               	movlb	1	; () banked
 19401  014756  6F19               	movwf	UARTstringWAIT@data& (0+255),b
 19402  014758  ECD5  F0B7         	call	_UARTstringWAIT	;wreg free
 19403                           
 19404                           ;UART.c: 368: break;
 19405  01475C  D026               	goto	l11496
 19406  01475E                     l11486:
 19407                           
 19408                           ;UART.c: 370: UARTstringWAIT(" with Mark bit\r\n");
 19409  01475E  0EF1               	movlw	high (STR_23+30)
 19410  014760  0101               	movlb	1	; () banked
 19411  014762  6F1A               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 19412  014764  0EF4               	movlw	low (STR_23+30)
 19413  014766  0101               	movlb	1	; () banked
 19414  014768  6F19               	movwf	UARTstringWAIT@data& (0+255),b
 19415  01476A  ECD5  F0B7         	call	_UARTstringWAIT	;wreg free
 19416                           
 19417                           ;UART.c: 371: break;
 19418  01476E  D01D               	goto	l11496
 19419  014770                     l11488:
 19420                           
 19421                           ;UART.c: 373: UARTstringWAIT(" with Space bit\r\n");
 19422  014770  0EF1               	movlw	high (STR_24+30)
 19423  014772  0101               	movlb	1	; () banked
 19424  014774  6F1A               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 19425  014776  0EC4               	movlw	low (STR_24+30)
 19426  014778  0101               	movlb	1	; () banked
 19427  01477A  6F19               	movwf	UARTstringWAIT@data& (0+255),b
 19428  01477C  ECD5  F0B7         	call	_UARTstringWAIT	;wreg free
 19429                           
 19430                           ;UART.c: 374: break;
 19431  014780  D014               	goto	l11496
 19432  014782                     l11492:
 19433  014782  0101               	movlb	1	; () banked
 19434  014784  5152               	movf	SetBaud@Parity& (0+255),w,b
 19435                           
 19436                           ; Switch size 1, requested type "space"
 19437                           ; Number of cases is 3, Range of values is 1 to 3
 19438                           ; switch strategies available:
 19439                           ; Name         Instructions Cycles
 19440                           ; simple_byte           10     6 (average)
 19441                           ;	Chosen strategy is simple_byte
 19442  014786  0A01               	xorlw	1	; case 1
 19443  014788  B4D8               	btfsc	status,2,c
 19444  01478A  D7D7               	goto	l11482
 19445  01478C  0A03               	xorlw	3	; case 2
 19446  01478E  B4D8               	btfsc	status,2,c
 19447  014790  D7DD               	goto	l11484
 19448  014792  0A01               	xorlw	1	; case 3
 19449  014794  B4D8               	btfsc	status,2,c
 19450  014796  D7E3               	goto	l11486
 19451  014798  D7EB               	goto	l11488
 19452  01479A                     l11494:
 19453                           
 19454                           ; BSR set to: 1
 19455                           ;UART.c: 377: else
 19456                           ;UART.c: 378: {
 19457                           ;UART.c: 379: UARTstring(" with no parity bit\r\n");
 19458  01479A  0EF0               	movlw	high (STR_25+30)
 19459  01479C  0101               	movlb	1	; () banked
 19460  01479E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 19461  0147A0  0EFD               	movlw	low (STR_25+30)
 19462  0147A2  0101               	movlb	1	; () banked
 19463  0147A4  6F19               	movwf	UARTstring@data& (0+255),b
 19464  0147A6  EC36  F0B3         	call	_UARTstring	;wreg free
 19465  0147AA                     l11496:
 19466                           
 19467                           ;UART.c: 380: }
 19468                           ;UART.c: 382: delayUS(10000);
 19469  0147AA  0E10               	movlw	16
 19470  0147AC  0101               	movlb	1	; () banked
 19471  0147AE  6F0E               	movwf	delayUS@US& (0+255),b
 19472  0147B0  0E27               	movlw	39
 19473  0147B2  0101               	movlb	1	; () banked
 19474  0147B4  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 19475  0147B6  0E00               	movlw	0
 19476  0147B8  0101               	movlb	1	; () banked
 19477  0147BA  6F10               	movwf	(delayUS@US+2)& (0+255),b
 19478  0147BC  0E00               	movlw	0
 19479  0147BE  0101               	movlb	1	; () banked
 19480  0147C0  6F11               	movwf	(delayUS@US+3)& (0+255),b
 19481  0147C2  EC10  F0B9         	call	_delayUS	;wreg free
 19482  0147C6  0012               	return	
 19483  0147C8                     __end_of_SetBaud:
 19484                           	opt stack 0
 19485                           tblptru	equ	0xFF8
 19486                           tblptrh	equ	0xFF7
 19487                           tblptrl	equ	0xFF6
 19488                           tablat	equ	0xFF5
 19489                           prodh	equ	0xFF4
 19490                           prodl	equ	0xFF3
 19491                           intcon	equ	0xFF2
 19492                           postinc0	equ	0xFEE
 19493                           wreg	equ	0xFE8
 19494                           indf1	equ	0xFE7
 19495                           postinc1	equ	0xFE6
 19496                           postdec1	equ	0xFE5
 19497                           fsr1h	equ	0xFE2
 19498                           fsr1l	equ	0xFE1
 19499                           indf2	equ	0xFDF
 19500                           postinc2	equ	0xFDE
 19501                           fsr2h	equ	0xFDA
 19502                           fsr2l	equ	0xFD9
 19503                           status	equ	0xFD8
 19504                           
 19505 ;; *************** function _sprintf *****************
 19506 ;; Defined at:
 19507 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 19508 ;; Parameters:    Size  Location     Type
 19509 ;;  sp              2   36[BANK1 ] PTR unsigned char 
 19510 ;;		 -> Command@buf(200), SetBaud@buf(50), 
 19511 ;;  f               2   38[BANK1 ] PTR const unsigned char 
 19512 ;;		 -> STR_317(32), STR_316(35), STR_315(35), STR_284(23), 
 19513 ;;		 -> STR_283(23), STR_225(23), STR_224(23), STR_220(16), 
 19514 ;;		 -> STR_219(36), STR_207(13), STR_206(20), STR_205(17), 
 19515 ;;		 -> STR_204(29), STR_188(15), STR_187(32), STR_169(15), 
 19516 ;;		 -> STR_168(22), STR_28(19), STR_25(52), STR_24(48), 
 19517 ;;		 -> STR_23(47), STR_22(54), STR_21(53), 
 19518 ;; Auto vars:     Size  Location     Type
 19519 ;;  idx             1   58[BANK1 ] unsigned char 
 19520 ;;  _val            4   71[BANK1 ] struct .
 19521 ;;  flag            2   76[BANK1 ] unsigned short 
 19522 ;;  width           2   69[BANK1 ] int 
 19523 ;;  prec            2   67[BANK1 ] int 
 19524 ;;  ap              2   65[BANK1 ] PTR void [1]
 19525 ;;		 -> ?_sprintf(2), 
 19526 ;;  c               1   75[BANK1 ] char 
 19527 ;; Return value:  Size  Location     Type
 19528 ;;                  2   36[BANK1 ] int 
 19529 ;; Registers used:
 19530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19531 ;; Tracked objects:
 19532 ;;		On entry : 0/0
 19533 ;;		On exit  : 0/0
 19534 ;;		Unchanged: 0/0
 19535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19536 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 19537 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 19538 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19539 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0
 19540 ;;Total ram usage:       42 bytes
 19541 ;; Hardware stack levels used:    1
 19542 ;; Hardware stack levels required when called:    7
 19543 ;; This function calls:
 19544 ;;		___lldiv
 19545 ;;		___llmod
 19546 ;;		___wmul
 19547 ;;		_isdigit
 19548 ;; This function is called by:
 19549 ;;		_SetBaud
 19550 ;;		_Command
 19551 ;;		_SprintDate
 19552 ;; This function uses a non-reentrant model
 19553 ;;
 19554                           
 19555                           	psect	text32
 19556  0128D8                     __ptext32:
 19557                           	opt stack 0
 19558  0128D8                     _sprintf:
 19559                           	opt stack 21
 19560                           
 19561                           ;doprnt.c: 494: va_list ap;
 19562                           ;doprnt.c: 499: signed char c;
 19563                           ;doprnt.c: 501: int width;
 19564                           ;doprnt.c: 504: int prec;
 19565                           ;doprnt.c: 508: unsigned short flag;
 19566                           ;doprnt.c: 527: union {
 19567                           ;doprnt.c: 528: unsigned long _val;
 19568                           ;doprnt.c: 529: struct {
 19569                           ;doprnt.c: 530: const char * _cp;
 19570                           ;doprnt.c: 531: unsigned _len;
 19571                           ;doprnt.c: 532: } _str;
 19572                           ;doprnt.c: 533: } _val;
 19573                           ;doprnt.c: 542: *ap = __va_start();
 19574                           
 19575                           ;incstack = 0
 19576  0128D8  0101               	movlb	1	; () banked
 19577  0128DA  0E01               	movlw	high (?_sprintf+4)
 19578  0128DC  0101               	movlb	1	; () banked
 19579  0128DE  6F42               	movwf	(sprintf@ap+1)& (0+255),b
 19580  0128E0  0101               	movlb	1	; () banked
 19581  0128E2  0E28               	movlw	low (?_sprintf+4)
 19582  0128E4  0101               	movlb	1	; () banked
 19583  0128E6  6F41               	movwf	sprintf@ap& (0+255),b
 19584                           
 19585                           ;doprnt.c: 545: while(c = *f++) {
 19586  0128E8  EFD0  F09A         	goto	l10644
 19587  0128EC                     l10292:
 19588                           
 19589                           ; BSR set to: 1
 19590                           ;doprnt.c: 547: if(c != '%')
 19591  0128EC  0101               	movlb	1	; () banked
 19592  0128EE  514B               	movf	sprintf@c& (0+255),w,b
 19593  0128F0  0A25               	xorlw	37
 19594  0128F2  B4D8               	btfsc	status,2,c
 19595  0128F4  D00C               	goto	l10298
 19596                           
 19597                           ; BSR set to: 1
 19598                           ;doprnt.c: 549: {
 19599                           ;doprnt.c: 550: ((*sp++ = (c)));
 19600  0128F6  C124  FFD9         	movff	sprintf@sp,fsr2l
 19601  0128FA  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 19602  0128FE  0101               	movlb	1	; () banked
 19603  012900  C14B  FFDF         	movff	sprintf@c,indf2
 19604                           
 19605                           ; BSR set to: 1
 19606  012904  0101               	movlb	1	; () banked
 19607  012906  4B24               	infsnz	sprintf@sp& (0+255),f,b
 19608  012908  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 19609                           
 19610                           ;doprnt.c: 551: continue;
 19611  01290A  EFD0  F09A         	goto	l10644
 19612  01290E                     l10298:
 19613                           
 19614                           ; BSR set to: 1
 19615                           ;doprnt.c: 552: }
 19616                           ;doprnt.c: 555: width = 0;
 19617  01290E  0E00               	movlw	0
 19618  012910  0101               	movlb	1	; () banked
 19619  012912  6F46               	movwf	(sprintf@width+1)& (0+255),b
 19620  012914  0E00               	movlw	0
 19621  012916  0101               	movlb	1	; () banked
 19622  012918  6F45               	movwf	sprintf@width& (0+255),b
 19623                           
 19624                           ;doprnt.c: 557: flag = 0;
 19625  01291A  0E00               	movlw	0
 19626  01291C  0101               	movlb	1	; () banked
 19627  01291E  6F4D               	movwf	(sprintf@flag+1)& (0+255),b
 19628  012920  0E00               	movlw	0
 19629  012922  0101               	movlb	1	; () banked
 19630  012924  6F4C               	movwf	sprintf@flag& (0+255),b
 19631  012926  D00E               	goto	l10310
 19632  012928                     l10300:
 19633                           
 19634                           ; BSR set to: 1
 19635                           ;doprnt.c: 563: flag |= 0x08;
 19636  012928  0101               	movlb	1	; () banked
 19637  01292A  874C               	bsf	sprintf@flag& (0+255),3,b
 19638  01292C  D008               	goto	L19
 19639  01292E                     l10302:
 19640                           
 19641                           ; BSR set to: 1
 19642                           ;doprnt.c: 570: flag |= 0x01;
 19643  01292E  0101               	movlb	1	; () banked
 19644  012930  814C               	bsf	sprintf@flag& (0+255),0,b
 19645  012932  D005               	goto	L19
 19646  012934                     l10304:
 19647                           
 19648                           ; BSR set to: 1
 19649                           ;doprnt.c: 583: flag |= 0x800;
 19650  012934  0101               	movlb	1	; () banked
 19651  012936  874D               	bsf	(sprintf@flag+1)& (0+255),3,b
 19652  012938  D002               	goto	L19
 19653  01293A                     l10306:
 19654                           
 19655                           ; BSR set to: 1
 19656                           ;doprnt.c: 589: flag |= 0x04;
 19657  01293A  0101               	movlb	1	; () banked
 19658  01293C  854C               	bsf	sprintf@flag& (0+255),2,b
 19659  01293E                     L19:
 19660                           
 19661                           ;doprnt.c: 590: f++;
 19662  01293E  0101               	movlb	1	; () banked
 19663  012940  4B26               	infsnz	sprintf@f& (0+255),f,b
 19664  012942  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 19665  012944                     l10310:
 19666                           
 19667                           ; BSR set to: 1
 19668  012944  0101               	movlb	1	; () banked
 19669  012946  C126  FFF6         	movff	sprintf@f,tblptrl
 19670  01294A  0101               	movlb	1	; () banked
 19671  01294C  C127  FFF7         	movff	sprintf@f+1,tblptrh
 19672  012950                     	if	0	;tblptru may be non-zero
 19673  012950                     	endif
 19674  012950                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19675  012950  0E00               	movlw	low (__mediumconst shr (0+16))
 19676  012952  6EF8               	movwf	tblptru,c
 19677  012954                     	endif
 19678  012954  0008               	tblrd		*
 19679  012956  50F5               	movf	tablat,w,c
 19680                           
 19681                           ; Switch size 1, requested type "space"
 19682                           ; Number of cases is 4, Range of values is 32 to 48
 19683                           ; switch strategies available:
 19684                           ; Name         Instructions Cycles
 19685                           ; simple_byte           13     7 (average)
 19686                           ;	Chosen strategy is simple_byte
 19687  012958  0A20               	xorlw	32	; case 32
 19688  01295A  B4D8               	btfsc	status,2,c
 19689  01295C  D7E8               	goto	l10302
 19690  01295E  0A03               	xorlw	3	; case 35
 19691  012960  B4D8               	btfsc	status,2,c
 19692  012962  D7E8               	goto	l10304
 19693  012964  0A0E               	xorlw	14	; case 45
 19694  012966  B4D8               	btfsc	status,2,c
 19695  012968  D7DF               	goto	l10300
 19696  01296A  0A1D               	xorlw	29	; case 48
 19697  01296C  B4D8               	btfsc	status,2,c
 19698  01296E  D7E5               	goto	l10306
 19699                           
 19700                           ; BSR set to: 1
 19701                           ;doprnt.c: 602: if(flag & 0x08)
 19702                           
 19703                           ; BSR set to: 1
 19704                           ;doprnt.c: 595: }
 19705                           
 19706                           ; BSR set to: 1
 19707                           ;doprnt.c: 594: break;
 19708  012970  0101               	movlb	1	; () banked
 19709  012972  A74C               	btfss	sprintf@flag& (0+255),3,b
 19710  012974  D002               	goto	l10314
 19711                           
 19712                           ; BSR set to: 1
 19713                           ;doprnt.c: 603: flag &= ~0x04;
 19714  012976  0101               	movlb	1	; () banked
 19715  012978  954C               	bcf	sprintf@flag& (0+255),2,b
 19716  01297A                     l10314:
 19717                           
 19718                           ; BSR set to: 1
 19719                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 19720  01297A  0101               	movlb	1	; () banked
 19721  01297C  C126  FFF6         	movff	sprintf@f,tblptrl
 19722  012980  0101               	movlb	1	; () banked
 19723  012982  C127  FFF7         	movff	sprintf@f+1,tblptrh
 19724  012986                     	if	0	;tblptru may be non-zero
 19725  012986                     	endif
 19726  012986                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19727  012986  0E00               	movlw	low (__mediumconst shr (0+16))
 19728  012988  6EF8               	movwf	tblptru,c
 19729  01298A                     	endif
 19730  01298A  0008               	tblrd		*
 19731  01298C  50F5               	movf	tablat,w,c
 19732  01298E  EC82  F0BD         	call	_isdigit
 19733  012992  A0D8               	btfss	status,0,c
 19734  012994  D04C               	goto	l10326
 19735                           
 19736                           ;doprnt.c: 607: width = 0;
 19737  012996  0E00               	movlw	0
 19738  012998  0101               	movlb	1	; () banked
 19739  01299A  6F46               	movwf	(sprintf@width+1)& (0+255),b
 19740  01299C  0E00               	movlw	0
 19741  01299E  0101               	movlb	1	; () banked
 19742  0129A0  6F45               	movwf	sprintf@width& (0+255),b
 19743  0129A2                     l10318:
 19744                           
 19745                           ;doprnt.c: 609: width *= 10;
 19746  0129A2  C145  F10E         	movff	sprintf@width,___wmul@multiplier
 19747  0129A6  C146  F10F         	movff	sprintf@width+1,___wmul@multiplier+1
 19748  0129AA  0E00               	movlw	0
 19749  0129AC  0101               	movlb	1	; () banked
 19750  0129AE  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19751  0129B0  0E0A               	movlw	10
 19752  0129B2  0101               	movlb	1	; () banked
 19753  0129B4  6F10               	movwf	___wmul@multiplicand& (0+255),b
 19754  0129B6  ECBF  F0BC         	call	___wmul	;wreg free
 19755  0129BA  0101               	movlb	1	; () banked
 19756  0129BC  C10E  F145         	movff	?___wmul,sprintf@width
 19757  0129C0  0101               	movlb	1	; () banked
 19758  0129C2  C10F  F146         	movff	?___wmul+1,sprintf@width+1
 19759                           
 19760                           ; BSR set to: 1
 19761                           ;doprnt.c: 610: width += *f++ - '0';
 19762  0129C6  0ED0               	movlw	208
 19763  0129C8  0101               	movlb	1	; () banked
 19764  0129CA  6F34               	movwf	??_sprintf& (0+255),b
 19765  0129CC  0EFF               	movlw	255
 19766  0129CE  6F35               	movwf	(??_sprintf+1)& (0+255),b
 19767  0129D0  0101               	movlb	1	; () banked
 19768  0129D2  C126  FFF6         	movff	sprintf@f,tblptrl
 19769  0129D6  0101               	movlb	1	; () banked
 19770  0129D8  C127  FFF7         	movff	sprintf@f+1,tblptrh
 19771  0129DC                     	if	0	;tblptru may be non-zero
 19772  0129DC                     	endif
 19773  0129DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19774  0129DC  0E00               	movlw	low (__mediumconst shr (0+16))
 19775  0129DE  6EF8               	movwf	tblptru,c
 19776  0129E0                     	endif
 19777  0129E0  0008               	tblrd		*
 19778  0129E2  50F5               	movf	tablat,w,c
 19779  0129E4  0101               	movlb	1	; () banked
 19780  0129E6  6F36               	movwf	(??_sprintf+2)& (0+255),b
 19781  0129E8  6B37               	clrf	(??_sprintf+3)& (0+255),b
 19782  0129EA  0101               	movlb	1	; () banked
 19783  0129EC  5134               	movf	??_sprintf& (0+255),w,b
 19784  0129EE  0101               	movlb	1	; () banked
 19785  0129F0  2736               	addwf	(??_sprintf+2)& (0+255),f,b
 19786  0129F2  0101               	movlb	1	; () banked
 19787  0129F4  5135               	movf	(??_sprintf+1)& (0+255),w,b
 19788  0129F6  0101               	movlb	1	; () banked
 19789  0129F8  2337               	addwfc	(??_sprintf+3)& (0+255),f,b
 19790  0129FA  0101               	movlb	1	; () banked
 19791  0129FC  5136               	movf	(??_sprintf+2)& (0+255),w,b
 19792  0129FE  0101               	movlb	1	; () banked
 19793  012A00  2745               	addwf	sprintf@width& (0+255),f,b
 19794  012A02  0101               	movlb	1	; () banked
 19795  012A04  5137               	movf	(??_sprintf+3)& (0+255),w,b
 19796  012A06  0101               	movlb	1	; () banked
 19797  012A08  2346               	addwfc	(sprintf@width+1)& (0+255),f,b
 19798                           
 19799                           ; BSR set to: 1
 19800  012A0A  0101               	movlb	1	; () banked
 19801  012A0C  4B26               	infsnz	sprintf@f& (0+255),f,b
 19802  012A0E  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 19803                           
 19804                           ; BSR set to: 1
 19805                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 19806  012A10  0101               	movlb	1	; () banked
 19807  012A12  C126  FFF6         	movff	sprintf@f,tblptrl
 19808  012A16  0101               	movlb	1	; () banked
 19809  012A18  C127  FFF7         	movff	sprintf@f+1,tblptrh
 19810  012A1C                     	if	0	;tblptru may be non-zero
 19811  012A1C                     	endif
 19812  012A1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19813  012A1C  0E00               	movlw	low (__mediumconst shr (0+16))
 19814  012A1E  6EF8               	movwf	tblptru,c
 19815  012A20                     	endif
 19816  012A20  0008               	tblrd		*
 19817  012A22  50F5               	movf	tablat,w,c
 19818  012A24  EC82  F0BD         	call	_isdigit
 19819  012A28  A0D8               	btfss	status,0,c
 19820  012A2A  D021               	goto	l10334
 19821  012A2C  D7BA               	goto	l10318
 19822  012A2E                     l10326:
 19823  012A2E  0101               	movlb	1	; () banked
 19824  012A30  C126  FFF6         	movff	sprintf@f,tblptrl
 19825  012A34  0101               	movlb	1	; () banked
 19826  012A36  C127  FFF7         	movff	sprintf@f+1,tblptrh
 19827  012A3A                     	if	0	;tblptru may be non-zero
 19828  012A3A                     	endif
 19829  012A3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19830  012A3A  0E00               	movlw	low (__mediumconst shr (0+16))
 19831  012A3C  6EF8               	movwf	tblptru,c
 19832  012A3E                     	endif
 19833  012A3E  0008               	tblrd		*
 19834  012A40  50F5               	movf	tablat,w,c
 19835  012A42  0A2A               	xorlw	42
 19836  012A44  A4D8               	btfss	status,2,c
 19837  012A46  D013               	goto	l10334
 19838                           
 19839                           ; BSR set to: 1
 19840                           ;doprnt.c: 614: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 19841  012A48  C141  FFD9         	movff	sprintf@ap,fsr2l
 19842  012A4C  C142  FFDA         	movff	sprintf@ap+1,fsr2h
 19843  012A50  0101               	movlb	1	; () banked
 19844  012A52  CFDE F145          	movff	postinc2,sprintf@width
 19845  012A56  0101               	movlb	1	; () banked
 19846  012A58  CFDD F146          	movff	postdec2,sprintf@width+1
 19847                           
 19848                           ; BSR set to: 1
 19849  012A5C  0E02               	movlw	2
 19850  012A5E  0101               	movlb	1	; () banked
 19851  012A60  2741               	addwf	sprintf@ap& (0+255),f,b
 19852  012A62  0E00               	movlw	0
 19853  012A64  0101               	movlb	1	; () banked
 19854  012A66  2342               	addwfc	(sprintf@ap+1)& (0+255),f,b
 19855                           
 19856                           ; BSR set to: 1
 19857                           ;doprnt.c: 615: f++;
 19858  012A68  0101               	movlb	1	; () banked
 19859  012A6A  4B26               	infsnz	sprintf@f& (0+255),f,b
 19860  012A6C  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 19861  012A6E                     l10334:
 19862                           
 19863                           ;doprnt.c: 617: }
 19864                           ;doprnt.c: 620: if(*f == '.') {
 19865  012A6E  0101               	movlb	1	; () banked
 19866  012A70  C126  FFF6         	movff	sprintf@f,tblptrl
 19867  012A74  0101               	movlb	1	; () banked
 19868  012A76  C127  FFF7         	movff	sprintf@f+1,tblptrh
 19869  012A7A                     	if	0	;tblptru may be non-zero
 19870  012A7A                     	endif
 19871  012A7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19872  012A7A  0E00               	movlw	low (__mediumconst shr (0+16))
 19873  012A7C  6EF8               	movwf	tblptru,c
 19874  012A7E                     	endif
 19875  012A7E  0008               	tblrd		*
 19876  012A80  50F5               	movf	tablat,w,c
 19877  012A82  0A2E               	xorlw	46
 19878  012A84  A4D8               	btfss	status,2,c
 19879  012A86  D064               	goto	l10354
 19880                           
 19881                           ; BSR set to: 1
 19882                           ;doprnt.c: 621: flag |= 0x4000;
 19883  012A88  0101               	movlb	1	; () banked
 19884  012A8A  8D4D               	bsf	(sprintf@flag+1)& (0+255),6,b
 19885                           
 19886                           ;doprnt.c: 622: f++;
 19887  012A8C  0101               	movlb	1	; () banked
 19888  012A8E  4B26               	infsnz	sprintf@f& (0+255),f,b
 19889  012A90  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 19890                           
 19891                           ; BSR set to: 1
 19892                           ;doprnt.c: 624: if(*f == '*') {
 19893  012A92  0101               	movlb	1	; () banked
 19894  012A94  C126  FFF6         	movff	sprintf@f,tblptrl
 19895  012A98  0101               	movlb	1	; () banked
 19896  012A9A  C127  FFF7         	movff	sprintf@f+1,tblptrh
 19897  012A9E                     	if	0	;tblptru may be non-zero
 19898  012A9E                     	endif
 19899  012A9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19900  012A9E  0E00               	movlw	low (__mediumconst shr (0+16))
 19901  012AA0  6EF8               	movwf	tblptru,c
 19902  012AA2                     	endif
 19903  012AA2  0008               	tblrd		*
 19904  012AA4  50F5               	movf	tablat,w,c
 19905  012AA6  0A2A               	xorlw	42
 19906  012AA8  A4D8               	btfss	status,2,c
 19907  012AAA  D014               	goto	l10346
 19908                           
 19909                           ; BSR set to: 1
 19910                           ;doprnt.c: 625: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 19911  012AAC  C141  FFD9         	movff	sprintf@ap,fsr2l
 19912  012AB0  C142  FFDA         	movff	sprintf@ap+1,fsr2h
 19913  012AB4  0101               	movlb	1	; () banked
 19914  012AB6  CFDE F143          	movff	postinc2,sprintf@prec
 19915  012ABA  0101               	movlb	1	; () banked
 19916  012ABC  CFDD F144          	movff	postdec2,sprintf@prec+1
 19917                           
 19918                           ; BSR set to: 1
 19919  012AC0  0E02               	movlw	2
 19920  012AC2  0101               	movlb	1	; () banked
 19921  012AC4  2741               	addwf	sprintf@ap& (0+255),f,b
 19922  012AC6  0E00               	movlw	0
 19923  012AC8  0101               	movlb	1	; () banked
 19924  012ACA  2342               	addwfc	(sprintf@ap+1)& (0+255),f,b
 19925                           
 19926                           ; BSR set to: 1
 19927                           ;doprnt.c: 626: f++;
 19928  012ACC  0101               	movlb	1	; () banked
 19929  012ACE  4B26               	infsnz	sprintf@f& (0+255),f,b
 19930  012AD0  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 19931                           
 19932                           ;doprnt.c: 627: } else
 19933  012AD2  D0E9               	goto	l10412
 19934  012AD4                     l10346:
 19935                           
 19936                           ; BSR set to: 1
 19937                           ;doprnt.c: 629: {
 19938                           ;doprnt.c: 630: prec = 0;
 19939  012AD4  0E00               	movlw	0
 19940  012AD6  0101               	movlb	1	; () banked
 19941  012AD8  6F44               	movwf	(sprintf@prec+1)& (0+255),b
 19942  012ADA  0E00               	movlw	0
 19943  012ADC  0101               	movlb	1	; () banked
 19944  012ADE  6F43               	movwf	sprintf@prec& (0+255),b
 19945                           
 19946                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 19947  012AE0  D028               	goto	l10352
 19948  012AE2                     l10348:
 19949                           
 19950                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 19951  012AE2  C143  F10E         	movff	sprintf@prec,___wmul@multiplier
 19952  012AE6  C144  F10F         	movff	sprintf@prec+1,___wmul@multiplier+1
 19953  012AEA  0E00               	movlw	0
 19954  012AEC  0101               	movlb	1	; () banked
 19955  012AEE  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19956  012AF0  0E0A               	movlw	10
 19957  012AF2  0101               	movlb	1	; () banked
 19958  012AF4  6F10               	movwf	___wmul@multiplicand& (0+255),b
 19959  012AF6  ECBF  F0BC         	call	___wmul	;wreg free
 19960  012AFA  0101               	movlb	1	; () banked
 19961  012AFC  C126  FFF6         	movff	sprintf@f,tblptrl
 19962  012B00  0101               	movlb	1	; () banked
 19963  012B02  C127  FFF7         	movff	sprintf@f+1,tblptrh
 19964  012B06                     	if	0	;tblptru may be non-zero
 19965  012B06                     	endif
 19966  012B06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19967  012B06  0E00               	movlw	low (__mediumconst shr (0+16))
 19968  012B08  6EF8               	movwf	tblptru,c
 19969  012B0A                     	endif
 19970  012B0A  0008               	tblrd		*
 19971  012B0C  50F5               	movf	tablat,w,c
 19972  012B0E  0101               	movlb	1	; () banked
 19973  012B10  270E               	addwf	?___wmul& (0+255),f,b
 19974  012B12  0E00               	movlw	0
 19975  012B14  0101               	movlb	1	; () banked
 19976  012B16  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 19977  012B18  0ED0               	movlw	208
 19978  012B1A  0101               	movlb	1	; () banked
 19979  012B1C  250E               	addwf	?___wmul& (0+255),w,b
 19980  012B1E  0101               	movlb	1	; () banked
 19981  012B20  6F43               	movwf	sprintf@prec& (0+255),b
 19982  012B22  0EFF               	movlw	255
 19983  012B24  0101               	movlb	1	; () banked
 19984  012B26  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 19985  012B28  0101               	movlb	1	; () banked
 19986  012B2A  6F44               	movwf	(sprintf@prec+1)& (0+255),b
 19987                           
 19988                           ; BSR set to: 1
 19989  012B2C  0101               	movlb	1	; () banked
 19990  012B2E  4B26               	infsnz	sprintf@f& (0+255),f,b
 19991  012B30  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 19992  012B32                     l10352:
 19993                           
 19994                           ; BSR set to: 1
 19995  012B32  0101               	movlb	1	; () banked
 19996  012B34  C126  FFF6         	movff	sprintf@f,tblptrl
 19997  012B38  0101               	movlb	1	; () banked
 19998  012B3A  C127  FFF7         	movff	sprintf@f+1,tblptrh
 19999  012B3E                     	if	0	;tblptru may be non-zero
 20000  012B3E                     	endif
 20001  012B3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20002  012B3E  0E00               	movlw	low (__mediumconst shr (0+16))
 20003  012B40  6EF8               	movwf	tblptru,c
 20004  012B42                     	endif
 20005  012B42  0008               	tblrd		*
 20006  012B44  50F5               	movf	tablat,w,c
 20007  012B46  EC82  F0BD         	call	_isdigit
 20008  012B4A  A0D8               	btfss	status,0,c
 20009  012B4C  D0AC               	goto	l10412
 20010  012B4E  D7C9               	goto	l10348
 20011  012B50                     l10354:
 20012                           
 20013                           ;doprnt.c: 635: prec = 0;
 20014  012B50  0E00               	movlw	0
 20015  012B52  0101               	movlb	1	; () banked
 20016  012B54  6F44               	movwf	(sprintf@prec+1)& (0+255),b
 20017  012B56  0E00               	movlw	0
 20018  012B58  0101               	movlb	1	; () banked
 20019  012B5A  6F43               	movwf	sprintf@prec& (0+255),b
 20020  012B5C  D0A4               	goto	l10412
 20021  012B5E                     l10356:
 20022                           
 20023                           ; BSR set to: 1
 20024                           ;doprnt.c: 652: flag |= 0x10;
 20025  012B5E  0101               	movlb	1	; () banked
 20026  012B60  894C               	bsf	sprintf@flag& (0+255),4,b
 20027                           
 20028                           ;doprnt.c: 653: goto loop;
 20029  012B62  D0A1               	goto	l10412
 20030  012B64                     l10358:
 20031                           
 20032                           ; BSR set to: 1
 20033                           ;doprnt.c: 700: flag |= 0x40;
 20034  012B64  0101               	movlb	1	; () banked
 20035  012B66  8D4C               	bsf	sprintf@flag& (0+255),6,b
 20036                           
 20037                           ;doprnt.c: 702: break;
 20038  012B68  D0CC               	goto	l10414
 20039  012B6A                     l10360:
 20040                           
 20041                           ; BSR set to: 1
 20042                           ;doprnt.c: 723: flag |= 0x20;
 20043  012B6A  0101               	movlb	1	; () banked
 20044  012B6C  8B4C               	bsf	sprintf@flag& (0+255),5,b
 20045  012B6E                     l1495:
 20046                           
 20047                           ; BSR set to: 1
 20048                           ;doprnt.c: 730: flag |= 0x80;
 20049  012B6E  0101               	movlb	1	; () banked
 20050  012B70  8F4C               	bsf	sprintf@flag& (0+255),7,b
 20051                           
 20052                           ;doprnt.c: 732: break;
 20053  012B72  D0C7               	goto	l10414
 20054  012B74                     l10362:
 20055                           
 20056                           ; BSR set to: 1
 20057                           ;doprnt.c: 762: if(prec && prec < _val._str._len)
 20058  012B74  0101               	movlb	1	; () banked
 20059  012B76  5144               	movf	(sprintf@prec+1)& (0+255),w,b
 20060  012B78  1143               	iorwf	sprintf@prec& (0+255),w,b
 20061  012B7A  B4D8               	btfsc	status,2,c
 20062  012B7C  D00E               	goto	l10368
 20063                           
 20064                           ; BSR set to: 1
 20065  012B7E  0101               	movlb	1	; () banked
 20066  012B80  5149               	movf	(sprintf@_val+2)& (0+255),w,b
 20067  012B82  0101               	movlb	1	; () banked
 20068  012B84  5D43               	subwf	sprintf@prec& (0+255),w,b
 20069  012B86  0101               	movlb	1	; () banked
 20070  012B88  514A               	movf	(sprintf@_val+3)& (0+255),w,b
 20071  012B8A  0101               	movlb	1	; () banked
 20072  012B8C  5944               	subwfb	(sprintf@prec+1)& (0+255),w,b
 20073  012B8E  B0D8               	btfsc	status,0,c
 20074  012B90  D004               	goto	l10368
 20075                           
 20076                           ; BSR set to: 1
 20077                           ;doprnt.c: 763: _val._str._len = prec;
 20078  012B92  C143  F149         	movff	sprintf@prec,sprintf@_val+2
 20079  012B96  C144  F14A         	movff	sprintf@prec+1,sprintf@_val+3
 20080  012B9A                     l10368:
 20081                           
 20082                           ; BSR set to: 1
 20083                           ;doprnt.c: 766: if(width > _val._str._len)
 20084  012B9A  0101               	movlb	1	; () banked
 20085  012B9C  5145               	movf	sprintf@width& (0+255),w,b
 20086  012B9E  0101               	movlb	1	; () banked
 20087  012BA0  5D49               	subwf	(sprintf@_val+2)& (0+255),w,b
 20088  012BA2  0101               	movlb	1	; () banked
 20089  012BA4  5146               	movf	(sprintf@width+1)& (0+255),w,b
 20090  012BA6  0101               	movlb	1	; () banked
 20091  012BA8  594A               	subwfb	(sprintf@_val+3)& (0+255),w,b
 20092  012BAA  B0D8               	btfsc	status,0,c
 20093  012BAC  D00A               	goto	l10372
 20094                           
 20095                           ; BSR set to: 1
 20096                           ;doprnt.c: 767: width -= _val._str._len;
 20097  012BAE  0101               	movlb	1	; () banked
 20098  012BB0  EE21  F049         	lfsr	2,sprintf@_val+2
 20099  012BB4  50DE               	movf	postinc2,w,c
 20100  012BB6  0101               	movlb	1	; () banked
 20101  012BB8  5F45               	subwf	sprintf@width& (0+255),f,b
 20102  012BBA  50DD               	movf	postdec2,w,c
 20103  012BBC  0101               	movlb	1	; () banked
 20104  012BBE  5B46               	subwfb	(sprintf@width+1)& (0+255),f,b
 20105  012BC0  D006               	goto	l10374
 20106  012BC2                     l10372:
 20107                           
 20108                           ; BSR set to: 1
 20109                           ;doprnt.c: 768: else
 20110                           ;doprnt.c: 769: width = 0;
 20111  012BC2  0E00               	movlw	0
 20112  012BC4  0101               	movlb	1	; () banked
 20113  012BC6  6F46               	movwf	(sprintf@width+1)& (0+255),b
 20114  012BC8  0E00               	movlw	0
 20115  012BCA  0101               	movlb	1	; () banked
 20116  012BCC  6F45               	movwf	sprintf@width& (0+255),b
 20117  012BCE                     l10374:
 20118                           
 20119                           ; BSR set to: 1
 20120                           ;doprnt.c: 771: if(!(flag & 0x08))
 20121  012BCE  0101               	movlb	1	; () banked
 20122  012BD0  A74C               	btfss	sprintf@flag& (0+255),3,b
 20123  012BD2  D00A               	goto	l10382
 20124  012BD4  D024               	goto	l10390
 20125  012BD6                     l10378:
 20126                           
 20127                           ; BSR set to: 1
 20128                           ;doprnt.c: 774: ((*sp++ = (' ')));
 20129  012BD6  C124  FFD9         	movff	sprintf@sp,fsr2l
 20130  012BDA  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 20131  012BDE  0E20               	movlw	32
 20132  012BE0  6EDF               	movwf	indf2,c
 20133                           
 20134                           ; BSR set to: 1
 20135  012BE2  0101               	movlb	1	; () banked
 20136  012BE4  4B24               	infsnz	sprintf@sp& (0+255),f,b
 20137  012BE6  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 20138  012BE8                     l10382:
 20139                           
 20140                           ; BSR set to: 1
 20141  012BE8  0101               	movlb	1	; () banked
 20142  012BEA  0745               	decf	sprintf@width& (0+255),f,b
 20143  012BEC  A0D8               	btfss	status,0,c
 20144  012BEE  0746               	decf	(sprintf@width+1)& (0+255),f,b
 20145  012BF0  0101               	movlb	1	; () banked
 20146  012BF2  2945               	incf	sprintf@width& (0+255),w,b
 20147  012BF4  B4D8               	btfsc	status,2,c
 20148  012BF6  2946               	incf	(sprintf@width+1)& (0+255),w,b
 20149  012BF8  B4D8               	btfsc	status,2,c
 20150  012BFA  D011               	goto	l10390
 20151  012BFC  D7EC               	goto	l10378
 20152  012BFE                     l10384:
 20153                           
 20154                           ; BSR set to: 1
 20155                           ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)));
 20156  012BFE  C147  FFD9         	movff	sprintf@_val,fsr2l
 20157  012C02  C148  FFDA         	movff	sprintf@_val+1,fsr2h
 20158  012C06  C124  FFE1         	movff	sprintf@sp,fsr1l
 20159  012C0A  C125  FFE2         	movff	sprintf@sp+1,fsr1h
 20160  012C0E  CFDF FFE7          	movff	indf2,indf1
 20161                           
 20162                           ; BSR set to: 1
 20163  012C12  0101               	movlb	1	; () banked
 20164  012C14  4B47               	infsnz	sprintf@_val& (0+255),f,b
 20165  012C16  2B48               	incf	(sprintf@_val+1)& (0+255),f,b
 20166                           
 20167                           ; BSR set to: 1
 20168  012C18  0101               	movlb	1	; () banked
 20169  012C1A  4B24               	infsnz	sprintf@sp& (0+255),f,b
 20170  012C1C  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 20171  012C1E                     l10390:
 20172                           
 20173                           ; BSR set to: 1
 20174  012C1E  0101               	movlb	1	; () banked
 20175  012C20  0749               	decf	(sprintf@_val+2)& (0+255),f,b
 20176  012C22  A0D8               	btfss	status,0,c
 20177  012C24  074A               	decf	(sprintf@_val+3)& (0+255),f,b
 20178  012C26  0101               	movlb	1	; () banked
 20179  012C28  2949               	incf	(sprintf@_val+2)& (0+255),w,b
 20180  012C2A  B4D8               	btfsc	status,2,c
 20181  012C2C  294A               	incf	(sprintf@_val+3)& (0+255),w,b
 20182  012C2E  A4D8               	btfss	status,2,c
 20183  012C30  D7E6               	goto	l10384
 20184                           
 20185                           ; BSR set to: 1
 20186                           ;doprnt.c: 779: if(flag & 0x08)
 20187  012C32  0101               	movlb	1	; () banked
 20188  012C34  B74C               	btfsc	sprintf@flag& (0+255),3,b
 20189  012C36  D00B               	goto	l10398
 20190  012C38  EFD0  F09A         	goto	l10644
 20191  012C3C                     l10394:
 20192                           
 20193                           ; BSR set to: 1
 20194                           ;doprnt.c: 781: ((*sp++ = (' ')));
 20195  012C3C  C124  FFD9         	movff	sprintf@sp,fsr2l
 20196  012C40  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 20197  012C44  0E20               	movlw	32
 20198  012C46  6EDF               	movwf	indf2,c
 20199                           
 20200                           ; BSR set to: 1
 20201  012C48  0101               	movlb	1	; () banked
 20202  012C4A  4B24               	infsnz	sprintf@sp& (0+255),f,b
 20203  012C4C  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 20204  012C4E                     l10398:
 20205                           
 20206                           ; BSR set to: 1
 20207  012C4E  0101               	movlb	1	; () banked
 20208  012C50  0745               	decf	sprintf@width& (0+255),f,b
 20209  012C52  A0D8               	btfss	status,0,c
 20210  012C54  0746               	decf	(sprintf@width+1)& (0+255),f,b
 20211  012C56  0101               	movlb	1	; () banked
 20212  012C58  2945               	incf	sprintf@width& (0+255),w,b
 20213  012C5A  B4D8               	btfsc	status,2,c
 20214  012C5C  2946               	incf	(sprintf@width+1)& (0+255),w,b
 20215  012C5E  B4D8               	btfsc	status,2,c
 20216  012C60  EFD0  F09A         	goto	l10644
 20217  012C64  D7EB               	goto	l10394
 20218  012C66                     l10400:
 20219                           
 20220                           ; BSR set to: 1
 20221                           ;doprnt.c: 808: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 20222  012C66  C141  FFD9         	movff	sprintf@ap,fsr2l
 20223  012C6A  C142  FFDA         	movff	sprintf@ap+1,fsr2h
 20224  012C6E  50DF               	movf	indf2,w,c
 20225  012C70  0101               	movlb	1	; () banked
 20226  012C72  6F4B               	movwf	sprintf@c& (0+255),b
 20227                           
 20228                           ; BSR set to: 1
 20229  012C74  0E02               	movlw	2
 20230  012C76  0101               	movlb	1	; () banked
 20231  012C78  2741               	addwf	sprintf@ap& (0+255),f,b
 20232  012C7A  0E00               	movlw	0
 20233  012C7C  0101               	movlb	1	; () banked
 20234  012C7E  2342               	addwfc	(sprintf@ap+1)& (0+255),f,b
 20235  012C80                     l10404:
 20236                           
 20237                           ; BSR set to: 1
 20238                           ;doprnt.c: 814: _val._str._cp = (char *)&c;
 20239  012C80  0101               	movlb	1	; () banked
 20240  012C82  0E01               	movlw	high sprintf@c
 20241  012C84  0101               	movlb	1	; () banked
 20242  012C86  6F48               	movwf	(sprintf@_val+1)& (0+255),b
 20243  012C88  0101               	movlb	1	; () banked
 20244  012C8A  0E4B               	movlw	low sprintf@c
 20245  012C8C  0101               	movlb	1	; () banked
 20246  012C8E  6F47               	movwf	sprintf@_val& (0+255),b
 20247                           
 20248                           ; BSR set to: 1
 20249                           ;doprnt.c: 815: _val._str._len = 1;
 20250  012C90  0E00               	movlw	0
 20251  012C92  0101               	movlb	1	; () banked
 20252  012C94  6F4A               	movwf	(sprintf@_val+3)& (0+255),b
 20253  012C96  0E01               	movlw	1
 20254  012C98  0101               	movlb	1	; () banked
 20255  012C9A  6F49               	movwf	(sprintf@_val+2)& (0+255),b
 20256                           
 20257                           ;doprnt.c: 816: goto dostring;
 20258  012C9C  D76B               	goto	l10362
 20259  012C9E                     l10408:
 20260                           
 20261                           ; BSR set to: 1
 20262                           ;doprnt.c: 827: flag |= 0xC0;
 20263  012C9E  0EC0               	movlw	192
 20264  012CA0  0101               	movlb	1	; () banked
 20265  012CA2  134C               	iorwf	sprintf@flag& (0+255),f,b
 20266                           
 20267                           ;doprnt.c: 828: break;
 20268  012CA4  D02E               	goto	l10414
 20269  012CA6                     l10412:
 20270  012CA6  0101               	movlb	1	; () banked
 20271  012CA8  C126  FFF6         	movff	sprintf@f,tblptrl
 20272  012CAC  0101               	movlb	1	; () banked
 20273  012CAE  C127  FFF7         	movff	sprintf@f+1,tblptrh
 20274  012CB2  0101               	movlb	1	; () banked
 20275  012CB4  4B26               	infsnz	sprintf@f& (0+255),f,b
 20276  012CB6  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 20277  012CB8                     	if	0	;tblptru may be non-zero
 20278  012CB8                     	endif
 20279  012CB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20280  012CB8  0E00               	movlw	low (__mediumconst shr (0+16))
 20281  012CBA  6EF8               	movwf	tblptru,c
 20282  012CBC                     	endif
 20283  012CBC  0008               	tblrd		*
 20284  012CBE  0101               	movlb	1	; () banked
 20285  012CC0  CFF5 F14B          	movff	tablat,sprintf@c
 20286  012CC4  0101               	movlb	1	; () banked
 20287  012CC6  514B               	movf	sprintf@c& (0+255),w,b
 20288                           
 20289                           ; Switch size 1, requested type "space"
 20290                           ; Number of cases is 9, Range of values is 0 to 120
 20291                           ; switch strategies available:
 20292                           ; Name         Instructions Cycles
 20293                           ; simple_byte           28    15 (average)
 20294                           ;	Chosen strategy is simple_byte
 20295  012CC8  0A00               	xorlw	0	; case 0
 20296  012CCA  B4D8               	btfsc	status,2,c
 20297  012CCC  EFE3  F09A         	goto	l10646
 20298  012CD0  0A58               	xorlw	88	; case 88
 20299  012CD2  B4D8               	btfsc	status,2,c
 20300  012CD4  D74A               	goto	l10360
 20301  012CD6  0A3B               	xorlw	59	; case 99
 20302  012CD8  B4D8               	btfsc	status,2,c
 20303  012CDA  D7C5               	goto	l10400
 20304  012CDC  0A07               	xorlw	7	; case 100
 20305  012CDE  B4D8               	btfsc	status,2,c
 20306  012CE0  D010               	goto	l10414
 20307  012CE2  0A0D               	xorlw	13	; case 105
 20308  012CE4  B4D8               	btfsc	status,2,c
 20309  012CE6  D00D               	goto	l10414
 20310  012CE8  0A05               	xorlw	5	; case 108
 20311  012CEA  B4D8               	btfsc	status,2,c
 20312  012CEC  D738               	goto	l10356
 20313  012CEE  0A03               	xorlw	3	; case 111
 20314  012CF0  B4D8               	btfsc	status,2,c
 20315  012CF2  D738               	goto	l10358
 20316  012CF4  0A1A               	xorlw	26	; case 117
 20317  012CF6  B4D8               	btfsc	status,2,c
 20318  012CF8  D7D2               	goto	l10408
 20319  012CFA  0A0D               	xorlw	13	; case 120
 20320  012CFC  B4D8               	btfsc	status,2,c
 20321  012CFE  D737               	goto	l1495
 20322  012D00  D7BF               	goto	l10404
 20323  012D02                     l10414:
 20324                           
 20325                           ; BSR set to: 1
 20326                           ;doprnt.c: 1260: if((flag & (0xC0)) == 0x00)
 20327  012D02  0EC0               	movlw	192
 20328  012D04  0101               	movlb	1	; () banked
 20329  012D06  154C               	andwf	sprintf@flag& (0+255),w,b
 20330  012D08  0101               	movlb	1	; () banked
 20331  012D0A  6F34               	movwf	??_sprintf& (0+255),b
 20332  012D0C  0E00               	movlw	0
 20333  012D0E  0101               	movlb	1	; () banked
 20334  012D10  154D               	andwf	(sprintf@flag+1)& (0+255),w,b
 20335  012D12  0101               	movlb	1	; () banked
 20336  012D14  6F35               	movwf	(??_sprintf+1)& (0+255),b
 20337  012D16  0101               	movlb	1	; () banked
 20338  012D18  5135               	movf	(??_sprintf+1)& (0+255),w,b
 20339  012D1A  1134               	iorwf	??_sprintf& (0+255),w,b
 20340  012D1C  A4D8               	btfss	status,2,c
 20341  012D1E  D053               	goto	l1514
 20342                           
 20343                           ; BSR set to: 1
 20344                           ;doprnt.c: 1262: {
 20345                           ;doprnt.c: 1264: if(flag & 0x10)
 20346  012D20  0101               	movlb	1	; () banked
 20347  012D22  A94C               	btfss	sprintf@flag& (0+255),4,b
 20348  012D24  D012               	goto	l10422
 20349                           
 20350                           ; BSR set to: 1
 20351                           ;doprnt.c: 1265: _val._val = (*(long *)__va_arg((*(long **)ap), (long)0));
 20352  012D26  C141  FFD9         	movff	sprintf@ap,fsr2l
 20353  012D2A  C142  FFDA         	movff	sprintf@ap+1,fsr2h
 20354  012D2E  0101               	movlb	1	; () banked
 20355  012D30  CFDE F147          	movff	postinc2,sprintf@_val
 20356  012D34  0101               	movlb	1	; () banked
 20357  012D36  CFDE F148          	movff	postinc2,sprintf@_val+1
 20358  012D3A  0101               	movlb	1	; () banked
 20359  012D3C  CFDE F149          	movff	postinc2,sprintf@_val+2
 20360  012D40  0101               	movlb	1	; () banked
 20361  012D42  CFDE F14A          	movff	postinc2,sprintf@_val+3
 20362                           
 20363                           ; BSR set to: 1
 20364  012D46  0E04               	movlw	4
 20365  012D48  D014               	goto	L20
 20366  012D4A                     l10422:
 20367                           
 20368                           ; BSR set to: 1
 20369                           ;doprnt.c: 1266: else
 20370                           ;doprnt.c: 1268: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 20371  012D4A  C141  FFD9         	movff	sprintf@ap,fsr2l
 20372  012D4E  C142  FFDA         	movff	sprintf@ap+1,fsr2h
 20373  012D52  0101               	movlb	1	; () banked
 20374  012D54  CFDE F147          	movff	postinc2,sprintf@_val
 20375  012D58  0101               	movlb	1	; () banked
 20376  012D5A  CFDD F148          	movff	postdec2,sprintf@_val+1
 20377  012D5E  0101               	movlb	1	; () banked
 20378  012D60  0E00               	movlw	0
 20379  012D62  0101               	movlb	1	; () banked
 20380  012D64  BF48               	btfsc	(sprintf@_val+1)& (0+255),7,b
 20381  012D66  0EFF               	movlw	-1
 20382  012D68  0101               	movlb	1	; () banked
 20383  012D6A  6F49               	movwf	(sprintf@_val+2)& (0+255),b
 20384  012D6C  0101               	movlb	1	; () banked
 20385  012D6E  6F4A               	movwf	(sprintf@_val+3)& (0+255),b
 20386                           
 20387                           ; BSR set to: 1
 20388  012D70  0E02               	movlw	2
 20389  012D72                     L20:
 20390  012D72  0101               	movlb	1	; () banked
 20391  012D74  2741               	addwf	sprintf@ap& (0+255),f,b
 20392  012D76  0E00               	movlw	0
 20393  012D78  0101               	movlb	1	; () banked
 20394  012D7A  2342               	addwfc	(sprintf@ap+1)& (0+255),f,b
 20395                           
 20396                           ; BSR set to: 1
 20397                           ;doprnt.c: 1270: if((long)_val._val < 0) {
 20398                           
 20399                           ; BSR set to: 1
 20400  012D7C  0101               	movlb	1	; () banked
 20401  012D7E  514A               	movf	(sprintf@_val+3)& (0+255),w,b
 20402  012D80  0A80               	xorlw	128
 20403  012D82  0F80               	addlw	128
 20404  012D84  E10B               	bnz	u13085
 20405  012D86  0E00               	movlw	0
 20406  012D88  0101               	movlb	1	; () banked
 20407  012D8A  5D49               	subwf	(sprintf@_val+2)& (0+255),w,b
 20408  012D8C  E107               	bnz	u13085
 20409  012D8E  0E00               	movlw	0
 20410  012D90  0101               	movlb	1	; () banked
 20411  012D92  5D48               	subwf	(sprintf@_val+1)& (0+255),w,b
 20412  012D94  E103               	bnz	u13085
 20413  012D96  0E00               	movlw	0
 20414  012D98  0101               	movlb	1	; () banked
 20415  012D9A  5D47               	subwf	sprintf@_val& (0+255),w,b
 20416  012D9C                     u13085:
 20417  012D9C  B0D8               	btfsc	status,0,c
 20418  012D9E  D040               	goto	l10440
 20419                           
 20420                           ; BSR set to: 1
 20421                           ;doprnt.c: 1271: flag |= 0x03;
 20422  012DA0  0E03               	movlw	3
 20423  012DA2  0101               	movlb	1	; () banked
 20424  012DA4  134C               	iorwf	sprintf@flag& (0+255),f,b
 20425                           
 20426                           ; BSR set to: 1
 20427                           ;doprnt.c: 1272: _val._val = -_val._val;
 20428  012DA6  0101               	movlb	1	; () banked
 20429  012DA8  1F4A               	comf	(sprintf@_val+3)& (0+255),f,b
 20430  012DAA  0101               	movlb	1	; () banked
 20431  012DAC  1F49               	comf	(sprintf@_val+2)& (0+255),f,b
 20432  012DAE  0101               	movlb	1	; () banked
 20433  012DB0  1F48               	comf	(sprintf@_val+1)& (0+255),f,b
 20434  012DB2  0101               	movlb	1	; () banked
 20435  012DB4  6D47               	negf	sprintf@_val& (0+255),b
 20436  012DB6  0E00               	movlw	0
 20437  012DB8  0101               	movlb	1	; () banked
 20438  012DBA  2348               	addwfc	(sprintf@_val+1)& (0+255),f,b
 20439  012DBC  0101               	movlb	1	; () banked
 20440  012DBE  2349               	addwfc	(sprintf@_val+2)& (0+255),f,b
 20441  012DC0  0101               	movlb	1	; () banked
 20442  012DC2  234A               	addwfc	(sprintf@_val+3)& (0+255),f,b
 20443  012DC4  D02D               	goto	l10440
 20444  012DC6                     l1514:
 20445                           
 20446                           ; BSR set to: 1
 20447                           ;doprnt.c: 1277: else
 20448                           ;doprnt.c: 1282: {
 20449                           ;doprnt.c: 1290: if(flag & 0x10)
 20450  012DC6  0101               	movlb	1	; () banked
 20451  012DC8  A94C               	btfss	sprintf@flag& (0+255),4,b
 20452  012DCA  D012               	goto	l10436
 20453                           
 20454                           ; BSR set to: 1
 20455                           ;doprnt.c: 1291: _val._val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsig
      +                          ned long)0));
 20456  012DCC  C141  FFD9         	movff	sprintf@ap,fsr2l
 20457  012DD0  C142  FFDA         	movff	sprintf@ap+1,fsr2h
 20458  012DD4  0101               	movlb	1	; () banked
 20459  012DD6  CFDE F147          	movff	postinc2,sprintf@_val
 20460  012DDA  0101               	movlb	1	; () banked
 20461  012DDC  CFDE F148          	movff	postinc2,sprintf@_val+1
 20462  012DE0  0101               	movlb	1	; () banked
 20463  012DE2  CFDE F149          	movff	postinc2,sprintf@_val+2
 20464  012DE6  0101               	movlb	1	; () banked
 20465  012DE8  CFDE F14A          	movff	postinc2,sprintf@_val+3
 20466                           
 20467                           ; BSR set to: 1
 20468  012DEC  0E04               	movlw	4
 20469  012DEE  D013               	goto	L21
 20470  012DF0                     l10436:
 20471                           
 20472                           ; BSR set to: 1
 20473                           ;doprnt.c: 1292: else
 20474                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 20475  012DF0  C141  FFD9         	movff	sprintf@ap,fsr2l
 20476  012DF4  C142  FFDA         	movff	sprintf@ap+1,fsr2h
 20477  012DF8  CFDE F134          	movff	postinc2,??_sprintf
 20478  012DFC  CFDD F135          	movff	postdec2,??_sprintf+1
 20479  012E00  0101               	movlb	1	; () banked
 20480  012E02  C134  F147         	movff	??_sprintf,sprintf@_val
 20481  012E06  0101               	movlb	1	; () banked
 20482  012E08  C135  F148         	movff	??_sprintf+1,sprintf@_val+1
 20483  012E0C  0101               	movlb	1	; () banked
 20484  012E0E  6B49               	clrf	(sprintf@_val+2)& (0+255),b
 20485  012E10  0101               	movlb	1	; () banked
 20486  012E12  6B4A               	clrf	(sprintf@_val+3)& (0+255),b
 20487                           
 20488                           ; BSR set to: 1
 20489  012E14  0E02               	movlw	2
 20490  012E16                     L21:
 20491  012E16  0101               	movlb	1	; () banked
 20492  012E18  2741               	addwf	sprintf@ap& (0+255),f,b
 20493  012E1A  0E00               	movlw	0
 20494  012E1C  0101               	movlb	1	; () banked
 20495  012E1E  2342               	addwfc	(sprintf@ap+1)& (0+255),f,b
 20496  012E20                     l10440:
 20497                           
 20498                           ; BSR set to: 1
 20499                           ;doprnt.c: 1296: }
 20500                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
 20501  012E20  0101               	movlb	1	; () banked
 20502  012E22  5144               	movf	(sprintf@prec+1)& (0+255),w,b
 20503  012E24  1143               	iorwf	sprintf@prec& (0+255),w,b
 20504  012E26  A4D8               	btfss	status,2,c
 20505  012E28  D086               	goto	l10490
 20506                           
 20507                           ; BSR set to: 1
 20508  012E2A  0101               	movlb	1	; () banked
 20509  012E2C  514A               	movf	(sprintf@_val+3)& (0+255),w,b
 20510  012E2E  1147               	iorwf	sprintf@_val& (0+255),w,b
 20511  012E30  1148               	iorwf	(sprintf@_val+1)& (0+255),w,b
 20512  012E32  1149               	iorwf	(sprintf@_val+2)& (0+255),w,b
 20513  012E34  A4D8               	btfss	status,2,c
 20514  012E36  D07F               	goto	l10490
 20515                           
 20516                           ; BSR set to: 1
 20517                           ;doprnt.c: 1300: prec++;
 20518  012E38  0101               	movlb	1	; () banked
 20519  012E3A  4B43               	infsnz	sprintf@prec& (0+255),f,b
 20520  012E3C  2B44               	incf	(sprintf@prec+1)& (0+255),f,b
 20521  012E3E  D07B               	goto	l10490
 20522  012E40                     l10446:
 20523                           
 20524                           ; BSR set to: 1
 20525                           ;doprnt.c: 1311: case 0xC0:
 20526                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 20527  012E40  0E01               	movlw	1
 20528  012E42  0101               	movlb	1	; () banked
 20529  012E44  6F4B               	movwf	sprintf@c& (0+255),b
 20530  012E46                     
 20531                           ; BSR set to: 1
 20532  012E46  0101               	movlb	1	; () banked
 20533  012E48  514B               	movf	sprintf@c& (0+255),w,b
 20534  012E4A  0A0A               	xorlw	10
 20535  012E4C  B4D8               	btfsc	status,2,c
 20536  012E4E  D082               	goto	l10492
 20537                           
 20538                           ; BSR set to: 1
 20539                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
 20540                           
 20541                           ; BSR set to: 1
 20542                           
 20543                           ; BSR set to: 1
 20544  012E50  0101               	movlb	1	; () banked
 20545  012E52  514B               	movf	sprintf@c& (0+255),w,b
 20546  012E54  0D04               	mullw	4
 20547  012E56  0E79               	movlw	low _dpowers
 20548  012E58  24F3               	addwf	prodl,w,c
 20549  012E5A  6EF6               	movwf	tblptrl,c
 20550  012E5C  0EED               	movlw	high _dpowers
 20551  012E5E  20F4               	addwfc	prodh,w,c
 20552  012E60  6EF7               	movwf	tblptrh,c
 20553  012E62                     	if	1	;There are 3 active tblptr bytes
 20554  012E62  6AF8               	clrf	tblptru,c
 20555  012E64  0E00               	movlw	low (__mediumconst shr (0+16))
 20556  012E66  22F8               	addwfc	tblptru,f,c
 20557  012E68                     	endif
 20558  012E68  0009               	tblrd		*+
 20559  012E6A  50F5               	movf	tablat,w,c
 20560  012E6C  0101               	movlb	1	; () banked
 20561  012E6E  5D47               	subwf	sprintf@_val& (0+255),w,b
 20562  012E70  0009               	tblrd		*+
 20563  012E72  50F5               	movf	tablat,w,c
 20564  012E74  0101               	movlb	1	; () banked
 20565  012E76  5948               	subwfb	(sprintf@_val+1)& (0+255),w,b
 20566  012E78  0009               	tblrd		*+
 20567  012E7A  50F5               	movf	tablat,w,c
 20568  012E7C  0101               	movlb	1	; () banked
 20569  012E7E  5949               	subwfb	(sprintf@_val+2)& (0+255),w,b
 20570  012E80  0009               	tblrd		*+
 20571  012E82  50F5               	movf	tablat,w,c
 20572  012E84  0101               	movlb	1	; () banked
 20573  012E86  594A               	subwfb	(sprintf@_val+3)& (0+255),w,b
 20574  012E88  A0D8               	btfss	status,0,c
 20575  012E8A  D064               	goto	l10492
 20576                           
 20577                           ; BSR set to: 1
 20578                           
 20579                           ; BSR set to: 1
 20580                           
 20581                           ; BSR set to: 1
 20582                           ;doprnt.c: 1316: break;
 20583  012E8C  0101               	movlb	1	; () banked
 20584  012E8E  2B4B               	incf	sprintf@c& (0+255),f,b
 20585  012E90  D7DA               	goto	L22
 20586  012E92                     l10460:
 20587                           
 20588                           ; BSR set to: 1
 20589                           ;doprnt.c: 1325: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 20590  012E92  0E01               	movlw	1
 20591  012E94  0101               	movlb	1	; () banked
 20592  012E96  6F4B               	movwf	sprintf@c& (0+255),b
 20593  012E98                     
 20594                           ; BSR set to: 1
 20595  012E98  0101               	movlb	1	; () banked
 20596  012E9A  514B               	movf	sprintf@c& (0+255),w,b
 20597  012E9C  0A08               	xorlw	8
 20598  012E9E  B4D8               	btfsc	status,2,c
 20599  012EA0  D059               	goto	l10492
 20600                           
 20601                           ; BSR set to: 1
 20602                           ;doprnt.c: 1326: if(_val._val < hexpowers[c])
 20603                           
 20604                           ; BSR set to: 1
 20605                           
 20606                           ; BSR set to: 1
 20607  012EA2  0101               	movlb	1	; () banked
 20608  012EA4  514B               	movf	sprintf@c& (0+255),w,b
 20609  012EA6  0D04               	mullw	4
 20610  012EA8  0EA1               	movlw	low _hexpowers
 20611  012EAA  24F3               	addwf	prodl,w,c
 20612  012EAC  6EF6               	movwf	tblptrl,c
 20613  012EAE  0EED               	movlw	high _hexpowers
 20614  012EB0  20F4               	addwfc	prodh,w,c
 20615  012EB2  6EF7               	movwf	tblptrh,c
 20616  012EB4                     	if	1	;There are 3 active tblptr bytes
 20617  012EB4  6AF8               	clrf	tblptru,c
 20618  012EB6  0E00               	movlw	low (__mediumconst shr (0+16))
 20619  012EB8  22F8               	addwfc	tblptru,f,c
 20620  012EBA                     	endif
 20621  012EBA  0009               	tblrd		*+
 20622  012EBC  50F5               	movf	tablat,w,c
 20623  012EBE  0101               	movlb	1	; () banked
 20624  012EC0  5D47               	subwf	sprintf@_val& (0+255),w,b
 20625  012EC2  0009               	tblrd		*+
 20626  012EC4  50F5               	movf	tablat,w,c
 20627  012EC6  0101               	movlb	1	; () banked
 20628  012EC8  5948               	subwfb	(sprintf@_val+1)& (0+255),w,b
 20629  012ECA  0009               	tblrd		*+
 20630  012ECC  50F5               	movf	tablat,w,c
 20631  012ECE  0101               	movlb	1	; () banked
 20632  012ED0  5949               	subwfb	(sprintf@_val+2)& (0+255),w,b
 20633  012ED2  0009               	tblrd		*+
 20634  012ED4  50F5               	movf	tablat,w,c
 20635  012ED6  0101               	movlb	1	; () banked
 20636  012ED8  594A               	subwfb	(sprintf@_val+3)& (0+255),w,b
 20637  012EDA  A0D8               	btfss	status,0,c
 20638  012EDC  D03B               	goto	l10492
 20639                           
 20640                           ; BSR set to: 1
 20641                           
 20642                           ; BSR set to: 1
 20643                           
 20644                           ; BSR set to: 1
 20645                           ;doprnt.c: 1327: break;
 20646  012EDE  0101               	movlb	1	; () banked
 20647  012EE0  2B4B               	incf	sprintf@c& (0+255),f,b
 20648  012EE2  D7DA               	goto	L23
 20649  012EE4                     l10474:
 20650                           
 20651                           ; BSR set to: 1
 20652                           ;doprnt.c: 1337: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 20653  012EE4  0E01               	movlw	1
 20654  012EE6  0101               	movlb	1	; () banked
 20655  012EE8  6F4B               	movwf	sprintf@c& (0+255),b
 20656  012EEA                     
 20657                           ; BSR set to: 1
 20658  012EEA  0101               	movlb	1	; () banked
 20659  012EEC  514B               	movf	sprintf@c& (0+255),w,b
 20660  012EEE  0A0C               	xorlw	12
 20661  012EF0  B4D8               	btfsc	status,2,c
 20662  012EF2  D030               	goto	l10492
 20663                           
 20664                           ; BSR set to: 1
 20665                           ;doprnt.c: 1338: if(_val._val < octpowers[c])
 20666                           
 20667                           ; BSR set to: 1
 20668                           
 20669                           ; BSR set to: 1
 20670  012EF4  0101               	movlb	1	; () banked
 20671  012EF6  514B               	movf	sprintf@c& (0+255),w,b
 20672  012EF8  0D04               	mullw	4
 20673  012EFA  0E49               	movlw	low _octpowers
 20674  012EFC  24F3               	addwf	prodl,w,c
 20675  012EFE  6EF6               	movwf	tblptrl,c
 20676  012F00  0EED               	movlw	high _octpowers
 20677  012F02  20F4               	addwfc	prodh,w,c
 20678  012F04  6EF7               	movwf	tblptrh,c
 20679  012F06                     	if	1	;There are 3 active tblptr bytes
 20680  012F06  6AF8               	clrf	tblptru,c
 20681  012F08  0E00               	movlw	low (__mediumconst shr (0+16))
 20682  012F0A  22F8               	addwfc	tblptru,f,c
 20683  012F0C                     	endif
 20684  012F0C  0009               	tblrd		*+
 20685  012F0E  50F5               	movf	tablat,w,c
 20686  012F10  0101               	movlb	1	; () banked
 20687  012F12  5D47               	subwf	sprintf@_val& (0+255),w,b
 20688  012F14  0009               	tblrd		*+
 20689  012F16  50F5               	movf	tablat,w,c
 20690  012F18  0101               	movlb	1	; () banked
 20691  012F1A  5948               	subwfb	(sprintf@_val+1)& (0+255),w,b
 20692  012F1C  0009               	tblrd		*+
 20693  012F1E  50F5               	movf	tablat,w,c
 20694  012F20  0101               	movlb	1	; () banked
 20695  012F22  5949               	subwfb	(sprintf@_val+2)& (0+255),w,b
 20696  012F24  0009               	tblrd		*+
 20697  012F26  50F5               	movf	tablat,w,c
 20698  012F28  0101               	movlb	1	; () banked
 20699  012F2A  594A               	subwfb	(sprintf@_val+3)& (0+255),w,b
 20700  012F2C  A0D8               	btfss	status,0,c
 20701  012F2E  D012               	goto	l10492
 20702                           
 20703                           ; BSR set to: 1
 20704                           
 20705                           ; BSR set to: 1
 20706                           
 20707                           ; BSR set to: 1
 20708                           ;doprnt.c: 1339: break;
 20709  012F30  0101               	movlb	1	; () banked
 20710  012F32  2B4B               	incf	sprintf@c& (0+255),f,b
 20711  012F34  D7DA               	goto	L24
 20712  012F36                     l10490:
 20713                           
 20714                           ; BSR set to: 1
 20715  012F36  0101               	movlb	1	; () banked
 20716  012F38  514C               	movf	sprintf@flag& (0+255),w,b
 20717  012F3A  0BC0               	andlw	192
 20718                           
 20719                           ; Switch size 1, requested type "space"
 20720                           ; Number of cases is 4, Range of values is 0 to 192
 20721                           ; switch strategies available:
 20722                           ; Name         Instructions Cycles
 20723                           ; simple_byte           13     7 (average)
 20724                           ;	Chosen strategy is simple_byte
 20725  012F3C  0A00               	xorlw	0	; case 0
 20726  012F3E  B4D8               	btfsc	status,2,c
 20727  012F40  D77F               	goto	l10446
 20728  012F42  0A40               	xorlw	64	; case 64
 20729  012F44  B4D8               	btfsc	status,2,c
 20730  012F46  D7CE               	goto	l10474
 20731  012F48  0AC0               	xorlw	192	; case 128
 20732  012F4A  B4D8               	btfsc	status,2,c
 20733  012F4C  D7A2               	goto	l10460
 20734  012F4E  0A40               	xorlw	64	; case 192
 20735  012F50  B4D8               	btfsc	status,2,c
 20736  012F52  D776               	goto	l10446
 20737  012F54                     l10492:
 20738                           
 20739                           ; BSR set to: 1
 20740                           ;doprnt.c: 1348: if(c < prec)
 20741  012F54  0E80               	movlw	128
 20742  012F56  0101               	movlb	1	; () banked
 20743  012F58  BF4B               	btfsc	sprintf@c& (0+255),7,b
 20744  012F5A  0E7F               	movlw	127
 20745  012F5C  0101               	movlb	1	; () banked
 20746  012F5E  6F34               	movwf	??_sprintf& (0+255),b
 20747  012F60  0101               	movlb	1	; () banked
 20748  012F62  5143               	movf	sprintf@prec& (0+255),w,b
 20749  012F64  0101               	movlb	1	; () banked
 20750  012F66  5D4B               	subwf	sprintf@c& (0+255),w,b
 20751  012F68  0101               	movlb	1	; () banked
 20752  012F6A  5144               	movf	(sprintf@prec+1)& (0+255),w,b
 20753  012F6C  0A80               	xorlw	128
 20754  012F6E  0101               	movlb	1	; () banked
 20755  012F70  5934               	subwfb	??_sprintf& (0+255),w,b
 20756  012F72  B0D8               	btfsc	status,0,c
 20757  012F74  D003               	goto	l10496
 20758                           
 20759                           ; BSR set to: 1
 20760                           ;doprnt.c: 1349: c = prec;
 20761  012F76  C143  F14B         	movff	sprintf@prec,sprintf@c
 20762  012F7A  D01A               	goto	l10500
 20763  012F7C                     l10496:
 20764                           
 20765                           ; BSR set to: 1
 20766                           ;doprnt.c: 1350: else if(prec < c)
 20767  012F7C  0101               	movlb	1	; () banked
 20768  012F7E  5144               	movf	(sprintf@prec+1)& (0+255),w,b
 20769  012F80  0A80               	xorlw	128
 20770  012F82  0101               	movlb	1	; () banked
 20771  012F84  6F34               	movwf	??_sprintf& (0+255),b
 20772  012F86  0101               	movlb	1	; () banked
 20773  012F88  514B               	movf	sprintf@c& (0+255),w,b
 20774  012F8A  0101               	movlb	1	; () banked
 20775  012F8C  5D43               	subwf	sprintf@prec& (0+255),w,b
 20776  012F8E  0E80               	movlw	128
 20777  012F90  0101               	movlb	1	; () banked
 20778  012F92  BF4B               	btfsc	sprintf@c& (0+255),7,b
 20779  012F94  0E7F               	movlw	127
 20780  012F96  0101               	movlb	1	; () banked
 20781  012F98  5934               	subwfb	??_sprintf& (0+255),w,b
 20782  012F9A  B0D8               	btfsc	status,0,c
 20783  012F9C  D009               	goto	l10500
 20784                           
 20785                           ; BSR set to: 1
 20786                           ;doprnt.c: 1351: prec = c;
 20787  012F9E  0101               	movlb	1	; () banked
 20788  012FA0  514B               	movf	sprintf@c& (0+255),w,b
 20789  012FA2  0101               	movlb	1	; () banked
 20790  012FA4  6F43               	movwf	sprintf@prec& (0+255),b
 20791  012FA6  0101               	movlb	1	; () banked
 20792  012FA8  6B44               	clrf	(sprintf@prec+1)& (0+255),b
 20793  012FAA  0101               	movlb	1	; () banked
 20794  012FAC  BF43               	btfsc	sprintf@prec& (0+255),7,b
 20795  012FAE  0744               	decf	(sprintf@prec+1)& (0+255),f,b
 20796  012FB0                     l10500:
 20797                           
 20798                           ; BSR set to: 1
 20799                           ;doprnt.c: 1354: if(width && flag & 0x03)
 20800  012FB0  0101               	movlb	1	; () banked
 20801  012FB2  5146               	movf	(sprintf@width+1)& (0+255),w,b
 20802  012FB4  1145               	iorwf	sprintf@width& (0+255),w,b
 20803  012FB6  B4D8               	btfsc	status,2,c
 20804  012FB8  D013               	goto	l10506
 20805                           
 20806                           ; BSR set to: 1
 20807  012FBA  0E03               	movlw	3
 20808  012FBC  0101               	movlb	1	; () banked
 20809  012FBE  154C               	andwf	sprintf@flag& (0+255),w,b
 20810  012FC0  0101               	movlb	1	; () banked
 20811  012FC2  6F34               	movwf	??_sprintf& (0+255),b
 20812  012FC4  0E00               	movlw	0
 20813  012FC6  0101               	movlb	1	; () banked
 20814  012FC8  154D               	andwf	(sprintf@flag+1)& (0+255),w,b
 20815  012FCA  0101               	movlb	1	; () banked
 20816  012FCC  6F35               	movwf	(??_sprintf+1)& (0+255),b
 20817  012FCE  0101               	movlb	1	; () banked
 20818  012FD0  5135               	movf	(??_sprintf+1)& (0+255),w,b
 20819  012FD2  1134               	iorwf	??_sprintf& (0+255),w,b
 20820  012FD4  B4D8               	btfsc	status,2,c
 20821  012FD6  D004               	goto	l10506
 20822                           
 20823                           ; BSR set to: 1
 20824                           ;doprnt.c: 1355: width--;
 20825  012FD8  0101               	movlb	1	; () banked
 20826  012FDA  0745               	decf	sprintf@width& (0+255),f,b
 20827  012FDC  A0D8               	btfss	status,0,c
 20828  012FDE  0746               	decf	(sprintf@width+1)& (0+255),f,b
 20829  012FE0                     l10506:
 20830                           
 20831                           ; BSR set to: 1
 20832                           ;doprnt.c: 1357: if(flag & 0x4000) {
 20833  012FE0  0101               	movlb	1	; () banked
 20834  012FE2  AD4D               	btfss	(sprintf@flag+1)& (0+255),6,b
 20835  012FE4  D01F               	goto	l10514
 20836                           
 20837                           ; BSR set to: 1
 20838                           ;doprnt.c: 1358: if(width > prec)
 20839  012FE6  0101               	movlb	1	; () banked
 20840  012FE8  5144               	movf	(sprintf@prec+1)& (0+255),w,b
 20841  012FEA  0A80               	xorlw	128
 20842  012FEC  0101               	movlb	1	; () banked
 20843  012FEE  6F34               	movwf	??_sprintf& (0+255),b
 20844  012FF0  0101               	movlb	1	; () banked
 20845  012FF2  5145               	movf	sprintf@width& (0+255),w,b
 20846  012FF4  0101               	movlb	1	; () banked
 20847  012FF6  5D43               	subwf	sprintf@prec& (0+255),w,b
 20848  012FF8  0101               	movlb	1	; () banked
 20849  012FFA  5146               	movf	(sprintf@width+1)& (0+255),w,b
 20850  012FFC  0A80               	xorlw	128
 20851  012FFE  0101               	movlb	1	; () banked
 20852  013000  5934               	subwfb	??_sprintf& (0+255),w,b
 20853  013002  B0D8               	btfsc	status,0,c
 20854  013004  D009               	goto	l10512
 20855                           
 20856                           ; BSR set to: 1
 20857                           ;doprnt.c: 1359: width -= prec;
 20858  013006  0101               	movlb	1	; () banked
 20859  013008  5143               	movf	sprintf@prec& (0+255),w,b
 20860  01300A  0101               	movlb	1	; () banked
 20861  01300C  5F45               	subwf	sprintf@width& (0+255),f,b
 20862  01300E  0101               	movlb	1	; () banked
 20863  013010  5144               	movf	(sprintf@prec+1)& (0+255),w,b
 20864  013012  0101               	movlb	1	; () banked
 20865  013014  5B46               	subwfb	(sprintf@width+1)& (0+255),f,b
 20866  013016  D006               	goto	l10514
 20867  013018                     l10512:
 20868                           
 20869                           ; BSR set to: 1
 20870                           ;doprnt.c: 1360: else
 20871                           ;doprnt.c: 1361: width = 0;
 20872  013018  0E00               	movlw	0
 20873  01301A  0101               	movlb	1	; () banked
 20874  01301C  6F46               	movwf	(sprintf@width+1)& (0+255),b
 20875  01301E  0E00               	movlw	0
 20876  013020  0101               	movlb	1	; () banked
 20877  013022  6F45               	movwf	sprintf@width& (0+255),b
 20878  013024                     l10514:
 20879                           
 20880                           ; BSR set to: 1
 20881                           ;doprnt.c: 1362: }
 20882                           ;doprnt.c: 1366: if((flag & (
 20883                           ;doprnt.c: 1368: 0x04|
 20884                           ;doprnt.c: 1370: (0xC0)|0x800)) == (0x40|0x800)) {
 20885  013024  0EC4               	movlw	196
 20886  013026  0101               	movlb	1	; () banked
 20887  013028  6F34               	movwf	??_sprintf& (0+255),b
 20888  01302A  0E08               	movlw	8
 20889  01302C  6F35               	movwf	(??_sprintf+1)& (0+255),b
 20890  01302E  0101               	movlb	1	; () banked
 20891  013030  C14C  F136         	movff	sprintf@flag,??_sprintf+2
 20892  013034  0101               	movlb	1	; () banked
 20893  013036  C14D  F137         	movff	sprintf@flag+1,??_sprintf+3
 20894  01303A  0101               	movlb	1	; () banked
 20895  01303C  5134               	movf	??_sprintf& (0+255),w,b
 20896  01303E  0101               	movlb	1	; () banked
 20897  013040  1736               	andwf	(??_sprintf+2)& (0+255),f,b
 20898  013042  0101               	movlb	1	; () banked
 20899  013044  5135               	movf	(??_sprintf+1)& (0+255),w,b
 20900  013046  0101               	movlb	1	; () banked
 20901  013048  1737               	andwf	(??_sprintf+3)& (0+255),f,b
 20902  01304A  0101               	movlb	1	; () banked
 20903  01304C  5137               	movf	(??_sprintf+3)& (0+255),w,b
 20904  01304E  0A08               	xorlw	8
 20905  013050  0E40               	movlw	64
 20906  013052  B4D8               	btfsc	status,2,c
 20907  013054  1936               	xorwf	(??_sprintf+2)& (0+255),w,b
 20908  013056  A4D8               	btfss	status,2,c
 20909  013058  D00A               	goto	l10520
 20910                           
 20911                           ; BSR set to: 1
 20912                           ;doprnt.c: 1371: if(width)
 20913  01305A  0101               	movlb	1	; () banked
 20914  01305C  5146               	movf	(sprintf@width+1)& (0+255),w,b
 20915  01305E  1145               	iorwf	sprintf@width& (0+255),w,b
 20916  013060  B4D8               	btfsc	status,2,c
 20917  013062  D037               	goto	l10528
 20918                           
 20919                           ; BSR set to: 1
 20920                           ;doprnt.c: 1372: width--;
 20921  013064  0101               	movlb	1	; () banked
 20922  013066  0745               	decf	sprintf@width& (0+255),f,b
 20923  013068  A0D8               	btfss	status,0,c
 20924  01306A  0746               	decf	(sprintf@width+1)& (0+255),f,b
 20925  01306C  D032               	goto	l10528
 20926  01306E                     l10520:
 20927                           
 20928                           ; BSR set to: 1
 20929                           ;doprnt.c: 1377: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 20930  01306E  0EC0               	movlw	192
 20931  013070  0101               	movlb	1	; () banked
 20932  013072  6F34               	movwf	??_sprintf& (0+255),b
 20933  013074  0E08               	movlw	8
 20934  013076  6F35               	movwf	(??_sprintf+1)& (0+255),b
 20935  013078  0101               	movlb	1	; () banked
 20936  01307A  C14C  F136         	movff	sprintf@flag,??_sprintf+2
 20937  01307E  0101               	movlb	1	; () banked
 20938  013080  C14D  F137         	movff	sprintf@flag+1,??_sprintf+3
 20939  013084  0101               	movlb	1	; () banked
 20940  013086  5134               	movf	??_sprintf& (0+255),w,b
 20941  013088  0101               	movlb	1	; () banked
 20942  01308A  1736               	andwf	(??_sprintf+2)& (0+255),f,b
 20943  01308C  0101               	movlb	1	; () banked
 20944  01308E  5135               	movf	(??_sprintf+1)& (0+255),w,b
 20945  013090  0101               	movlb	1	; () banked
 20946  013092  1737               	andwf	(??_sprintf+3)& (0+255),f,b
 20947  013094  0101               	movlb	1	; () banked
 20948  013096  5137               	movf	(??_sprintf+3)& (0+255),w,b
 20949  013098  0A08               	xorlw	8
 20950  01309A  0E80               	movlw	128
 20951  01309C  B4D8               	btfsc	status,2,c
 20952  01309E  1936               	xorwf	(??_sprintf+2)& (0+255),w,b
 20953  0130A0  A4D8               	btfss	status,2,c
 20954  0130A2  D017               	goto	l10528
 20955                           
 20956                           ; BSR set to: 1
 20957                           ;doprnt.c: 1381: if(width > 2)
 20958  0130A4  0101               	movlb	1	; () banked
 20959  0130A6  5146               	movf	(sprintf@width+1)& (0+255),w,b
 20960  0130A8  0A80               	xorlw	128
 20961  0130AA  0F80               	addlw	-128
 20962  0130AC  0E03               	movlw	3
 20963  0130AE  B4D8               	btfsc	status,2,c
 20964  0130B0  5D45               	subwf	sprintf@width& (0+255),w,b
 20965  0130B2  A0D8               	btfss	status,0,c
 20966  0130B4  D008               	goto	l10526
 20967                           
 20968                           ; BSR set to: 1
 20969                           ;doprnt.c: 1382: width -= 2;
 20970  0130B6  0101               	movlb	1	; () banked
 20971  0130B8  0EFE               	movlw	254
 20972  0130BA  0101               	movlb	1	; () banked
 20973  0130BC  2745               	addwf	sprintf@width& (0+255),f,b
 20974  0130BE  0EFF               	movlw	255
 20975  0130C0  0101               	movlb	1	; () banked
 20976  0130C2  2346               	addwfc	(sprintf@width+1)& (0+255),f,b
 20977  0130C4  D006               	goto	l10528
 20978  0130C6                     l10526:
 20979                           
 20980                           ; BSR set to: 1
 20981                           ;doprnt.c: 1383: else
 20982                           ;doprnt.c: 1384: width = 0;
 20983  0130C6  0E00               	movlw	0
 20984  0130C8  0101               	movlb	1	; () banked
 20985  0130CA  6F46               	movwf	(sprintf@width+1)& (0+255),b
 20986  0130CC  0E00               	movlw	0
 20987  0130CE  0101               	movlb	1	; () banked
 20988  0130D0  6F45               	movwf	sprintf@width& (0+255),b
 20989  0130D2                     l10528:
 20990                           
 20991                           ; BSR set to: 1
 20992                           ;doprnt.c: 1385: }
 20993                           ;doprnt.c: 1390: if(width > c)
 20994  0130D2  0E80               	movlw	128
 20995  0130D4  0101               	movlb	1	; () banked
 20996  0130D6  BF4B               	btfsc	sprintf@c& (0+255),7,b
 20997  0130D8  0E7F               	movlw	127
 20998  0130DA  0101               	movlb	1	; () banked
 20999  0130DC  6F34               	movwf	??_sprintf& (0+255),b
 21000  0130DE  0101               	movlb	1	; () banked
 21001  0130E0  5145               	movf	sprintf@width& (0+255),w,b
 21002  0130E2  0101               	movlb	1	; () banked
 21003  0130E4  5D4B               	subwf	sprintf@c& (0+255),w,b
 21004  0130E6  0101               	movlb	1	; () banked
 21005  0130E8  5146               	movf	(sprintf@width+1)& (0+255),w,b
 21006  0130EA  0A80               	xorlw	128
 21007  0130EC  0101               	movlb	1	; () banked
 21008  0130EE  5934               	subwfb	??_sprintf& (0+255),w,b
 21009  0130F0  B0D8               	btfsc	status,0,c
 21010  0130F2  D00B               	goto	l10532
 21011                           
 21012                           ; BSR set to: 1
 21013                           ;doprnt.c: 1391: width -= c;
 21014  0130F4  0101               	movlb	1	; () banked
 21015  0130F6  514B               	movf	sprintf@c& (0+255),w,b
 21016  0130F8  0101               	movlb	1	; () banked
 21017  0130FA  5F45               	subwf	sprintf@width& (0+255),f,b
 21018  0130FC  0E00               	movlw	0
 21019  0130FE  0101               	movlb	1	; () banked
 21020  013100  BF4B               	btfsc	sprintf@c& (0+255),7,b
 21021  013102  0EFF               	movlw	255
 21022  013104  0101               	movlb	1	; () banked
 21023  013106  5B46               	subwfb	(sprintf@width+1)& (0+255),f,b
 21024  013108  D006               	goto	l10534
 21025  01310A                     l10532:
 21026                           
 21027                           ; BSR set to: 1
 21028                           ;doprnt.c: 1392: else
 21029                           ;doprnt.c: 1393: width = 0;
 21030  01310A  0E00               	movlw	0
 21031  01310C  0101               	movlb	1	; () banked
 21032  01310E  6F46               	movwf	(sprintf@width+1)& (0+255),b
 21033  013110  0E00               	movlw	0
 21034  013112  0101               	movlb	1	; () banked
 21035  013114  6F45               	movwf	sprintf@width& (0+255),b
 21036  013116                     l10534:
 21037                           
 21038                           ; BSR set to: 1
 21039                           ;doprnt.c: 1396: if(flag & 0x04) {
 21040  013116  0101               	movlb	1	; () banked
 21041  013118  A54C               	btfss	sprintf@flag& (0+255),2,b
 21042  01311A  D06F               	goto	l10570
 21043                           
 21044                           ; BSR set to: 1
 21045                           ;doprnt.c: 1401: if(flag & 0x03)
 21046  01311C  0E03               	movlw	3
 21047  01311E  0101               	movlb	1	; () banked
 21048  013120  154C               	andwf	sprintf@flag& (0+255),w,b
 21049  013122  0101               	movlb	1	; () banked
 21050  013124  6F34               	movwf	??_sprintf& (0+255),b
 21051  013126  0E00               	movlw	0
 21052  013128  0101               	movlb	1	; () banked
 21053  01312A  154D               	andwf	(sprintf@flag+1)& (0+255),w,b
 21054  01312C  0101               	movlb	1	; () banked
 21055  01312E  6F35               	movwf	(??_sprintf+1)& (0+255),b
 21056  013130  0101               	movlb	1	; () banked
 21057  013132  5135               	movf	(??_sprintf+1)& (0+255),w,b
 21058  013134  1134               	iorwf	??_sprintf& (0+255),w,b
 21059  013136  B4D8               	btfsc	status,2,c
 21060  013138  D006               	goto	l1553
 21061                           
 21062                           ; BSR set to: 1
 21063                           ;doprnt.c: 1402: ((*sp++ = ('-')));
 21064  01313A  C124  FFD9         	movff	sprintf@sp,fsr2l
 21065  01313E  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21066  013142  0E2D               	movlw	45
 21067  013144  D008               	goto	L25
 21068  013146                     l1553:
 21069                           
 21070                           ; BSR set to: 1
 21071                           ;doprnt.c: 1405: else
 21072                           ;doprnt.c: 1408: if(flag & 0x01)
 21073  013146  0101               	movlb	1	; () banked
 21074  013148  A14C               	btfss	sprintf@flag& (0+255),0,b
 21075  01314A  D007               	goto	l10546
 21076                           
 21077                           ; BSR set to: 1
 21078                           ;doprnt.c: 1409: ((*sp++ = (' ')));
 21079  01314C  C124  FFD9         	movff	sprintf@sp,fsr2l
 21080  013150  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21081  013154  0E20               	movlw	32
 21082  013156                     L25:
 21083  013156  6EDF               	movwf	indf2,c
 21084  013158  D039               	goto	L26
 21085  01315A                     l10546:
 21086                           
 21087                           ; BSR set to: 1
 21088                           ;doprnt.c: 1412: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 21089  01315A  0EC0               	movlw	192
 21090  01315C  0101               	movlb	1	; () banked
 21091  01315E  6F34               	movwf	??_sprintf& (0+255),b
 21092  013160  0E08               	movlw	8
 21093  013162  6F35               	movwf	(??_sprintf+1)& (0+255),b
 21094  013164  0101               	movlb	1	; () banked
 21095  013166  C14C  F136         	movff	sprintf@flag,??_sprintf+2
 21096  01316A  0101               	movlb	1	; () banked
 21097  01316C  C14D  F137         	movff	sprintf@flag+1,??_sprintf+3
 21098  013170  0101               	movlb	1	; () banked
 21099  013172  5134               	movf	??_sprintf& (0+255),w,b
 21100  013174  0101               	movlb	1	; () banked
 21101  013176  1736               	andwf	(??_sprintf+2)& (0+255),f,b
 21102  013178  0101               	movlb	1	; () banked
 21103  01317A  5135               	movf	(??_sprintf+1)& (0+255),w,b
 21104  01317C  0101               	movlb	1	; () banked
 21105  01317E  1737               	andwf	(??_sprintf+3)& (0+255),f,b
 21106  013180  0101               	movlb	1	; () banked
 21107  013182  5137               	movf	(??_sprintf+3)& (0+255),w,b
 21108  013184  0A08               	xorlw	8
 21109  013186  0E80               	movlw	128
 21110  013188  B4D8               	btfsc	status,2,c
 21111  01318A  1936               	xorwf	(??_sprintf+2)& (0+255),w,b
 21112  01318C  A4D8               	btfss	status,2,c
 21113  01318E  D021               	goto	l10562
 21114                           
 21115                           ; BSR set to: 1
 21116                           ;doprnt.c: 1413: ((*sp++ = ('0')));
 21117  013190  C124  FFD9         	movff	sprintf@sp,fsr2l
 21118  013194  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21119  013198  0E30               	movlw	48
 21120  01319A  6EDF               	movwf	indf2,c
 21121                           
 21122                           ; BSR set to: 1
 21123  01319C  0101               	movlb	1	; () banked
 21124  01319E  4B24               	infsnz	sprintf@sp& (0+255),f,b
 21125  0131A0  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 21126                           
 21127                           ; BSR set to: 1
 21128                           ;doprnt.c: 1415: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 21129  0131A2  0101               	movlb	1	; () banked
 21130  0131A4  BB4C               	btfsc	sprintf@flag& (0+255),5,b
 21131  0131A6  D005               	goto	l10556
 21132                           
 21133                           ; BSR set to: 1
 21134  0131A8  0E00               	movlw	0
 21135  0131AA  0101               	movlb	1	; () banked
 21136  0131AC  6F3C               	movwf	(_sprintf$2291+1)& (0+255),b
 21137  0131AE  0E78               	movlw	120
 21138  0131B0  D004               	goto	L27
 21139  0131B2                     l10556:
 21140                           
 21141                           ; BSR set to: 1
 21142  0131B2  0E00               	movlw	0
 21143  0131B4  0101               	movlb	1	; () banked
 21144  0131B6  6F3C               	movwf	(_sprintf$2291+1)& (0+255),b
 21145  0131B8  0E58               	movlw	88
 21146  0131BA                     L27:
 21147  0131BA  0101               	movlb	1	; () banked
 21148  0131BC  6F3B               	movwf	_sprintf$2291& (0+255),b
 21149                           
 21150                           ; BSR set to: 1
 21151                           
 21152                           ; BSR set to: 1
 21153  0131BE  C124  FFD9         	movff	sprintf@sp,fsr2l
 21154  0131C2  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21155  0131C6  0101               	movlb	1	; () banked
 21156  0131C8  C13B  FFDF         	movff	_sprintf$2291,indf2
 21157  0131CC                     L26:
 21158                           
 21159                           ; BSR set to: 1
 21160  0131CC  0101               	movlb	1	; () banked
 21161  0131CE  4B24               	infsnz	sprintf@sp& (0+255),f,b
 21162  0131D0  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 21163  0131D2                     l10562:
 21164                           
 21165                           ; BSR set to: 1
 21166                           ;doprnt.c: 1421: }
 21167                           ;doprnt.c: 1424: if(width)
 21168  0131D2  0101               	movlb	1	; () banked
 21169  0131D4  0101               	movlb	1	; () banked
 21170  0131D6  5146               	movf	(sprintf@width+1)& (0+255),w,b
 21171  0131D8  1145               	iorwf	sprintf@width& (0+255),w,b
 21172  0131DA  B4D8               	btfsc	status,2,c
 21173  0131DC  D1B9               	goto	l10634
 21174                           
 21175                           ; BSR set to: 1
 21176                           ;doprnt.c: 1426: ((*sp++ = ('0')));
 21177                           
 21178                           ; BSR set to: 1
 21179                           
 21180                           ;doprnt.c: 1425: do
 21181  0131DE  C124  FFD9         	movff	sprintf@sp,fsr2l
 21182  0131E2  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21183  0131E6  0E30               	movlw	48
 21184  0131E8  6EDF               	movwf	indf2,c
 21185                           
 21186                           ; BSR set to: 1
 21187  0131EA  0101               	movlb	1	; () banked
 21188  0131EC  4B24               	infsnz	sprintf@sp& (0+255),f,b
 21189  0131EE  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 21190                           
 21191                           ; BSR set to: 1
 21192                           ;doprnt.c: 1427: while(--width);
 21193  0131F0  0101               	movlb	1	; () banked
 21194  0131F2  0745               	decf	sprintf@width& (0+255),f,b
 21195  0131F4  A0D8               	btfss	status,0,c
 21196  0131F6  0746               	decf	(sprintf@width+1)& (0+255),f,b
 21197  0131F8  D7ED               	goto	L34
 21198  0131FA                     l10570:
 21199                           
 21200                           ; BSR set to: 1
 21201                           ;doprnt.c: 1431: {
 21202                           ;doprnt.c: 1433: if(width
 21203                           ;doprnt.c: 1435: && !(flag & 0x08)
 21204                           ;doprnt.c: 1437: )
 21205  0131FA  0101               	movlb	1	; () banked
 21206  0131FC  5146               	movf	(sprintf@width+1)& (0+255),w,b
 21207  0131FE  1145               	iorwf	sprintf@width& (0+255),w,b
 21208  013200  B4D8               	btfsc	status,2,c
 21209  013202  D015               	goto	l10580
 21210                           
 21211                           ; BSR set to: 1
 21212  013204  0101               	movlb	1	; () banked
 21213  013206  B74C               	btfsc	sprintf@flag& (0+255),3,b
 21214  013208  D012               	goto	l10580
 21215  01320A                     l10574:
 21216                           
 21217                           ; BSR set to: 1
 21218                           ;doprnt.c: 1439: ((*sp++ = (' ')));
 21219  01320A  C124  FFD9         	movff	sprintf@sp,fsr2l
 21220  01320E  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21221  013212  0E20               	movlw	32
 21222  013214  6EDF               	movwf	indf2,c
 21223                           
 21224                           ; BSR set to: 1
 21225  013216  0101               	movlb	1	; () banked
 21226  013218  4B24               	infsnz	sprintf@sp& (0+255),f,b
 21227  01321A  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 21228                           
 21229                           ; BSR set to: 1
 21230                           ;doprnt.c: 1440: while(--width);
 21231  01321C  0101               	movlb	1	; () banked
 21232  01321E  0745               	decf	sprintf@width& (0+255),f,b
 21233  013220  A0D8               	btfss	status,0,c
 21234  013222  0746               	decf	(sprintf@width+1)& (0+255),f,b
 21235  013224  0101               	movlb	1	; () banked
 21236  013226  5146               	movf	(sprintf@width+1)& (0+255),w,b
 21237  013228  1145               	iorwf	sprintf@width& (0+255),w,b
 21238  01322A  A4D8               	btfss	status,2,c
 21239  01322C  D7EE               	goto	l10574
 21240  01322E                     l10580:
 21241                           
 21242                           ; BSR set to: 1
 21243                           ;doprnt.c: 1447: if(flag & 0x03)
 21244  01322E  0E03               	movlw	3
 21245  013230  0101               	movlb	1	; () banked
 21246  013232  154C               	andwf	sprintf@flag& (0+255),w,b
 21247  013234  0101               	movlb	1	; () banked
 21248  013236  6F34               	movwf	??_sprintf& (0+255),b
 21249  013238  0E00               	movlw	0
 21250  01323A  0101               	movlb	1	; () banked
 21251  01323C  154D               	andwf	(sprintf@flag+1)& (0+255),w,b
 21252  01323E  0101               	movlb	1	; () banked
 21253  013240  6F35               	movwf	(??_sprintf+1)& (0+255),b
 21254  013242  0101               	movlb	1	; () banked
 21255  013244  5135               	movf	(??_sprintf+1)& (0+255),w,b
 21256  013246  1134               	iorwf	??_sprintf& (0+255),w,b
 21257  013248  B4D8               	btfsc	status,2,c
 21258  01324A  D006               	goto	l1569
 21259                           
 21260                           ; BSR set to: 1
 21261                           ;doprnt.c: 1448: ((*sp++ = ('-')));
 21262  01324C  C124  FFD9         	movff	sprintf@sp,fsr2l
 21263  013250  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21264  013254  0E2D               	movlw	45
 21265  013256  D008               	goto	L28
 21266  013258                     l1569:
 21267                           
 21268                           ; BSR set to: 1
 21269                           ;doprnt.c: 1452: else if(flag & 0x01)
 21270  013258  0101               	movlb	1	; () banked
 21271  01325A  A14C               	btfss	sprintf@flag& (0+255),0,b
 21272  01325C  D009               	goto	l10590
 21273                           
 21274                           ; BSR set to: 1
 21275                           ;doprnt.c: 1453: ((*sp++ = (' ')));
 21276  01325E  C124  FFD9         	movff	sprintf@sp,fsr2l
 21277  013262  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21278  013266  0E20               	movlw	32
 21279  013268                     L28:
 21280  013268  6EDF               	movwf	indf2,c
 21281                           
 21282                           ; BSR set to: 1
 21283  01326A  0101               	movlb	1	; () banked
 21284  01326C  4B24               	infsnz	sprintf@sp& (0+255),f,b
 21285  01326E  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 21286  013270                     l10590:
 21287                           
 21288                           ; BSR set to: 1
 21289                           ;doprnt.c: 1457: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 21290  013270  0EC0               	movlw	192
 21291  013272  0101               	movlb	1	; () banked
 21292  013274  6F34               	movwf	??_sprintf& (0+255),b
 21293  013276  0E08               	movlw	8
 21294  013278  6F35               	movwf	(??_sprintf+1)& (0+255),b
 21295  01327A  0101               	movlb	1	; () banked
 21296  01327C  C14C  F136         	movff	sprintf@flag,??_sprintf+2
 21297  013280  0101               	movlb	1	; () banked
 21298  013282  C14D  F137         	movff	sprintf@flag+1,??_sprintf+3
 21299  013286  0101               	movlb	1	; () banked
 21300  013288  5134               	movf	??_sprintf& (0+255),w,b
 21301  01328A  0101               	movlb	1	; () banked
 21302  01328C  1736               	andwf	(??_sprintf+2)& (0+255),f,b
 21303  01328E  0101               	movlb	1	; () banked
 21304  013290  5135               	movf	(??_sprintf+1)& (0+255),w,b
 21305  013292  0101               	movlb	1	; () banked
 21306  013294  1737               	andwf	(??_sprintf+3)& (0+255),f,b
 21307  013296  0101               	movlb	1	; () banked
 21308  013298  5137               	movf	(??_sprintf+3)& (0+255),w,b
 21309  01329A  0A08               	xorlw	8
 21310  01329C  0E40               	movlw	64
 21311  01329E  B4D8               	btfsc	status,2,c
 21312  0132A0  1936               	xorwf	(??_sprintf+2)& (0+255),w,b
 21313  0132A2  A4D8               	btfss	status,2,c
 21314  0132A4  D007               	goto	l10596
 21315                           
 21316                           ; BSR set to: 1
 21317                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 21318  0132A6  C124  FFD9         	movff	sprintf@sp,fsr2l
 21319  0132AA  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21320  0132AE  0E30               	movlw	48
 21321  0132B0  6EDF               	movwf	indf2,c
 21322  0132B2  D14B               	goto	L31
 21323  0132B4                     l10596:
 21324                           
 21325                           ; BSR set to: 1
 21326                           ;doprnt.c: 1459: else
 21327                           ;doprnt.c: 1463: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 21328  0132B4  0EC0               	movlw	192
 21329  0132B6  0101               	movlb	1	; () banked
 21330  0132B8  6F34               	movwf	??_sprintf& (0+255),b
 21331  0132BA  0E08               	movlw	8
 21332  0132BC  6F35               	movwf	(??_sprintf+1)& (0+255),b
 21333  0132BE  0101               	movlb	1	; () banked
 21334  0132C0  C14C  F136         	movff	sprintf@flag,??_sprintf+2
 21335  0132C4  0101               	movlb	1	; () banked
 21336  0132C6  C14D  F137         	movff	sprintf@flag+1,??_sprintf+3
 21337  0132CA  0101               	movlb	1	; () banked
 21338  0132CC  5134               	movf	??_sprintf& (0+255),w,b
 21339  0132CE  0101               	movlb	1	; () banked
 21340  0132D0  1736               	andwf	(??_sprintf+2)& (0+255),f,b
 21341  0132D2  0101               	movlb	1	; () banked
 21342  0132D4  5135               	movf	(??_sprintf+1)& (0+255),w,b
 21343  0132D6  0101               	movlb	1	; () banked
 21344  0132D8  1737               	andwf	(??_sprintf+3)& (0+255),f,b
 21345  0132DA  0101               	movlb	1	; () banked
 21346  0132DC  5137               	movf	(??_sprintf+3)& (0+255),w,b
 21347  0132DE  0A08               	xorlw	8
 21348  0132E0  0E80               	movlw	128
 21349  0132E2  B4D8               	btfsc	status,2,c
 21350  0132E4  1936               	xorwf	(??_sprintf+2)& (0+255),w,b
 21351  0132E6  A4D8               	btfss	status,2,c
 21352  0132E8  D133               	goto	l10634
 21353                           
 21354                           ; BSR set to: 1
 21355                           ;doprnt.c: 1467: ((*sp++ = ('0')));
 21356  0132EA  C124  FFD9         	movff	sprintf@sp,fsr2l
 21357  0132EE  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21358  0132F2  0E30               	movlw	48
 21359  0132F4  6EDF               	movwf	indf2,c
 21360                           
 21361                           ; BSR set to: 1
 21362  0132F6  0101               	movlb	1	; () banked
 21363  0132F8  4B24               	infsnz	sprintf@sp& (0+255),f,b
 21364  0132FA  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 21365                           
 21366                           ; BSR set to: 1
 21367                           ;doprnt.c: 1469: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 21368  0132FC  0101               	movlb	1	; () banked
 21369  0132FE  BB4C               	btfsc	sprintf@flag& (0+255),5,b
 21370  013300  D005               	goto	l10606
 21371                           
 21372                           ; BSR set to: 1
 21373  013302  0E00               	movlw	0
 21374  013304  0101               	movlb	1	; () banked
 21375  013306  6F3E               	movwf	(_sprintf$2292+1)& (0+255),b
 21376  013308  0E78               	movlw	120
 21377  01330A  D004               	goto	L30
 21378  01330C                     l10606:
 21379                           
 21380                           ; BSR set to: 1
 21381  01330C  0E00               	movlw	0
 21382  01330E  0101               	movlb	1	; () banked
 21383  013310  6F3E               	movwf	(_sprintf$2292+1)& (0+255),b
 21384  013312  0E58               	movlw	88
 21385  013314                     L30:
 21386  013314  0101               	movlb	1	; () banked
 21387  013316  6F3D               	movwf	_sprintf$2292& (0+255),b
 21388                           
 21389                           ; BSR set to: 1
 21390                           
 21391                           ; BSR set to: 1
 21392  013318  C124  FFD9         	movff	sprintf@sp,fsr2l
 21393  01331C  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21394  013320  0101               	movlb	1	; () banked
 21395  013322  C13D  FFDF         	movff	_sprintf$2292,indf2
 21396  013326  D111               	goto	L31
 21397  013328                     l10612:
 21398                           
 21399                           ; BSR set to: 1
 21400                           ;doprnt.c: 1495: case 0xC0:
 21401                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
 21402  013328  0101               	movlb	1	; () banked
 21403  01332A  C143  F134         	movff	sprintf@prec,??_sprintf
 21404  01332E  0101               	movlb	1	; () banked
 21405  013330  C144  F135         	movff	sprintf@prec+1,??_sprintf+1
 21406  013334  0101               	movlb	1	; () banked
 21407  013336  90D8               	bcf	status,0,c
 21408  013338  3734               	rlcf	??_sprintf& (0+255),f,b
 21409  01333A  3735               	rlcf	(??_sprintf+1)& (0+255),f,b
 21410  01333C  0101               	movlb	1	; () banked
 21411  01333E  90D8               	bcf	status,0,c
 21412  013340  3734               	rlcf	??_sprintf& (0+255),f,b
 21413  013342  3735               	rlcf	(??_sprintf+1)& (0+255),f,b
 21414  013344  0E79               	movlw	low _dpowers
 21415  013346  0101               	movlb	1	; () banked
 21416  013348  2534               	addwf	??_sprintf& (0+255),w,b
 21417  01334A  6EF6               	movwf	tblptrl,c
 21418  01334C  0EED               	movlw	high _dpowers
 21419  01334E  2135               	addwfc	(??_sprintf+1)& (0+255),w,b
 21420  013350  6EF7               	movwf	tblptrh,c
 21421  013352                     	if	1	;There are 3 active tblptr bytes
 21422  013352  6AF8               	clrf	tblptru,c
 21423  013354  0E00               	movlw	low (__mediumconst shr (0+16))
 21424  013356  22F8               	addwfc	tblptru,f,c
 21425  013358                     	endif
 21426  013358  0009               	tblrd		*+
 21427  01335A  0101               	movlb	1	; () banked
 21428  01335C  CFF5 F112          	movff	tablat,___lldiv@divisor
 21429  013360  0009               	tblrd		*+
 21430  013362  0101               	movlb	1	; () banked
 21431  013364  CFF5 F113          	movff	tablat,___lldiv@divisor+1
 21432  013368  0009               	tblrd		*+
 21433  01336A  0101               	movlb	1	; () banked
 21434  01336C  CFF5 F114          	movff	tablat,___lldiv@divisor+2
 21435  013370  000A               	tblrd		*-
 21436  013372  0101               	movlb	1	; () banked
 21437  013374  CFF5 F115          	movff	tablat,___lldiv@divisor+3
 21438  013378  C147  F10E         	movff	sprintf@_val,___lldiv@dividend
 21439  01337C  C148  F10F         	movff	sprintf@_val+1,___lldiv@dividend+1
 21440  013380  C149  F110         	movff	sprintf@_val+2,___lldiv@dividend+2
 21441  013384  C14A  F111         	movff	sprintf@_val+3,___lldiv@dividend+3
 21442  013388  ECF7  F0B0         	call	___lldiv	;wreg free
 21443  01338C  C10E  F11B         	movff	?___lldiv,___llmod@dividend
 21444  013390  C10F  F11C         	movff	?___lldiv+1,___llmod@dividend+1
 21445  013394  C110  F11D         	movff	?___lldiv+2,___llmod@dividend+2
 21446  013398  C111  F11E         	movff	?___lldiv+3,___llmod@dividend+3
 21447  01339C  0E0A               	movlw	10
 21448  01339E  0101               	movlb	1	; () banked
 21449  0133A0  6F1F               	movwf	___llmod@divisor& (0+255),b
 21450  0133A2  0E00               	movlw	0
 21451  0133A4  0101               	movlb	1	; () banked
 21452  0133A6  6F20               	movwf	(___llmod@divisor+1)& (0+255),b
 21453  0133A8  0E00               	movlw	0
 21454  0133AA  0101               	movlb	1	; () banked
 21455  0133AC  6F21               	movwf	(___llmod@divisor+2)& (0+255),b
 21456  0133AE  0E00               	movlw	0
 21457  0133B0  0101               	movlb	1	; () banked
 21458  0133B2  6F22               	movwf	(___llmod@divisor+3)& (0+255),b
 21459  0133B4  ECDB  F0B3         	call	___llmod	;wreg free
 21460  0133B8  C11B  F136         	movff	?___llmod,??_sprintf+2
 21461  0133BC  C11C  F137         	movff	?___llmod+1,??_sprintf+3
 21462  0133C0  C11D  F138         	movff	?___llmod+2,??_sprintf+4
 21463  0133C4  C11E  F139         	movff	?___llmod+3,??_sprintf+5
 21464  0133C8  0101               	movlb	1	; () banked
 21465  0133CA  5136               	movf	(??_sprintf+2)& (0+255),w,b
 21466  0133CC  D0A4               	goto	L32
 21467  0133CE                     l10614:
 21468                           
 21469                           ; BSR set to: 1
 21470                           ;doprnt.c: 1508: {
 21471                           ;doprnt.c: 1509: unsigned char idx = (_val._val / hexpowers[prec]) & 0xF;
 21472  0133CE  C147  F10E         	movff	sprintf@_val,___lldiv@dividend
 21473  0133D2  C148  F10F         	movff	sprintf@_val+1,___lldiv@dividend+1
 21474  0133D6  C149  F110         	movff	sprintf@_val+2,___lldiv@dividend+2
 21475  0133DA  C14A  F111         	movff	sprintf@_val+3,___lldiv@dividend+3
 21476  0133DE  0101               	movlb	1	; () banked
 21477  0133E0  C143  F134         	movff	sprintf@prec,??_sprintf
 21478  0133E4  0101               	movlb	1	; () banked
 21479  0133E6  C144  F135         	movff	sprintf@prec+1,??_sprintf+1
 21480  0133EA  0101               	movlb	1	; () banked
 21481  0133EC  90D8               	bcf	status,0,c
 21482  0133EE  3734               	rlcf	??_sprintf& (0+255),f,b
 21483  0133F0  3735               	rlcf	(??_sprintf+1)& (0+255),f,b
 21484  0133F2  0101               	movlb	1	; () banked
 21485  0133F4  90D8               	bcf	status,0,c
 21486  0133F6  3734               	rlcf	??_sprintf& (0+255),f,b
 21487  0133F8  3735               	rlcf	(??_sprintf+1)& (0+255),f,b
 21488  0133FA  0EA1               	movlw	low _hexpowers
 21489  0133FC  0101               	movlb	1	; () banked
 21490  0133FE  2534               	addwf	??_sprintf& (0+255),w,b
 21491  013400  6EF6               	movwf	tblptrl,c
 21492  013402  0EED               	movlw	high _hexpowers
 21493  013404  2135               	addwfc	(??_sprintf+1)& (0+255),w,b
 21494  013406  6EF7               	movwf	tblptrh,c
 21495  013408                     	if	1	;There are 3 active tblptr bytes
 21496  013408  6AF8               	clrf	tblptru,c
 21497  01340A  0E00               	movlw	low (__mediumconst shr (0+16))
 21498  01340C  22F8               	addwfc	tblptru,f,c
 21499  01340E                     	endif
 21500  01340E  0009               	tblrd		*+
 21501  013410  0101               	movlb	1	; () banked
 21502  013412  CFF5 F112          	movff	tablat,___lldiv@divisor
 21503  013416  0009               	tblrd		*+
 21504  013418  0101               	movlb	1	; () banked
 21505  01341A  CFF5 F113          	movff	tablat,___lldiv@divisor+1
 21506  01341E  0009               	tblrd		*+
 21507  013420  0101               	movlb	1	; () banked
 21508  013422  CFF5 F114          	movff	tablat,___lldiv@divisor+2
 21509  013426  000A               	tblrd		*-
 21510  013428  0101               	movlb	1	; () banked
 21511  01342A  CFF5 F115          	movff	tablat,___lldiv@divisor+3
 21512  01342E  ECF7  F0B0         	call	___lldiv	;wreg free
 21513  013432  C10E  F136         	movff	?___lldiv,??_sprintf+2
 21514  013436  C10F  F137         	movff	?___lldiv+1,??_sprintf+3
 21515  01343A  C110  F138         	movff	?___lldiv+2,??_sprintf+4
 21516  01343E  C111  F139         	movff	?___lldiv+3,??_sprintf+5
 21517  013442  0101               	movlb	1	; () banked
 21518  013444  5136               	movf	(??_sprintf+2)& (0+255),w,b
 21519  013446  0B0F               	andlw	15
 21520  013448  0101               	movlb	1	; () banked
 21521  01344A  6F3A               	movwf	sprintf@idx& (0+255),b
 21522                           
 21523                           ; BSR set to: 1
 21524                           ;doprnt.c: 1511: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 21525  01344C  0101               	movlb	1	; () banked
 21526  01344E  BB4C               	btfsc	sprintf@flag& (0+255),5,b
 21527  013450  D005               	goto	l10620
 21528                           
 21529                           ; BSR set to: 1
 21530  013452  0EF8               	movlw	high STR_319
 21531  013454  0101               	movlb	1	; () banked
 21532  013456  6F40               	movwf	(_sprintf$2298+1)& (0+255),b
 21533  013458  0EFF               	movlw	low STR_319
 21534  01345A  D004               	goto	L33
 21535  01345C                     l10620:
 21536                           
 21537                           ; BSR set to: 1
 21538  01345C  0EF8               	movlw	high STR_318
 21539  01345E  0101               	movlb	1	; () banked
 21540  013460  6F40               	movwf	(_sprintf$2298+1)& (0+255),b
 21541  013462  0EEE               	movlw	low STR_318
 21542  013464                     L33:
 21543  013464  0101               	movlb	1	; () banked
 21544  013466  6F3F               	movwf	_sprintf$2298& (0+255),b
 21545                           
 21546                           ; BSR set to: 1
 21547                           
 21548                           ; BSR set to: 1
 21549  013468  0101               	movlb	1	; () banked
 21550  01346A  513A               	movf	sprintf@idx& (0+255),w,b
 21551  01346C  0D01               	mullw	1
 21552  01346E  0101               	movlb	1	; () banked
 21553  013470  C13F  F134         	movff	_sprintf$2298,??_sprintf
 21554  013474  0101               	movlb	1	; () banked
 21555  013476  C140  F135         	movff	_sprintf$2298+1,??_sprintf+1
 21556  01347A  50F3               	movf	prodl,w,c
 21557  01347C  0101               	movlb	1	; () banked
 21558  01347E  2734               	addwf	??_sprintf& (0+255),f,b
 21559  013480  50F4               	movf	prodh,w,c
 21560  013482  0101               	movlb	1	; () banked
 21561  013484  2335               	addwfc	(??_sprintf+1)& (0+255),f,b
 21562  013486  C134  FFF6         	movff	??_sprintf,tblptrl
 21563  01348A  C135  FFF7         	movff	??_sprintf+1,tblptrh
 21564  01348E                     	if	0	;tblptru may be non-zero
 21565  01348E                     	endif
 21566  01348E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21567  01348E  0E00               	movlw	low (__mediumconst shr (0+16))
 21568  013490  6EF8               	movwf	tblptru,c
 21569  013492                     	endif
 21570  013492  0008               	tblrd		*
 21571  013494  0101               	movlb	1	; () banked
 21572  013496  CFF5 F14B          	movff	tablat,sprintf@c
 21573                           
 21574                           ;doprnt.c: 1517: }
 21575                           ;doprnt.c: 1519: break;
 21576  01349A  D050               	goto	l10630
 21577  01349C                     l10624:
 21578                           
 21579                           ; BSR set to: 1
 21580                           ;doprnt.c: 1527: c = ((_val._val / octpowers[prec]) & 07) + '0';
 21581  01349C  C147  F10E         	movff	sprintf@_val,___lldiv@dividend
 21582  0134A0  C148  F10F         	movff	sprintf@_val+1,___lldiv@dividend+1
 21583  0134A4  C149  F110         	movff	sprintf@_val+2,___lldiv@dividend+2
 21584  0134A8  C14A  F111         	movff	sprintf@_val+3,___lldiv@dividend+3
 21585  0134AC  0101               	movlb	1	; () banked
 21586  0134AE  C143  F134         	movff	sprintf@prec,??_sprintf
 21587  0134B2  0101               	movlb	1	; () banked
 21588  0134B4  C144  F135         	movff	sprintf@prec+1,??_sprintf+1
 21589  0134B8  0101               	movlb	1	; () banked
 21590  0134BA  90D8               	bcf	status,0,c
 21591  0134BC  3734               	rlcf	??_sprintf& (0+255),f,b
 21592  0134BE  3735               	rlcf	(??_sprintf+1)& (0+255),f,b
 21593  0134C0  0101               	movlb	1	; () banked
 21594  0134C2  90D8               	bcf	status,0,c
 21595  0134C4  3734               	rlcf	??_sprintf& (0+255),f,b
 21596  0134C6  3735               	rlcf	(??_sprintf+1)& (0+255),f,b
 21597  0134C8  0E49               	movlw	low _octpowers
 21598  0134CA  0101               	movlb	1	; () banked
 21599  0134CC  2534               	addwf	??_sprintf& (0+255),w,b
 21600  0134CE  6EF6               	movwf	tblptrl,c
 21601  0134D0  0EED               	movlw	high _octpowers
 21602  0134D2  2135               	addwfc	(??_sprintf+1)& (0+255),w,b
 21603  0134D4  6EF7               	movwf	tblptrh,c
 21604  0134D6                     	if	1	;There are 3 active tblptr bytes
 21605  0134D6  6AF8               	clrf	tblptru,c
 21606  0134D8  0E00               	movlw	low (__mediumconst shr (0+16))
 21607  0134DA  22F8               	addwfc	tblptru,f,c
 21608  0134DC                     	endif
 21609  0134DC  0009               	tblrd		*+
 21610  0134DE  0101               	movlb	1	; () banked
 21611  0134E0  CFF5 F112          	movff	tablat,___lldiv@divisor
 21612  0134E4  0009               	tblrd		*+
 21613  0134E6  0101               	movlb	1	; () banked
 21614  0134E8  CFF5 F113          	movff	tablat,___lldiv@divisor+1
 21615  0134EC  0009               	tblrd		*+
 21616  0134EE  0101               	movlb	1	; () banked
 21617  0134F0  CFF5 F114          	movff	tablat,___lldiv@divisor+2
 21618  0134F4  000A               	tblrd		*-
 21619  0134F6  0101               	movlb	1	; () banked
 21620  0134F8  CFF5 F115          	movff	tablat,___lldiv@divisor+3
 21621  0134FC  ECF7  F0B0         	call	___lldiv	;wreg free
 21622  013500  C10E  F136         	movff	?___lldiv,??_sprintf+2
 21623  013504  C10F  F137         	movff	?___lldiv+1,??_sprintf+3
 21624  013508  C110  F138         	movff	?___lldiv+2,??_sprintf+4
 21625  01350C  C111  F139         	movff	?___lldiv+3,??_sprintf+5
 21626  013510  0101               	movlb	1	; () banked
 21627  013512  5136               	movf	(??_sprintf+2)& (0+255),w,b
 21628  013514  0B07               	andlw	7
 21629  013516                     L32:
 21630  013516  0F30               	addlw	48
 21631  013518  0101               	movlb	1	; () banked
 21632  01351A  6F4B               	movwf	sprintf@c& (0+255),b
 21633                           
 21634                           ;doprnt.c: 1529: break;
 21635  01351C  D00F               	goto	l10630
 21636  01351E                     l10628:
 21637                           
 21638                           ; BSR set to: 1
 21639  01351E  0101               	movlb	1	; () banked
 21640  013520  514C               	movf	sprintf@flag& (0+255),w,b
 21641  013522  0BC0               	andlw	192
 21642                           
 21643                           ; Switch size 1, requested type "space"
 21644                           ; Number of cases is 4, Range of values is 0 to 192
 21645                           ; switch strategies available:
 21646                           ; Name         Instructions Cycles
 21647                           ; simple_byte           13     7 (average)
 21648                           ;	Chosen strategy is simple_byte
 21649  013524  0A00               	xorlw	0	; case 0
 21650  013526  B4D8               	btfsc	status,2,c
 21651  013528  D6FF               	goto	l10612
 21652  01352A  0A40               	xorlw	64	; case 64
 21653  01352C  B4D8               	btfsc	status,2,c
 21654  01352E  D7B6               	goto	l10624
 21655  013530  0AC0               	xorlw	192	; case 128
 21656  013532  B4D8               	btfsc	status,2,c
 21657  013534  D74C               	goto	l10614
 21658  013536  0A40               	xorlw	64	; case 192
 21659  013538  B4D8               	btfsc	status,2,c
 21660  01353A  D6F6               	goto	l10612
 21661  01353C                     l10630:
 21662                           
 21663                           ; BSR set to: 1
 21664                           ;doprnt.c: 1533: ((*sp++ = (c)));
 21665  01353C  C124  FFD9         	movff	sprintf@sp,fsr2l
 21666  013540  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21667  013544  0101               	movlb	1	; () banked
 21668  013546  C14B  FFDF         	movff	sprintf@c,indf2
 21669  01354A                     L31:
 21670                           
 21671                           ; BSR set to: 1
 21672  01354A  0101               	movlb	1	; () banked
 21673  01354C  4B24               	infsnz	sprintf@sp& (0+255),f,b
 21674  01354E  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 21675  013550                     l10634:
 21676                           
 21677                           ; BSR set to: 1
 21678  013550  0101               	movlb	1	; () banked
 21679  013552  0743               	decf	sprintf@prec& (0+255),f,b
 21680  013554  A0D8               	btfss	status,0,c
 21681  013556  0744               	decf	(sprintf@prec+1)& (0+255),f,b
 21682  013558  0101               	movlb	1	; () banked
 21683  01355A  2943               	incf	sprintf@prec& (0+255),w,b
 21684  01355C  B4D8               	btfsc	status,2,c
 21685  01355E  2944               	incf	(sprintf@prec+1)& (0+255),w,b
 21686  013560  A4D8               	btfss	status,2,c
 21687  013562  D7DD               	goto	l10628
 21688                           
 21689                           ; BSR set to: 1
 21690                           ;doprnt.c: 1534: }
 21691                           ;doprnt.c: 1537: if((flag & 0x08) && width > 0)
 21692  013564  0101               	movlb	1	; () banked
 21693  013566  A74C               	btfss	sprintf@flag& (0+255),3,b
 21694  013568  D01B               	goto	l10644
 21695                           
 21696                           ; BSR set to: 1
 21697  01356A  0101               	movlb	1	; () banked
 21698  01356C  5146               	movf	(sprintf@width+1)& (0+255),w,b
 21699  01356E  0A80               	xorlw	128
 21700  013570  0F80               	addlw	-128
 21701  013572  0E01               	movlw	1
 21702  013574  B4D8               	btfsc	status,2,c
 21703  013576  5D45               	subwf	sprintf@width& (0+255),w,b
 21704  013578  A0D8               	btfss	status,0,c
 21705  01357A  D012               	goto	l10644
 21706  01357C                     l10638:
 21707                           
 21708                           ; BSR set to: 1
 21709                           ;doprnt.c: 1539: ((*sp++ = (' ')));
 21710  01357C  C124  FFD9         	movff	sprintf@sp,fsr2l
 21711  013580  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21712  013584  0E20               	movlw	32
 21713  013586  6EDF               	movwf	indf2,c
 21714                           
 21715                           ; BSR set to: 1
 21716  013588  0101               	movlb	1	; () banked
 21717  01358A  4B24               	infsnz	sprintf@sp& (0+255),f,b
 21718  01358C  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 21719                           
 21720                           ; BSR set to: 1
 21721                           ;doprnt.c: 1540: while(--width);
 21722  01358E  0101               	movlb	1	; () banked
 21723  013590  0745               	decf	sprintf@width& (0+255),f,b
 21724  013592  A0D8               	btfss	status,0,c
 21725  013594  0746               	decf	(sprintf@width+1)& (0+255),f,b
 21726  013596  0101               	movlb	1	; () banked
 21727  013598  5146               	movf	(sprintf@width+1)& (0+255),w,b
 21728  01359A  1145               	iorwf	sprintf@width& (0+255),w,b
 21729  01359C  A4D8               	btfss	status,2,c
 21730  01359E  D7EE               	goto	l10638
 21731  0135A0                     l10644:
 21732                           
 21733                           ; BSR set to: 1
 21734  0135A0  0101               	movlb	1	; () banked
 21735  0135A2  C126  FFF6         	movff	sprintf@f,tblptrl
 21736  0135A6  0101               	movlb	1	; () banked
 21737  0135A8  C127  FFF7         	movff	sprintf@f+1,tblptrh
 21738  0135AC  0101               	movlb	1	; () banked
 21739  0135AE  4B26               	infsnz	sprintf@f& (0+255),f,b
 21740  0135B0  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 21741  0135B2                     	if	0	;tblptru may be non-zero
 21742  0135B2                     	endif
 21743  0135B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21744  0135B2  0E00               	movlw	low (__mediumconst shr (0+16))
 21745  0135B4  6EF8               	movwf	tblptru,c
 21746  0135B6                     	endif
 21747  0135B6  0008               	tblrd		*
 21748  0135B8  0101               	movlb	1	; () banked
 21749  0135BA  CFF5 F14B          	movff	tablat,sprintf@c
 21750  0135BE  0101               	movlb	1	; () banked
 21751  0135C0  674B               	tstfsz	sprintf@c& (0+255),b
 21752  0135C2  EF76  F094         	goto	l10292
 21753  0135C6                     l10646:
 21754                           
 21755                           ; BSR set to: 1
 21756                           ;doprnt.c: 1547: *sp = 0;
 21757  0135C6  C124  FFD9         	movff	sprintf@sp,fsr2l
 21758  0135CA  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21759  0135CE  0E00               	movlw	0
 21760  0135D0  6EDF               	movwf	indf2,c
 21761  0135D2  0012               	return	
 21762  0135D4                     __end_of_sprintf:
 21763                           	opt stack 0
 21764                           tblptru	equ	0xFF8
 21765                           tblptrh	equ	0xFF7
 21766                           tblptrl	equ	0xFF6
 21767                           tablat	equ	0xFF5
 21768                           prodh	equ	0xFF4
 21769                           prodl	equ	0xFF3
 21770                           intcon	equ	0xFF2
 21771                           postinc0	equ	0xFEE
 21772                           wreg	equ	0xFE8
 21773                           indf1	equ	0xFE7
 21774                           postinc1	equ	0xFE6
 21775                           postdec1	equ	0xFE5
 21776                           fsr1h	equ	0xFE2
 21777                           fsr1l	equ	0xFE1
 21778                           indf2	equ	0xFDF
 21779                           postinc2	equ	0xFDE
 21780                           postdec2	equ	0xFDD
 21781                           fsr2h	equ	0xFDA
 21782                           fsr2l	equ	0xFD9
 21783                           status	equ	0xFD8
 21784                           
 21785 ;; *************** function _isdigit *****************
 21786 ;; Defined at:
 21787 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
 21788 ;; Parameters:    Size  Location     Type
 21789 ;;  c               1    wreg     unsigned char 
 21790 ;; Auto vars:     Size  Location     Type
 21791 ;;  c               1   16[BANK1 ] unsigned char 
 21792 ;; Return value:  Size  Location     Type
 21793 ;;		None               void
 21794 ;; Registers used:
 21795 ;;		wreg, status,2, status,0
 21796 ;; Tracked objects:
 21797 ;;		On entry : 0/0
 21798 ;;		On exit  : 0/0
 21799 ;;		Unchanged: 0/0
 21800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21802 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 21803 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21804 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 21805 ;;Total ram usage:        3 bytes
 21806 ;; Hardware stack levels used:    1
 21807 ;; Hardware stack levels required when called:    6
 21808 ;; This function calls:
 21809 ;;		Nothing
 21810 ;; This function is called by:
 21811 ;;		_sprintf
 21812 ;; This function uses a non-reentrant model
 21813 ;;
 21814                           
 21815                           	psect	text33
 21816  017B04                     __ptext33:
 21817                           	opt stack 0
 21818  017B04                     _isdigit:
 21819                           	opt stack 21
 21820                           
 21821                           ; BSR set to: 1
 21822                           ;incstack = 0
 21823                           ;isdigit@c stored from wreg
 21824  017B04  0101               	movlb	1	; () banked
 21825  017B06  6F10               	movwf	isdigit@c& (0+255),b
 21826                           
 21827                           ; BSR set to: 1
 21828  017B08  0E00               	movlw	0
 21829  017B0A  0101               	movlb	1	; () banked
 21830  017B0C  6F0F               	movwf	_isdigit$2640& (0+255),b
 21831                           
 21832                           ; BSR set to: 1
 21833  017B0E  0E3A               	movlw	58
 21834  017B10  0101               	movlb	1	; () banked
 21835  017B12  5D10               	subwf	isdigit@c& (0+255),w,b
 21836  017B14  B0D8               	btfsc	status,0,c
 21837  017B16  D007               	goto	l10078
 21838                           
 21839                           ; BSR set to: 1
 21840  017B18  0E2F               	movlw	47
 21841  017B1A  0101               	movlb	1	; () banked
 21842  017B1C  6510               	cpfsgt	isdigit@c& (0+255),b
 21843  017B1E  D003               	goto	l10078
 21844                           
 21845                           ; BSR set to: 1
 21846  017B20  0E01               	movlw	1
 21847  017B22  0101               	movlb	1	; () banked
 21848  017B24  6F0F               	movwf	_isdigit$2640& (0+255),b
 21849  017B26                     l10078:
 21850                           
 21851                           ; BSR set to: 1
 21852  017B26  C10F  F10E         	movff	_isdigit$2640,??_isdigit
 21853  017B2A  0101               	movlb	1	; () banked
 21854  017B2C  310E               	rrcf	??_isdigit& (0+255),w,b
 21855  017B2E  0012               	return	
 21856  017B30                     __end_of_isdigit:
 21857                           	opt stack 0
 21858                           tblptru	equ	0xFF8
 21859                           tblptrh	equ	0xFF7
 21860                           tblptrl	equ	0xFF6
 21861                           tablat	equ	0xFF5
 21862                           prodh	equ	0xFF4
 21863                           prodl	equ	0xFF3
 21864                           intcon	equ	0xFF2
 21865                           postinc0	equ	0xFEE
 21866                           wreg	equ	0xFE8
 21867                           indf1	equ	0xFE7
 21868                           postinc1	equ	0xFE6
 21869                           postdec1	equ	0xFE5
 21870                           fsr1h	equ	0xFE2
 21871                           fsr1l	equ	0xFE1
 21872                           indf2	equ	0xFDF
 21873                           postinc2	equ	0xFDE
 21874                           postdec2	equ	0xFDD
 21875                           fsr2h	equ	0xFDA
 21876                           fsr2l	equ	0xFD9
 21877                           status	equ	0xFD8
 21878                           
 21879 ;; *************** function ___wmul *****************
 21880 ;; Defined at:
 21881 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
 21882 ;; Parameters:    Size  Location     Type
 21883 ;;  multiplier      2   14[BANK1 ] unsigned int 
 21884 ;;  multiplicand    2   16[BANK1 ] unsigned int 
 21885 ;; Auto vars:     Size  Location     Type
 21886 ;;  product         2   18[BANK1 ] unsigned int 
 21887 ;; Return value:  Size  Location     Type
 21888 ;;                  2   14[BANK1 ] unsigned int 
 21889 ;; Registers used:
 21890 ;;		wreg, status,2, status,0, prodl, prodh
 21891 ;; Tracked objects:
 21892 ;;		On entry : 0/0
 21893 ;;		On exit  : 0/0
 21894 ;;		Unchanged: 0/0
 21895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21896 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 21897 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 21898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21899 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 21900 ;;Total ram usage:        6 bytes
 21901 ;; Hardware stack levels used:    1
 21902 ;; Hardware stack levels required when called:    6
 21903 ;; This function calls:
 21904 ;;		Nothing
 21905 ;; This function is called by:
 21906 ;;		_SetFreq
 21907 ;;		_sprintf
 21908 ;; This function uses a non-reentrant model
 21909 ;;
 21910                           
 21911                           	psect	text34
 21912  01797E                     __ptext34:
 21913                           	opt stack 0
 21914  01797E                     ___wmul:
 21915                           	opt stack 21
 21916                           
 21917                           ; BSR set to: 1
 21918                           ;incstack = 0
 21919  01797E  0101               	movlb	1	; () banked
 21920  017980  510E               	movf	___wmul@multiplier& (0+255),w,b
 21921  017982  0101               	movlb	1	; () banked
 21922  017984  0310               	mulwf	___wmul@multiplicand& (0+255),b
 21923  017986  CFF3 F112          	movff	prodl,___wmul@product
 21924  01798A  CFF4 F113          	movff	prodh,___wmul@product+1
 21925  01798E  0101               	movlb	1	; () banked
 21926  017990  510E               	movf	___wmul@multiplier& (0+255),w,b
 21927  017992  0101               	movlb	1	; () banked
 21928  017994  0311               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 21929  017996  50F3               	movf	prodl,w,c
 21930  017998  0101               	movlb	1	; () banked
 21931  01799A  2713               	addwf	(___wmul@product+1)& (0+255),f,b
 21932  01799C  0101               	movlb	1	; () banked
 21933  01799E  510F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 21934  0179A0  0101               	movlb	1	; () banked
 21935  0179A2  0310               	mulwf	___wmul@multiplicand& (0+255),b
 21936  0179A4  50F3               	movf	prodl,w,c
 21937  0179A6  0101               	movlb	1	; () banked
 21938  0179A8  2713               	addwf	(___wmul@product+1)& (0+255),f,b
 21939                           
 21940                           ; BSR set to: 1
 21941  0179AA  C112  F10E         	movff	___wmul@product,?___wmul
 21942  0179AE  C113  F10F         	movff	___wmul@product+1,?___wmul+1
 21943  0179B2  0012               	return	
 21944  0179B4                     __end_of___wmul:
 21945                           	opt stack 0
 21946                           tblptru	equ	0xFF8
 21947                           tblptrh	equ	0xFF7
 21948                           tblptrl	equ	0xFF6
 21949                           tablat	equ	0xFF5
 21950                           prodh	equ	0xFF4
 21951                           prodl	equ	0xFF3
 21952                           intcon	equ	0xFF2
 21953                           postinc0	equ	0xFEE
 21954                           wreg	equ	0xFE8
 21955                           indf1	equ	0xFE7
 21956                           postinc1	equ	0xFE6
 21957                           postdec1	equ	0xFE5
 21958                           fsr1h	equ	0xFE2
 21959                           fsr1l	equ	0xFE1
 21960                           indf2	equ	0xFDF
 21961                           postinc2	equ	0xFDE
 21962                           postdec2	equ	0xFDD
 21963                           fsr2h	equ	0xFDA
 21964                           fsr2l	equ	0xFD9
 21965                           status	equ	0xFD8
 21966                           
 21967 ;; *************** function ___llmod *****************
 21968 ;; Defined at:
 21969 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
 21970 ;; Parameters:    Size  Location     Type
 21971 ;;  dividend        4   27[BANK1 ] unsigned long 
 21972 ;;  divisor         4   31[BANK1 ] unsigned long 
 21973 ;; Auto vars:     Size  Location     Type
 21974 ;;  counter         1   35[BANK1 ] unsigned char 
 21975 ;; Return value:  Size  Location     Type
 21976 ;;                  4   27[BANK1 ] unsigned long 
 21977 ;; Registers used:
 21978 ;;		wreg, status,2, status,0
 21979 ;; Tracked objects:
 21980 ;;		On entry : 0/0
 21981 ;;		On exit  : 0/0
 21982 ;;		Unchanged: 0/0
 21983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21984 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 21985 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21987 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 21988 ;;Total ram usage:        9 bytes
 21989 ;; Hardware stack levels used:    1
 21990 ;; Hardware stack levels required when called:    6
 21991 ;; This function calls:
 21992 ;;		Nothing
 21993 ;; This function is called by:
 21994 ;;		_sprintf
 21995 ;; This function uses a non-reentrant model
 21996 ;;
 21997                           
 21998                           	psect	text35
 21999  0167B6                     __ptext35:
 22000                           	opt stack 0
 22001  0167B6                     ___llmod:
 22002                           	opt stack 21
 22003                           
 22004                           ; BSR set to: 1
 22005                           ;incstack = 0
 22006  0167B6  0101               	movlb	1	; () banked
 22007  0167B8  5122               	movf	(___llmod@divisor+3)& (0+255),w,b
 22008  0167BA  111F               	iorwf	___llmod@divisor& (0+255),w,b
 22009  0167BC  1120               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 22010  0167BE  1121               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 22011  0167C0  B4D8               	btfsc	status,2,c
 22012  0167C2  D042               	goto	l2076
 22013                           
 22014                           ; BSR set to: 1
 22015  0167C4  0E01               	movlw	1
 22016  0167C6  0101               	movlb	1	; () banked
 22017  0167C8  6F23               	movwf	___llmod@counter& (0+255),b
 22018  0167CA  D00C               	goto	l10150
 22019  0167CC                     l10148:
 22020                           
 22021                           ; BSR set to: 1
 22022  0167CC  0101               	movlb	1	; () banked
 22023  0167CE  90D8               	bcf	status,0,c
 22024  0167D0  0101               	movlb	1	; () banked
 22025  0167D2  371F               	rlcf	___llmod@divisor& (0+255),f,b
 22026  0167D4  0101               	movlb	1	; () banked
 22027  0167D6  3720               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 22028  0167D8  0101               	movlb	1	; () banked
 22029  0167DA  3721               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 22030  0167DC  0101               	movlb	1	; () banked
 22031  0167DE  3722               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 22032  0167E0  0101               	movlb	1	; () banked
 22033  0167E2  2B23               	incf	___llmod@counter& (0+255),f,b
 22034  0167E4                     l10150:
 22035                           
 22036                           ; BSR set to: 1
 22037  0167E4  0101               	movlb	1	; () banked
 22038  0167E6  AF22               	btfss	(___llmod@divisor+3)& (0+255),7,b
 22039  0167E8  D7F1               	goto	l10148
 22040  0167EA                     l10152:
 22041                           
 22042                           ; BSR set to: 1
 22043  0167EA  0101               	movlb	1	; () banked
 22044  0167EC  511F               	movf	___llmod@divisor& (0+255),w,b
 22045  0167EE  0101               	movlb	1	; () banked
 22046  0167F0  5D1B               	subwf	___llmod@dividend& (0+255),w,b
 22047  0167F2  0101               	movlb	1	; () banked
 22048  0167F4  5120               	movf	(___llmod@divisor+1)& (0+255),w,b
 22049  0167F6  0101               	movlb	1	; () banked
 22050  0167F8  591C               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 22051  0167FA  0101               	movlb	1	; () banked
 22052  0167FC  5121               	movf	(___llmod@divisor+2)& (0+255),w,b
 22053  0167FE  0101               	movlb	1	; () banked
 22054  016800  591D               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 22055  016802  0101               	movlb	1	; () banked
 22056  016804  5122               	movf	(___llmod@divisor+3)& (0+255),w,b
 22057  016806  0101               	movlb	1	; () banked
 22058  016808  591E               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 22059  01680A  A0D8               	btfss	status,0,c
 22060  01680C  D010               	goto	l10156
 22061                           
 22062                           ; BSR set to: 1
 22063  01680E  0101               	movlb	1	; () banked
 22064  016810  511F               	movf	___llmod@divisor& (0+255),w,b
 22065  016812  0101               	movlb	1	; () banked
 22066  016814  5F1B               	subwf	___llmod@dividend& (0+255),f,b
 22067  016816  0101               	movlb	1	; () banked
 22068  016818  5120               	movf	(___llmod@divisor+1)& (0+255),w,b
 22069  01681A  0101               	movlb	1	; () banked
 22070  01681C  5B1C               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 22071  01681E  0101               	movlb	1	; () banked
 22072  016820  5121               	movf	(___llmod@divisor+2)& (0+255),w,b
 22073  016822  0101               	movlb	1	; () banked
 22074  016824  5B1D               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 22075  016826  0101               	movlb	1	; () banked
 22076  016828  5122               	movf	(___llmod@divisor+3)& (0+255),w,b
 22077  01682A  0101               	movlb	1	; () banked
 22078  01682C  5B1E               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 22079  01682E                     l10156:
 22080                           
 22081                           ; BSR set to: 1
 22082  01682E  0101               	movlb	1	; () banked
 22083  016830  90D8               	bcf	status,0,c
 22084  016832  0101               	movlb	1	; () banked
 22085  016834  3322               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 22086  016836  0101               	movlb	1	; () banked
 22087  016838  3321               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 22088  01683A  0101               	movlb	1	; () banked
 22089  01683C  3320               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 22090  01683E  0101               	movlb	1	; () banked
 22091  016840  331F               	rrcf	___llmod@divisor& (0+255),f,b
 22092                           
 22093                           ; BSR set to: 1
 22094  016842  0101               	movlb	1	; () banked
 22095  016844  2F23               	decfsz	___llmod@counter& (0+255),f,b
 22096  016846  D7D1               	goto	l10152
 22097  016848                     l2076:
 22098                           
 22099                           ; BSR set to: 1
 22100  016848  C11B  F11B         	movff	___llmod@dividend,?___llmod
 22101  01684C  C11C  F11C         	movff	___llmod@dividend+1,?___llmod+1
 22102  016850  C11D  F11D         	movff	___llmod@dividend+2,?___llmod+2
 22103  016854  C11E  F11E         	movff	___llmod@dividend+3,?___llmod+3
 22104                           
 22105                           ; BSR set to: 1
 22106  016858  0012               	return	
 22107  01685A                     __end_of___llmod:
 22108                           	opt stack 0
 22109                           tblptru	equ	0xFF8
 22110                           tblptrh	equ	0xFF7
 22111                           tblptrl	equ	0xFF6
 22112                           tablat	equ	0xFF5
 22113                           prodh	equ	0xFF4
 22114                           prodl	equ	0xFF3
 22115                           intcon	equ	0xFF2
 22116                           postinc0	equ	0xFEE
 22117                           wreg	equ	0xFE8
 22118                           indf1	equ	0xFE7
 22119                           postinc1	equ	0xFE6
 22120                           postdec1	equ	0xFE5
 22121                           fsr1h	equ	0xFE2
 22122                           fsr1l	equ	0xFE1
 22123                           indf2	equ	0xFDF
 22124                           postinc2	equ	0xFDE
 22125                           postdec2	equ	0xFDD
 22126                           fsr2h	equ	0xFDA
 22127                           fsr2l	equ	0xFD9
 22128                           status	equ	0xFD8
 22129                           
 22130 ;; *************** function _UARTstringWAIT *****************
 22131 ;; Defined at:
 22132 ;;		line 294 in file "UART.c"
 22133 ;; Parameters:    Size  Location     Type
 22134 ;;  data            2   25[BANK1 ] PTR unsigned char 
 22135 ;;		 -> STR_32(18), STR_31(17), STR_30(24), STR_29(23), 
 22136 ;; Auto vars:     Size  Location     Type
 22137 ;;		None
 22138 ;; Return value:  Size  Location     Type
 22139 ;;		None               void
 22140 ;; Registers used:
 22141 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22142 ;; Tracked objects:
 22143 ;;		On entry : 0/0
 22144 ;;		On exit  : 0/0
 22145 ;;		Unchanged: 0/0
 22146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22147 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22150 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22151 ;;Total ram usage:        2 bytes
 22152 ;; Hardware stack levels used:    1
 22153 ;; Hardware stack levels required when called:    8
 22154 ;; This function calls:
 22155 ;;		_UARTchar
 22156 ;;		_delayUS
 22157 ;; This function is called by:
 22158 ;;		_SetBaud
 22159 ;; This function uses a non-reentrant model
 22160 ;;
 22161                           
 22162                           	psect	text36
 22163  016FAA                     __ptext36:
 22164                           	opt stack 0
 22165  016FAA                     _UARTstringWAIT:
 22166                           	opt stack 19
 22167  016FAA                     l449:
 22168                           
 22169                           ;UART.c: 297: {
 22170                           ;UART.c: 298: delayUS(5000);
 22171  016FAA  0E88               	movlw	136
 22172  016FAC  0101               	movlb	1	; () banked
 22173  016FAE  6F0E               	movwf	delayUS@US& (0+255),b
 22174  016FB0  0E13               	movlw	19
 22175  016FB2  0101               	movlb	1	; () banked
 22176  016FB4  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 22177  016FB6  0E00               	movlw	0
 22178  016FB8  0101               	movlb	1	; () banked
 22179  016FBA  6F10               	movwf	(delayUS@US+2)& (0+255),b
 22180  016FBC  0E00               	movlw	0
 22181  016FBE  0101               	movlb	1	; () banked
 22182  016FC0  6F11               	movwf	(delayUS@US+3)& (0+255),b
 22183  016FC2  EC10  F0B9         	call	_delayUS	;wreg free
 22184                           
 22185                           ;UART.c: 299: if(*data != 0)
 22186  016FC6  0101               	movlb	1	; () banked
 22187  016FC8  C119  FFF6         	movff	UARTstringWAIT@data,tblptrl
 22188  016FCC  0101               	movlb	1	; () banked
 22189  016FCE  C11A  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 22190  016FD2                     	if	0	;tblptru may be non-zero
 22191  016FD2                     	endif
 22192  016FD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22193  016FD2  0E00               	movlw	low (__mediumconst shr (0+16))
 22194  016FD4  6EF8               	movwf	tblptru,c
 22195  016FD6                     	endif
 22196  016FD6  0008               	tblrd		*
 22197  016FD8  50F5               	movf	tablat,w,c
 22198  016FDA  0900               	iorlw	0
 22199  016FDC  B4D8               	btfsc	status,2,c
 22200  016FDE  D014               	goto	l10288
 22201                           
 22202                           ; BSR set to: 1
 22203                           ;UART.c: 300: {
 22204                           ;UART.c: 301: UARTchar(*data, 0, 0);
 22205  016FE0  0E00               	movlw	0
 22206  016FE2  0101               	movlb	1	; () banked
 22207  016FE4  6F15               	movwf	UARTchar@NinethBit_override& (0+255),b
 22208  016FE6  0E00               	movlw	0
 22209  016FE8  0101               	movlb	1	; () banked
 22210  016FEA  6F16               	movwf	UARTchar@NinethBit_override_data& (0+255),b
 22211  016FEC  0101               	movlb	1	; () banked
 22212  016FEE  C119  FFF6         	movff	UARTstringWAIT@data,tblptrl
 22213  016FF2  0101               	movlb	1	; () banked
 22214  016FF4  C11A  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 22215  016FF8                     	if	0	;tblptru may be non-zero
 22216  016FF8                     	endif
 22217  016FF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22218  016FF8  0E00               	movlw	low (__mediumconst shr (0+16))
 22219  016FFA  6EF8               	movwf	tblptru,c
 22220  016FFC                     	endif
 22221  016FFC  0008               	tblrd		*
 22222  016FFE  50F5               	movf	tablat,w,c
 22223  017000  EC15  F0B8         	call	_UARTchar
 22224  017004                     l451:
 22225  017004  A2AC               	btfss	4012,1,c	;volatile
 22226  017006  D7FE               	goto	l451
 22227  017008                     l10288:
 22228                           
 22229                           ;UART.c: 303: }
 22230                           ;UART.c: 304: } while( *data++);
 22231  017008  0101               	movlb	1	; () banked
 22232  01700A  C119  FFF6         	movff	UARTstringWAIT@data,tblptrl
 22233  01700E  0101               	movlb	1	; () banked
 22234  017010  C11A  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 22235  017014  0101               	movlb	1	; () banked
 22236  017016  4B19               	infsnz	UARTstringWAIT@data& (0+255),f,b
 22237  017018  2B1A               	incf	(UARTstringWAIT@data+1)& (0+255),f,b
 22238  01701A                     	if	0	;tblptru may be non-zero
 22239  01701A                     	endif
 22240  01701A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22241  01701A  0E00               	movlw	low (__mediumconst shr (0+16))
 22242  01701C  6EF8               	movwf	tblptru,c
 22243  01701E                     	endif
 22244  01701E  0008               	tblrd		*
 22245  017020  50F5               	movf	tablat,w,c
 22246  017022  0900               	iorlw	0
 22247  017024  B4D8               	btfsc	status,2,c
 22248                           
 22249                           ; BSR set to: 1
 22250                           
 22251                           ; BSR set to: 1
 22252  017026  0012               	return	
 22253  017028  D7C0               	goto	l449
 22254  01702A                     __end_of_UARTstringWAIT:
 22255                           	opt stack 0
 22256                           tblptru	equ	0xFF8
 22257                           tblptrh	equ	0xFF7
 22258                           tblptrl	equ	0xFF6
 22259                           tablat	equ	0xFF5
 22260                           prodh	equ	0xFF4
 22261                           prodl	equ	0xFF3
 22262                           intcon	equ	0xFF2
 22263                           postinc0	equ	0xFEE
 22264                           wreg	equ	0xFE8
 22265                           indf1	equ	0xFE7
 22266                           postinc1	equ	0xFE6
 22267                           postdec1	equ	0xFE5
 22268                           fsr1h	equ	0xFE2
 22269                           fsr1l	equ	0xFE1
 22270                           indf2	equ	0xFDF
 22271                           postinc2	equ	0xFDE
 22272                           postdec2	equ	0xFDD
 22273                           fsr2h	equ	0xFDA
 22274                           fsr2l	equ	0xFD9
 22275                           status	equ	0xFD8
 22276                           
 22277 ;; *************** function _InitUART *****************
 22278 ;; Defined at:
 22279 ;;		line 68 in file "UART.c"
 22280 ;; Parameters:    Size  Location     Type
 22281 ;;  Baud            4   27[BANK1 ] unsigned long 
 22282 ;;  parity          1   31[BANK1 ] unsigned char 
 22283 ;; Auto vars:     Size  Location     Type
 22284 ;;  temp            4   40[BANK1 ] unsigned long 
 22285 ;;  spbrg           2   36[BANK1 ] unsigned int 
 22286 ;;  config          1   39[BANK1 ] unsigned char 
 22287 ;;  baudconfig      1   38[BANK1 ] unsigned char 
 22288 ;; Return value:  Size  Location     Type
 22289 ;;		None               void
 22290 ;; Registers used:
 22291 ;;		wreg, status,2, status,0, cstack
 22292 ;; Tracked objects:
 22293 ;;		On entry : 0/0
 22294 ;;		On exit  : 0/0
 22295 ;;		Unchanged: 0/0
 22296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22297 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 22298 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 22299 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22300 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
 22301 ;;Total ram usage:       17 bytes
 22302 ;; Hardware stack levels used:    1
 22303 ;; Hardware stack levels required when called:    7
 22304 ;; This function calls:
 22305 ;;		_OpenUSART
 22306 ;;		_ReadUSART
 22307 ;;		___lldiv
 22308 ;;		_baudUSART
 22309 ;; This function is called by:
 22310 ;;		_main
 22311 ;;		_SetBaud
 22312 ;; This function uses a non-reentrant model
 22313 ;;
 22314                           
 22315                           	psect	text37
 22316  015088                     __ptext37:
 22317                           	opt stack 0
 22318  015088                     _InitUART:
 22319                           	opt stack 22
 22320                           
 22321                           ;UART.c: 70: unsigned long temp;
 22322                           ;UART.c: 71: unsigned char config;
 22323                           ;UART.c: 72: unsigned int spbrg;
 22324                           ;UART.c: 73: unsigned char baudconfig;
 22325                           ;UART.c: 83: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
 22326                           
 22327                           ; BSR set to: 1
 22328                           ;incstack = 0
 22329  015088  0E4F               	movlw	79
 22330  01508A  16AB               	andwf	4011,f,c	;volatile
 22331  01508C  9AAC               	bcf	4012,5,c	;volatile
 22332  01508E  0ECF               	movlw	207
 22333  015090  169D               	andwf	3997,f,c	;volatile
 22334                           
 22335                           ;UART.c: 84: config =0;
 22336  015092  0E00               	movlw	0
 22337  015094  0101               	movlb	1	; () banked
 22338  015096  6F27               	movwf	InitUART@config& (0+255),b
 22339                           
 22340                           ; BSR set to: 1
 22341                           ;UART.c: 85: baudconfig =0;
 22342  015098  0E00               	movlw	0
 22343  01509A  0101               	movlb	1	; () banked
 22344  01509C  6F26               	movwf	InitUART@baudconfig& (0+255),b
 22345                           
 22346                           ; BSR set to: 1
 22347                           ;UART.c: 86: BAUDCON =0;
 22348  01509E  0E00               	movlw	0
 22349  0150A0  6EB8               	movwf	4024,c	;volatile
 22350                           
 22351                           ; BSR set to: 1
 22352                           ;UART.c: 90: config |= 0b01000000;
 22353  0150A2  0101               	movlb	1	; () banked
 22354  0150A4  8D27               	bsf	InitUART@config& (0+255),6,b
 22355                           
 22356                           ; BSR set to: 1
 22357                           ;UART.c: 91: config |= 0b00001000;
 22358  0150A6  0101               	movlb	1	; () banked
 22359  0150A8  8727               	bsf	InitUART@config& (0+255),3,b
 22360                           
 22361                           ; BSR set to: 1
 22362                           ;UART.c: 93: config |= 0b00010000;
 22363  0150AA  0101               	movlb	1	; () banked
 22364  0150AC  8927               	bsf	InitUART@config& (0+255),4,b
 22365                           
 22366                           ; BSR set to: 1
 22367                           ;UART.c: 95: PARITY = parity;
 22368  0150AE  C11F  F196         	movff	InitUART@parity,_PARITY
 22369                           
 22370                           ; BSR set to: 1
 22371                           ;UART.c: 96: BAUD = Baud;
 22372  0150B2  C11B  F1EA         	movff	InitUART@Baud,_BAUD
 22373  0150B6  C11C  F1EB         	movff	InitUART@Baud+1,_BAUD+1
 22374  0150BA  C11D  F1EC         	movff	InitUART@Baud+2,_BAUD+2
 22375  0150BE  C11E  F1ED         	movff	InitUART@Baud+3,_BAUD+3
 22376                           
 22377                           ; BSR set to: 1
 22378                           ;UART.c: 97: if(parity)
 22379  0150C2  0101               	movlb	1	; () banked
 22380  0150C4  511F               	movf	InitUART@parity& (0+255),w,b
 22381  0150C6  B4D8               	btfsc	status,2,c
 22382  0150C8  D003               	goto	l10258
 22383                           
 22384                           ; BSR set to: 1
 22385                           ;UART.c: 98: {
 22386                           ;UART.c: 99: config |= 0b00000010;
 22387  0150CA  0101               	movlb	1	; () banked
 22388  0150CC  8327               	bsf	InitUART@config& (0+255),1,b
 22389                           
 22390                           ;UART.c: 100: }
 22391  0150CE  D002               	goto	l397
 22392  0150D0                     l10258:
 22393                           
 22394                           ; BSR set to: 1
 22395                           ;UART.c: 101: else
 22396                           ;UART.c: 102: {
 22397                           ;UART.c: 103: config &= ~0b00000010;
 22398  0150D0  0101               	movlb	1	; () banked
 22399  0150D2  9327               	bcf	InitUART@config& (0+255),1,b
 22400  0150D4                     l397:
 22401                           
 22402                           ; BSR set to: 1
 22403                           ;UART.c: 104: }
 22404                           ;UART.c: 105: baudconfig |= 0b00001000;
 22405  0150D4  0101               	movlb	1	; () banked
 22406  0150D6  8726               	bsf	InitUART@baudconfig& (0+255),3,b
 22407                           
 22408                           ; BSR set to: 1
 22409                           ;UART.c: 108: temp = (40960000L / Baud) - 1;
 22410  0150D8  0E00               	movlw	0
 22411  0150DA  0101               	movlb	1	; () banked
 22412  0150DC  6F0E               	movwf	___lldiv@dividend& (0+255),b
 22413  0150DE  0E00               	movlw	0
 22414  0150E0  0101               	movlb	1	; () banked
 22415  0150E2  6F0F               	movwf	(___lldiv@dividend+1)& (0+255),b
 22416  0150E4  0E71               	movlw	113
 22417  0150E6  0101               	movlb	1	; () banked
 22418  0150E8  6F10               	movwf	(___lldiv@dividend+2)& (0+255),b
 22419  0150EA  0E02               	movlw	2
 22420  0150EC  0101               	movlb	1	; () banked
 22421  0150EE  6F11               	movwf	(___lldiv@dividend+3)& (0+255),b
 22422  0150F0  C11B  F112         	movff	InitUART@Baud,___lldiv@divisor
 22423  0150F4  C11C  F113         	movff	InitUART@Baud+1,___lldiv@divisor+1
 22424  0150F8  C11D  F114         	movff	InitUART@Baud+2,___lldiv@divisor+2
 22425  0150FC  C11E  F115         	movff	InitUART@Baud+3,___lldiv@divisor+3
 22426  015100  ECF7  F0B0         	call	___lldiv	;wreg free
 22427  015104  C10E  F120         	movff	?___lldiv,??_InitUART
 22428  015108  C10F  F121         	movff	?___lldiv+1,??_InitUART+1
 22429  01510C  C110  F122         	movff	?___lldiv+2,??_InitUART+2
 22430  015110  C111  F123         	movff	?___lldiv+3,??_InitUART+3
 22431  015114  0EFF               	movlw	255
 22432  015116  0101               	movlb	1	; () banked
 22433  015118  2520               	addwf	??_InitUART& (0+255),w,b
 22434  01511A  0101               	movlb	1	; () banked
 22435  01511C  6F28               	movwf	InitUART@temp& (0+255),b
 22436  01511E  0EFF               	movlw	255
 22437  015120  0101               	movlb	1	; () banked
 22438  015122  2121               	addwfc	(??_InitUART+1)& (0+255),w,b
 22439  015124  0101               	movlb	1	; () banked
 22440  015126  6F29               	movwf	(InitUART@temp+1)& (0+255),b
 22441  015128  0EFF               	movlw	255
 22442  01512A  0101               	movlb	1	; () banked
 22443  01512C  2122               	addwfc	(??_InitUART+2)& (0+255),w,b
 22444  01512E  0101               	movlb	1	; () banked
 22445  015130  6F2A               	movwf	(InitUART@temp+2)& (0+255),b
 22446  015132  0EFF               	movlw	255
 22447  015134  0101               	movlb	1	; () banked
 22448  015136  2123               	addwfc	(??_InitUART+3)& (0+255),w,b
 22449  015138  0101               	movlb	1	; () banked
 22450  01513A  6F2B               	movwf	(InitUART@temp+3)& (0+255),b
 22451                           
 22452                           ; BSR set to: 1
 22453                           ;UART.c: 109: temp = (temp >> 2) - 1;
 22454  01513C  0101               	movlb	1	; () banked
 22455  01513E  C128  F120         	movff	InitUART@temp,??_InitUART
 22456  015142  0101               	movlb	1	; () banked
 22457  015144  C129  F121         	movff	InitUART@temp+1,??_InitUART+1
 22458  015148  0101               	movlb	1	; () banked
 22459  01514A  C12A  F122         	movff	InitUART@temp+2,??_InitUART+2
 22460  01514E  0101               	movlb	1	; () banked
 22461  015150  C12B  F123         	movff	InitUART@temp+3,??_InitUART+3
 22462  015154  0E03               	movlw	3
 22463  015156  D006               	goto	u12860
 22464  015158                     u12865:
 22465  015158  0101               	movlb	1	; () banked
 22466  01515A  90D8               	bcf	status,0,c
 22467  01515C  3323               	rrcf	(??_InitUART+3)& (0+255),f,b
 22468  01515E  3322               	rrcf	(??_InitUART+2)& (0+255),f,b
 22469  015160  3321               	rrcf	(??_InitUART+1)& (0+255),f,b
 22470  015162  3320               	rrcf	??_InitUART& (0+255),f,b
 22471  015164                     u12860:
 22472  015164  2EE8               	decfsz	wreg,f,c
 22473  015166  D7F8               	goto	u12865
 22474  015168  0EFF               	movlw	255
 22475  01516A  0101               	movlb	1	; () banked
 22476  01516C  2520               	addwf	??_InitUART& (0+255),w,b
 22477  01516E  0101               	movlb	1	; () banked
 22478  015170  6F28               	movwf	InitUART@temp& (0+255),b
 22479  015172  0EFF               	movlw	255
 22480  015174  0101               	movlb	1	; () banked
 22481  015176  2121               	addwfc	(??_InitUART+1)& (0+255),w,b
 22482  015178  0101               	movlb	1	; () banked
 22483  01517A  6F29               	movwf	(InitUART@temp+1)& (0+255),b
 22484  01517C  0EFF               	movlw	255
 22485  01517E  0101               	movlb	1	; () banked
 22486  015180  2122               	addwfc	(??_InitUART+2)& (0+255),w,b
 22487  015182  0101               	movlb	1	; () banked
 22488  015184  6F2A               	movwf	(InitUART@temp+2)& (0+255),b
 22489  015186  0EFF               	movlw	255
 22490  015188  0101               	movlb	1	; () banked
 22491  01518A  2123               	addwfc	(??_InitUART+3)& (0+255),w,b
 22492  01518C  0101               	movlb	1	; () banked
 22493  01518E  6F2B               	movwf	(InitUART@temp+3)& (0+255),b
 22494                           
 22495                           ; BSR set to: 1
 22496                           ;UART.c: 110: spbrg = (unsigned int)temp;
 22497  015190  C128  F124         	movff	InitUART@temp,InitUART@spbrg
 22498  015194  C129  F125         	movff	InitUART@temp+1,InitUART@spbrg+1
 22499                           
 22500                           ; BSR set to: 1
 22501                           ;UART.c: 112: OpenUSART(config, spbrg);
 22502  015198  C124  F10E         	movff	InitUART@spbrg,OpenUSART@spbrg
 22503  01519C  C125  F10F         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 22504  0151A0  0101               	movlb	1	; () banked
 22505  0151A2  5127               	movf	InitUART@config& (0+255),w,b
 22506  0151A4  EC4B  F0B9         	call	_OpenUSART
 22507                           
 22508                           ;UART.c: 113: baudUSART(baudconfig);
 22509  0151A8  0101               	movlb	1	; () banked
 22510  0151AA  5126               	movf	InitUART@baudconfig& (0+255),w,b
 22511  0151AC  EC3C  F0BE         	call	_baudUSART
 22512                           
 22513                           ;UART.c: 114: temp = ReadUSART();
 22514  0151B0  EC0D  F0BD         	call	_ReadUSART	;wreg free
 22515  0151B4  0101               	movlb	1	; () banked
 22516  0151B6  6F20               	movwf	??_InitUART& (0+255),b
 22517  0151B8  0101               	movlb	1	; () banked
 22518  0151BA  5120               	movf	??_InitUART& (0+255),w,b
 22519  0151BC  0101               	movlb	1	; () banked
 22520  0151BE  6F28               	movwf	InitUART@temp& (0+255),b
 22521  0151C0  0101               	movlb	1	; () banked
 22522  0151C2  6B29               	clrf	(InitUART@temp+1)& (0+255),b
 22523  0151C4  0101               	movlb	1	; () banked
 22524  0151C6  6B2A               	clrf	(InitUART@temp+2)& (0+255),b
 22525  0151C8  0101               	movlb	1	; () banked
 22526  0151CA  6B2B               	clrf	(InitUART@temp+3)& (0+255),b
 22527                           
 22528                           ; BSR set to: 1
 22529                           ;UART.c: 115: temp = ReadUSART();
 22530  0151CC  EC0D  F0BD         	call	_ReadUSART	;wreg free
 22531  0151D0  0101               	movlb	1	; () banked
 22532  0151D2  6F20               	movwf	??_InitUART& (0+255),b
 22533  0151D4  0101               	movlb	1	; () banked
 22534  0151D6  5120               	movf	??_InitUART& (0+255),w,b
 22535  0151D8  0101               	movlb	1	; () banked
 22536  0151DA  6F28               	movwf	InitUART@temp& (0+255),b
 22537  0151DC  0101               	movlb	1	; () banked
 22538  0151DE  6B29               	clrf	(InitUART@temp+1)& (0+255),b
 22539  0151E0  0101               	movlb	1	; () banked
 22540  0151E2  6B2A               	clrf	(InitUART@temp+2)& (0+255),b
 22541  0151E4  0101               	movlb	1	; () banked
 22542  0151E6  6B2B               	clrf	(InitUART@temp+3)& (0+255),b
 22543                           
 22544                           ; BSR set to: 1
 22545                           ;UART.c: 116: temp = ReadUSART();
 22546  0151E8  EC0D  F0BD         	call	_ReadUSART	;wreg free
 22547  0151EC  0101               	movlb	1	; () banked
 22548  0151EE  6F20               	movwf	??_InitUART& (0+255),b
 22549  0151F0  0101               	movlb	1	; () banked
 22550  0151F2  5120               	movf	??_InitUART& (0+255),w,b
 22551  0151F4  0101               	movlb	1	; () banked
 22552  0151F6  6F28               	movwf	InitUART@temp& (0+255),b
 22553  0151F8  0101               	movlb	1	; () banked
 22554  0151FA  6B29               	clrf	(InitUART@temp+1)& (0+255),b
 22555  0151FC  0101               	movlb	1	; () banked
 22556  0151FE  6B2A               	clrf	(InitUART@temp+2)& (0+255),b
 22557  015200  0101               	movlb	1	; () banked
 22558  015202  6B2B               	clrf	(InitUART@temp+3)& (0+255),b
 22559                           
 22560                           ; BSR set to: 1
 22561                           ;UART.c: 117: temp = ReadUSART();
 22562  015204  EC0D  F0BD         	call	_ReadUSART	;wreg free
 22563  015208  0101               	movlb	1	; () banked
 22564  01520A  6F20               	movwf	??_InitUART& (0+255),b
 22565  01520C  0101               	movlb	1	; () banked
 22566  01520E  5120               	movf	??_InitUART& (0+255),w,b
 22567  015210  0101               	movlb	1	; () banked
 22568  015212  6F28               	movwf	InitUART@temp& (0+255),b
 22569  015214  0101               	movlb	1	; () banked
 22570  015216  6B29               	clrf	(InitUART@temp+1)& (0+255),b
 22571  015218  0101               	movlb	1	; () banked
 22572  01521A  6B2A               	clrf	(InitUART@temp+2)& (0+255),b
 22573  01521C  0101               	movlb	1	; () banked
 22574  01521E  6B2B               	clrf	(InitUART@temp+3)& (0+255),b
 22575                           
 22576                           ; BSR set to: 1
 22577                           ;UART.c: 118: temp = ReadUSART();
 22578  015220  EC0D  F0BD         	call	_ReadUSART	;wreg free
 22579  015224  0101               	movlb	1	; () banked
 22580  015226  6F20               	movwf	??_InitUART& (0+255),b
 22581  015228  0101               	movlb	1	; () banked
 22582  01522A  5120               	movf	??_InitUART& (0+255),w,b
 22583  01522C  0101               	movlb	1	; () banked
 22584  01522E  6F28               	movwf	InitUART@temp& (0+255),b
 22585  015230  0101               	movlb	1	; () banked
 22586  015232  6B29               	clrf	(InitUART@temp+1)& (0+255),b
 22587  015234  0101               	movlb	1	; () banked
 22588  015236  6B2A               	clrf	(InitUART@temp+2)& (0+255),b
 22589  015238  0101               	movlb	1	; () banked
 22590  01523A  6B2B               	clrf	(InitUART@temp+3)& (0+255),b
 22591                           
 22592                           ; BSR set to: 1
 22593                           ;UART.c: 120: IPR1bits.RCIP = 0;
 22594  01523C  9A9F               	bcf	3999,5,c	;volatile
 22595                           
 22596                           ; BSR set to: 1
 22597  01523E  0012               	return	
 22598  015240                     __end_of_InitUART:
 22599                           	opt stack 0
 22600                           tblptru	equ	0xFF8
 22601                           tblptrh	equ	0xFF7
 22602                           tblptrl	equ	0xFF6
 22603                           tablat	equ	0xFF5
 22604                           prodh	equ	0xFF4
 22605                           prodl	equ	0xFF3
 22606                           intcon	equ	0xFF2
 22607                           postinc0	equ	0xFEE
 22608                           wreg	equ	0xFE8
 22609                           indf1	equ	0xFE7
 22610                           postinc1	equ	0xFE6
 22611                           postdec1	equ	0xFE5
 22612                           fsr1h	equ	0xFE2
 22613                           fsr1l	equ	0xFE1
 22614                           indf2	equ	0xFDF
 22615                           postinc2	equ	0xFDE
 22616                           postdec2	equ	0xFDD
 22617                           fsr2h	equ	0xFDA
 22618                           fsr2l	equ	0xFD9
 22619                           status	equ	0xFD8
 22620                           
 22621 ;; *************** function _baudUSART *****************
 22622 ;; Defined at:
 22623 ;;		line 128 in file "UART.c"
 22624 ;; Parameters:    Size  Location     Type
 22625 ;;  baudconfig      1    wreg     unsigned char 
 22626 ;; Auto vars:     Size  Location     Type
 22627 ;;  baudconfig      1   14[BANK1 ] unsigned char 
 22628 ;; Return value:  Size  Location     Type
 22629 ;;		None               void
 22630 ;; Registers used:
 22631 ;;		wreg, status,2
 22632 ;; Tracked objects:
 22633 ;;		On entry : 0/0
 22634 ;;		On exit  : 0/0
 22635 ;;		Unchanged: 0/0
 22636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22638 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22640 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22641 ;;Total ram usage:        1 bytes
 22642 ;; Hardware stack levels used:    1
 22643 ;; Hardware stack levels required when called:    6
 22644 ;; This function calls:
 22645 ;;		Nothing
 22646 ;; This function is called by:
 22647 ;;		_InitUART
 22648 ;; This function uses a non-reentrant model
 22649 ;;
 22650                           
 22651                           	psect	text38
 22652  017C78                     __ptext38:
 22653                           	opt stack 0
 22654  017C78                     _baudUSART:
 22655                           	opt stack 22
 22656                           
 22657                           ; BSR set to: 1
 22658                           ;incstack = 0
 22659                           ;baudUSART@baudconfig stored from wreg
 22660  017C78  0101               	movlb	1	; () banked
 22661  017C7A  6F0E               	movwf	baudUSART@baudconfig& (0+255),b
 22662                           
 22663                           ; BSR set to: 1
 22664                           ;UART.c: 130: BAUDCON =0;
 22665  017C7C  0E00               	movlw	0
 22666  017C7E  6EB8               	movwf	4024,c	;volatile
 22667                           
 22668                           ; BSR set to: 1
 22669                           ;UART.c: 131: BAUDCON = baudconfig;
 22670  017C80  C10E  FFB8         	movff	baudUSART@baudconfig,4024	;volatile
 22671                           
 22672                           ; BSR set to: 1
 22673  017C84  0012               	return	
 22674  017C86                     __end_of_baudUSART:
 22675                           	opt stack 0
 22676                           tblptru	equ	0xFF8
 22677                           tblptrh	equ	0xFF7
 22678                           tblptrl	equ	0xFF6
 22679                           tablat	equ	0xFF5
 22680                           prodh	equ	0xFF4
 22681                           prodl	equ	0xFF3
 22682                           intcon	equ	0xFF2
 22683                           postinc0	equ	0xFEE
 22684                           wreg	equ	0xFE8
 22685                           indf1	equ	0xFE7
 22686                           postinc1	equ	0xFE6
 22687                           postdec1	equ	0xFE5
 22688                           fsr1h	equ	0xFE2
 22689                           fsr1l	equ	0xFE1
 22690                           indf2	equ	0xFDF
 22691                           postinc2	equ	0xFDE
 22692                           postdec2	equ	0xFDD
 22693                           fsr2h	equ	0xFDA
 22694                           fsr2l	equ	0xFD9
 22695                           status	equ	0xFD8
 22696                           
 22697 ;; *************** function ___lldiv *****************
 22698 ;; Defined at:
 22699 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
 22700 ;; Parameters:    Size  Location     Type
 22701 ;;  dividend        4   14[BANK1 ] unsigned long 
 22702 ;;  divisor         4   18[BANK1 ] unsigned long 
 22703 ;; Auto vars:     Size  Location     Type
 22704 ;;  quotient        4   22[BANK1 ] unsigned long 
 22705 ;;  counter         1   26[BANK1 ] unsigned char 
 22706 ;; Return value:  Size  Location     Type
 22707 ;;                  4   14[BANK1 ] unsigned long 
 22708 ;; Registers used:
 22709 ;;		wreg, status,2, status,0
 22710 ;; Tracked objects:
 22711 ;;		On entry : 0/0
 22712 ;;		On exit  : 0/0
 22713 ;;		Unchanged: 0/0
 22714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22715 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 22716 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 22717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22718 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 22719 ;;Total ram usage:       13 bytes
 22720 ;; Hardware stack levels used:    1
 22721 ;; Hardware stack levels required when called:    6
 22722 ;; This function calls:
 22723 ;;		Nothing
 22724 ;; This function is called by:
 22725 ;;		_InitUART
 22726 ;;		_sprintf
 22727 ;; This function uses a non-reentrant model
 22728 ;;
 22729                           
 22730                           	psect	text39
 22731  0161EE                     __ptext39:
 22732                           	opt stack 0
 22733  0161EE                     ___lldiv:
 22734                           	opt stack 22
 22735                           
 22736                           ; BSR set to: 1
 22737                           ;incstack = 0
 22738  0161EE  0E00               	movlw	0
 22739  0161F0  0101               	movlb	1	; () banked
 22740  0161F2  6F16               	movwf	___lldiv@quotient& (0+255),b
 22741  0161F4  0E00               	movlw	0
 22742  0161F6  0101               	movlb	1	; () banked
 22743  0161F8  6F17               	movwf	(___lldiv@quotient+1)& (0+255),b
 22744  0161FA  0E00               	movlw	0
 22745  0161FC  0101               	movlb	1	; () banked
 22746  0161FE  6F18               	movwf	(___lldiv@quotient+2)& (0+255),b
 22747  016200  0E00               	movlw	0
 22748  016202  0101               	movlb	1	; () banked
 22749  016204  6F19               	movwf	(___lldiv@quotient+3)& (0+255),b
 22750                           
 22751                           ; BSR set to: 1
 22752  016206  0101               	movlb	1	; () banked
 22753  016208  5115               	movf	(___lldiv@divisor+3)& (0+255),w,b
 22754  01620A  1112               	iorwf	___lldiv@divisor& (0+255),w,b
 22755  01620C  1113               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 22756  01620E  1114               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 22757  016210  B4D8               	btfsc	status,2,c
 22758  016212  D04E               	goto	l2066
 22759                           
 22760                           ; BSR set to: 1
 22761  016214  0E01               	movlw	1
 22762  016216  0101               	movlb	1	; () banked
 22763  016218  6F1A               	movwf	___lldiv@counter& (0+255),b
 22764  01621A  D00C               	goto	l10130
 22765  01621C                     l10128:
 22766                           
 22767                           ; BSR set to: 1
 22768  01621C  0101               	movlb	1	; () banked
 22769  01621E  90D8               	bcf	status,0,c
 22770  016220  0101               	movlb	1	; () banked
 22771  016222  3712               	rlcf	___lldiv@divisor& (0+255),f,b
 22772  016224  0101               	movlb	1	; () banked
 22773  016226  3713               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 22774  016228  0101               	movlb	1	; () banked
 22775  01622A  3714               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 22776  01622C  0101               	movlb	1	; () banked
 22777  01622E  3715               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 22778  016230  0101               	movlb	1	; () banked
 22779  016232  2B1A               	incf	___lldiv@counter& (0+255),f,b
 22780  016234                     l10130:
 22781                           
 22782                           ; BSR set to: 1
 22783  016234  0101               	movlb	1	; () banked
 22784  016236  AF15               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 22785  016238  D7F1               	goto	l10128
 22786  01623A                     l10132:
 22787                           
 22788                           ; BSR set to: 1
 22789  01623A  0101               	movlb	1	; () banked
 22790  01623C  90D8               	bcf	status,0,c
 22791  01623E  0101               	movlb	1	; () banked
 22792  016240  3716               	rlcf	___lldiv@quotient& (0+255),f,b
 22793  016242  0101               	movlb	1	; () banked
 22794  016244  3717               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 22795  016246  0101               	movlb	1	; () banked
 22796  016248  3718               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 22797  01624A  0101               	movlb	1	; () banked
 22798  01624C  3719               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 22799                           
 22800                           ; BSR set to: 1
 22801  01624E  0101               	movlb	1	; () banked
 22802  016250  5112               	movf	___lldiv@divisor& (0+255),w,b
 22803  016252  0101               	movlb	1	; () banked
 22804  016254  5D0E               	subwf	___lldiv@dividend& (0+255),w,b
 22805  016256  0101               	movlb	1	; () banked
 22806  016258  5113               	movf	(___lldiv@divisor+1)& (0+255),w,b
 22807  01625A  0101               	movlb	1	; () banked
 22808  01625C  590F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 22809  01625E  0101               	movlb	1	; () banked
 22810  016260  5114               	movf	(___lldiv@divisor+2)& (0+255),w,b
 22811  016262  0101               	movlb	1	; () banked
 22812  016264  5910               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 22813  016266  0101               	movlb	1	; () banked
 22814  016268  5115               	movf	(___lldiv@divisor+3)& (0+255),w,b
 22815  01626A  0101               	movlb	1	; () banked
 22816  01626C  5911               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 22817  01626E  A0D8               	btfss	status,0,c
 22818  016270  D012               	goto	l10140
 22819                           
 22820                           ; BSR set to: 1
 22821  016272  0101               	movlb	1	; () banked
 22822  016274  5112               	movf	___lldiv@divisor& (0+255),w,b
 22823  016276  0101               	movlb	1	; () banked
 22824  016278  5F0E               	subwf	___lldiv@dividend& (0+255),f,b
 22825  01627A  0101               	movlb	1	; () banked
 22826  01627C  5113               	movf	(___lldiv@divisor+1)& (0+255),w,b
 22827  01627E  0101               	movlb	1	; () banked
 22828  016280  5B0F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 22829  016282  0101               	movlb	1	; () banked
 22830  016284  5114               	movf	(___lldiv@divisor+2)& (0+255),w,b
 22831  016286  0101               	movlb	1	; () banked
 22832  016288  5B10               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 22833  01628A  0101               	movlb	1	; () banked
 22834  01628C  5115               	movf	(___lldiv@divisor+3)& (0+255),w,b
 22835  01628E  0101               	movlb	1	; () banked
 22836  016290  5B11               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 22837                           
 22838                           ; BSR set to: 1
 22839  016292  0101               	movlb	1	; () banked
 22840  016294  8116               	bsf	___lldiv@quotient& (0+255),0,b
 22841  016296                     l10140:
 22842                           
 22843                           ; BSR set to: 1
 22844  016296  0101               	movlb	1	; () banked
 22845  016298  90D8               	bcf	status,0,c
 22846  01629A  0101               	movlb	1	; () banked
 22847  01629C  3315               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 22848  01629E  0101               	movlb	1	; () banked
 22849  0162A0  3314               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 22850  0162A2  0101               	movlb	1	; () banked
 22851  0162A4  3313               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 22852  0162A6  0101               	movlb	1	; () banked
 22853  0162A8  3312               	rrcf	___lldiv@divisor& (0+255),f,b
 22854                           
 22855                           ; BSR set to: 1
 22856  0162AA  0101               	movlb	1	; () banked
 22857  0162AC  2F1A               	decfsz	___lldiv@counter& (0+255),f,b
 22858  0162AE  D7C5               	goto	l10132
 22859  0162B0                     l2066:
 22860                           
 22861                           ; BSR set to: 1
 22862  0162B0  C116  F10E         	movff	___lldiv@quotient,?___lldiv
 22863  0162B4  C117  F10F         	movff	___lldiv@quotient+1,?___lldiv+1
 22864  0162B8  C118  F110         	movff	___lldiv@quotient+2,?___lldiv+2
 22865  0162BC  C119  F111         	movff	___lldiv@quotient+3,?___lldiv+3
 22866                           
 22867                           ; BSR set to: 1
 22868  0162C0  0012               	return	
 22869  0162C2                     __end_of___lldiv:
 22870                           	opt stack 0
 22871                           tblptru	equ	0xFF8
 22872                           tblptrh	equ	0xFF7
 22873                           tblptrl	equ	0xFF6
 22874                           tablat	equ	0xFF5
 22875                           prodh	equ	0xFF4
 22876                           prodl	equ	0xFF3
 22877                           intcon	equ	0xFF2
 22878                           postinc0	equ	0xFEE
 22879                           wreg	equ	0xFE8
 22880                           indf1	equ	0xFE7
 22881                           postinc1	equ	0xFE6
 22882                           postdec1	equ	0xFE5
 22883                           fsr1h	equ	0xFE2
 22884                           fsr1l	equ	0xFE1
 22885                           indf2	equ	0xFDF
 22886                           postinc2	equ	0xFDE
 22887                           postdec2	equ	0xFDD
 22888                           fsr2h	equ	0xFDA
 22889                           fsr2l	equ	0xFD9
 22890                           status	equ	0xFD8
 22891                           
 22892 ;; *************** function _ReadUSART *****************
 22893 ;; Defined at:
 22894 ;;		line 252 in file "UART.c"
 22895 ;; Parameters:    Size  Location     Type
 22896 ;;		None
 22897 ;; Auto vars:     Size  Location     Type
 22898 ;;  data            1   14[BANK1 ] unsigned char 
 22899 ;; Return value:  Size  Location     Type
 22900 ;;                  1    wreg      unsigned char 
 22901 ;; Registers used:
 22902 ;;		wreg, status,2, status,0
 22903 ;; Tracked objects:
 22904 ;;		On entry : 0/0
 22905 ;;		On exit  : 0/0
 22906 ;;		Unchanged: 0/0
 22907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22909 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22911 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22912 ;;Total ram usage:        1 bytes
 22913 ;; Hardware stack levels used:    1
 22914 ;; Hardware stack levels required when called:    6
 22915 ;; This function calls:
 22916 ;;		Nothing
 22917 ;; This function is called by:
 22918 ;;		_main
 22919 ;;		_InitUART
 22920 ;; This function uses a non-reentrant model
 22921 ;;
 22922                           
 22923                           	psect	text40
 22924  017A1A                     __ptext40:
 22925                           	opt stack 0
 22926  017A1A                     _ReadUSART:
 22927                           	opt stack 23
 22928                           
 22929                           ;UART.c: 254: char data;
 22930                           ;UART.c: 256: USART_Status.val &= 0xf2;
 22931                           
 22932                           ; BSR set to: 1
 22933                           ;incstack = 0
 22934  017A1A  0EF2               	movlw	242
 22935  017A1C  0101               	movlb	1	; () banked
 22936  017A1E  1799               	andwf	_USART_Status& (0+255),f,b
 22937                           
 22938                           ; BSR set to: 1
 22939                           ;UART.c: 258: if(RCSTAbits.RX9)
 22940  017A20  ACAB               	btfss	4011,6,c	;volatile
 22941  017A22  D006               	goto	l439
 22942                           
 22943                           ; BSR set to: 1
 22944                           ;UART.c: 259: {
 22945                           ;UART.c: 260: USART_Status.RX_NINE = 0;
 22946  017A24  0101               	movlb	1	; () banked
 22947  017A26  9199               	bcf	_USART_Status& (0+255),0,b
 22948                           
 22949                           ;UART.c: 261: if(RCSTAbits.RX9D)
 22950  017A28  A0AB               	btfss	4011,0,c	;volatile
 22951  017A2A  D002               	goto	l439
 22952                           
 22953                           ; BSR set to: 1
 22954                           ;UART.c: 262: USART_Status.RX_NINE = 1;
 22955  017A2C  0101               	movlb	1	; () banked
 22956  017A2E  8199               	bsf	_USART_Status& (0+255),0,b
 22957  017A30                     l439:
 22958                           
 22959                           ; BSR set to: 1
 22960                           ;UART.c: 263: }
 22961                           ;UART.c: 265: if(RCSTAbits.FERR)
 22962  017A30  A4AB               	btfss	4011,2,c	;volatile
 22963  017A32  D002               	goto	l441
 22964                           
 22965                           ; BSR set to: 1
 22966                           ;UART.c: 266: USART_Status.FRAME_ERROR = 1;
 22967  017A34  0101               	movlb	1	; () banked
 22968  017A36  8599               	bsf	_USART_Status& (0+255),2,b
 22969  017A38                     l441:
 22970                           
 22971                           ; BSR set to: 1
 22972                           ;UART.c: 268: if(RCSTAbits.OERR)
 22973  017A38  A2AB               	btfss	4011,1,c	;volatile
 22974  017A3A  D002               	goto	l442
 22975                           
 22976                           ; BSR set to: 1
 22977                           ;UART.c: 269: USART_Status.OVERRUN_ERROR = 1;
 22978  017A3C  0101               	movlb	1	; () banked
 22979  017A3E  8799               	bsf	_USART_Status& (0+255),3,b
 22980  017A40                     l442:
 22981                           
 22982                           ; BSR set to: 1
 22983                           ;UART.c: 271: data = RCREG;
 22984  017A40  CFAE F10E          	movff	4014,ReadUSART@data	;volatile
 22985                           
 22986                           ; BSR set to: 1
 22987                           ;UART.c: 273: return (data);
 22988  017A44  0101               	movlb	1	; () banked
 22989  017A46  510E               	movf	ReadUSART@data& (0+255),w,b
 22990  017A48  0012               	return	
 22991  017A4A                     __end_of_ReadUSART:
 22992                           	opt stack 0
 22993                           tblptru	equ	0xFF8
 22994                           tblptrh	equ	0xFF7
 22995                           tblptrl	equ	0xFF6
 22996                           tablat	equ	0xFF5
 22997                           prodh	equ	0xFF4
 22998                           prodl	equ	0xFF3
 22999                           intcon	equ	0xFF2
 23000                           postinc0	equ	0xFEE
 23001                           wreg	equ	0xFE8
 23002                           indf1	equ	0xFE7
 23003                           postinc1	equ	0xFE6
 23004                           postdec1	equ	0xFE5
 23005                           fsr1h	equ	0xFE2
 23006                           fsr1l	equ	0xFE1
 23007                           indf2	equ	0xFDF
 23008                           postinc2	equ	0xFDE
 23009                           postdec2	equ	0xFDD
 23010                           fsr2h	equ	0xFDA
 23011                           fsr2l	equ	0xFD9
 23012                           status	equ	0xFD8
 23013                           
 23014 ;; *************** function _OpenUSART *****************
 23015 ;; Defined at:
 23016 ;;		line 139 in file "UART.c"
 23017 ;; Parameters:    Size  Location     Type
 23018 ;;  config          1    wreg     unsigned char 
 23019 ;;  spbrg           2   14[BANK1 ] unsigned int 
 23020 ;; Auto vars:     Size  Location     Type
 23021 ;;  config          1   19[BANK1 ] unsigned char 
 23022 ;; Return value:  Size  Location     Type
 23023 ;;		None               void
 23024 ;; Registers used:
 23025 ;;		wreg, status,2
 23026 ;; Tracked objects:
 23027 ;;		On entry : 0/0
 23028 ;;		On exit  : 0/0
 23029 ;;		Unchanged: 0/0
 23030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23031 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23032 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23033 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 23034 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 23035 ;;Total ram usage:        6 bytes
 23036 ;; Hardware stack levels used:    1
 23037 ;; Hardware stack levels required when called:    6
 23038 ;; This function calls:
 23039 ;;		Nothing
 23040 ;; This function is called by:
 23041 ;;		_InitUART
 23042 ;; This function uses a non-reentrant model
 23043 ;;
 23044                           
 23045                           	psect	text41
 23046  017296                     __ptext41:
 23047                           	opt stack 0
 23048  017296                     _OpenUSART:
 23049                           	opt stack 22
 23050                           
 23051                           ; BSR set to: 1
 23052                           ;incstack = 0
 23053                           ;OpenUSART@config stored from wreg
 23054  017296  0101               	movlb	1	; () banked
 23055  017298  6F13               	movwf	OpenUSART@config& (0+255),b
 23056                           
 23057                           ; BSR set to: 1
 23058                           ;UART.c: 141: TXSTA = 0;
 23059  01729A  0E00               	movlw	0
 23060  01729C  6EAC               	movwf	4012,c	;volatile
 23061                           
 23062                           ;UART.c: 142: RCSTA = 0;
 23063  01729E  0E00               	movlw	0
 23064  0172A0  6EAB               	movwf	4011,c	;volatile
 23065                           
 23066                           ; BSR set to: 1
 23067                           ;UART.c: 144: if(config&0x01)
 23068  0172A2  0101               	movlb	1	; () banked
 23069  0172A4  B113               	btfsc	OpenUSART@config& (0+255),0,b
 23070                           
 23071                           ; BSR set to: 1
 23072                           ;UART.c: 145: TXSTAbits.SYNC = 1;
 23073  0172A6  88AC               	bsf	4012,4,c	;volatile
 23074                           
 23075                           ; BSR set to: 1
 23076                           ;UART.c: 147: if(config&0x02)
 23077                           
 23078                           ; BSR set to: 1
 23079  0172A8  0101               	movlb	1	; () banked
 23080  0172AA  A313               	btfss	OpenUSART@config& (0+255),1,b
 23081  0172AC  D002               	goto	l9876
 23082                           
 23083                           ; BSR set to: 1
 23084                           ;UART.c: 148: {
 23085                           ;UART.c: 149: TXSTAbits.TX9 = 1;
 23086  0172AE  8CAC               	bsf	4012,6,c	;volatile
 23087                           
 23088                           ;UART.c: 150: RCSTAbits.RX9 = 1;
 23089  0172B0  8CAB               	bsf	4011,6,c	;volatile
 23090  0172B2                     l9876:
 23091                           
 23092                           ; BSR set to: 1
 23093                           ;UART.c: 151: }
 23094                           ;UART.c: 153: if(config&0x04)
 23095  0172B2  0101               	movlb	1	; () banked
 23096  0172B4  B513               	btfsc	OpenUSART@config& (0+255),2,b
 23097                           
 23098                           ; BSR set to: 1
 23099                           ;UART.c: 154: TXSTAbits.CSRC = 1;
 23100  0172B6  8EAC               	bsf	4012,7,c	;volatile
 23101                           
 23102                           ; BSR set to: 1
 23103                           ;UART.c: 156: if(config&0x08)
 23104                           
 23105                           ; BSR set to: 1
 23106  0172B8  0101               	movlb	1	; () banked
 23107  0172BA  A713               	btfss	OpenUSART@config& (0+255),3,b
 23108  0172BC  D002               	goto	l407
 23109                           
 23110                           ; BSR set to: 1
 23111                           ;UART.c: 157: RCSTAbits.CREN = 1;
 23112  0172BE  88AB               	bsf	4011,4,c	;volatile
 23113  0172C0  D001               	goto	l9884
 23114  0172C2                     l407:
 23115                           
 23116                           ; BSR set to: 1
 23117                           ;UART.c: 158: else
 23118                           ;UART.c: 159: RCSTAbits.SREN = 1;
 23119  0172C2  8AAB               	bsf	4011,5,c	;volatile
 23120  0172C4                     l9884:
 23121                           
 23122                           ; BSR set to: 1
 23123                           ;UART.c: 161: if(config&0x10)
 23124  0172C4  0101               	movlb	1	; () banked
 23125  0172C6  B913               	btfsc	OpenUSART@config& (0+255),4,b
 23126                           
 23127                           ; BSR set to: 1
 23128                           ;UART.c: 162: TXSTAbits.BRGH = 1;
 23129  0172C8  84AC               	bsf	4012,2,c	;volatile
 23130                           
 23131                           ; BSR set to: 1
 23132                           ;UART.c: 164: PIR1bits.TXIF = 0;
 23133  0172CA  989E               	bcf	3998,4,c	;volatile
 23134                           
 23135                           ; BSR set to: 1
 23136                           ;UART.c: 166: if(config&0x20)
 23137  0172CC  0101               	movlb	1	; () banked
 23138  0172CE  BB13               	btfsc	OpenUSART@config& (0+255),5,b
 23139                           
 23140                           ; BSR set to: 1
 23141                           ;UART.c: 167: RCSTAbits.ADEN = 1;
 23142  0172D0  86AB               	bsf	4011,3,c	;volatile
 23143                           
 23144                           ; BSR set to: 1
 23145                           ;UART.c: 169: if(config&0x40)
 23146                           
 23147                           ; BSR set to: 1
 23148  0172D2  0101               	movlb	1	; () banked
 23149  0172D4  AD13               	btfss	OpenUSART@config& (0+255),6,b
 23150  0172D6  D002               	goto	l411
 23151                           
 23152                           ; BSR set to: 1
 23153                           ;UART.c: 170: {
 23154                           ;UART.c: 171: PIE1bits.RCIE = 1;
 23155  0172D8  8A9D               	bsf	3997,5,c	;volatile
 23156                           
 23157                           ;UART.c: 172: }
 23158  0172DA  D001               	goto	l412
 23159  0172DC                     l411:
 23160                           
 23161                           ; BSR set to: 1
 23162                           ;UART.c: 173: else
 23163                           ;UART.c: 174: {
 23164                           ;UART.c: 175: PIE1bits.RCIE = 0;
 23165  0172DC  9A9D               	bcf	3997,5,c	;volatile
 23166  0172DE                     l412:
 23167                           
 23168                           ; BSR set to: 1
 23169                           ;UART.c: 176: }
 23170                           ;UART.c: 178: PIR1bits.RCIF = 0;
 23171  0172DE  9A9E               	bcf	3998,5,c	;volatile
 23172                           
 23173                           ; BSR set to: 1
 23174                           ;UART.c: 180: if(config&0x80)
 23175  0172E0  0101               	movlb	1	; () banked
 23176  0172E2  AF13               	btfss	OpenUSART@config& (0+255),7,b
 23177  0172E4  D002               	goto	l413
 23178                           
 23179                           ; BSR set to: 1
 23180                           ;UART.c: 181: PIE1bits.TXIE = 1;
 23181  0172E6  889D               	bsf	3997,4,c	;volatile
 23182  0172E8  D001               	goto	l414
 23183  0172EA                     l413:
 23184                           
 23185                           ; BSR set to: 1
 23186                           ;UART.c: 182: else
 23187                           ;UART.c: 183: PIE1bits.TXIE = 0;
 23188  0172EA  989D               	bcf	3997,4,c	;volatile
 23189  0172EC                     l414:
 23190                           
 23191                           ; BSR set to: 1
 23192                           ;UART.c: 185: SPBRG = spbrg;
 23193  0172EC  C10E  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 23194                           
 23195                           ; BSR set to: 1
 23196                           ;UART.c: 186: SPBRGH = spbrg >> 8;
 23197  0172F0  0101               	movlb	1	; () banked
 23198  0172F2  C10F  F110         	movff	OpenUSART@spbrg+1,??_OpenUSART
 23199  0172F6  C110  F111         	movff	??_OpenUSART,??_OpenUSART+1
 23200  0172FA  0101               	movlb	1	; () banked
 23201  0172FC  6B12               	clrf	(??_OpenUSART+2)& (0+255),b
 23202  0172FE  0101               	movlb	1	; () banked
 23203  017300  5111               	movf	(??_OpenUSART+1)& (0+255),w,b
 23204  017302  6EB0               	movwf	4016,c	;volatile
 23205                           
 23206                           ; BSR set to: 1
 23207                           ;UART.c: 188: TXSTAbits.TXEN = 1;
 23208  017304  8AAC               	bsf	4012,5,c	;volatile
 23209                           
 23210                           ; BSR set to: 1
 23211                           ;UART.c: 189: RCSTAbits.SPEN = 1;
 23212  017306  8EAB               	bsf	4011,7,c	;volatile
 23213                           
 23214                           ; BSR set to: 1
 23215  017308  0012               	return	
 23216  01730A                     __end_of_OpenUSART:
 23217                           	opt stack 0
 23218                           tblptru	equ	0xFF8
 23219                           tblptrh	equ	0xFF7
 23220                           tblptrl	equ	0xFF6
 23221                           tablat	equ	0xFF5
 23222                           prodh	equ	0xFF4
 23223                           prodl	equ	0xFF3
 23224                           intcon	equ	0xFF2
 23225                           postinc0	equ	0xFEE
 23226                           wreg	equ	0xFE8
 23227                           indf1	equ	0xFE7
 23228                           postinc1	equ	0xFE6
 23229                           postdec1	equ	0xFE5
 23230                           fsr1h	equ	0xFE2
 23231                           fsr1l	equ	0xFE1
 23232                           indf2	equ	0xFDF
 23233                           postinc2	equ	0xFDE
 23234                           postdec2	equ	0xFDD
 23235                           fsr2h	equ	0xFDA
 23236                           fsr2l	equ	0xFD9
 23237                           status	equ	0xFD8
 23238                           
 23239 ;; *************** function _Send_Config2 *****************
 23240 ;; Defined at:
 23241 ;;		line 137 in file "RF.c"
 23242 ;; Parameters:    Size  Location     Type
 23243 ;;  pin             1    wreg     unsigned char 
 23244 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 23245 ;;		 -> SubLightOFF(16), SubLightON(16), Aux2OFF(16), Aux2ON(16), 
 23246 ;;		 -> BedOFF(16), BedON(16), AuxOFF(16), AuxON(16), 
 23247 ;;		 -> fanOFF(16), fanON(16), 
 23248 ;; Auto vars:     Size  Location     Type
 23249 ;;  pin             1   29[BANK1 ] unsigned char 
 23250 ;;  i               1   30[BANK1 ] unsigned char 
 23251 ;; Return value:  Size  Location     Type
 23252 ;;		None               void
 23253 ;; Registers used:
 23254 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23255 ;; Tracked objects:
 23256 ;;		On entry : 0/0
 23257 ;;		On exit  : 0/0
 23258 ;;		Unchanged: 0/0
 23259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23260 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23261 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23262 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23263 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 23264 ;;Total ram usage:        6 bytes
 23265 ;; Hardware stack levels used:    1
 23266 ;; Hardware stack levels required when called:    8
 23267 ;; This function calls:
 23268 ;;		_One_Config2
 23269 ;;		_Zero_Config2
 23270 ;;		_delayUS
 23271 ;; This function is called by:
 23272 ;;		_Command
 23273 ;; This function uses a non-reentrant model
 23274 ;;
 23275                           
 23276                           	psect	text42
 23277  016E18                     __ptext42:
 23278                           	opt stack 0
 23279  016E18                     _Send_Config2:
 23280                           	opt stack 20
 23281                           
 23282                           ; BSR set to: 1
 23283                           ;incstack = 0
 23284                           ;Send_Config2@pin stored from wreg
 23285  016E18  0101               	movlb	1	; () banked
 23286  016E1A  6F1D               	movwf	Send_Config2@pin& (0+255),b
 23287                           
 23288                           ; BSR set to: 1
 23289                           ;RF.c: 139: unsigned char i=0;
 23290  016E1C  0E00               	movlw	0
 23291  016E1E  0101               	movlb	1	; () banked
 23292  016E20  6F1E               	movwf	Send_Config2@i& (0+255),b
 23293                           
 23294                           ;RF.c: 141: for(i=0;i<16;i++)
 23295  016E22  0E00               	movlw	0
 23296  016E24  0101               	movlb	1	; () banked
 23297  016E26  6F1E               	movwf	Send_Config2@i& (0+255),b
 23298  016E28  D025               	goto	L35
 23299  016E2A                     l11584:
 23300                           
 23301                           ; BSR set to: 1
 23302                           ;RF.c: 142: {
 23303                           ;RF.c: 143: if(data[i] == 0)
 23304  016E2A  0101               	movlb	1	; () banked
 23305  016E2C  511E               	movf	Send_Config2@i& (0+255),w,b
 23306  016E2E  0D01               	mullw	1
 23307  016E30  0101               	movlb	1	; () banked
 23308  016E32  C119  F11B         	movff	Send_Config2@data,??_Send_Config2
 23309  016E36  0101               	movlb	1	; () banked
 23310  016E38  C11A  F11C         	movff	Send_Config2@data+1,??_Send_Config2+1
 23311  016E3C  50F3               	movf	prodl,w,c
 23312  016E3E  0101               	movlb	1	; () banked
 23313  016E40  271B               	addwf	??_Send_Config2& (0+255),f,b
 23314  016E42  50F4               	movf	prodh,w,c
 23315  016E44  0101               	movlb	1	; () banked
 23316  016E46  231C               	addwfc	(??_Send_Config2+1)& (0+255),f,b
 23317  016E48  C11B  FFF6         	movff	??_Send_Config2,tblptrl
 23318  016E4C  C11C  FFF7         	movff	??_Send_Config2+1,tblptrh
 23319  016E50                     	if	0	;tblptru may be non-zero
 23320  016E50                     	endif
 23321  016E50                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23322  016E50  0E00               	movlw	low (__mediumconst shr (0+16))
 23323  016E52  6EF8               	movwf	tblptru,c
 23324  016E54                     	endif
 23325  016E54  0008               	tblrd		*
 23326  016E56  50F5               	movf	tablat,w,c
 23327  016E58  0900               	iorlw	0
 23328  016E5A  A4D8               	btfss	status,2,c
 23329  016E5C  D005               	goto	l11588
 23330                           
 23331                           ; BSR set to: 1
 23332                           ;RF.c: 144: {
 23333                           ;RF.c: 145: Zero_Config2(pin);
 23334  016E5E  0101               	movlb	1	; () banked
 23335  016E60  511D               	movf	Send_Config2@pin& (0+255),w,b
 23336  016E62  ECCC  F0BB         	call	_Zero_Config2
 23337                           
 23338                           ;RF.c: 146: }
 23339  016E66  D004               	goto	l11590
 23340  016E68                     l11588:
 23341                           
 23342                           ;RF.c: 147: else
 23343                           ;RF.c: 148: {
 23344                           ;RF.c: 149: One_Config2(pin);
 23345  016E68  0101               	movlb	1	; () banked
 23346  016E6A  511D               	movf	Send_Config2@pin& (0+255),w,b
 23347  016E6C  ECF2  F0BB         	call	_One_Config2
 23348  016E70                     l11590:
 23349  016E70  0101               	movlb	1	; () banked
 23350  016E72  2B1E               	incf	Send_Config2@i& (0+255),f,b
 23351  016E74                     L35:
 23352                           
 23353                           ; BSR set to: 1
 23354  016E74  0E0F               	movlw	15
 23355  016E76  0101               	movlb	1	; () banked
 23356  016E78  651E               	cpfsgt	Send_Config2@i& (0+255),b
 23357  016E7A  D7D7               	goto	l11584
 23358                           
 23359                           ; BSR set to: 1
 23360                           ;RF.c: 150: }
 23361                           ;RF.c: 151: }
 23362                           ;RF.c: 153: LATD &= ~pin;
 23363                           
 23364                           ; BSR set to: 1
 23365  016E7C  0101               	movlb	1	; () banked
 23366  016E7E  511D               	movf	Send_Config2@pin& (0+255),w,b
 23367  016E80  0AFF               	xorlw	255
 23368  016E82  168C               	andwf	3980,f,c	;volatile
 23369                           
 23370                           ; BSR set to: 1
 23371                           ;RF.c: 154: delayUS(11700);
 23372  016E84  0EB4               	movlw	180
 23373  016E86  0101               	movlb	1	; () banked
 23374  016E88  6F0E               	movwf	delayUS@US& (0+255),b
 23375  016E8A  0E2D               	movlw	45
 23376  016E8C  0101               	movlb	1	; () banked
 23377  016E8E  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 23378  016E90  0E00               	movlw	0
 23379  016E92  0101               	movlb	1	; () banked
 23380  016E94  6F10               	movwf	(delayUS@US+2)& (0+255),b
 23381  016E96  0E00               	movlw	0
 23382  016E98  0101               	movlb	1	; () banked
 23383  016E9A  6F11               	movwf	(delayUS@US+3)& (0+255),b
 23384  016E9C  EC10  F0B9         	call	_delayUS	;wreg free
 23385  016EA0  0012               	return	
 23386  016EA2                     __end_of_Send_Config2:
 23387                           	opt stack 0
 23388                           tblptru	equ	0xFF8
 23389                           tblptrh	equ	0xFF7
 23390                           tblptrl	equ	0xFF6
 23391                           tablat	equ	0xFF5
 23392                           prodh	equ	0xFF4
 23393                           prodl	equ	0xFF3
 23394                           intcon	equ	0xFF2
 23395                           postinc0	equ	0xFEE
 23396                           wreg	equ	0xFE8
 23397                           indf1	equ	0xFE7
 23398                           postinc1	equ	0xFE6
 23399                           postdec1	equ	0xFE5
 23400                           fsr1h	equ	0xFE2
 23401                           fsr1l	equ	0xFE1
 23402                           indf2	equ	0xFDF
 23403                           postinc2	equ	0xFDE
 23404                           postdec2	equ	0xFDD
 23405                           fsr2h	equ	0xFDA
 23406                           fsr2l	equ	0xFD9
 23407                           status	equ	0xFD8
 23408                           
 23409 ;; *************** function _Zero_Config2 *****************
 23410 ;; Defined at:
 23411 ;;		line 163 in file "RF.c"
 23412 ;; Parameters:    Size  Location     Type
 23413 ;;  pin             1    wreg     unsigned char 
 23414 ;; Auto vars:     Size  Location     Type
 23415 ;;  pin             1   24[BANK1 ] unsigned char 
 23416 ;; Return value:  Size  Location     Type
 23417 ;;		None               void
 23418 ;; Registers used:
 23419 ;;		wreg, status,2, status,0, cstack
 23420 ;; Tracked objects:
 23421 ;;		On entry : 0/0
 23422 ;;		On exit  : 0/0
 23423 ;;		Unchanged: 0/0
 23424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23426 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23428 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23429 ;;Total ram usage:        1 bytes
 23430 ;; Hardware stack levels used:    1
 23431 ;; Hardware stack levels required when called:    7
 23432 ;; This function calls:
 23433 ;;		_delayUS
 23434 ;; This function is called by:
 23435 ;;		_Send_Config2
 23436 ;; This function uses a non-reentrant model
 23437 ;;
 23438                           
 23439                           	psect	text43
 23440  017798                     __ptext43:
 23441                           	opt stack 0
 23442  017798                     _Zero_Config2:
 23443                           	opt stack 20
 23444                           
 23445                           ;incstack = 0
 23446                           ;Zero_Config2@pin stored from wreg
 23447  017798  0101               	movlb	1	; () banked
 23448  01779A  6F18               	movwf	Zero_Config2@pin& (0+255),b
 23449                           
 23450                           ; BSR set to: 1
 23451                           ;RF.c: 165: LATD |= pin;
 23452  01779C  0101               	movlb	1	; () banked
 23453  01779E  5118               	movf	Zero_Config2@pin& (0+255),w,b
 23454  0177A0  128C               	iorwf	3980,f,c	;volatile
 23455                           
 23456                           ; BSR set to: 1
 23457                           ;RF.c: 166: delayUS(705);
 23458  0177A2  0EC1               	movlw	193
 23459  0177A4  0101               	movlb	1	; () banked
 23460  0177A6  6F0E               	movwf	delayUS@US& (0+255),b
 23461  0177A8  0E02               	movlw	2
 23462  0177AA  0101               	movlb	1	; () banked
 23463  0177AC  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 23464  0177AE  0E00               	movlw	0
 23465  0177B0  0101               	movlb	1	; () banked
 23466  0177B2  6F10               	movwf	(delayUS@US+2)& (0+255),b
 23467  0177B4  0E00               	movlw	0
 23468  0177B6  0101               	movlb	1	; () banked
 23469  0177B8  6F11               	movwf	(delayUS@US+3)& (0+255),b
 23470  0177BA  EC10  F0B9         	call	_delayUS	;wreg free
 23471                           
 23472                           ;RF.c: 167: LATD &= ~pin;
 23473  0177BE  0101               	movlb	1	; () banked
 23474  0177C0  5118               	movf	Zero_Config2@pin& (0+255),w,b
 23475  0177C2  0AFF               	xorlw	255
 23476  0177C4  168C               	andwf	3980,f,c	;volatile
 23477                           
 23478                           ;RF.c: 168: delayUS(1910);
 23479  0177C6  0E76               	movlw	118
 23480  0177C8  0101               	movlb	1	; () banked
 23481  0177CA  6F0E               	movwf	delayUS@US& (0+255),b
 23482  0177CC  0E07               	movlw	7
 23483  0177CE  0101               	movlb	1	; () banked
 23484  0177D0  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 23485  0177D2  0E00               	movlw	0
 23486  0177D4  0101               	movlb	1	; () banked
 23487  0177D6  6F10               	movwf	(delayUS@US+2)& (0+255),b
 23488  0177D8  0E00               	movlw	0
 23489  0177DA  0101               	movlb	1	; () banked
 23490  0177DC  6F11               	movwf	(delayUS@US+3)& (0+255),b
 23491  0177DE  EC10  F0B9         	call	_delayUS	;wreg free
 23492  0177E2  0012               	return	
 23493  0177E4                     __end_of_Zero_Config2:
 23494                           	opt stack 0
 23495                           tblptru	equ	0xFF8
 23496                           tblptrh	equ	0xFF7
 23497                           tblptrl	equ	0xFF6
 23498                           tablat	equ	0xFF5
 23499                           prodh	equ	0xFF4
 23500                           prodl	equ	0xFF3
 23501                           intcon	equ	0xFF2
 23502                           postinc0	equ	0xFEE
 23503                           wreg	equ	0xFE8
 23504                           indf1	equ	0xFE7
 23505                           postinc1	equ	0xFE6
 23506                           postdec1	equ	0xFE5
 23507                           fsr1h	equ	0xFE2
 23508                           fsr1l	equ	0xFE1
 23509                           indf2	equ	0xFDF
 23510                           postinc2	equ	0xFDE
 23511                           postdec2	equ	0xFDD
 23512                           fsr2h	equ	0xFDA
 23513                           fsr2l	equ	0xFD9
 23514                           status	equ	0xFD8
 23515                           
 23516 ;; *************** function _One_Config2 *****************
 23517 ;; Defined at:
 23518 ;;		line 176 in file "RF.c"
 23519 ;; Parameters:    Size  Location     Type
 23520 ;;  pin             1    wreg     unsigned char 
 23521 ;; Auto vars:     Size  Location     Type
 23522 ;;  pin             1   24[BANK1 ] unsigned char 
 23523 ;; Return value:  Size  Location     Type
 23524 ;;		None               void
 23525 ;; Registers used:
 23526 ;;		wreg, status,2, status,0, cstack
 23527 ;; Tracked objects:
 23528 ;;		On entry : 0/0
 23529 ;;		On exit  : 0/0
 23530 ;;		Unchanged: 0/0
 23531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23533 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23535 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23536 ;;Total ram usage:        1 bytes
 23537 ;; Hardware stack levels used:    1
 23538 ;; Hardware stack levels required when called:    7
 23539 ;; This function calls:
 23540 ;;		_delayUS
 23541 ;; This function is called by:
 23542 ;;		_Send_Config2
 23543 ;; This function uses a non-reentrant model
 23544 ;;
 23545                           
 23546                           	psect	text44
 23547  0177E4                     __ptext44:
 23548                           	opt stack 0
 23549  0177E4                     _One_Config2:
 23550                           	opt stack 20
 23551                           
 23552                           ;incstack = 0
 23553                           ;One_Config2@pin stored from wreg
 23554  0177E4  0101               	movlb	1	; () banked
 23555  0177E6  6F18               	movwf	One_Config2@pin& (0+255),b
 23556                           
 23557                           ; BSR set to: 1
 23558                           ;RF.c: 178: LATD |= pin;
 23559  0177E8  0101               	movlb	1	; () banked
 23560  0177EA  5118               	movf	One_Config2@pin& (0+255),w,b
 23561  0177EC  128C               	iorwf	3980,f,c	;volatile
 23562                           
 23563                           ; BSR set to: 1
 23564                           ;RF.c: 179: delayUS(1955);
 23565  0177EE  0EA3               	movlw	163
 23566  0177F0  0101               	movlb	1	; () banked
 23567  0177F2  6F0E               	movwf	delayUS@US& (0+255),b
 23568  0177F4  0E07               	movlw	7
 23569  0177F6  0101               	movlb	1	; () banked
 23570  0177F8  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 23571  0177FA  0E00               	movlw	0
 23572  0177FC  0101               	movlb	1	; () banked
 23573  0177FE  6F10               	movwf	(delayUS@US+2)& (0+255),b
 23574  017800  0E00               	movlw	0
 23575  017802  0101               	movlb	1	; () banked
 23576  017804  6F11               	movwf	(delayUS@US+3)& (0+255),b
 23577  017806  EC10  F0B9         	call	_delayUS	;wreg free
 23578                           
 23579                           ;RF.c: 180: LATD &= ~pin;
 23580  01780A  0101               	movlb	1	; () banked
 23581  01780C  5118               	movf	One_Config2@pin& (0+255),w,b
 23582  01780E  0AFF               	xorlw	255
 23583  017810  168C               	andwf	3980,f,c	;volatile
 23584                           
 23585                           ;RF.c: 181: delayUS(705);
 23586  017812  0EC1               	movlw	193
 23587  017814  0101               	movlb	1	; () banked
 23588  017816  6F0E               	movwf	delayUS@US& (0+255),b
 23589  017818  0E02               	movlw	2
 23590  01781A  0101               	movlb	1	; () banked
 23591  01781C  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 23592  01781E  0E00               	movlw	0
 23593  017820  0101               	movlb	1	; () banked
 23594  017822  6F10               	movwf	(delayUS@US+2)& (0+255),b
 23595  017824  0E00               	movlw	0
 23596  017826  0101               	movlb	1	; () banked
 23597  017828  6F11               	movwf	(delayUS@US+3)& (0+255),b
 23598  01782A  EC10  F0B9         	call	_delayUS	;wreg free
 23599  01782E  0012               	return	
 23600  017830                     __end_of_One_Config2:
 23601                           	opt stack 0
 23602                           tblptru	equ	0xFF8
 23603                           tblptrh	equ	0xFF7
 23604                           tblptrl	equ	0xFF6
 23605                           tablat	equ	0xFF5
 23606                           prodh	equ	0xFF4
 23607                           prodl	equ	0xFF3
 23608                           intcon	equ	0xFF2
 23609                           postinc0	equ	0xFEE
 23610                           wreg	equ	0xFE8
 23611                           indf1	equ	0xFE7
 23612                           postinc1	equ	0xFE6
 23613                           postdec1	equ	0xFE5
 23614                           fsr1h	equ	0xFE2
 23615                           fsr1l	equ	0xFE1
 23616                           indf2	equ	0xFDF
 23617                           postinc2	equ	0xFDE
 23618                           postdec2	equ	0xFDD
 23619                           fsr2h	equ	0xFDA
 23620                           fsr2l	equ	0xFD9
 23621                           status	equ	0xFD8
 23622                           
 23623 ;; *************** function _Send_Config1 *****************
 23624 ;; Defined at:
 23625 ;;		line 54 in file "RF.c"
 23626 ;; Parameters:    Size  Location     Type
 23627 ;;  pin             1    wreg     unsigned char 
 23628 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 23629 ;;		 -> TXdataF(12), TXdataE(12), TXdataD(12), 
 23630 ;; Auto vars:     Size  Location     Type
 23631 ;;  pin             1   31[BANK1 ] unsigned char 
 23632 ;;  i               1   30[BANK1 ] unsigned char 
 23633 ;; Return value:  Size  Location     Type
 23634 ;;		None               void
 23635 ;; Registers used:
 23636 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23637 ;; Tracked objects:
 23638 ;;		On entry : 0/0
 23639 ;;		On exit  : 0/0
 23640 ;;		Unchanged: 0/0
 23641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23642 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23643 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23644 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 23645 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 23646 ;;Total ram usage:        7 bytes
 23647 ;; Hardware stack levels used:    1
 23648 ;; Hardware stack levels required when called:    8
 23649 ;; This function calls:
 23650 ;;		_One_Config1
 23651 ;;		_Zero_Config1
 23652 ;;		_delayUS
 23653 ;;		_f_Config1
 23654 ;; This function is called by:
 23655 ;;		_Command
 23656 ;; This function uses a non-reentrant model
 23657 ;;
 23658                           
 23659                           	psect	text45
 23660  015C98                     __ptext45:
 23661                           	opt stack 0
 23662  015C98                     _Send_Config1:
 23663                           	opt stack 20
 23664                           
 23665                           ;incstack = 0
 23666                           ;Send_Config1@pin stored from wreg
 23667  015C98  0101               	movlb	1	; () banked
 23668  015C9A  6F1F               	movwf	Send_Config1@pin& (0+255),b
 23669                           
 23670                           ; BSR set to: 1
 23671                           ;RF.c: 56: unsigned char i=0;
 23672  015C9C  0E00               	movlw	0
 23673  015C9E  0101               	movlb	1	; () banked
 23674  015CA0  6F1E               	movwf	Send_Config1@i& (0+255),b
 23675                           
 23676                           ;RF.c: 58: for(i=0;i<12;i++)
 23677  015CA2  0E00               	movlw	0
 23678  015CA4  0101               	movlb	1	; () banked
 23679  015CA6  6F1E               	movwf	Send_Config1@i& (0+255),b
 23680  015CA8  D046               	goto	L36
 23681  015CAA                     l11558:
 23682                           
 23683                           ; BSR set to: 1
 23684                           ;RF.c: 59: {
 23685                           ;RF.c: 60: if(data[i] == 0)
 23686  015CAA  0101               	movlb	1	; () banked
 23687  015CAC  511E               	movf	Send_Config1@i& (0+255),w,b
 23688  015CAE  0D01               	mullw	1
 23689  015CB0  0101               	movlb	1	; () banked
 23690  015CB2  C119  F11B         	movff	Send_Config1@data,??_Send_Config1
 23691  015CB6  0101               	movlb	1	; () banked
 23692  015CB8  C11A  F11C         	movff	Send_Config1@data+1,??_Send_Config1+1
 23693  015CBC  50F3               	movf	prodl,w,c
 23694  015CBE  0101               	movlb	1	; () banked
 23695  015CC0  271B               	addwf	??_Send_Config1& (0+255),f,b
 23696  015CC2  50F4               	movf	prodh,w,c
 23697  015CC4  0101               	movlb	1	; () banked
 23698  015CC6  231C               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 23699  015CC8  C11B  FFF6         	movff	??_Send_Config1,tblptrl
 23700  015CCC  C11C  FFF7         	movff	??_Send_Config1+1,tblptrh
 23701  015CD0                     	if	0	;tblptru may be non-zero
 23702  015CD0                     	endif
 23703  015CD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23704  015CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 23705  015CD2  6EF8               	movwf	tblptru,c
 23706  015CD4                     	endif
 23707  015CD4  0008               	tblrd		*
 23708  015CD6  50F5               	movf	tablat,w,c
 23709  015CD8  0900               	iorlw	0
 23710  015CDA  A4D8               	btfss	status,2,c
 23711  015CDC  D005               	goto	l11562
 23712                           
 23713                           ; BSR set to: 1
 23714                           ;RF.c: 61: {
 23715                           ;RF.c: 62: Zero_Config1(pin);
 23716  015CDE  0101               	movlb	1	; () banked
 23717  015CE0  511F               	movf	Send_Config1@pin& (0+255),w,b
 23718  015CE2  EC5E  F0B5         	call	_Zero_Config1
 23719                           
 23720                           ;RF.c: 63: }
 23721  015CE6  D025               	goto	l11568
 23722  015CE8                     l11562:
 23723                           
 23724                           ;RF.c: 64: else if(data[i] ==1)
 23725  015CE8  0101               	movlb	1	; () banked
 23726  015CEA  511E               	movf	Send_Config1@i& (0+255),w,b
 23727  015CEC  0D01               	mullw	1
 23728  015CEE  0101               	movlb	1	; () banked
 23729  015CF0  C119  F11B         	movff	Send_Config1@data,??_Send_Config1
 23730  015CF4  0101               	movlb	1	; () banked
 23731  015CF6  C11A  F11C         	movff	Send_Config1@data+1,??_Send_Config1+1
 23732  015CFA  50F3               	movf	prodl,w,c
 23733  015CFC  0101               	movlb	1	; () banked
 23734  015CFE  271B               	addwf	??_Send_Config1& (0+255),f,b
 23735  015D00  50F4               	movf	prodh,w,c
 23736  015D02  0101               	movlb	1	; () banked
 23737  015D04  231C               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 23738  015D06  C11B  FFF6         	movff	??_Send_Config1,tblptrl
 23739  015D0A  C11C  FFF7         	movff	??_Send_Config1+1,tblptrh
 23740  015D0E                     	if	0	;tblptru may be non-zero
 23741  015D0E                     	endif
 23742  015D0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23743  015D0E  0E00               	movlw	low (__mediumconst shr (0+16))
 23744  015D10  6EF8               	movwf	tblptru,c
 23745  015D12                     	endif
 23746  015D12  0008               	tblrd		*
 23747  015D14  CFF5 F11D          	movff	tablat,??_Send_Config1+2
 23748  015D18  0101               	movlb	1	; () banked
 23749  015D1A  051D               	decf	(??_Send_Config1+2)& (0+255),w,b
 23750  015D1C  A4D8               	btfss	status,2,c
 23751  015D1E  D005               	goto	l11566
 23752                           
 23753                           ; BSR set to: 1
 23754                           ;RF.c: 65: {
 23755                           ;RF.c: 66: One_Config1(pin);
 23756  015D20  0101               	movlb	1	; () banked
 23757  015D22  511F               	movf	Send_Config1@pin& (0+255),w,b
 23758  015D24  ECA7  F0B5         	call	_One_Config1
 23759                           
 23760                           ;RF.c: 67: }
 23761  015D28  D004               	goto	l11568
 23762  015D2A                     l11566:
 23763                           
 23764                           ;RF.c: 68: else
 23765                           ;RF.c: 69: {
 23766                           ;RF.c: 70: f_Config1(pin);
 23767  015D2A  0101               	movlb	1	; () banked
 23768  015D2C  511F               	movf	Send_Config1@pin& (0+255),w,b
 23769  015D2E  EC15  F0B5         	call	_f_Config1
 23770  015D32                     l11568:
 23771  015D32  0101               	movlb	1	; () banked
 23772  015D34  2B1E               	incf	Send_Config1@i& (0+255),f,b
 23773  015D36                     L36:
 23774                           
 23775                           ; BSR set to: 1
 23776  015D36  0E0B               	movlw	11
 23777  015D38  0101               	movlb	1	; () banked
 23778  015D3A  651E               	cpfsgt	Send_Config1@i& (0+255),b
 23779  015D3C  D7B6               	goto	l11558
 23780                           
 23781                           ; BSR set to: 1
 23782                           ;RF.c: 71: }
 23783                           ;RF.c: 72: }
 23784                           ;RF.c: 74: LATD |= pin;
 23785                           
 23786                           ; BSR set to: 1
 23787  015D3E  0101               	movlb	1	; () banked
 23788  015D40  511F               	movf	Send_Config1@pin& (0+255),w,b
 23789  015D42  128C               	iorwf	3980,f,c	;volatile
 23790                           
 23791                           ; BSR set to: 1
 23792                           ;RF.c: 75: delayUS(222);
 23793  015D44  0EDE               	movlw	222
 23794  015D46  0101               	movlb	1	; () banked
 23795  015D48  6F0E               	movwf	delayUS@US& (0+255),b
 23796  015D4A  0E00               	movlw	0
 23797  015D4C  0101               	movlb	1	; () banked
 23798  015D4E  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 23799  015D50  0E00               	movlw	0
 23800  015D52  0101               	movlb	1	; () banked
 23801  015D54  6F10               	movwf	(delayUS@US+2)& (0+255),b
 23802  015D56  0E00               	movlw	0
 23803  015D58  0101               	movlb	1	; () banked
 23804  015D5A  6F11               	movwf	(delayUS@US+3)& (0+255),b
 23805  015D5C  EC10  F0B9         	call	_delayUS	;wreg free
 23806                           
 23807                           ;RF.c: 76: LATD &= ~pin;
 23808  015D60  0101               	movlb	1	; () banked
 23809  015D62  511F               	movf	Send_Config1@pin& (0+255),w,b
 23810  015D64  0AFF               	xorlw	255
 23811  015D66  168C               	andwf	3980,f,c	;volatile
 23812                           
 23813                           ;RF.c: 77: delayUS(7330);
 23814  015D68  0EA2               	movlw	162
 23815  015D6A  0101               	movlb	1	; () banked
 23816  015D6C  6F0E               	movwf	delayUS@US& (0+255),b
 23817  015D6E  0E1C               	movlw	28
 23818  015D70  0101               	movlb	1	; () banked
 23819  015D72  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 23820  015D74  0E00               	movlw	0
 23821  015D76  0101               	movlb	1	; () banked
 23822  015D78  6F10               	movwf	(delayUS@US+2)& (0+255),b
 23823  015D7A  0E00               	movlw	0
 23824  015D7C  0101               	movlb	1	; () banked
 23825  015D7E  6F11               	movwf	(delayUS@US+3)& (0+255),b
 23826  015D80  EC10  F0B9         	call	_delayUS	;wreg free
 23827  015D84  0012               	return	
 23828  015D86                     __end_of_Send_Config1:
 23829                           	opt stack 0
 23830                           tblptru	equ	0xFF8
 23831                           tblptrh	equ	0xFF7
 23832                           tblptrl	equ	0xFF6
 23833                           tablat	equ	0xFF5
 23834                           prodh	equ	0xFF4
 23835                           prodl	equ	0xFF3
 23836                           intcon	equ	0xFF2
 23837                           postinc0	equ	0xFEE
 23838                           wreg	equ	0xFE8
 23839                           indf1	equ	0xFE7
 23840                           postinc1	equ	0xFE6
 23841                           postdec1	equ	0xFE5
 23842                           fsr1h	equ	0xFE2
 23843                           fsr1l	equ	0xFE1
 23844                           indf2	equ	0xFDF
 23845                           postinc2	equ	0xFDE
 23846                           postdec2	equ	0xFDD
 23847                           fsr2h	equ	0xFDA
 23848                           fsr2l	equ	0xFD9
 23849                           status	equ	0xFD8
 23850                           
 23851 ;; *************** function _f_Config1 *****************
 23852 ;; Defined at:
 23853 ;;		line 120 in file "RF.c"
 23854 ;; Parameters:    Size  Location     Type
 23855 ;;  pin             1    wreg     unsigned char 
 23856 ;; Auto vars:     Size  Location     Type
 23857 ;;  pin             1   24[BANK1 ] unsigned char 
 23858 ;; Return value:  Size  Location     Type
 23859 ;;		None               void
 23860 ;; Registers used:
 23861 ;;		wreg, status,2, status,0, cstack
 23862 ;; Tracked objects:
 23863 ;;		On entry : 0/0
 23864 ;;		On exit  : 0/0
 23865 ;;		Unchanged: 0/0
 23866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23868 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23870 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23871 ;;Total ram usage:        1 bytes
 23872 ;; Hardware stack levels used:    1
 23873 ;; Hardware stack levels required when called:    7
 23874 ;; This function calls:
 23875 ;;		_delayUS
 23876 ;; This function is called by:
 23877 ;;		_Send_Config1
 23878 ;; This function uses a non-reentrant model
 23879 ;;
 23880                           
 23881                           	psect	text46
 23882  016A2A                     __ptext46:
 23883                           	opt stack 0
 23884  016A2A                     _f_Config1:
 23885                           	opt stack 20
 23886                           
 23887                           ;incstack = 0
 23888                           ;f_Config1@pin stored from wreg
 23889  016A2A  0101               	movlb	1	; () banked
 23890  016A2C  6F18               	movwf	f_Config1@pin& (0+255),b
 23891                           
 23892                           ; BSR set to: 1
 23893                           ;RF.c: 122: LATD |= pin;
 23894  016A2E  0101               	movlb	1	; () banked
 23895  016A30  5118               	movf	f_Config1@pin& (0+255),w,b
 23896  016A32  128C               	iorwf	3980,f,c	;volatile
 23897                           
 23898                           ; BSR set to: 1
 23899                           ;RF.c: 123: delayUS(216);
 23900  016A34  0ED8               	movlw	216
 23901  016A36  0101               	movlb	1	; () banked
 23902  016A38  6F0E               	movwf	delayUS@US& (0+255),b
 23903  016A3A  0E00               	movlw	0
 23904  016A3C  0101               	movlb	1	; () banked
 23905  016A3E  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 23906  016A40  0E00               	movlw	0
 23907  016A42  0101               	movlb	1	; () banked
 23908  016A44  6F10               	movwf	(delayUS@US+2)& (0+255),b
 23909  016A46  0E00               	movlw	0
 23910  016A48  0101               	movlb	1	; () banked
 23911  016A4A  6F11               	movwf	(delayUS@US+3)& (0+255),b
 23912  016A4C  EC10  F0B9         	call	_delayUS	;wreg free
 23913                           
 23914                           ;RF.c: 124: LATD &= ~pin;
 23915  016A50  0101               	movlb	1	; () banked
 23916  016A52  5118               	movf	f_Config1@pin& (0+255),w,b
 23917  016A54  0AFF               	xorlw	255
 23918  016A56  168C               	andwf	3980,f,c	;volatile
 23919                           
 23920                           ;RF.c: 125: delayUS(614);
 23921  016A58  0E66               	movlw	102
 23922  016A5A  0101               	movlb	1	; () banked
 23923  016A5C  6F0E               	movwf	delayUS@US& (0+255),b
 23924  016A5E  0E02               	movlw	2
 23925  016A60  0101               	movlb	1	; () banked
 23926  016A62  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 23927  016A64  0E00               	movlw	0
 23928  016A66  0101               	movlb	1	; () banked
 23929  016A68  6F10               	movwf	(delayUS@US+2)& (0+255),b
 23930  016A6A  0E00               	movlw	0
 23931  016A6C  0101               	movlb	1	; () banked
 23932  016A6E  6F11               	movwf	(delayUS@US+3)& (0+255),b
 23933  016A70  EC10  F0B9         	call	_delayUS	;wreg free
 23934                           
 23935                           ;RF.c: 126: LATD |= pin;
 23936  016A74  0101               	movlb	1	; () banked
 23937  016A76  5118               	movf	f_Config1@pin& (0+255),w,b
 23938  016A78  128C               	iorwf	3980,f,c	;volatile
 23939                           
 23940                           ; BSR set to: 1
 23941                           ;RF.c: 127: delayUS(614);
 23942  016A7A  0E66               	movlw	102
 23943  016A7C  0101               	movlb	1	; () banked
 23944  016A7E  6F0E               	movwf	delayUS@US& (0+255),b
 23945  016A80  0E02               	movlw	2
 23946  016A82  0101               	movlb	1	; () banked
 23947  016A84  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 23948  016A86  0E00               	movlw	0
 23949  016A88  0101               	movlb	1	; () banked
 23950  016A8A  6F10               	movwf	(delayUS@US+2)& (0+255),b
 23951  016A8C  0E00               	movlw	0
 23952  016A8E  0101               	movlb	1	; () banked
 23953  016A90  6F11               	movwf	(delayUS@US+3)& (0+255),b
 23954  016A92  EC10  F0B9         	call	_delayUS	;wreg free
 23955                           
 23956                           ;RF.c: 128: LATD &= ~pin;
 23957  016A96  0101               	movlb	1	; () banked
 23958  016A98  5118               	movf	f_Config1@pin& (0+255),w,b
 23959  016A9A  0AFF               	xorlw	255
 23960  016A9C  168C               	andwf	3980,f,c	;volatile
 23961                           
 23962                           ; BSR set to: 1
 23963                           ;RF.c: 129: delayUS(216);
 23964  016A9E  0ED8               	movlw	216
 23965  016AA0  0101               	movlb	1	; () banked
 23966  016AA2  6F0E               	movwf	delayUS@US& (0+255),b
 23967  016AA4  0E00               	movlw	0
 23968  016AA6  0101               	movlb	1	; () banked
 23969  016AA8  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 23970  016AAA  0E00               	movlw	0
 23971  016AAC  0101               	movlb	1	; () banked
 23972  016AAE  6F10               	movwf	(delayUS@US+2)& (0+255),b
 23973  016AB0  0E00               	movlw	0
 23974  016AB2  0101               	movlb	1	; () banked
 23975  016AB4  6F11               	movwf	(delayUS@US+3)& (0+255),b
 23976  016AB6  EC10  F0B9         	call	_delayUS	;wreg free
 23977  016ABA  0012               	return	
 23978  016ABC                     __end_of_f_Config1:
 23979                           	opt stack 0
 23980                           tblptru	equ	0xFF8
 23981                           tblptrh	equ	0xFF7
 23982                           tblptrl	equ	0xFF6
 23983                           tablat	equ	0xFF5
 23984                           prodh	equ	0xFF4
 23985                           prodl	equ	0xFF3
 23986                           intcon	equ	0xFF2
 23987                           postinc0	equ	0xFEE
 23988                           wreg	equ	0xFE8
 23989                           indf1	equ	0xFE7
 23990                           postinc1	equ	0xFE6
 23991                           postdec1	equ	0xFE5
 23992                           fsr1h	equ	0xFE2
 23993                           fsr1l	equ	0xFE1
 23994                           indf2	equ	0xFDF
 23995                           postinc2	equ	0xFDE
 23996                           postdec2	equ	0xFDD
 23997                           fsr2h	equ	0xFDA
 23998                           fsr2l	equ	0xFD9
 23999                           status	equ	0xFD8
 24000                           
 24001 ;; *************** function _Zero_Config1 *****************
 24002 ;; Defined at:
 24003 ;;		line 86 in file "RF.c"
 24004 ;; Parameters:    Size  Location     Type
 24005 ;;  pin             1    wreg     unsigned char 
 24006 ;; Auto vars:     Size  Location     Type
 24007 ;;  pin             1   24[BANK1 ] unsigned char 
 24008 ;; Return value:  Size  Location     Type
 24009 ;;		None               void
 24010 ;; Registers used:
 24011 ;;		wreg, status,2, status,0, cstack
 24012 ;; Tracked objects:
 24013 ;;		On entry : 0/0
 24014 ;;		On exit  : 0/0
 24015 ;;		Unchanged: 0/0
 24016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24018 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24020 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24021 ;;Total ram usage:        1 bytes
 24022 ;; Hardware stack levels used:    1
 24023 ;; Hardware stack levels required when called:    7
 24024 ;; This function calls:
 24025 ;;		_delayUS
 24026 ;; This function is called by:
 24027 ;;		_Send_Config1
 24028 ;; This function uses a non-reentrant model
 24029 ;;
 24030                           
 24031                           	psect	text47
 24032  016ABC                     __ptext47:
 24033                           	opt stack 0
 24034  016ABC                     _Zero_Config1:
 24035                           	opt stack 20
 24036                           
 24037                           ;incstack = 0
 24038                           ;Zero_Config1@pin stored from wreg
 24039  016ABC  0101               	movlb	1	; () banked
 24040  016ABE  6F18               	movwf	Zero_Config1@pin& (0+255),b
 24041                           
 24042                           ; BSR set to: 1
 24043                           ;RF.c: 88: LATD |= pin;
 24044  016AC0  0101               	movlb	1	; () banked
 24045  016AC2  5118               	movf	Zero_Config1@pin& (0+255),w,b
 24046  016AC4  128C               	iorwf	3980,f,c	;volatile
 24047                           
 24048                           ; BSR set to: 1
 24049                           ;RF.c: 89: delayUS(216 );
 24050  016AC6  0ED8               	movlw	216
 24051  016AC8  0101               	movlb	1	; () banked
 24052  016ACA  6F0E               	movwf	delayUS@US& (0+255),b
 24053  016ACC  0E00               	movlw	0
 24054  016ACE  0101               	movlb	1	; () banked
 24055  016AD0  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 24056  016AD2  0E00               	movlw	0
 24057  016AD4  0101               	movlb	1	; () banked
 24058  016AD6  6F10               	movwf	(delayUS@US+2)& (0+255),b
 24059  016AD8  0E00               	movlw	0
 24060  016ADA  0101               	movlb	1	; () banked
 24061  016ADC  6F11               	movwf	(delayUS@US+3)& (0+255),b
 24062  016ADE  EC10  F0B9         	call	_delayUS	;wreg free
 24063                           
 24064                           ;RF.c: 90: LATD &= ~pin;
 24065  016AE2  0101               	movlb	1	; () banked
 24066  016AE4  5118               	movf	Zero_Config1@pin& (0+255),w,b
 24067  016AE6  0AFF               	xorlw	255
 24068  016AE8  168C               	andwf	3980,f,c	;volatile
 24069                           
 24070                           ;RF.c: 91: delayUS(614 );
 24071  016AEA  0E66               	movlw	102
 24072  016AEC  0101               	movlb	1	; () banked
 24073  016AEE  6F0E               	movwf	delayUS@US& (0+255),b
 24074  016AF0  0E02               	movlw	2
 24075  016AF2  0101               	movlb	1	; () banked
 24076  016AF4  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 24077  016AF6  0E00               	movlw	0
 24078  016AF8  0101               	movlb	1	; () banked
 24079  016AFA  6F10               	movwf	(delayUS@US+2)& (0+255),b
 24080  016AFC  0E00               	movlw	0
 24081  016AFE  0101               	movlb	1	; () banked
 24082  016B00  6F11               	movwf	(delayUS@US+3)& (0+255),b
 24083  016B02  EC10  F0B9         	call	_delayUS	;wreg free
 24084                           
 24085                           ;RF.c: 92: LATD |= pin;
 24086  016B06  0101               	movlb	1	; () banked
 24087  016B08  5118               	movf	Zero_Config1@pin& (0+255),w,b
 24088  016B0A  128C               	iorwf	3980,f,c	;volatile
 24089                           
 24090                           ; BSR set to: 1
 24091                           ;RF.c: 93: delayUS(216 );
 24092  016B0C  0ED8               	movlw	216
 24093  016B0E  0101               	movlb	1	; () banked
 24094  016B10  6F0E               	movwf	delayUS@US& (0+255),b
 24095  016B12  0E00               	movlw	0
 24096  016B14  0101               	movlb	1	; () banked
 24097  016B16  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 24098  016B18  0E00               	movlw	0
 24099  016B1A  0101               	movlb	1	; () banked
 24100  016B1C  6F10               	movwf	(delayUS@US+2)& (0+255),b
 24101  016B1E  0E00               	movlw	0
 24102  016B20  0101               	movlb	1	; () banked
 24103  016B22  6F11               	movwf	(delayUS@US+3)& (0+255),b
 24104  016B24  EC10  F0B9         	call	_delayUS	;wreg free
 24105                           
 24106                           ;RF.c: 94: LATD &= ~pin;
 24107  016B28  0101               	movlb	1	; () banked
 24108  016B2A  5118               	movf	Zero_Config1@pin& (0+255),w,b
 24109  016B2C  0AFF               	xorlw	255
 24110  016B2E  168C               	andwf	3980,f,c	;volatile
 24111                           
 24112                           ; BSR set to: 1
 24113                           ;RF.c: 95: delayUS(614 );
 24114  016B30  0E66               	movlw	102
 24115  016B32  0101               	movlb	1	; () banked
 24116  016B34  6F0E               	movwf	delayUS@US& (0+255),b
 24117  016B36  0E02               	movlw	2
 24118  016B38  0101               	movlb	1	; () banked
 24119  016B3A  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 24120  016B3C  0E00               	movlw	0
 24121  016B3E  0101               	movlb	1	; () banked
 24122  016B40  6F10               	movwf	(delayUS@US+2)& (0+255),b
 24123  016B42  0E00               	movlw	0
 24124  016B44  0101               	movlb	1	; () banked
 24125  016B46  6F11               	movwf	(delayUS@US+3)& (0+255),b
 24126  016B48  EC10  F0B9         	call	_delayUS	;wreg free
 24127  016B4C  0012               	return	
 24128  016B4E                     __end_of_Zero_Config1:
 24129                           	opt stack 0
 24130                           tblptru	equ	0xFF8
 24131                           tblptrh	equ	0xFF7
 24132                           tblptrl	equ	0xFF6
 24133                           tablat	equ	0xFF5
 24134                           prodh	equ	0xFF4
 24135                           prodl	equ	0xFF3
 24136                           intcon	equ	0xFF2
 24137                           postinc0	equ	0xFEE
 24138                           wreg	equ	0xFE8
 24139                           indf1	equ	0xFE7
 24140                           postinc1	equ	0xFE6
 24141                           postdec1	equ	0xFE5
 24142                           fsr1h	equ	0xFE2
 24143                           fsr1l	equ	0xFE1
 24144                           indf2	equ	0xFDF
 24145                           postinc2	equ	0xFDE
 24146                           postdec2	equ	0xFDD
 24147                           fsr2h	equ	0xFDA
 24148                           fsr2l	equ	0xFD9
 24149                           status	equ	0xFD8
 24150                           
 24151 ;; *************** function _One_Config1 *****************
 24152 ;; Defined at:
 24153 ;;		line 103 in file "RF.c"
 24154 ;; Parameters:    Size  Location     Type
 24155 ;;  pin             1    wreg     unsigned char 
 24156 ;; Auto vars:     Size  Location     Type
 24157 ;;  pin             1   24[BANK1 ] unsigned char 
 24158 ;; Return value:  Size  Location     Type
 24159 ;;		None               void
 24160 ;; Registers used:
 24161 ;;		wreg, status,2, status,0, cstack
 24162 ;; Tracked objects:
 24163 ;;		On entry : 0/0
 24164 ;;		On exit  : 0/0
 24165 ;;		Unchanged: 0/0
 24166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24168 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24170 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24171 ;;Total ram usage:        1 bytes
 24172 ;; Hardware stack levels used:    1
 24173 ;; Hardware stack levels required when called:    7
 24174 ;; This function calls:
 24175 ;;		_delayUS
 24176 ;; This function is called by:
 24177 ;;		_Send_Config1
 24178 ;; This function uses a non-reentrant model
 24179 ;;
 24180                           
 24181                           	psect	text48
 24182  016B4E                     __ptext48:
 24183                           	opt stack 0
 24184  016B4E                     _One_Config1:
 24185                           	opt stack 20
 24186                           
 24187                           ;incstack = 0
 24188                           ;One_Config1@pin stored from wreg
 24189  016B4E  0101               	movlb	1	; () banked
 24190  016B50  6F18               	movwf	One_Config1@pin& (0+255),b
 24191                           
 24192                           ; BSR set to: 1
 24193                           ;RF.c: 105: LATD |= pin;
 24194  016B52  0101               	movlb	1	; () banked
 24195  016B54  5118               	movf	One_Config1@pin& (0+255),w,b
 24196  016B56  128C               	iorwf	3980,f,c	;volatile
 24197                           
 24198                           ; BSR set to: 1
 24199                           ;RF.c: 106: delayUS(614);
 24200  016B58  0E66               	movlw	102
 24201  016B5A  0101               	movlb	1	; () banked
 24202  016B5C  6F0E               	movwf	delayUS@US& (0+255),b
 24203  016B5E  0E02               	movlw	2
 24204  016B60  0101               	movlb	1	; () banked
 24205  016B62  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 24206  016B64  0E00               	movlw	0
 24207  016B66  0101               	movlb	1	; () banked
 24208  016B68  6F10               	movwf	(delayUS@US+2)& (0+255),b
 24209  016B6A  0E00               	movlw	0
 24210  016B6C  0101               	movlb	1	; () banked
 24211  016B6E  6F11               	movwf	(delayUS@US+3)& (0+255),b
 24212  016B70  EC10  F0B9         	call	_delayUS	;wreg free
 24213                           
 24214                           ;RF.c: 107: LATD &= ~pin;
 24215  016B74  0101               	movlb	1	; () banked
 24216  016B76  5118               	movf	One_Config1@pin& (0+255),w,b
 24217  016B78  0AFF               	xorlw	255
 24218  016B7A  168C               	andwf	3980,f,c	;volatile
 24219                           
 24220                           ;RF.c: 108: delayUS(216);
 24221  016B7C  0ED8               	movlw	216
 24222  016B7E  0101               	movlb	1	; () banked
 24223  016B80  6F0E               	movwf	delayUS@US& (0+255),b
 24224  016B82  0E00               	movlw	0
 24225  016B84  0101               	movlb	1	; () banked
 24226  016B86  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 24227  016B88  0E00               	movlw	0
 24228  016B8A  0101               	movlb	1	; () banked
 24229  016B8C  6F10               	movwf	(delayUS@US+2)& (0+255),b
 24230  016B8E  0E00               	movlw	0
 24231  016B90  0101               	movlb	1	; () banked
 24232  016B92  6F11               	movwf	(delayUS@US+3)& (0+255),b
 24233  016B94  EC10  F0B9         	call	_delayUS	;wreg free
 24234                           
 24235                           ;RF.c: 109: LATD |= pin;
 24236  016B98  0101               	movlb	1	; () banked
 24237  016B9A  5118               	movf	One_Config1@pin& (0+255),w,b
 24238  016B9C  128C               	iorwf	3980,f,c	;volatile
 24239                           
 24240                           ; BSR set to: 1
 24241                           ;RF.c: 110: delayUS(614);
 24242  016B9E  0E66               	movlw	102
 24243  016BA0  0101               	movlb	1	; () banked
 24244  016BA2  6F0E               	movwf	delayUS@US& (0+255),b
 24245  016BA4  0E02               	movlw	2
 24246  016BA6  0101               	movlb	1	; () banked
 24247  016BA8  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 24248  016BAA  0E00               	movlw	0
 24249  016BAC  0101               	movlb	1	; () banked
 24250  016BAE  6F10               	movwf	(delayUS@US+2)& (0+255),b
 24251  016BB0  0E00               	movlw	0
 24252  016BB2  0101               	movlb	1	; () banked
 24253  016BB4  6F11               	movwf	(delayUS@US+3)& (0+255),b
 24254  016BB6  EC10  F0B9         	call	_delayUS	;wreg free
 24255                           
 24256                           ;RF.c: 111: LATD &= ~pin;
 24257  016BBA  0101               	movlb	1	; () banked
 24258  016BBC  5118               	movf	One_Config1@pin& (0+255),w,b
 24259  016BBE  0AFF               	xorlw	255
 24260  016BC0  168C               	andwf	3980,f,c	;volatile
 24261                           
 24262                           ; BSR set to: 1
 24263                           ;RF.c: 112: delayUS(216);
 24264  016BC2  0ED8               	movlw	216
 24265  016BC4  0101               	movlb	1	; () banked
 24266  016BC6  6F0E               	movwf	delayUS@US& (0+255),b
 24267  016BC8  0E00               	movlw	0
 24268  016BCA  0101               	movlb	1	; () banked
 24269  016BCC  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 24270  016BCE  0E00               	movlw	0
 24271  016BD0  0101               	movlb	1	; () banked
 24272  016BD2  6F10               	movwf	(delayUS@US+2)& (0+255),b
 24273  016BD4  0E00               	movlw	0
 24274  016BD6  0101               	movlb	1	; () banked
 24275  016BD8  6F11               	movwf	(delayUS@US+3)& (0+255),b
 24276  016BDA  EC10  F0B9         	call	_delayUS	;wreg free
 24277  016BDE  0012               	return	
 24278  016BE0                     __end_of_One_Config1:
 24279                           	opt stack 0
 24280                           tblptru	equ	0xFF8
 24281                           tblptrh	equ	0xFF7
 24282                           tblptrl	equ	0xFF6
 24283                           tablat	equ	0xFF5
 24284                           prodh	equ	0xFF4
 24285                           prodl	equ	0xFF3
 24286                           intcon	equ	0xFF2
 24287                           postinc0	equ	0xFEE
 24288                           wreg	equ	0xFE8
 24289                           indf1	equ	0xFE7
 24290                           postinc1	equ	0xFE6
 24291                           postdec1	equ	0xFE5
 24292                           fsr1h	equ	0xFE2
 24293                           fsr1l	equ	0xFE1
 24294                           indf2	equ	0xFDF
 24295                           postinc2	equ	0xFDE
 24296                           postdec2	equ	0xFDD
 24297                           fsr2h	equ	0xFDA
 24298                           fsr2l	equ	0xFD9
 24299                           status	equ	0xFD8
 24300                           
 24301 ;; *************** function _SET_RTC_TIME *****************
 24302 ;; Defined at:
 24303 ;;		line 170 in file "RTC.c"
 24304 ;; Parameters:    Size  Location     Type
 24305 ;;  SetTime         9   22[BANK1 ] struct TIME
 24306 ;; Auto vars:     Size  Location     Type
 24307 ;;  temp            7   35[BANK1 ] unsigned char [7]
 24308 ;;  Error           1   42[BANK1 ] char 
 24309 ;; Return value:  Size  Location     Type
 24310 ;;                  1    wreg      unsigned char 
 24311 ;; Registers used:
 24312 ;;		wreg, status,2, status,0, prodl, cstack
 24313 ;; Tracked objects:
 24314 ;;		On entry : 0/0
 24315 ;;		On exit  : 0/0
 24316 ;;		Unchanged: 0/0
 24317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24318 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 24319 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 24320 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 24321 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
 24322 ;;Total ram usage:       21 bytes
 24323 ;; Hardware stack levels used:    1
 24324 ;; Hardware stack levels required when called:    9
 24325 ;; This function calls:
 24326 ;;		_I2C_Write_At_Address
 24327 ;;		___awdiv
 24328 ;;		___awmod
 24329 ;; This function is called by:
 24330 ;;		_Command
 24331 ;; This function uses a non-reentrant model
 24332 ;;
 24333                           
 24334                           	psect	text49
 24335  0147C8                     __ptext49:
 24336                           	opt stack 0
 24337  0147C8                     _SET_RTC_TIME:
 24338                           	opt stack 19
 24339                           
 24340                           ;RTC.c: 172: signed char Error =0;
 24341                           
 24342                           ;incstack = 0
 24343  0147C8  0E00               	movlw	0
 24344  0147CA  0101               	movlb	1	; () banked
 24345  0147CC  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 24346                           
 24347                           ; BSR set to: 1
 24348                           ;RTC.c: 173: unsigned char temp[7];
 24349                           ;RTC.c: 175: temp[0] = ((SetTime.Seconds /10) << 4) + (SetTime.Seconds % 10);
 24350  0147CE  0101               	movlb	1	; () banked
 24351  0147D0  C116  F10E         	movff	SET_RTC_TIME@SetTime,___awmod@dividend
 24352  0147D4  0101               	movlb	1	; () banked
 24353  0147D6  6B0F               	clrf	(___awmod@dividend+1)& (0+255),b
 24354  0147D8  0E00               	movlw	0
 24355  0147DA  0101               	movlb	1	; () banked
 24356  0147DC  6F11               	movwf	(___awmod@divisor+1)& (0+255),b
 24357  0147DE  0E0A               	movlw	10
 24358  0147E0  0101               	movlb	1	; () banked
 24359  0147E2  6F10               	movwf	___awmod@divisor& (0+255),b
 24360  0147E4  ECCA  F0B1         	call	___awmod	;wreg free
 24361  0147E8  C10E  F11F         	movff	?___awmod,??_SET_RTC_TIME
 24362  0147EC  C10F  F120         	movff	?___awmod+1,??_SET_RTC_TIME+1
 24363  0147F0  0101               	movlb	1	; () banked
 24364  0147F2  C116  F10E         	movff	SET_RTC_TIME@SetTime,___awdiv@dividend
 24365  0147F6  0101               	movlb	1	; () banked
 24366  0147F8  6B0F               	clrf	(___awdiv@dividend+1)& (0+255),b
 24367  0147FA  0E00               	movlw	0
 24368  0147FC  0101               	movlb	1	; () banked
 24369  0147FE  6F11               	movwf	(___awdiv@divisor+1)& (0+255),b
 24370  014800  0E0A               	movlw	10
 24371  014802  0101               	movlb	1	; () banked
 24372  014804  6F10               	movwf	___awdiv@divisor& (0+255),b
 24373  014806  ECAA  F0AF         	call	___awdiv	;wreg free
 24374  01480A  0101               	movlb	1	; () banked
 24375  01480C  390E               	swapf	?___awdiv& (0+255),w,b
 24376  01480E  0BF0               	andlw	240
 24377  014810  0101               	movlb	1	; () banked
 24378  014812  251F               	addwf	??_SET_RTC_TIME& (0+255),w,b
 24379  014814  0101               	movlb	1	; () banked
 24380  014816  6F23               	movwf	SET_RTC_TIME@temp& (0+255),b
 24381                           
 24382                           ; BSR set to: 1
 24383                           ;RTC.c: 176: Error = I2C_Write_At_Address( 0b1101000, 0x00, temp[0] );
 24384  014818  0E00               	movlw	0
 24385  01481A  0101               	movlb	1	; () banked
 24386  01481C  6F11               	movwf	I2C_Write_At_Address@Register& (0+255),b
 24387  01481E  C123  F112         	movff	SET_RTC_TIME@temp,I2C_Write_At_Address@data
 24388  014822  0E68               	movlw	104
 24389  014824  EC88  F0B2         	call	_I2C_Write_At_Address
 24390  014828  0101               	movlb	1	; () banked
 24391  01482A  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 24392                           
 24393                           ; BSR set to: 1
 24394                           ;RTC.c: 177: if(Error)
 24395  01482C  0101               	movlb	1	; () banked
 24396  01482E  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 24397  014830  B4D8               	btfsc	status,2,c
 24398  014832  D002               	goto	l11936
 24399                           
 24400                           ; BSR set to: 1
 24401                           ;RTC.c: 178: {
 24402                           ;RTC.c: 179: return 1;
 24403  014834  0E01               	movlw	1
 24404  014836  0012               	return	
 24405  014838                     l11936:
 24406                           
 24407                           ; BSR set to: 1
 24408                           ;RTC.c: 180: }
 24409                           ;RTC.c: 182: temp[1] = ((SetTime.Minutes /10) << 4) + (SetTime.Minutes % 10);
 24410  014838  0101               	movlb	1	; () banked
 24411  01483A  C117  F10E         	movff	SET_RTC_TIME@SetTime+1,___awmod@dividend
 24412  01483E  0101               	movlb	1	; () banked
 24413  014840  6B0F               	clrf	(___awmod@dividend+1)& (0+255),b
 24414  014842  0E00               	movlw	0
 24415  014844  0101               	movlb	1	; () banked
 24416  014846  6F11               	movwf	(___awmod@divisor+1)& (0+255),b
 24417  014848  0E0A               	movlw	10
 24418  01484A  0101               	movlb	1	; () banked
 24419  01484C  6F10               	movwf	___awmod@divisor& (0+255),b
 24420  01484E  ECCA  F0B1         	call	___awmod	;wreg free
 24421  014852  C10E  F11F         	movff	?___awmod,??_SET_RTC_TIME
 24422  014856  C10F  F120         	movff	?___awmod+1,??_SET_RTC_TIME+1
 24423  01485A  0101               	movlb	1	; () banked
 24424  01485C  C117  F10E         	movff	SET_RTC_TIME@SetTime+1,___awdiv@dividend
 24425  014860  0101               	movlb	1	; () banked
 24426  014862  6B0F               	clrf	(___awdiv@dividend+1)& (0+255),b
 24427  014864  0E00               	movlw	0
 24428  014866  0101               	movlb	1	; () banked
 24429  014868  6F11               	movwf	(___awdiv@divisor+1)& (0+255),b
 24430  01486A  0E0A               	movlw	10
 24431  01486C  0101               	movlb	1	; () banked
 24432  01486E  6F10               	movwf	___awdiv@divisor& (0+255),b
 24433  014870  ECAA  F0AF         	call	___awdiv	;wreg free
 24434  014874  0101               	movlb	1	; () banked
 24435  014876  390E               	swapf	?___awdiv& (0+255),w,b
 24436  014878  0BF0               	andlw	240
 24437  01487A  0101               	movlb	1	; () banked
 24438  01487C  251F               	addwf	??_SET_RTC_TIME& (0+255),w,b
 24439  01487E  0101               	movlb	1	; () banked
 24440  014880  6F24               	movwf	(SET_RTC_TIME@temp+1)& (0+255),b
 24441                           
 24442                           ; BSR set to: 1
 24443                           ;RTC.c: 183: Error = I2C_Write_At_Address( 0b1101000, 0x01, temp[1] );
 24444  014882  0E01               	movlw	1
 24445  014884  0101               	movlb	1	; () banked
 24446  014886  6F11               	movwf	I2C_Write_At_Address@Register& (0+255),b
 24447  014888  C124  F112         	movff	SET_RTC_TIME@temp+1,I2C_Write_At_Address@data
 24448  01488C  0E68               	movlw	104
 24449  01488E  EC88  F0B2         	call	_I2C_Write_At_Address
 24450  014892  0101               	movlb	1	; () banked
 24451  014894  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 24452                           
 24453                           ; BSR set to: 1
 24454                           ;RTC.c: 184: if(Error)
 24455  014896  0101               	movlb	1	; () banked
 24456  014898  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 24457  01489A  B4D8               	btfsc	status,2,c
 24458  01489C  D002               	goto	l11946
 24459                           
 24460                           ; BSR set to: 1
 24461                           ;RTC.c: 185: {
 24462                           ;RTC.c: 186: return 2;
 24463  01489E  0E02               	movlw	2
 24464  0148A0  0012               	return	
 24465  0148A2                     l11946:
 24466                           
 24467                           ; BSR set to: 1
 24468                           ;RTC.c: 187: }
 24469                           ;RTC.c: 189: temp[2] = ((SetTime.Hours /10) << 4) + (SetTime.Hours % 10) + (SetTime.Hour
      +                          sAM_PM << 5);
 24470  0148A2  C11A  F11F         	movff	SET_RTC_TIME@SetTime+4,??_SET_RTC_TIME
 24471  0148A6  0E05               	movlw	5
 24472  0148A8  0101               	movlb	1	; () banked
 24473  0148AA  6F20               	movwf	(??_SET_RTC_TIME+1)& (0+255),b
 24474  0148AC                     u15725:
 24475  0148AC  0101               	movlb	1	; () banked
 24476  0148AE  90D8               	bcf	status,0,c
 24477  0148B0  371F               	rlcf	??_SET_RTC_TIME& (0+255),f,b
 24478  0148B2  0101               	movlb	1	; () banked
 24479  0148B4  2F20               	decfsz	(??_SET_RTC_TIME+1)& (0+255),f,b
 24480  0148B6  D7FA               	goto	u15725
 24481  0148B8  0101               	movlb	1	; () banked
 24482  0148BA  C118  F10E         	movff	SET_RTC_TIME@SetTime+2,___awmod@dividend
 24483  0148BE  0101               	movlb	1	; () banked
 24484  0148C0  6B0F               	clrf	(___awmod@dividend+1)& (0+255),b
 24485  0148C2  0E00               	movlw	0
 24486  0148C4  0101               	movlb	1	; () banked
 24487  0148C6  6F11               	movwf	(___awmod@divisor+1)& (0+255),b
 24488  0148C8  0E0A               	movlw	10
 24489  0148CA  0101               	movlb	1	; () banked
 24490  0148CC  6F10               	movwf	___awmod@divisor& (0+255),b
 24491  0148CE  ECCA  F0B1         	call	___awmod	;wreg free
 24492  0148D2  C10E  F121         	movff	?___awmod,??_SET_RTC_TIME+2
 24493  0148D6  C10F  F122         	movff	?___awmod+1,??_SET_RTC_TIME+3
 24494  0148DA  0101               	movlb	1	; () banked
 24495  0148DC  C118  F10E         	movff	SET_RTC_TIME@SetTime+2,___awdiv@dividend
 24496  0148E0  0101               	movlb	1	; () banked
 24497  0148E2  6B0F               	clrf	(___awdiv@dividend+1)& (0+255),b
 24498  0148E4  0E00               	movlw	0
 24499  0148E6  0101               	movlb	1	; () banked
 24500  0148E8  6F11               	movwf	(___awdiv@divisor+1)& (0+255),b
 24501  0148EA  0E0A               	movlw	10
 24502  0148EC  0101               	movlb	1	; () banked
 24503  0148EE  6F10               	movwf	___awdiv@divisor& (0+255),b
 24504  0148F0  ECAA  F0AF         	call	___awdiv	;wreg free
 24505  0148F4  0101               	movlb	1	; () banked
 24506  0148F6  390E               	swapf	?___awdiv& (0+255),w,b
 24507  0148F8  0BF0               	andlw	240
 24508  0148FA  0101               	movlb	1	; () banked
 24509  0148FC  2521               	addwf	(??_SET_RTC_TIME+2)& (0+255),w,b
 24510  0148FE  0101               	movlb	1	; () banked
 24511  014900  251F               	addwf	??_SET_RTC_TIME& (0+255),w,b
 24512  014902  0101               	movlb	1	; () banked
 24513  014904  6F25               	movwf	(SET_RTC_TIME@temp+2)& (0+255),b
 24514                           
 24515                           ; BSR set to: 1
 24516                           ;RTC.c: 190: Error = I2C_Write_At_Address( 0b1101000, 0x02, temp[2] );
 24517  014906  0E02               	movlw	2
 24518  014908  0101               	movlb	1	; () banked
 24519  01490A  6F11               	movwf	I2C_Write_At_Address@Register& (0+255),b
 24520  01490C  C125  F112         	movff	SET_RTC_TIME@temp+2,I2C_Write_At_Address@data
 24521  014910  0E68               	movlw	104
 24522  014912  EC88  F0B2         	call	_I2C_Write_At_Address
 24523  014916  0101               	movlb	1	; () banked
 24524  014918  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 24525                           
 24526                           ; BSR set to: 1
 24527                           ;RTC.c: 191: if(Error)
 24528  01491A  0101               	movlb	1	; () banked
 24529  01491C  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 24530  01491E  B4D8               	btfsc	status,2,c
 24531  014920  D002               	goto	l1115
 24532                           
 24533                           ; BSR set to: 1
 24534                           ;RTC.c: 192: {
 24535                           ;RTC.c: 193: return 3;
 24536  014922  0E03               	movlw	3
 24537  014924  0012               	return	
 24538  014926                     l1115:
 24539                           
 24540                           ; BSR set to: 1
 24541                           ;RTC.c: 194: }
 24542                           ;RTC.c: 196: temp[3] = (SetTime.Day);
 24543  014926  C11B  F126         	movff	SET_RTC_TIME@SetTime+5,SET_RTC_TIME@temp+3
 24544                           
 24545                           ; BSR set to: 1
 24546                           ;RTC.c: 197: Error = I2C_Write_At_Address( 0b1101000, 0x03, temp[3] );
 24547  01492A  0E03               	movlw	3
 24548  01492C  0101               	movlb	1	; () banked
 24549  01492E  6F11               	movwf	I2C_Write_At_Address@Register& (0+255),b
 24550  014930  C126  F112         	movff	SET_RTC_TIME@temp+3,I2C_Write_At_Address@data
 24551  014934  0E68               	movlw	104
 24552  014936  EC88  F0B2         	call	_I2C_Write_At_Address
 24553  01493A  0101               	movlb	1	; () banked
 24554  01493C  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 24555                           
 24556                           ; BSR set to: 1
 24557                           ;RTC.c: 198: if(Error)
 24558  01493E  0101               	movlb	1	; () banked
 24559  014940  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 24560  014942  B4D8               	btfsc	status,2,c
 24561  014944  D002               	goto	l11964
 24562                           
 24563                           ; BSR set to: 1
 24564                           ;RTC.c: 199: {
 24565                           ;RTC.c: 200: return 4;
 24566  014946  0E04               	movlw	4
 24567  014948  0012               	return	
 24568  01494A                     l11964:
 24569                           
 24570                           ; BSR set to: 1
 24571                           ;RTC.c: 201: }
 24572                           ;RTC.c: 203: temp[4] = ((SetTime.Date /10) << 4) + (SetTime.Date % 10);
 24573  01494A  0101               	movlb	1	; () banked
 24574  01494C  C11C  F10E         	movff	SET_RTC_TIME@SetTime+6,___awmod@dividend
 24575  014950  0101               	movlb	1	; () banked
 24576  014952  6B0F               	clrf	(___awmod@dividend+1)& (0+255),b
 24577  014954  0E00               	movlw	0
 24578  014956  0101               	movlb	1	; () banked
 24579  014958  6F11               	movwf	(___awmod@divisor+1)& (0+255),b
 24580  01495A  0E0A               	movlw	10
 24581  01495C  0101               	movlb	1	; () banked
 24582  01495E  6F10               	movwf	___awmod@divisor& (0+255),b
 24583  014960  ECCA  F0B1         	call	___awmod	;wreg free
 24584  014964  C10E  F11F         	movff	?___awmod,??_SET_RTC_TIME
 24585  014968  C10F  F120         	movff	?___awmod+1,??_SET_RTC_TIME+1
 24586  01496C  0101               	movlb	1	; () banked
 24587  01496E  C11C  F10E         	movff	SET_RTC_TIME@SetTime+6,___awdiv@dividend
 24588  014972  0101               	movlb	1	; () banked
 24589  014974  6B0F               	clrf	(___awdiv@dividend+1)& (0+255),b
 24590  014976  0E00               	movlw	0
 24591  014978  0101               	movlb	1	; () banked
 24592  01497A  6F11               	movwf	(___awdiv@divisor+1)& (0+255),b
 24593  01497C  0E0A               	movlw	10
 24594  01497E  0101               	movlb	1	; () banked
 24595  014980  6F10               	movwf	___awdiv@divisor& (0+255),b
 24596  014982  ECAA  F0AF         	call	___awdiv	;wreg free
 24597  014986  0101               	movlb	1	; () banked
 24598  014988  390E               	swapf	?___awdiv& (0+255),w,b
 24599  01498A  0BF0               	andlw	240
 24600  01498C  0101               	movlb	1	; () banked
 24601  01498E  251F               	addwf	??_SET_RTC_TIME& (0+255),w,b
 24602  014990  0101               	movlb	1	; () banked
 24603  014992  6F27               	movwf	(SET_RTC_TIME@temp+4)& (0+255),b
 24604                           
 24605                           ; BSR set to: 1
 24606                           ;RTC.c: 204: Error = I2C_Write_At_Address( 0b1101000, 0x04, temp[4] );
 24607  014994  0E04               	movlw	4
 24608  014996  0101               	movlb	1	; () banked
 24609  014998  6F11               	movwf	I2C_Write_At_Address@Register& (0+255),b
 24610  01499A  C127  F112         	movff	SET_RTC_TIME@temp+4,I2C_Write_At_Address@data
 24611  01499E  0E68               	movlw	104
 24612  0149A0  EC88  F0B2         	call	_I2C_Write_At_Address
 24613  0149A4  0101               	movlb	1	; () banked
 24614  0149A6  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 24615                           
 24616                           ; BSR set to: 1
 24617                           ;RTC.c: 205: if(Error)
 24618  0149A8  0101               	movlb	1	; () banked
 24619  0149AA  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 24620  0149AC  B4D8               	btfsc	status,2,c
 24621  0149AE  D002               	goto	l11974
 24622                           
 24623                           ; BSR set to: 1
 24624                           ;RTC.c: 206: {
 24625                           ;RTC.c: 207: return 5;
 24626  0149B0  0E05               	movlw	5
 24627  0149B2  0012               	return	
 24628  0149B4                     l11974:
 24629                           
 24630                           ; BSR set to: 1
 24631                           ;RTC.c: 208: }
 24632                           ;RTC.c: 210: temp[5] = ((SetTime.Month /10) << 4) + (SetTime.Month % 10);
 24633  0149B4  0101               	movlb	1	; () banked
 24634  0149B6  C11D  F10E         	movff	SET_RTC_TIME@SetTime+7,___awmod@dividend
 24635  0149BA  0101               	movlb	1	; () banked
 24636  0149BC  6B0F               	clrf	(___awmod@dividend+1)& (0+255),b
 24637  0149BE  0E00               	movlw	0
 24638  0149C0  0101               	movlb	1	; () banked
 24639  0149C2  6F11               	movwf	(___awmod@divisor+1)& (0+255),b
 24640  0149C4  0E0A               	movlw	10
 24641  0149C6  0101               	movlb	1	; () banked
 24642  0149C8  6F10               	movwf	___awmod@divisor& (0+255),b
 24643  0149CA  ECCA  F0B1         	call	___awmod	;wreg free
 24644  0149CE  C10E  F11F         	movff	?___awmod,??_SET_RTC_TIME
 24645  0149D2  C10F  F120         	movff	?___awmod+1,??_SET_RTC_TIME+1
 24646  0149D6  0101               	movlb	1	; () banked
 24647  0149D8  C11D  F10E         	movff	SET_RTC_TIME@SetTime+7,___awdiv@dividend
 24648  0149DC  0101               	movlb	1	; () banked
 24649  0149DE  6B0F               	clrf	(___awdiv@dividend+1)& (0+255),b
 24650  0149E0  0E00               	movlw	0
 24651  0149E2  0101               	movlb	1	; () banked
 24652  0149E4  6F11               	movwf	(___awdiv@divisor+1)& (0+255),b
 24653  0149E6  0E0A               	movlw	10
 24654  0149E8  0101               	movlb	1	; () banked
 24655  0149EA  6F10               	movwf	___awdiv@divisor& (0+255),b
 24656  0149EC  ECAA  F0AF         	call	___awdiv	;wreg free
 24657  0149F0  0101               	movlb	1	; () banked
 24658  0149F2  390E               	swapf	?___awdiv& (0+255),w,b
 24659  0149F4  0BF0               	andlw	240
 24660  0149F6  0101               	movlb	1	; () banked
 24661  0149F8  251F               	addwf	??_SET_RTC_TIME& (0+255),w,b
 24662  0149FA  0101               	movlb	1	; () banked
 24663  0149FC  6F28               	movwf	(SET_RTC_TIME@temp+5)& (0+255),b
 24664                           
 24665                           ; BSR set to: 1
 24666                           ;RTC.c: 211: Error = I2C_Write_At_Address( 0b1101000, 0x05, temp[5] );
 24667  0149FE  0E05               	movlw	5
 24668  014A00  0101               	movlb	1	; () banked
 24669  014A02  6F11               	movwf	I2C_Write_At_Address@Register& (0+255),b
 24670  014A04  C128  F112         	movff	SET_RTC_TIME@temp+5,I2C_Write_At_Address@data
 24671  014A08  0E68               	movlw	104
 24672  014A0A  EC88  F0B2         	call	_I2C_Write_At_Address
 24673  014A0E  0101               	movlb	1	; () banked
 24674  014A10  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 24675                           
 24676                           ; BSR set to: 1
 24677                           ;RTC.c: 212: if(Error)
 24678  014A12  0101               	movlb	1	; () banked
 24679  014A14  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 24680  014A16  B4D8               	btfsc	status,2,c
 24681  014A18  D002               	goto	l11984
 24682                           
 24683                           ; BSR set to: 1
 24684                           ;RTC.c: 213: {
 24685                           ;RTC.c: 214: return 6;
 24686  014A1A  0E06               	movlw	6
 24687  014A1C  0012               	return	
 24688  014A1E                     l11984:
 24689                           
 24690                           ; BSR set to: 1
 24691                           ;RTC.c: 215: }
 24692                           ;RTC.c: 217: temp[6] = ((SetTime.Year /10) << 4) + (SetTime.Year % 10);
 24693  014A1E  0101               	movlb	1	; () banked
 24694  014A20  C11E  F10E         	movff	SET_RTC_TIME@SetTime+8,___awmod@dividend
 24695  014A24  0101               	movlb	1	; () banked
 24696  014A26  6B0F               	clrf	(___awmod@dividend+1)& (0+255),b
 24697  014A28  0E00               	movlw	0
 24698  014A2A  0101               	movlb	1	; () banked
 24699  014A2C  6F11               	movwf	(___awmod@divisor+1)& (0+255),b
 24700  014A2E  0E0A               	movlw	10
 24701  014A30  0101               	movlb	1	; () banked
 24702  014A32  6F10               	movwf	___awmod@divisor& (0+255),b
 24703  014A34  ECCA  F0B1         	call	___awmod	;wreg free
 24704  014A38  C10E  F11F         	movff	?___awmod,??_SET_RTC_TIME
 24705  014A3C  C10F  F120         	movff	?___awmod+1,??_SET_RTC_TIME+1
 24706  014A40  0101               	movlb	1	; () banked
 24707  014A42  C11E  F10E         	movff	SET_RTC_TIME@SetTime+8,___awdiv@dividend
 24708  014A46  0101               	movlb	1	; () banked
 24709  014A48  6B0F               	clrf	(___awdiv@dividend+1)& (0+255),b
 24710  014A4A  0E00               	movlw	0
 24711  014A4C  0101               	movlb	1	; () banked
 24712  014A4E  6F11               	movwf	(___awdiv@divisor+1)& (0+255),b
 24713  014A50  0E0A               	movlw	10
 24714  014A52  0101               	movlb	1	; () banked
 24715  014A54  6F10               	movwf	___awdiv@divisor& (0+255),b
 24716  014A56  ECAA  F0AF         	call	___awdiv	;wreg free
 24717  014A5A  0101               	movlb	1	; () banked
 24718  014A5C  390E               	swapf	?___awdiv& (0+255),w,b
 24719  014A5E  0BF0               	andlw	240
 24720  014A60  0101               	movlb	1	; () banked
 24721  014A62  251F               	addwf	??_SET_RTC_TIME& (0+255),w,b
 24722  014A64  0101               	movlb	1	; () banked
 24723  014A66  6F29               	movwf	(SET_RTC_TIME@temp+6)& (0+255),b
 24724                           
 24725                           ; BSR set to: 1
 24726                           ;RTC.c: 218: Error = I2C_Write_At_Address( 0b1101000, 0x06, temp[6] );
 24727  014A68  0E06               	movlw	6
 24728  014A6A  0101               	movlb	1	; () banked
 24729  014A6C  6F11               	movwf	I2C_Write_At_Address@Register& (0+255),b
 24730  014A6E  C129  F112         	movff	SET_RTC_TIME@temp+6,I2C_Write_At_Address@data
 24731  014A72  0E68               	movlw	104
 24732  014A74  EC88  F0B2         	call	_I2C_Write_At_Address
 24733  014A78  0101               	movlb	1	; () banked
 24734  014A7A  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 24735                           
 24736                           ; BSR set to: 1
 24737                           ;RTC.c: 219: if(Error)
 24738  014A7C  0101               	movlb	1	; () banked
 24739  014A7E  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 24740  014A80  B4D8               	btfsc	status,2,c
 24741  014A82  D002               	goto	l11994
 24742                           
 24743                           ; BSR set to: 1
 24744                           ;RTC.c: 220: {
 24745                           ;RTC.c: 221: return 7;
 24746  014A84  0E07               	movlw	7
 24747  014A86  0012               	return	
 24748  014A88                     l11994:
 24749                           
 24750                           ; BSR set to: 1
 24751                           ;RTC.c: 222: }
 24752                           ;RTC.c: 224: return 0;
 24753  014A88  0E00               	movlw	0
 24754  014A8A  0012               	return	
 24755  014A8C                     __end_of_SET_RTC_TIME:
 24756                           	opt stack 0
 24757                           tblptru	equ	0xFF8
 24758                           tblptrh	equ	0xFF7
 24759                           tblptrl	equ	0xFF6
 24760                           tablat	equ	0xFF5
 24761                           prodh	equ	0xFF4
 24762                           prodl	equ	0xFF3
 24763                           intcon	equ	0xFF2
 24764                           postinc0	equ	0xFEE
 24765                           wreg	equ	0xFE8
 24766                           indf1	equ	0xFE7
 24767                           postinc1	equ	0xFE6
 24768                           postdec1	equ	0xFE5
 24769                           fsr1h	equ	0xFE2
 24770                           fsr1l	equ	0xFE1
 24771                           indf2	equ	0xFDF
 24772                           postinc2	equ	0xFDE
 24773                           postdec2	equ	0xFDD
 24774                           fsr2h	equ	0xFDA
 24775                           fsr2l	equ	0xFD9
 24776                           status	equ	0xFD8
 24777                           
 24778 ;; *************** function ___awmod *****************
 24779 ;; Defined at:
 24780 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
 24781 ;; Parameters:    Size  Location     Type
 24782 ;;  dividend        2   14[BANK1 ] int 
 24783 ;;  divisor         2   16[BANK1 ] int 
 24784 ;; Auto vars:     Size  Location     Type
 24785 ;;  sign            1   19[BANK1 ] unsigned char 
 24786 ;;  counter         1   18[BANK1 ] unsigned char 
 24787 ;; Return value:  Size  Location     Type
 24788 ;;                  2   14[BANK1 ] int 
 24789 ;; Registers used:
 24790 ;;		wreg, status,2, status,0, prodl
 24791 ;; Tracked objects:
 24792 ;;		On entry : 0/0
 24793 ;;		On exit  : 0/0
 24794 ;;		Unchanged: 0/0
 24795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24796 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 24797 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24799 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 24800 ;;Total ram usage:        6 bytes
 24801 ;; Hardware stack levels used:    1
 24802 ;; Hardware stack levels required when called:    6
 24803 ;; This function calls:
 24804 ;;		Nothing
 24805 ;; This function is called by:
 24806 ;;		_SET_RTC_TIME
 24807 ;; This function uses a non-reentrant model
 24808 ;;
 24809                           
 24810                           	psect	text50
 24811  016394                     __ptext50:
 24812                           	opt stack 0
 24813  016394                     ___awmod:
 24814                           	opt stack 21
 24815                           
 24816                           ; BSR set to: 1
 24817                           ;incstack = 0
 24818  016394  0E00               	movlw	0
 24819  016396  0101               	movlb	1	; () banked
 24820  016398  6F13               	movwf	___awmod@sign& (0+255),b
 24821                           
 24822                           ; BSR set to: 1
 24823  01639A  0101               	movlb	1	; () banked
 24824  01639C  510F               	movf	(___awmod@dividend+1)& (0+255),w,b
 24825  01639E  0A80               	xorlw	128
 24826  0163A0  6EF3               	movwf	prodl,c
 24827  0163A2  0E80               	movlw	128
 24828  0163A4  5CF3               	subwf	prodl,w,c
 24829  0163A6  0E00               	movlw	0
 24830  0163A8  B4D8               	btfsc	status,2,c
 24831  0163AA  5D0E               	subwf	___awmod@dividend& (0+255),w,b
 24832  0163AC  B0D8               	btfsc	status,0,c
 24833  0163AE  D009               	goto	l11028
 24834                           
 24835                           ; BSR set to: 1
 24836  0163B0  0101               	movlb	1	; () banked
 24837  0163B2  6D0E               	negf	___awmod@dividend& (0+255),b
 24838  0163B4  0101               	movlb	1	; () banked
 24839  0163B6  1F0F               	comf	(___awmod@dividend+1)& (0+255),f,b
 24840  0163B8  B0D8               	btfsc	status,0,c
 24841  0163BA  2B0F               	incf	(___awmod@dividend+1)& (0+255),f,b
 24842                           
 24843                           ; BSR set to: 1
 24844  0163BC  0E01               	movlw	1
 24845  0163BE  0101               	movlb	1	; () banked
 24846  0163C0  6F13               	movwf	___awmod@sign& (0+255),b
 24847  0163C2                     l11028:
 24848                           
 24849                           ; BSR set to: 1
 24850  0163C2  0101               	movlb	1	; () banked
 24851  0163C4  5111               	movf	(___awmod@divisor+1)& (0+255),w,b
 24852  0163C6  0A80               	xorlw	128
 24853  0163C8  6EF3               	movwf	prodl,c
 24854  0163CA  0E80               	movlw	128
 24855  0163CC  5CF3               	subwf	prodl,w,c
 24856  0163CE  0E00               	movlw	0
 24857  0163D0  B4D8               	btfsc	status,2,c
 24858  0163D2  5D10               	subwf	___awmod@divisor& (0+255),w,b
 24859  0163D4  B0D8               	btfsc	status,0,c
 24860  0163D6  D006               	goto	l11032
 24861                           
 24862                           ; BSR set to: 1
 24863  0163D8  0101               	movlb	1	; () banked
 24864  0163DA  6D10               	negf	___awmod@divisor& (0+255),b
 24865  0163DC  0101               	movlb	1	; () banked
 24866  0163DE  1F11               	comf	(___awmod@divisor+1)& (0+255),f,b
 24867  0163E0  B0D8               	btfsc	status,0,c
 24868  0163E2  2B11               	incf	(___awmod@divisor+1)& (0+255),f,b
 24869  0163E4                     l11032:
 24870                           
 24871                           ; BSR set to: 1
 24872  0163E4  0101               	movlb	1	; () banked
 24873  0163E6  5111               	movf	(___awmod@divisor+1)& (0+255),w,b
 24874  0163E8  1110               	iorwf	___awmod@divisor& (0+255),w,b
 24875  0163EA  B4D8               	btfsc	status,2,c
 24876  0163EC  D026               	goto	l11048
 24877                           
 24878                           ; BSR set to: 1
 24879  0163EE  0E01               	movlw	1
 24880  0163F0  0101               	movlb	1	; () banked
 24881  0163F2  6F12               	movwf	___awmod@counter& (0+255),b
 24882  0163F4  D006               	goto	l11038
 24883  0163F6                     l11036:
 24884                           
 24885                           ; BSR set to: 1
 24886  0163F6  0101               	movlb	1	; () banked
 24887  0163F8  90D8               	bcf	status,0,c
 24888  0163FA  3710               	rlcf	___awmod@divisor& (0+255),f,b
 24889  0163FC  3711               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 24890  0163FE  0101               	movlb	1	; () banked
 24891  016400  2B12               	incf	___awmod@counter& (0+255),f,b
 24892  016402                     l11038:
 24893                           
 24894                           ; BSR set to: 1
 24895  016402  0101               	movlb	1	; () banked
 24896  016404  AF11               	btfss	(___awmod@divisor+1)& (0+255),7,b
 24897  016406  D7F7               	goto	l11036
 24898  016408                     l11040:
 24899                           
 24900                           ; BSR set to: 1
 24901  016408  0101               	movlb	1	; () banked
 24902  01640A  5110               	movf	___awmod@divisor& (0+255),w,b
 24903  01640C  0101               	movlb	1	; () banked
 24904  01640E  5D0E               	subwf	___awmod@dividend& (0+255),w,b
 24905  016410  0101               	movlb	1	; () banked
 24906  016412  5111               	movf	(___awmod@divisor+1)& (0+255),w,b
 24907  016414  0101               	movlb	1	; () banked
 24908  016416  590F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 24909  016418  A0D8               	btfss	status,0,c
 24910  01641A  D008               	goto	l11044
 24911                           
 24912                           ; BSR set to: 1
 24913  01641C  0101               	movlb	1	; () banked
 24914  01641E  5110               	movf	___awmod@divisor& (0+255),w,b
 24915  016420  0101               	movlb	1	; () banked
 24916  016422  5F0E               	subwf	___awmod@dividend& (0+255),f,b
 24917  016424  0101               	movlb	1	; () banked
 24918  016426  5111               	movf	(___awmod@divisor+1)& (0+255),w,b
 24919  016428  0101               	movlb	1	; () banked
 24920  01642A  5B0F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 24921  01642C                     l11044:
 24922                           
 24923                           ; BSR set to: 1
 24924  01642C  0101               	movlb	1	; () banked
 24925  01642E  90D8               	bcf	status,0,c
 24926  016430  3311               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 24927  016432  3310               	rrcf	___awmod@divisor& (0+255),f,b
 24928                           
 24929                           ; BSR set to: 1
 24930  016434  0101               	movlb	1	; () banked
 24931  016436  2F12               	decfsz	___awmod@counter& (0+255),f,b
 24932  016438  D7E7               	goto	l11040
 24933  01643A                     l11048:
 24934                           
 24935                           ; BSR set to: 1
 24936  01643A  0101               	movlb	1	; () banked
 24937  01643C  5113               	movf	___awmod@sign& (0+255),w,b
 24938  01643E  B4D8               	btfsc	status,2,c
 24939  016440  D006               	goto	l11052
 24940                           
 24941                           ; BSR set to: 1
 24942  016442  0101               	movlb	1	; () banked
 24943  016444  6D0E               	negf	___awmod@dividend& (0+255),b
 24944  016446  0101               	movlb	1	; () banked
 24945  016448  1F0F               	comf	(___awmod@dividend+1)& (0+255),f,b
 24946  01644A  B0D8               	btfsc	status,0,c
 24947  01644C  2B0F               	incf	(___awmod@dividend+1)& (0+255),f,b
 24948  01644E                     l11052:
 24949                           
 24950                           ; BSR set to: 1
 24951  01644E  C10E  F10E         	movff	___awmod@dividend,?___awmod
 24952  016452  C10F  F10F         	movff	___awmod@dividend+1,?___awmod+1
 24953  016456  0012               	return	
 24954  016458                     __end_of___awmod:
 24955                           	opt stack 0
 24956                           tblptru	equ	0xFF8
 24957                           tblptrh	equ	0xFF7
 24958                           tblptrl	equ	0xFF6
 24959                           tablat	equ	0xFF5
 24960                           prodh	equ	0xFF4
 24961                           prodl	equ	0xFF3
 24962                           intcon	equ	0xFF2
 24963                           postinc0	equ	0xFEE
 24964                           wreg	equ	0xFE8
 24965                           indf1	equ	0xFE7
 24966                           postinc1	equ	0xFE6
 24967                           postdec1	equ	0xFE5
 24968                           fsr1h	equ	0xFE2
 24969                           fsr1l	equ	0xFE1
 24970                           indf2	equ	0xFDF
 24971                           postinc2	equ	0xFDE
 24972                           postdec2	equ	0xFDD
 24973                           fsr2h	equ	0xFDA
 24974                           fsr2l	equ	0xFD9
 24975                           status	equ	0xFD8
 24976                           
 24977 ;; *************** function ___awdiv *****************
 24978 ;; Defined at:
 24979 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
 24980 ;; Parameters:    Size  Location     Type
 24981 ;;  dividend        2   14[BANK1 ] int 
 24982 ;;  divisor         2   16[BANK1 ] int 
 24983 ;; Auto vars:     Size  Location     Type
 24984 ;;  quotient        2   20[BANK1 ] int 
 24985 ;;  sign            1   19[BANK1 ] unsigned char 
 24986 ;;  counter         1   18[BANK1 ] unsigned char 
 24987 ;; Return value:  Size  Location     Type
 24988 ;;                  2   14[BANK1 ] int 
 24989 ;; Registers used:
 24990 ;;		wreg, status,2, status,0, prodl
 24991 ;; Tracked objects:
 24992 ;;		On entry : 0/0
 24993 ;;		On exit  : 0/0
 24994 ;;		Unchanged: 0/0
 24995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24996 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 24997 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 24998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24999 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 25000 ;;Total ram usage:        8 bytes
 25001 ;; Hardware stack levels used:    1
 25002 ;; Hardware stack levels required when called:    6
 25003 ;; This function calls:
 25004 ;;		Nothing
 25005 ;; This function is called by:
 25006 ;;		_SET_RTC_TIME
 25007 ;; This function uses a non-reentrant model
 25008 ;;
 25009                           
 25010                           	psect	text51
 25011  015F54                     __ptext51:
 25012                           	opt stack 0
 25013  015F54                     ___awdiv:
 25014                           	opt stack 21
 25015                           
 25016                           ; BSR set to: 1
 25017                           ;incstack = 0
 25018  015F54  0E00               	movlw	0
 25019  015F56  0101               	movlb	1	; () banked
 25020  015F58  6F13               	movwf	___awdiv@sign& (0+255),b
 25021                           
 25022                           ; BSR set to: 1
 25023  015F5A  0101               	movlb	1	; () banked
 25024  015F5C  5111               	movf	(___awdiv@divisor+1)& (0+255),w,b
 25025  015F5E  0A80               	xorlw	128
 25026  015F60  6EF3               	movwf	prodl,c
 25027  015F62  0E80               	movlw	128
 25028  015F64  5CF3               	subwf	prodl,w,c
 25029  015F66  0E00               	movlw	0
 25030  015F68  B4D8               	btfsc	status,2,c
 25031  015F6A  5D10               	subwf	___awdiv@divisor& (0+255),w,b
 25032  015F6C  B0D8               	btfsc	status,0,c
 25033  015F6E  D009               	goto	l10984
 25034                           
 25035                           ; BSR set to: 1
 25036  015F70  0101               	movlb	1	; () banked
 25037  015F72  6D10               	negf	___awdiv@divisor& (0+255),b
 25038  015F74  0101               	movlb	1	; () banked
 25039  015F76  1F11               	comf	(___awdiv@divisor+1)& (0+255),f,b
 25040  015F78  B0D8               	btfsc	status,0,c
 25041  015F7A  2B11               	incf	(___awdiv@divisor+1)& (0+255),f,b
 25042                           
 25043                           ; BSR set to: 1
 25044  015F7C  0E01               	movlw	1
 25045  015F7E  0101               	movlb	1	; () banked
 25046  015F80  6F13               	movwf	___awdiv@sign& (0+255),b
 25047  015F82                     l10984:
 25048                           
 25049                           ; BSR set to: 1
 25050  015F82  0101               	movlb	1	; () banked
 25051  015F84  510F               	movf	(___awdiv@dividend+1)& (0+255),w,b
 25052  015F86  0A80               	xorlw	128
 25053  015F88  6EF3               	movwf	prodl,c
 25054  015F8A  0E80               	movlw	128
 25055  015F8C  5CF3               	subwf	prodl,w,c
 25056  015F8E  0E00               	movlw	0
 25057  015F90  B4D8               	btfsc	status,2,c
 25058  015F92  5D0E               	subwf	___awdiv@dividend& (0+255),w,b
 25059  015F94  B0D8               	btfsc	status,0,c
 25060  015F96  D009               	goto	l10990
 25061                           
 25062                           ; BSR set to: 1
 25063  015F98  0101               	movlb	1	; () banked
 25064  015F9A  6D0E               	negf	___awdiv@dividend& (0+255),b
 25065  015F9C  0101               	movlb	1	; () banked
 25066  015F9E  1F0F               	comf	(___awdiv@dividend+1)& (0+255),f,b
 25067  015FA0  B0D8               	btfsc	status,0,c
 25068  015FA2  2B0F               	incf	(___awdiv@dividend+1)& (0+255),f,b
 25069                           
 25070                           ; BSR set to: 1
 25071  015FA4  0E01               	movlw	1
 25072  015FA6  0101               	movlb	1	; () banked
 25073  015FA8  1B13               	xorwf	___awdiv@sign& (0+255),f,b
 25074  015FAA                     l10990:
 25075                           
 25076                           ; BSR set to: 1
 25077  015FAA  0E00               	movlw	0
 25078  015FAC  0101               	movlb	1	; () banked
 25079  015FAE  6F15               	movwf	(___awdiv@quotient+1)& (0+255),b
 25080  015FB0  0E00               	movlw	0
 25081  015FB2  0101               	movlb	1	; () banked
 25082  015FB4  6F14               	movwf	___awdiv@quotient& (0+255),b
 25083                           
 25084                           ; BSR set to: 1
 25085  015FB6  0101               	movlb	1	; () banked
 25086  015FB8  5111               	movf	(___awdiv@divisor+1)& (0+255),w,b
 25087  015FBA  1110               	iorwf	___awdiv@divisor& (0+255),w,b
 25088  015FBC  B4D8               	btfsc	status,2,c
 25089  015FBE  D02C               	goto	l11012
 25090                           
 25091                           ; BSR set to: 1
 25092  015FC0  0E01               	movlw	1
 25093  015FC2  0101               	movlb	1	; () banked
 25094  015FC4  6F12               	movwf	___awdiv@counter& (0+255),b
 25095  015FC6  D006               	goto	l10998
 25096  015FC8                     l10996:
 25097                           
 25098                           ; BSR set to: 1
 25099  015FC8  0101               	movlb	1	; () banked
 25100  015FCA  90D8               	bcf	status,0,c
 25101  015FCC  3710               	rlcf	___awdiv@divisor& (0+255),f,b
 25102  015FCE  3711               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 25103  015FD0  0101               	movlb	1	; () banked
 25104  015FD2  2B12               	incf	___awdiv@counter& (0+255),f,b
 25105  015FD4                     l10998:
 25106                           
 25107                           ; BSR set to: 1
 25108  015FD4  0101               	movlb	1	; () banked
 25109  015FD6  AF11               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 25110  015FD8  D7F7               	goto	l10996
 25111  015FDA                     l11000:
 25112                           
 25113                           ; BSR set to: 1
 25114  015FDA  0101               	movlb	1	; () banked
 25115  015FDC  90D8               	bcf	status,0,c
 25116  015FDE  3714               	rlcf	___awdiv@quotient& (0+255),f,b
 25117  015FE0  3715               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 25118                           
 25119                           ; BSR set to: 1
 25120  015FE2  0101               	movlb	1	; () banked
 25121  015FE4  5110               	movf	___awdiv@divisor& (0+255),w,b
 25122  015FE6  0101               	movlb	1	; () banked
 25123  015FE8  5D0E               	subwf	___awdiv@dividend& (0+255),w,b
 25124  015FEA  0101               	movlb	1	; () banked
 25125  015FEC  5111               	movf	(___awdiv@divisor+1)& (0+255),w,b
 25126  015FEE  0101               	movlb	1	; () banked
 25127  015FF0  590F               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 25128  015FF2  A0D8               	btfss	status,0,c
 25129  015FF4  D00A               	goto	l11008
 25130                           
 25131                           ; BSR set to: 1
 25132  015FF6  0101               	movlb	1	; () banked
 25133  015FF8  5110               	movf	___awdiv@divisor& (0+255),w,b
 25134  015FFA  0101               	movlb	1	; () banked
 25135  015FFC  5F0E               	subwf	___awdiv@dividend& (0+255),f,b
 25136  015FFE  0101               	movlb	1	; () banked
 25137  016000  5111               	movf	(___awdiv@divisor+1)& (0+255),w,b
 25138  016002  0101               	movlb	1	; () banked
 25139  016004  5B0F               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 25140                           
 25141                           ; BSR set to: 1
 25142  016006  0101               	movlb	1	; () banked
 25143  016008  8114               	bsf	___awdiv@quotient& (0+255),0,b
 25144  01600A                     l11008:
 25145                           
 25146                           ; BSR set to: 1
 25147  01600A  0101               	movlb	1	; () banked
 25148  01600C  90D8               	bcf	status,0,c
 25149  01600E  3311               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 25150  016010  3310               	rrcf	___awdiv@divisor& (0+255),f,b
 25151                           
 25152                           ; BSR set to: 1
 25153  016012  0101               	movlb	1	; () banked
 25154  016014  2F12               	decfsz	___awdiv@counter& (0+255),f,b
 25155  016016  D7E1               	goto	l11000
 25156  016018                     l11012:
 25157                           
 25158                           ; BSR set to: 1
 25159  016018  0101               	movlb	1	; () banked
 25160  01601A  5113               	movf	___awdiv@sign& (0+255),w,b
 25161  01601C  B4D8               	btfsc	status,2,c
 25162  01601E  D006               	goto	l11016
 25163                           
 25164                           ; BSR set to: 1
 25165  016020  0101               	movlb	1	; () banked
 25166  016022  6D14               	negf	___awdiv@quotient& (0+255),b
 25167  016024  0101               	movlb	1	; () banked
 25168  016026  1F15               	comf	(___awdiv@quotient+1)& (0+255),f,b
 25169  016028  B0D8               	btfsc	status,0,c
 25170  01602A  2B15               	incf	(___awdiv@quotient+1)& (0+255),f,b
 25171  01602C                     l11016:
 25172                           
 25173                           ; BSR set to: 1
 25174  01602C  C114  F10E         	movff	___awdiv@quotient,?___awdiv
 25175  016030  C115  F10F         	movff	___awdiv@quotient+1,?___awdiv+1
 25176  016034  0012               	return	
 25177  016036                     __end_of___awdiv:
 25178                           	opt stack 0
 25179                           tblptru	equ	0xFF8
 25180                           tblptrh	equ	0xFF7
 25181                           tblptrl	equ	0xFF6
 25182                           tablat	equ	0xFF5
 25183                           prodh	equ	0xFF4
 25184                           prodl	equ	0xFF3
 25185                           intcon	equ	0xFF2
 25186                           postinc0	equ	0xFEE
 25187                           wreg	equ	0xFE8
 25188                           indf1	equ	0xFE7
 25189                           postinc1	equ	0xFE6
 25190                           postdec1	equ	0xFE5
 25191                           fsr1h	equ	0xFE2
 25192                           fsr1l	equ	0xFE1
 25193                           indf2	equ	0xFDF
 25194                           postinc2	equ	0xFDE
 25195                           postdec2	equ	0xFDD
 25196                           fsr2h	equ	0xFDA
 25197                           fsr2l	equ	0xFD9
 25198                           status	equ	0xFD8
 25199                           
 25200 ;; *************** function _I2C_Write_At_Address *****************
 25201 ;; Defined at:
 25202 ;;		line 161 in file "I2C.c"
 25203 ;; Parameters:    Size  Location     Type
 25204 ;;  I2Caddress      1    wreg     unsigned char 
 25205 ;;  Register        1   17[BANK1 ] unsigned char 
 25206 ;;  data            1   18[BANK1 ] unsigned char 
 25207 ;; Auto vars:     Size  Location     Type
 25208 ;;  I2Caddress      1   21[BANK1 ] unsigned char 
 25209 ;; Return value:  Size  Location     Type
 25210 ;;                  1    wreg      unsigned char 
 25211 ;; Registers used:
 25212 ;;		wreg, status,2, status,0, cstack
 25213 ;; Tracked objects:
 25214 ;;		On entry : 0/0
 25215 ;;		On exit  : 0/0
 25216 ;;		Unchanged: 0/0
 25217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25218 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25219 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25220 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25221 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 25222 ;;Total ram usage:        5 bytes
 25223 ;; Hardware stack levels used:    1
 25224 ;; Hardware stack levels required when called:    8
 25225 ;; This function calls:
 25226 ;;		_IdleI2C
 25227 ;;		_WriteI2C
 25228 ;; This function is called by:
 25229 ;;		_RTC_Clock_Enable
 25230 ;;		_RTC_TIME_NONMilitary
 25231 ;;		_SET_RTC_TIME
 25232 ;;		_RTC_Clock_Disable
 25233 ;; This function uses a non-reentrant model
 25234 ;;
 25235                           
 25236                           	psect	text52
 25237  016510                     __ptext52:
 25238                           	opt stack 0
 25239  016510                     _I2C_Write_At_Address:
 25240                           	opt stack 19
 25241                           
 25242                           ; BSR set to: 1
 25243                           ;incstack = 0
 25244                           ;I2C_Write_At_Address@I2Caddress stored from wreg
 25245  016510  0101               	movlb	1	; () banked
 25246  016512  6F15               	movwf	I2C_Write_At_Address@I2Caddress& (0+255),b
 25247                           
 25248                           ; BSR set to: 1
 25249                           ;I2C.c: 163: IdleI2C();
 25250  016514  EC2B  F0BE         	call	_IdleI2C	;wreg free
 25251                           
 25252                           ;I2C.c: 164: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 25253  016518  80C5               	bsf	4037,0,c	;volatile
 25254  01651A                     l1263:
 25255  01651A  B0C5               	btfsc	4037,0,c	;volatile
 25256  01651C  D7FE               	goto	l1263
 25257  01651E                     l1266:
 25258  01651E  B0C5               	btfsc	4037,0,c	;volatile
 25259  016520  D7FE               	goto	l1266
 25260                           
 25261                           ;I2C.c: 166: if ( PIR2bits.BCLIF )
 25262  016522  A6A1               	btfss	4001,3,c	;volatile
 25263  016524  D002               	goto	l10760
 25264                           
 25265                           ;I2C.c: 167: {
 25266                           ;I2C.c: 168: return ( -1 );
 25267  016526  0EFF               	movlw	255
 25268  016528  0012               	return	
 25269  01652A                     l10760:
 25270                           
 25271                           ;I2C.c: 170: else
 25272                           ;I2C.c: 171: {
 25273                           ;I2C.c: 172: if ( WriteI2C( I2Caddress << 1) & 0xFE )
 25274  01652A  0101               	movlb	1	; () banked
 25275  01652C  5115               	movf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 25276  01652E  0101               	movlb	1	; () banked
 25277  016530  2515               	addwf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 25278  016532  ECC6  F0B6         	call	_WriteI2C
 25279  016536  0101               	movlb	1	; () banked
 25280  016538  6F13               	movwf	??_I2C_Write_At_Address& (0+255),b
 25281  01653A  6B14               	clrf	(??_I2C_Write_At_Address+1)& (0+255),b
 25282  01653C  BF13               	btfsc	??_I2C_Write_At_Address& (0+255),7,b
 25283  01653E  0714               	decf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 25284  016540  0EFE               	movlw	254
 25285  016542  0101               	movlb	1	; () banked
 25286  016544  1713               	andwf	??_I2C_Write_At_Address& (0+255),f,b
 25287  016546  0E00               	movlw	0
 25288  016548  1714               	andwf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 25289  01654A  0101               	movlb	1	; () banked
 25290  01654C  5114               	movf	(??_I2C_Write_At_Address+1)& (0+255),w,b
 25291  01654E  1113               	iorwf	??_I2C_Write_At_Address& (0+255),w,b
 25292  016550  B4D8               	btfsc	status,2,c
 25293  016552  D005               	goto	l1272
 25294                           
 25295                           ; BSR set to: 1
 25296                           ;I2C.c: 173: {
 25297                           ;I2C.c: 174: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 25298  016554  84C5               	bsf	4037,2,c	;volatile
 25299  016556                     l1273:
 25300                           
 25301                           ; BSR set to: 1
 25302  016556  B4C5               	btfsc	4037,2,c	;volatile
 25303  016558  D7FE               	goto	l1273
 25304                           
 25305                           ; BSR set to: 1
 25306                           ;I2C.c: 175: return ( -3 );
 25307                           
 25308                           ; BSR set to: 1
 25309  01655A  0EFD               	movlw	253
 25310  01655C  0012               	return	
 25311  01655E                     l1272:
 25312                           
 25313                           ; BSR set to: 1
 25314                           ;I2C.c: 176: }
 25315                           ;I2C.c: 179: if ( !SSPCON2bits.ACKSTAT )
 25316  01655E  BCC5               	btfsc	4037,6,c	;volatile
 25317  016560  D01F               	goto	l1276
 25318                           
 25319                           ; BSR set to: 1
 25320                           ;I2C.c: 180: {
 25321                           ;I2C.c: 181: if ( WriteI2C( Register ) )
 25322  016562  0101               	movlb	1	; () banked
 25323  016564  5111               	movf	I2C_Write_At_Address@Register& (0+255),w,b
 25324  016566  ECC6  F0B6         	call	_WriteI2C
 25325  01656A  0900               	iorlw	0
 25326  01656C  B4D8               	btfsc	status,2,c
 25327  01656E  D005               	goto	l1277
 25328                           
 25329                           ;I2C.c: 182: {
 25330                           ;I2C.c: 183: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 25331  016570  84C5               	bsf	4037,2,c	;volatile
 25332  016572                     l1278:
 25333  016572  B4C5               	btfsc	4037,2,c	;volatile
 25334  016574  D7FE               	goto	l1278
 25335                           
 25336                           ;I2C.c: 184: return ( -3 );
 25337  016576  0EFD               	movlw	253
 25338  016578  0012               	return	
 25339  01657A                     l1277:
 25340                           
 25341                           ;I2C.c: 185: }
 25342                           ;I2C.c: 188: if ( !SSPCON2bits.ACKSTAT )
 25343  01657A  BCC5               	btfsc	4037,6,c	;volatile
 25344  01657C  D00C               	goto	l1281
 25345                           
 25346                           ;I2C.c: 189: {
 25347                           ;I2C.c: 190: if ( WriteI2C ( data ) )
 25348  01657E  0101               	movlb	1	; () banked
 25349  016580  5112               	movf	I2C_Write_At_Address@data& (0+255),w,b
 25350  016582  ECC6  F0B6         	call	_WriteI2C
 25351  016586  0900               	iorlw	0
 25352  016588  B4D8               	btfsc	status,2,c
 25353  01658A  D00F               	goto	l1271
 25354                           
 25355                           ;I2C.c: 191: {
 25356                           ;I2C.c: 192: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 25357  01658C  84C5               	bsf	4037,2,c	;volatile
 25358  01658E                     l1283:
 25359  01658E  B4C5               	btfsc	4037,2,c	;volatile
 25360  016590  D7FE               	goto	l1283
 25361                           
 25362                           ;I2C.c: 193: return( -4 );
 25363  016592  0EFC               	movlw	252
 25364  016594  0012               	return	
 25365  016596                     l1281:
 25366                           
 25367                           ;I2C.c: 196: else
 25368                           ;I2C.c: 197: {
 25369                           ;I2C.c: 198: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 25370  016596  84C5               	bsf	4037,2,c	;volatile
 25371  016598                     l1287:
 25372  016598  B4C5               	btfsc	4037,2,c	;volatile
 25373  01659A  D7FE               	goto	l1287
 25374                           
 25375                           ;I2C.c: 199: return ( -2 );
 25376  01659C  0EFE               	movlw	254
 25377  01659E  0012               	return	
 25378  0165A0                     l1276:
 25379                           
 25380                           ; BSR set to: 1
 25381                           ;I2C.c: 202: else
 25382                           ;I2C.c: 203: {
 25383                           ;I2C.c: 204: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 25384  0165A0  84C5               	bsf	4037,2,c	;volatile
 25385  0165A2                     l1291:
 25386                           
 25387                           ; BSR set to: 1
 25388  0165A2  B4C5               	btfsc	4037,2,c	;volatile
 25389  0165A4  D7FE               	goto	l1291
 25390                           
 25391                           ; BSR set to: 1
 25392                           ;I2C.c: 205: return ( -2 );
 25393                           
 25394                           ; BSR set to: 1
 25395  0165A6  0EFE               	movlw	254
 25396  0165A8  0012               	return	
 25397  0165AA                     l1271:
 25398                           
 25399                           ;I2C.c: 206: }
 25400                           ;I2C.c: 207: }
 25401                           ;I2C.c: 210: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 25402  0165AA  84C5               	bsf	4037,2,c	;volatile
 25403  0165AC                     l1294:
 25404  0165AC  B4C5               	btfsc	4037,2,c	;volatile
 25405  0165AE  D7FE               	goto	l1294
 25406  0165B0                     l1297:
 25407  0165B0  B4C5               	btfsc	4037,2,c	;volatile
 25408  0165B2  D7FE               	goto	l1297
 25409                           
 25410                           ;I2C.c: 212: if ( PIR2bits.BCLIF )
 25411  0165B4  A6A1               	btfss	4001,3,c	;volatile
 25412  0165B6  D002               	goto	l10796
 25413                           
 25414                           ;I2C.c: 213: {
 25415                           ;I2C.c: 214: return ( -1 );
 25416  0165B8  0EFF               	movlw	255
 25417  0165BA  0012               	return	
 25418  0165BC                     l10796:
 25419                           
 25420                           ;I2C.c: 215: }
 25421                           ;I2C.c: 216: return ( 0 );
 25422  0165BC  0E00               	movlw	0
 25423  0165BE  0012               	return	
 25424  0165C0                     __end_of_I2C_Write_At_Address:
 25425                           	opt stack 0
 25426                           tblptru	equ	0xFF8
 25427                           tblptrh	equ	0xFF7
 25428                           tblptrl	equ	0xFF6
 25429                           tablat	equ	0xFF5
 25430                           prodh	equ	0xFF4
 25431                           prodl	equ	0xFF3
 25432                           intcon	equ	0xFF2
 25433                           postinc0	equ	0xFEE
 25434                           wreg	equ	0xFE8
 25435                           indf1	equ	0xFE7
 25436                           postinc1	equ	0xFE6
 25437                           postdec1	equ	0xFE5
 25438                           fsr1h	equ	0xFE2
 25439                           fsr1l	equ	0xFE1
 25440                           indf2	equ	0xFDF
 25441                           postinc2	equ	0xFDE
 25442                           postdec2	equ	0xFDD
 25443                           fsr2h	equ	0xFDA
 25444                           fsr2l	equ	0xFD9
 25445                           status	equ	0xFD8
 25446                           
 25447 ;; *************** function _RemoveSpaces *****************
 25448 ;; Defined at:
 25449 ;;		line 257 in file "MISC.c"
 25450 ;; Parameters:    Size  Location     Type
 25451 ;;  This            2   29[BANK1 ] PTR unsigned char 
 25452 ;;		 -> Rxdata(100), 
 25453 ;; Auto vars:     Size  Location     Type
 25454 ;;  That          100   31[BANK1 ] unsigned char [100]
 25455 ;;  address         2  131[BANK1 ] PTR unsigned char 
 25456 ;;		 -> Rxdata(100), 
 25457 ;;  i               1  133[BANK1 ] unsigned char 
 25458 ;; Return value:  Size  Location     Type
 25459 ;;		None               void
 25460 ;; Registers used:
 25461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25462 ;; Tracked objects:
 25463 ;;		On entry : 0/0
 25464 ;;		On exit  : 0/0
 25465 ;;		Unchanged: 0/0
 25466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25467 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25468 ;;      Locals:         0       0     103       0       0       0       0       0       0       0       0       0       
      +0       0
 25469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25470 ;;      Totals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0
 25471 ;;Total ram usage:      105 bytes
 25472 ;; Hardware stack levels used:    1
 25473 ;; Hardware stack levels required when called:    8
 25474 ;; This function calls:
 25475 ;;		_BufferCopy
 25476 ;;		_cleanBuffer
 25477 ;; This function is called by:
 25478 ;;		_Command
 25479 ;; This function uses a non-reentrant model
 25480 ;;
 25481                           
 25482                           	psect	text53
 25483  0165C0                     __ptext53:
 25484                           	opt stack 0
 25485  0165C0                     _RemoveSpaces:
 25486                           	opt stack 20
 25487                           
 25488                           ;MISC.c: 260: unsigned char i =0;
 25489                           
 25490                           ;incstack = 0
 25491  0165C0  0E00               	movlw	0
 25492  0165C2  0101               	movlb	1	; () banked
 25493  0165C4  6F85               	movwf	RemoveSpaces@i& (0+255),b
 25494                           
 25495                           ; BSR set to: 1
 25496                           ;MISC.c: 261: unsigned char* address = This;
 25497  0165C6  0101               	movlb	1	; () banked
 25498  0165C8  C11E  F184         	movff	RemoveSpaces@This+1,RemoveSpaces@address+1
 25499  0165CC  0101               	movlb	1	; () banked
 25500  0165CE  C11D  F183         	movff	RemoveSpaces@This,RemoveSpaces@address
 25501                           
 25502                           ; BSR set to: 1
 25503                           ;MISC.c: 262: unsigned char That[100];
 25504                           ;MISC.c: 263: cleanBuffer(That,100);
 25505  0165D2  0101               	movlb	1	; () banked
 25506  0165D4  0E01               	movlw	high RemoveSpaces@That
 25507  0165D6  0101               	movlb	1	; () banked
 25508  0165D8  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
 25509  0165DA  0101               	movlb	1	; () banked
 25510  0165DC  0E1F               	movlw	low RemoveSpaces@That
 25511  0165DE  0101               	movlb	1	; () banked
 25512  0165E0  6F0E               	movwf	cleanBuffer@data& (0+255),b
 25513  0165E2  0E00               	movlw	0
 25514  0165E4  0101               	movlb	1	; () banked
 25515  0165E6  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
 25516  0165E8  0E64               	movlw	100
 25517  0165EA  0101               	movlb	1	; () banked
 25518  0165EC  6F10               	movwf	cleanBuffer@count& (0+255),b
 25519  0165EE  EC50  F0BB         	call	_cleanBuffer	;wreg free
 25520                           
 25521                           ;MISC.c: 264: while(*This != 0)
 25522  0165F2  D01E               	goto	l11358
 25523  0165F4                     l11350:
 25524                           
 25525                           ;MISC.c: 265: {
 25526                           ;MISC.c: 266: if(*This != ' ')
 25527  0165F4  C11D  FFD9         	movff	RemoveSpaces@This,fsr2l
 25528  0165F8  C11E  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 25529  0165FC  50DF               	movf	indf2,w,c
 25530  0165FE  0A20               	xorlw	32
 25531  016600  B4D8               	btfsc	status,2,c
 25532  016602  D013               	goto	l11356
 25533                           
 25534                           ;MISC.c: 267: {
 25535                           ;MISC.c: 268: That[i] = *This;
 25536  016604  C11D  FFD9         	movff	RemoveSpaces@This,fsr2l
 25537  016608  C11E  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 25538  01660C  0101               	movlb	1	; () banked
 25539  01660E  5185               	movf	RemoveSpaces@i& (0+255),w,b
 25540  016610  0D01               	mullw	1
 25541  016612  0101               	movlb	1	; () banked
 25542  016614  0E1F               	movlw	low RemoveSpaces@That
 25543  016616  24F3               	addwf	prodl,w,c
 25544  016618  6EE1               	movwf	fsr1l,c
 25545  01661A  0101               	movlb	1	; () banked
 25546  01661C  0E01               	movlw	high RemoveSpaces@That
 25547  01661E  20F4               	addwfc	prodh,w,c
 25548  016620  6EE2               	movwf	fsr1h,c
 25549  016622  CFDF FFE7          	movff	indf2,indf1
 25550                           
 25551                           ; BSR set to: 1
 25552                           ;MISC.c: 269: i++;
 25553  016626  0101               	movlb	1	; () banked
 25554  016628  2B85               	incf	RemoveSpaces@i& (0+255),f,b
 25555  01662A                     l11356:
 25556                           
 25557                           ;MISC.c: 270: }
 25558                           ;MISC.c: 271: This++;
 25559  01662A  0101               	movlb	1	; () banked
 25560  01662C  4B1D               	infsnz	RemoveSpaces@This& (0+255),f,b
 25561  01662E  2B1E               	incf	(RemoveSpaces@This+1)& (0+255),f,b
 25562  016630                     l11358:
 25563  016630  C11D  FFD9         	movff	RemoveSpaces@This,fsr2l
 25564  016634  C11E  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 25565  016638  50DF               	movf	indf2,w,c
 25566  01663A  A4D8               	btfss	status,2,c
 25567  01663C  D7DB               	goto	l11350
 25568                           
 25569                           ;MISC.c: 272: }
 25570                           ;MISC.c: 273: BufferCopy(That,address, 100, 0);
 25571  01663E  0101               	movlb	1	; () banked
 25572  016640  0E01               	movlw	high RemoveSpaces@That
 25573  016642  0101               	movlb	1	; () banked
 25574  016644  6F17               	movwf	(BufferCopy@from+1)& (0+255),b
 25575  016646  0101               	movlb	1	; () banked
 25576  016648  0E1F               	movlw	low RemoveSpaces@That
 25577  01664A  0101               	movlb	1	; () banked
 25578  01664C  6F16               	movwf	BufferCopy@from& (0+255),b
 25579  01664E  0101               	movlb	1	; () banked
 25580  016650  C184  F119         	movff	RemoveSpaces@address+1,BufferCopy@to+1
 25581  016654  0101               	movlb	1	; () banked
 25582  016656  C183  F118         	movff	RemoveSpaces@address,BufferCopy@to
 25583  01665A  0E64               	movlw	100
 25584  01665C  0101               	movlb	1	; () banked
 25585  01665E  6F1A               	movwf	BufferCopy@count& (0+255),b
 25586  016660  0E00               	movlw	0
 25587  016662  0101               	movlb	1	; () banked
 25588  016664  6F1B               	movwf	BufferCopy@shift& (0+255),b
 25589  016666  EC2C  F0B2         	call	_BufferCopy	;wreg free
 25590  01666A  0012               	return	
 25591  01666C                     __end_of_RemoveSpaces:
 25592                           	opt stack 0
 25593                           tblptru	equ	0xFF8
 25594                           tblptrh	equ	0xFF7
 25595                           tblptrl	equ	0xFF6
 25596                           tablat	equ	0xFF5
 25597                           prodh	equ	0xFF4
 25598                           prodl	equ	0xFF3
 25599                           intcon	equ	0xFF2
 25600                           postinc0	equ	0xFEE
 25601                           wreg	equ	0xFE8
 25602                           indf1	equ	0xFE7
 25603                           postinc1	equ	0xFE6
 25604                           postdec1	equ	0xFE5
 25605                           fsr1h	equ	0xFE2
 25606                           fsr1l	equ	0xFE1
 25607                           indf2	equ	0xFDF
 25608                           postinc2	equ	0xFDE
 25609                           postdec2	equ	0xFDD
 25610                           fsr2h	equ	0xFDA
 25611                           fsr2l	equ	0xFD9
 25612                           status	equ	0xFD8
 25613                           
 25614 ;; *************** function _READ_RTC_TIME *****************
 25615 ;; Defined at:
 25616 ;;		line 139 in file "RTC.c"
 25617 ;; Parameters:    Size  Location     Type
 25618 ;;		None
 25619 ;; Auto vars:     Size  Location     Type
 25620 ;;  temp            7   24[BANK1 ] unsigned char [7]
 25621 ;;  Error           1   31[BANK1 ] char 
 25622 ;; Return value:  Size  Location     Type
 25623 ;;                  1    wreg      unsigned char 
 25624 ;; Registers used:
 25625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25626 ;; Tracked objects:
 25627 ;;		On entry : 0/0
 25628 ;;		On exit  : 0/0
 25629 ;;		Unchanged: 0/0
 25630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25632 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 25633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25634 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 25635 ;;Total ram usage:        8 bytes
 25636 ;; Hardware stack levels used:    1
 25637 ;; Hardware stack levels required when called:    9
 25638 ;; This function calls:
 25639 ;;		_I2C_Read_Sequential
 25640 ;;		_ResetI2C
 25641 ;; This function is called by:
 25642 ;;		_Command
 25643 ;; This function uses a non-reentrant model
 25644 ;;
 25645                           
 25646                           	psect	text54
 25647  015E6E                     __ptext54:
 25648                           	opt stack 0
 25649  015E6E                     _READ_RTC_TIME:
 25650                           	opt stack 19
 25651                           
 25652                           ;RTC.c: 141: signed char Error =0;
 25653                           
 25654                           ;incstack = 0
 25655  015E6E  0E00               	movlw	0
 25656  015E70  0101               	movlb	1	; () banked
 25657  015E72  6F1F               	movwf	READ_RTC_TIME@Error& (0+255),b
 25658                           
 25659                           ; BSR set to: 1
 25660                           ;RTC.c: 142: unsigned char temp[7];
 25661                           ;RTC.c: 144: Error = I2C_Read_Sequential( 0b1101000, 0x00, temp, 7 );
 25662  015E74  0E00               	movlw	0
 25663  015E76  0101               	movlb	1	; () banked
 25664  015E78  6F13               	movwf	I2C_Read_Sequential@Register& (0+255),b
 25665  015E7A  0101               	movlb	1	; () banked
 25666  015E7C  0E01               	movlw	high READ_RTC_TIME@temp
 25667  015E7E  0101               	movlb	1	; () banked
 25668  015E80  6F15               	movwf	(I2C_Read_Sequential@rdptr+1)& (0+255),b
 25669  015E82  0101               	movlb	1	; () banked
 25670  015E84  0E18               	movlw	low READ_RTC_TIME@temp
 25671  015E86  0101               	movlb	1	; () banked
 25672  015E88  6F14               	movwf	I2C_Read_Sequential@rdptr& (0+255),b
 25673  015E8A  0E07               	movlw	7
 25674  015E8C  0101               	movlb	1	; () banked
 25675  015E8E  6F16               	movwf	I2C_Read_Sequential@length& (0+255),b
 25676  015E90  0E68               	movlw	104
 25677  015E92  EC1B  F0B0         	call	_I2C_Read_Sequential
 25678  015E96  0101               	movlb	1	; () banked
 25679  015E98  6F1F               	movwf	READ_RTC_TIME@Error& (0+255),b
 25680                           
 25681                           ; BSR set to: 1
 25682                           ;RTC.c: 146: if(Error == 0 )
 25683  015E9A  0101               	movlb	1	; () banked
 25684  015E9C  671F               	tstfsz	READ_RTC_TIME@Error& (0+255),b
 25685  015E9E  D055               	goto	l11638
 25686                           
 25687                           ; BSR set to: 1
 25688                           ;RTC.c: 147: {
 25689                           ;RTC.c: 148: NowTime.Seconds = (temp[0] & 0x0F) + (((temp[0] & 0x70)>> 4) * 10);
 25690  015EA0  0101               	movlb	1	; () banked
 25691  015EA2  3918               	swapf	READ_RTC_TIME@temp& (0+255),w,b
 25692  015EA4  0B0F               	andlw	15
 25693  015EA6  0B07               	andlw	7
 25694  015EA8  0D0A               	mullw	10
 25695  015EAA  0101               	movlb	1	; () banked
 25696  015EAC  5118               	movf	READ_RTC_TIME@temp& (0+255),w,b
 25697  015EAE  0B0F               	andlw	15
 25698  015EB0  24F3               	addwf	prodl,w,c
 25699  015EB2  0101               	movlb	1	; () banked
 25700  015EB4  6F8C               	movwf	_NowTime& (0+255),b
 25701                           
 25702                           ;RTC.c: 149: NowTime.Minutes = (temp[1] & 0x0F) + (((temp[1] & 0x70) >> 4) * 10);
 25703  015EB6  0101               	movlb	1	; () banked
 25704  015EB8  3919               	swapf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 25705  015EBA  0B0F               	andlw	15
 25706  015EBC  0B07               	andlw	7
 25707  015EBE  0D0A               	mullw	10
 25708  015EC0  0101               	movlb	1	; () banked
 25709  015EC2  5119               	movf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 25710  015EC4  0B0F               	andlw	15
 25711  015EC6  24F3               	addwf	prodl,w,c
 25712  015EC8  0101               	movlb	1	; () banked
 25713  015ECA  6F8D               	movwf	(_NowTime+1)& (0+255),b
 25714                           
 25715                           ;RTC.c: 150: NowTime.Hours = (temp[2] & 0x0F) + (((temp[2] & 0x10) >> 4) * 10);
 25716  015ECC  0101               	movlb	1	; () banked
 25717  015ECE  391A               	swapf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 25718  015ED0  0B0F               	andlw	15
 25719  015ED2  0B01               	andlw	1
 25720  015ED4  0D0A               	mullw	10
 25721  015ED6  0101               	movlb	1	; () banked
 25722  015ED8  511A               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 25723  015EDA  0B0F               	andlw	15
 25724  015EDC  24F3               	addwf	prodl,w,c
 25725  015EDE  0101               	movlb	1	; () banked
 25726  015EE0  6F8E               	movwf	(_NowTime+2)& (0+255),b
 25727                           
 25728                           ; BSR set to: 1
 25729                           ;RTC.c: 151: NowTime.HoursAM_PM = temp[2] & 0x20;
 25730  015EE2  0101               	movlb	1	; () banked
 25731  015EE4  511A               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 25732  015EE6  0B20               	andlw	32
 25733  015EE8  0101               	movlb	1	; () banked
 25734  015EEA  6F90               	movwf	(_NowTime+4)& (0+255),b
 25735                           
 25736                           ; BSR set to: 1
 25737                           ;RTC.c: 152: NowTime.HoursMilitary = NowTime.Hours + 12 * NowTime.HoursAM_PM;
 25738  015EEC  0101               	movlb	1	; () banked
 25739  015EEE  5190               	movf	(_NowTime+4)& (0+255),w,b
 25740  015EF0  0D0C               	mullw	12
 25741  015EF2  50F3               	movf	prodl,w,c
 25742  015EF4  0101               	movlb	1	; () banked
 25743  015EF6  258E               	addwf	(_NowTime+2)& (0+255),w,b
 25744  015EF8  0101               	movlb	1	; () banked
 25745  015EFA  6F8F               	movwf	(_NowTime+3)& (0+255),b
 25746                           
 25747                           ;RTC.c: 153: NowTime.Day = temp[3] & 0x07;
 25748  015EFC  0101               	movlb	1	; () banked
 25749  015EFE  511B               	movf	(READ_RTC_TIME@temp+3)& (0+255),w,b
 25750  015F00  0B07               	andlw	7
 25751  015F02  0101               	movlb	1	; () banked
 25752  015F04  6F91               	movwf	(_NowTime+5)& (0+255),b
 25753                           
 25754                           ; BSR set to: 1
 25755                           ;RTC.c: 154: NowTime.Date = (temp[4] & 0x0F) + (((temp[4] & 0x30)>> 4) * 10);
 25756  015F06  0101               	movlb	1	; () banked
 25757  015F08  391C               	swapf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 25758  015F0A  0B0F               	andlw	15
 25759  015F0C  0B03               	andlw	3
 25760  015F0E  0D0A               	mullw	10
 25761  015F10  0101               	movlb	1	; () banked
 25762  015F12  511C               	movf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 25763  015F14  0B0F               	andlw	15
 25764  015F16  24F3               	addwf	prodl,w,c
 25765  015F18  0101               	movlb	1	; () banked
 25766  015F1A  6F92               	movwf	(_NowTime+6)& (0+255),b
 25767                           
 25768                           ; BSR set to: 1
 25769                           ;RTC.c: 155: NowTime.Month = (temp[5] & 0x0F) + (((temp[5] & 0x10) >> 4) * 10);
 25770  015F1C  0101               	movlb	1	; () banked
 25771  015F1E  391D               	swapf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 25772  015F20  0B0F               	andlw	15
 25773  015F22  0B01               	andlw	1
 25774  015F24  0D0A               	mullw	10
 25775  015F26  0101               	movlb	1	; () banked
 25776  015F28  511D               	movf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 25777  015F2A  0B0F               	andlw	15
 25778  015F2C  24F3               	addwf	prodl,w,c
 25779  015F2E  0101               	movlb	1	; () banked
 25780  015F30  6F93               	movwf	(_NowTime+7)& (0+255),b
 25781                           
 25782                           ; BSR set to: 1
 25783                           ;RTC.c: 156: NowTime.Year = (temp[6] & 0x0F) + (((temp[6] & 0xF0) >> 4) * 10);
 25784  015F32  0101               	movlb	1	; () banked
 25785  015F34  391E               	swapf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 25786  015F36  0B0F               	andlw	15
 25787  015F38  0B0F               	andlw	15
 25788  015F3A  0D0A               	mullw	10
 25789  015F3C  0101               	movlb	1	; () banked
 25790  015F3E  511E               	movf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 25791  015F40  0B0F               	andlw	15
 25792  015F42  24F3               	addwf	prodl,w,c
 25793  015F44  0101               	movlb	1	; () banked
 25794  015F46  6F94               	movwf	(_NowTime+8)& (0+255),b
 25795                           
 25796                           ;RTC.c: 157: }
 25797  015F48  D002               	goto	l11640
 25798  015F4A                     l11638:
 25799                           
 25800                           ; BSR set to: 1
 25801                           ;RTC.c: 158: else
 25802                           ;RTC.c: 159: {
 25803                           ;RTC.c: 160: ResetI2C();
 25804  015F4A  EC98  F0BD         	call	_ResetI2C	;wreg free
 25805  015F4E                     l11640:
 25806                           
 25807                           ;RTC.c: 161: }
 25808                           ;RTC.c: 162: return Error;
 25809  015F4E  0101               	movlb	1	; () banked
 25810  015F50  511F               	movf	READ_RTC_TIME@Error& (0+255),w,b
 25811  015F52  0012               	return	
 25812  015F54                     __end_of_READ_RTC_TIME:
 25813                           	opt stack 0
 25814                           tblptru	equ	0xFF8
 25815                           tblptrh	equ	0xFF7
 25816                           tblptrl	equ	0xFF6
 25817                           tablat	equ	0xFF5
 25818                           prodh	equ	0xFF4
 25819                           prodl	equ	0xFF3
 25820                           intcon	equ	0xFF2
 25821                           postinc0	equ	0xFEE
 25822                           wreg	equ	0xFE8
 25823                           indf1	equ	0xFE7
 25824                           postinc1	equ	0xFE6
 25825                           postdec1	equ	0xFE5
 25826                           fsr1h	equ	0xFE2
 25827                           fsr1l	equ	0xFE1
 25828                           indf2	equ	0xFDF
 25829                           postinc2	equ	0xFDE
 25830                           postdec2	equ	0xFDD
 25831                           fsr2h	equ	0xFDA
 25832                           fsr2l	equ	0xFD9
 25833                           status	equ	0xFD8
 25834                           
 25835 ;; *************** function _ResetI2C *****************
 25836 ;; Defined at:
 25837 ;;		line 93 in file "I2C.c"
 25838 ;; Parameters:    Size  Location     Type
 25839 ;;		None
 25840 ;; Auto vars:     Size  Location     Type
 25841 ;;		None
 25842 ;; Return value:  Size  Location     Type
 25843 ;;		None               void
 25844 ;; Registers used:
 25845 ;;		wreg, status,2, status,0, cstack
 25846 ;; Tracked objects:
 25847 ;;		On entry : 0/0
 25848 ;;		On exit  : 0/0
 25849 ;;		Unchanged: 0/0
 25850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25855 ;;Total ram usage:        0 bytes
 25856 ;; Hardware stack levels used:    1
 25857 ;; Hardware stack levels required when called:    8
 25858 ;; This function calls:
 25859 ;;		_Init_I2C_Master
 25860 ;;		_delayUS
 25861 ;; This function is called by:
 25862 ;;		_RTC_Clock_Enable
 25863 ;;		_RTC_TIME_NONMilitary
 25864 ;;		_READ_RTC_TIME
 25865 ;;		_RTC_Clock_Disable
 25866 ;;		_READ_RTC_SECONDS
 25867 ;; This function uses a non-reentrant model
 25868 ;;
 25869                           
 25870                           	psect	text55
 25871  017B30                     __ptext55:
 25872                           	opt stack 0
 25873  017B30                     _ResetI2C:
 25874                           	opt stack 19
 25875                           
 25876                           ;I2C.c: 95: SSPCON1 &= 0xDF;
 25877                           
 25878                           ; BSR set to: 1
 25879                           ;incstack = 0
 25880  017B30  9AC6               	bcf	4038,5,c	;volatile
 25881                           
 25882                           ;I2C.c: 96: TRISCbits.TRISC3 = 0;
 25883  017B32  9694               	bcf	3988,3,c	;volatile
 25884                           
 25885                           ;I2C.c: 97: LATC &= ~0b00001000;
 25886  017B34  968B               	bcf	3979,3,c	;volatile
 25887                           
 25888                           ;I2C.c: 98: delayUS(200);
 25889  017B36  0EC8               	movlw	200
 25890  017B38  0101               	movlb	1	; () banked
 25891  017B3A  6F0E               	movwf	delayUS@US& (0+255),b
 25892  017B3C  0E00               	movlw	0
 25893  017B3E  0101               	movlb	1	; () banked
 25894  017B40  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 25895  017B42  0E00               	movlw	0
 25896  017B44  0101               	movlb	1	; () banked
 25897  017B46  6F10               	movwf	(delayUS@US+2)& (0+255),b
 25898  017B48  0E00               	movlw	0
 25899  017B4A  0101               	movlb	1	; () banked
 25900  017B4C  6F11               	movwf	(delayUS@US+3)& (0+255),b
 25901  017B4E  EC10  F0B9         	call	_delayUS	;wreg free
 25902                           
 25903                           ;I2C.c: 99: TRISCbits.TRISC3 = 1;
 25904  017B52  8694               	bsf	3988,3,c	;volatile
 25905                           
 25906                           ;I2C.c: 100: Init_I2C_Master();
 25907  017B54  ECA4  F0BB         	call	_Init_I2C_Master	;wreg free
 25908  017B58  0012               	return	
 25909  017B5A                     __end_of_ResetI2C:
 25910                           	opt stack 0
 25911                           tblptru	equ	0xFF8
 25912                           tblptrh	equ	0xFF7
 25913                           tblptrl	equ	0xFF6
 25914                           tablat	equ	0xFF5
 25915                           prodh	equ	0xFF4
 25916                           prodl	equ	0xFF3
 25917                           intcon	equ	0xFF2
 25918                           postinc0	equ	0xFEE
 25919                           wreg	equ	0xFE8
 25920                           indf1	equ	0xFE7
 25921                           postinc1	equ	0xFE6
 25922                           postdec1	equ	0xFE5
 25923                           fsr1h	equ	0xFE2
 25924                           fsr1l	equ	0xFE1
 25925                           indf2	equ	0xFDF
 25926                           postinc2	equ	0xFDE
 25927                           postdec2	equ	0xFDD
 25928                           fsr2h	equ	0xFDA
 25929                           fsr2l	equ	0xFD9
 25930                           status	equ	0xFD8
 25931                           
 25932 ;; *************** function _Init_I2C_Master *****************
 25933 ;; Defined at:
 25934 ;;		line 55 in file "I2C.c"
 25935 ;; Parameters:    Size  Location     Type
 25936 ;;		None
 25937 ;; Auto vars:     Size  Location     Type
 25938 ;;  baud            2   16[BANK1 ] unsigned int 
 25939 ;; Return value:  Size  Location     Type
 25940 ;;		None               void
 25941 ;; Registers used:
 25942 ;;		wreg, status,2, status,0, cstack
 25943 ;; Tracked objects:
 25944 ;;		On entry : 0/0
 25945 ;;		On exit  : 0/0
 25946 ;;		Unchanged: 0/0
 25947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25949 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25951 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25952 ;;Total ram usage:        2 bytes
 25953 ;; Hardware stack levels used:    1
 25954 ;; Hardware stack levels required when called:    7
 25955 ;; This function calls:
 25956 ;;		_OpenI2C
 25957 ;; This function is called by:
 25958 ;;		_main
 25959 ;;		_ResetI2C
 25960 ;; This function uses a non-reentrant model
 25961 ;;
 25962                           
 25963                           	psect	text56
 25964  017748                     __ptext56:
 25965                           	opt stack 0
 25966  017748                     _Init_I2C_Master:
 25967                           	opt stack 19
 25968                           
 25969                           ;I2C.c: 57: unsigned int baud = 0;
 25970                           
 25971                           ;incstack = 0
 25972  017748  0E00               	movlw	0
 25973  01774A  0101               	movlb	1	; () banked
 25974  01774C  6F11               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 25975  01774E  0E00               	movlw	0
 25976  017750  0101               	movlb	1	; () banked
 25977  017752  6F10               	movwf	Init_I2C_Master@baud& (0+255),b
 25978                           
 25979                           ;I2C.c: 60: baud = (unsigned char)(40960000L/4 /((4* (long)5 * 1000L) - 1));
 25980  017754  0E00               	movlw	0
 25981  017756  0101               	movlb	1	; () banked
 25982  017758  6F11               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 25983  01775A  0E00               	movlw	0
 25984  01775C  0101               	movlb	1	; () banked
 25985  01775E  6F10               	movwf	Init_I2C_Master@baud& (0+255),b
 25986                           
 25987                           ; BSR set to: 1
 25988                           ;I2C.c: 61: if(baud > 127 || baud == 0)
 25989  017760  0E80               	movlw	128
 25990  017762  0101               	movlb	1	; () banked
 25991  017764  5D10               	subwf	Init_I2C_Master@baud& (0+255),w,b
 25992  017766  0E00               	movlw	0
 25993  017768  0101               	movlb	1	; () banked
 25994  01776A  5911               	subwfb	(Init_I2C_Master@baud+1)& (0+255),w,b
 25995  01776C  B0D8               	btfsc	status,0,c
 25996  01776E  D005               	goto	l9860
 25997                           
 25998                           ; BSR set to: 1
 25999  017770  0101               	movlb	1	; () banked
 26000  017772  5111               	movf	(Init_I2C_Master@baud+1)& (0+255),w,b
 26001  017774  1110               	iorwf	Init_I2C_Master@baud& (0+255),w,b
 26002  017776  A4D8               	btfss	status,2,c
 26003  017778  D006               	goto	l9862
 26004  01777A                     l9860:
 26005                           
 26006                           ; BSR set to: 1
 26007                           ;I2C.c: 62: {
 26008                           ;I2C.c: 63: baud = 127;
 26009  01777A  0E00               	movlw	0
 26010  01777C  0101               	movlb	1	; () banked
 26011  01777E  6F11               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 26012  017780  0E7F               	movlw	127
 26013  017782  0101               	movlb	1	; () banked
 26014  017784  6F10               	movwf	Init_I2C_Master@baud& (0+255),b
 26015  017786                     l9862:
 26016                           
 26017                           ; BSR set to: 1
 26018                           ;I2C.c: 64: }
 26019                           ;I2C.c: 65: SSPADD = baud;
 26020  017786  C110  FFC8         	movff	Init_I2C_Master@baud,4040	;volatile
 26021                           
 26022                           ; BSR set to: 1
 26023                           ;I2C.c: 66: OpenI2C(0b00001000, 0b10000000);
 26024  01778A  0E80               	movlw	128
 26025  01778C  0101               	movlb	1	; () banked
 26026  01778E  6F0E               	movwf	OpenI2C@slew& (0+255),b
 26027  017790  0E08               	movlw	8
 26028  017792  ECD4  F0BD         	call	_OpenI2C
 26029  017796  0012               	return	
 26030  017798                     __end_of_Init_I2C_Master:
 26031                           	opt stack 0
 26032                           tblptru	equ	0xFF8
 26033                           tblptrh	equ	0xFF7
 26034                           tblptrl	equ	0xFF6
 26035                           tablat	equ	0xFF5
 26036                           prodh	equ	0xFF4
 26037                           prodl	equ	0xFF3
 26038                           intcon	equ	0xFF2
 26039                           postinc0	equ	0xFEE
 26040                           wreg	equ	0xFE8
 26041                           indf1	equ	0xFE7
 26042                           postinc1	equ	0xFE6
 26043                           postdec1	equ	0xFE5
 26044                           fsr1h	equ	0xFE2
 26045                           fsr1l	equ	0xFE1
 26046                           indf2	equ	0xFDF
 26047                           postinc2	equ	0xFDE
 26048                           postdec2	equ	0xFDD
 26049                           fsr2h	equ	0xFDA
 26050                           fsr2l	equ	0xFD9
 26051                           status	equ	0xFD8
 26052                           
 26053 ;; *************** function _OpenI2C *****************
 26054 ;; Defined at:
 26055 ;;		line 74 in file "I2C.c"
 26056 ;; Parameters:    Size  Location     Type
 26057 ;;  sync_mode       1    wreg     unsigned char 
 26058 ;;  slew            1   14[BANK1 ] unsigned char 
 26059 ;; Auto vars:     Size  Location     Type
 26060 ;;  sync_mode       1   15[BANK1 ] unsigned char 
 26061 ;; Return value:  Size  Location     Type
 26062 ;;		None               void
 26063 ;; Registers used:
 26064 ;;		wreg, status,2, status,0
 26065 ;; Tracked objects:
 26066 ;;		On entry : 0/0
 26067 ;;		On exit  : 0/0
 26068 ;;		Unchanged: 0/0
 26069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26070 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26071 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26073 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26074 ;;Total ram usage:        2 bytes
 26075 ;; Hardware stack levels used:    1
 26076 ;; Hardware stack levels required when called:    6
 26077 ;; This function calls:
 26078 ;;		Nothing
 26079 ;; This function is called by:
 26080 ;;		_Init_I2C_Master
 26081 ;; This function uses a non-reentrant model
 26082 ;;
 26083                           
 26084                           	psect	text57
 26085  017BA8                     __ptext57:
 26086                           	opt stack 0
 26087  017BA8                     _OpenI2C:
 26088                           	opt stack 19
 26089                           
 26090                           ;incstack = 0
 26091                           ;OpenI2C@sync_mode stored from wreg
 26092  017BA8  0101               	movlb	1	; () banked
 26093  017BAA  6F0F               	movwf	OpenI2C@sync_mode& (0+255),b
 26094                           
 26095                           ; BSR set to: 1
 26096                           ;I2C.c: 76: SSPSTAT &= 0x3F;
 26097  017BAC  0E3F               	movlw	63
 26098  017BAE  16C7               	andwf	4039,f,c	;volatile
 26099                           
 26100                           ; BSR set to: 1
 26101                           ;I2C.c: 77: SSPCON1 = 0x00;
 26102  017BB0  0E00               	movlw	0
 26103  017BB2  6EC6               	movwf	4038,c	;volatile
 26104                           
 26105                           ; BSR set to: 1
 26106                           ;I2C.c: 78: SSPCON2 = 0x00;
 26107  017BB4  0E00               	movlw	0
 26108  017BB6  6EC5               	movwf	4037,c	;volatile
 26109                           
 26110                           ;I2C.c: 79: SSPCON1 |= sync_mode;
 26111  017BB8  0101               	movlb	1	; () banked
 26112  017BBA  510F               	movf	OpenI2C@sync_mode& (0+255),w,b
 26113  017BBC  12C6               	iorwf	4038,f,c	;volatile
 26114                           
 26115                           ;I2C.c: 80: SSPSTAT |= slew;
 26116  017BBE  0101               	movlb	1	; () banked
 26117  017BC0  510E               	movf	OpenI2C@slew& (0+255),w,b
 26118  017BC2  12C7               	iorwf	4039,f,c	;volatile
 26119                           
 26120                           ; BSR set to: 1
 26121                           ;I2C.c: 82: TRISCbits.TRISC3 = 1;
 26122  017BC4  8694               	bsf	3988,3,c	;volatile
 26123                           
 26124                           ; BSR set to: 1
 26125                           ;I2C.c: 83: TRISCbits.TRISC4 = 1;
 26126  017BC6  8894               	bsf	3988,4,c	;volatile
 26127                           
 26128                           ; BSR set to: 1
 26129                           ;I2C.c: 84: SSPCON1 |= 0b00100000;
 26130  017BC8  8AC6               	bsf	4038,5,c	;volatile
 26131                           
 26132                           ; BSR set to: 1
 26133  017BCA  0012               	return	
 26134  017BCC                     __end_of_OpenI2C:
 26135                           	opt stack 0
 26136                           tblptru	equ	0xFF8
 26137                           tblptrh	equ	0xFF7
 26138                           tblptrl	equ	0xFF6
 26139                           tablat	equ	0xFF5
 26140                           prodh	equ	0xFF4
 26141                           prodl	equ	0xFF3
 26142                           intcon	equ	0xFF2
 26143                           postinc0	equ	0xFEE
 26144                           wreg	equ	0xFE8
 26145                           indf1	equ	0xFE7
 26146                           postinc1	equ	0xFE6
 26147                           postdec1	equ	0xFE5
 26148                           fsr1h	equ	0xFE2
 26149                           fsr1l	equ	0xFE1
 26150                           indf2	equ	0xFDF
 26151                           postinc2	equ	0xFDE
 26152                           postdec2	equ	0xFDD
 26153                           fsr2h	equ	0xFDA
 26154                           fsr2l	equ	0xFD9
 26155                           status	equ	0xFD8
 26156                           
 26157 ;; *************** function _I2C_Read_Sequential *****************
 26158 ;; Defined at:
 26159 ;;		line 307 in file "I2C.c"
 26160 ;; Parameters:    Size  Location     Type
 26161 ;;  I2Caddress      1    wreg     unsigned char 
 26162 ;;  Register        1   19[BANK1 ] unsigned char 
 26163 ;;  rdptr           2   20[BANK1 ] PTR unsigned char 
 26164 ;;		 -> READ_RTC_TIME@temp(7), 
 26165 ;;  length          1   22[BANK1 ] unsigned char 
 26166 ;; Auto vars:     Size  Location     Type
 26167 ;;  I2Caddress      1   23[BANK1 ] unsigned char 
 26168 ;; Return value:  Size  Location     Type
 26169 ;;                  1    wreg      unsigned char 
 26170 ;; Registers used:
 26171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26172 ;; Tracked objects:
 26173 ;;		On entry : 0/0
 26174 ;;		On exit  : 0/0
 26175 ;;		Unchanged: 0/0
 26176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26177 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26178 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26180 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 26181 ;;Total ram usage:        5 bytes
 26182 ;; Hardware stack levels used:    1
 26183 ;; Hardware stack levels required when called:    8
 26184 ;; This function calls:
 26185 ;;		_IdleI2C
 26186 ;;		_Multiple_I2C_Read
 26187 ;;		_WriteI2C
 26188 ;; This function is called by:
 26189 ;;		_READ_RTC_TIME
 26190 ;; This function uses a non-reentrant model
 26191 ;;
 26192                           
 26193                           	psect	text58
 26194  016036                     __ptext58:
 26195                           	opt stack 0
 26196  016036                     _I2C_Read_Sequential:
 26197                           	opt stack 19
 26198                           
 26199                           ; BSR set to: 1
 26200                           ;incstack = 0
 26201                           ;I2C_Read_Sequential@I2Caddress stored from wreg
 26202  016036  0101               	movlb	1	; () banked
 26203  016038  6F17               	movwf	I2C_Read_Sequential@I2Caddress& (0+255),b
 26204                           
 26205                           ; BSR set to: 1
 26206                           ;I2C.c: 309: IdleI2C();
 26207  01603A  EC2B  F0BE         	call	_IdleI2C	;wreg free
 26208                           
 26209                           ;I2C.c: 310: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 26210  01603E  80C5               	bsf	4037,0,c	;volatile
 26211  016040                     l1364:
 26212  016040  B0C5               	btfsc	4037,0,c	;volatile
 26213  016042  D7FE               	goto	l1364
 26214  016044                     l1367:
 26215  016044  B0C5               	btfsc	4037,0,c	;volatile
 26216  016046  D7FE               	goto	l1367
 26217                           
 26218                           ;I2C.c: 312: if ( PIR2bits.BCLIF )
 26219  016048  A6A1               	btfss	4001,3,c	;volatile
 26220  01604A  D002               	goto	l10820
 26221                           
 26222                           ;I2C.c: 313: {
 26223                           ;I2C.c: 314: return ( -1 );
 26224  01604C  0EFF               	movlw	255
 26225  01604E  0012               	return	
 26226  016050                     l10820:
 26227                           
 26228                           ;I2C.c: 316: else
 26229                           ;I2C.c: 317: {
 26230                           ;I2C.c: 318: if ( WriteI2C( (I2Caddress << 1) & 0xFE ) )
 26231  016050  0101               	movlb	1	; () banked
 26232  016052  5117               	movf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 26233  016054  0101               	movlb	1	; () banked
 26234  016056  2517               	addwf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 26235  016058  0BFE               	andlw	254
 26236  01605A  ECC6  F0B6         	call	_WriteI2C
 26237  01605E  0900               	iorlw	0
 26238  016060  B4D8               	btfsc	status,2,c
 26239  016062  D005               	goto	l1373
 26240                           
 26241                           ;I2C.c: 319: {
 26242                           ;I2C.c: 320: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 26243  016064  84C5               	bsf	4037,2,c	;volatile
 26244  016066                     l1374:
 26245  016066  B4C5               	btfsc	4037,2,c	;volatile
 26246  016068  D7FE               	goto	l1374
 26247                           
 26248                           ;I2C.c: 321: return ( -3 );
 26249  01606A  0EFD               	movlw	253
 26250  01606C  0012               	return	
 26251  01606E                     l1373:
 26252                           
 26253                           ;I2C.c: 322: }
 26254                           ;I2C.c: 325: if ( !SSPCON2bits.ACKSTAT )
 26255  01606E  BCC5               	btfsc	4037,6,c	;volatile
 26256  016070  D04A               	goto	l1377
 26257                           
 26258                           ;I2C.c: 326: {
 26259                           ;I2C.c: 327: if ( WriteI2C( Register ) )
 26260  016072  0101               	movlb	1	; () banked
 26261  016074  5113               	movf	I2C_Read_Sequential@Register& (0+255),w,b
 26262  016076  ECC6  F0B6         	call	_WriteI2C
 26263  01607A  0900               	iorlw	0
 26264  01607C  B4D8               	btfsc	status,2,c
 26265  01607E  D005               	goto	l1378
 26266                           
 26267                           ;I2C.c: 328: {
 26268                           ;I2C.c: 329: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 26269  016080  84C5               	bsf	4037,2,c	;volatile
 26270  016082                     l1379:
 26271  016082  B4C5               	btfsc	4037,2,c	;volatile
 26272  016084  D7FE               	goto	l1379
 26273                           
 26274                           ;I2C.c: 330: return ( -3 );
 26275  016086  0EFD               	movlw	253
 26276  016088  0012               	return	
 26277  01608A                     l1378:
 26278                           
 26279                           ;I2C.c: 331: }
 26280                           ;I2C.c: 334: if ( !SSPCON2bits.ACKSTAT )
 26281  01608A  BCC5               	btfsc	4037,6,c	;volatile
 26282  01608C  D037               	goto	l1382
 26283                           
 26284                           ;I2C.c: 335: {
 26285                           ;I2C.c: 336: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
 26286  01608E  82C5               	bsf	4037,1,c	;volatile
 26287  016090                     l1383:
 26288  016090  B2C5               	btfsc	4037,1,c	;volatile
 26289  016092  D7FE               	goto	l1383
 26290  016094                     l1386:
 26291  016094  B2C5               	btfsc	4037,1,c	;volatile
 26292  016096  D7FE               	goto	l1386
 26293                           
 26294                           ;I2C.c: 338: if ( WriteI2C( (I2Caddress << 1) +1 ) )
 26295  016098  80D8               	bsf	status,0,c
 26296  01609A  0101               	movlb	1	; () banked
 26297  01609C  3517               	rlcf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 26298  01609E  ECC6  F0B6         	call	_WriteI2C
 26299  0160A2  0900               	iorlw	0
 26300  0160A4  B4D8               	btfsc	status,2,c
 26301  0160A6  D005               	goto	l1389
 26302                           
 26303                           ;I2C.c: 339: {
 26304                           ;I2C.c: 340: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 26305  0160A8  84C5               	bsf	4037,2,c	;volatile
 26306  0160AA                     l1390:
 26307  0160AA  B4C5               	btfsc	4037,2,c	;volatile
 26308  0160AC  D7FE               	goto	l1390
 26309                           
 26310                           ;I2C.c: 341: return ( -3 );
 26311  0160AE  0EFD               	movlw	253
 26312  0160B0  0012               	return	
 26313  0160B2                     l1389:
 26314                           
 26315                           ;I2C.c: 342: }
 26316                           ;I2C.c: 345: if ( !SSPCON2bits.ACKSTAT )
 26317  0160B2  BCC5               	btfsc	4037,6,c	;volatile
 26318  0160B4  D01E               	goto	l1393
 26319                           
 26320                           ;I2C.c: 346: {
 26321                           ;I2C.c: 347: if ( Multiple_I2C_Read( rdptr, length ) )
 26322  0160B6  0101               	movlb	1	; () banked
 26323  0160B8  C115  F110         	movff	I2C_Read_Sequential@rdptr+1,Multiple_I2C_Read@rdptr+1
 26324  0160BC  0101               	movlb	1	; () banked
 26325  0160BE  C114  F10F         	movff	I2C_Read_Sequential@rdptr,Multiple_I2C_Read@rdptr
 26326  0160C2  C116  F111         	movff	I2C_Read_Sequential@length,Multiple_I2C_Read@length
 26327  0160C6  ECBB  F0B9         	call	_Multiple_I2C_Read	;wreg free
 26328  0160CA  0900               	iorlw	0
 26329  0160CC  B4D8               	btfsc	status,2,c
 26330  0160CE  D002               	goto	l1394
 26331                           
 26332                           ;I2C.c: 348: {
 26333                           ;I2C.c: 349: return ( -1 );
 26334  0160D0  0EFF               	movlw	255
 26335  0160D2  0012               	return	
 26336  0160D4                     l1394:
 26337                           
 26338                           ;I2C.c: 350: }
 26339                           ;I2C.c: 352: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
 26340  0160D4  8AC5               	bsf	4037,5,c	;volatile
 26341  0160D6  88C5               	bsf	4037,4,c	;volatile
 26342  0160D8                     l1395:
 26343  0160D8  B8C5               	btfsc	4037,4,c	;volatile
 26344  0160DA  D7FE               	goto	l1395
 26345  0160DC                     l1398:
 26346  0160DC  B8C5               	btfsc	4037,4,c	;volatile
 26347  0160DE  D7FE               	goto	l1398
 26348                           
 26349                           ;I2C.c: 354: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 26350  0160E0  84C5               	bsf	4037,2,c	;volatile
 26351  0160E2                     l1401:
 26352  0160E2  B4C5               	btfsc	4037,2,c	;volatile
 26353  0160E4  D7FE               	goto	l1401
 26354  0160E6                     l1404:
 26355  0160E6  B4C5               	btfsc	4037,2,c	;volatile
 26356  0160E8  D7FE               	goto	l1404
 26357                           
 26358                           ;I2C.c: 356: if ( PIR2bits.BCLIF )
 26359  0160EA  A6A1               	btfss	4001,3,c	;volatile
 26360  0160EC  D011               	goto	l10868
 26361                           
 26362                           ;I2C.c: 357: {
 26363                           ;I2C.c: 358: return ( -1 );
 26364  0160EE  0EFF               	movlw	255
 26365  0160F0  0012               	return	
 26366  0160F2                     l1393:
 26367                           
 26368                           ;I2C.c: 361: else
 26369                           ;I2C.c: 362: {
 26370                           ;I2C.c: 363: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 26371  0160F2  84C5               	bsf	4037,2,c	;volatile
 26372  0160F4                     l1409:
 26373  0160F4  B4C5               	btfsc	4037,2,c	;volatile
 26374  0160F6  D7FE               	goto	l1409
 26375                           
 26376                           ;I2C.c: 364: return ( -2 );
 26377  0160F8  0EFE               	movlw	254
 26378  0160FA  0012               	return	
 26379  0160FC                     l1382:
 26380                           
 26381                           ;I2C.c: 367: else
 26382                           ;I2C.c: 368: {
 26383                           ;I2C.c: 369: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 26384  0160FC  84C5               	bsf	4037,2,c	;volatile
 26385  0160FE                     l1413:
 26386  0160FE  B4C5               	btfsc	4037,2,c	;volatile
 26387  016100  D7FE               	goto	l1413
 26388                           
 26389                           ;I2C.c: 370: return ( -2 );
 26390  016102  0EFE               	movlw	254
 26391  016104  0012               	return	
 26392  016106                     l1377:
 26393                           
 26394                           ;I2C.c: 373: else
 26395                           ;I2C.c: 374: {
 26396                           ;I2C.c: 375: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 26397  016106  84C5               	bsf	4037,2,c	;volatile
 26398  016108                     l1417:
 26399  016108  B4C5               	btfsc	4037,2,c	;volatile
 26400  01610A  D7FE               	goto	l1417
 26401                           
 26402                           ;I2C.c: 376: return ( -2 );
 26403  01610C  0EFE               	movlw	254
 26404  01610E  0012               	return	
 26405  016110                     l10868:
 26406                           
 26407                           ;I2C.c: 377: }
 26408                           ;I2C.c: 378: }
 26409                           ;I2C.c: 379: return ( 0 );
 26410  016110  0E00               	movlw	0
 26411  016112  0012               	return	
 26412  016114                     __end_of_I2C_Read_Sequential:
 26413                           	opt stack 0
 26414                           tblptru	equ	0xFF8
 26415                           tblptrh	equ	0xFF7
 26416                           tblptrl	equ	0xFF6
 26417                           tablat	equ	0xFF5
 26418                           prodh	equ	0xFF4
 26419                           prodl	equ	0xFF3
 26420                           intcon	equ	0xFF2
 26421                           postinc0	equ	0xFEE
 26422                           wreg	equ	0xFE8
 26423                           indf1	equ	0xFE7
 26424                           postinc1	equ	0xFE6
 26425                           postdec1	equ	0xFE5
 26426                           fsr1h	equ	0xFE2
 26427                           fsr1l	equ	0xFE1
 26428                           indf2	equ	0xFDF
 26429                           postinc2	equ	0xFDE
 26430                           postdec2	equ	0xFDD
 26431                           fsr2h	equ	0xFDA
 26432                           fsr2l	equ	0xFD9
 26433                           status	equ	0xFD8
 26434                           
 26435 ;; *************** function _WriteI2C *****************
 26436 ;; Defined at:
 26437 ;;		line 119 in file "I2C.c"
 26438 ;; Parameters:    Size  Location     Type
 26439 ;;  data_out        1    wreg     unsigned char 
 26440 ;; Auto vars:     Size  Location     Type
 26441 ;;  data_out        1   16[BANK1 ] unsigned char 
 26442 ;; Return value:  Size  Location     Type
 26443 ;;                  1    wreg      char 
 26444 ;; Registers used:
 26445 ;;		wreg, status,2, status,0, cstack
 26446 ;; Tracked objects:
 26447 ;;		On entry : 0/0
 26448 ;;		On exit  : 0/0
 26449 ;;		Unchanged: 0/0
 26450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26452 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26453 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26454 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26455 ;;Total ram usage:        2 bytes
 26456 ;; Hardware stack levels used:    1
 26457 ;; Hardware stack levels required when called:    7
 26458 ;; This function calls:
 26459 ;;		_IdleI2C
 26460 ;; This function is called by:
 26461 ;;		_I2C_Write_At_Address
 26462 ;;		_I2C_Read_At_Address
 26463 ;;		_I2C_Read_Sequential
 26464 ;; This function uses a non-reentrant model
 26465 ;;
 26466                           
 26467                           	psect	text59
 26468  016D8C                     __ptext59:
 26469                           	opt stack 0
 26470  016D8C                     _WriteI2C:
 26471                           	opt stack 19
 26472                           
 26473                           ;incstack = 0
 26474                           ;WriteI2C@data_out stored from wreg
 26475  016D8C  0101               	movlb	1	; () banked
 26476  016D8E  6F10               	movwf	WriteI2C@data_out& (0+255),b
 26477                           
 26478                           ; BSR set to: 1
 26479                           ;I2C.c: 121: SSPBUF = data_out;
 26480  016D90  C110  FFC9         	movff	WriteI2C@data_out,4041	;volatile
 26481                           
 26482                           ; BSR set to: 1
 26483                           ;I2C.c: 122: if ( SSPCON1bits.WCOL )
 26484  016D94  AEC6               	btfss	4038,7,c	;volatile
 26485  016D96  D002               	goto	l10006
 26486                           
 26487                           ; BSR set to: 1
 26488                           ;I2C.c: 123: return ( -1 );
 26489  016D98  0EFF               	movlw	255
 26490  016D9A  0012               	return	
 26491  016D9C                     l10006:
 26492                           
 26493                           ; BSR set to: 1
 26494                           ;I2C.c: 124: else
 26495                           ;I2C.c: 125: {
 26496                           ;I2C.c: 126: if( ((SSPCON1&0x0F)!=0x08) && ((SSPCON1&0x0F)!=0x0B) )
 26497  016D9C  CFC6 F10F          	movff	4038,??_WriteI2C	;volatile
 26498  016DA0  0E0F               	movlw	15
 26499  016DA2  0101               	movlb	1	; () banked
 26500  016DA4  170F               	andwf	??_WriteI2C& (0+255),f,b
 26501  016DA6  0101               	movlb	1	; () banked
 26502  016DA8  510F               	movf	??_WriteI2C& (0+255),w,b
 26503  016DAA  0A08               	xorlw	8
 26504  016DAC  B4D8               	btfsc	status,2,c
 26505  016DAE  D014               	goto	l10024
 26506                           
 26507                           ; BSR set to: 1
 26508  016DB0  CFC6 F10F          	movff	4038,??_WriteI2C	;volatile
 26509  016DB4  0E0F               	movlw	15
 26510  016DB6  0101               	movlb	1	; () banked
 26511  016DB8  170F               	andwf	??_WriteI2C& (0+255),f,b
 26512  016DBA  0101               	movlb	1	; () banked
 26513  016DBC  510F               	movf	??_WriteI2C& (0+255),w,b
 26514  016DBE  0A0B               	xorlw	11
 26515  016DC0  B4D8               	btfsc	status,2,c
 26516  016DC2  D00A               	goto	l10024
 26517                           
 26518                           ; BSR set to: 1
 26519                           ;I2C.c: 127: {
 26520                           ;I2C.c: 128: SSPCON1bits.CKP = 1;
 26521  016DC4  88C6               	bsf	4038,4,c	;volatile
 26522  016DC6                     l1246:
 26523                           
 26524                           ; BSR set to: 1
 26525  016DC6  A69E               	btfss	3998,3,c	;volatile
 26526  016DC8  D7FE               	goto	l1246
 26527                           
 26528                           ; BSR set to: 1
 26529                           ;I2C.c: 131: if ( ( !SSPSTATbits.R_W ) && ( !SSPSTATbits.BF ) )
 26530  016DCA  A4C7               	btfss	4039,2,c	;volatile
 26531                           
 26532                           ; BSR set to: 1
 26533  016DCC  B0C7               	btfsc	4039,0,c	;volatile
 26534  016DCE  D002               	goto	l10020
 26535                           
 26536                           ; BSR set to: 1
 26537                           ;I2C.c: 132: {
 26538                           ;I2C.c: 133: return ( -2 );
 26539  016DD0  0EFE               	movlw	254
 26540  016DD2  0012               	return	
 26541  016DD4                     l10020:
 26542                           
 26543                           ; BSR set to: 1
 26544                           ;I2C.c: 135: else
 26545                           ;I2C.c: 136: {
 26546                           ;I2C.c: 137: return ( 0 );
 26547  016DD4  0E00               	movlw	0
 26548  016DD6  0012               	return	
 26549  016DD8                     l10024:
 26550                           
 26551                           ; BSR set to: 1
 26552                           ;I2C.c: 140: else if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 26553  016DD8  CFC6 F10F          	movff	4038,??_WriteI2C	;volatile
 26554  016DDC  0E0F               	movlw	15
 26555  016DDE  0101               	movlb	1	; () banked
 26556  016DE0  170F               	andwf	??_WriteI2C& (0+255),f,b
 26557  016DE2  0101               	movlb	1	; () banked
 26558  016DE4  510F               	movf	??_WriteI2C& (0+255),w,b
 26559  016DE6  0A08               	xorlw	8
 26560  016DE8  B4D8               	btfsc	status,2,c
 26561  016DEA  D00A               	goto	l1255
 26562                           
 26563                           ; BSR set to: 1
 26564  016DEC  CFC6 F10F          	movff	4038,??_WriteI2C	;volatile
 26565  016DF0  0E0F               	movlw	15
 26566  016DF2  0101               	movlb	1	; () banked
 26567  016DF4  170F               	andwf	??_WriteI2C& (0+255),f,b
 26568  016DF6  0101               	movlb	1	; () banked
 26569  016DF8  510F               	movf	??_WriteI2C& (0+255),w,b
 26570  016DFA  0A0B               	xorlw	11
 26571  016DFC  A4D8               	btfss	status,2,c
 26572  016DFE  D00A               	goto	l10042
 26573  016E00                     l1255:
 26574                           
 26575                           ; BSR set to: 1
 26576  016E00  B0C7               	btfsc	4039,0,c	;volatile
 26577  016E02  D7FE               	goto	l1255
 26578                           
 26579                           ; BSR set to: 1
 26580                           ;I2C.c: 143: IdleI2C();
 26581                           
 26582                           ; BSR set to: 1
 26583  016E04  EC2B  F0BE         	call	_IdleI2C	;wreg free
 26584                           
 26585                           ;I2C.c: 144: if ( SSPCON2bits.ACKSTAT )
 26586  016E08  ACC5               	btfss	4037,6,c	;volatile
 26587  016E0A  D002               	goto	l10038
 26588                           
 26589                           ;I2C.c: 145: return ( -2 );
 26590  016E0C  0EFE               	movlw	254
 26591  016E0E  0012               	return	
 26592  016E10                     l10038:
 26593                           
 26594                           ;I2C.c: 146: else return ( 0 );
 26595  016E10  0E00               	movlw	0
 26596  016E12  0012               	return	
 26597  016E14                     l10042:
 26598                           
 26599                           ;I2C.c: 148: else
 26600                           ;I2C.c: 149: {
 26601                           ;I2C.c: 150: return (-4);
 26602  016E14  0EFC               	movlw	252
 26603  016E16  0012               	return	
 26604  016E18                     __end_of_WriteI2C:
 26605                           	opt stack 0
 26606                           tblptru	equ	0xFF8
 26607                           tblptrh	equ	0xFF7
 26608                           tblptrl	equ	0xFF6
 26609                           tablat	equ	0xFF5
 26610                           prodh	equ	0xFF4
 26611                           prodl	equ	0xFF3
 26612                           intcon	equ	0xFF2
 26613                           postinc0	equ	0xFEE
 26614                           wreg	equ	0xFE8
 26615                           indf1	equ	0xFE7
 26616                           postinc1	equ	0xFE6
 26617                           postdec1	equ	0xFE5
 26618                           fsr1h	equ	0xFE2
 26619                           fsr1l	equ	0xFE1
 26620                           indf2	equ	0xFDF
 26621                           postinc2	equ	0xFDE
 26622                           postdec2	equ	0xFDD
 26623                           fsr2h	equ	0xFDA
 26624                           fsr2l	equ	0xFD9
 26625                           status	equ	0xFD8
 26626                           
 26627 ;; *************** function _IdleI2C *****************
 26628 ;; Defined at:
 26629 ;;		line 108 in file "I2C.c"
 26630 ;; Parameters:    Size  Location     Type
 26631 ;;		None
 26632 ;; Auto vars:     Size  Location     Type
 26633 ;;		None
 26634 ;; Return value:  Size  Location     Type
 26635 ;;		None               void
 26636 ;; Registers used:
 26637 ;;		wreg, status,2, status,0
 26638 ;; Tracked objects:
 26639 ;;		On entry : 0/0
 26640 ;;		On exit  : 0/0
 26641 ;;		Unchanged: 0/0
 26642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26645 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26646 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26647 ;;Total ram usage:        1 bytes
 26648 ;; Hardware stack levels used:    1
 26649 ;; Hardware stack levels required when called:    6
 26650 ;; This function calls:
 26651 ;;		Nothing
 26652 ;; This function is called by:
 26653 ;;		_WriteI2C
 26654 ;;		_I2C_Write_At_Address
 26655 ;;		_I2C_Read_At_Address
 26656 ;;		_I2C_Read_Sequential
 26657 ;; This function uses a non-reentrant model
 26658 ;;
 26659                           
 26660                           	psect	text60
 26661  017C56                     __ptext60:
 26662                           	opt stack 0
 26663  017C56                     _IdleI2C:
 26664                           	opt stack 19
 26665  017C56                     l9818:
 26666  017C56  CFC5 F10E          	movff	4037,??_IdleI2C	;volatile
 26667  017C5A  0E1F               	movlw	31
 26668  017C5C  0101               	movlb	1	; () banked
 26669  017C5E  170E               	andwf	??_IdleI2C& (0+255),f,b
 26670  017C60  B4D8               	btfsc	status,2,c
 26671                           
 26672                           ; BSR set to: 1
 26673  017C62  B4C7               	btfsc	4039,2,c	;volatile
 26674  017C64  D7F8               	goto	l9818
 26675                           
 26676                           ; BSR set to: 1
 26677                           
 26678                           ; BSR set to: 1
 26679  017C66  0012               	return	
 26680  017C68                     __end_of_IdleI2C:
 26681                           	opt stack 0
 26682                           tblptru	equ	0xFF8
 26683                           tblptrh	equ	0xFF7
 26684                           tblptrl	equ	0xFF6
 26685                           tablat	equ	0xFF5
 26686                           prodh	equ	0xFF4
 26687                           prodl	equ	0xFF3
 26688                           intcon	equ	0xFF2
 26689                           postinc0	equ	0xFEE
 26690                           wreg	equ	0xFE8
 26691                           indf1	equ	0xFE7
 26692                           postinc1	equ	0xFE6
 26693                           postdec1	equ	0xFE5
 26694                           fsr1h	equ	0xFE2
 26695                           fsr1l	equ	0xFE1
 26696                           indf2	equ	0xFDF
 26697                           postinc2	equ	0xFDE
 26698                           postdec2	equ	0xFDD
 26699                           fsr2h	equ	0xFDA
 26700                           fsr2l	equ	0xFD9
 26701                           status	equ	0xFD8
 26702                           
 26703 ;; *************** function _Multiple_I2C_Read *****************
 26704 ;; Defined at:
 26705 ;;		line 387 in file "I2C.c"
 26706 ;; Parameters:    Size  Location     Type
 26707 ;;  rdptr           2   15[BANK1 ] PTR unsigned char 
 26708 ;;		 -> READ_RTC_TIME@temp(7), 
 26709 ;;  length          1   17[BANK1 ] unsigned char 
 26710 ;; Auto vars:     Size  Location     Type
 26711 ;;		None
 26712 ;; Return value:  Size  Location     Type
 26713 ;;                  1    wreg      unsigned char 
 26714 ;; Registers used:
 26715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26716 ;; Tracked objects:
 26717 ;;		On entry : 0/0
 26718 ;;		On exit  : 0/0
 26719 ;;		Unchanged: 0/0
 26720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26721 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 26722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26723 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26724 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26725 ;;Total ram usage:        4 bytes
 26726 ;; Hardware stack levels used:    1
 26727 ;; Hardware stack levels required when called:    7
 26728 ;; This function calls:
 26729 ;;		_readI2C
 26730 ;; This function is called by:
 26731 ;;		_I2C_Read_Sequential
 26732 ;; This function uses a non-reentrant model
 26733 ;;
 26734                           
 26735                           	psect	text61
 26736  017376                     __ptext61:
 26737                           	opt stack 0
 26738  017376                     _Multiple_I2C_Read:
 26739                           	opt stack 19
 26740                           
 26741                           ;I2C.c: 389: while ( length-- )
 26742                           
 26743                           ; BSR set to: 1
 26744                           ;incstack = 0
 26745  017376  D02C               	goto	l10064
 26746  017378                     l10048:
 26747                           
 26748                           ;I2C.c: 390: {
 26749                           ;I2C.c: 391: *rdptr++ = readI2C();
 26750  017378  EC25  F0BD         	call	_readI2C	;wreg free
 26751  01737C  C10F  FFD9         	movff	Multiple_I2C_Read@rdptr,fsr2l
 26752  017380  C110  FFDA         	movff	Multiple_I2C_Read@rdptr+1,fsr2h
 26753  017384  6EDF               	movwf	indf2,c
 26754  017386  0101               	movlb	1	; () banked
 26755  017388  4B0F               	infsnz	Multiple_I2C_Read@rdptr& (0+255),f,b
 26756  01738A  2B10               	incf	(Multiple_I2C_Read@rdptr+1)& (0+255),f,b
 26757  01738C                     l1424:
 26758  01738C  B6C5               	btfsc	4037,3,c	;volatile
 26759  01738E  D7FE               	goto	l1424
 26760                           
 26761                           ;I2C.c: 394: if ( PIR2bits.BCLIF )
 26762  017390  A6A1               	btfss	4001,3,c	;volatile
 26763  017392  D002               	goto	l10056
 26764                           
 26765                           ;I2C.c: 395: {
 26766                           ;I2C.c: 396: return ( -1 );
 26767  017394  0EFF               	movlw	255
 26768  017396  0012               	return	
 26769  017398                     l10056:
 26770                           
 26771                           ;I2C.c: 397: }
 26772                           ;I2C.c: 399: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 26773  017398  CFC6 F112          	movff	4038,??_Multiple_I2C_Read	;volatile
 26774  01739C  0E0F               	movlw	15
 26775  01739E  0101               	movlb	1	; () banked
 26776  0173A0  1712               	andwf	??_Multiple_I2C_Read& (0+255),f,b
 26777  0173A2  0101               	movlb	1	; () banked
 26778  0173A4  5112               	movf	??_Multiple_I2C_Read& (0+255),w,b
 26779  0173A6  0A08               	xorlw	8
 26780  0173A8  B4D8               	btfsc	status,2,c
 26781  0173AA  D00A               	goto	l10060
 26782                           
 26783                           ; BSR set to: 1
 26784  0173AC  CFC6 F112          	movff	4038,??_Multiple_I2C_Read	;volatile
 26785  0173B0  0E0F               	movlw	15
 26786  0173B2  0101               	movlb	1	; () banked
 26787  0173B4  1712               	andwf	??_Multiple_I2C_Read& (0+255),f,b
 26788  0173B6  0101               	movlb	1	; () banked
 26789  0173B8  5112               	movf	??_Multiple_I2C_Read& (0+255),w,b
 26790  0173BA  0A0B               	xorlw	11
 26791  0173BC  A4D8               	btfss	status,2,c
 26792  0173BE  D008               	goto	l10064
 26793  0173C0                     l10060:
 26794                           
 26795                           ; BSR set to: 1
 26796                           ;I2C.c: 400: {
 26797                           ;I2C.c: 401: if ( length )
 26798  0173C0  0101               	movlb	1	; () banked
 26799  0173C2  5111               	movf	Multiple_I2C_Read@length& (0+255),w,b
 26800  0173C4  B4D8               	btfsc	status,2,c
 26801  0173C6  D004               	goto	l10064
 26802                           
 26803                           ; BSR set to: 1
 26804                           ;I2C.c: 402: {
 26805                           ;I2C.c: 403: SSPCON2bits.ACKDT = 0;
 26806  0173C8  9AC5               	bcf	4037,5,c	;volatile
 26807                           
 26808                           ;I2C.c: 404: SSPCON2bits.ACKEN = 1;
 26809  0173CA  88C5               	bsf	4037,4,c	;volatile
 26810  0173CC                     l1433:
 26811  0173CC  B8C5               	btfsc	4037,4,c	;volatile
 26812  0173CE  D7FE               	goto	l1433
 26813  0173D0                     l10064:
 26814  0173D0  0101               	movlb	1	; () banked
 26815  0173D2  0711               	decf	Multiple_I2C_Read@length& (0+255),f,b
 26816  0173D4  0101               	movlb	1	; () banked
 26817  0173D6  2911               	incf	Multiple_I2C_Read@length& (0+255),w,b
 26818  0173D8  A4D8               	btfss	status,2,c
 26819  0173DA  D7CE               	goto	l10048
 26820                           
 26821                           ; BSR set to: 1
 26822                           ;I2C.c: 406: }
 26823                           ;I2C.c: 407: }
 26824                           ;I2C.c: 409: }
 26825                           ;I2C.c: 410: return ( 0 );
 26826                           
 26827                           ; BSR set to: 1
 26828  0173DC  0E00               	movlw	0
 26829  0173DE  0012               	return	
 26830  0173E0                     __end_of_Multiple_I2C_Read:
 26831                           	opt stack 0
 26832                           tblptru	equ	0xFF8
 26833                           tblptrh	equ	0xFF7
 26834                           tblptrl	equ	0xFF6
 26835                           tablat	equ	0xFF5
 26836                           prodh	equ	0xFF4
 26837                           prodl	equ	0xFF3
 26838                           intcon	equ	0xFF2
 26839                           postinc0	equ	0xFEE
 26840                           wreg	equ	0xFE8
 26841                           indf1	equ	0xFE7
 26842                           postinc1	equ	0xFE6
 26843                           postdec1	equ	0xFE5
 26844                           fsr1h	equ	0xFE2
 26845                           fsr1l	equ	0xFE1
 26846                           indf2	equ	0xFDF
 26847                           postinc2	equ	0xFDE
 26848                           postdec2	equ	0xFDD
 26849                           fsr2h	equ	0xFDA
 26850                           fsr2l	equ	0xFD9
 26851                           status	equ	0xFD8
 26852                           
 26853 ;; *************** function _readI2C *****************
 26854 ;; Defined at:
 26855 ;;		line 418 in file "I2C.c"
 26856 ;; Parameters:    Size  Location     Type
 26857 ;;		None
 26858 ;; Auto vars:     Size  Location     Type
 26859 ;;		None
 26860 ;; Return value:  Size  Location     Type
 26861 ;;                  1    wreg      unsigned char 
 26862 ;; Registers used:
 26863 ;;		wreg, status,2, status,0
 26864 ;; Tracked objects:
 26865 ;;		On entry : 0/0
 26866 ;;		On exit  : 0/0
 26867 ;;		Unchanged: 0/0
 26868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26871 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26872 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26873 ;;Total ram usage:        1 bytes
 26874 ;; Hardware stack levels used:    1
 26875 ;; Hardware stack levels required when called:    6
 26876 ;; This function calls:
 26877 ;;		Nothing
 26878 ;; This function is called by:
 26879 ;;		_Multiple_I2C_Read
 26880 ;; This function uses a non-reentrant model
 26881 ;;
 26882                           
 26883                           	psect	text62
 26884  017A4A                     __ptext62:
 26885                           	opt stack 0
 26886  017A4A                     _readI2C:
 26887                           	opt stack 19
 26888                           
 26889                           ;I2C.c: 420: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 26890                           
 26891                           ;incstack = 0
 26892  017A4A  CFC6 F10E          	movff	4038,??_readI2C	;volatile
 26893  017A4E  0E0F               	movlw	15
 26894  017A50  0101               	movlb	1	; () banked
 26895  017A52  170E               	andwf	??_readI2C& (0+255),f,b
 26896  017A54  0101               	movlb	1	; () banked
 26897  017A56  510E               	movf	??_readI2C& (0+255),w,b
 26898  017A58  0A08               	xorlw	8
 26899  017A5A  B4D8               	btfsc	status,2,c
 26900  017A5C  D009               	goto	l1441
 26901                           
 26902                           ; BSR set to: 1
 26903  017A5E  CFC6 F10E          	movff	4038,??_readI2C	;volatile
 26904  017A62  0E0F               	movlw	15
 26905  017A64  0101               	movlb	1	; () banked
 26906  017A66  170E               	andwf	??_readI2C& (0+255),f,b
 26907  017A68  0101               	movlb	1	; () banked
 26908  017A6A  510E               	movf	??_readI2C& (0+255),w,b
 26909  017A6C  0A0B               	xorlw	11
 26910  017A6E  B4D8               	btfsc	status,2,c
 26911  017A70                     l1441:
 26912                           
 26913                           ; BSR set to: 1
 26914                           ;I2C.c: 421: SSPCON2bits.RCEN = 1;
 26915  017A70  86C5               	bsf	4037,3,c	;volatile
 26916  017A72                     l1442:
 26917  017A72  A0C7               	btfss	4039,0,c	;volatile
 26918  017A74  D7FE               	goto	l1442
 26919                           
 26920                           ;I2C.c: 423: return ( SSPBUF );
 26921  017A76  50C9               	movf	4041,w,c	;volatile
 26922  017A78  0012               	return	
 26923  017A7A                     __end_of_readI2C:
 26924                           	opt stack 0
 26925                           tblptru	equ	0xFF8
 26926                           tblptrh	equ	0xFF7
 26927                           tblptrl	equ	0xFF6
 26928                           tablat	equ	0xFF5
 26929                           prodh	equ	0xFF4
 26930                           prodl	equ	0xFF3
 26931                           intcon	equ	0xFF2
 26932                           postinc0	equ	0xFEE
 26933                           wreg	equ	0xFE8
 26934                           indf1	equ	0xFE7
 26935                           postinc1	equ	0xFE6
 26936                           postdec1	equ	0xFE5
 26937                           fsr1h	equ	0xFE2
 26938                           fsr1l	equ	0xFE1
 26939                           indf2	equ	0xFDF
 26940                           postinc2	equ	0xFDE
 26941                           postdec2	equ	0xFDD
 26942                           fsr2h	equ	0xFDA
 26943                           fsr2l	equ	0xFD9
 26944                           status	equ	0xFD8
 26945                           
 26946 ;; *************** function _Parse_Time *****************
 26947 ;; Defined at:
 26948 ;;		line 279 in file "RTC.c"
 26949 ;; Parameters:    Size  Location     Type
 26950 ;;  This            2   14[BANK1 ] PTR unsigned char 
 26951 ;;		 -> Rxdata(100), 
 26952 ;; Auto vars:     Size  Location     Type
 26953 ;;  TempTime        9   18[BANK1 ] struct TIME
 26954 ;;  temp            1   17[BANK1 ] unsigned char 
 26955 ;; Return value:  Size  Location     Type
 26956 ;;                  1    wreg      unsigned char 
 26957 ;; Registers used:
 26958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26959 ;; Tracked objects:
 26960 ;;		On entry : 0/0
 26961 ;;		On exit  : 0/0
 26962 ;;		Unchanged: 0/0
 26963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26964 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26965 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 26966 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26967 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 26968 ;;Total ram usage:       13 bytes
 26969 ;; Hardware stack levels used:    1
 26970 ;; Hardware stack levels required when called:    6
 26971 ;; This function calls:
 26972 ;;		Nothing
 26973 ;; This function is called by:
 26974 ;;		_Command
 26975 ;; This function uses a non-reentrant model
 26976 ;;
 26977                           
 26978                           	psect	text63
 26979  013B1E                     __ptext63:
 26980                           	opt stack 0
 26981  013B1E                     _Parse_Time:
 26982                           	opt stack 22
 26983                           
 26984                           ;RTC.c: 281: TIME TempTime;
 26985                           ;RTC.c: 282: unsigned char temp = 0;
 26986                           
 26987                           ;incstack = 0
 26988  013B1E  0E00               	movlw	0
 26989  013B20  0101               	movlb	1	; () banked
 26990  013B22  6F11               	movwf	Parse_Time@temp& (0+255),b
 26991                           
 26992                           ; BSR set to: 1
 26993                           ;RTC.c: 284: if(*This != 0 && *This == ' ')
 26994  013B24  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 26995  013B28  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 26996  013B2C  50DF               	movf	indf2,w,c
 26997  013B2E  B4D8               	btfsc	status,2,c
 26998  013B30  D00A               	goto	l11662
 26999                           
 27000                           ; BSR set to: 1
 27001  013B32  0E20               	movlw	32
 27002  013B34  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27003  013B38  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27004  013B3C  62DF               	cpfseq	indf2,c
 27005  013B3E  D003               	goto	l11662
 27006                           
 27007                           ; BSR set to: 1
 27008                           ;RTC.c: 285: {
 27009                           ;RTC.c: 286: This++;
 27010  013B40  0101               	movlb	1	; () banked
 27011  013B42  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27012  013B44  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27013  013B46                     l11662:
 27014                           
 27015                           ; BSR set to: 1
 27016                           ;RTC.c: 287: }
 27017                           ;RTC.c: 290: if (*This >= 48 && *This <= 57)
 27018  013B46  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27019  013B4A  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27020  013B4E  0E2F               	movlw	47
 27021  013B50  64DF               	cpfsgt	indf2,c
 27022  013B52  D018               	goto	l11670
 27023                           
 27024                           ; BSR set to: 1
 27025  013B54  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27026  013B58  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27027  013B5C  50DF               	movf	indf2,w,c
 27028  013B5E  0101               	movlb	1	; () banked
 27029  013B60  6F10               	movwf	??_Parse_Time& (0+255),b
 27030  013B62  0E3A               	movlw	58
 27031  013B64  0101               	movlb	1	; () banked
 27032  013B66  5D10               	subwf	??_Parse_Time& (0+255),w,b
 27033  013B68  B0D8               	btfsc	status,0,c
 27034  013B6A  D00C               	goto	l11670
 27035                           
 27036                           ; BSR set to: 1
 27037                           ;RTC.c: 291: {
 27038                           ;RTC.c: 292: temp = *This - 48;
 27039  013B6C  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27040  013B70  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27041  013B74  50DF               	movf	indf2,w,c
 27042  013B76  0FD0               	addlw	208
 27043  013B78  0101               	movlb	1	; () banked
 27044  013B7A  6F11               	movwf	Parse_Time@temp& (0+255),b
 27045                           
 27046                           ; BSR set to: 1
 27047                           ;RTC.c: 293: This++;
 27048  013B7C  0101               	movlb	1	; () banked
 27049  013B7E  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27050  013B80  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27051                           
 27052                           ;RTC.c: 294: }
 27053  013B82  D002               	goto	l11674
 27054  013B84                     l11670:
 27055                           
 27056                           ; BSR set to: 1
 27057                           ;RTC.c: 295: else
 27058                           ;RTC.c: 296: {
 27059                           ;RTC.c: 297: return 0;
 27060  013B84  0E00               	movlw	0
 27061  013B86  0012               	return	
 27062  013B88                     l11674:
 27063                           
 27064                           ; BSR set to: 1
 27065                           ;RTC.c: 298: }
 27066                           ;RTC.c: 300: if(*This >= 48 && *This <= 57)
 27067  013B88  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27068  013B8C  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27069  013B90  0E2F               	movlw	47
 27070  013B92  64DF               	cpfsgt	indf2,c
 27071  013B94  D01E               	goto	l11684
 27072                           
 27073                           ; BSR set to: 1
 27074  013B96  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27075  013B9A  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27076  013B9E  50DF               	movf	indf2,w,c
 27077  013BA0  0101               	movlb	1	; () banked
 27078  013BA2  6F10               	movwf	??_Parse_Time& (0+255),b
 27079  013BA4  0E3A               	movlw	58
 27080  013BA6  0101               	movlb	1	; () banked
 27081  013BA8  5D10               	subwf	??_Parse_Time& (0+255),w,b
 27082  013BAA  B0D8               	btfsc	status,0,c
 27083  013BAC  D012               	goto	l11684
 27084                           
 27085                           ; BSR set to: 1
 27086                           ;RTC.c: 301: {
 27087                           ;RTC.c: 302: temp *= 10;
 27088  013BAE  0E0A               	movlw	10
 27089  013BB0  0101               	movlb	1	; () banked
 27090  013BB2  0311               	mulwf	Parse_Time@temp& (0+255),b
 27091  013BB4  50F3               	movf	prodl,w,c
 27092  013BB6  0101               	movlb	1	; () banked
 27093  013BB8  6F11               	movwf	Parse_Time@temp& (0+255),b
 27094                           
 27095                           ; BSR set to: 1
 27096                           ;RTC.c: 303: temp += *This - 48;
 27097  013BBA  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27098  013BBE  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27099  013BC2  50DF               	movf	indf2,w,c
 27100  013BC4  0FD0               	addlw	208
 27101  013BC6  0101               	movlb	1	; () banked
 27102  013BC8  2711               	addwf	Parse_Time@temp& (0+255),f,b
 27103                           
 27104                           ; BSR set to: 1
 27105                           ;RTC.c: 304: This++;
 27106  013BCA  0101               	movlb	1	; () banked
 27107  013BCC  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27108  013BCE  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27109                           
 27110                           ;RTC.c: 305: }
 27111  013BD0  D00A               	goto	l1139
 27112  013BD2                     l11684:
 27113                           
 27114                           ; BSR set to: 1
 27115                           ;RTC.c: 306: else if(*This == '/')
 27116  013BD2  0E2F               	movlw	47
 27117  013BD4  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27118  013BD8  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27119  013BDC  62DF               	cpfseq	indf2,c
 27120  013BDE  D001               	goto	l11688
 27121  013BE0  D002               	goto	l1139
 27122  013BE2                     l11688:
 27123                           
 27124                           ; BSR set to: 1
 27125                           ;RTC.c: 310: else
 27126                           ;RTC.c: 311: {
 27127                           ;RTC.c: 312: return 0;
 27128  013BE2  0E00               	movlw	0
 27129  013BE4  0012               	return	
 27130  013BE6                     l1139:
 27131                           
 27132                           ; BSR set to: 1
 27133                           ;RTC.c: 313: }
 27134                           ;RTC.c: 314: TempTime.Month = temp;
 27135  013BE6  C111  F119         	movff	Parse_Time@temp,Parse_Time@TempTime+7
 27136                           
 27137                           ; BSR set to: 1
 27138                           ;RTC.c: 316: if(*This == '/')
 27139  013BEA  0E2F               	movlw	47
 27140  013BEC  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27141  013BF0  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27142  013BF4  62DF               	cpfseq	indf2,c
 27143  013BF6  D004               	goto	l11696
 27144                           
 27145                           ; BSR set to: 1
 27146                           ;RTC.c: 317: {
 27147                           ;RTC.c: 318: This++;
 27148  013BF8  0101               	movlb	1	; () banked
 27149  013BFA  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27150  013BFC  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27151                           
 27152                           ;RTC.c: 319: }
 27153  013BFE  D002               	goto	l11700
 27154  013C00                     l11696:
 27155                           
 27156                           ; BSR set to: 1
 27157                           ;RTC.c: 320: else
 27158                           ;RTC.c: 321: {
 27159                           ;RTC.c: 322: return 0;
 27160  013C00  0E00               	movlw	0
 27161  013C02  0012               	return	
 27162  013C04                     l11700:
 27163                           
 27164                           ; BSR set to: 1
 27165                           ;RTC.c: 323: }
 27166                           ;RTC.c: 326: if (*This >= 48 && *This <= 57)
 27167  013C04  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27168  013C08  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27169  013C0C  0E2F               	movlw	47
 27170  013C0E  64DF               	cpfsgt	indf2,c
 27171  013C10  D018               	goto	l11708
 27172                           
 27173                           ; BSR set to: 1
 27174  013C12  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27175  013C16  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27176  013C1A  50DF               	movf	indf2,w,c
 27177  013C1C  0101               	movlb	1	; () banked
 27178  013C1E  6F10               	movwf	??_Parse_Time& (0+255),b
 27179  013C20  0E3A               	movlw	58
 27180  013C22  0101               	movlb	1	; () banked
 27181  013C24  5D10               	subwf	??_Parse_Time& (0+255),w,b
 27182  013C26  B0D8               	btfsc	status,0,c
 27183  013C28  D00C               	goto	l11708
 27184                           
 27185                           ; BSR set to: 1
 27186                           ;RTC.c: 327: {
 27187                           ;RTC.c: 328: temp = *This - 48;
 27188  013C2A  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27189  013C2E  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27190  013C32  50DF               	movf	indf2,w,c
 27191  013C34  0FD0               	addlw	208
 27192  013C36  0101               	movlb	1	; () banked
 27193  013C38  6F11               	movwf	Parse_Time@temp& (0+255),b
 27194                           
 27195                           ; BSR set to: 1
 27196                           ;RTC.c: 329: This++;
 27197  013C3A  0101               	movlb	1	; () banked
 27198  013C3C  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27199  013C3E  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27200                           
 27201                           ;RTC.c: 330: }
 27202  013C40  D002               	goto	l11712
 27203  013C42                     l11708:
 27204                           
 27205                           ; BSR set to: 1
 27206                           ;RTC.c: 331: else
 27207                           ;RTC.c: 332: {
 27208                           ;RTC.c: 333: return 0;
 27209  013C42  0E00               	movlw	0
 27210  013C44  0012               	return	
 27211  013C46                     l11712:
 27212                           
 27213                           ; BSR set to: 1
 27214                           ;RTC.c: 334: }
 27215                           ;RTC.c: 336: if(*This >= 48 && *This <= 57)
 27216  013C46  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27217  013C4A  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27218  013C4E  0E2F               	movlw	47
 27219  013C50  64DF               	cpfsgt	indf2,c
 27220  013C52  D01E               	goto	l11722
 27221                           
 27222                           ; BSR set to: 1
 27223  013C54  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27224  013C58  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27225  013C5C  50DF               	movf	indf2,w,c
 27226  013C5E  0101               	movlb	1	; () banked
 27227  013C60  6F10               	movwf	??_Parse_Time& (0+255),b
 27228  013C62  0E3A               	movlw	58
 27229  013C64  0101               	movlb	1	; () banked
 27230  013C66  5D10               	subwf	??_Parse_Time& (0+255),w,b
 27231  013C68  B0D8               	btfsc	status,0,c
 27232  013C6A  D012               	goto	l11722
 27233                           
 27234                           ; BSR set to: 1
 27235                           ;RTC.c: 337: {
 27236                           ;RTC.c: 338: temp *= 10;
 27237  013C6C  0E0A               	movlw	10
 27238  013C6E  0101               	movlb	1	; () banked
 27239  013C70  0311               	mulwf	Parse_Time@temp& (0+255),b
 27240  013C72  50F3               	movf	prodl,w,c
 27241  013C74  0101               	movlb	1	; () banked
 27242  013C76  6F11               	movwf	Parse_Time@temp& (0+255),b
 27243                           
 27244                           ; BSR set to: 1
 27245                           ;RTC.c: 339: temp += *This - 48;
 27246  013C78  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27247  013C7C  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27248  013C80  50DF               	movf	indf2,w,c
 27249  013C82  0FD0               	addlw	208
 27250  013C84  0101               	movlb	1	; () banked
 27251  013C86  2711               	addwf	Parse_Time@temp& (0+255),f,b
 27252                           
 27253                           ; BSR set to: 1
 27254                           ;RTC.c: 340: This++;
 27255  013C88  0101               	movlb	1	; () banked
 27256  013C8A  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27257  013C8C  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27258                           
 27259                           ;RTC.c: 341: }
 27260  013C8E  D00A               	goto	l1147
 27261  013C90                     l11722:
 27262                           
 27263                           ; BSR set to: 1
 27264                           ;RTC.c: 342: else if(*This == '/')
 27265  013C90  0E2F               	movlw	47
 27266  013C92  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27267  013C96  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27268  013C9A  62DF               	cpfseq	indf2,c
 27269  013C9C  D001               	goto	l11726
 27270  013C9E  D002               	goto	l1147
 27271  013CA0                     l11726:
 27272                           
 27273                           ; BSR set to: 1
 27274                           ;RTC.c: 346: else
 27275                           ;RTC.c: 347: {
 27276                           ;RTC.c: 348: return 0;
 27277  013CA0  0E00               	movlw	0
 27278  013CA2  0012               	return	
 27279  013CA4                     l1147:
 27280                           
 27281                           ; BSR set to: 1
 27282                           ;RTC.c: 349: }
 27283                           ;RTC.c: 350: TempTime.Date = temp;
 27284  013CA4  C111  F118         	movff	Parse_Time@temp,Parse_Time@TempTime+6
 27285                           
 27286                           ; BSR set to: 1
 27287                           ;RTC.c: 352: if(*This == '/')
 27288  013CA8  0E2F               	movlw	47
 27289  013CAA  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27290  013CAE  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27291  013CB2  62DF               	cpfseq	indf2,c
 27292  013CB4  D004               	goto	l11734
 27293                           
 27294                           ; BSR set to: 1
 27295                           ;RTC.c: 353: {
 27296                           ;RTC.c: 354: This++;
 27297  013CB6  0101               	movlb	1	; () banked
 27298  013CB8  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27299  013CBA  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27300                           
 27301                           ;RTC.c: 355: }
 27302  013CBC  D002               	goto	l11738
 27303  013CBE                     l11734:
 27304                           
 27305                           ; BSR set to: 1
 27306                           ;RTC.c: 356: else
 27307                           ;RTC.c: 357: {
 27308                           ;RTC.c: 358: return 0;
 27309  013CBE  0E00               	movlw	0
 27310  013CC0  0012               	return	
 27311  013CC2                     l11738:
 27312                           
 27313                           ; BSR set to: 1
 27314                           ;RTC.c: 359: }
 27315                           ;RTC.c: 362: if (*This >= 48 && *This <= 57)
 27316  013CC2  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27317  013CC6  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27318  013CCA  0E2F               	movlw	47
 27319  013CCC  64DF               	cpfsgt	indf2,c
 27320  013CCE  D018               	goto	l11746
 27321                           
 27322                           ; BSR set to: 1
 27323  013CD0  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27324  013CD4  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27325  013CD8  50DF               	movf	indf2,w,c
 27326  013CDA  0101               	movlb	1	; () banked
 27327  013CDC  6F10               	movwf	??_Parse_Time& (0+255),b
 27328  013CDE  0E3A               	movlw	58
 27329  013CE0  0101               	movlb	1	; () banked
 27330  013CE2  5D10               	subwf	??_Parse_Time& (0+255),w,b
 27331  013CE4  B0D8               	btfsc	status,0,c
 27332  013CE6  D00C               	goto	l11746
 27333                           
 27334                           ; BSR set to: 1
 27335                           ;RTC.c: 363: {
 27336                           ;RTC.c: 364: temp = *This - 48;
 27337  013CE8  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27338  013CEC  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27339  013CF0  50DF               	movf	indf2,w,c
 27340  013CF2  0FD0               	addlw	208
 27341  013CF4  0101               	movlb	1	; () banked
 27342  013CF6  6F11               	movwf	Parse_Time@temp& (0+255),b
 27343                           
 27344                           ; BSR set to: 1
 27345                           ;RTC.c: 365: This++;
 27346  013CF8  0101               	movlb	1	; () banked
 27347  013CFA  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27348  013CFC  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27349                           
 27350                           ;RTC.c: 366: }
 27351  013CFE  D002               	goto	l11750
 27352  013D00                     l11746:
 27353                           
 27354                           ; BSR set to: 1
 27355                           ;RTC.c: 367: else
 27356                           ;RTC.c: 368: {
 27357                           ;RTC.c: 369: return 0;
 27358  013D00  0E00               	movlw	0
 27359  013D02  0012               	return	
 27360  013D04                     l11750:
 27361                           
 27362                           ; BSR set to: 1
 27363                           ;RTC.c: 370: }
 27364                           ;RTC.c: 371: if (*This >= 48 && *This <= 57)
 27365  013D04  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27366  013D08  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27367  013D0C  0E2F               	movlw	47
 27368  013D0E  64DF               	cpfsgt	indf2,c
 27369  013D10  D01E               	goto	l11760
 27370                           
 27371                           ; BSR set to: 1
 27372  013D12  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27373  013D16  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27374  013D1A  50DF               	movf	indf2,w,c
 27375  013D1C  0101               	movlb	1	; () banked
 27376  013D1E  6F10               	movwf	??_Parse_Time& (0+255),b
 27377  013D20  0E3A               	movlw	58
 27378  013D22  0101               	movlb	1	; () banked
 27379  013D24  5D10               	subwf	??_Parse_Time& (0+255),w,b
 27380  013D26  B0D8               	btfsc	status,0,c
 27381  013D28  D012               	goto	l11760
 27382                           
 27383                           ; BSR set to: 1
 27384                           ;RTC.c: 372: {
 27385                           ;RTC.c: 373: temp *= 10;
 27386  013D2A  0E0A               	movlw	10
 27387  013D2C  0101               	movlb	1	; () banked
 27388  013D2E  0311               	mulwf	Parse_Time@temp& (0+255),b
 27389  013D30  50F3               	movf	prodl,w,c
 27390  013D32  0101               	movlb	1	; () banked
 27391  013D34  6F11               	movwf	Parse_Time@temp& (0+255),b
 27392                           
 27393                           ; BSR set to: 1
 27394                           ;RTC.c: 374: temp += *This - 48;
 27395  013D36  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27396  013D3A  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27397  013D3E  50DF               	movf	indf2,w,c
 27398  013D40  0FD0               	addlw	208
 27399  013D42  0101               	movlb	1	; () banked
 27400  013D44  2711               	addwf	Parse_Time@temp& (0+255),f,b
 27401                           
 27402                           ; BSR set to: 1
 27403                           ;RTC.c: 375: This++;
 27404  013D46  0101               	movlb	1	; () banked
 27405  013D48  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27406  013D4A  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27407                           
 27408                           ;RTC.c: 376: }
 27409  013D4C  D002               	goto	l1155
 27410  013D4E                     l11760:
 27411                           
 27412                           ; BSR set to: 1
 27413                           ;RTC.c: 377: else
 27414                           ;RTC.c: 378: {
 27415                           ;RTC.c: 379: return 0;
 27416  013D4E  0E00               	movlw	0
 27417  013D50  0012               	return	
 27418  013D52                     l1155:
 27419                           
 27420                           ; BSR set to: 1
 27421                           ;RTC.c: 380: }
 27422                           ;RTC.c: 381: TempTime.Year = temp;
 27423  013D52  C111  F11A         	movff	Parse_Time@temp,Parse_Time@TempTime+8
 27424                           
 27425                           ; BSR set to: 1
 27426                           ;RTC.c: 383: if(*This == ' ')
 27427  013D56  0E20               	movlw	32
 27428  013D58  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27429  013D5C  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27430  013D60  62DF               	cpfseq	indf2,c
 27431  013D62  D003               	goto	l11768
 27432                           
 27433                           ; BSR set to: 1
 27434                           ;RTC.c: 384: {
 27435                           ;RTC.c: 385: This++;
 27436  013D64  0101               	movlb	1	; () banked
 27437  013D66  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27438  013D68  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27439  013D6A                     l11768:
 27440                           
 27441                           ; BSR set to: 1
 27442                           ;RTC.c: 386: }
 27443                           ;RTC.c: 389: if (*This >= 48 && *This <= 57)
 27444  013D6A  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27445  013D6E  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27446  013D72  0E2F               	movlw	47
 27447  013D74  64DF               	cpfsgt	indf2,c
 27448  013D76  D018               	goto	l11776
 27449                           
 27450                           ; BSR set to: 1
 27451  013D78  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27452  013D7C  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27453  013D80  50DF               	movf	indf2,w,c
 27454  013D82  0101               	movlb	1	; () banked
 27455  013D84  6F10               	movwf	??_Parse_Time& (0+255),b
 27456  013D86  0E3A               	movlw	58
 27457  013D88  0101               	movlb	1	; () banked
 27458  013D8A  5D10               	subwf	??_Parse_Time& (0+255),w,b
 27459  013D8C  B0D8               	btfsc	status,0,c
 27460  013D8E  D00C               	goto	l11776
 27461                           
 27462                           ; BSR set to: 1
 27463                           ;RTC.c: 390: {
 27464                           ;RTC.c: 391: temp = *This - 48;
 27465  013D90  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27466  013D94  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27467  013D98  50DF               	movf	indf2,w,c
 27468  013D9A  0FD0               	addlw	208
 27469  013D9C  0101               	movlb	1	; () banked
 27470  013D9E  6F11               	movwf	Parse_Time@temp& (0+255),b
 27471                           
 27472                           ; BSR set to: 1
 27473                           ;RTC.c: 392: This++;
 27474  013DA0  0101               	movlb	1	; () banked
 27475  013DA2  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27476  013DA4  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27477                           
 27478                           ;RTC.c: 393: }
 27479  013DA6  D002               	goto	l11780
 27480  013DA8                     l11776:
 27481                           
 27482                           ; BSR set to: 1
 27483                           ;RTC.c: 394: else
 27484                           ;RTC.c: 395: {
 27485                           ;RTC.c: 396: return 0;
 27486  013DA8  0E00               	movlw	0
 27487  013DAA  0012               	return	
 27488  013DAC                     l11780:
 27489                           
 27490                           ; BSR set to: 1
 27491                           ;RTC.c: 397: }
 27492                           ;RTC.c: 399: if(*This >= 48 && *This <= 57)
 27493  013DAC  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27494  013DB0  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27495  013DB4  0E2F               	movlw	47
 27496  013DB6  64DF               	cpfsgt	indf2,c
 27497  013DB8  D01E               	goto	l11790
 27498                           
 27499                           ; BSR set to: 1
 27500  013DBA  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27501  013DBE  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27502  013DC2  50DF               	movf	indf2,w,c
 27503  013DC4  0101               	movlb	1	; () banked
 27504  013DC6  6F10               	movwf	??_Parse_Time& (0+255),b
 27505  013DC8  0E3A               	movlw	58
 27506  013DCA  0101               	movlb	1	; () banked
 27507  013DCC  5D10               	subwf	??_Parse_Time& (0+255),w,b
 27508  013DCE  B0D8               	btfsc	status,0,c
 27509  013DD0  D012               	goto	l11790
 27510                           
 27511                           ; BSR set to: 1
 27512                           ;RTC.c: 400: {
 27513                           ;RTC.c: 401: temp *= 10;
 27514  013DD2  0E0A               	movlw	10
 27515  013DD4  0101               	movlb	1	; () banked
 27516  013DD6  0311               	mulwf	Parse_Time@temp& (0+255),b
 27517  013DD8  50F3               	movf	prodl,w,c
 27518  013DDA  0101               	movlb	1	; () banked
 27519  013DDC  6F11               	movwf	Parse_Time@temp& (0+255),b
 27520                           
 27521                           ; BSR set to: 1
 27522                           ;RTC.c: 402: temp += *This - 48;
 27523  013DDE  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27524  013DE2  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27525  013DE6  50DF               	movf	indf2,w,c
 27526  013DE8  0FD0               	addlw	208
 27527  013DEA  0101               	movlb	1	; () banked
 27528  013DEC  2711               	addwf	Parse_Time@temp& (0+255),f,b
 27529                           
 27530                           ; BSR set to: 1
 27531                           ;RTC.c: 403: This++;
 27532  013DEE  0101               	movlb	1	; () banked
 27533  013DF0  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27534  013DF2  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27535                           
 27536                           ;RTC.c: 404: }
 27537  013DF4  D00A               	goto	l1160
 27538  013DF6                     l11790:
 27539                           
 27540                           ; BSR set to: 1
 27541                           ;RTC.c: 405: else if(*This == ':')
 27542  013DF6  0E3A               	movlw	58
 27543  013DF8  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27544  013DFC  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27545  013E00  62DF               	cpfseq	indf2,c
 27546  013E02  D001               	goto	l11794
 27547  013E04  D002               	goto	l1160
 27548  013E06                     l11794:
 27549                           
 27550                           ; BSR set to: 1
 27551                           ;RTC.c: 409: else
 27552                           ;RTC.c: 410: {
 27553                           ;RTC.c: 411: return 0;
 27554  013E06  0E00               	movlw	0
 27555  013E08  0012               	return	
 27556  013E0A                     l1160:
 27557                           
 27558                           ; BSR set to: 1
 27559                           ;RTC.c: 412: }
 27560                           ;RTC.c: 413: TempTime.Hours = temp;
 27561  013E0A  C111  F114         	movff	Parse_Time@temp,Parse_Time@TempTime+2
 27562                           
 27563                           ; BSR set to: 1
 27564                           ;RTC.c: 415: if(*This == ':')
 27565  013E0E  0E3A               	movlw	58
 27566  013E10  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27567  013E14  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27568  013E18  62DF               	cpfseq	indf2,c
 27569  013E1A  D004               	goto	l11802
 27570                           
 27571                           ; BSR set to: 1
 27572                           ;RTC.c: 416: {
 27573                           ;RTC.c: 417: This++;
 27574  013E1C  0101               	movlb	1	; () banked
 27575  013E1E  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27576  013E20  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27577                           
 27578                           ;RTC.c: 418: }
 27579  013E22  D002               	goto	l11806
 27580  013E24                     l11802:
 27581                           
 27582                           ; BSR set to: 1
 27583                           ;RTC.c: 419: else
 27584                           ;RTC.c: 420: {
 27585                           ;RTC.c: 421: return 0;
 27586  013E24  0E00               	movlw	0
 27587  013E26  0012               	return	
 27588  013E28                     l11806:
 27589                           
 27590                           ; BSR set to: 1
 27591                           ;RTC.c: 422: }
 27592                           ;RTC.c: 425: if (*This >= 48 && *This <= 57)
 27593  013E28  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27594  013E2C  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27595  013E30  0E2F               	movlw	47
 27596  013E32  64DF               	cpfsgt	indf2,c
 27597  013E34  D018               	goto	l11814
 27598                           
 27599                           ; BSR set to: 1
 27600  013E36  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27601  013E3A  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27602  013E3E  50DF               	movf	indf2,w,c
 27603  013E40  0101               	movlb	1	; () banked
 27604  013E42  6F10               	movwf	??_Parse_Time& (0+255),b
 27605  013E44  0E3A               	movlw	58
 27606  013E46  0101               	movlb	1	; () banked
 27607  013E48  5D10               	subwf	??_Parse_Time& (0+255),w,b
 27608  013E4A  B0D8               	btfsc	status,0,c
 27609  013E4C  D00C               	goto	l11814
 27610                           
 27611                           ; BSR set to: 1
 27612                           ;RTC.c: 426: {
 27613                           ;RTC.c: 427: temp = *This - 48;
 27614  013E4E  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27615  013E52  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27616  013E56  50DF               	movf	indf2,w,c
 27617  013E58  0FD0               	addlw	208
 27618  013E5A  0101               	movlb	1	; () banked
 27619  013E5C  6F11               	movwf	Parse_Time@temp& (0+255),b
 27620                           
 27621                           ; BSR set to: 1
 27622                           ;RTC.c: 428: This++;
 27623  013E5E  0101               	movlb	1	; () banked
 27624  013E60  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27625  013E62  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27626                           
 27627                           ;RTC.c: 429: }
 27628  013E64  D002               	goto	l11818
 27629  013E66                     l11814:
 27630                           
 27631                           ; BSR set to: 1
 27632                           ;RTC.c: 430: else
 27633                           ;RTC.c: 431: {
 27634                           ;RTC.c: 432: return 0;
 27635  013E66  0E00               	movlw	0
 27636  013E68  0012               	return	
 27637  013E6A                     l11818:
 27638                           
 27639                           ; BSR set to: 1
 27640                           ;RTC.c: 433: }
 27641                           ;RTC.c: 435: if(*This >= 48 && *This <= 57)
 27642  013E6A  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27643  013E6E  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27644  013E72  0E2F               	movlw	47
 27645  013E74  64DF               	cpfsgt	indf2,c
 27646  013E76  D01E               	goto	l11828
 27647                           
 27648                           ; BSR set to: 1
 27649  013E78  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27650  013E7C  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27651  013E80  50DF               	movf	indf2,w,c
 27652  013E82  0101               	movlb	1	; () banked
 27653  013E84  6F10               	movwf	??_Parse_Time& (0+255),b
 27654  013E86  0E3A               	movlw	58
 27655  013E88  0101               	movlb	1	; () banked
 27656  013E8A  5D10               	subwf	??_Parse_Time& (0+255),w,b
 27657  013E8C  B0D8               	btfsc	status,0,c
 27658  013E8E  D012               	goto	l11828
 27659                           
 27660                           ; BSR set to: 1
 27661                           ;RTC.c: 436: {
 27662                           ;RTC.c: 437: temp *= 10;
 27663  013E90  0E0A               	movlw	10
 27664  013E92  0101               	movlb	1	; () banked
 27665  013E94  0311               	mulwf	Parse_Time@temp& (0+255),b
 27666  013E96  50F3               	movf	prodl,w,c
 27667  013E98  0101               	movlb	1	; () banked
 27668  013E9A  6F11               	movwf	Parse_Time@temp& (0+255),b
 27669                           
 27670                           ; BSR set to: 1
 27671                           ;RTC.c: 438: temp += *This - 48;
 27672  013E9C  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27673  013EA0  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27674  013EA4  50DF               	movf	indf2,w,c
 27675  013EA6  0FD0               	addlw	208
 27676  013EA8  0101               	movlb	1	; () banked
 27677  013EAA  2711               	addwf	Parse_Time@temp& (0+255),f,b
 27678                           
 27679                           ; BSR set to: 1
 27680                           ;RTC.c: 439: This++;
 27681  013EAC  0101               	movlb	1	; () banked
 27682  013EAE  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27683  013EB0  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27684                           
 27685                           ;RTC.c: 440: }
 27686  013EB2  D00A               	goto	l1168
 27687  013EB4                     l11828:
 27688                           
 27689                           ; BSR set to: 1
 27690                           ;RTC.c: 441: else if(*This == ':')
 27691  013EB4  0E3A               	movlw	58
 27692  013EB6  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27693  013EBA  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27694  013EBE  62DF               	cpfseq	indf2,c
 27695  013EC0  D001               	goto	l11832
 27696  013EC2  D002               	goto	l1168
 27697  013EC4                     l11832:
 27698                           
 27699                           ; BSR set to: 1
 27700                           ;RTC.c: 445: else
 27701                           ;RTC.c: 446: {
 27702                           ;RTC.c: 447: return 0;
 27703  013EC4  0E00               	movlw	0
 27704  013EC6  0012               	return	
 27705  013EC8                     l1168:
 27706                           
 27707                           ; BSR set to: 1
 27708                           ;RTC.c: 448: }
 27709                           ;RTC.c: 449: TempTime.Minutes = temp;
 27710  013EC8  C111  F113         	movff	Parse_Time@temp,Parse_Time@TempTime+1
 27711                           
 27712                           ; BSR set to: 1
 27713                           ;RTC.c: 451: if(*This == ':')
 27714  013ECC  0E3A               	movlw	58
 27715  013ECE  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27716  013ED2  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27717  013ED6  62DF               	cpfseq	indf2,c
 27718  013ED8  D004               	goto	l11840
 27719                           
 27720                           ; BSR set to: 1
 27721                           ;RTC.c: 452: {
 27722                           ;RTC.c: 453: This++;
 27723  013EDA  0101               	movlb	1	; () banked
 27724  013EDC  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27725  013EDE  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27726                           
 27727                           ;RTC.c: 454: }
 27728  013EE0  D002               	goto	l11844
 27729  013EE2                     l11840:
 27730                           
 27731                           ; BSR set to: 1
 27732                           ;RTC.c: 455: else
 27733                           ;RTC.c: 456: {
 27734                           ;RTC.c: 457: return 0;
 27735  013EE2  0E00               	movlw	0
 27736  013EE4  0012               	return	
 27737  013EE6                     l11844:
 27738                           
 27739                           ; BSR set to: 1
 27740                           ;RTC.c: 458: }
 27741                           ;RTC.c: 461: if (*This >= 48 && *This <= 57)
 27742  013EE6  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27743  013EEA  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27744  013EEE  0E2F               	movlw	47
 27745  013EF0  64DF               	cpfsgt	indf2,c
 27746  013EF2  D018               	goto	l11852
 27747                           
 27748                           ; BSR set to: 1
 27749  013EF4  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27750  013EF8  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27751  013EFC  50DF               	movf	indf2,w,c
 27752  013EFE  0101               	movlb	1	; () banked
 27753  013F00  6F10               	movwf	??_Parse_Time& (0+255),b
 27754  013F02  0E3A               	movlw	58
 27755  013F04  0101               	movlb	1	; () banked
 27756  013F06  5D10               	subwf	??_Parse_Time& (0+255),w,b
 27757  013F08  B0D8               	btfsc	status,0,c
 27758  013F0A  D00C               	goto	l11852
 27759                           
 27760                           ; BSR set to: 1
 27761                           ;RTC.c: 462: {
 27762                           ;RTC.c: 463: temp = *This - 48;
 27763  013F0C  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27764  013F10  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27765  013F14  50DF               	movf	indf2,w,c
 27766  013F16  0FD0               	addlw	208
 27767  013F18  0101               	movlb	1	; () banked
 27768  013F1A  6F11               	movwf	Parse_Time@temp& (0+255),b
 27769                           
 27770                           ; BSR set to: 1
 27771                           ;RTC.c: 464: This++;
 27772  013F1C  0101               	movlb	1	; () banked
 27773  013F1E  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27774  013F20  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27775                           
 27776                           ;RTC.c: 465: }
 27777  013F22  D002               	goto	l11856
 27778  013F24                     l11852:
 27779                           
 27780                           ; BSR set to: 1
 27781                           ;RTC.c: 466: else
 27782                           ;RTC.c: 467: {
 27783                           ;RTC.c: 468: return 0;
 27784  013F24  0E00               	movlw	0
 27785  013F26  0012               	return	
 27786  013F28                     l11856:
 27787                           
 27788                           ; BSR set to: 1
 27789                           ;RTC.c: 469: }
 27790                           ;RTC.c: 470: if (*This >= 48 && *This <= 57)
 27791  013F28  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27792  013F2C  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27793  013F30  0E2F               	movlw	47
 27794  013F32  64DF               	cpfsgt	indf2,c
 27795  013F34  D01E               	goto	l11866
 27796                           
 27797                           ; BSR set to: 1
 27798  013F36  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27799  013F3A  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27800  013F3E  50DF               	movf	indf2,w,c
 27801  013F40  0101               	movlb	1	; () banked
 27802  013F42  6F10               	movwf	??_Parse_Time& (0+255),b
 27803  013F44  0E3A               	movlw	58
 27804  013F46  0101               	movlb	1	; () banked
 27805  013F48  5D10               	subwf	??_Parse_Time& (0+255),w,b
 27806  013F4A  B0D8               	btfsc	status,0,c
 27807  013F4C  D012               	goto	l11866
 27808                           
 27809                           ; BSR set to: 1
 27810                           ;RTC.c: 471: {
 27811                           ;RTC.c: 472: temp *= 10;
 27812  013F4E  0E0A               	movlw	10
 27813  013F50  0101               	movlb	1	; () banked
 27814  013F52  0311               	mulwf	Parse_Time@temp& (0+255),b
 27815  013F54  50F3               	movf	prodl,w,c
 27816  013F56  0101               	movlb	1	; () banked
 27817  013F58  6F11               	movwf	Parse_Time@temp& (0+255),b
 27818                           
 27819                           ; BSR set to: 1
 27820                           ;RTC.c: 473: temp += *This - 48;
 27821  013F5A  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27822  013F5E  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27823  013F62  50DF               	movf	indf2,w,c
 27824  013F64  0FD0               	addlw	208
 27825  013F66  0101               	movlb	1	; () banked
 27826  013F68  2711               	addwf	Parse_Time@temp& (0+255),f,b
 27827                           
 27828                           ; BSR set to: 1
 27829                           ;RTC.c: 474: This++;
 27830  013F6A  0101               	movlb	1	; () banked
 27831  013F6C  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27832  013F6E  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27833                           
 27834                           ;RTC.c: 475: }
 27835  013F70  D002               	goto	l1176
 27836  013F72                     l11866:
 27837                           
 27838                           ; BSR set to: 1
 27839                           ;RTC.c: 476: else
 27840                           ;RTC.c: 477: {
 27841                           ;RTC.c: 478: return 0;
 27842  013F72  0E00               	movlw	0
 27843  013F74  0012               	return	
 27844  013F76                     l1176:
 27845                           
 27846                           ; BSR set to: 1
 27847                           ;RTC.c: 479: }
 27848                           ;RTC.c: 480: TempTime.Seconds = temp;
 27849  013F76  C111  F112         	movff	Parse_Time@temp,Parse_Time@TempTime
 27850                           
 27851                           ; BSR set to: 1
 27852                           ;RTC.c: 482: if(*This == ' ')
 27853  013F7A  0E20               	movlw	32
 27854  013F7C  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27855  013F80  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27856  013F84  62DF               	cpfseq	indf2,c
 27857  013F86  D003               	goto	l11874
 27858                           
 27859                           ; BSR set to: 1
 27860                           ;RTC.c: 483: {
 27861                           ;RTC.c: 484: This++;
 27862  013F88  0101               	movlb	1	; () banked
 27863  013F8A  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27864  013F8C  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27865  013F8E                     l11874:
 27866                           
 27867                           ; BSR set to: 1
 27868                           ;RTC.c: 485: }
 27869                           ;RTC.c: 486: if(*This == 'a')
 27870  013F8E  0E61               	movlw	97
 27871  013F90  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27872  013F94  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27873  013F98  62DF               	cpfseq	indf2,c
 27874  013F9A  D00E               	goto	l11886
 27875                           
 27876                           ; BSR set to: 1
 27877                           ;RTC.c: 487: {
 27878                           ;RTC.c: 488: This++;
 27879  013F9C  0101               	movlb	1	; () banked
 27880  013F9E  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27881  013FA0  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27882                           
 27883                           ; BSR set to: 1
 27884                           ;RTC.c: 489: if(*This == 'm')
 27885  013FA2  0E6D               	movlw	109
 27886  013FA4  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27887  013FA8  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27888  013FAC  62DF               	cpfseq	indf2,c
 27889  013FAE  D002               	goto	l11882
 27890                           
 27891                           ; BSR set to: 1
 27892                           ;RTC.c: 490: {
 27893                           ;RTC.c: 491: TempTime.HoursAM_PM = 0;
 27894  013FB0  0E00               	movlw	0
 27895  013FB2  D014               	goto	L37
 27896  013FB4                     l11882:
 27897                           
 27898                           ; BSR set to: 1
 27899                           ;RTC.c: 493: else
 27900                           ;RTC.c: 494: {
 27901                           ;RTC.c: 495: return 0;
 27902  013FB4  0E00               	movlw	0
 27903  013FB6  0012               	return	
 27904  013FB8                     l11886:
 27905                           
 27906                           ; BSR set to: 1
 27907                           ;RTC.c: 498: else if(*This == 'p')
 27908  013FB8  0E70               	movlw	112
 27909  013FBA  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27910  013FBE  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27911  013FC2  62DF               	cpfseq	indf2,c
 27912  013FC4  D010               	goto	l11898
 27913                           
 27914                           ; BSR set to: 1
 27915                           ;RTC.c: 499: {
 27916                           ;RTC.c: 500: This++;
 27917  013FC6  0101               	movlb	1	; () banked
 27918  013FC8  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 27919  013FCA  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 27920                           
 27921                           ; BSR set to: 1
 27922                           ;RTC.c: 501: if(*This == 'm')
 27923  013FCC  0E6D               	movlw	109
 27924  013FCE  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 27925  013FD2  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 27926  013FD6  62DF               	cpfseq	indf2,c
 27927  013FD8  D004               	goto	l11894
 27928                           
 27929                           ; BSR set to: 1
 27930                           ;RTC.c: 502: {
 27931                           ;RTC.c: 503: TempTime.HoursAM_PM = 1;
 27932  013FDA  0E01               	movlw	1
 27933  013FDC                     L37:
 27934  013FDC  0101               	movlb	1	; () banked
 27935  013FDE  6F16               	movwf	(Parse_Time@TempTime+4)& (0+255),b
 27936                           
 27937                           ;RTC.c: 504: }
 27938  013FE0  D004               	goto	l11902
 27939  013FE2                     l11894:
 27940                           
 27941                           ; BSR set to: 1
 27942                           ;RTC.c: 505: else
 27943                           ;RTC.c: 506: {
 27944                           ;RTC.c: 507: return 0;
 27945  013FE2  0E00               	movlw	0
 27946  013FE4  0012               	return	
 27947  013FE6                     l11898:
 27948                           
 27949                           ; BSR set to: 1
 27950                           ;RTC.c: 510: else
 27951                           ;RTC.c: 511: {
 27952                           ;RTC.c: 512: return 0;
 27953  013FE6  0E00               	movlw	0
 27954  013FE8  0012               	return	
 27955  013FEA                     l11902:
 27956                           
 27957                           ; BSR set to: 1
 27958                           ;RTC.c: 513: }
 27959                           ;RTC.c: 514: if(TempTime.Month > 12 || TempTime.Date > 31 || TempTime.Year > 99 || TempT
      +                          ime.Hours > 12 || TempTime.Minutes > 59 || TempTime.Seconds > 59)
 27960  013FEA  0E0D               	movlw	13
 27961  013FEC  0101               	movlb	1	; () banked
 27962  013FEE  5D19               	subwf	(Parse_Time@TempTime+7)& (0+255),w,b
 27963  013FF0  B0D8               	btfsc	status,0,c
 27964  013FF2  D018               	goto	l11914
 27965                           
 27966                           ; BSR set to: 1
 27967  013FF4  0E20               	movlw	32
 27968  013FF6  0101               	movlb	1	; () banked
 27969  013FF8  5D18               	subwf	(Parse_Time@TempTime+6)& (0+255),w,b
 27970  013FFA  B0D8               	btfsc	status,0,c
 27971  013FFC  D013               	goto	l11914
 27972                           
 27973                           ; BSR set to: 1
 27974  013FFE  0E64               	movlw	100
 27975  014000  0101               	movlb	1	; () banked
 27976  014002  5D1A               	subwf	(Parse_Time@TempTime+8)& (0+255),w,b
 27977  014004  B0D8               	btfsc	status,0,c
 27978  014006  D00E               	goto	l11914
 27979                           
 27980                           ; BSR set to: 1
 27981  014008  0E0D               	movlw	13
 27982  01400A  0101               	movlb	1	; () banked
 27983  01400C  5D14               	subwf	(Parse_Time@TempTime+2)& (0+255),w,b
 27984  01400E  B0D8               	btfsc	status,0,c
 27985  014010  D009               	goto	l11914
 27986                           
 27987                           ; BSR set to: 1
 27988  014012  0E3C               	movlw	60
 27989  014014  0101               	movlb	1	; () banked
 27990  014016  5D13               	subwf	(Parse_Time@TempTime+1)& (0+255),w,b
 27991  014018  B0D8               	btfsc	status,0,c
 27992  01401A  D004               	goto	l11914
 27993                           
 27994                           ; BSR set to: 1
 27995  01401C  0E3B               	movlw	59
 27996  01401E  0101               	movlb	1	; () banked
 27997  014020  6512               	cpfsgt	Parse_Time@TempTime& (0+255),b
 27998  014022  D002               	goto	l1186
 27999  014024                     l11914:
 28000                           
 28001                           ; BSR set to: 1
 28002                           ;RTC.c: 515: {
 28003                           ;RTC.c: 516: return 0;
 28004  014024  0E00               	movlw	0
 28005  014026  0012               	return	
 28006  014028                     l1186:
 28007                           
 28008                           ; BSR set to: 1
 28009                           ;RTC.c: 518: else
 28010                           ;RTC.c: 519: {
 28011                           ;RTC.c: 520: NowTime.Month = TempTime.Month;
 28012  014028  C119  F193         	movff	Parse_Time@TempTime+7,_NowTime+7
 28013                           
 28014                           ;RTC.c: 521: NowTime.Date = TempTime.Date;
 28015  01402C  C118  F192         	movff	Parse_Time@TempTime+6,_NowTime+6
 28016                           
 28017                           ;RTC.c: 522: NowTime.Year= TempTime.Year;
 28018  014030  C11A  F194         	movff	Parse_Time@TempTime+8,_NowTime+8
 28019                           
 28020                           ;RTC.c: 523: NowTime.Hours = TempTime.Hours;
 28021  014034  C114  F18E         	movff	Parse_Time@TempTime+2,_NowTime+2
 28022                           
 28023                           ;RTC.c: 524: NowTime.Minutes = TempTime.Minutes;
 28024  014038  C113  F18D         	movff	Parse_Time@TempTime+1,_NowTime+1
 28025                           
 28026                           ;RTC.c: 525: NowTime.Seconds= TempTime.Seconds;
 28027  01403C  C112  F18C         	movff	Parse_Time@TempTime,_NowTime
 28028                           
 28029                           ;RTC.c: 526: NowTime.HoursAM_PM = TempTime.HoursAM_PM;
 28030  014040  C116  F190         	movff	Parse_Time@TempTime+4,_NowTime+4
 28031                           
 28032                           ; BSR set to: 1
 28033                           ;RTC.c: 527: return 1;
 28034  014044  0E01               	movlw	1
 28035  014046  0012               	return	
 28036  014048                     __end_of_Parse_Time:
 28037                           	opt stack 0
 28038                           tblptru	equ	0xFF8
 28039                           tblptrh	equ	0xFF7
 28040                           tblptrl	equ	0xFF6
 28041                           tablat	equ	0xFF5
 28042                           prodh	equ	0xFF4
 28043                           prodl	equ	0xFF3
 28044                           intcon	equ	0xFF2
 28045                           postinc0	equ	0xFEE
 28046                           wreg	equ	0xFE8
 28047                           indf1	equ	0xFE7
 28048                           postinc1	equ	0xFE6
 28049                           postdec1	equ	0xFE5
 28050                           fsr1h	equ	0xFE2
 28051                           fsr1l	equ	0xFE1
 28052                           indf2	equ	0xFDF
 28053                           postinc2	equ	0xFDE
 28054                           postdec2	equ	0xFDD
 28055                           fsr2h	equ	0xFDA
 28056                           fsr2l	equ	0xFD9
 28057                           status	equ	0xFD8
 28058                           
 28059 ;; *************** function _LCDdisplayFeedback *****************
 28060 ;; Defined at:
 28061 ;;		line 252 in file "LCD.c"
 28062 ;; Parameters:    Size  Location     Type
 28063 ;;  Text            2   32[BANK1 ] PTR unsigned char 
 28064 ;;		 -> STR_312(16), STR_310(16), STR_260(16), STR_258(16), 
 28065 ;;		 -> STR_255(15), STR_203(16), STR_201(16), STR_199(13), 
 28066 ;;		 -> STR_186(14), STR_184(16), STR_182(15), STR_171(16), 
 28067 ;;		 -> Command@buf(200), STR_167(14), STR_165(16), STR_163(15), 
 28068 ;;		 -> STR_145(13), STR_143(15), STR_139(14), STR_135(16), 
 28069 ;;		 -> STR_122(16), STR_114(16), STR_112(16), STR_109(15), 
 28070 ;;		 -> STR_106(15), STR_103(14), STR_100(16), STR_88(16), 
 28071 ;;		 -> STR_81(16), STR_79(15), STR_76(14), STR_73(16), 
 28072 ;;		 -> STR_57(12), STR_55(9), STR_52(8), STR_49(13), 
 28073 ;;		 -> STR_46(9), STR_43(8), STR_40(13), 
 28074 ;; Auto vars:     Size  Location     Type
 28075 ;;		None
 28076 ;; Return value:  Size  Location     Type
 28077 ;;		None               void
 28078 ;; Registers used:
 28079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28080 ;; Tracked objects:
 28081 ;;		On entry : 0/0
 28082 ;;		On exit  : 0/0
 28083 ;;		Unchanged: 0/0
 28084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28085 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28088 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28089 ;;Total ram usage:        2 bytes
 28090 ;; Hardware stack levels used:    1
 28091 ;; Hardware stack levels required when called:   10
 28092 ;; This function calls:
 28093 ;;		_ClearLCD
 28094 ;;		_LCDPrintString
 28095 ;;		_SetLCDcursor
 28096 ;; This function is called by:
 28097 ;;		_Command
 28098 ;; This function uses a non-reentrant model
 28099 ;;
 28100                           
 28101                           	psect	text64
 28102  0178C4                     __ptext64:
 28103                           	opt stack 0
 28104  0178C4                     _LCDdisplayFeedback:
 28105                           	opt stack 18
 28106                           
 28107                           ;LCD.c: 254: ClearLCD();
 28108                           
 28109                           ; BSR set to: 1
 28110                           ;incstack = 0
 28111  0178C4  ECF5  F0BD         	call	_ClearLCD	;wreg free
 28112                           
 28113                           ;LCD.c: 255: SetLCDcursor(1, 0);
 28114  0178C8  0E00               	movlw	0
 28115  0178CA  0101               	movlb	1	; () banked
 28116  0178CC  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 28117  0178CE  0E01               	movlw	1
 28118  0178D0  ECDA  F0BC         	call	_SetLCDcursor
 28119                           
 28120                           ;LCD.c: 256: LCDPrintString(Text);
 28121  0178D4  0101               	movlb	1	; () banked
 28122  0178D6  C121  F11D         	movff	LCDdisplayFeedback@Text+1,LCDPrintString@Text+1
 28123  0178DA  0101               	movlb	1	; () banked
 28124  0178DC  C120  F11C         	movff	LCDdisplayFeedback@Text,LCDPrintString@Text
 28125  0178E0  ECD2  F0B8         	call	_LCDPrintString	;wreg free
 28126                           
 28127                           ;LCD.c: 257: LCDwait = 1;
 28128  0178E4  0E01               	movlw	1
 28129  0178E6  0101               	movlb	1	; () banked
 28130  0178E8  6F95               	movwf	_LCDwait& (0+255),b
 28131                           
 28132                           ; BSR set to: 1
 28133                           ;LCD.c: 258: LCDclearCount =0;
 28134  0178EA  0E00               	movlw	0
 28135  0178EC  0101               	movlb	1	; () banked
 28136  0178EE  6FEE               	movwf	_LCDclearCount& (0+255),b
 28137  0178F0  0E00               	movlw	0
 28138  0178F2  0101               	movlb	1	; () banked
 28139  0178F4  6FEF               	movwf	(_LCDclearCount+1)& (0+255),b
 28140  0178F6  0E00               	movlw	0
 28141  0178F8  0101               	movlb	1	; () banked
 28142  0178FA  6FF0               	movwf	(_LCDclearCount+2)& (0+255),b
 28143  0178FC  0E00               	movlw	0
 28144  0178FE  0101               	movlb	1	; () banked
 28145  017900  6FF1               	movwf	(_LCDclearCount+3)& (0+255),b
 28146                           
 28147                           ; BSR set to: 1
 28148  017902  0012               	return	
 28149  017904                     __end_of_LCDdisplayFeedback:
 28150                           	opt stack 0
 28151                           tblptru	equ	0xFF8
 28152                           tblptrh	equ	0xFF7
 28153                           tblptrl	equ	0xFF6
 28154                           tablat	equ	0xFF5
 28155                           prodh	equ	0xFF4
 28156                           prodl	equ	0xFF3
 28157                           intcon	equ	0xFF2
 28158                           postinc0	equ	0xFEE
 28159                           wreg	equ	0xFE8
 28160                           indf1	equ	0xFE7
 28161                           postinc1	equ	0xFE6
 28162                           postdec1	equ	0xFE5
 28163                           fsr1h	equ	0xFE2
 28164                           fsr1l	equ	0xFE1
 28165                           indf2	equ	0xFDF
 28166                           postinc2	equ	0xFDE
 28167                           postdec2	equ	0xFDD
 28168                           fsr2h	equ	0xFDA
 28169                           fsr2l	equ	0xFD9
 28170                           status	equ	0xFD8
 28171                           
 28172 ;; *************** function _SetLCDcursor *****************
 28173 ;; Defined at:
 28174 ;;		line 192 in file "LCD.c"
 28175 ;; Parameters:    Size  Location     Type
 28176 ;;  Row             1    wreg     unsigned char 
 28177 ;;  Col             1   28[BANK1 ] unsigned char 
 28178 ;; Auto vars:     Size  Location     Type
 28179 ;;  Row             1   29[BANK1 ] unsigned char 
 28180 ;;  address         1   30[BANK1 ] unsigned char 
 28181 ;; Return value:  Size  Location     Type
 28182 ;;		None               void
 28183 ;; Registers used:
 28184 ;;		wreg, status,2, status,0, cstack
 28185 ;; Tracked objects:
 28186 ;;		On entry : 0/0
 28187 ;;		On exit  : 0/0
 28188 ;;		Unchanged: 0/0
 28189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28190 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28191 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28193 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 28194 ;;Total ram usage:        3 bytes
 28195 ;; Hardware stack levels used:    1
 28196 ;; Hardware stack levels required when called:    9
 28197 ;; This function calls:
 28198 ;;		_SendLCDbyte
 28199 ;; This function is called by:
 28200 ;;		_main
 28201 ;;		_Command
 28202 ;;		_LCDdisplayFeedback
 28203 ;;		_LCDScreenUpdate
 28204 ;; This function uses a non-reentrant model
 28205 ;;
 28206                           
 28207                           	psect	text65
 28208  0179B4                     __ptext65:
 28209                           	opt stack 0
 28210  0179B4                     _SetLCDcursor:
 28211                           	opt stack 20
 28212                           
 28213                           ; BSR set to: 1
 28214                           ;incstack = 0
 28215                           ;SetLCDcursor@Row stored from wreg
 28216  0179B4  0101               	movlb	1	; () banked
 28217  0179B6  6F1D               	movwf	SetLCDcursor@Row& (0+255),b
 28218                           
 28219                           ; BSR set to: 1
 28220                           ;LCD.c: 194: char address;
 28221                           ;LCD.c: 197: if (Row == 0)
 28222  0179B8  0101               	movlb	1	; () banked
 28223  0179BA  671D               	tstfsz	SetLCDcursor@Row& (0+255),b
 28224  0179BC  D002               	goto	l10186
 28225                           
 28226                           ; BSR set to: 1
 28227                           ;LCD.c: 198: {
 28228                           ;LCD.c: 199: address = 0;
 28229  0179BE  0E00               	movlw	0
 28230  0179C0  D001               	goto	L38
 28231  0179C2                     l10186:
 28232                           
 28233                           ; BSR set to: 1
 28234                           ;LCD.c: 201: else
 28235                           ;LCD.c: 202: {
 28236                           ;LCD.c: 203: address = 0x40;
 28237  0179C2  0E40               	movlw	64
 28238  0179C4                     L38:
 28239  0179C4  0101               	movlb	1	; () banked
 28240  0179C6  6F1E               	movwf	SetLCDcursor@address& (0+255),b
 28241                           
 28242                           ; BSR set to: 1
 28243                           ;LCD.c: 204: }
 28244                           ;LCD.c: 206: address |= Col;
 28245                           
 28246                           ; BSR set to: 1
 28247  0179C8  0101               	movlb	1	; () banked
 28248  0179CA  511C               	movf	SetLCDcursor@Col& (0+255),w,b
 28249  0179CC  0101               	movlb	1	; () banked
 28250  0179CE  131E               	iorwf	SetLCDcursor@address& (0+255),f,b
 28251                           
 28252                           ; BSR set to: 1
 28253                           ;LCD.c: 207: if(!LCDwait)
 28254  0179D0  0101               	movlb	1	; () banked
 28255  0179D2  6795               	tstfsz	_LCDwait& (0+255),b
 28256  0179D4  0012               	return	
 28257                           
 28258                           ; BSR set to: 1
 28259                           ;LCD.c: 208: {
 28260                           ;LCD.c: 209: SendLCDbyte(0x80 | address, 0);
 28261  0179D6  0E00               	movlw	0
 28262  0179D8  0101               	movlb	1	; () banked
 28263  0179DA  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
 28264  0179DC  0101               	movlb	1	; () banked
 28265  0179DE  511E               	movf	SetLCDcursor@address& (0+255),w,b
 28266  0179E0  0980               	iorlw	128
 28267  0179E2  EC8A  F0B0         	call	_SendLCDbyte
 28268  0179E6  0012               	return	
 28269  0179E8                     __end_of_SetLCDcursor:
 28270                           	opt stack 0
 28271                           tblptru	equ	0xFF8
 28272                           tblptrh	equ	0xFF7
 28273                           tblptrl	equ	0xFF6
 28274                           tablat	equ	0xFF5
 28275                           prodh	equ	0xFF4
 28276                           prodl	equ	0xFF3
 28277                           intcon	equ	0xFF2
 28278                           postinc0	equ	0xFEE
 28279                           wreg	equ	0xFE8
 28280                           indf1	equ	0xFE7
 28281                           postinc1	equ	0xFE6
 28282                           postdec1	equ	0xFE5
 28283                           fsr1h	equ	0xFE2
 28284                           fsr1l	equ	0xFE1
 28285                           indf2	equ	0xFDF
 28286                           postinc2	equ	0xFDE
 28287                           postdec2	equ	0xFDD
 28288                           fsr2h	equ	0xFDA
 28289                           fsr2l	equ	0xFD9
 28290                           status	equ	0xFD8
 28291                           
 28292 ;; *************** function _LCDPrintString *****************
 28293 ;; Defined at:
 28294 ;;		line 233 in file "LCD.c"
 28295 ;; Parameters:    Size  Location     Type
 28296 ;;  Text            2   28[BANK1 ] PTR unsigned char 
 28297 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 28298 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 28299 ;;		 -> Scroll_2(16), Scroll_1(16), STR_312(16), STR_310(16), 
 28300 ;;		 -> STR_294(17), STR_281(10), STR_260(16), STR_258(16), 
 28301 ;;		 -> STR_255(15), STR_227(17), STR_223(17), STR_203(16), 
 28302 ;;		 -> STR_201(16), STR_199(13), STR_186(14), STR_184(16), 
 28303 ;;		 -> STR_182(15), STR_171(16), Command@buf(200), STR_167(14), 
 28304 ;;		 -> STR_165(16), STR_163(15), STR_145(13), STR_143(15), 
 28305 ;;		 -> STR_139(14), STR_135(16), STR_122(16), STR_114(16), 
 28306 ;;		 -> STR_112(16), STR_109(15), STR_106(15), STR_103(14), 
 28307 ;;		 -> STR_100(16), STR_88(16), STR_81(16), STR_79(15), 
 28308 ;;		 -> STR_76(14), STR_73(16), STR_57(12), STR_55(9), 
 28309 ;;		 -> STR_52(8), STR_49(13), STR_46(9), STR_43(8), 
 28310 ;;		 -> STR_40(13), STR_18(10), STR_17(17), STR_16(16), 
 28311 ;;		 -> STR_15(15), STR_14(14), STR_13(13), STR_12(12), 
 28312 ;;		 -> STR_11(11), STR_10(10), STR_8(9), low_isr@LCD_TEMP(16), 
 28313 ;; Auto vars:     Size  Location     Type
 28314 ;;  c               2   30[BANK1 ] PTR unsigned char 
 28315 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 28316 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 28317 ;;		 -> Scroll_2(16), Scroll_1(16), STR_312(16), STR_310(16), 
 28318 ;;		 -> STR_294(17), STR_281(10), STR_260(16), STR_258(16), 
 28319 ;;		 -> STR_255(15), STR_227(17), STR_223(17), STR_203(16), 
 28320 ;;		 -> STR_201(16), STR_199(13), STR_186(14), STR_184(16), 
 28321 ;;		 -> STR_182(15), STR_171(16), Command@buf(200), STR_167(14), 
 28322 ;;		 -> STR_165(16), STR_163(15), STR_145(13), STR_143(15), 
 28323 ;;		 -> STR_139(14), STR_135(16), STR_122(16), STR_114(16), 
 28324 ;;		 -> STR_112(16), STR_109(15), STR_106(15), STR_103(14), 
 28325 ;;		 -> STR_100(16), STR_88(16), STR_81(16), STR_79(15), 
 28326 ;;		 -> STR_76(14), STR_73(16), STR_57(12), STR_55(9), 
 28327 ;;		 -> STR_52(8), STR_49(13), STR_46(9), STR_43(8), 
 28328 ;;		 -> STR_40(13), STR_18(10), STR_17(17), STR_16(16), 
 28329 ;;		 -> STR_15(15), STR_14(14), STR_13(13), STR_12(12), 
 28330 ;;		 -> STR_11(11), STR_10(10), STR_8(9), low_isr@LCD_TEMP(16), 
 28331 ;; Return value:  Size  Location     Type
 28332 ;;		None               void
 28333 ;; Registers used:
 28334 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28335 ;; Tracked objects:
 28336 ;;		On entry : 0/0
 28337 ;;		On exit  : 0/0
 28338 ;;		Unchanged: 0/0
 28339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28340 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28341 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28343 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 28344 ;;Total ram usage:        4 bytes
 28345 ;; Hardware stack levels used:    1
 28346 ;; Hardware stack levels required when called:    9
 28347 ;; This function calls:
 28348 ;;		_SendLCDbyte
 28349 ;; This function is called by:
 28350 ;;		_main
 28351 ;;		_Command
 28352 ;;		_LCDdisplayFeedback
 28353 ;;		_LCDScreenUpdate
 28354 ;; This function uses a non-reentrant model
 28355 ;;
 28356                           
 28357                           	psect	text66
 28358  0171A4                     __ptext66:
 28359                           	opt stack 0
 28360  0171A4                     _LCDPrintString:
 28361                           	opt stack 19
 28362                           
 28363                           ;LCD.c: 235: unsigned char *c;
 28364                           ;LCD.c: 237: c = Text;
 28365                           
 28366                           ;incstack = 0
 28367  0171A4  0101               	movlb	1	; () banked
 28368  0171A6  C11D  F11F         	movff	LCDPrintString@Text+1,LCDPrintString@c+1
 28369  0171AA  0101               	movlb	1	; () banked
 28370  0171AC  C11C  F11E         	movff	LCDPrintString@Text,LCDPrintString@c
 28371                           
 28372                           ;LCD.c: 239: while ((c != 0) && (*c != 0))
 28373  0171B0  D01B               	goto	l10200
 28374  0171B2                     l10196:
 28375                           
 28376                           ;LCD.c: 240: {
 28377                           ;LCD.c: 241: SendLCDbyte(*c, 1);
 28378  0171B2  0E01               	movlw	1
 28379  0171B4  0101               	movlb	1	; () banked
 28380  0171B6  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
 28381  0171B8  0101               	movlb	1	; () banked
 28382  0171BA  C11E  FFF6         	movff	LCDPrintString@c,tblptrl
 28383  0171BE  0101               	movlb	1	; () banked
 28384  0171C0  C11F  FFF7         	movff	LCDPrintString@c+1,tblptrh
 28385  0171C4  0E00               	movlw	low (__mediumconst shr (0+16))
 28386  0171C6  6EF8               	movwf	tblptru,c
 28387  0171C8  0E0C               	movlw	(high __ramtop+-1)
 28388  0171CA  64F7               	cpfsgt	tblptrh,c
 28389  0171CC  D003               	bra	u12757
 28390  0171CE  0008               	tblrd		*
 28391  0171D0  50F5               	movf	tablat,w,c
 28392  0171D2  D005               	bra	u12750
 28393  0171D4                     u12757:
 28394  0171D4  CFF6 FFE1          	movff	tblptrl,fsr1l
 28395  0171D8  CFF7 FFE2          	movff	tblptrh,fsr1h
 28396  0171DC  50E7               	movf	indf1,w,c
 28397  0171DE                     u12750:
 28398  0171DE  EC8A  F0B0         	call	_SendLCDbyte
 28399                           
 28400                           ;LCD.c: 242: c++;
 28401  0171E2  0101               	movlb	1	; () banked
 28402  0171E4  4B1E               	infsnz	LCDPrintString@c& (0+255),f,b
 28403  0171E6  2B1F               	incf	(LCDPrintString@c+1)& (0+255),f,b
 28404  0171E8                     l10200:
 28405                           
 28406                           ; BSR set to: 1
 28407  0171E8  0101               	movlb	1	; () banked
 28408  0171EA  511F               	movf	(LCDPrintString@c+1)& (0+255),w,b
 28409  0171EC  111E               	iorwf	LCDPrintString@c& (0+255),w,b
 28410  0171EE  B4D8               	btfsc	status,2,c
 28411  0171F0  0012               	return	
 28412                           
 28413                           ; BSR set to: 1
 28414  0171F2  0101               	movlb	1	; () banked
 28415  0171F4  C11E  FFF6         	movff	LCDPrintString@c,tblptrl
 28416  0171F8  0101               	movlb	1	; () banked
 28417  0171FA  C11F  FFF7         	movff	LCDPrintString@c+1,tblptrh
 28418  0171FE  0E00               	movlw	low (__mediumconst shr (0+16))
 28419  017200  6EF8               	movwf	tblptru,c
 28420  017202  0E0C               	movlw	(high __ramtop+-1)
 28421  017204  64F7               	cpfsgt	tblptrh,c
 28422  017206  D003               	bra	u12777
 28423  017208  0008               	tblrd		*
 28424  01720A  50F5               	movf	tablat,w,c
 28425  01720C  D005               	bra	u12770
 28426  01720E                     u12777:
 28427  01720E  CFF6 FFE1          	movff	tblptrl,fsr1l
 28428  017212  CFF7 FFE2          	movff	tblptrh,fsr1h
 28429  017216  50E7               	movf	indf1,w,c
 28430  017218                     u12770:
 28431  017218  0900               	iorlw	0
 28432  01721A  B4D8               	btfsc	status,2,c
 28433  01721C  0012               	return	
 28434  01721E  D7C9               	goto	l10196
 28435  017220                     __end_of_LCDPrintString:
 28436                           	opt stack 0
 28437                           tblptru	equ	0xFF8
 28438                           tblptrh	equ	0xFF7
 28439                           tblptrl	equ	0xFF6
 28440                           tablat	equ	0xFF5
 28441                           prodh	equ	0xFF4
 28442                           prodl	equ	0xFF3
 28443                           intcon	equ	0xFF2
 28444                           postinc0	equ	0xFEE
 28445                           wreg	equ	0xFE8
 28446                           indf1	equ	0xFE7
 28447                           postinc1	equ	0xFE6
 28448                           postdec1	equ	0xFE5
 28449                           fsr1h	equ	0xFE2
 28450                           fsr1l	equ	0xFE1
 28451                           indf2	equ	0xFDF
 28452                           postinc2	equ	0xFDE
 28453                           postdec2	equ	0xFDD
 28454                           fsr2h	equ	0xFDA
 28455                           fsr2l	equ	0xFD9
 28456                           status	equ	0xFD8
 28457                           
 28458 ;; *************** function _ClearLCD *****************
 28459 ;; Defined at:
 28460 ;;		line 219 in file "LCD.c"
 28461 ;; Parameters:    Size  Location     Type
 28462 ;;		None
 28463 ;; Auto vars:     Size  Location     Type
 28464 ;;		None
 28465 ;; Return value:  Size  Location     Type
 28466 ;;		None               void
 28467 ;; Registers used:
 28468 ;;		wreg, status,2, status,0, cstack
 28469 ;; Tracked objects:
 28470 ;;		On entry : 0/0
 28471 ;;		On exit  : 0/0
 28472 ;;		Unchanged: 0/0
 28473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28478 ;;Total ram usage:        0 bytes
 28479 ;; Hardware stack levels used:    1
 28480 ;; Hardware stack levels required when called:    9
 28481 ;; This function calls:
 28482 ;;		_SendLCDbyte
 28483 ;; This function is called by:
 28484 ;;		_main
 28485 ;;		_init_LCD
 28486 ;;		_LCDdisplayFeedback
 28487 ;;		_LCDScreenUpdate
 28488 ;; This function uses a non-reentrant model
 28489 ;;
 28490                           
 28491                           	psect	text67
 28492  017BEA                     __ptext67:
 28493                           	opt stack 0
 28494  017BEA                     _ClearLCD:
 28495                           	opt stack 19
 28496                           
 28497                           ;LCD.c: 224: SendLCDbyte(0x01, 0);
 28498                           
 28499                           ;incstack = 0
 28500  017BEA  0E00               	movlw	0
 28501  017BEC  0101               	movlb	1	; () banked
 28502  017BEE  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
 28503  017BF0  0E01               	movlw	1
 28504  017BF2  EC8A  F0B0         	call	_SendLCDbyte
 28505                           
 28506                           ;LCD.c: 225: SendLCDbyte(0x02, 0);
 28507  017BF6  0E00               	movlw	0
 28508  017BF8  0101               	movlb	1	; () banked
 28509  017BFA  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
 28510  017BFC  0E02               	movlw	2
 28511  017BFE  EC8A  F0B0         	call	_SendLCDbyte
 28512  017C02  0012               	return	
 28513  017C04                     __end_of_ClearLCD:
 28514                           	opt stack 0
 28515                           tblptru	equ	0xFF8
 28516                           tblptrh	equ	0xFF7
 28517                           tblptrl	equ	0xFF6
 28518                           tablat	equ	0xFF5
 28519                           prodh	equ	0xFF4
 28520                           prodl	equ	0xFF3
 28521                           intcon	equ	0xFF2
 28522                           postinc0	equ	0xFEE
 28523                           wreg	equ	0xFE8
 28524                           indf1	equ	0xFE7
 28525                           postinc1	equ	0xFE6
 28526                           postdec1	equ	0xFE5
 28527                           fsr1h	equ	0xFE2
 28528                           fsr1l	equ	0xFE1
 28529                           indf2	equ	0xFDF
 28530                           postinc2	equ	0xFDE
 28531                           postdec2	equ	0xFDD
 28532                           fsr2h	equ	0xFDA
 28533                           fsr2l	equ	0xFD9
 28534                           status	equ	0xFD8
 28535                           
 28536 ;; *************** function _SendLCDbyte *****************
 28537 ;; Defined at:
 28538 ;;		line 106 in file "LCD.c"
 28539 ;; Parameters:    Size  Location     Type
 28540 ;;  data            1    wreg     unsigned char 
 28541 ;;  isCommand       1   24[BANK1 ] unsigned char 
 28542 ;; Auto vars:     Size  Location     Type
 28543 ;;  data            1   25[BANK1 ] unsigned char 
 28544 ;;  LSB_nibble      1   27[BANK1 ] unsigned char 
 28545 ;;  MSB_nibble      1   26[BANK1 ] unsigned char 
 28546 ;; Return value:  Size  Location     Type
 28547 ;;		None               void
 28548 ;; Registers used:
 28549 ;;		wreg, status,2, status,0, cstack
 28550 ;; Tracked objects:
 28551 ;;		On entry : 0/0
 28552 ;;		On exit  : 0/0
 28553 ;;		Unchanged: 0/0
 28554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28555 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28556 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 28557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28558 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 28559 ;;Total ram usage:        4 bytes
 28560 ;; Hardware stack levels used:    1
 28561 ;; Hardware stack levels required when called:    8
 28562 ;; This function calls:
 28563 ;;		_PulseEnablePin
 28564 ;;		_delayUS
 28565 ;; This function is called by:
 28566 ;;		_init_LCD
 28567 ;;		_SetLCDcursor
 28568 ;;		_ClearLCD
 28569 ;;		_LCDPrintString
 28570 ;;		_LCDPrintChar
 28571 ;; This function uses a non-reentrant model
 28572 ;;
 28573                           
 28574                           	psect	text68
 28575  016114                     __ptext68:
 28576                           	opt stack 0
 28577  016114                     _SendLCDbyte:
 28578                           	opt stack 20
 28579                           
 28580                           ;incstack = 0
 28581                           ;SendLCDbyte@data stored from wreg
 28582  016114  0101               	movlb	1	; () banked
 28583  016116  6F19               	movwf	SendLCDbyte@data& (0+255),b
 28584                           
 28585                           ; BSR set to: 1
 28586                           ;LCD.c: 108: unsigned char MSB_nibble=0;
 28587  016118  0E00               	movlw	0
 28588  01611A  0101               	movlb	1	; () banked
 28589  01611C  6F1A               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 28590                           
 28591                           ;LCD.c: 109: unsigned char LSB_nibble=0;
 28592  01611E  0E00               	movlw	0
 28593  016120  0101               	movlb	1	; () banked
 28594  016122  6F1B               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 28595                           
 28596                           ; BSR set to: 1
 28597                           ;LCD.c: 111: LATA &= ~(0b00001000+0b00010000+0b00100000);
 28598  016124  0EC7               	movlw	199
 28599  016126  1689               	andwf	3977,f,c	;volatile
 28600                           
 28601                           ; BSR set to: 1
 28602                           ;LCD.c: 112: LATE &= ~0b00000001;
 28603  016128  908D               	bcf	3981,0,c	;volatile
 28604                           
 28605                           ; BSR set to: 1
 28606                           ;LCD.c: 113: LATD &= ~(0b10000000 + 0b00100000);
 28607  01612A  0E5F               	movlw	95
 28608  01612C  168C               	andwf	3980,f,c	;volatile
 28609                           
 28610                           ; BSR set to: 1
 28611                           ;LCD.c: 114: delayUS(10);
 28612  01612E  0E0A               	movlw	10
 28613  016130  0101               	movlb	1	; () banked
 28614  016132  6F0E               	movwf	delayUS@US& (0+255),b
 28615  016134  0E00               	movlw	0
 28616  016136  0101               	movlb	1	; () banked
 28617  016138  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 28618  01613A  0E00               	movlw	0
 28619  01613C  0101               	movlb	1	; () banked
 28620  01613E  6F10               	movwf	(delayUS@US+2)& (0+255),b
 28621  016140  0E00               	movlw	0
 28622  016142  0101               	movlb	1	; () banked
 28623  016144  6F11               	movwf	(delayUS@US+3)& (0+255),b
 28624  016146  EC10  F0B9         	call	_delayUS	;wreg free
 28625                           
 28626                           ;LCD.c: 115: MSB_nibble = (data & 0xF0)>>4;
 28627  01614A  0101               	movlb	1	; () banked
 28628  01614C  3919               	swapf	SendLCDbyte@data& (0+255),w,b
 28629  01614E  0B0F               	andlw	15
 28630  016150  0B0F               	andlw	15
 28631  016152  0101               	movlb	1	; () banked
 28632  016154  6F1A               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 28633                           
 28634                           ; BSR set to: 1
 28635                           ;LCD.c: 116: LSB_nibble = (data & 0x0F);
 28636  016156  0101               	movlb	1	; () banked
 28637  016158  5119               	movf	SendLCDbyte@data& (0+255),w,b
 28638  01615A  0B0F               	andlw	15
 28639  01615C  0101               	movlb	1	; () banked
 28640  01615E  6F1B               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 28641                           
 28642                           ; BSR set to: 1
 28643                           ;LCD.c: 117: if(!LCDwait)
 28644  016160  0101               	movlb	1	; () banked
 28645  016162  6795               	tstfsz	_LCDwait& (0+255),b
 28646  016164  D035               	goto	l9994
 28647                           
 28648                           ; BSR set to: 1
 28649                           ;LCD.c: 118: {
 28650                           ;LCD.c: 119: if(isCommand)
 28651  016166  0101               	movlb	1	; () banked
 28652  016168  5118               	movf	SendLCDbyte@isCommand& (0+255),w,b
 28653  01616A  B4D8               	btfsc	status,2,c
 28654  01616C  D002               	goto	l9950
 28655                           
 28656                           ; BSR set to: 1
 28657                           ;LCD.c: 120: {
 28658                           ;LCD.c: 121: LATD |= (0b00100000);
 28659  01616E  8A8C               	bsf	3980,5,c	;volatile
 28660                           
 28661                           ;LCD.c: 122: }
 28662  016170  D001               	goto	l9952
 28663  016172                     l9950:
 28664                           
 28665                           ; BSR set to: 1
 28666                           ;LCD.c: 123: else
 28667                           ;LCD.c: 124: {
 28668                           ;LCD.c: 125: LATD &= ~(0b00100000);
 28669  016172  9A8C               	bcf	3980,5,c	;volatile
 28670  016174                     l9952:
 28671                           
 28672                           ; BSR set to: 1
 28673                           ;LCD.c: 126: }
 28674                           ;LCD.c: 127: if(MSB_nibble&0b1000)
 28675  016174  0101               	movlb	1	; () banked
 28676  016176  B71A               	btfsc	SendLCDbyte@MSB_nibble& (0+255),3,b
 28677                           
 28678                           ; BSR set to: 1
 28679                           ;LCD.c: 128: {
 28680                           ;LCD.c: 129: LATA |= 0b00001000;
 28681  016178  8689               	bsf	3977,3,c	;volatile
 28682                           
 28683                           ; BSR set to: 1
 28684                           ;LCD.c: 130: }
 28685                           ;LCD.c: 131: if(MSB_nibble&0b0100)
 28686                           
 28687                           ; BSR set to: 1
 28688  01617A  0101               	movlb	1	; () banked
 28689  01617C  B51A               	btfsc	SendLCDbyte@MSB_nibble& (0+255),2,b
 28690                           
 28691                           ; BSR set to: 1
 28692                           ;LCD.c: 132: {
 28693                           ;LCD.c: 133: LATA |= 0b00010000;
 28694  01617E  8889               	bsf	3977,4,c	;volatile
 28695                           
 28696                           ; BSR set to: 1
 28697                           ;LCD.c: 134: }
 28698                           ;LCD.c: 135: if(MSB_nibble&0b0010)
 28699                           
 28700                           ; BSR set to: 1
 28701  016180  0101               	movlb	1	; () banked
 28702  016182  B31A               	btfsc	SendLCDbyte@MSB_nibble& (0+255),1,b
 28703                           
 28704                           ; BSR set to: 1
 28705                           ;LCD.c: 136: {
 28706                           ;LCD.c: 137: LATA |= 0b00100000;
 28707  016184  8A89               	bsf	3977,5,c	;volatile
 28708                           
 28709                           ; BSR set to: 1
 28710                           ;LCD.c: 138: }
 28711                           ;LCD.c: 139: if(MSB_nibble&0b0001)
 28712                           
 28713                           ; BSR set to: 1
 28714  016186  0101               	movlb	1	; () banked
 28715  016188  B11A               	btfsc	SendLCDbyte@MSB_nibble& (0+255),0,b
 28716                           
 28717                           ; BSR set to: 1
 28718                           ;LCD.c: 140: {
 28719                           ;LCD.c: 141: LATE |= 0b00000001;
 28720  01618A  808D               	bsf	3981,0,c	;volatile
 28721                           
 28722                           ; BSR set to: 1
 28723                           ;LCD.c: 142: }
 28724                           ;LCD.c: 143: PulseEnablePin();
 28725                           
 28726                           ; BSR set to: 1
 28727  01618C  EC82  F0BC         	call	_PulseEnablePin	;wreg free
 28728                           
 28729                           ;LCD.c: 144: LATA &= ~(0b00001000+0b00010000+0b00100000);
 28730  016190  0EC7               	movlw	199
 28731  016192  1689               	andwf	3977,f,c	;volatile
 28732                           
 28733                           ;LCD.c: 145: LATE &= ~0b00000001;
 28734  016194  908D               	bcf	3981,0,c	;volatile
 28735                           
 28736                           ;LCD.c: 146: delayUS(10);
 28737  016196  0E0A               	movlw	10
 28738  016198  0101               	movlb	1	; () banked
 28739  01619A  6F0E               	movwf	delayUS@US& (0+255),b
 28740  01619C  0E00               	movlw	0
 28741  01619E  0101               	movlb	1	; () banked
 28742  0161A0  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 28743  0161A2  0E00               	movlw	0
 28744  0161A4  0101               	movlb	1	; () banked
 28745  0161A6  6F10               	movwf	(delayUS@US+2)& (0+255),b
 28746  0161A8  0E00               	movlw	0
 28747  0161AA  0101               	movlb	1	; () banked
 28748  0161AC  6F11               	movwf	(delayUS@US+3)& (0+255),b
 28749  0161AE  EC10  F0B9         	call	_delayUS	;wreg free
 28750                           
 28751                           ;LCD.c: 147: if(LSB_nibble&0b1000)
 28752  0161B2  0101               	movlb	1	; () banked
 28753  0161B4  B71B               	btfsc	SendLCDbyte@LSB_nibble& (0+255),3,b
 28754                           
 28755                           ; BSR set to: 1
 28756                           ;LCD.c: 148: {
 28757                           ;LCD.c: 149: LATA |= 0b00001000;
 28758  0161B6  8689               	bsf	3977,3,c	;volatile
 28759                           
 28760                           ; BSR set to: 1
 28761                           ;LCD.c: 150: }
 28762                           ;LCD.c: 151: if(LSB_nibble&0b0100)
 28763                           
 28764                           ; BSR set to: 1
 28765  0161B8  0101               	movlb	1	; () banked
 28766  0161BA  B51B               	btfsc	SendLCDbyte@LSB_nibble& (0+255),2,b
 28767                           
 28768                           ; BSR set to: 1
 28769                           ;LCD.c: 152: {
 28770                           ;LCD.c: 153: LATA |= 0b00010000;
 28771  0161BC  8889               	bsf	3977,4,c	;volatile
 28772                           
 28773                           ; BSR set to: 1
 28774                           ;LCD.c: 154: }
 28775                           ;LCD.c: 155: if(LSB_nibble&0b0010)
 28776                           
 28777                           ; BSR set to: 1
 28778  0161BE  0101               	movlb	1	; () banked
 28779  0161C0  B31B               	btfsc	SendLCDbyte@LSB_nibble& (0+255),1,b
 28780                           
 28781                           ; BSR set to: 1
 28782                           ;LCD.c: 156: {
 28783                           ;LCD.c: 157: LATA |= 0b00100000;
 28784  0161C2  8A89               	bsf	3977,5,c	;volatile
 28785                           
 28786                           ; BSR set to: 1
 28787                           ;LCD.c: 158: }
 28788                           ;LCD.c: 159: if(LSB_nibble&0b0001)
 28789                           
 28790                           ; BSR set to: 1
 28791  0161C4  0101               	movlb	1	; () banked
 28792  0161C6  B11B               	btfsc	SendLCDbyte@LSB_nibble& (0+255),0,b
 28793                           
 28794                           ; BSR set to: 1
 28795                           ;LCD.c: 160: {
 28796                           ;LCD.c: 161: LATE |= 0b00000001;
 28797  0161C8  808D               	bsf	3981,0,c	;volatile
 28798                           
 28799                           ; BSR set to: 1
 28800                           ;LCD.c: 162: }
 28801                           ;LCD.c: 163: PulseEnablePin();
 28802                           
 28803                           ; BSR set to: 1
 28804  0161CA  EC82  F0BC         	call	_PulseEnablePin	;wreg free
 28805                           
 28806                           ;LCD.c: 164: }
 28807  0161CE  0012               	return	
 28808  0161D0                     l9994:
 28809                           
 28810                           ;LCD.c: 165: else
 28811                           ;LCD.c: 166: {
 28812                           ;LCD.c: 167: delayUS(20);
 28813  0161D0  0E14               	movlw	20
 28814  0161D2  0101               	movlb	1	; () banked
 28815  0161D4  6F0E               	movwf	delayUS@US& (0+255),b
 28816  0161D6  0E00               	movlw	0
 28817  0161D8  0101               	movlb	1	; () banked
 28818  0161DA  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 28819  0161DC  0E00               	movlw	0
 28820  0161DE  0101               	movlb	1	; () banked
 28821  0161E0  6F10               	movwf	(delayUS@US+2)& (0+255),b
 28822  0161E2  0E00               	movlw	0
 28823  0161E4  0101               	movlb	1	; () banked
 28824  0161E6  6F11               	movwf	(delayUS@US+3)& (0+255),b
 28825  0161E8  EC10  F0B9         	call	_delayUS	;wreg free
 28826  0161EC  0012               	return	
 28827  0161EE                     __end_of_SendLCDbyte:
 28828                           	opt stack 0
 28829                           tblptru	equ	0xFF8
 28830                           tblptrh	equ	0xFF7
 28831                           tblptrl	equ	0xFF6
 28832                           tablat	equ	0xFF5
 28833                           prodh	equ	0xFF4
 28834                           prodl	equ	0xFF3
 28835                           intcon	equ	0xFF2
 28836                           postinc0	equ	0xFEE
 28837                           wreg	equ	0xFE8
 28838                           indf1	equ	0xFE7
 28839                           postinc1	equ	0xFE6
 28840                           postdec1	equ	0xFE5
 28841                           fsr1h	equ	0xFE2
 28842                           fsr1l	equ	0xFE1
 28843                           indf2	equ	0xFDF
 28844                           postinc2	equ	0xFDE
 28845                           postdec2	equ	0xFDD
 28846                           fsr2h	equ	0xFDA
 28847                           fsr2l	equ	0xFD9
 28848                           status	equ	0xFD8
 28849                           
 28850 ;; *************** function _PulseEnablePin *****************
 28851 ;; Defined at:
 28852 ;;		line 177 in file "LCD.c"
 28853 ;; Parameters:    Size  Location     Type
 28854 ;;		None
 28855 ;; Auto vars:     Size  Location     Type
 28856 ;;		None
 28857 ;; Return value:  Size  Location     Type
 28858 ;;		None               void
 28859 ;; Registers used:
 28860 ;;		wreg, status,2, status,0, cstack
 28861 ;; Tracked objects:
 28862 ;;		On entry : 0/0
 28863 ;;		On exit  : 0/0
 28864 ;;		Unchanged: 0/0
 28865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28870 ;;Total ram usage:        0 bytes
 28871 ;; Hardware stack levels used:    1
 28872 ;; Hardware stack levels required when called:    7
 28873 ;; This function calls:
 28874 ;;		_delayUS
 28875 ;; This function is called by:
 28876 ;;		_init_LCD
 28877 ;;		_SendLCDbyte
 28878 ;; This function uses a non-reentrant model
 28879 ;;
 28880                           
 28881                           	psect	text69
 28882  017904                     __ptext69:
 28883                           	opt stack 0
 28884  017904                     _PulseEnablePin:
 28885                           	opt stack 20
 28886                           
 28887                           ;LCD.c: 180: LATD |= (0b10000000);
 28888                           
 28889                           ;incstack = 0
 28890  017904  8E8C               	bsf	3980,7,c	;volatile
 28891                           
 28892                           ;LCD.c: 181: delayUS(2500);
 28893  017906  0EC4               	movlw	196
 28894  017908  0101               	movlb	1	; () banked
 28895  01790A  6F0E               	movwf	delayUS@US& (0+255),b
 28896  01790C  0E09               	movlw	9
 28897  01790E  0101               	movlb	1	; () banked
 28898  017910  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 28899  017912  0E00               	movlw	0
 28900  017914  0101               	movlb	1	; () banked
 28901  017916  6F10               	movwf	(delayUS@US+2)& (0+255),b
 28902  017918  0E00               	movlw	0
 28903  01791A  0101               	movlb	1	; () banked
 28904  01791C  6F11               	movwf	(delayUS@US+3)& (0+255),b
 28905  01791E  EC10  F0B9         	call	_delayUS	;wreg free
 28906                           
 28907                           ;LCD.c: 183: LATD &= ~(0b10000000);
 28908  017922  9E8C               	bcf	3980,7,c	;volatile
 28909                           
 28910                           ;LCD.c: 184: delayUS(2500);
 28911  017924  0EC4               	movlw	196
 28912  017926  0101               	movlb	1	; () banked
 28913  017928  6F0E               	movwf	delayUS@US& (0+255),b
 28914  01792A  0E09               	movlw	9
 28915  01792C  0101               	movlb	1	; () banked
 28916  01792E  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 28917  017930  0E00               	movlw	0
 28918  017932  0101               	movlb	1	; () banked
 28919  017934  6F10               	movwf	(delayUS@US+2)& (0+255),b
 28920  017936  0E00               	movlw	0
 28921  017938  0101               	movlb	1	; () banked
 28922  01793A  6F11               	movwf	(delayUS@US+3)& (0+255),b
 28923  01793C  EC10  F0B9         	call	_delayUS	;wreg free
 28924  017940  0012               	return	
 28925  017942                     __end_of_PulseEnablePin:
 28926                           	opt stack 0
 28927                           tblptru	equ	0xFF8
 28928                           tblptrh	equ	0xFF7
 28929                           tblptrl	equ	0xFF6
 28930                           tablat	equ	0xFF5
 28931                           prodh	equ	0xFF4
 28932                           prodl	equ	0xFF3
 28933                           intcon	equ	0xFF2
 28934                           postinc0	equ	0xFEE
 28935                           wreg	equ	0xFE8
 28936                           indf1	equ	0xFE7
 28937                           postinc1	equ	0xFE6
 28938                           postdec1	equ	0xFE5
 28939                           fsr1h	equ	0xFE2
 28940                           fsr1l	equ	0xFE1
 28941                           indf2	equ	0xFDF
 28942                           postinc2	equ	0xFDE
 28943                           postdec2	equ	0xFDD
 28944                           fsr2h	equ	0xFDA
 28945                           fsr2l	equ	0xFD9
 28946                           status	equ	0xFD8
 28947                           
 28948 ;; *************** function _delayUS *****************
 28949 ;; Defined at:
 28950 ;;		line 55 in file "MISC.c"
 28951 ;; Parameters:    Size  Location     Type
 28952 ;;  US              4   14[BANK1 ] long 
 28953 ;; Auto vars:     Size  Location     Type
 28954 ;;  i               4   19[BANK1 ] long 
 28955 ;;  j               1   23[BANK1 ] unsigned char 
 28956 ;; Return value:  Size  Location     Type
 28957 ;;		None               void
 28958 ;; Registers used:
 28959 ;;		wreg, status,2, status,0
 28960 ;; Tracked objects:
 28961 ;;		On entry : 0/0
 28962 ;;		On exit  : 0/0
 28963 ;;		Unchanged: 0/0
 28964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28965 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 28966 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 28967 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28968 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 28969 ;;Total ram usage:       10 bytes
 28970 ;; Hardware stack levels used:    1
 28971 ;; Hardware stack levels required when called:    6
 28972 ;; This function calls:
 28973 ;;		Nothing
 28974 ;; This function is called by:
 28975 ;;		_main
 28976 ;;		_InitApp
 28977 ;;		_UARTstringWAIT
 28978 ;;		_SetBaud
 28979 ;;		_Command
 28980 ;;		_Send_Config1
 28981 ;;		_Zero_Config1
 28982 ;;		_One_Config1
 28983 ;;		_f_Config1
 28984 ;;		_Send_Config2
 28985 ;;		_Zero_Config2
 28986 ;;		_One_Config2
 28987 ;;		_init_LCD
 28988 ;;		_SendLCDbyte
 28989 ;;		_PulseEnablePin
 28990 ;;		_LCDScreenUpdate
 28991 ;;		_ResetI2C
 28992 ;; This function uses a non-reentrant model
 28993 ;;
 28994                           
 28995                           	psect	text70
 28996  017220                     __ptext70:
 28997                           	opt stack 0
 28998  017220                     _delayUS:
 28999                           	opt stack 22
 29000                           
 29001                           ;MISC.c: 57: long i;
 29002                           ;MISC.c: 58: unsigned char j;
 29003                           ;MISC.c: 59: for(i=0;i<US;i+=31)
 29004                           
 29005                           ;incstack = 0
 29006  017220  0E00               	movlw	0
 29007  017222  0101               	movlb	1	; () banked
 29008  017224  6F13               	movwf	delayUS@i& (0+255),b
 29009  017226  0E00               	movlw	0
 29010  017228  0101               	movlb	1	; () banked
 29011  01722A  6F14               	movwf	(delayUS@i+1)& (0+255),b
 29012  01722C  0E00               	movlw	0
 29013  01722E  0101               	movlb	1	; () banked
 29014  017230  6F15               	movwf	(delayUS@i+2)& (0+255),b
 29015  017232  0E00               	movlw	0
 29016  017234  0101               	movlb	1	; () banked
 29017  017236  6F16               	movwf	(delayUS@i+3)& (0+255),b
 29018  017238  D015               	goto	l217
 29019  01723A                     l9752:
 29020                           
 29021                           ; BSR set to: 1
 29022                           ;MISC.c: 60: {
 29023                           ;MISC.c: 61: for(j=0;j<41;j++)
 29024  01723A  0E00               	movlw	0
 29025  01723C  0101               	movlb	1	; () banked
 29026  01723E  6F17               	movwf	delayUS@j& (0+255),b
 29027  017240  D003               	goto	L39
 29028  017242                     l219:
 29029                           
 29030                           ; BSR set to: 1
 29031                           ;MISC.c: 62: {
 29032                           ;MISC.c: 63: __nop();
 29033  017242  F000               	nop	
 29034  017244  0101               	movlb	1	; () banked
 29035  017246  2B17               	incf	delayUS@j& (0+255),f,b
 29036  017248                     L39:
 29037                           
 29038                           ; BSR set to: 1
 29039  017248  0E28               	movlw	40
 29040  01724A  0101               	movlb	1	; () banked
 29041  01724C  6517               	cpfsgt	delayUS@j& (0+255),b
 29042  01724E  D7F9               	goto	l219
 29043                           
 29044                           ; BSR set to: 1
 29045                           
 29046                           ; BSR set to: 1
 29047  017250  0E1F               	movlw	31
 29048  017252  0101               	movlb	1	; () banked
 29049  017254  2713               	addwf	delayUS@i& (0+255),f,b
 29050  017256  0E00               	movlw	0
 29051  017258  0101               	movlb	1	; () banked
 29052  01725A  2314               	addwfc	(delayUS@i+1)& (0+255),f,b
 29053  01725C  0101               	movlb	1	; () banked
 29054  01725E  2315               	addwfc	(delayUS@i+2)& (0+255),f,b
 29055  017260  0101               	movlb	1	; () banked
 29056  017262  2316               	addwfc	(delayUS@i+3)& (0+255),f,b
 29057  017264                     l217:
 29058                           
 29059                           ; BSR set to: 1
 29060  017264  0101               	movlb	1	; () banked
 29061  017266  5116               	movf	(delayUS@i+3)& (0+255),w,b
 29062  017268  0A80               	xorlw	128
 29063  01726A  0101               	movlb	1	; () banked
 29064  01726C  6F12               	movwf	??_delayUS& (0+255),b
 29065  01726E  0101               	movlb	1	; () banked
 29066  017270  510E               	movf	delayUS@US& (0+255),w,b
 29067  017272  0101               	movlb	1	; () banked
 29068  017274  5D13               	subwf	delayUS@i& (0+255),w,b
 29069  017276  0101               	movlb	1	; () banked
 29070  017278  510F               	movf	(delayUS@US+1)& (0+255),w,b
 29071  01727A  0101               	movlb	1	; () banked
 29072  01727C  5914               	subwfb	(delayUS@i+1)& (0+255),w,b
 29073  01727E  0101               	movlb	1	; () banked
 29074  017280  5110               	movf	(delayUS@US+2)& (0+255),w,b
 29075  017282  0101               	movlb	1	; () banked
 29076  017284  5915               	subwfb	(delayUS@i+2)& (0+255),w,b
 29077  017286  0101               	movlb	1	; () banked
 29078  017288  5111               	movf	(delayUS@US+3)& (0+255),w,b
 29079  01728A  0A80               	xorlw	128
 29080  01728C  0101               	movlb	1	; () banked
 29081  01728E  5912               	subwfb	??_delayUS& (0+255),w,b
 29082  017290  B0D8               	btfsc	status,0,c
 29083                           
 29084                           ; BSR set to: 1
 29085                           
 29086                           ; BSR set to: 1
 29087  017292  0012               	return	
 29088  017294  D7D2               	goto	l9752
 29089  017296                     __end_of_delayUS:
 29090                           	opt stack 0
 29091                           tblptru	equ	0xFF8
 29092                           tblptrh	equ	0xFF7
 29093                           tblptrl	equ	0xFF6
 29094                           tablat	equ	0xFF5
 29095                           prodh	equ	0xFF4
 29096                           prodl	equ	0xFF3
 29097                           intcon	equ	0xFF2
 29098                           postinc0	equ	0xFEE
 29099                           wreg	equ	0xFE8
 29100                           indf1	equ	0xFE7
 29101                           postinc1	equ	0xFE6
 29102                           postdec1	equ	0xFE5
 29103                           fsr1h	equ	0xFE2
 29104                           fsr1l	equ	0xFE1
 29105                           indf2	equ	0xFDF
 29106                           postinc2	equ	0xFDE
 29107                           postdec2	equ	0xFDD
 29108                           fsr2h	equ	0xFDA
 29109                           fsr2l	equ	0xFD9
 29110                           status	equ	0xFD8
 29111                           
 29112 ;; *************** function _LCD_Scroll *****************
 29113 ;; Defined at:
 29114 ;;		line 409 in file "LCD.c"
 29115 ;; Parameters:    Size  Location     Type
 29116 ;;  This            2   29[BANK1 ] PTR unsigned char 
 29117 ;;		 -> STR_292(5), STR_291(5), STR_290(10), STR_289(16), 
 29118 ;;		 -> STR_288(11), STR_287(12), STR_286(9), STR_285(14), 
 29119 ;;		 -> STR_268(6), STR_267(9), STR_266(14), STR_250(4), 
 29120 ;;		 -> STR_249(5), STR_248(8), STR_247(10), STR_246(9), 
 29121 ;;		 -> STR_215(2), STR_214(10), STR_213(9), STR_194(10), 
 29122 ;;		 -> STR_193(10), STR_192(13), STR_177(10), STR_176(10), 
 29123 ;;		 -> STR_175(17), STR_155(6), STR_154(6), STR_153(9), 
 29124 ;;		 -> STR_152(10), STR_127(7), STR_126(4), STR_125(6), 
 29125 ;;		 -> STR_124(9), STR_123(13), STR_92(4), STR_91(6), 
 29126 ;;		 -> STR_90(9), STR_89(14), STR_67(5), STR_66(5), 
 29127 ;;		 -> STR_65(9), STR_64(9), 
 29128 ;; Auto vars:     Size  Location     Type
 29129 ;;		None
 29130 ;; Return value:  Size  Location     Type
 29131 ;;		None               void
 29132 ;; Registers used:
 29133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29134 ;; Tracked objects:
 29135 ;;		On entry : 0/0
 29136 ;;		On exit  : 0/0
 29137 ;;		Unchanged: 0/0
 29138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29139 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 29140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29142 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 29143 ;;Total ram usage:        2 bytes
 29144 ;; Hardware stack levels used:    1
 29145 ;; Hardware stack levels required when called:    8
 29146 ;; This function calls:
 29147 ;;		_BufferCopy
 29148 ;; This function is called by:
 29149 ;;		_Command
 29150 ;; This function uses a non-reentrant model
 29151 ;;
 29152                           
 29153                           	psect	text71
 29154  014A8C                     __ptext71:
 29155                           	opt stack 0
 29156  014A8C                     _LCD_Scroll:
 29157                           	opt stack 20
 29158                           
 29159                           ;LCD.c: 411: if(!LCDwait)
 29160                           
 29161                           ; BSR set to: 1
 29162                           ;incstack = 0
 29163  014A8C  0101               	movlb	1	; () banked
 29164  014A8E  6795               	tstfsz	_LCDwait& (0+255),b
 29165  014A90  0012               	return	
 29166                           
 29167                           ; BSR set to: 1
 29168                           ;LCD.c: 412: {
 29169                           ;LCD.c: 413: LCDclearCount = 15000;
 29170  014A92  0E98               	movlw	152
 29171  014A94  0101               	movlb	1	; () banked
 29172  014A96  6FEE               	movwf	_LCDclearCount& (0+255),b
 29173  014A98  0E3A               	movlw	58
 29174  014A9A  0101               	movlb	1	; () banked
 29175  014A9C  6FEF               	movwf	(_LCDclearCount+1)& (0+255),b
 29176  014A9E  0E00               	movlw	0
 29177  014AA0  0101               	movlb	1	; () banked
 29178  014AA2  6FF0               	movwf	(_LCDclearCount+2)& (0+255),b
 29179  014AA4  0E00               	movlw	0
 29180  014AA6  0101               	movlb	1	; () banked
 29181  014AA8  6FF1               	movwf	(_LCDclearCount+3)& (0+255),b
 29182                           
 29183                           ; BSR set to: 1
 29184                           ;LCD.c: 414: ScrollFIFOCount++;
 29185  014AAA  0101               	movlb	1	; () banked
 29186  014AAC  2B98               	incf	_ScrollFIFOCount& (0+255),f,b
 29187                           
 29188                           ; BSR set to: 1
 29189                           ;LCD.c: 415: if(ScrollFIFOCount == 1)
 29190  014AAE  0101               	movlb	1	; () banked
 29191  014AB0  0598               	decf	_ScrollFIFOCount& (0+255),w,b
 29192  014AB2  A4D8               	btfss	status,2,c
 29193  014AB4  D017               	goto	l11516
 29194                           
 29195                           ; BSR set to: 1
 29196                           ;LCD.c: 416: {
 29197                           ;LCD.c: 417: BufferCopy(This,Scroll_1, 16, 0);
 29198  014AB6  0101               	movlb	1	; () banked
 29199  014AB8  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 29200  014ABC  0101               	movlb	1	; () banked
 29201  014ABE  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 29202  014AC2  0101               	movlb	1	; () banked
 29203  014AC4  0E01               	movlw	high _Scroll_1
 29204  014AC6  0101               	movlb	1	; () banked
 29205  014AC8  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 29206  014ACA  0101               	movlb	1	; () banked
 29207  014ACC  0E9A               	movlw	low _Scroll_1
 29208  014ACE  0101               	movlb	1	; () banked
 29209  014AD0  6F18               	movwf	BufferCopy@to& (0+255),b
 29210  014AD2  0E10               	movlw	16
 29211  014AD4  0101               	movlb	1	; () banked
 29212  014AD6  6F1A               	movwf	BufferCopy@count& (0+255),b
 29213  014AD8  0E00               	movlw	0
 29214  014ADA  0101               	movlb	1	; () banked
 29215  014ADC  6F1B               	movwf	BufferCopy@shift& (0+255),b
 29216  014ADE  EC2C  F0B2         	call	_BufferCopy	;wreg free
 29217                           
 29218                           ;LCD.c: 418: }
 29219  014AE2  0012               	return	
 29220  014AE4                     l11516:
 29221                           
 29222                           ;LCD.c: 419: else if(ScrollFIFOCount == 2)
 29223  014AE4  0101               	movlb	1	; () banked
 29224  014AE6  5198               	movf	_ScrollFIFOCount& (0+255),w,b
 29225  014AE8  0A02               	xorlw	2
 29226  014AEA  A4D8               	btfss	status,2,c
 29227  014AEC  D017               	goto	l11520
 29228                           
 29229                           ; BSR set to: 1
 29230                           ;LCD.c: 420: {
 29231                           ;LCD.c: 421: BufferCopy(This,Scroll_2, 16, 0);
 29232  014AEE  0101               	movlb	1	; () banked
 29233  014AF0  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 29234  014AF4  0101               	movlb	1	; () banked
 29235  014AF6  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 29236  014AFA  0101               	movlb	1	; () banked
 29237  014AFC  0E01               	movlw	high _Scroll_2
 29238  014AFE  0101               	movlb	1	; () banked
 29239  014B00  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 29240  014B02  0101               	movlb	1	; () banked
 29241  014B04  0EAA               	movlw	low _Scroll_2
 29242  014B06  0101               	movlb	1	; () banked
 29243  014B08  6F18               	movwf	BufferCopy@to& (0+255),b
 29244  014B0A  0E10               	movlw	16
 29245  014B0C  0101               	movlb	1	; () banked
 29246  014B0E  6F1A               	movwf	BufferCopy@count& (0+255),b
 29247  014B10  0E00               	movlw	0
 29248  014B12  0101               	movlb	1	; () banked
 29249  014B14  6F1B               	movwf	BufferCopy@shift& (0+255),b
 29250  014B16  EC2C  F0B2         	call	_BufferCopy	;wreg free
 29251                           
 29252                           ;LCD.c: 422: }
 29253  014B1A  0012               	return	
 29254  014B1C                     l11520:
 29255                           
 29256                           ;LCD.c: 423: else if(ScrollFIFOCount == 3)
 29257  014B1C  0101               	movlb	1	; () banked
 29258  014B1E  5198               	movf	_ScrollFIFOCount& (0+255),w,b
 29259  014B20  0A03               	xorlw	3
 29260  014B22  A4D8               	btfss	status,2,c
 29261  014B24  D017               	goto	l11524
 29262                           
 29263                           ; BSR set to: 1
 29264                           ;LCD.c: 424: {
 29265                           ;LCD.c: 425: BufferCopy(This,Scroll_3, 16, 0);
 29266  014B26  0101               	movlb	1	; () banked
 29267  014B28  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 29268  014B2C  0101               	movlb	1	; () banked
 29269  014B2E  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 29270  014B32  0101               	movlb	1	; () banked
 29271  014B34  0E01               	movlw	high _Scroll_3
 29272  014B36  0101               	movlb	1	; () banked
 29273  014B38  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 29274  014B3A  0101               	movlb	1	; () banked
 29275  014B3C  0EBA               	movlw	low _Scroll_3
 29276  014B3E  0101               	movlb	1	; () banked
 29277  014B40  6F18               	movwf	BufferCopy@to& (0+255),b
 29278  014B42  0E10               	movlw	16
 29279  014B44  0101               	movlb	1	; () banked
 29280  014B46  6F1A               	movwf	BufferCopy@count& (0+255),b
 29281  014B48  0E00               	movlw	0
 29282  014B4A  0101               	movlb	1	; () banked
 29283  014B4C  6F1B               	movwf	BufferCopy@shift& (0+255),b
 29284  014B4E  EC2C  F0B2         	call	_BufferCopy	;wreg free
 29285                           
 29286                           ;LCD.c: 426: }
 29287  014B52  0012               	return	
 29288  014B54                     l11524:
 29289                           
 29290                           ;LCD.c: 427: else if(ScrollFIFOCount == 4)
 29291  014B54  0101               	movlb	1	; () banked
 29292  014B56  5198               	movf	_ScrollFIFOCount& (0+255),w,b
 29293  014B58  0A04               	xorlw	4
 29294  014B5A  A4D8               	btfss	status,2,c
 29295  014B5C  D017               	goto	l11528
 29296                           
 29297                           ; BSR set to: 1
 29298                           ;LCD.c: 428: {
 29299                           ;LCD.c: 429: BufferCopy(This,Scroll_4, 16, 0);
 29300  014B5E  0101               	movlb	1	; () banked
 29301  014B60  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 29302  014B64  0101               	movlb	1	; () banked
 29303  014B66  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 29304  014B6A  0101               	movlb	1	; () banked
 29305  014B6C  0E01               	movlw	high _Scroll_4
 29306  014B6E  0101               	movlb	1	; () banked
 29307  014B70  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 29308  014B72  0101               	movlb	1	; () banked
 29309  014B74  0ECA               	movlw	low _Scroll_4
 29310  014B76  0101               	movlb	1	; () banked
 29311  014B78  6F18               	movwf	BufferCopy@to& (0+255),b
 29312  014B7A  0E10               	movlw	16
 29313  014B7C  0101               	movlb	1	; () banked
 29314  014B7E  6F1A               	movwf	BufferCopy@count& (0+255),b
 29315  014B80  0E00               	movlw	0
 29316  014B82  0101               	movlb	1	; () banked
 29317  014B84  6F1B               	movwf	BufferCopy@shift& (0+255),b
 29318  014B86  EC2C  F0B2         	call	_BufferCopy	;wreg free
 29319                           
 29320                           ;LCD.c: 430: }
 29321  014B8A  0012               	return	
 29322  014B8C                     l11528:
 29323                           
 29324                           ;LCD.c: 431: else if(ScrollFIFOCount == 5)
 29325  014B8C  0101               	movlb	1	; () banked
 29326  014B8E  5198               	movf	_ScrollFIFOCount& (0+255),w,b
 29327  014B90  0A05               	xorlw	5
 29328  014B92  A4D8               	btfss	status,2,c
 29329  014B94  D017               	goto	l11532
 29330                           
 29331                           ; BSR set to: 1
 29332                           ;LCD.c: 432: {
 29333                           ;LCD.c: 433: BufferCopy(This,Scroll_5, 16, 0);
 29334  014B96  0101               	movlb	1	; () banked
 29335  014B98  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 29336  014B9C  0101               	movlb	1	; () banked
 29337  014B9E  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 29338  014BA2  0101               	movlb	1	; () banked
 29339  014BA4  0E01               	movlw	high _Scroll_5
 29340  014BA6  0101               	movlb	1	; () banked
 29341  014BA8  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 29342  014BAA  0101               	movlb	1	; () banked
 29343  014BAC  0EDA               	movlw	low _Scroll_5
 29344  014BAE  0101               	movlb	1	; () banked
 29345  014BB0  6F18               	movwf	BufferCopy@to& (0+255),b
 29346  014BB2  0E10               	movlw	16
 29347  014BB4  0101               	movlb	1	; () banked
 29348  014BB6  6F1A               	movwf	BufferCopy@count& (0+255),b
 29349  014BB8  0E00               	movlw	0
 29350  014BBA  0101               	movlb	1	; () banked
 29351  014BBC  6F1B               	movwf	BufferCopy@shift& (0+255),b
 29352  014BBE  EC2C  F0B2         	call	_BufferCopy	;wreg free
 29353                           
 29354                           ;LCD.c: 434: }
 29355  014BC2  0012               	return	
 29356  014BC4                     l11532:
 29357                           
 29358                           ;LCD.c: 435: else if(ScrollFIFOCount == 6)
 29359  014BC4  0101               	movlb	1	; () banked
 29360  014BC6  5198               	movf	_ScrollFIFOCount& (0+255),w,b
 29361  014BC8  0A06               	xorlw	6
 29362  014BCA  A4D8               	btfss	status,2,c
 29363  014BCC  D015               	goto	l11536
 29364                           
 29365                           ; BSR set to: 1
 29366                           ;LCD.c: 436: {
 29367                           ;LCD.c: 437: BufferCopy(This,Scroll_6, 16, 0);
 29368  014BCE  0101               	movlb	1	; () banked
 29369  014BD0  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 29370  014BD4  0101               	movlb	1	; () banked
 29371  014BD6  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 29372  014BDA  0E00               	movlw	high _Scroll_6
 29373  014BDC  0101               	movlb	1	; () banked
 29374  014BDE  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 29375  014BE0  0E27               	movlw	low _Scroll_6
 29376  014BE2  0101               	movlb	1	; () banked
 29377  014BE4  6F18               	movwf	BufferCopy@to& (0+255),b
 29378  014BE6  0E10               	movlw	16
 29379  014BE8  0101               	movlb	1	; () banked
 29380  014BEA  6F1A               	movwf	BufferCopy@count& (0+255),b
 29381  014BEC  0E00               	movlw	0
 29382  014BEE  0101               	movlb	1	; () banked
 29383  014BF0  6F1B               	movwf	BufferCopy@shift& (0+255),b
 29384  014BF2  EC2C  F0B2         	call	_BufferCopy	;wreg free
 29385                           
 29386                           ;LCD.c: 438: }
 29387  014BF6  0012               	return	
 29388  014BF8                     l11536:
 29389                           
 29390                           ;LCD.c: 439: else if(ScrollFIFOCount == 7)
 29391  014BF8  0101               	movlb	1	; () banked
 29392  014BFA  5198               	movf	_ScrollFIFOCount& (0+255),w,b
 29393  014BFC  0A07               	xorlw	7
 29394  014BFE  A4D8               	btfss	status,2,c
 29395  014C00  D015               	goto	l11540
 29396                           
 29397                           ; BSR set to: 1
 29398                           ;LCD.c: 440: {
 29399                           ;LCD.c: 441: BufferCopy(This,Scroll_7, 16, 0);
 29400  014C02  0101               	movlb	1	; () banked
 29401  014C04  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 29402  014C08  0101               	movlb	1	; () banked
 29403  014C0A  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 29404  014C0E  0E00               	movlw	high _Scroll_7
 29405  014C10  0101               	movlb	1	; () banked
 29406  014C12  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 29407  014C14  0E37               	movlw	low _Scroll_7
 29408  014C16  0101               	movlb	1	; () banked
 29409  014C18  6F18               	movwf	BufferCopy@to& (0+255),b
 29410  014C1A  0E10               	movlw	16
 29411  014C1C  0101               	movlb	1	; () banked
 29412  014C1E  6F1A               	movwf	BufferCopy@count& (0+255),b
 29413  014C20  0E00               	movlw	0
 29414  014C22  0101               	movlb	1	; () banked
 29415  014C24  6F1B               	movwf	BufferCopy@shift& (0+255),b
 29416  014C26  EC2C  F0B2         	call	_BufferCopy	;wreg free
 29417                           
 29418                           ;LCD.c: 442: }
 29419  014C2A  0012               	return	
 29420  014C2C                     l11540:
 29421                           
 29422                           ;LCD.c: 443: else if(ScrollFIFOCount == 8)
 29423  014C2C  0101               	movlb	1	; () banked
 29424  014C2E  5198               	movf	_ScrollFIFOCount& (0+255),w,b
 29425  014C30  0A08               	xorlw	8
 29426  014C32  A4D8               	btfss	status,2,c
 29427  014C34  D017               	goto	l11544
 29428                           
 29429                           ; BSR set to: 1
 29430                           ;LCD.c: 444: {
 29431                           ;LCD.c: 445: BufferCopy(This,Scroll_8, 16, 0);
 29432  014C36  0101               	movlb	1	; () banked
 29433  014C38  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 29434  014C3C  0101               	movlb	1	; () banked
 29435  014C3E  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 29436  014C42  0100               	movlb	0	; () banked
 29437  014C44  0E00               	movlw	high _Scroll_8
 29438  014C46  0101               	movlb	1	; () banked
 29439  014C48  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 29440  014C4A  0100               	movlb	0	; () banked
 29441  014C4C  0EDA               	movlw	low _Scroll_8
 29442  014C4E  0101               	movlb	1	; () banked
 29443  014C50  6F18               	movwf	BufferCopy@to& (0+255),b
 29444  014C52  0E10               	movlw	16
 29445  014C54  0101               	movlb	1	; () banked
 29446  014C56  6F1A               	movwf	BufferCopy@count& (0+255),b
 29447  014C58  0E00               	movlw	0
 29448  014C5A  0101               	movlb	1	; () banked
 29449  014C5C  6F1B               	movwf	BufferCopy@shift& (0+255),b
 29450  014C5E  EC2C  F0B2         	call	_BufferCopy	;wreg free
 29451                           
 29452                           ;LCD.c: 446: }
 29453  014C62  0012               	return	
 29454  014C64                     l11544:
 29455                           
 29456                           ;LCD.c: 447: else if(ScrollFIFOCount == 9)
 29457  014C64  0101               	movlb	1	; () banked
 29458  014C66  5198               	movf	_ScrollFIFOCount& (0+255),w,b
 29459  014C68  0A09               	xorlw	9
 29460  014C6A  A4D8               	btfss	status,2,c
 29461  014C6C  D017               	goto	l11548
 29462                           
 29463                           ; BSR set to: 1
 29464                           ;LCD.c: 448: {
 29465                           ;LCD.c: 449: BufferCopy(This,Scroll_9, 16, 0);
 29466  014C6E  0101               	movlb	1	; () banked
 29467  014C70  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 29468  014C74  0101               	movlb	1	; () banked
 29469  014C76  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 29470  014C7A  0100               	movlb	0	; () banked
 29471  014C7C  0E00               	movlw	high _Scroll_9
 29472  014C7E  0101               	movlb	1	; () banked
 29473  014C80  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 29474  014C82  0100               	movlb	0	; () banked
 29475  014C84  0EEA               	movlw	low _Scroll_9
 29476  014C86  0101               	movlb	1	; () banked
 29477  014C88  6F18               	movwf	BufferCopy@to& (0+255),b
 29478  014C8A  0E10               	movlw	16
 29479  014C8C  0101               	movlb	1	; () banked
 29480  014C8E  6F1A               	movwf	BufferCopy@count& (0+255),b
 29481  014C90  0E00               	movlw	0
 29482  014C92  0101               	movlb	1	; () banked
 29483  014C94  6F1B               	movwf	BufferCopy@shift& (0+255),b
 29484  014C96  EC2C  F0B2         	call	_BufferCopy	;wreg free
 29485                           
 29486                           ;LCD.c: 450: }
 29487  014C9A  0012               	return	
 29488  014C9C                     l11548:
 29489                           
 29490                           ;LCD.c: 451: else if(ScrollFIFOCount == 10)
 29491  014C9C  0101               	movlb	1	; () banked
 29492  014C9E  5198               	movf	_ScrollFIFOCount& (0+255),w,b
 29493  014CA0  0A0A               	xorlw	10
 29494  014CA2  A4D8               	btfss	status,2,c
 29495  014CA4  0012               	return	
 29496                           
 29497                           ; BSR set to: 1
 29498                           ;LCD.c: 452: {
 29499                           ;LCD.c: 453: BufferCopy(This,Scroll_10, 16, 0);
 29500  014CA6  0101               	movlb	1	; () banked
 29501  014CA8  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 29502  014CAC  0101               	movlb	1	; () banked
 29503  014CAE  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 29504  014CB2  0102               	movlb	2	; () banked
 29505  014CB4  0E02               	movlw	high _Scroll_10
 29506  014CB6  0101               	movlb	1	; () banked
 29507  014CB8  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 29508  014CBA  0102               	movlb	2	; () banked
 29509  014CBC  0E43               	movlw	low _Scroll_10
 29510  014CBE  0101               	movlb	1	; () banked
 29511  014CC0  6F18               	movwf	BufferCopy@to& (0+255),b
 29512  014CC2  0E10               	movlw	16
 29513  014CC4  0101               	movlb	1	; () banked
 29514  014CC6  6F1A               	movwf	BufferCopy@count& (0+255),b
 29515  014CC8  0E00               	movlw	0
 29516  014CCA  0101               	movlb	1	; () banked
 29517  014CCC  6F1B               	movwf	BufferCopy@shift& (0+255),b
 29518  014CCE  EC2C  F0B2         	call	_BufferCopy	;wreg free
 29519  014CD2  0012               	return	
 29520  014CD4                     __end_of_LCD_Scroll:
 29521                           	opt stack 0
 29522                           tblptru	equ	0xFF8
 29523                           tblptrh	equ	0xFF7
 29524                           tblptrl	equ	0xFF6
 29525                           tablat	equ	0xFF5
 29526                           prodh	equ	0xFF4
 29527                           prodl	equ	0xFF3
 29528                           intcon	equ	0xFF2
 29529                           postinc0	equ	0xFEE
 29530                           wreg	equ	0xFE8
 29531                           indf1	equ	0xFE7
 29532                           postinc1	equ	0xFE6
 29533                           postdec1	equ	0xFE5
 29534                           fsr1h	equ	0xFE2
 29535                           fsr1l	equ	0xFE1
 29536                           indf2	equ	0xFDF
 29537                           postinc2	equ	0xFDE
 29538                           postdec2	equ	0xFDD
 29539                           fsr2h	equ	0xFDA
 29540                           fsr2l	equ	0xFD9
 29541                           status	equ	0xFD8
 29542                           
 29543 ;; *************** function _BufferCopy *****************
 29544 ;; Defined at:
 29545 ;;		line 87 in file "MISC.c"
 29546 ;; Parameters:    Size  Location     Type
 29547 ;;  from            2   22[BANK1 ] PTR unsigned char 
 29548 ;;		 -> STR_292(5), STR_291(5), STR_290(10), STR_289(16), 
 29549 ;;		 -> STR_288(11), STR_287(12), STR_286(9), STR_285(14), 
 29550 ;;		 -> STR_268(6), STR_267(9), STR_266(14), STR_250(4), 
 29551 ;;		 -> STR_249(5), STR_248(8), STR_247(10), STR_246(9), 
 29552 ;;		 -> STR_215(2), STR_214(10), STR_213(9), STR_194(10), 
 29553 ;;		 -> STR_193(10), STR_192(13), STR_177(10), STR_176(10), 
 29554 ;;		 -> STR_175(17), STR_155(6), STR_154(6), STR_153(9), 
 29555 ;;		 -> STR_152(10), STR_127(7), STR_126(4), STR_125(6), 
 29556 ;;		 -> STR_124(9), STR_123(13), STR_92(4), STR_91(6), 
 29557 ;;		 -> STR_90(9), STR_89(14), STR_67(5), STR_66(5), 
 29558 ;;		 -> STR_65(9), STR_64(9), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 29559 ;;		 -> low_isr@TEMP_Rxdata(100), 
 29560 ;;  to              2   24[BANK1 ] PTR unsigned char 
 29561 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 29562 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 29563 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 29564 ;;  count           1   26[BANK1 ] unsigned char 
 29565 ;;  shift           1   27[BANK1 ] unsigned char 
 29566 ;; Auto vars:     Size  Location     Type
 29567 ;;  i               1   28[BANK1 ] unsigned char 
 29568 ;; Return value:  Size  Location     Type
 29569 ;;		None               void
 29570 ;; Registers used:
 29571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29572 ;; Tracked objects:
 29573 ;;		On entry : 0/0
 29574 ;;		On exit  : 0/0
 29575 ;;		Unchanged: 0/0
 29576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29577 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 29578 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 29579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29580 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 29581 ;;Total ram usage:        7 bytes
 29582 ;; Hardware stack levels used:    1
 29583 ;; Hardware stack levels required when called:    7
 29584 ;; This function calls:
 29585 ;;		_cleanBuffer
 29586 ;; This function is called by:
 29587 ;;		_RemoveSpaces
 29588 ;;		_StringAddEqual
 29589 ;;		_LCD_Scroll
 29590 ;; This function uses a non-reentrant model
 29591 ;;
 29592                           
 29593                           	psect	text72
 29594  016458                     __ptext72:
 29595                           	opt stack 0
 29596  016458                     _BufferCopy:
 29597                           	opt stack 20
 29598                           
 29599                           ;MISC.c: 89: unsigned char i=0;
 29600                           
 29601                           ;incstack = 0
 29602  016458  0E00               	movlw	0
 29603  01645A  0101               	movlb	1	; () banked
 29604  01645C  6F1C               	movwf	BufferCopy@i& (0+255),b
 29605                           
 29606                           ; BSR set to: 1
 29607                           ;MISC.c: 90: cleanBuffer(to,count);
 29608  01645E  0101               	movlb	1	; () banked
 29609  016460  C119  F10F         	movff	BufferCopy@to+1,cleanBuffer@data+1
 29610  016464  0101               	movlb	1	; () banked
 29611  016466  C118  F10E         	movff	BufferCopy@to,cleanBuffer@data
 29612  01646A  0101               	movlb	1	; () banked
 29613  01646C  C11A  F110         	movff	BufferCopy@count,cleanBuffer@count
 29614  016470  0101               	movlb	1	; () banked
 29615  016472  6B11               	clrf	(cleanBuffer@count+1)& (0+255),b
 29616  016474  EC50  F0BB         	call	_cleanBuffer	;wreg free
 29617                           
 29618                           ;MISC.c: 91: for(i = shift; i>0;i--)
 29619  016478  C11B  F11C         	movff	BufferCopy@shift,BufferCopy@i
 29620  01647C  D00B               	goto	L41
 29621  01647E                     l10214:
 29622                           
 29623                           ; BSR set to: 1
 29624                           ;MISC.c: 92: {
 29625                           ;MISC.c: 93: *to = ' ';
 29626  01647E  C118  FFD9         	movff	BufferCopy@to,fsr2l
 29627  016482  C119  FFDA         	movff	BufferCopy@to+1,fsr2h
 29628  016486  0E20               	movlw	32
 29629  016488  6EDF               	movwf	indf2,c
 29630                           
 29631                           ; BSR set to: 1
 29632                           ;MISC.c: 94: to++;
 29633  01648A  0101               	movlb	1	; () banked
 29634  01648C  4B18               	infsnz	BufferCopy@to& (0+255),f,b
 29635  01648E  2B19               	incf	(BufferCopy@to+1)& (0+255),f,b
 29636                           
 29637                           ; BSR set to: 1
 29638  016490  0101               	movlb	1	; () banked
 29639  016492  071C               	decf	BufferCopy@i& (0+255),f,b
 29640  016494                     L41:
 29641                           
 29642                           ; BSR set to: 1
 29643  016494  0101               	movlb	1	; () banked
 29644  016496  671C               	tstfsz	BufferCopy@i& (0+255),b
 29645  016498  D7F2               	goto	l10214
 29646  01649A  D020               	goto	L40
 29647  01649C                     l10222:
 29648                           
 29649                           ; BSR set to: 1
 29650                           ;MISC.c: 97: {
 29651                           ;MISC.c: 98: *to = *from;
 29652  01649C  0101               	movlb	1	; () banked
 29653  01649E  C116  FFF6         	movff	BufferCopy@from,tblptrl
 29654  0164A2  0101               	movlb	1	; () banked
 29655  0164A4  C117  FFF7         	movff	BufferCopy@from+1,tblptrh
 29656  0164A8  0E00               	movlw	low (__mediumconst shr (0+16))
 29657  0164AA  6EF8               	movwf	tblptru,c
 29658  0164AC  C118  FFD9         	movff	BufferCopy@to,fsr2l
 29659  0164B0  C119  FFDA         	movff	BufferCopy@to+1,fsr2h
 29660  0164B4  0E0C               	movlw	(high __ramtop+-1)
 29661  0164B6  64F7               	cpfsgt	tblptrh,c
 29662  0164B8  D003               	bra	u12817
 29663  0164BA  0008               	tblrd		*
 29664  0164BC  50F5               	movf	tablat,w,c
 29665  0164BE  D005               	bra	u12810
 29666  0164C0                     u12817:
 29667  0164C0  CFF6 FFE1          	movff	tblptrl,fsr1l
 29668  0164C4  CFF7 FFE2          	movff	tblptrh,fsr1h
 29669  0164C8  50E7               	movf	indf1,w,c
 29670  0164CA                     u12810:
 29671  0164CA  6EDF               	movwf	indf2,c
 29672                           
 29673                           ;MISC.c: 99: from++;
 29674  0164CC  0101               	movlb	1	; () banked
 29675  0164CE  4B16               	infsnz	BufferCopy@from& (0+255),f,b
 29676  0164D0  2B17               	incf	(BufferCopy@from+1)& (0+255),f,b
 29677                           
 29678                           ; BSR set to: 1
 29679                           ;MISC.c: 100: to++;
 29680  0164D2  0101               	movlb	1	; () banked
 29681  0164D4  4B18               	infsnz	BufferCopy@to& (0+255),f,b
 29682  0164D6  2B19               	incf	(BufferCopy@to+1)& (0+255),f,b
 29683                           
 29684                           ; BSR set to: 1
 29685                           ;MISC.c: 101: count--;
 29686  0164D8  0101               	movlb	1	; () banked
 29687  0164DA  071A               	decf	BufferCopy@count& (0+255),f,b
 29688  0164DC                     L40:
 29689                           
 29690                           ; BSR set to: 1
 29691                           
 29692                           ; BSR set to: 1
 29693  0164DC  0101               	movlb	1	; () banked
 29694  0164DE  C116  FFF6         	movff	BufferCopy@from,tblptrl
 29695  0164E2  0101               	movlb	1	; () banked
 29696  0164E4  C117  FFF7         	movff	BufferCopy@from+1,tblptrh
 29697  0164E8  0E00               	movlw	low (__mediumconst shr (0+16))
 29698  0164EA  6EF8               	movwf	tblptru,c
 29699  0164EC  0E0C               	movlw	(high __ramtop+-1)
 29700  0164EE  64F7               	cpfsgt	tblptrh,c
 29701  0164F0  D003               	bra	u12827
 29702  0164F2  0008               	tblrd		*
 29703  0164F4  50F5               	movf	tablat,w,c
 29704  0164F6  D005               	bra	u12820
 29705  0164F8                     u12827:
 29706  0164F8  CFF6 FFE1          	movff	tblptrl,fsr1l
 29707  0164FC  CFF7 FFE2          	movff	tblptrh,fsr1h
 29708  016500  50E7               	movf	indf1,w,c
 29709  016502                     u12820:
 29710  016502  0900               	iorlw	0
 29711  016504  B4D8               	btfsc	status,2,c
 29712  016506  0012               	return	
 29713  016508  0101               	movlb	1	; () banked
 29714  01650A  671A               	tstfsz	BufferCopy@count& (0+255),b
 29715  01650C  D7C7               	goto	l10222
 29716  01650E  0012               	return	
 29717  016510                     __end_of_BufferCopy:
 29718                           	opt stack 0
 29719                           tblptru	equ	0xFF8
 29720                           tblptrh	equ	0xFF7
 29721                           tblptrl	equ	0xFF6
 29722                           tablat	equ	0xFF5
 29723                           prodh	equ	0xFF4
 29724                           prodl	equ	0xFF3
 29725                           intcon	equ	0xFF2
 29726                           postinc0	equ	0xFEE
 29727                           wreg	equ	0xFE8
 29728                           indf1	equ	0xFE7
 29729                           postinc1	equ	0xFE6
 29730                           postdec1	equ	0xFE5
 29731                           fsr1h	equ	0xFE2
 29732                           fsr1l	equ	0xFE1
 29733                           indf2	equ	0xFDF
 29734                           postinc2	equ	0xFDE
 29735                           postdec2	equ	0xFDD
 29736                           fsr2h	equ	0xFDA
 29737                           fsr2l	equ	0xFD9
 29738                           status	equ	0xFD8
 29739                           
 29740 ;; *************** function _cleanBuffer *****************
 29741 ;; Defined at:
 29742 ;;		line 73 in file "MISC.c"
 29743 ;; Parameters:    Size  Location     Type
 29744 ;;  data            2   14[BANK1 ] PTR unsigned char 
 29745 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 29746 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 29747 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 29748 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 29749 ;;  count           2   16[BANK1 ] int 
 29750 ;; Auto vars:     Size  Location     Type
 29751 ;;  i               1   21[BANK1 ] unsigned char 
 29752 ;; Return value:  Size  Location     Type
 29753 ;;		None               void
 29754 ;; Registers used:
 29755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29756 ;; Tracked objects:
 29757 ;;		On entry : 0/0
 29758 ;;		On exit  : 0/0
 29759 ;;		Unchanged: 0/0
 29760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29761 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 29762 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 29763 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 29764 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 29765 ;;Total ram usage:        8 bytes
 29766 ;; Hardware stack levels used:    1
 29767 ;; Hardware stack levels required when called:    6
 29768 ;; This function calls:
 29769 ;;		Nothing
 29770 ;; This function is called by:
 29771 ;;		_main
 29772 ;;		_BufferCopy
 29773 ;;		_RemoveSpaces
 29774 ;;		_StringAddEqual
 29775 ;;		_Command
 29776 ;;		_LCDScreenUpdate
 29777 ;; This function uses a non-reentrant model
 29778 ;;
 29779                           
 29780                           	psect	text73
 29781  0176A0                     __ptext73:
 29782                           	opt stack 0
 29783  0176A0                     _cleanBuffer:
 29784                           	opt stack 23
 29785                           
 29786                           ;MISC.c: 75: unsigned char i=0;
 29787                           
 29788                           ;incstack = 0
 29789  0176A0  0E00               	movlw	0
 29790  0176A2  0101               	movlb	1	; () banked
 29791  0176A4  6F15               	movwf	cleanBuffer@i& (0+255),b
 29792                           
 29793                           ;MISC.c: 76: for(i=0; i<count;i++)
 29794  0176A6  0E00               	movlw	0
 29795  0176A8  0101               	movlb	1	; () banked
 29796  0176AA  6F15               	movwf	cleanBuffer@i& (0+255),b
 29797  0176AC  D00F               	goto	l9852
 29798  0176AE                     l9848:
 29799                           
 29800                           ; BSR set to: 1
 29801                           ;MISC.c: 77: {
 29802                           ;MISC.c: 78: data[i]= 0;
 29803  0176AE  0101               	movlb	1	; () banked
 29804  0176B0  5115               	movf	cleanBuffer@i& (0+255),w,b
 29805  0176B2  0D01               	mullw	1
 29806  0176B4  50F3               	movf	prodl,w,c
 29807  0176B6  0101               	movlb	1	; () banked
 29808  0176B8  250E               	addwf	cleanBuffer@data& (0+255),w,b
 29809  0176BA  6ED9               	movwf	fsr2l,c
 29810  0176BC  50F4               	movf	prodh,w,c
 29811  0176BE  0101               	movlb	1	; () banked
 29812  0176C0  210F               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 29813  0176C2  6EDA               	movwf	fsr2h,c
 29814  0176C4  0E00               	movlw	0
 29815  0176C6  6EDF               	movwf	indf2,c
 29816                           
 29817                           ; BSR set to: 1
 29818  0176C8  0101               	movlb	1	; () banked
 29819  0176CA  2B15               	incf	cleanBuffer@i& (0+255),f,b
 29820  0176CC                     l9852:
 29821                           
 29822                           ; BSR set to: 1
 29823  0176CC  0101               	movlb	1	; () banked
 29824  0176CE  5115               	movf	cleanBuffer@i& (0+255),w,b
 29825  0176D0  0101               	movlb	1	; () banked
 29826  0176D2  6F12               	movwf	??_cleanBuffer& (0+255),b
 29827  0176D4  6B13               	clrf	(??_cleanBuffer+1)& (0+255),b
 29828  0176D6  0101               	movlb	1	; () banked
 29829  0176D8  5113               	movf	(??_cleanBuffer+1)& (0+255),w,b
 29830  0176DA  0A80               	xorlw	128
 29831  0176DC  0101               	movlb	1	; () banked
 29832  0176DE  6F14               	movwf	(??_cleanBuffer+2)& (0+255),b
 29833  0176E0  0101               	movlb	1	; () banked
 29834  0176E2  5110               	movf	cleanBuffer@count& (0+255),w,b
 29835  0176E4  0101               	movlb	1	; () banked
 29836  0176E6  5D12               	subwf	??_cleanBuffer& (0+255),w,b
 29837  0176E8  0101               	movlb	1	; () banked
 29838  0176EA  5111               	movf	(cleanBuffer@count+1)& (0+255),w,b
 29839  0176EC  0A80               	xorlw	128
 29840  0176EE  0101               	movlb	1	; () banked
 29841  0176F0  5914               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 29842  0176F2  B0D8               	btfsc	status,0,c
 29843                           
 29844                           ; BSR set to: 1
 29845                           
 29846                           ; BSR set to: 1
 29847  0176F4  0012               	return	
 29848  0176F6  D7DB               	goto	l9848
 29849  0176F8                     __end_of_cleanBuffer:
 29850                           	opt stack 0
 29851                           tblptru	equ	0xFF8
 29852                           tblptrh	equ	0xFF7
 29853                           tblptrl	equ	0xFF6
 29854                           tablat	equ	0xFF5
 29855                           prodh	equ	0xFF4
 29856                           prodl	equ	0xFF3
 29857                           intcon	equ	0xFF2
 29858                           postinc0	equ	0xFEE
 29859                           wreg	equ	0xFE8
 29860                           indf1	equ	0xFE7
 29861                           postinc1	equ	0xFE6
 29862                           postdec1	equ	0xFE5
 29863                           fsr1h	equ	0xFE2
 29864                           fsr1l	equ	0xFE1
 29865                           indf2	equ	0xFDF
 29866                           postinc2	equ	0xFDE
 29867                           postdec2	equ	0xFDD
 29868                           fsr2h	equ	0xFDA
 29869                           fsr2l	equ	0xFD9
 29870                           status	equ	0xFD8
 29871                           
 29872 ;; *************** function _InternalADC_Read *****************
 29873 ;; Defined at:
 29874 ;;		line 110 in file "ADC.c"
 29875 ;; Parameters:    Size  Location     Type
 29876 ;;  channel         1    wreg     unsigned char 
 29877 ;; Auto vars:     Size  Location     Type
 29878 ;;  channel         1   33[BANK1 ] unsigned char 
 29879 ;; Return value:  Size  Location     Type
 29880 ;;                  2   29[BANK1 ] int 
 29881 ;; Registers used:
 29882 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29883 ;; Tracked objects:
 29884 ;;		On entry : 0/0
 29885 ;;		On exit  : 0/0
 29886 ;;		Unchanged: 0/0
 29887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29888 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 29889 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 29890 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 29891 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 29892 ;;Total ram usage:        5 bytes
 29893 ;; Hardware stack levels used:    1
 29894 ;; Hardware stack levels required when called:    9
 29895 ;; This function calls:
 29896 ;;		_UARTstring
 29897 ;; This function is called by:
 29898 ;;		_Command
 29899 ;;		_RTC_INIT
 29900 ;; This function uses a non-reentrant model
 29901 ;;
 29902                           
 29903                           	psect	text74
 29904  0174B4                     __ptext74:
 29905                           	opt stack 0
 29906  0174B4                     _InternalADC_Read:
 29907                           	opt stack 19
 29908                           
 29909                           ; BSR set to: 1
 29910                           ;incstack = 0
 29911                           ;InternalADC_Read@channel stored from wreg
 29912  0174B4  0101               	movlb	1	; () banked
 29913  0174B6  6F21               	movwf	InternalADC_Read@channel& (0+255),b
 29914                           
 29915                           ; BSR set to: 1
 29916                           ;ADC.c: 112: ADCON0 =0;
 29917  0174B8  0E00               	movlw	0
 29918  0174BA  6EC2               	movwf	4034,c	;volatile
 29919                           
 29920                           ; BSR set to: 1
 29921                           ;ADC.c: 113: if(channel > 10)
 29922  0174BC  0E0A               	movlw	10
 29923  0174BE  0101               	movlb	1	; () banked
 29924  0174C0  6521               	cpfsgt	InternalADC_Read@channel& (0+255),b
 29925  0174C2  D00F               	goto	l11608
 29926                           
 29927                           ; BSR set to: 1
 29928                           ;ADC.c: 114: {
 29929                           ;ADC.c: 115: UARTstring("ADC Channel Out of Bounds");
 29930  0174C4  0EF5               	movlw	high STR_314
 29931  0174C6  0101               	movlb	1	; () banked
 29932  0174C8  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 29933  0174CA  0EBB               	movlw	low STR_314
 29934  0174CC  0101               	movlb	1	; () banked
 29935  0174CE  6F19               	movwf	UARTstring@data& (0+255),b
 29936  0174D0  EC36  F0B3         	call	_UARTstring	;wreg free
 29937                           
 29938                           ;ADC.c: 116: return 0;
 29939  0174D4  0E00               	movlw	0
 29940  0174D6  0101               	movlb	1	; () banked
 29941  0174D8  6F1E               	movwf	(?_InternalADC_Read+1)& (0+255),b
 29942  0174DA  0E00               	movlw	0
 29943  0174DC  0101               	movlb	1	; () banked
 29944  0174DE  6F1D               	movwf	?_InternalADC_Read& (0+255),b
 29945  0174E0  0012               	return	
 29946  0174E2                     l11608:
 29947                           
 29948                           ; BSR set to: 1
 29949                           ;ADC.c: 117: }
 29950                           ;ADC.c: 118: ADCON0 |= (channel << 2);
 29951  0174E2  0101               	movlb	1	; () banked
 29952  0174E4  4521               	rlncf	InternalADC_Read@channel& (0+255),w,b
 29953  0174E6  46E8               	rlncf	wreg,f,c
 29954  0174E8  0BFC               	andlw	252
 29955  0174EA  12C2               	iorwf	4034,f,c	;volatile
 29956                           
 29957                           ;ADC.c: 119: ADCON2 |= 0b10100000;
 29958  0174EC  0EA0               	movlw	160
 29959  0174EE  12C0               	iorwf	4032,f,c	;volatile
 29960                           
 29961                           ;ADC.c: 120: ADCON2 |= 0b00000110;
 29962  0174F0  0E06               	movlw	6
 29963  0174F2  12C0               	iorwf	4032,f,c	;volatile
 29964                           
 29965                           ; BSR set to: 1
 29966                           ;ADC.c: 121: ADCON0 |= 0b00000001;
 29967  0174F4  80C2               	bsf	4034,0,c	;volatile
 29968                           
 29969                           ; BSR set to: 1
 29970                           ;ADC.c: 122: (PIE1bits.ADIE=0);
 29971  0174F6  9C9D               	bcf	3997,6,c	;volatile
 29972                           
 29973                           ; BSR set to: 1
 29974                           ;ADC.c: 123: ADCON0 |= 0b00000010;
 29975  0174F8  82C2               	bsf	4034,1,c	;volatile
 29976  0174FA                     l883:
 29977                           
 29978                           ; BSR set to: 1
 29979  0174FA  B2C2               	btfsc	4034,1,c	;volatile
 29980  0174FC  D7FE               	goto	l883
 29981                           
 29982                           ; BSR set to: 1
 29983                           ;ADC.c: 125: return ((ADRESH << 8) + ADRESL);
 29984                           
 29985                           ; BSR set to: 1
 29986  0174FE  50C4               	movf	4036,w,c	;volatile
 29987  017500  0101               	movlb	1	; () banked
 29988  017502  6F20               	movwf	(??_InternalADC_Read+1)& (0+255),b
 29989  017504  6B1F               	clrf	??_InternalADC_Read& (0+255),b
 29990  017506  50C3               	movf	4035,w,c	;volatile
 29991  017508  0101               	movlb	1	; () banked
 29992  01750A  251F               	addwf	??_InternalADC_Read& (0+255),w,b
 29993  01750C  0101               	movlb	1	; () banked
 29994  01750E  6F1D               	movwf	?_InternalADC_Read& (0+255),b
 29995  017510  0E00               	movlw	0
 29996  017512  0101               	movlb	1	; () banked
 29997  017514  2120               	addwfc	(??_InternalADC_Read+1)& (0+255),w,b
 29998  017516  0101               	movlb	1	; () banked
 29999  017518  6F1E               	movwf	(?_InternalADC_Read+1)& (0+255),b
 30000  01751A  0012               	return	
 30001  01751C                     __end_of_InternalADC_Read:
 30002                           	opt stack 0
 30003                           tblptru	equ	0xFF8
 30004                           tblptrh	equ	0xFF7
 30005                           tblptrl	equ	0xFF6
 30006                           tablat	equ	0xFF5
 30007                           prodh	equ	0xFF4
 30008                           prodl	equ	0xFF3
 30009                           intcon	equ	0xFF2
 30010                           postinc0	equ	0xFEE
 30011                           wreg	equ	0xFE8
 30012                           indf1	equ	0xFE7
 30013                           postinc1	equ	0xFE6
 30014                           postdec1	equ	0xFE5
 30015                           fsr1h	equ	0xFE2
 30016                           fsr1l	equ	0xFE1
 30017                           indf2	equ	0xFDF
 30018                           postinc2	equ	0xFDE
 30019                           postdec2	equ	0xFDD
 30020                           fsr2h	equ	0xFDA
 30021                           fsr2l	equ	0xFD9
 30022                           status	equ	0xFD8
 30023                           
 30024 ;; *************** function _UARTstring *****************
 30025 ;; Defined at:
 30026 ;;		line 235 in file "UART.c"
 30027 ;; Parameters:    Size  Location     Type
 30028 ;;  data            2   25[BANK1 ] PTR unsigned char 
 30029 ;;		 -> STR_314(26), STR_313(3), STR_311(18), STR_309(18), 
 30030 ;;		 -> STR_305(20), STR_293(24), STR_282(3), STR_280(15), 
 30031 ;;		 -> STR_279(22), STR_278(50), STR_277(7), STR_276(6), 
 30032 ;;		 -> STR_275(11), STR_274(17), STR_273(12), STR_272(13), 
 30033 ;;		 -> STR_271(10), STR_270(12), STR_265(28), STR_264(68), 
 30034 ;;		 -> STR_263(9), STR_262(11), STR_261(23), STR_259(19), 
 30035 ;;		 -> STR_257(20), STR_254(20), STR_245(21), STR_244(61), 
 30036 ;;		 -> STR_243(69), STR_242(7), STR_241(7), STR_240(10), 
 30037 ;;		 -> STR_239(11), STR_238(29), STR_237(13), STR_236(33), 
 30038 ;;		 -> STR_235(25), STR_234(28), STR_233(3), STR_232(26), 
 30039 ;;		 -> STR_231(2), STR_230(34), STR_229(37), STR_226(24), 
 30040 ;;		 -> STR_222(3), STR_212(13), STR_211(73), STR_210(5), 
 30041 ;;		 -> STR_209(12), STR_208(17), STR_202(28), STR_200(30), 
 30042 ;;		 -> STR_198(33), STR_191(42), STR_190(62), STR_189(26), 
 30043 ;;		 -> STR_185(43), STR_183(48), STR_181(27), STR_174(42), 
 30044 ;;		 -> STR_173(66), STR_172(25), STR_170(49), Command@buf(200), 
 30045 ;;		 -> STR_166(33), STR_164(38), STR_162(27), STR_161(28), 
 30046 ;;		 -> STR_151(37), STR_150(68), STR_149(18), STR_148(15), 
 30047 ;;		 -> STR_147(11), STR_146(28), STR_144(18), STR_142(32), 
 30048 ;;		 -> STR_138(31), STR_134(38), STR_121(24), STR_120(68), 
 30049 ;;		 -> STR_119(10), STR_118(6), STR_117(8), STR_116(11), 
 30050 ;;		 -> STR_115(21), STR_113(16), STR_111(19), STR_108(18), 
 30051 ;;		 -> STR_105(16), STR_102(15), STR_99(22), STR_87(27), 
 30052 ;;		 -> STR_86(68), STR_85(7), STR_84(8), STR_83(11), 
 30053 ;;		 -> STR_82(24), STR_80(19), STR_78(19), STR_75(18), 
 30054 ;;		 -> STR_72(25), STR_63(17), STR_62(68), STR_61(8), 
 30055 ;;		 -> STR_60(7), STR_59(11), STR_58(17), STR_56(12), 
 30056 ;;		 -> STR_54(9), STR_51(8), STR_48(13), STR_45(9), 
 30057 ;;		 -> STR_42(8), STR_39(13), STR_34(4), STR_33(22), 
 30058 ;;		 -> STR_27(22), STR_26(3), SetBaud@buf(50), STR_20(4), 
 30059 ;;		 -> STR_19(29), STR_9(12), STR_7(3), Version(20), 
 30060 ;;		 -> STR_6(19), STR_5(38), low_isr@TEMP_Rxdata(100), STR_4(2), 
 30061 ;;		 -> STR_3(2), STR_2(2), STR_1(2), 
 30062 ;; Auto vars:     Size  Location     Type
 30063 ;;		None
 30064 ;; Return value:  Size  Location     Type
 30065 ;;		None               void
 30066 ;; Registers used:
 30067 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30068 ;; Tracked objects:
 30069 ;;		On entry : 0/0
 30070 ;;		On exit  : 0/0
 30071 ;;		Unchanged: 0/0
 30072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30073 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30075 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30076 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 30077 ;;Total ram usage:        4 bytes
 30078 ;; Hardware stack levels used:    1
 30079 ;; Hardware stack levels required when called:    8
 30080 ;; This function calls:
 30081 ;;		_UARTchar
 30082 ;; This function is called by:
 30083 ;;		_main
 30084 ;;		_SetBaud
 30085 ;;		_Command
 30086 ;;		_InternalADC_Read
 30087 ;; This function uses a non-reentrant model
 30088 ;;
 30089                           
 30090                           	psect	text75
 30091  01666C                     __ptext75:
 30092                           	opt stack 0
 30093  01666C                     _UARTstring:
 30094                           	opt stack 21
 30095  01666C                     l430:
 30096                           
 30097                           ;UART.c: 238: {
 30098                           ;UART.c: 239: if(*data != 0)
 30099  01666C  0101               	movlb	1	; () banked
 30100  01666E  C119  FFF6         	movff	UARTstring@data,tblptrl
 30101  016672  0101               	movlb	1	; () banked
 30102  016674  C11A  FFF7         	movff	UARTstring@data+1,tblptrh
 30103  016678  0E00               	movlw	low (__mediumconst shr (0+16))
 30104  01667A  6EF8               	movwf	tblptru,c
 30105  01667C  0E0C               	movlw	(high __ramtop+-1)
 30106  01667E  64F7               	cpfsgt	tblptrh,c
 30107  016680  D003               	bra	u12677
 30108  016682  0008               	tblrd		*
 30109  016684  50F5               	movf	tablat,w,c
 30110  016686  D005               	bra	u12670
 30111  016688                     u12677:
 30112  016688  CFF6 FFE1          	movff	tblptrl,fsr1l
 30113  01668C  CFF7 FFE2          	movff	tblptrh,fsr1h
 30114  016690  50E7               	movf	indf1,w,c
 30115  016692                     u12670:
 30116  016692  0900               	iorlw	0
 30117  016694  B4D8               	btfsc	status,2,c
 30118  016696  D01D               	goto	l10178
 30119                           
 30120                           ;UART.c: 240: {
 30121                           ;UART.c: 241: UARTchar(*data, 0, 0);
 30122  016698  0E00               	movlw	0
 30123  01669A  0101               	movlb	1	; () banked
 30124  01669C  6F15               	movwf	UARTchar@NinethBit_override& (0+255),b
 30125  01669E  0E00               	movlw	0
 30126  0166A0  0101               	movlb	1	; () banked
 30127  0166A2  6F16               	movwf	UARTchar@NinethBit_override_data& (0+255),b
 30128  0166A4  0101               	movlb	1	; () banked
 30129  0166A6  C119  FFF6         	movff	UARTstring@data,tblptrl
 30130  0166AA  0101               	movlb	1	; () banked
 30131  0166AC  C11A  FFF7         	movff	UARTstring@data+1,tblptrh
 30132  0166B0  0E00               	movlw	low (__mediumconst shr (0+16))
 30133  0166B2  6EF8               	movwf	tblptru,c
 30134  0166B4  0E0C               	movlw	(high __ramtop+-1)
 30135  0166B6  64F7               	cpfsgt	tblptrh,c
 30136  0166B8  D003               	bra	u12697
 30137  0166BA  0008               	tblrd		*
 30138  0166BC  50F5               	movf	tablat,w,c
 30139  0166BE  D005               	bra	u12690
 30140  0166C0                     u12697:
 30141  0166C0  CFF6 FFE1          	movff	tblptrl,fsr1l
 30142  0166C4  CFF7 FFE2          	movff	tblptrh,fsr1h
 30143  0166C8  50E7               	movf	indf1,w,c
 30144  0166CA                     u12690:
 30145  0166CA  EC15  F0B8         	call	_UARTchar
 30146  0166CE                     l432:
 30147  0166CE  A2AC               	btfss	4012,1,c	;volatile
 30148  0166D0  D7FE               	goto	l432
 30149  0166D2                     l10178:
 30150                           
 30151                           ;UART.c: 243: }
 30152                           ;UART.c: 244: } while( *data++);
 30153  0166D2  0101               	movlb	1	; () banked
 30154  0166D4  5119               	movf	UARTstring@data& (0+255),w,b
 30155  0166D6  0101               	movlb	1	; () banked
 30156  0166D8  6F1B               	movwf	??_UARTstring& (0+255),b
 30157  0166DA  0101               	movlb	1	; () banked
 30158  0166DC  511A               	movf	(UARTstring@data+1)& (0+255),w,b
 30159  0166DE  0101               	movlb	1	; () banked
 30160  0166E0  6F1C               	movwf	(??_UARTstring+1)& (0+255),b
 30161  0166E2  0101               	movlb	1	; () banked
 30162  0166E4  4B19               	infsnz	UARTstring@data& (0+255),f,b
 30163  0166E6  2B1A               	incf	(UARTstring@data+1)& (0+255),f,b
 30164  0166E8  C11B  FFF6         	movff	??_UARTstring,tblptrl
 30165  0166EC  C11C  FFF7         	movff	??_UARTstring+1,tblptrh
 30166  0166F0  0E00               	movlw	low (__mediumconst shr (0+16))
 30167  0166F2  6EF8               	movwf	tblptru,c
 30168  0166F4  0E0C               	movlw	(high __ramtop+-1)
 30169  0166F6  64F7               	cpfsgt	tblptrh,c
 30170  0166F8  D003               	bra	u12717
 30171  0166FA  0008               	tblrd		*
 30172  0166FC  50F5               	movf	tablat,w,c
 30173  0166FE  D005               	bra	u12710
 30174  016700                     u12717:
 30175  016700  CFF6 FFE1          	movff	tblptrl,fsr1l
 30176  016704  CFF7 FFE2          	movff	tblptrh,fsr1h
 30177  016708  50E7               	movf	indf1,w,c
 30178  01670A                     u12710:
 30179  01670A  0900               	iorlw	0
 30180  01670C  B4D8               	btfsc	status,2,c
 30181  01670E  0012               	return	
 30182  016710  D7AD               	goto	l430
 30183  016712                     __end_of_UARTstring:
 30184                           	opt stack 0
 30185                           tblptru	equ	0xFF8
 30186                           tblptrh	equ	0xFF7
 30187                           tblptrl	equ	0xFF6
 30188                           tablat	equ	0xFF5
 30189                           prodh	equ	0xFF4
 30190                           prodl	equ	0xFF3
 30191                           intcon	equ	0xFF2
 30192                           postinc0	equ	0xFEE
 30193                           wreg	equ	0xFE8
 30194                           indf1	equ	0xFE7
 30195                           postinc1	equ	0xFE6
 30196                           postdec1	equ	0xFE5
 30197                           fsr1h	equ	0xFE2
 30198                           fsr1l	equ	0xFE1
 30199                           indf2	equ	0xFDF
 30200                           postinc2	equ	0xFDE
 30201                           postdec2	equ	0xFDD
 30202                           fsr2h	equ	0xFDA
 30203                           fsr2l	equ	0xFD9
 30204                           status	equ	0xFD8
 30205                           
 30206 ;; *************** function _UARTchar *****************
 30207 ;; Defined at:
 30208 ;;		line 197 in file "UART.c"
 30209 ;; Parameters:    Size  Location     Type
 30210 ;;  data            1    wreg     unsigned char 
 30211 ;;  NinethBit_ov    1   21[BANK1 ] unsigned char 
 30212 ;;  NinethBit_ov    1   22[BANK1 ] unsigned char 
 30213 ;; Auto vars:     Size  Location     Type
 30214 ;;  data            1   24[BANK1 ] unsigned char 
 30215 ;; Return value:  Size  Location     Type
 30216 ;;		None               void
 30217 ;; Registers used:
 30218 ;;		wreg, status,2, status,0, cstack
 30219 ;; Tracked objects:
 30220 ;;		On entry : 0/0
 30221 ;;		On exit  : 0/0
 30222 ;;		Unchanged: 0/0
 30223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30224 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30225 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 30226 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 30227 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 30228 ;;Total ram usage:        4 bytes
 30229 ;; Hardware stack levels used:    1
 30230 ;; Hardware stack levels required when called:    7
 30231 ;; This function calls:
 30232 ;;		_CheckSum_byte
 30233 ;; This function is called by:
 30234 ;;		_UARTstring
 30235 ;;		_UARTstringWAIT
 30236 ;; This function uses a non-reentrant model
 30237 ;;
 30238                           
 30239                           	psect	text76
 30240  01702A                     __ptext76:
 30241                           	opt stack 0
 30242  01702A                     _UARTchar:
 30243                           	opt stack 21
 30244                           
 30245                           ;incstack = 0
 30246                           ;UARTchar@data stored from wreg
 30247  01702A  0101               	movlb	1	; () banked
 30248  01702C  6F18               	movwf	UARTchar@data& (0+255),b
 30249                           
 30250                           ; BSR set to: 1
 30251                           ;UART.c: 199: if(TXSTAbits.TX9)
 30252  01702E  ACAC               	btfss	4012,6,c	;volatile
 30253  017030  D037               	goto	l9926
 30254                           
 30255                           ; BSR set to: 1
 30256                           ;UART.c: 200: {
 30257                           ;UART.c: 202: if(!NinethBit_override)
 30258  017032  0101               	movlb	1	; () banked
 30259  017034  6715               	tstfsz	UARTchar@NinethBit_override& (0+255),b
 30260  017036  D029               	goto	l9924
 30261  017038  D01C               	goto	l9922
 30262  01703A                     l9916:
 30263                           
 30264                           ; BSR set to: 1
 30265                           ;UART.c: 208: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 3);
 30266  01703A  0101               	movlb	1	; () banked
 30267  01703C  C118  F10E         	movff	UARTchar@data,CheckSum_byte@This
 30268  017040  0101               	movlb	1	; () banked
 30269  017042  6B0F               	clrf	(CheckSum_byte@This+1)& (0+255),b
 30270  017044  0E03               	movlw	3
 30271  017046  0101               	movlb	1	; () banked
 30272  017048  6F10               	movwf	CheckSum_byte@Odd_Even& (0+255),b
 30273  01704A  ECF1  F0BA         	call	_CheckSum_byte	;wreg free
 30274  01704E  D00A               	goto	L42
 30275  017050                     l9918:
 30276                           
 30277                           ; BSR set to: 1
 30278                           ;UART.c: 211: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 2);
 30279  017050  0101               	movlb	1	; () banked
 30280  017052  C118  F10E         	movff	UARTchar@data,CheckSum_byte@This
 30281  017056  0101               	movlb	1	; () banked
 30282  017058  6B0F               	clrf	(CheckSum_byte@This+1)& (0+255),b
 30283  01705A  0E02               	movlw	2
 30284  01705C  0101               	movlb	1	; () banked
 30285  01705E  6F10               	movwf	CheckSum_byte@Odd_Even& (0+255),b
 30286  017060  ECF1  F0BA         	call	_CheckSum_byte	;wreg free
 30287  017064                     L42:
 30288  017064  0101               	movlb	1	; () banked
 30289  017066  6F17               	movwf	??_UARTchar& (0+255),b
 30290  017068  D015               	goto	L43
 30291  01706A                     l424:
 30292                           
 30293                           ; BSR set to: 1
 30294                           ;UART.c: 214: TXSTAbits.TX9D = 1;
 30295  01706A  80AC               	bsf	4012,0,c	;volatile
 30296                           
 30297                           ;UART.c: 215: break;
 30298  01706C  D019               	goto	l9926
 30299  01706E                     l425:
 30300                           
 30301                           ; BSR set to: 1
 30302                           ;UART.c: 217: TXSTAbits.TX9D = 0;
 30303  01706E  90AC               	bcf	4012,0,c	;volatile
 30304                           
 30305                           ;UART.c: 218: break;
 30306  017070  D017               	goto	l9926
 30307  017072                     l9922:
 30308                           
 30309                           ; BSR set to: 1
 30310  017072  0101               	movlb	1	; () banked
 30311  017074  5196               	movf	_PARITY& (0+255),w,b
 30312                           
 30313                           ; Switch size 1, requested type "space"
 30314                           ; Number of cases is 3, Range of values is 1 to 3
 30315                           ; switch strategies available:
 30316                           ; Name         Instructions Cycles
 30317                           ; simple_byte           10     6 (average)
 30318                           ;	Chosen strategy is simple_byte
 30319  017076  0A01               	xorlw	1	; case 1
 30320  017078  B4D8               	btfsc	status,2,c
 30321  01707A  D7DF               	goto	l9916
 30322  01707C  0A03               	xorlw	3	; case 2
 30323  01707E  B4D8               	btfsc	status,2,c
 30324  017080  D7E7               	goto	l9918
 30325  017082  0A01               	xorlw	1	; case 3
 30326  017084  B4D8               	btfsc	status,2,c
 30327  017086  D7F1               	goto	l424
 30328  017088  D7F2               	goto	l425
 30329  01708A                     l9924:
 30330                           
 30331                           ; BSR set to: 1
 30332                           ;UART.c: 221: else
 30333                           ;UART.c: 222: {
 30334                           ;UART.c: 223: TXSTAbits.TX9D = (NinethBit_override_data & 0x01);
 30335  01708A  C116  F117         	movff	UARTchar@NinethBit_override_data,??_UARTchar
 30336  01708E  0E01               	movlw	1
 30337  017090  0101               	movlb	1	; () banked
 30338  017092  1717               	andwf	??_UARTchar& (0+255),f,b
 30339  017094                     L43:
 30340  017094  50AC               	movf	4012,w,c	;volatile
 30341  017096  0101               	movlb	1	; () banked
 30342  017098  1917               	xorwf	??_UARTchar& (0+255),w,b
 30343  01709A  0BFE               	andlw	-2
 30344  01709C  1917               	xorwf	??_UARTchar& (0+255),w,b
 30345  01709E  6EAC               	movwf	4012,c	;volatile
 30346  0170A0                     l9926:
 30347                           
 30348                           ; BSR set to: 1
 30349                           ;UART.c: 224: }
 30350                           ;UART.c: 225: }
 30351                           ;UART.c: 226: TX_OLD = data;
 30352  0170A0  C118  F0D8         	movff	UARTchar@data,_TX_OLD
 30353                           
 30354                           ; BSR set to: 1
 30355                           ;UART.c: 227: TXREG = data;
 30356  0170A4  C118  FFAD         	movff	UARTchar@data,4013	;volatile
 30357                           
 30358                           ; BSR set to: 1
 30359  0170A8  0012               	return	
 30360  0170AA                     __end_of_UARTchar:
 30361                           	opt stack 0
 30362                           tblptru	equ	0xFF8
 30363                           tblptrh	equ	0xFF7
 30364                           tblptrl	equ	0xFF6
 30365                           tablat	equ	0xFF5
 30366                           prodh	equ	0xFF4
 30367                           prodl	equ	0xFF3
 30368                           intcon	equ	0xFF2
 30369                           postinc0	equ	0xFEE
 30370                           wreg	equ	0xFE8
 30371                           indf1	equ	0xFE7
 30372                           postinc1	equ	0xFE6
 30373                           postdec1	equ	0xFE5
 30374                           fsr1h	equ	0xFE2
 30375                           fsr1l	equ	0xFE1
 30376                           indf2	equ	0xFDF
 30377                           postinc2	equ	0xFDE
 30378                           postdec2	equ	0xFDD
 30379                           fsr2h	equ	0xFDA
 30380                           fsr2l	equ	0xFD9
 30381                           status	equ	0xFD8
 30382                           
 30383 ;; *************** function _CheckSum_byte *****************
 30384 ;; Defined at:
 30385 ;;		line 343 in file "MISC.c"
 30386 ;; Parameters:    Size  Location     Type
 30387 ;;  This            2   14[BANK1 ] unsigned int 
 30388 ;;  Odd_Even        1   16[BANK1 ] unsigned char 
 30389 ;; Auto vars:     Size  Location     Type
 30390 ;;  ThisTemp        2   17[BANK1 ] unsigned int 
 30391 ;;  i               1   20[BANK1 ] unsigned char 
 30392 ;;  Parity          1   19[BANK1 ] unsigned char 
 30393 ;; Return value:  Size  Location     Type
 30394 ;;                  1    wreg      unsigned char 
 30395 ;; Registers used:
 30396 ;;		wreg, status,2, status,0
 30397 ;; Tracked objects:
 30398 ;;		On entry : 0/0
 30399 ;;		On exit  : 0/0
 30400 ;;		Unchanged: 0/0
 30401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30402 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 30403 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 30404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30405 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 30406 ;;Total ram usage:        7 bytes
 30407 ;; Hardware stack levels used:    1
 30408 ;; Hardware stack levels required when called:    6
 30409 ;; This function calls:
 30410 ;;		Nothing
 30411 ;; This function is called by:
 30412 ;;		_UARTchar
 30413 ;; This function uses a non-reentrant model
 30414 ;;
 30415                           
 30416                           	psect	text77
 30417  0175E2                     __ptext77:
 30418                           	opt stack 0
 30419  0175E2                     _CheckSum_byte:
 30420                           	opt stack 21
 30421                           
 30422                           ;MISC.c: 345: char i = 0;
 30423                           
 30424                           ; BSR set to: 1
 30425                           ;incstack = 0
 30426  0175E2  0E00               	movlw	0
 30427  0175E4  0101               	movlb	1	; () banked
 30428  0175E6  6F14               	movwf	CheckSum_byte@i& (0+255),b
 30429                           
 30430                           ;MISC.c: 346: unsigned char Parity = 0;
 30431  0175E8  0E00               	movlw	0
 30432  0175EA  0101               	movlb	1	; () banked
 30433  0175EC  6F13               	movwf	CheckSum_byte@Parity& (0+255),b
 30434                           
 30435                           ; BSR set to: 1
 30436                           ;MISC.c: 347: unsigned int ThisTemp = This;
 30437  0175EE  C10E  F111         	movff	CheckSum_byte@This,CheckSum_byte@ThisTemp
 30438  0175F2  C10F  F112         	movff	CheckSum_byte@This+1,CheckSum_byte@ThisTemp+1
 30439                           
 30440                           ;MISC.c: 349: for (i =0; i<8; i++)
 30441  0175F6  0E00               	movlw	0
 30442  0175F8  0101               	movlb	1	; () banked
 30443  0175FA  6F14               	movwf	CheckSum_byte@i& (0+255),b
 30444  0175FC  D00B               	goto	L44
 30445  0175FE                     l331:
 30446                           
 30447                           ; BSR set to: 1
 30448                           ;MISC.c: 350: {
 30449                           ;MISC.c: 351: if((ThisTemp & 0x01) == 1)
 30450  0175FE  0101               	movlb	1	; () banked
 30451  017600  A111               	btfss	CheckSum_byte@ThisTemp& (0+255),0,b
 30452  017602  D002               	goto	l333
 30453                           
 30454                           ; BSR set to: 1
 30455                           ;MISC.c: 352: {
 30456                           ;MISC.c: 353: Parity++;
 30457  017604  0101               	movlb	1	; () banked
 30458  017606  2B13               	incf	CheckSum_byte@Parity& (0+255),f,b
 30459  017608                     l333:
 30460                           
 30461                           ; BSR set to: 1
 30462                           ;MISC.c: 354: }
 30463                           ;MISC.c: 355: ThisTemp >>= 1;
 30464  017608  0101               	movlb	1	; () banked
 30465  01760A  90D8               	bcf	status,0,c
 30466  01760C  3312               	rrcf	(CheckSum_byte@ThisTemp+1)& (0+255),f,b
 30467  01760E  3311               	rrcf	CheckSum_byte@ThisTemp& (0+255),f,b
 30468  017610  0101               	movlb	1	; () banked
 30469  017612  2B14               	incf	CheckSum_byte@i& (0+255),f,b
 30470  017614                     L44:
 30471                           
 30472                           ; BSR set to: 1
 30473  017614  0E07               	movlw	7
 30474  017616  0101               	movlb	1	; () banked
 30475  017618  6514               	cpfsgt	CheckSum_byte@i& (0+255),b
 30476  01761A  D7F1               	goto	l331
 30477                           
 30478                           ; BSR set to: 1
 30479                           ;MISC.c: 356: }
 30480                           ;MISC.c: 357: if(Odd_Even == 3)
 30481                           
 30482                           ; BSR set to: 1
 30483  01761C  0101               	movlb	1	; () banked
 30484  01761E  5110               	movf	CheckSum_byte@Odd_Even& (0+255),w,b
 30485  017620  0A03               	xorlw	3
 30486  017622  A4D8               	btfss	status,2,c
 30487  017624  D007               	goto	l334
 30488                           
 30489                           ; BSR set to: 1
 30490                           ;MISC.c: 358: {
 30491                           ;MISC.c: 359: if(Parity % 2 == 0)
 30492  017626  0101               	movlb	1	; () banked
 30493  017628  B113               	btfsc	CheckSum_byte@Parity& (0+255),0,b
 30494  01762A  D002               	goto	l9784
 30495                           
 30496                           ; BSR set to: 1
 30497                           ;MISC.c: 360: {
 30498                           ;MISC.c: 361: return 1;
 30499  01762C  0E01               	movlw	1
 30500  01762E  0012               	return	
 30501  017630                     l9784:
 30502                           
 30503                           ; BSR set to: 1
 30504                           ;MISC.c: 362: }
 30505                           ;MISC.c: 363: return 0;
 30506  017630  0E00               	movlw	0
 30507  017632  0012               	return	
 30508  017634                     l334:
 30509                           
 30510                           ; BSR set to: 1
 30511                           ;MISC.c: 365: else
 30512                           ;MISC.c: 366: {
 30513                           ;MISC.c: 367: if(Parity % 2 == 1)
 30514  017634  0101               	movlb	1	; () banked
 30515  017636  A113               	btfss	CheckSum_byte@Parity& (0+255),0,b
 30516  017638  D002               	goto	l9794
 30517                           
 30518                           ; BSR set to: 1
 30519                           ;MISC.c: 368: {
 30520                           ;MISC.c: 369: return 1;
 30521  01763A  0E01               	movlw	1
 30522  01763C  0012               	return	
 30523  01763E                     l9794:
 30524                           
 30525                           ; BSR set to: 1
 30526                           ;MISC.c: 370: }
 30527                           ;MISC.c: 371: return 0;
 30528  01763E  0E00               	movlw	0
 30529  017640  0012               	return	
 30530  017642                     __end_of_CheckSum_byte:
 30531                           	opt stack 0
 30532                           tblptru	equ	0xFF8
 30533                           tblptrh	equ	0xFF7
 30534                           tblptrl	equ	0xFF6
 30535                           tablat	equ	0xFF5
 30536                           prodh	equ	0xFF4
 30537                           prodl	equ	0xFF3
 30538                           intcon	equ	0xFF2
 30539                           postinc0	equ	0xFEE
 30540                           wreg	equ	0xFE8
 30541                           indf1	equ	0xFE7
 30542                           postinc1	equ	0xFE6
 30543                           postdec1	equ	0xFE5
 30544                           fsr1h	equ	0xFE2
 30545                           fsr1l	equ	0xFE1
 30546                           indf2	equ	0xFDF
 30547                           postinc2	equ	0xFDE
 30548                           postdec2	equ	0xFDD
 30549                           fsr2h	equ	0xFDA
 30550                           fsr2l	equ	0xFD9
 30551                           status	equ	0xFD8
 30552                           
 30553 ;; *************** function _ISNUMBER *****************
 30554 ;; Defined at:
 30555 ;;		line 380 in file "MISC.c"
 30556 ;; Parameters:    Size  Location     Type
 30557 ;;  ascii           1    wreg     unsigned char 
 30558 ;; Auto vars:     Size  Location     Type
 30559 ;;  ascii           1   14[BANK1 ] unsigned char 
 30560 ;; Return value:  Size  Location     Type
 30561 ;;                  1    wreg      unsigned char 
 30562 ;; Registers used:
 30563 ;;		wreg, status,2, status,0
 30564 ;; Tracked objects:
 30565 ;;		On entry : 0/0
 30566 ;;		On exit  : 0/0
 30567 ;;		Unchanged: 0/0
 30568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30570 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 30571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30572 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 30573 ;;Total ram usage:        1 bytes
 30574 ;; Hardware stack levels used:    1
 30575 ;; Hardware stack levels required when called:    6
 30576 ;; This function calls:
 30577 ;;		Nothing
 30578 ;; This function is called by:
 30579 ;;		_Command
 30580 ;; This function uses a non-reentrant model
 30581 ;;
 30582                           
 30583                           	psect	text78
 30584  017BCC                     __ptext78:
 30585                           	opt stack 0
 30586  017BCC                     _ISNUMBER:
 30587                           	opt stack 22
 30588                           
 30589                           ; BSR set to: 1
 30590                           ;incstack = 0
 30591                           ;ISNUMBER@ascii stored from wreg
 30592  017BCC  0101               	movlb	1	; () banked
 30593  017BCE  6F0E               	movwf	ISNUMBER@ascii& (0+255),b
 30594                           
 30595                           ; BSR set to: 1
 30596                           ;MISC.c: 382: if(ascii >= '0' && ascii <='9')
 30597  017BD0  0E2F               	movlw	47
 30598  017BD2  0101               	movlb	1	; () banked
 30599  017BD4  650E               	cpfsgt	ISNUMBER@ascii& (0+255),b
 30600  017BD6  D007               	goto	l11434
 30601                           
 30602                           ; BSR set to: 1
 30603  017BD8  0E3A               	movlw	58
 30604  017BDA  0101               	movlb	1	; () banked
 30605  017BDC  5D0E               	subwf	ISNUMBER@ascii& (0+255),w,b
 30606  017BDE  B0D8               	btfsc	status,0,c
 30607  017BE0  D002               	goto	l11434
 30608                           
 30609                           ; BSR set to: 1
 30610                           ;MISC.c: 383: {
 30611                           ;MISC.c: 384: return 1;
 30612  017BE2  0E01               	movlw	1
 30613  017BE4  0012               	return	
 30614  017BE6                     l11434:
 30615                           
 30616                           ; BSR set to: 1
 30617                           ;MISC.c: 386: else
 30618                           ;MISC.c: 387: {
 30619                           ;MISC.c: 388: return 0;
 30620  017BE6  0E00               	movlw	0
 30621  017BE8  0012               	return	
 30622  017BEA                     __end_of_ISNUMBER:
 30623                           	opt stack 0
 30624                           tblptru	equ	0xFF8
 30625                           tblptrh	equ	0xFF7
 30626                           tblptrl	equ	0xFF6
 30627                           tablat	equ	0xFF5
 30628                           prodh	equ	0xFF4
 30629                           prodl	equ	0xFF3
 30630                           intcon	equ	0xFF2
 30631                           postinc0	equ	0xFEE
 30632                           wreg	equ	0xFE8
 30633                           indf1	equ	0xFE7
 30634                           postinc1	equ	0xFE6
 30635                           postdec1	equ	0xFE5
 30636                           fsr1h	equ	0xFE2
 30637                           fsr1l	equ	0xFE1
 30638                           indf2	equ	0xFDF
 30639                           postinc2	equ	0xFDE
 30640                           postdec2	equ	0xFDD
 30641                           fsr2h	equ	0xFDA
 30642                           fsr2l	equ	0xFD9
 30643                           status	equ	0xFD8
 30644                           
 30645 ;; *************** function _GetEnteredNumber *****************
 30646 ;; Defined at:
 30647 ;;		line 200 in file "MISC.c"
 30648 ;; Parameters:    Size  Location     Type
 30649 ;;  This            2   26[BANK1 ] PTR unsigned char 
 30650 ;;		 -> Rxdata(100), 
 30651 ;; Auto vars:     Size  Location     Type
 30652 ;;  temp            4   37[BANK1 ] long 
 30653 ;;  negative        1   36[BANK1 ] unsigned char 
 30654 ;;  i               1   35[BANK1 ] unsigned char 
 30655 ;; Return value:  Size  Location     Type
 30656 ;;                  4   26[BANK1 ] long 
 30657 ;; Registers used:
 30658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30659 ;; Tracked objects:
 30660 ;;		On entry : 0/0
 30661 ;;		On exit  : 0/0
 30662 ;;		Unchanged: 0/0
 30663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30664 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 30665 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 30666 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 30667 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 30668 ;;Total ram usage:       15 bytes
 30669 ;; Hardware stack levels used:    1
 30670 ;; Hardware stack levels required when called:    7
 30671 ;; This function calls:
 30672 ;;		___lmul
 30673 ;; This function is called by:
 30674 ;;		_Command
 30675 ;; This function uses a non-reentrant model
 30676 ;;
 30677                           
 30678                           	psect	text79
 30679  014CD4                     __ptext79:
 30680                           	opt stack 0
 30681  014CD4                     _GetEnteredNumber:
 30682                           	opt stack 21
 30683                           
 30684                           ;MISC.c: 202: unsigned char i =0;
 30685                           
 30686                           ; BSR set to: 1
 30687                           ;incstack = 0
 30688  014CD4  0E00               	movlw	0
 30689  014CD6  0101               	movlb	1	; () banked
 30690  014CD8  6F23               	movwf	GetEnteredNumber@i& (0+255),b
 30691                           
 30692                           ;MISC.c: 203: long temp =0;
 30693  014CDA  0E00               	movlw	0
 30694  014CDC  0101               	movlb	1	; () banked
 30695  014CDE  6F25               	movwf	GetEnteredNumber@temp& (0+255),b
 30696  014CE0  0E00               	movlw	0
 30697  014CE2  0101               	movlb	1	; () banked
 30698  014CE4  6F26               	movwf	(GetEnteredNumber@temp+1)& (0+255),b
 30699  014CE6  0E00               	movlw	0
 30700  014CE8  0101               	movlb	1	; () banked
 30701  014CEA  6F27               	movwf	(GetEnteredNumber@temp+2)& (0+255),b
 30702  014CEC  0E00               	movlw	0
 30703  014CEE  0101               	movlb	1	; () banked
 30704  014CF0  6F28               	movwf	(GetEnteredNumber@temp+3)& (0+255),b
 30705                           
 30706                           ;MISC.c: 204: unsigned char negative =0;
 30707  014CF2  0E00               	movlw	0
 30708  014CF4  0101               	movlb	1	; () banked
 30709  014CF6  6F24               	movwf	GetEnteredNumber@negative& (0+255),b
 30710                           
 30711                           ;MISC.c: 205: while(*This != '=' && *This != 0)
 30712  014CF8  D003               	goto	l11282
 30713  014CFA                     l11280:
 30714                           
 30715                           ; BSR set to: 1
 30716                           ;MISC.c: 206: {
 30717                           ;MISC.c: 207: This++;
 30718  014CFA  0101               	movlb	1	; () banked
 30719  014CFC  4B1A               	infsnz	GetEnteredNumber@This& (0+255),f,b
 30720  014CFE  2B1B               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 30721  014D00                     l11282:
 30722                           
 30723                           ; BSR set to: 1
 30724  014D00  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 30725  014D04  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 30726  014D08  50DF               	movf	indf2,w,c
 30727  014D0A  0A3D               	xorlw	61
 30728  014D0C  B4D8               	btfsc	status,2,c
 30729  014D0E  D007               	goto	l11286
 30730                           
 30731                           ; BSR set to: 1
 30732  014D10  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 30733  014D14  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 30734  014D18  50DF               	movf	indf2,w,c
 30735  014D1A  A4D8               	btfss	status,2,c
 30736  014D1C  D7EE               	goto	l11280
 30737  014D1E                     l11286:
 30738                           
 30739                           ; BSR set to: 1
 30740                           ;MISC.c: 209: }
 30741                           ;MISC.c: 210: if(*This == 0)
 30742  014D1E  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 30743  014D22  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 30744  014D26  50DF               	movf	indf2,w,c
 30745  014D28  A4D8               	btfss	status,2,c
 30746  014D2A  D00D               	goto	l11292
 30747                           
 30748                           ; BSR set to: 1
 30749                           ;MISC.c: 211: {
 30750                           ;MISC.c: 212: return 2147483647L;
 30751  014D2C  0EFF               	movlw	255
 30752  014D2E  0101               	movlb	1	; () banked
 30753  014D30  6F1A               	movwf	?_GetEnteredNumber& (0+255),b
 30754  014D32  0EFF               	movlw	255
 30755  014D34  0101               	movlb	1	; () banked
 30756  014D36  6F1B               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 30757  014D38  0EFF               	movlw	255
 30758  014D3A  0101               	movlb	1	; () banked
 30759  014D3C  6F1C               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 30760  014D3E  0E7F               	movlw	127
 30761  014D40  0101               	movlb	1	; () banked
 30762  014D42  6F1D               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 30763  014D44  0012               	return	
 30764  014D46                     l11292:
 30765                           
 30766                           ; BSR set to: 1
 30767                           ;MISC.c: 213: }
 30768                           ;MISC.c: 214: This++;
 30769  014D46  0101               	movlb	1	; () banked
 30770  014D48  4B1A               	infsnz	GetEnteredNumber@This& (0+255),f,b
 30771  014D4A  2B1B               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 30772                           
 30773                           ; BSR set to: 1
 30774                           ;MISC.c: 215: if(*This == ' ')
 30775  014D4C  0E20               	movlw	32
 30776  014D4E  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 30777  014D52  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 30778  014D56  62DF               	cpfseq	indf2,c
 30779  014D58  D001               	goto	l11298
 30780  014D5A  D08D               	goto	l11330
 30781  014D5C                     l11298:
 30782                           
 30783                           ; BSR set to: 1
 30784                           ;MISC.c: 220: else if (*This == '=')
 30785  014D5C  0E3D               	movlw	61
 30786  014D5E  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 30787  014D62  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 30788  014D66  62DF               	cpfseq	indf2,c
 30789  014D68  D00D               	goto	l11306
 30790                           
 30791                           ; BSR set to: 1
 30792                           ;MISC.c: 221: {
 30793                           ;MISC.c: 222: return 2147483646L;
 30794  014D6A  0EFE               	movlw	254
 30795  014D6C  0101               	movlb	1	; () banked
 30796  014D6E  6F1A               	movwf	?_GetEnteredNumber& (0+255),b
 30797  014D70  0EFF               	movlw	255
 30798  014D72  0101               	movlb	1	; () banked
 30799  014D74  6F1B               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 30800  014D76  0EFF               	movlw	255
 30801  014D78  0101               	movlb	1	; () banked
 30802  014D7A  6F1C               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 30803  014D7C  0E7F               	movlw	127
 30804  014D7E  0101               	movlb	1	; () banked
 30805  014D80  6F1D               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 30806  014D82  0012               	return	
 30807  014D84                     l11306:
 30808                           
 30809                           ; BSR set to: 1
 30810                           ;MISC.c: 224: else if(*This == '-')
 30811  014D84  0E2D               	movlw	45
 30812  014D86  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 30813  014D8A  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 30814  014D8E  62DF               	cpfseq	indf2,c
 30815  014D90  D004               	goto	l11312
 30816                           
 30817                           ; BSR set to: 1
 30818                           ;MISC.c: 225: {
 30819                           ;MISC.c: 226: negative = 1;
 30820  014D92  0E01               	movlw	1
 30821  014D94  0101               	movlb	1	; () banked
 30822  014D96  6F24               	movwf	GetEnteredNumber@negative& (0+255),b
 30823  014D98  D06E               	goto	l11330
 30824  014D9A                     l11312:
 30825                           
 30826                           ; BSR set to: 1
 30827                           ;MISC.c: 230: else if(*This == 0)
 30828  014D9A  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 30829  014D9E  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 30830  014DA2  50DF               	movf	indf2,w,c
 30831  014DA4  A4D8               	btfss	status,2,c
 30832  014DA6  D06A               	goto	l11332
 30833                           
 30834                           ; BSR set to: 1
 30835                           ;MISC.c: 231: {
 30836                           ;MISC.c: 232: return 2147483645L;
 30837  014DA8  0EFD               	movlw	253
 30838  014DAA  0101               	movlb	1	; () banked
 30839  014DAC  6F1A               	movwf	?_GetEnteredNumber& (0+255),b
 30840  014DAE  0EFF               	movlw	255
 30841  014DB0  0101               	movlb	1	; () banked
 30842  014DB2  6F1B               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 30843  014DB4  0EFF               	movlw	255
 30844  014DB6  0101               	movlb	1	; () banked
 30845  014DB8  6F1C               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 30846  014DBA  0E7F               	movlw	127
 30847  014DBC  0101               	movlb	1	; () banked
 30848  014DBE  6F1D               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 30849  014DC0  0012               	return	
 30850  014DC2                     l11318:
 30851                           
 30852                           ; BSR set to: 1
 30853                           ;MISC.c: 235: {
 30854                           ;MISC.c: 236: temp = temp * 10;
 30855  014DC2  C125  F10E         	movff	GetEnteredNumber@temp,___lmul@multiplier
 30856  014DC6  C126  F10F         	movff	GetEnteredNumber@temp+1,___lmul@multiplier+1
 30857  014DCA  C127  F110         	movff	GetEnteredNumber@temp+2,___lmul@multiplier+2
 30858  014DCE  C128  F111         	movff	GetEnteredNumber@temp+3,___lmul@multiplier+3
 30859  014DD2  0E0A               	movlw	10
 30860  014DD4  0101               	movlb	1	; () banked
 30861  014DD6  6F12               	movwf	___lmul@multiplicand& (0+255),b
 30862  014DD8  0E00               	movlw	0
 30863  014DDA  0101               	movlb	1	; () banked
 30864  014DDC  6F13               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30865  014DDE  0E00               	movlw	0
 30866  014DE0  0101               	movlb	1	; () banked
 30867  014DE2  6F14               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30868  014DE4  0E00               	movlw	0
 30869  014DE6  0101               	movlb	1	; () banked
 30870  014DE8  6F15               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30871  014DEA  EC51  F0B7         	call	___lmul	;wreg free
 30872  014DEE  C10E  F125         	movff	?___lmul,GetEnteredNumber@temp
 30873  014DF2  C10F  F126         	movff	?___lmul+1,GetEnteredNumber@temp+1
 30874  014DF6  C110  F127         	movff	?___lmul+2,GetEnteredNumber@temp+2
 30875  014DFA  C111  F128         	movff	?___lmul+3,GetEnteredNumber@temp+3
 30876                           
 30877                           ;MISC.c: 237: temp += *This - 48;
 30878  014DFE  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 30879  014E02  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 30880  014E06  50DF               	movf	indf2,w,c
 30881  014E08  0101               	movlb	1	; () banked
 30882  014E0A  6F1E               	movwf	??_GetEnteredNumber& (0+255),b
 30883  014E0C  0ED0               	movlw	208
 30884  014E0E  0101               	movlb	1	; () banked
 30885  014E10  251E               	addwf	??_GetEnteredNumber& (0+255),w,b
 30886  014E12  0101               	movlb	1	; () banked
 30887  014E14  6F1F               	movwf	(??_GetEnteredNumber+1)& (0+255),b
 30888  014E16  0101               	movlb	1	; () banked
 30889  014E18  6B20               	clrf	(??_GetEnteredNumber+2)& (0+255),b
 30890  014E1A  0EFF               	movlw	255
 30891  014E1C  2320               	addwfc	(??_GetEnteredNumber+2)& (0+255),f,b
 30892  014E1E  0101               	movlb	1	; () banked
 30893  014E20  6B21               	clrf	(??_GetEnteredNumber+3)& (0+255),b
 30894  014E22  0101               	movlb	1	; () banked
 30895  014E24  BF20               	btfsc	(??_GetEnteredNumber+2)& (0+255),7,b
 30896  014E26  0721               	decf	(??_GetEnteredNumber+3)& (0+255),f,b
 30897  014E28  0101               	movlb	1	; () banked
 30898  014E2A  5121               	movf	(??_GetEnteredNumber+3)& (0+255),w,b
 30899  014E2C  0101               	movlb	1	; () banked
 30900  014E2E  6F22               	movwf	(??_GetEnteredNumber+4)& (0+255),b
 30901  014E30  0101               	movlb	1	; () banked
 30902  014E32  511F               	movf	(??_GetEnteredNumber+1)& (0+255),w,b
 30903  014E34  0101               	movlb	1	; () banked
 30904  014E36  2725               	addwf	GetEnteredNumber@temp& (0+255),f,b
 30905  014E38  0101               	movlb	1	; () banked
 30906  014E3A  5120               	movf	(??_GetEnteredNumber+2)& (0+255),w,b
 30907  014E3C  0101               	movlb	1	; () banked
 30908  014E3E  2326               	addwfc	(GetEnteredNumber@temp+1)& (0+255),f,b
 30909  014E40  0101               	movlb	1	; () banked
 30910  014E42  5121               	movf	(??_GetEnteredNumber+3)& (0+255),w,b
 30911  014E44  0101               	movlb	1	; () banked
 30912  014E46  2327               	addwfc	(GetEnteredNumber@temp+2)& (0+255),f,b
 30913  014E48  0101               	movlb	1	; () banked
 30914  014E4A  5122               	movf	(??_GetEnteredNumber+4)& (0+255),w,b
 30915  014E4C  0101               	movlb	1	; () banked
 30916  014E4E  2328               	addwfc	(GetEnteredNumber@temp+3)& (0+255),f,b
 30917                           
 30918                           ; BSR set to: 1
 30919                           ;MISC.c: 238: i++;
 30920  014E50  0101               	movlb	1	; () banked
 30921  014E52  2B23               	incf	GetEnteredNumber@i& (0+255),f,b
 30922                           
 30923                           ; BSR set to: 1
 30924                           ;MISC.c: 239: if(i>32)
 30925  014E54  0E20               	movlw	32
 30926  014E56  0101               	movlb	1	; () banked
 30927  014E58  6523               	cpfsgt	GetEnteredNumber@i& (0+255),b
 30928  014E5A  D00D               	goto	l11330
 30929                           
 30930                           ; BSR set to: 1
 30931                           ;MISC.c: 240: {
 30932                           ;MISC.c: 241: return 2147483644L;
 30933  014E5C  0EFC               	movlw	252
 30934  014E5E  0101               	movlb	1	; () banked
 30935  014E60  6F1A               	movwf	?_GetEnteredNumber& (0+255),b
 30936  014E62  0EFF               	movlw	255
 30937  014E64  0101               	movlb	1	; () banked
 30938  014E66  6F1B               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 30939  014E68  0EFF               	movlw	255
 30940  014E6A  0101               	movlb	1	; () banked
 30941  014E6C  6F1C               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 30942  014E6E  0E7F               	movlw	127
 30943  014E70  0101               	movlb	1	; () banked
 30944  014E72  6F1D               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 30945  014E74  0012               	return	
 30946  014E76                     l11330:
 30947                           
 30948                           ; BSR set to: 1
 30949                           ;MISC.c: 242: }
 30950                           ;MISC.c: 243: This++;
 30951  014E76  0101               	movlb	1	; () banked
 30952  014E78  4B1A               	infsnz	GetEnteredNumber@This& (0+255),f,b
 30953  014E7A  2B1B               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 30954  014E7C                     l11332:
 30955                           
 30956                           ; BSR set to: 1
 30957  014E7C  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 30958  014E80  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 30959  014E84  0E2F               	movlw	47
 30960  014E86  64DF               	cpfsgt	indf2,c
 30961  014E88  D007               	goto	l11336
 30962                           
 30963                           ; BSR set to: 1
 30964  014E8A  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 30965  014E8E  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 30966  014E92  0E39               	movlw	57
 30967  014E94  64DF               	cpfsgt	indf2,c
 30968  014E96  D795               	goto	l11318
 30969  014E98                     l11336:
 30970                           
 30971                           ; BSR set to: 1
 30972                           ;MISC.c: 244: }
 30973                           ;MISC.c: 245: if(negative)
 30974  014E98  0101               	movlb	1	; () banked
 30975  014E9A  5124               	movf	GetEnteredNumber@negative& (0+255),w,b
 30976  014E9C  B4D8               	btfsc	status,2,c
 30977  014E9E  D00F               	goto	l11340
 30978                           
 30979                           ; BSR set to: 1
 30980                           ;MISC.c: 246: {
 30981                           ;MISC.c: 247: temp = (temp * -1);
 30982  014EA0  0101               	movlb	1	; () banked
 30983  014EA2  1F28               	comf	(GetEnteredNumber@temp+3)& (0+255),f,b
 30984  014EA4  0101               	movlb	1	; () banked
 30985  014EA6  1F27               	comf	(GetEnteredNumber@temp+2)& (0+255),f,b
 30986  014EA8  0101               	movlb	1	; () banked
 30987  014EAA  1F26               	comf	(GetEnteredNumber@temp+1)& (0+255),f,b
 30988  014EAC  0101               	movlb	1	; () banked
 30989  014EAE  6D25               	negf	GetEnteredNumber@temp& (0+255),b
 30990  014EB0  0E00               	movlw	0
 30991  014EB2  0101               	movlb	1	; () banked
 30992  014EB4  2326               	addwfc	(GetEnteredNumber@temp+1)& (0+255),f,b
 30993  014EB6  0101               	movlb	1	; () banked
 30994  014EB8  2327               	addwfc	(GetEnteredNumber@temp+2)& (0+255),f,b
 30995  014EBA  0101               	movlb	1	; () banked
 30996  014EBC  2328               	addwfc	(GetEnteredNumber@temp+3)& (0+255),f,b
 30997  014EBE                     l11340:
 30998                           
 30999                           ; BSR set to: 1
 31000                           ;MISC.c: 248: }
 31001                           ;MISC.c: 249: return temp;
 31002  014EBE  C125  F11A         	movff	GetEnteredNumber@temp,?_GetEnteredNumber
 31003  014EC2  C126  F11B         	movff	GetEnteredNumber@temp+1,?_GetEnteredNumber+1
 31004  014EC6  C127  F11C         	movff	GetEnteredNumber@temp+2,?_GetEnteredNumber+2
 31005  014ECA  C128  F11D         	movff	GetEnteredNumber@temp+3,?_GetEnteredNumber+3
 31006  014ECE  0012               	return	
 31007  014ED0                     __end_of_GetEnteredNumber:
 31008                           	opt stack 0
 31009                           tblptru	equ	0xFF8
 31010                           tblptrh	equ	0xFF7
 31011                           tblptrl	equ	0xFF6
 31012                           tablat	equ	0xFF5
 31013                           prodh	equ	0xFF4
 31014                           prodl	equ	0xFF3
 31015                           intcon	equ	0xFF2
 31016                           postinc0	equ	0xFEE
 31017                           wreg	equ	0xFE8
 31018                           indf1	equ	0xFE7
 31019                           postinc1	equ	0xFE6
 31020                           postdec1	equ	0xFE5
 31021                           fsr1h	equ	0xFE2
 31022                           fsr1l	equ	0xFE1
 31023                           indf2	equ	0xFDF
 31024                           postinc2	equ	0xFDE
 31025                           postdec2	equ	0xFDD
 31026                           fsr2h	equ	0xFDA
 31027                           fsr2l	equ	0xFD9
 31028                           status	equ	0xFD8
 31029                           
 31030 ;; *************** function ___lmul *****************
 31031 ;; Defined at:
 31032 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
 31033 ;; Parameters:    Size  Location     Type
 31034 ;;  multiplier      4   14[BANK1 ] unsigned long 
 31035 ;;  multiplicand    4   18[BANK1 ] unsigned long 
 31036 ;; Auto vars:     Size  Location     Type
 31037 ;;  product         4   22[BANK1 ] unsigned long 
 31038 ;; Return value:  Size  Location     Type
 31039 ;;                  4   14[BANK1 ] unsigned long 
 31040 ;; Registers used:
 31041 ;;		wreg, status,2, status,0
 31042 ;; Tracked objects:
 31043 ;;		On entry : 0/0
 31044 ;;		On exit  : 0/0
 31045 ;;		Unchanged: 0/0
 31046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31047 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 31048 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 31049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31050 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 31051 ;;Total ram usage:       12 bytes
 31052 ;; Hardware stack levels used:    1
 31053 ;; Hardware stack levels required when called:    6
 31054 ;; This function calls:
 31055 ;;		Nothing
 31056 ;; This function is called by:
 31057 ;;		_GetEnteredNumber
 31058 ;; This function uses a non-reentrant model
 31059 ;;
 31060                           
 31061                           	psect	text80
 31062  016EA2                     __ptext80:
 31063                           	opt stack 0
 31064  016EA2                     ___lmul:
 31065                           	opt stack 21
 31066                           
 31067                           ; BSR set to: 1
 31068                           ;incstack = 0
 31069  016EA2  0E00               	movlw	0
 31070  016EA4  0101               	movlb	1	; () banked
 31071  016EA6  6F16               	movwf	___lmul@product& (0+255),b
 31072  016EA8  0E00               	movlw	0
 31073  016EAA  0101               	movlb	1	; () banked
 31074  016EAC  6F17               	movwf	(___lmul@product+1)& (0+255),b
 31075  016EAE  0E00               	movlw	0
 31076  016EB0  0101               	movlb	1	; () banked
 31077  016EB2  6F18               	movwf	(___lmul@product+2)& (0+255),b
 31078  016EB4  0E00               	movlw	0
 31079  016EB6  0101               	movlb	1	; () banked
 31080  016EB8  6F19               	movwf	(___lmul@product+3)& (0+255),b
 31081  016EBA                     l10874:
 31082                           
 31083                           ; BSR set to: 1
 31084  016EBA  0101               	movlb	1	; () banked
 31085  016EBC  A10E               	btfss	___lmul@multiplier& (0+255),0,b
 31086  016EBE  D010               	goto	l10878
 31087                           
 31088                           ; BSR set to: 1
 31089  016EC0  0101               	movlb	1	; () banked
 31090  016EC2  5112               	movf	___lmul@multiplicand& (0+255),w,b
 31091  016EC4  0101               	movlb	1	; () banked
 31092  016EC6  2716               	addwf	___lmul@product& (0+255),f,b
 31093  016EC8  0101               	movlb	1	; () banked
 31094  016ECA  5113               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 31095  016ECC  0101               	movlb	1	; () banked
 31096  016ECE  2317               	addwfc	(___lmul@product+1)& (0+255),f,b
 31097  016ED0  0101               	movlb	1	; () banked
 31098  016ED2  5114               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 31099  016ED4  0101               	movlb	1	; () banked
 31100  016ED6  2318               	addwfc	(___lmul@product+2)& (0+255),f,b
 31101  016ED8  0101               	movlb	1	; () banked
 31102  016EDA  5115               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 31103  016EDC  0101               	movlb	1	; () banked
 31104  016EDE  2319               	addwfc	(___lmul@product+3)& (0+255),f,b
 31105  016EE0                     l10878:
 31106                           
 31107                           ; BSR set to: 1
 31108  016EE0  0101               	movlb	1	; () banked
 31109  016EE2  90D8               	bcf	status,0,c
 31110  016EE4  0101               	movlb	1	; () banked
 31111  016EE6  3712               	rlcf	___lmul@multiplicand& (0+255),f,b
 31112  016EE8  0101               	movlb	1	; () banked
 31113  016EEA  3713               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 31114  016EEC  0101               	movlb	1	; () banked
 31115  016EEE  3714               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 31116  016EF0  0101               	movlb	1	; () banked
 31117  016EF2  3715               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 31118                           
 31119                           ; BSR set to: 1
 31120  016EF4  0101               	movlb	1	; () banked
 31121  016EF6  90D8               	bcf	status,0,c
 31122  016EF8  0101               	movlb	1	; () banked
 31123  016EFA  3311               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 31124  016EFC  0101               	movlb	1	; () banked
 31125  016EFE  3310               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 31126  016F00  0101               	movlb	1	; () banked
 31127  016F02  330F               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 31128  016F04  0101               	movlb	1	; () banked
 31129  016F06  330E               	rrcf	___lmul@multiplier& (0+255),f,b
 31130  016F08  0101               	movlb	1	; () banked
 31131  016F0A  5111               	movf	(___lmul@multiplier+3)& (0+255),w,b
 31132  016F0C  110E               	iorwf	___lmul@multiplier& (0+255),w,b
 31133  016F0E  110F               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 31134  016F10  1110               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 31135  016F12  A4D8               	btfss	status,2,c
 31136  016F14  D7D2               	goto	l10874
 31137                           
 31138                           ; BSR set to: 1
 31139  016F16  C116  F10E         	movff	___lmul@product,?___lmul
 31140  016F1A  C117  F10F         	movff	___lmul@product+1,?___lmul+1
 31141  016F1E  C118  F110         	movff	___lmul@product+2,?___lmul+2
 31142  016F22  C119  F111         	movff	___lmul@product+3,?___lmul+3
 31143                           
 31144                           ; BSR set to: 1
 31145  016F26  0012               	return	
 31146  016F28                     __end_of___lmul:
 31147                           	opt stack 0
 31148                           tblptru	equ	0xFF8
 31149                           tblptrh	equ	0xFF7
 31150                           tblptrl	equ	0xFF6
 31151                           tablat	equ	0xFF5
 31152                           prodh	equ	0xFF4
 31153                           prodl	equ	0xFF3
 31154                           intcon	equ	0xFF2
 31155                           postinc0	equ	0xFEE
 31156                           wreg	equ	0xFE8
 31157                           indf1	equ	0xFE7
 31158                           postinc1	equ	0xFE6
 31159                           postdec1	equ	0xFE5
 31160                           fsr1h	equ	0xFE2
 31161                           fsr1l	equ	0xFE1
 31162                           indf2	equ	0xFDF
 31163                           postinc2	equ	0xFDE
 31164                           postdec2	equ	0xFDD
 31165                           fsr2h	equ	0xFDA
 31166                           fsr2l	equ	0xFD9
 31167                           status	equ	0xFD8
 31168                           
 31169 ;; *************** function _low_isr *****************
 31170 ;; Defined at:
 31171 ;;		line 101 in file "interrupts.c"
 31172 ;; Parameters:    Size  Location     Type
 31173 ;;		None
 31174 ;; Auto vars:     Size  Location     Type
 31175 ;;  TEMP_Rxdata   100    0[BANK0 ] unsigned char [100]
 31176 ;;  LCD_TEMP       16  100[BANK0 ] unsigned char [16]
 31177 ;;  i               2  116[BANK0 ] int 
 31178 ;;  rx              1  119[BANK0 ] unsigned char 
 31179 ;;  j               1  118[BANK0 ] unsigned char 
 31180 ;; Return value:  Size  Location     Type
 31181 ;;		None               void
 31182 ;; Registers used:
 31183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31184 ;; Tracked objects:
 31185 ;;		On entry : 0/0
 31186 ;;		On exit  : 0/0
 31187 ;;		Unchanged: 0/0
 31188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31190 ;;      Locals:         0     120       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31191 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31192 ;;      Totals:        20     120       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31193 ;;Total ram usage:      140 bytes
 31194 ;; Hardware stack levels used:    1
 31195 ;; Hardware stack levels required when called:    5
 31196 ;; This function calls:
 31197 ;;		_WriteUSART
 31198 ;;		i1_BufferCopy
 31199 ;;		i1_ClearLCD
 31200 ;;		i1_LCDPrintChar
 31201 ;;		i1_LCDPrintString
 31202 ;;		i1_ReadUSART
 31203 ;;		i1_SetLCDcursor
 31204 ;;		i1_UARTstring
 31205 ;;		i1_cleanBuffer
 31206 ;; This function is called by:
 31207 ;;		Interrupt level 1
 31208 ;; This function uses a non-reentrant model
 31209 ;;
 31210                           
 31211                           	psect	intcodelo
 31212  000018                     __pintcodelo:
 31213                           	opt stack 0
 31214  000018                     _low_isr:
 31215                           	opt stack 18
 31216                           
 31217                           ; BSR set to: 1
 31218                           ;incstack = 0
 31219  000018  CFD8 F016          	movff	status,??_low_isr+3
 31220  00001C  CFE8 F017          	movff	wreg,??_low_isr+4
 31221  000020  CFE0 F018          	movff	bsr,??_low_isr+5
 31222  000024  CFFA F019          	movff	pclath,??_low_isr+6
 31223  000028  CFFB F01A          	movff	pclatu,??_low_isr+7
 31224  00002C  CFE9 F01B          	movff	fsr0l,??_low_isr+8
 31225  000030  CFEA F01C          	movff	fsr0h,??_low_isr+9
 31226  000034  CFE1 F01D          	movff	fsr1l,??_low_isr+10
 31227  000038  CFE2 F01E          	movff	fsr1h,??_low_isr+11
 31228  00003C  CFD9 F01F          	movff	fsr2l,??_low_isr+12
 31229  000040  CFDA F020          	movff	fsr2h,??_low_isr+13
 31230  000044  CFF3 F021          	movff	prodl,??_low_isr+14
 31231  000048  CFF4 F022          	movff	prodh,??_low_isr+15
 31232  00004C  CFF6 F023          	movff	tblptrl,??_low_isr+16
 31233  000050  CFF7 F024          	movff	tblptrh,??_low_isr+17
 31234  000054  CFF8 F025          	movff	tblptru,??_low_isr+18
 31235  000058  CFF5 F026          	movff	tablat,??_low_isr+19
 31236                           
 31237                           ;interrupts.c: 110: unsigned char rx;
 31238                           ;interrupts.c: 111: unsigned char TEMP_Rxdata[100];
 31239                           ;interrupts.c: 112: unsigned char LCD_TEMP [16];
 31240                           ;interrupts.c: 113: int i=0;
 31241  00005C  0E00               	movlw	0
 31242  00005E  0100               	movlb	0	; () banked
 31243  000060  6FD5               	movwf	(low_isr@i+1)& (0+255),b
 31244  000062  0E00               	movlw	0
 31245  000064  0100               	movlb	0	; () banked
 31246  000066  6FD4               	movwf	low_isr@i& (0+255),b
 31247                           
 31248                           ;interrupts.c: 114: unsigned char j=0;
 31249  000068  0E00               	movlw	0
 31250  00006A  0100               	movlb	0	; () banked
 31251  00006C  6FD6               	movwf	low_isr@j& (0+255),b
 31252                           
 31253                           ; BSR set to: 0
 31254                           ;interrupts.c: 116: INTCONbits.PEIE = 0;
 31255  00006E  9CF2               	bcf	intcon,6,c	;volatile
 31256                           
 31257                           ; BSR set to: 0
 31258                           ;interrupts.c: 119: if(PIR1bits.RCIF == 1)
 31259  000070  AA9E               	btfss	3998,5,c	;volatile
 31260  000072  D168               	goto	i1l13212
 31261                           
 31262                           ; BSR set to: 0
 31263                           ;interrupts.c: 120: {
 31264                           ;interrupts.c: 121: PIE1bits.RCIE = 0;
 31265  000074  9A9D               	bcf	3997,5,c	;volatile
 31266                           
 31267                           ;interrupts.c: 122: RCSTAbits.CREN = 0;
 31268  000076  98AB               	bcf	4011,4,c	;volatile
 31269                           
 31270                           ; BSR set to: 0
 31271                           ;interrupts.c: 123: rx = ReadUSART();
 31272  000078  EC54  F0BD         	call	i1_ReadUSART	;wreg free
 31273  00007C  0100               	movlb	0	; () banked
 31274  00007E  6FD7               	movwf	low_isr@rx& (0+255),b
 31275                           
 31276                           ; BSR set to: 0
 31277                           ;interrupts.c: 125: if(TX_OLD == '>' && rx == '>' && bufferCount == 0)
 31278  000080  0100               	movlb	0	; () banked
 31279  000082  51D8               	movf	_TX_OLD& (0+255),w,b
 31280  000084  0A3E               	xorlw	62
 31281  000086  A4D8               	btfss	status,2,c
 31282  000088  D00A               	goto	i1l13122
 31283                           
 31284                           ; BSR set to: 0
 31285  00008A  0100               	movlb	0	; () banked
 31286  00008C  51D7               	movf	low_isr@rx& (0+255),w,b
 31287  00008E  0A3E               	xorlw	62
 31288  000090  A4D8               	btfss	status,2,c
 31289  000092  D005               	goto	i1l13122
 31290                           
 31291                           ; BSR set to: 0
 31292  000094  0100               	movlb	0	; () banked
 31293  000096  67D9               	tstfsz	_bufferCount& (0+255),b
 31294  000098  D002               	goto	i1l13122
 31295                           
 31296                           ; BSR set to: 0
 31297                           ;interrupts.c: 126: {
 31298                           ;interrupts.c: 127: __nop();
 31299  00009A  F000               	nop	
 31300                           
 31301                           ;interrupts.c: 128: }
 31302  00009C  D153               	goto	i1l13212
 31303  00009E                     i1l13122:
 31304                           
 31305                           ;interrupts.c: 129: else
 31306                           ;interrupts.c: 130: {
 31307                           ;interrupts.c: 131: if(rx != '\n' && rx != '\r')
 31308  00009E  0100               	movlb	0	; () banked
 31309  0000A0  51D7               	movf	low_isr@rx& (0+255),w,b
 31310  0000A2  0A0A               	xorlw	10
 31311  0000A4  B4D8               	btfsc	status,2,c
 31312  0000A6  D0CF               	goto	i1l13186
 31313                           
 31314                           ; BSR set to: 0
 31315  0000A8  0100               	movlb	0	; () banked
 31316  0000AA  51D7               	movf	low_isr@rx& (0+255),w,b
 31317  0000AC  0A0D               	xorlw	13
 31318  0000AE  B4D8               	btfsc	status,2,c
 31319  0000B0  D0CA               	goto	i1l13186
 31320                           
 31321                           ; BSR set to: 0
 31322                           ;interrupts.c: 132: {
 31323                           ;interrupts.c: 133: if(rx == 0x7f || rx == 0x08)
 31324  0000B2  0100               	movlb	0	; () banked
 31325  0000B4  51D7               	movf	low_isr@rx& (0+255),w,b
 31326  0000B6  0A7F               	xorlw	127
 31327  0000B8  B4D8               	btfsc	status,2,c
 31328  0000BA  D005               	goto	i1l13130
 31329                           
 31330                           ; BSR set to: 0
 31331  0000BC  0100               	movlb	0	; () banked
 31332  0000BE  51D7               	movf	low_isr@rx& (0+255),w,b
 31333  0000C0  0A08               	xorlw	8
 31334  0000C2  A4D8               	btfss	status,2,c
 31335  0000C4  D08C               	goto	i1l13168
 31336  0000C6                     i1l13130:
 31337                           
 31338                           ; BSR set to: 0
 31339                           ;interrupts.c: 134: {
 31340                           ;interrupts.c: 135: if(bufferCount !=0)
 31341  0000C6  0100               	movlb	0	; () banked
 31342  0000C8  51D9               	movf	_bufferCount& (0+255),w,b
 31343  0000CA  B4D8               	btfsc	status,2,c
 31344  0000CC  D0A5               	goto	i1l13178
 31345                           
 31346                           ; BSR set to: 0
 31347                           ;interrupts.c: 136: {
 31348                           ;interrupts.c: 137: UARTstring("\r");
 31349  0000CE  0EFF               	movlw	high STR_1
 31350  0000D0  6E0D               	movwf	i1UARTstring@data+1,c
 31351  0000D2  0EFD               	movlw	low STR_1
 31352  0000D4  6E0C               	movwf	i1UARTstring@data,c
 31353  0000D6  ECF0  F0B5         	call	i1_UARTstring	;wreg free
 31354                           
 31355                           ;interrupts.c: 138: for(i=0;i<=bufferCount;i++)
 31356  0000DA  0E00               	movlw	0
 31357  0000DC  0100               	movlb	0	; () banked
 31358  0000DE  6FD5               	movwf	(low_isr@i+1)& (0+255),b
 31359  0000E0  0E00               	movlw	0
 31360  0000E2  0100               	movlb	0	; () banked
 31361  0000E4  6FD4               	movwf	low_isr@i& (0+255),b
 31362  0000E6  D009               	goto	i1l13140
 31363  0000E8                     i1l13136:
 31364                           
 31365                           ; BSR set to: 0
 31366                           ;interrupts.c: 139: {
 31367                           ;interrupts.c: 140: UARTstring(" ");
 31368  0000E8  0EF9               	movlw	high (STR_223+15)
 31369  0000EA  6E0D               	movwf	i1UARTstring@data+1,c
 31370  0000EC  0E74               	movlw	low (STR_223+15)
 31371  0000EE  6E0C               	movwf	i1UARTstring@data,c
 31372  0000F0  ECF0  F0B5         	call	i1_UARTstring	;wreg free
 31373  0000F4  0100               	movlb	0	; () banked
 31374  0000F6  4BD4               	infsnz	low_isr@i& (0+255),f,b
 31375  0000F8  2BD5               	incf	(low_isr@i+1)& (0+255),f,b
 31376  0000FA                     i1l13140:
 31377                           
 31378                           ; BSR set to: 0
 31379  0000FA  0100               	movlb	0	; () banked
 31380  0000FC  51D9               	movf	_bufferCount& (0+255),w,b
 31381  0000FE  6E13               	movwf	??_low_isr& (0+255),c
 31382  000100  6A14               	clrf	(??_low_isr+1)& (0+255),c
 31383  000102  5014               	movf	??_low_isr+1,w,c
 31384  000104  0A80               	xorlw	128
 31385  000106  6E15               	movwf	(??_low_isr+2)& (0+255),c
 31386  000108  0100               	movlb	0	; () banked
 31387  00010A  51D4               	movf	low_isr@i& (0+255),w,b
 31388  00010C  5C13               	subwf	??_low_isr,w,c
 31389  00010E  0100               	movlb	0	; () banked
 31390  000110  51D5               	movf	(low_isr@i+1)& (0+255),w,b
 31391  000112  0A80               	xorlw	128
 31392  000114  5815               	subwfb	(??_low_isr+2)& (0+255),w,c
 31393  000116  B0D8               	btfsc	status,0,c
 31394  000118  D7E7               	goto	i1l13136
 31395                           
 31396                           ; BSR set to: 0
 31397                           ;interrupts.c: 141: }
 31398                           ;interrupts.c: 142: UARTstring("\r");
 31399                           
 31400                           ; BSR set to: 0
 31401  00011A  0EFF               	movlw	high STR_1
 31402  00011C  6E0D               	movwf	i1UARTstring@data+1,c
 31403  00011E  0EFD               	movlw	low STR_1
 31404  000120  6E0C               	movwf	i1UARTstring@data,c
 31405  000122  ECF0  F0B5         	call	i1_UARTstring	;wreg free
 31406                           
 31407                           ;interrupts.c: 143: UARTstring(">");
 31408  000126  0EF4               	movlw	high (STR_19+27)
 31409  000128  6E0D               	movwf	i1UARTstring@data+1,c
 31410  00012A  0EF7               	movlw	low (STR_19+27)
 31411  00012C  6E0C               	movwf	i1UARTstring@data,c
 31412  00012E  ECF0  F0B5         	call	i1_UARTstring	;wreg free
 31413                           
 31414                           ;interrupts.c: 144: bufferCount--;
 31415  000132  0100               	movlb	0	; () banked
 31416  000134  07D9               	decf	_bufferCount& (0+255),f,b
 31417                           
 31418                           ; BSR set to: 0
 31419                           ;interrupts.c: 145: TEMP_Rxdata[bufferCount] = 0;
 31420  000136  0100               	movlb	0	; () banked
 31421  000138  51D9               	movf	_bufferCount& (0+255),w,b
 31422  00013A  0D01               	mullw	1
 31423  00013C  0100               	movlb	0	; () banked
 31424  00013E  0E60               	movlw	low low_isr@TEMP_Rxdata
 31425  000140  24F3               	addwf	prodl,w,c
 31426  000142  6ED9               	movwf	fsr2l,c
 31427  000144  0100               	movlb	0	; () banked
 31428  000146  0E00               	movlw	high low_isr@TEMP_Rxdata
 31429  000148  20F4               	addwfc	prodh,w,c
 31430  00014A  6EDA               	movwf	fsr2h,c
 31431  00014C  0E00               	movlw	0
 31432  00014E  6EDF               	movwf	indf2,c
 31433                           
 31434                           ; BSR set to: 0
 31435                           ;interrupts.c: 146: UARTstring(TEMP_Rxdata);
 31436  000150  0100               	movlb	0	; () banked
 31437  000152  0E00               	movlw	high low_isr@TEMP_Rxdata
 31438  000154  6E0D               	movwf	i1UARTstring@data+1,c
 31439  000156  0100               	movlb	0	; () banked
 31440  000158  0E60               	movlw	low low_isr@TEMP_Rxdata
 31441  00015A  6E0C               	movwf	i1UARTstring@data,c
 31442  00015C  ECF0  F0B5         	call	i1_UARTstring	;wreg free
 31443                           
 31444                           ;interrupts.c: 147: if(bufferCount <15)
 31445  000160  0E0F               	movlw	15
 31446  000162  0100               	movlb	0	; () banked
 31447  000164  5DD9               	subwf	_bufferCount& (0+255),w,b
 31448  000166  B0D8               	btfsc	status,0,c
 31449  000168  D057               	goto	i1l13178
 31450                           
 31451                           ; BSR set to: 0
 31452                           ;interrupts.c: 148: {
 31453                           ;interrupts.c: 149: for(j=0; j<15;j++)
 31454  00016A  0E00               	movlw	0
 31455  00016C  0100               	movlb	0	; () banked
 31456  00016E  6FD6               	movwf	low_isr@j& (0+255),b
 31457  000170  D01A               	goto	L47
 31458  000172                     i1l13158:
 31459                           
 31460                           ; BSR set to: 0
 31461                           ;interrupts.c: 150: {
 31462                           ;interrupts.c: 151: LCD_TEMP[j] = TEMP_Rxdata[j];
 31463  000172  0100               	movlb	0	; () banked
 31464  000174  51D6               	movf	low_isr@j& (0+255),w,b
 31465  000176  0D01               	mullw	1
 31466  000178  0100               	movlb	0	; () banked
 31467  00017A  0E60               	movlw	low low_isr@TEMP_Rxdata
 31468  00017C  24F3               	addwf	prodl,w,c
 31469  00017E  6ED9               	movwf	fsr2l,c
 31470  000180  0100               	movlb	0	; () banked
 31471  000182  0E00               	movlw	high low_isr@TEMP_Rxdata
 31472  000184  20F4               	addwfc	prodh,w,c
 31473  000186  6EDA               	movwf	fsr2h,c
 31474  000188  0100               	movlb	0	; () banked
 31475  00018A  51D6               	movf	low_isr@j& (0+255),w,b
 31476  00018C  0D01               	mullw	1
 31477  00018E  0100               	movlb	0	; () banked
 31478  000190  0EC4               	movlw	low low_isr@LCD_TEMP
 31479  000192  24F3               	addwf	prodl,w,c
 31480  000194  6EE1               	movwf	fsr1l,c
 31481  000196  0100               	movlb	0	; () banked
 31482  000198  0E00               	movlw	high low_isr@LCD_TEMP
 31483  00019A  20F4               	addwfc	prodh,w,c
 31484  00019C  6EE2               	movwf	fsr1h,c
 31485  00019E  CFDF FFE7          	movff	indf2,indf1
 31486                           
 31487                           ; BSR set to: 0
 31488  0001A2  0100               	movlb	0	; () banked
 31489  0001A4  2BD6               	incf	low_isr@j& (0+255),f,b
 31490  0001A6                     L47:
 31491                           
 31492                           ; BSR set to: 0
 31493  0001A6  0E0E               	movlw	14
 31494  0001A8  0100               	movlb	0	; () banked
 31495  0001AA  65D6               	cpfsgt	low_isr@j& (0+255),b
 31496  0001AC  D7E2               	goto	i1l13158
 31497                           
 31498                           ; BSR set to: 0
 31499                           ;interrupts.c: 152: }
 31500                           ;interrupts.c: 153: ClearLCD();
 31501                           
 31502                           ; BSR set to: 0
 31503  0001AE  EC02  F0BE         	call	i1_ClearLCD	;wreg free
 31504                           
 31505                           ;interrupts.c: 154: SetLCDcursor(0, 0);
 31506  0001B2  0E00               	movlw	0
 31507  0001B4  6E0F               	movwf	i1SetLCDcursor@Col,c
 31508  0001B6  0E00               	movlw	0
 31509  0001B8  ECC1  F0BD         	call	i1_SetLCDcursor
 31510                           
 31511                           ;interrupts.c: 155: LCDPrintChar('>');
 31512  0001BC  0E3E               	movlw	62
 31513  0001BE  EC43  F0BE         	call	i1_LCDPrintChar
 31514                           
 31515                           ;interrupts.c: 156: SetLCDcursor(0, 1);
 31516  0001C2  0E01               	movlw	1
 31517  0001C4  6E0F               	movwf	i1SetLCDcursor@Col,c
 31518  0001C6  0E00               	movlw	0
 31519  0001C8  ECC1  F0BD         	call	i1_SetLCDcursor
 31520                           
 31521                           ;interrupts.c: 157: LCDPrintString(LCD_TEMP);
 31522  0001CC  0100               	movlb	0	; () banked
 31523  0001CE  0E00               	movlw	high low_isr@LCD_TEMP
 31524  0001D0  6E10               	movwf	i1LCDPrintString@Text+1,c
 31525  0001D2  0100               	movlb	0	; () banked
 31526  0001D4  0EC4               	movlw	low low_isr@LCD_TEMP
 31527  0001D6  6E0F               	movwf	i1LCDPrintString@Text,c
 31528  0001D8  EC25  F0BA         	call	i1_LCDPrintString	;wreg free
 31529  0001DC  D01D               	goto	i1l13178
 31530  0001DE                     i1l13168:
 31531                           
 31532                           ;interrupts.c: 161: else
 31533                           ;interrupts.c: 162: {
 31534                           ;interrupts.c: 163: WriteUSART(rx);
 31535  0001DE  0100               	movlb	0	; () banked
 31536  0001E0  51D7               	movf	low_isr@rx& (0+255),w,b
 31537  0001E2  EC21  F0BE         	call	_WriteUSART
 31538                           
 31539                           ;interrupts.c: 164: if(bufferCount < 15)
 31540  0001E6  0E0F               	movlw	15
 31541  0001E8  0100               	movlb	0	; () banked
 31542  0001EA  5DD9               	subwf	_bufferCount& (0+255),w,b
 31543  0001EC  B0D8               	btfsc	status,0,c
 31544  0001EE  D004               	goto	i1l13174
 31545                           
 31546                           ; BSR set to: 0
 31547                           ;interrupts.c: 165: {
 31548                           ;interrupts.c: 166: LCDPrintChar(rx);
 31549  0001F0  0100               	movlb	0	; () banked
 31550  0001F2  51D7               	movf	low_isr@rx& (0+255),w,b
 31551  0001F4  EC43  F0BE         	call	i1_LCDPrintChar
 31552  0001F8                     i1l13174:
 31553                           
 31554                           ;interrupts.c: 167: }
 31555                           ;interrupts.c: 168: TEMP_Rxdata[bufferCount] = rx;
 31556  0001F8  0100               	movlb	0	; () banked
 31557  0001FA  51D9               	movf	_bufferCount& (0+255),w,b
 31558  0001FC  0D01               	mullw	1
 31559  0001FE  0100               	movlb	0	; () banked
 31560  000200  0E60               	movlw	low low_isr@TEMP_Rxdata
 31561  000202  24F3               	addwf	prodl,w,c
 31562  000204  6ED9               	movwf	fsr2l,c
 31563  000206  0100               	movlb	0	; () banked
 31564  000208  0E00               	movlw	high low_isr@TEMP_Rxdata
 31565  00020A  20F4               	addwfc	prodh,w,c
 31566  00020C  6EDA               	movwf	fsr2h,c
 31567  00020E  0100               	movlb	0	; () banked
 31568  000210  C0D7  FFDF         	movff	low_isr@rx,indf2
 31569                           
 31570                           ; BSR set to: 0
 31571                           ;interrupts.c: 169: bufferCount++;
 31572  000214  0100               	movlb	0	; () banked
 31573  000216  2BD9               	incf	_bufferCount& (0+255),f,b
 31574  000218                     i1l13178:
 31575                           
 31576                           ;interrupts.c: 170: }
 31577                           ;interrupts.c: 171: if(bufferCount>=99)
 31578  000218  0E62               	movlw	98
 31579  00021A  0100               	movlb	0	; () banked
 31580  00021C  65D9               	cpfsgt	_bufferCount& (0+255),b
 31581  00021E  D092               	goto	i1l13212
 31582                           
 31583                           ; BSR set to: 0
 31584                           ;interrupts.c: 172: {
 31585                           ;interrupts.c: 173: UARTstring("\r\nBuffer overflow! Deleting Buffer \r\n");
 31586  000220  0EF2               	movlw	high STR_5
 31587  000222  6E0D               	movwf	i1UARTstring@data+1,c
 31588  000224  0EA6               	movlw	low STR_5
 31589  000226  6E0C               	movwf	i1UARTstring@data,c
 31590  000228  ECF0  F0B5         	call	i1_UARTstring	;wreg free
 31591                           
 31592                           ;interrupts.c: 174: cleanBuffer(TEMP_Rxdata, 100);
 31593  00022C  0100               	movlb	0	; () banked
 31594  00022E  0E00               	movlw	high low_isr@TEMP_Rxdata
 31595  000230  6E02               	movwf	i1cleanBuffer@data+1,c
 31596  000232  0100               	movlb	0	; () banked
 31597  000234  0E60               	movlw	low low_isr@TEMP_Rxdata
 31598  000236  6E01               	movwf	i1cleanBuffer@data,c
 31599  000238  0E00               	movlw	0
 31600  00023A  6E04               	movwf	i1cleanBuffer@count+1,c
 31601  00023C  0E64               	movlw	100
 31602  00023E  6E03               	movwf	i1cleanBuffer@count,c
 31603  000240  ECA1  F0BC         	call	i1_cleanBuffer	;wreg free
 31604  000244  D07C               	goto	L46
 31605  000246                     i1l13186:
 31606                           
 31607                           ; BSR set to: 0
 31608                           ;interrupts.c: 179: else if((rx == '\n' || rx == '\r') && bufferCount == 0)
 31609  000246  0100               	movlb	0	; () banked
 31610  000248  51D7               	movf	low_isr@rx& (0+255),w,b
 31611  00024A  0A0A               	xorlw	10
 31612  00024C  B4D8               	btfsc	status,2,c
 31613  00024E  D005               	goto	i1l64
 31614                           
 31615                           ; BSR set to: 0
 31616  000250  0100               	movlb	0	; () banked
 31617  000252  51D7               	movf	low_isr@rx& (0+255),w,b
 31618  000254  0A0D               	xorlw	13
 31619  000256  A4D8               	btfss	status,2,c
 31620  000258  D030               	goto	i1l62
 31621  00025A                     i1l64:
 31622                           
 31623                           ; BSR set to: 0
 31624  00025A  0100               	movlb	0	; () banked
 31625  00025C  67D9               	tstfsz	_bufferCount& (0+255),b
 31626  00025E  D02D               	goto	i1l62
 31627                           
 31628                           ; BSR set to: 0
 31629                           ;interrupts.c: 180: {
 31630                           ;interrupts.c: 181: TEMP_Rxdata[bufferCount] = rx;
 31631  000260  0100               	movlb	0	; () banked
 31632  000262  51D9               	movf	_bufferCount& (0+255),w,b
 31633  000264  0D01               	mullw	1
 31634  000266  0100               	movlb	0	; () banked
 31635  000268  0E60               	movlw	low low_isr@TEMP_Rxdata
 31636  00026A  24F3               	addwf	prodl,w,c
 31637  00026C  6ED9               	movwf	fsr2l,c
 31638  00026E  0100               	movlb	0	; () banked
 31639  000270  0E00               	movlw	high low_isr@TEMP_Rxdata
 31640  000272  20F4               	addwfc	prodh,w,c
 31641  000274  6EDA               	movwf	fsr2h,c
 31642  000276  0100               	movlb	0	; () banked
 31643  000278  C0D7  FFDF         	movff	low_isr@rx,indf2
 31644                           
 31645                           ; BSR set to: 0
 31646                           ;interrupts.c: 182: BufferCopy(TEMP_Rxdata, Rxdata, 100,0);
 31647  00027C  0100               	movlb	0	; () banked
 31648  00027E  0E00               	movlw	high low_isr@TEMP_Rxdata
 31649  000280  6E0A               	movwf	i1BufferCopy@from+1,c
 31650  000282  0100               	movlb	0	; () banked
 31651  000284  0E60               	movlw	low low_isr@TEMP_Rxdata
 31652  000286  6E09               	movwf	i1BufferCopy@from,c
 31653  000288  0103               	movlb	3	; () banked
 31654  00028A  0E03               	movlw	high _Rxdata
 31655  00028C  6E0C               	movwf	i1BufferCopy@to+1,c
 31656  00028E  0103               	movlb	3	; () banked
 31657  000290  0E64               	movlw	low _Rxdata
 31658  000292  6E0B               	movwf	i1BufferCopy@to,c
 31659  000294  0E64               	movlw	100
 31660  000296  6E0D               	movwf	i1BufferCopy@count,c
 31661  000298  0E00               	movlw	0
 31662  00029A  6E0E               	movwf	i1BufferCopy@shift,c
 31663  00029C  EC7E  F0B4         	call	i1_BufferCopy	;wreg free
 31664                           
 31665                           ;interrupts.c: 183: cleanBuffer(TEMP_Rxdata, 100);
 31666  0002A0  0100               	movlb	0	; () banked
 31667  0002A2  0E00               	movlw	high low_isr@TEMP_Rxdata
 31668  0002A4  6E02               	movwf	i1cleanBuffer@data+1,c
 31669  0002A6  0100               	movlb	0	; () banked
 31670  0002A8  0E60               	movlw	low low_isr@TEMP_Rxdata
 31671  0002AA  6E01               	movwf	i1cleanBuffer@data,c
 31672  0002AC  0E00               	movlw	0
 31673  0002AE  6E04               	movwf	i1cleanBuffer@count+1,c
 31674  0002B0  0E64               	movlw	100
 31675  0002B2  6E03               	movwf	i1cleanBuffer@count,c
 31676  0002B4  ECA1  F0BC         	call	i1_cleanBuffer	;wreg free
 31677                           
 31678                           ;interrupts.c: 184: }
 31679  0002B8  D045               	goto	i1l13212
 31680  0002BA                     i1l62:
 31681                           
 31682                           ; BSR set to: 0
 31683                           ;interrupts.c: 185: else
 31684                           ;interrupts.c: 186: {
 31685                           ;interrupts.c: 187: if(TEMP_Rxdata[0] == 0 && TEMP_Rxdata[1] != 0)
 31686  0002BA  0100               	movlb	0	; () banked
 31687  0002BC  6760               	tstfsz	low_isr@TEMP_Rxdata& (0+255),b
 31688  0002BE  D017               	goto	i1l13200
 31689                           
 31690                           ; BSR set to: 0
 31691  0002C0  0100               	movlb	0	; () banked
 31692  0002C2  5161               	movf	(low_isr@TEMP_Rxdata+1)& (0+255),w,b
 31693  0002C4  B4D8               	btfsc	status,2,c
 31694  0002C6  D013               	goto	i1l13200
 31695                           
 31696                           ; BSR set to: 0
 31697                           ;interrupts.c: 188: {
 31698                           ;interrupts.c: 189: BufferCopy(TEMP_Rxdata, Rxdata, 100,1);
 31699  0002C8  0100               	movlb	0	; () banked
 31700  0002CA  0E00               	movlw	high low_isr@TEMP_Rxdata
 31701  0002CC  6E0A               	movwf	i1BufferCopy@from+1,c
 31702  0002CE  0100               	movlb	0	; () banked
 31703  0002D0  0E60               	movlw	low low_isr@TEMP_Rxdata
 31704  0002D2  6E09               	movwf	i1BufferCopy@from,c
 31705  0002D4  0103               	movlb	3	; () banked
 31706  0002D6  0E03               	movlw	high _Rxdata
 31707  0002D8  6E0C               	movwf	i1BufferCopy@to+1,c
 31708  0002DA  0103               	movlb	3	; () banked
 31709  0002DC  0E64               	movlw	low _Rxdata
 31710  0002DE  6E0B               	movwf	i1BufferCopy@to,c
 31711  0002E0  0E64               	movlw	100
 31712  0002E2  6E0D               	movwf	i1BufferCopy@count,c
 31713  0002E4  0E01               	movlw	1
 31714  0002E6  6E0E               	movwf	i1BufferCopy@shift,c
 31715  0002E8  EC7E  F0B4         	call	i1_BufferCopy	;wreg free
 31716                           
 31717                           ;interrupts.c: 190: }
 31718  0002EC  D012               	goto	i1l13202
 31719  0002EE                     i1l13200:
 31720                           
 31721                           ;interrupts.c: 191: else
 31722                           ;interrupts.c: 192: {
 31723                           ;interrupts.c: 193: BufferCopy(TEMP_Rxdata, Rxdata, 100,0);
 31724  0002EE  0100               	movlb	0	; () banked
 31725  0002F0  0E00               	movlw	high low_isr@TEMP_Rxdata
 31726  0002F2  6E0A               	movwf	i1BufferCopy@from+1,c
 31727  0002F4  0100               	movlb	0	; () banked
 31728  0002F6  0E60               	movlw	low low_isr@TEMP_Rxdata
 31729  0002F8  6E09               	movwf	i1BufferCopy@from,c
 31730  0002FA  0103               	movlb	3	; () banked
 31731  0002FC  0E03               	movlw	high _Rxdata
 31732  0002FE  6E0C               	movwf	i1BufferCopy@to+1,c
 31733  000300  0103               	movlb	3	; () banked
 31734  000302  0E64               	movlw	low _Rxdata
 31735  000304  6E0B               	movwf	i1BufferCopy@to,c
 31736  000306  0E64               	movlw	100
 31737  000308  6E0D               	movwf	i1BufferCopy@count,c
 31738  00030A  0E00               	movlw	0
 31739  00030C  6E0E               	movwf	i1BufferCopy@shift,c
 31740  00030E  EC7E  F0B4         	call	i1_BufferCopy	;wreg free
 31741  000312                     i1l13202:
 31742                           
 31743                           ;interrupts.c: 194: }
 31744                           ;interrupts.c: 195: ClearLCD();
 31745  000312  EC02  F0BE         	call	i1_ClearLCD	;wreg free
 31746                           
 31747                           ;interrupts.c: 196: SetLCDcursor(0, 0);
 31748  000316  0E00               	movlw	0
 31749  000318  6E0F               	movwf	i1SetLCDcursor@Col,c
 31750  00031A  0E00               	movlw	0
 31751  00031C  ECC1  F0BD         	call	i1_SetLCDcursor
 31752                           
 31753                           ;interrupts.c: 197: LCDPrintChar('>');
 31754  000320  0E3E               	movlw	62
 31755  000322  EC43  F0BE         	call	i1_LCDPrintChar
 31756                           
 31757                           ;interrupts.c: 198: cleanBuffer(TEMP_Rxdata, 100);
 31758  000326  0100               	movlb	0	; () banked
 31759  000328  0E00               	movlw	high low_isr@TEMP_Rxdata
 31760  00032A  6E02               	movwf	i1cleanBuffer@data+1,c
 31761  00032C  0100               	movlb	0	; () banked
 31762  00032E  0E60               	movlw	low low_isr@TEMP_Rxdata
 31763  000330  6E01               	movwf	i1cleanBuffer@data,c
 31764  000332  0E00               	movlw	0
 31765  000334  6E04               	movwf	i1cleanBuffer@count+1,c
 31766  000336  0E64               	movlw	100
 31767  000338  6E03               	movwf	i1cleanBuffer@count,c
 31768  00033A  ECA1  F0BC         	call	i1_cleanBuffer	;wreg free
 31769  00033E                     L46:
 31770                           
 31771                           ;interrupts.c: 199: bufferCount=0;
 31772  00033E  0E00               	movlw	0
 31773  000340  0100               	movlb	0	; () banked
 31774  000342  6FD9               	movwf	_bufferCount& (0+255),b
 31775  000344                     i1l13212:
 31776                           
 31777                           ;interrupts.c: 200: }
 31778                           ;interrupts.c: 201: }
 31779                           ;interrupts.c: 202: }
 31780                           ;interrupts.c: 203: PIE1bits.RCIE = 1;
 31781  000344  8A9D               	bsf	3997,5,c	;volatile
 31782                           
 31783                           ;interrupts.c: 204: RCSTAbits.CREN = 1;
 31784  000346  88AB               	bsf	4011,4,c	;volatile
 31785                           
 31786                           ;interrupts.c: 205: INTCONbits.PEIE = 1;
 31787  000348  8CF2               	bsf	intcon,6,c	;volatile
 31788  00034A  C026  FFF5         	movff	??_low_isr+19,tablat
 31789  00034E  C025  FFF8         	movff	??_low_isr+18,tblptru
 31790  000352  C024  FFF7         	movff	??_low_isr+17,tblptrh
 31791  000356  C023  FFF6         	movff	??_low_isr+16,tblptrl
 31792  00035A  C022  FFF4         	movff	??_low_isr+15,prodh
 31793  00035E  C021  FFF3         	movff	??_low_isr+14,prodl
 31794  000362  C020  FFDA         	movff	??_low_isr+13,fsr2h
 31795  000366  C01F  FFD9         	movff	??_low_isr+12,fsr2l
 31796  00036A  C01E  FFE2         	movff	??_low_isr+11,fsr1h
 31797  00036E  C01D  FFE1         	movff	??_low_isr+10,fsr1l
 31798  000372  C01C  FFEA         	movff	??_low_isr+9,fsr0h
 31799  000376  C01B  FFE9         	movff	??_low_isr+8,fsr0l
 31800  00037A  C01A  FFFB         	movff	??_low_isr+7,pclatu
 31801  00037E  C019  FFFA         	movff	??_low_isr+6,pclath
 31802  000382  C018  FFE0         	movff	??_low_isr+5,bsr
 31803  000386  C017  FFE8         	movff	??_low_isr+4,wreg
 31804  00038A  C016  FFD8         	movff	??_low_isr+3,status
 31805  00038E  0010               	retfie	
 31806  000390                     __end_of_low_isr:
 31807                           	opt stack 0
 31808                           pclatu	equ	0xFFB
 31809                           pclath	equ	0xFFA
 31810                           tblptru	equ	0xFF8
 31811                           tblptrh	equ	0xFF7
 31812                           tblptrl	equ	0xFF6
 31813                           tablat	equ	0xFF5
 31814                           prodh	equ	0xFF4
 31815                           prodl	equ	0xFF3
 31816                           intcon	equ	0xFF2
 31817                           postinc0	equ	0xFEE
 31818                           fsr0h	equ	0xFEA
 31819                           fsr0l	equ	0xFE9
 31820                           wreg	equ	0xFE8
 31821                           indf1	equ	0xFE7
 31822                           postinc1	equ	0xFE6
 31823                           postdec1	equ	0xFE5
 31824                           fsr1h	equ	0xFE2
 31825                           fsr1l	equ	0xFE1
 31826                           bsr	equ	0xFE0
 31827                           indf2	equ	0xFDF
 31828                           postinc2	equ	0xFDE
 31829                           postdec2	equ	0xFDD
 31830                           fsr2h	equ	0xFDA
 31831                           fsr2l	equ	0xFD9
 31832                           status	equ	0xFD8
 31833                           
 31834 ;; *************** function i1_UARTstring *****************
 31835 ;; Defined at:
 31836 ;;		line 235 in file "UART.c"
 31837 ;; Parameters:    Size  Location     Type
 31838 ;;  data            2   11[COMRAM] PTR unsigned char 
 31839 ;;		 -> STR_314(26), STR_313(3), STR_311(18), STR_309(18), 
 31840 ;;		 -> STR_305(20), STR_293(24), STR_282(3), STR_280(15), 
 31841 ;;		 -> STR_279(22), STR_278(50), STR_277(7), STR_276(6), 
 31842 ;;		 -> STR_275(11), STR_274(17), STR_273(12), STR_272(13), 
 31843 ;;		 -> STR_271(10), STR_270(12), STR_265(28), STR_264(68), 
 31844 ;;		 -> STR_263(9), STR_262(11), STR_261(23), STR_259(19), 
 31845 ;;		 -> STR_257(20), STR_254(20), STR_245(21), STR_244(61), 
 31846 ;;		 -> STR_243(69), STR_242(7), STR_241(7), STR_240(10), 
 31847 ;;		 -> STR_239(11), STR_238(29), STR_237(13), STR_236(33), 
 31848 ;;		 -> STR_235(25), STR_234(28), STR_233(3), STR_232(26), 
 31849 ;;		 -> STR_231(2), STR_230(34), STR_229(37), STR_226(24), 
 31850 ;;		 -> STR_222(3), STR_212(13), STR_211(73), STR_210(5), 
 31851 ;;		 -> STR_209(12), STR_208(17), STR_202(28), STR_200(30), 
 31852 ;;		 -> STR_198(33), STR_191(42), STR_190(62), STR_189(26), 
 31853 ;;		 -> STR_185(43), STR_183(48), STR_181(27), STR_174(42), 
 31854 ;;		 -> STR_173(66), STR_172(25), STR_170(49), Command@buf(200), 
 31855 ;;		 -> STR_166(33), STR_164(38), STR_162(27), STR_161(28), 
 31856 ;;		 -> STR_151(37), STR_150(68), STR_149(18), STR_148(15), 
 31857 ;;		 -> STR_147(11), STR_146(28), STR_144(18), STR_142(32), 
 31858 ;;		 -> STR_138(31), STR_134(38), STR_121(24), STR_120(68), 
 31859 ;;		 -> STR_119(10), STR_118(6), STR_117(8), STR_116(11), 
 31860 ;;		 -> STR_115(21), STR_113(16), STR_111(19), STR_108(18), 
 31861 ;;		 -> STR_105(16), STR_102(15), STR_99(22), STR_87(27), 
 31862 ;;		 -> STR_86(68), STR_85(7), STR_84(8), STR_83(11), 
 31863 ;;		 -> STR_82(24), STR_80(19), STR_78(19), STR_75(18), 
 31864 ;;		 -> STR_72(25), STR_63(17), STR_62(68), STR_61(8), 
 31865 ;;		 -> STR_60(7), STR_59(11), STR_58(17), STR_56(12), 
 31866 ;;		 -> STR_54(9), STR_51(8), STR_48(13), STR_45(9), 
 31867 ;;		 -> STR_42(8), STR_39(13), STR_34(4), STR_33(22), 
 31868 ;;		 -> STR_27(22), STR_26(3), SetBaud@buf(50), STR_20(4), 
 31869 ;;		 -> STR_19(29), STR_9(12), STR_7(3), Version(20), 
 31870 ;;		 -> STR_6(19), STR_5(38), low_isr@TEMP_Rxdata(100), STR_4(2), 
 31871 ;;		 -> STR_3(2), STR_2(2), STR_1(2), 
 31872 ;; Auto vars:     Size  Location     Type
 31873 ;;		None
 31874 ;; Return value:  Size  Location     Type
 31875 ;;		None               void
 31876 ;; Registers used:
 31877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31878 ;; Tracked objects:
 31879 ;;		On entry : 0/0
 31880 ;;		On exit  : 0/0
 31881 ;;		Unchanged: 0/0
 31882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31887 ;;Total ram usage:        4 bytes
 31888 ;; Hardware stack levels used:    1
 31889 ;; Hardware stack levels required when called:    3
 31890 ;; This function calls:
 31891 ;;		i1_UARTchar
 31892 ;; This function is called by:
 31893 ;;		_low_isr
 31894 ;; This function uses a non-reentrant model
 31895 ;;
 31896                           
 31897                           	psect	text82
 31898  016BE0                     __ptext82:
 31899                           	opt stack 0
 31900  016BE0                     i1_UARTstring:
 31901                           	opt stack 19
 31902  016BE0                     i1l430:
 31903                           
 31904                           ;UART.c: 238: {
 31905                           ;UART.c: 239: if(*data != 0)
 31906  016BE0  C00C  FFF6         	movff	i1UARTstring@data,tblptrl
 31907  016BE4  C00D  FFF7         	movff	i1UARTstring@data+1,tblptrh
 31908  016BE8  0E00               	movlw	low (__mediumconst shr (0+16))
 31909  016BEA  6EF8               	movwf	tblptru,c
 31910  016BEC  0E0C               	movlw	(high __ramtop+-1)
 31911  016BEE  64F7               	cpfsgt	tblptrh,c
 31912  016BF0  D003               	bra	i1u1714_27
 31913  016BF2  0008               	tblrd		*
 31914  016BF4  50F5               	movf	tablat,w,c
 31915  016BF6  D005               	bra	i1u1714_20
 31916  016BF8                     i1u1714_27:
 31917  016BF8  CFF6 FFE1          	movff	tblptrl,fsr1l
 31918  016BFC  CFF7 FFE2          	movff	tblptrh,fsr1h
 31919  016C00  50E7               	movf	indf1,w,c
 31920  016C02                     i1u1714_20:
 31921  016C02  0900               	iorlw	0
 31922  016C04  B4D8               	btfsc	status,2,c
 31923  016C06  D019               	goto	i1l13076
 31924                           
 31925                           ;UART.c: 240: {
 31926                           ;UART.c: 241: UARTchar(*data, 0, 0);
 31927  016C08  0E00               	movlw	0
 31928  016C0A  6E08               	movwf	i1UARTchar@NinethBit_override,c
 31929  016C0C  0E00               	movlw	0
 31930  016C0E  6E09               	movwf	i1UARTchar@NinethBit_override_data,c
 31931  016C10  C00C  FFF6         	movff	i1UARTstring@data,tblptrl
 31932  016C14  C00D  FFF7         	movff	i1UARTstring@data+1,tblptrh
 31933  016C18  0E00               	movlw	low (__mediumconst shr (0+16))
 31934  016C1A  6EF8               	movwf	tblptru,c
 31935  016C1C  0E0C               	movlw	(high __ramtop+-1)
 31936  016C1E  64F7               	cpfsgt	tblptrh,c
 31937  016C20  D003               	bra	i1u1716_27
 31938  016C22  0008               	tblrd		*
 31939  016C24  50F5               	movf	tablat,w,c
 31940  016C26  D005               	bra	i1u1716_20
 31941  016C28                     i1u1716_27:
 31942  016C28  CFF6 FFE1          	movff	tblptrl,fsr1l
 31943  016C2C  CFF7 FFE2          	movff	tblptrh,fsr1h
 31944  016C30  50E7               	movf	indf1,w,c
 31945  016C32                     i1u1716_20:
 31946  016C32  ECF0  F0B9         	call	i1_UARTchar
 31947  016C36                     i1l432:
 31948  016C36  A2AC               	btfss	4012,1,c	;volatile
 31949  016C38  D7FE               	goto	i1l432
 31950  016C3A                     i1l13076:
 31951                           
 31952                           ;UART.c: 243: }
 31953                           ;UART.c: 244: } while( *data++);
 31954  016C3A  500C               	movf	i1UARTstring@data,w,c
 31955  016C3C  6E0E               	movwf	??i1_UARTstring& (0+255),c
 31956  016C3E  500D               	movf	i1UARTstring@data+1,w,c
 31957  016C40  6E0F               	movwf	(??i1_UARTstring+1)& (0+255),c
 31958  016C42  4A0C               	infsnz	i1UARTstring@data,f,c
 31959  016C44  2A0D               	incf	i1UARTstring@data+1,f,c
 31960  016C46  C00E  FFF6         	movff	??i1_UARTstring,tblptrl
 31961  016C4A  C00F  FFF7         	movff	??i1_UARTstring+1,tblptrh
 31962  016C4E  0E00               	movlw	low (__mediumconst shr (0+16))
 31963  016C50  6EF8               	movwf	tblptru,c
 31964  016C52  0E0C               	movlw	(high __ramtop+-1)
 31965  016C54  64F7               	cpfsgt	tblptrh,c
 31966  016C56  D003               	bra	i1u1718_27
 31967  016C58  0008               	tblrd		*
 31968  016C5A  50F5               	movf	tablat,w,c
 31969  016C5C  D005               	bra	i1u1718_20
 31970  016C5E                     i1u1718_27:
 31971  016C5E  CFF6 FFE1          	movff	tblptrl,fsr1l
 31972  016C62  CFF7 FFE2          	movff	tblptrh,fsr1h
 31973  016C66  50E7               	movf	indf1,w,c
 31974  016C68                     i1u1718_20:
 31975  016C68  0900               	iorlw	0
 31976  016C6A  B4D8               	btfsc	status,2,c
 31977  016C6C  0012               	return	
 31978  016C6E  D7B8               	goto	i1l430
 31979  016C70                     __end_ofi1_UARTstring:
 31980                           	opt stack 0
 31981                           pclatu	equ	0xFFB
 31982                           pclath	equ	0xFFA
 31983                           tblptru	equ	0xFF8
 31984                           tblptrh	equ	0xFF7
 31985                           tblptrl	equ	0xFF6
 31986                           tablat	equ	0xFF5
 31987                           prodh	equ	0xFF4
 31988                           prodl	equ	0xFF3
 31989                           intcon	equ	0xFF2
 31990                           postinc0	equ	0xFEE
 31991                           fsr0h	equ	0xFEA
 31992                           fsr0l	equ	0xFE9
 31993                           wreg	equ	0xFE8
 31994                           indf1	equ	0xFE7
 31995                           postinc1	equ	0xFE6
 31996                           postdec1	equ	0xFE5
 31997                           fsr1h	equ	0xFE2
 31998                           fsr1l	equ	0xFE1
 31999                           bsr	equ	0xFE0
 32000                           indf2	equ	0xFDF
 32001                           postinc2	equ	0xFDE
 32002                           postdec2	equ	0xFDD
 32003                           fsr2h	equ	0xFDA
 32004                           fsr2l	equ	0xFD9
 32005                           status	equ	0xFD8
 32006                           
 32007 ;; *************** function i1_UARTchar *****************
 32008 ;; Defined at:
 32009 ;;		line 197 in file "UART.c"
 32010 ;; Parameters:    Size  Location     Type
 32011 ;;  data            1    wreg     unsigned char 
 32012 ;;  NinethBit_ov    1    7[COMRAM] unsigned char 
 32013 ;;  NinethBit_ov    1    8[COMRAM] unsigned char 
 32014 ;; Auto vars:     Size  Location     Type
 32015 ;;  data            1   10[COMRAM] unsigned char 
 32016 ;; Return value:  Size  Location     Type
 32017 ;;		None               void
 32018 ;; Registers used:
 32019 ;;		wreg, status,2, status,0, cstack
 32020 ;; Tracked objects:
 32021 ;;		On entry : 0/0
 32022 ;;		On exit  : 0/0
 32023 ;;		Unchanged: 0/0
 32024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32029 ;;Total ram usage:        4 bytes
 32030 ;; Hardware stack levels used:    1
 32031 ;; Hardware stack levels required when called:    2
 32032 ;; This function calls:
 32033 ;;		i1_CheckSum_byte
 32034 ;; This function is called by:
 32035 ;;		i1_UARTstring
 32036 ;; This function uses a non-reentrant model
 32037 ;;
 32038                           
 32039                           	psect	text83
 32040  0173E0                     __ptext83:
 32041                           	opt stack 0
 32042  0173E0                     i1_UARTchar:
 32043                           	opt stack 19
 32044                           
 32045                           ;incstack = 0
 32046                           ;i1UARTchar@data stored from wreg
 32047  0173E0  6E0B               	movwf	i1UARTchar@data,c
 32048                           
 32049                           ;UART.c: 199: if(TXSTAbits.TX9)
 32050  0173E2  ACAC               	btfss	4012,6,c	;volatile
 32051  0173E4  D02D               	goto	i1l12068
 32052                           
 32053                           ;UART.c: 200: {
 32054                           ;UART.c: 202: if(!NinethBit_override)
 32055  0173E6  6608               	tstfsz	i1UARTchar@NinethBit_override,c
 32056  0173E8  D022               	goto	i1l12066
 32057  0173EA  D015               	goto	i1l12064
 32058  0173EC                     i1l12058:
 32059                           
 32060                           ;UART.c: 208: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 3);
 32061  0173EC  C00B  F001         	movff	i1UARTchar@data,i1CheckSum_byte@This
 32062  0173F0  6A02               	clrf	i1CheckSum_byte@This+1,c
 32063  0173F2  0E03               	movlw	3
 32064  0173F4  6E03               	movwf	i1CheckSum_byte@Odd_Even,c
 32065  0173F6  EC3E  F0BC         	call	i1_CheckSum_byte	;wreg free
 32066  0173FA  D007               	goto	L48
 32067  0173FC                     i1l12060:
 32068                           
 32069                           ;UART.c: 211: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 2);
 32070  0173FC  C00B  F001         	movff	i1UARTchar@data,i1CheckSum_byte@This
 32071  017400  6A02               	clrf	i1CheckSum_byte@This+1,c
 32072  017402  0E02               	movlw	2
 32073  017404  6E03               	movwf	i1CheckSum_byte@Odd_Even,c
 32074  017406  EC3E  F0BC         	call	i1_CheckSum_byte	;wreg free
 32075  01740A                     L48:
 32076  01740A  6E0A               	movwf	??i1_UARTchar& (0+255),c
 32077  01740C  D014               	goto	L49
 32078  01740E                     i1l424:
 32079                           
 32080                           ; BSR set to: 1
 32081                           ;UART.c: 214: TXSTAbits.TX9D = 1;
 32082  01740E  80AC               	bsf	4012,0,c	;volatile
 32083                           
 32084                           ;UART.c: 215: break;
 32085  017410  D017               	goto	i1l12068
 32086  017412                     i1l425:
 32087                           
 32088                           ; BSR set to: 1
 32089                           ;UART.c: 217: TXSTAbits.TX9D = 0;
 32090  017412  90AC               	bcf	4012,0,c	;volatile
 32091                           
 32092                           ;UART.c: 218: break;
 32093  017414  D015               	goto	i1l12068
 32094  017416                     i1l12064:
 32095  017416  0101               	movlb	1	; () banked
 32096  017418  5196               	movf	_PARITY& (0+255),w,b
 32097                           
 32098                           ; Switch size 1, requested type "space"
 32099                           ; Number of cases is 3, Range of values is 1 to 3
 32100                           ; switch strategies available:
 32101                           ; Name         Instructions Cycles
 32102                           ; simple_byte           10     6 (average)
 32103                           ;	Chosen strategy is simple_byte
 32104  01741A  0A01               	xorlw	1	; case 1
 32105  01741C  B4D8               	btfsc	status,2,c
 32106  01741E  D7E6               	goto	i1l12058
 32107  017420  0A03               	xorlw	3	; case 2
 32108  017422  B4D8               	btfsc	status,2,c
 32109  017424  D7EB               	goto	i1l12060
 32110  017426  0A01               	xorlw	1	; case 3
 32111  017428  B4D8               	btfsc	status,2,c
 32112  01742A  D7F1               	goto	i1l424
 32113  01742C  D7F2               	goto	i1l425
 32114  01742E                     i1l12066:
 32115                           
 32116                           ;UART.c: 221: else
 32117                           ;UART.c: 222: {
 32118                           ;UART.c: 223: TXSTAbits.TX9D = (NinethBit_override_data & 0x01);
 32119  01742E  C009  F00A         	movff	i1UARTchar@NinethBit_override_data,??i1_UARTchar
 32120  017432  0E01               	movlw	1
 32121  017434  160A               	andwf	??i1_UARTchar,f,c
 32122  017436                     L49:
 32123  017436  50AC               	movf	4012,w,c	;volatile
 32124  017438  180A               	xorwf	??i1_UARTchar,w,c
 32125  01743A  0BFE               	andlw	-2
 32126  01743C  180A               	xorwf	??i1_UARTchar,w,c
 32127  01743E  6EAC               	movwf	4012,c	;volatile
 32128  017440                     i1l12068:
 32129                           
 32130                           ;UART.c: 224: }
 32131                           ;UART.c: 225: }
 32132                           ;UART.c: 226: TX_OLD = data;
 32133  017440  C00B  F0D8         	movff	i1UARTchar@data,_TX_OLD
 32134                           
 32135                           ;UART.c: 227: TXREG = data;
 32136  017444  C00B  FFAD         	movff	i1UARTchar@data,4013	;volatile
 32137  017448  0012               	return	
 32138  01744A                     __end_ofi1_UARTchar:
 32139                           	opt stack 0
 32140                           pclatu	equ	0xFFB
 32141                           pclath	equ	0xFFA
 32142                           tblptru	equ	0xFF8
 32143                           tblptrh	equ	0xFF7
 32144                           tblptrl	equ	0xFF6
 32145                           tablat	equ	0xFF5
 32146                           prodh	equ	0xFF4
 32147                           prodl	equ	0xFF3
 32148                           intcon	equ	0xFF2
 32149                           postinc0	equ	0xFEE
 32150                           fsr0h	equ	0xFEA
 32151                           fsr0l	equ	0xFE9
 32152                           wreg	equ	0xFE8
 32153                           indf1	equ	0xFE7
 32154                           postinc1	equ	0xFE6
 32155                           postdec1	equ	0xFE5
 32156                           fsr1h	equ	0xFE2
 32157                           fsr1l	equ	0xFE1
 32158                           bsr	equ	0xFE0
 32159                           indf2	equ	0xFDF
 32160                           postinc2	equ	0xFDE
 32161                           postdec2	equ	0xFDD
 32162                           fsr2h	equ	0xFDA
 32163                           fsr2l	equ	0xFD9
 32164                           status	equ	0xFD8
 32165                           
 32166 ;; *************** function i1_CheckSum_byte *****************
 32167 ;; Defined at:
 32168 ;;		line 343 in file "MISC.c"
 32169 ;; Parameters:    Size  Location     Type
 32170 ;;  This            2    0[COMRAM] unsigned int 
 32171 ;;  Odd_Even        1    2[COMRAM] unsigned char 
 32172 ;; Auto vars:     Size  Location     Type
 32173 ;;  CheckSum_byt    2    3[COMRAM] unsigned int 
 32174 ;;  CheckSum_byt    1    6[COMRAM] unsigned char 
 32175 ;;  CheckSum_byt    1    5[COMRAM] unsigned char 
 32176 ;; Return value:  Size  Location     Type
 32177 ;;                  1    wreg      unsigned char 
 32178 ;; Registers used:
 32179 ;;		wreg, status,2, status,0
 32180 ;; Tracked objects:
 32181 ;;		On entry : 0/0
 32182 ;;		On exit  : 0/0
 32183 ;;		Unchanged: 0/0
 32184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32185 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32186 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32188 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32189 ;;Total ram usage:        7 bytes
 32190 ;; Hardware stack levels used:    1
 32191 ;; Hardware stack levels required when called:    1
 32192 ;; This function calls:
 32193 ;;		Nothing
 32194 ;; This function is called by:
 32195 ;;		i1_UARTchar
 32196 ;; This function uses a non-reentrant model
 32197 ;;
 32198                           
 32199                           	psect	text84
 32200  01787C                     __ptext84:
 32201                           	opt stack 0
 32202  01787C                     i1_CheckSum_byte:
 32203                           	opt stack 19
 32204                           
 32205                           ;MISC.c: 345: char i = 0;
 32206                           
 32207                           ;incstack = 0
 32208  01787C  0E00               	movlw	0
 32209  01787E  6E07               	movwf	i1CheckSum_byte@i,c
 32210                           
 32211                           ;MISC.c: 346: unsigned char Parity = 0;
 32212  017880  0E00               	movlw	0
 32213  017882  6E06               	movwf	i1CheckSum_byte@Parity,c
 32214                           
 32215                           ;MISC.c: 347: unsigned int ThisTemp = This;
 32216  017884  C001  F004         	movff	i1CheckSum_byte@This,i1CheckSum_byte@ThisTemp
 32217  017888  C002  F005         	movff	i1CheckSum_byte@This+1,i1CheckSum_byte@ThisTemp+1
 32218                           
 32219                           ;MISC.c: 349: for (i =0; i<8; i++)
 32220  01788C  0E00               	movlw	0
 32221  01788E  6E07               	movwf	i1CheckSum_byte@i,c
 32222  017890  D006               	goto	L50
 32223  017892                     i1l331:
 32224                           
 32225                           ;MISC.c: 350: {
 32226                           ;MISC.c: 351: if((ThisTemp & 0x01) == 1)
 32227  017892  B004               	btfsc	i1CheckSum_byte@ThisTemp,0,c
 32228                           
 32229                           ;MISC.c: 352: {
 32230                           ;MISC.c: 353: Parity++;
 32231  017894  2A06               	incf	i1CheckSum_byte@Parity,f,c
 32232                           
 32233                           ;MISC.c: 354: }
 32234                           ;MISC.c: 355: ThisTemp >>= 1;
 32235  017896  90D8               	bcf	status,0,c
 32236  017898  3205               	rrcf	i1CheckSum_byte@ThisTemp+1,f,c
 32237  01789A  3204               	rrcf	i1CheckSum_byte@ThisTemp,f,c
 32238  01789C  2A07               	incf	i1CheckSum_byte@i,f,c
 32239  01789E                     L50:
 32240  01789E  0E07               	movlw	7
 32241  0178A0  6407               	cpfsgt	i1CheckSum_byte@i,c
 32242  0178A2  D7F7               	goto	i1l331
 32243                           
 32244                           ;MISC.c: 356: }
 32245                           ;MISC.c: 357: if(Odd_Even == 3)
 32246  0178A4  5003               	movf	i1CheckSum_byte@Odd_Even,w,c
 32247  0178A6  0A03               	xorlw	3
 32248  0178A8  A4D8               	btfss	status,2,c
 32249  0178AA  D006               	goto	i1l334
 32250                           
 32251                           ;MISC.c: 358: {
 32252                           ;MISC.c: 359: if(Parity % 2 == 0)
 32253  0178AC  B006               	btfsc	i1CheckSum_byte@Parity,0,c
 32254  0178AE  D002               	goto	i1l11126
 32255                           
 32256                           ;MISC.c: 360: {
 32257                           ;MISC.c: 361: return 1;
 32258  0178B0  0E01               	movlw	1
 32259  0178B2  0012               	return	
 32260  0178B4                     i1l11126:
 32261                           
 32262                           ;MISC.c: 362: }
 32263                           ;MISC.c: 363: return 0;
 32264  0178B4  0E00               	movlw	0
 32265  0178B6  0012               	return	
 32266  0178B8                     i1l334:
 32267                           
 32268                           ;MISC.c: 365: else
 32269                           ;MISC.c: 366: {
 32270                           ;MISC.c: 367: if(Parity % 2 == 1)
 32271  0178B8  A006               	btfss	i1CheckSum_byte@Parity,0,c
 32272  0178BA  D002               	goto	i1l11136
 32273                           
 32274                           ;MISC.c: 368: {
 32275                           ;MISC.c: 369: return 1;
 32276  0178BC  0E01               	movlw	1
 32277  0178BE  0012               	return	
 32278  0178C0                     i1l11136:
 32279                           
 32280                           ;MISC.c: 370: }
 32281                           ;MISC.c: 371: return 0;
 32282  0178C0  0E00               	movlw	0
 32283  0178C2  0012               	return	
 32284  0178C4                     __end_ofi1_CheckSum_byte:
 32285                           	opt stack 0
 32286                           pclatu	equ	0xFFB
 32287                           pclath	equ	0xFFA
 32288                           tblptru	equ	0xFF8
 32289                           tblptrh	equ	0xFF7
 32290                           tblptrl	equ	0xFF6
 32291                           tablat	equ	0xFF5
 32292                           prodh	equ	0xFF4
 32293                           prodl	equ	0xFF3
 32294                           intcon	equ	0xFF2
 32295                           postinc0	equ	0xFEE
 32296                           fsr0h	equ	0xFEA
 32297                           fsr0l	equ	0xFE9
 32298                           wreg	equ	0xFE8
 32299                           indf1	equ	0xFE7
 32300                           postinc1	equ	0xFE6
 32301                           postdec1	equ	0xFE5
 32302                           fsr1h	equ	0xFE2
 32303                           fsr1l	equ	0xFE1
 32304                           bsr	equ	0xFE0
 32305                           indf2	equ	0xFDF
 32306                           postinc2	equ	0xFDE
 32307                           postdec2	equ	0xFDD
 32308                           fsr2h	equ	0xFDA
 32309                           fsr2l	equ	0xFD9
 32310                           status	equ	0xFD8
 32311                           
 32312 ;; *************** function i1_SetLCDcursor *****************
 32313 ;; Defined at:
 32314 ;;		line 192 in file "LCD.c"
 32315 ;; Parameters:    Size  Location     Type
 32316 ;;  Row             1    wreg     unsigned char 
 32317 ;;  Col             1   14[COMRAM] unsigned char 
 32318 ;; Auto vars:     Size  Location     Type
 32319 ;;  Row             1   15[COMRAM] unsigned char 
 32320 ;;  SetLCDcursor    1   16[COMRAM] unsigned char 
 32321 ;; Return value:  Size  Location     Type
 32322 ;;		None               void
 32323 ;; Registers used:
 32324 ;;		wreg, status,2, status,0, cstack
 32325 ;; Tracked objects:
 32326 ;;		On entry : 0/0
 32327 ;;		On exit  : 0/0
 32328 ;;		Unchanged: 0/0
 32329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32330 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32331 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32333 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32334 ;;Total ram usage:        3 bytes
 32335 ;; Hardware stack levels used:    1
 32336 ;; Hardware stack levels required when called:    4
 32337 ;; This function calls:
 32338 ;;		i1_SendLCDbyte
 32339 ;; This function is called by:
 32340 ;;		_low_isr
 32341 ;; This function uses a non-reentrant model
 32342 ;;
 32343                           
 32344                           	psect	text85
 32345  017B82                     __ptext85:
 32346                           	opt stack 0
 32347  017B82                     i1_SetLCDcursor:
 32348                           	opt stack 18
 32349                           
 32350                           ;incstack = 0
 32351                           ;i1SetLCDcursor@Row stored from wreg
 32352  017B82  6E10               	movwf	i1SetLCDcursor@Row,c
 32353                           
 32354                           ;LCD.c: 194: char address;
 32355                           ;LCD.c: 197: if (Row == 0)
 32356  017B84  6610               	tstfsz	i1SetLCDcursor@Row,c
 32357  017B86  D002               	goto	i1l13082
 32358                           
 32359                           ;LCD.c: 198: {
 32360                           ;LCD.c: 199: address = 0;
 32361  017B88  0E00               	movlw	0
 32362  017B8A  D001               	goto	L51
 32363  017B8C                     i1l13082:
 32364                           
 32365                           ;LCD.c: 201: else
 32366                           ;LCD.c: 202: {
 32367                           ;LCD.c: 203: address = 0x40;
 32368  017B8C  0E40               	movlw	64
 32369  017B8E                     L51:
 32370  017B8E  6E11               	movwf	i1SetLCDcursor@address,c
 32371                           
 32372                           ;LCD.c: 204: }
 32373                           ;LCD.c: 206: address |= Col;
 32374  017B90  500F               	movf	i1SetLCDcursor@Col,w,c
 32375  017B92  1211               	iorwf	i1SetLCDcursor@address,f,c
 32376                           
 32377                           ;LCD.c: 207: if(!LCDwait)
 32378  017B94  0101               	movlb	1	; () banked
 32379  017B96  6795               	tstfsz	_LCDwait& (0+255),b
 32380  017B98  0012               	return	
 32381                           
 32382                           ; BSR set to: 1
 32383                           ;LCD.c: 208: {
 32384                           ;LCD.c: 209: SendLCDbyte(0x80 | address, 0);
 32385  017B9A  0E00               	movlw	0
 32386  017B9C  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 32387  017B9E  5011               	movf	i1SetLCDcursor@address,w,c
 32388  017BA0  0980               	iorlw	128
 32389  017BA2  EC2D  F0B4         	call	i1_SendLCDbyte
 32390  017BA6  0012               	return	
 32391  017BA8                     __end_ofi1_SetLCDcursor:
 32392                           	opt stack 0
 32393                           pclatu	equ	0xFFB
 32394                           pclath	equ	0xFFA
 32395                           tblptru	equ	0xFF8
 32396                           tblptrh	equ	0xFF7
 32397                           tblptrl	equ	0xFF6
 32398                           tablat	equ	0xFF5
 32399                           prodh	equ	0xFF4
 32400                           prodl	equ	0xFF3
 32401                           intcon	equ	0xFF2
 32402                           postinc0	equ	0xFEE
 32403                           fsr0h	equ	0xFEA
 32404                           fsr0l	equ	0xFE9
 32405                           wreg	equ	0xFE8
 32406                           indf1	equ	0xFE7
 32407                           postinc1	equ	0xFE6
 32408                           postdec1	equ	0xFE5
 32409                           fsr1h	equ	0xFE2
 32410                           fsr1l	equ	0xFE1
 32411                           bsr	equ	0xFE0
 32412                           indf2	equ	0xFDF
 32413                           postinc2	equ	0xFDE
 32414                           postdec2	equ	0xFDD
 32415                           fsr2h	equ	0xFDA
 32416                           fsr2l	equ	0xFD9
 32417                           status	equ	0xFD8
 32418                           
 32419 ;; *************** function i1_ReadUSART *****************
 32420 ;; Defined at:
 32421 ;;		line 252 in file "UART.c"
 32422 ;; Parameters:    Size  Location     Type
 32423 ;;		None
 32424 ;; Auto vars:     Size  Location     Type
 32425 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 32426 ;; Return value:  Size  Location     Type
 32427 ;;                  1    wreg      unsigned char 
 32428 ;; Registers used:
 32429 ;;		wreg, status,2, status,0
 32430 ;; Tracked objects:
 32431 ;;		On entry : 0/0
 32432 ;;		On exit  : 0/0
 32433 ;;		Unchanged: 0/0
 32434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32439 ;;Total ram usage:        1 bytes
 32440 ;; Hardware stack levels used:    1
 32441 ;; Hardware stack levels required when called:    1
 32442 ;; This function calls:
 32443 ;;		Nothing
 32444 ;; This function is called by:
 32445 ;;		_low_isr
 32446 ;; This function uses a non-reentrant model
 32447 ;;
 32448                           
 32449                           	psect	text86
 32450  017AA8                     __ptext86:
 32451                           	opt stack 0
 32452  017AA8                     i1_ReadUSART:
 32453                           	opt stack 21
 32454                           
 32455                           ;UART.c: 254: char data;
 32456                           ;UART.c: 256: USART_Status.val &= 0xf2;
 32457                           
 32458                           ;incstack = 0
 32459  017AA8  0EF2               	movlw	242
 32460  017AAA  0101               	movlb	1	; () banked
 32461  017AAC  1799               	andwf	_USART_Status& (0+255),f,b
 32462                           
 32463                           ; BSR set to: 1
 32464                           ;UART.c: 258: if(RCSTAbits.RX9)
 32465  017AAE  ACAB               	btfss	4011,6,c	;volatile
 32466  017AB0  D006               	goto	i1l439
 32467                           
 32468                           ; BSR set to: 1
 32469                           ;UART.c: 259: {
 32470                           ;UART.c: 260: USART_Status.RX_NINE = 0;
 32471  017AB2  0101               	movlb	1	; () banked
 32472  017AB4  9199               	bcf	_USART_Status& (0+255),0,b
 32473                           
 32474                           ;UART.c: 261: if(RCSTAbits.RX9D)
 32475  017AB6  A0AB               	btfss	4011,0,c	;volatile
 32476  017AB8  D002               	goto	i1l439
 32477                           
 32478                           ; BSR set to: 1
 32479                           ;UART.c: 262: USART_Status.RX_NINE = 1;
 32480  017ABA  0101               	movlb	1	; () banked
 32481  017ABC  8199               	bsf	_USART_Status& (0+255),0,b
 32482  017ABE                     i1l439:
 32483                           
 32484                           ; BSR set to: 1
 32485                           ;UART.c: 263: }
 32486                           ;UART.c: 265: if(RCSTAbits.FERR)
 32487  017ABE  A4AB               	btfss	4011,2,c	;volatile
 32488  017AC0  D002               	goto	i1l441
 32489                           
 32490                           ; BSR set to: 1
 32491                           ;UART.c: 266: USART_Status.FRAME_ERROR = 1;
 32492  017AC2  0101               	movlb	1	; () banked
 32493  017AC4  8599               	bsf	_USART_Status& (0+255),2,b
 32494  017AC6                     i1l441:
 32495                           
 32496                           ; BSR set to: 1
 32497                           ;UART.c: 268: if(RCSTAbits.OERR)
 32498  017AC6  A2AB               	btfss	4011,1,c	;volatile
 32499  017AC8  D002               	goto	i1l442
 32500                           
 32501                           ; BSR set to: 1
 32502                           ;UART.c: 269: USART_Status.OVERRUN_ERROR = 1;
 32503  017ACA  0101               	movlb	1	; () banked
 32504  017ACC  8799               	bsf	_USART_Status& (0+255),3,b
 32505  017ACE                     i1l442:
 32506                           
 32507                           ; BSR set to: 1
 32508                           ;UART.c: 271: data = RCREG;
 32509  017ACE  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 32510                           
 32511                           ; BSR set to: 1
 32512                           ;UART.c: 273: return (data);
 32513  017AD2  5001               	movf	i1ReadUSART@data,w,c
 32514  017AD4  0012               	return	
 32515  017AD6                     __end_ofi1_ReadUSART:
 32516                           	opt stack 0
 32517                           pclatu	equ	0xFFB
 32518                           pclath	equ	0xFFA
 32519                           tblptru	equ	0xFF8
 32520                           tblptrh	equ	0xFF7
 32521                           tblptrl	equ	0xFF6
 32522                           tablat	equ	0xFF5
 32523                           prodh	equ	0xFF4
 32524                           prodl	equ	0xFF3
 32525                           intcon	equ	0xFF2
 32526                           postinc0	equ	0xFEE
 32527                           fsr0h	equ	0xFEA
 32528                           fsr0l	equ	0xFE9
 32529                           wreg	equ	0xFE8
 32530                           indf1	equ	0xFE7
 32531                           postinc1	equ	0xFE6
 32532                           postdec1	equ	0xFE5
 32533                           fsr1h	equ	0xFE2
 32534                           fsr1l	equ	0xFE1
 32535                           bsr	equ	0xFE0
 32536                           indf2	equ	0xFDF
 32537                           postinc2	equ	0xFDE
 32538                           postdec2	equ	0xFDD
 32539                           fsr2h	equ	0xFDA
 32540                           fsr2l	equ	0xFD9
 32541                           status	equ	0xFD8
 32542                           
 32543 ;; *************** function i1_LCDPrintString *****************
 32544 ;; Defined at:
 32545 ;;		line 233 in file "LCD.c"
 32546 ;; Parameters:    Size  Location     Type
 32547 ;;  Text            2   14[COMRAM] PTR unsigned char 
 32548 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 32549 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 32550 ;;		 -> Scroll_2(16), Scroll_1(16), STR_312(16), STR_310(16), 
 32551 ;;		 -> STR_294(17), STR_281(10), STR_260(16), STR_258(16), 
 32552 ;;		 -> STR_255(15), STR_227(17), STR_223(17), STR_203(16), 
 32553 ;;		 -> STR_201(16), STR_199(13), STR_186(14), STR_184(16), 
 32554 ;;		 -> STR_182(15), STR_171(16), Command@buf(200), STR_167(14), 
 32555 ;;		 -> STR_165(16), STR_163(15), STR_145(13), STR_143(15), 
 32556 ;;		 -> STR_139(14), STR_135(16), STR_122(16), STR_114(16), 
 32557 ;;		 -> STR_112(16), STR_109(15), STR_106(15), STR_103(14), 
 32558 ;;		 -> STR_100(16), STR_88(16), STR_81(16), STR_79(15), 
 32559 ;;		 -> STR_76(14), STR_73(16), STR_57(12), STR_55(9), 
 32560 ;;		 -> STR_52(8), STR_49(13), STR_46(9), STR_43(8), 
 32561 ;;		 -> STR_40(13), STR_18(10), STR_17(17), STR_16(16), 
 32562 ;;		 -> STR_15(15), STR_14(14), STR_13(13), STR_12(12), 
 32563 ;;		 -> STR_11(11), STR_10(10), STR_8(9), low_isr@LCD_TEMP(16), 
 32564 ;; Auto vars:     Size  Location     Type
 32565 ;;  LCDPrintStri    2   16[COMRAM] PTR unsigned char 
 32566 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 32567 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 32568 ;;		 -> Scroll_2(16), Scroll_1(16), STR_312(16), STR_310(16), 
 32569 ;;		 -> STR_294(17), STR_281(10), STR_260(16), STR_258(16), 
 32570 ;;		 -> STR_255(15), STR_227(17), STR_223(17), STR_203(16), 
 32571 ;;		 -> STR_201(16), STR_199(13), STR_186(14), STR_184(16), 
 32572 ;;		 -> STR_182(15), STR_171(16), Command@buf(200), STR_167(14), 
 32573 ;;		 -> STR_165(16), STR_163(15), STR_145(13), STR_143(15), 
 32574 ;;		 -> STR_139(14), STR_135(16), STR_122(16), STR_114(16), 
 32575 ;;		 -> STR_112(16), STR_109(15), STR_106(15), STR_103(14), 
 32576 ;;		 -> STR_100(16), STR_88(16), STR_81(16), STR_79(15), 
 32577 ;;		 -> STR_76(14), STR_73(16), STR_57(12), STR_55(9), 
 32578 ;;		 -> STR_52(8), STR_49(13), STR_46(9), STR_43(8), 
 32579 ;;		 -> STR_40(13), STR_18(10), STR_17(17), STR_16(16), 
 32580 ;;		 -> STR_15(15), STR_14(14), STR_13(13), STR_12(12), 
 32581 ;;		 -> STR_11(11), STR_10(10), STR_8(9), low_isr@LCD_TEMP(16), 
 32582 ;; Return value:  Size  Location     Type
 32583 ;;		None               void
 32584 ;; Registers used:
 32585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32586 ;; Tracked objects:
 32587 ;;		On entry : 0/0
 32588 ;;		On exit  : 0/0
 32589 ;;		Unchanged: 0/0
 32590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32595 ;;Total ram usage:        4 bytes
 32596 ;; Hardware stack levels used:    1
 32597 ;; Hardware stack levels required when called:    4
 32598 ;; This function calls:
 32599 ;;		i1_SendLCDbyte
 32600 ;; This function is called by:
 32601 ;;		_low_isr
 32602 ;; This function uses a non-reentrant model
 32603 ;;
 32604                           
 32605                           	psect	text87
 32606  01744A                     __ptext87:
 32607                           	opt stack 0
 32608  01744A                     i1_LCDPrintString:
 32609                           	opt stack 18
 32610                           
 32611                           ;LCD.c: 235: unsigned char *c;
 32612                           ;LCD.c: 237: c = Text;
 32613                           
 32614                           ; BSR set to: 1
 32615                           ;incstack = 0
 32616  01744A  C010  F012         	movff	i1LCDPrintString@Text+1,i1LCDPrintString@c+1
 32617  01744E  C00F  F011         	movff	i1LCDPrintString@Text,i1LCDPrintString@c
 32618                           
 32619                           ;LCD.c: 239: while ((c != 0) && (*c != 0))
 32620  017452  D017               	goto	i1l13098
 32621  017454                     i1l13094:
 32622                           
 32623                           ;LCD.c: 240: {
 32624                           ;LCD.c: 241: SendLCDbyte(*c, 1);
 32625  017454  0E01               	movlw	1
 32626  017456  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 32627  017458  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 32628  01745C  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 32629  017460  0E00               	movlw	low (__mediumconst shr (0+16))
 32630  017462  6EF8               	movwf	tblptru,c
 32631  017464  0E0C               	movlw	(high __ramtop+-1)
 32632  017466  64F7               	cpfsgt	tblptrh,c
 32633  017468  D003               	bra	i1u1722_27
 32634  01746A  0008               	tblrd		*
 32635  01746C  50F5               	movf	tablat,w,c
 32636  01746E  D005               	bra	i1u1722_20
 32637  017470                     i1u1722_27:
 32638  017470  CFF6 FFE1          	movff	tblptrl,fsr1l
 32639  017474  CFF7 FFE2          	movff	tblptrh,fsr1h
 32640  017478  50E7               	movf	indf1,w,c
 32641  01747A                     i1u1722_20:
 32642  01747A  EC2D  F0B4         	call	i1_SendLCDbyte
 32643                           
 32644                           ;LCD.c: 242: c++;
 32645  01747E  4A11               	infsnz	i1LCDPrintString@c,f,c
 32646  017480  2A12               	incf	i1LCDPrintString@c+1,f,c
 32647  017482                     i1l13098:
 32648  017482  5012               	movf	i1LCDPrintString@c+1,w,c
 32649  017484  1011               	iorwf	i1LCDPrintString@c,w,c
 32650  017486  B4D8               	btfsc	status,2,c
 32651  017488  0012               	return	
 32652  01748A  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 32653  01748E  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 32654  017492  0E00               	movlw	low (__mediumconst shr (0+16))
 32655  017494  6EF8               	movwf	tblptru,c
 32656  017496  0E0C               	movlw	(high __ramtop+-1)
 32657  017498  64F7               	cpfsgt	tblptrh,c
 32658  01749A  D003               	bra	i1u1724_27
 32659  01749C  0008               	tblrd		*
 32660  01749E  50F5               	movf	tablat,w,c
 32661  0174A0  D005               	bra	i1u1724_20
 32662  0174A2                     i1u1724_27:
 32663  0174A2  CFF6 FFE1          	movff	tblptrl,fsr1l
 32664  0174A6  CFF7 FFE2          	movff	tblptrh,fsr1h
 32665  0174AA  50E7               	movf	indf1,w,c
 32666  0174AC                     i1u1724_20:
 32667  0174AC  0900               	iorlw	0
 32668  0174AE  B4D8               	btfsc	status,2,c
 32669  0174B0  0012               	return	
 32670  0174B2  D7D0               	goto	i1l13094
 32671  0174B4                     __end_ofi1_LCDPrintString:
 32672                           	opt stack 0
 32673                           pclatu	equ	0xFFB
 32674                           pclath	equ	0xFFA
 32675                           tblptru	equ	0xFF8
 32676                           tblptrh	equ	0xFF7
 32677                           tblptrl	equ	0xFF6
 32678                           tablat	equ	0xFF5
 32679                           prodh	equ	0xFF4
 32680                           prodl	equ	0xFF3
 32681                           intcon	equ	0xFF2
 32682                           postinc0	equ	0xFEE
 32683                           fsr0h	equ	0xFEA
 32684                           fsr0l	equ	0xFE9
 32685                           wreg	equ	0xFE8
 32686                           indf1	equ	0xFE7
 32687                           postinc1	equ	0xFE6
 32688                           postdec1	equ	0xFE5
 32689                           fsr1h	equ	0xFE2
 32690                           fsr1l	equ	0xFE1
 32691                           bsr	equ	0xFE0
 32692                           indf2	equ	0xFDF
 32693                           postinc2	equ	0xFDE
 32694                           postdec2	equ	0xFDD
 32695                           fsr2h	equ	0xFDA
 32696                           fsr2l	equ	0xFD9
 32697                           status	equ	0xFD8
 32698                           
 32699 ;; *************** function i1_LCDPrintChar *****************
 32700 ;; Defined at:
 32701 ;;		line 266 in file "LCD.c"
 32702 ;; Parameters:    Size  Location     Type
 32703 ;;  character       1    wreg     unsigned char 
 32704 ;; Auto vars:     Size  Location     Type
 32705 ;;  character       1   14[COMRAM] unsigned char 
 32706 ;; Return value:  Size  Location     Type
 32707 ;;		None               void
 32708 ;; Registers used:
 32709 ;;		wreg, status,2, status,0, cstack
 32710 ;; Tracked objects:
 32711 ;;		On entry : 0/0
 32712 ;;		On exit  : 0/0
 32713 ;;		Unchanged: 0/0
 32714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32718 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32719 ;;Total ram usage:        1 bytes
 32720 ;; Hardware stack levels used:    1
 32721 ;; Hardware stack levels required when called:    4
 32722 ;; This function calls:
 32723 ;;		i1_SendLCDbyte
 32724 ;; This function is called by:
 32725 ;;		_low_isr
 32726 ;; This function uses a non-reentrant model
 32727 ;;
 32728                           
 32729                           	psect	text88
 32730  017C86                     __ptext88:
 32731                           	opt stack 0
 32732  017C86                     i1_LCDPrintChar:
 32733                           	opt stack 18
 32734                           
 32735                           ;incstack = 0
 32736                           ;i1LCDPrintChar@character stored from wreg
 32737  017C86  6E0F               	movwf	i1LCDPrintChar@character,c
 32738                           
 32739                           ;LCD.c: 268: SendLCDbyte(character, 1);
 32740  017C88  0E01               	movlw	1
 32741  017C8A  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 32742  017C8C  500F               	movf	i1LCDPrintChar@character,w,c
 32743  017C8E  EC2D  F0B4         	call	i1_SendLCDbyte
 32744  017C92  0012               	return	
 32745  017C94                     __end_ofi1_LCDPrintChar:
 32746                           	opt stack 0
 32747                           pclatu	equ	0xFFB
 32748                           pclath	equ	0xFFA
 32749                           tblptru	equ	0xFF8
 32750                           tblptrh	equ	0xFF7
 32751                           tblptrl	equ	0xFF6
 32752                           tablat	equ	0xFF5
 32753                           prodh	equ	0xFF4
 32754                           prodl	equ	0xFF3
 32755                           intcon	equ	0xFF2
 32756                           postinc0	equ	0xFEE
 32757                           fsr0h	equ	0xFEA
 32758                           fsr0l	equ	0xFE9
 32759                           wreg	equ	0xFE8
 32760                           indf1	equ	0xFE7
 32761                           postinc1	equ	0xFE6
 32762                           postdec1	equ	0xFE5
 32763                           fsr1h	equ	0xFE2
 32764                           fsr1l	equ	0xFE1
 32765                           bsr	equ	0xFE0
 32766                           indf2	equ	0xFDF
 32767                           postinc2	equ	0xFDE
 32768                           postdec2	equ	0xFDD
 32769                           fsr2h	equ	0xFDA
 32770                           fsr2l	equ	0xFD9
 32771                           status	equ	0xFD8
 32772                           
 32773 ;; *************** function i1_ClearLCD *****************
 32774 ;; Defined at:
 32775 ;;		line 219 in file "LCD.c"
 32776 ;; Parameters:    Size  Location     Type
 32777 ;;		None
 32778 ;; Auto vars:     Size  Location     Type
 32779 ;;		None
 32780 ;; Return value:  Size  Location     Type
 32781 ;;		None               void
 32782 ;; Registers used:
 32783 ;;		wreg, status,2, status,0, cstack
 32784 ;; Tracked objects:
 32785 ;;		On entry : 0/0
 32786 ;;		On exit  : 0/0
 32787 ;;		Unchanged: 0/0
 32788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32793 ;;Total ram usage:        0 bytes
 32794 ;; Hardware stack levels used:    1
 32795 ;; Hardware stack levels required when called:    4
 32796 ;; This function calls:
 32797 ;;		i1_SendLCDbyte
 32798 ;; This function is called by:
 32799 ;;		_low_isr
 32800 ;; This function uses a non-reentrant model
 32801 ;;
 32802                           
 32803                           	psect	text89
 32804  017C04                     __ptext89:
 32805                           	opt stack 0
 32806  017C04                     i1_ClearLCD:
 32807                           	opt stack 18
 32808                           
 32809                           ;LCD.c: 224: SendLCDbyte(0x01, 0);
 32810                           
 32811                           ;incstack = 0
 32812  017C04  0E00               	movlw	0
 32813  017C06  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 32814  017C08  0E01               	movlw	1
 32815  017C0A  EC2D  F0B4         	call	i1_SendLCDbyte
 32816                           
 32817                           ;LCD.c: 225: SendLCDbyte(0x02, 0);
 32818  017C0E  0E00               	movlw	0
 32819  017C10  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 32820  017C12  0E02               	movlw	2
 32821  017C14  EC2D  F0B4         	call	i1_SendLCDbyte
 32822  017C18  0012               	return	
 32823  017C1A                     __end_ofi1_ClearLCD:
 32824                           	opt stack 0
 32825                           pclatu	equ	0xFFB
 32826                           pclath	equ	0xFFA
 32827                           tblptru	equ	0xFF8
 32828                           tblptrh	equ	0xFF7
 32829                           tblptrl	equ	0xFF6
 32830                           tablat	equ	0xFF5
 32831                           prodh	equ	0xFF4
 32832                           prodl	equ	0xFF3
 32833                           intcon	equ	0xFF2
 32834                           postinc0	equ	0xFEE
 32835                           fsr0h	equ	0xFEA
 32836                           fsr0l	equ	0xFE9
 32837                           wreg	equ	0xFE8
 32838                           indf1	equ	0xFE7
 32839                           postinc1	equ	0xFE6
 32840                           postdec1	equ	0xFE5
 32841                           fsr1h	equ	0xFE2
 32842                           fsr1l	equ	0xFE1
 32843                           bsr	equ	0xFE0
 32844                           indf2	equ	0xFDF
 32845                           postinc2	equ	0xFDE
 32846                           postdec2	equ	0xFDD
 32847                           fsr2h	equ	0xFDA
 32848                           fsr2l	equ	0xFD9
 32849                           status	equ	0xFD8
 32850                           
 32851 ;; *************** function i1_SendLCDbyte *****************
 32852 ;; Defined at:
 32853 ;;		line 106 in file "LCD.c"
 32854 ;; Parameters:    Size  Location     Type
 32855 ;;  data            1    wreg     unsigned char 
 32856 ;;  isCommand       1   10[COMRAM] unsigned char 
 32857 ;; Auto vars:     Size  Location     Type
 32858 ;;  data            1   11[COMRAM] unsigned char 
 32859 ;;  SendLCDbyte     1   13[COMRAM] unsigned char 
 32860 ;;  SendLCDbyte     1   12[COMRAM] unsigned char 
 32861 ;; Return value:  Size  Location     Type
 32862 ;;		None               void
 32863 ;; Registers used:
 32864 ;;		wreg, status,2, status,0, cstack
 32865 ;; Tracked objects:
 32866 ;;		On entry : 0/0
 32867 ;;		On exit  : 0/0
 32868 ;;		Unchanged: 0/0
 32869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32870 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32871 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32873 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32874 ;;Total ram usage:        4 bytes
 32875 ;; Hardware stack levels used:    1
 32876 ;; Hardware stack levels required when called:    3
 32877 ;; This function calls:
 32878 ;;		i1_PulseEnablePin
 32879 ;;		i1_delayUS
 32880 ;; This function is called by:
 32881 ;;		i1_SetLCDcursor
 32882 ;;		i1_ClearLCD
 32883 ;;		i1_LCDPrintString
 32884 ;;		i1_LCDPrintChar
 32885 ;; This function uses a non-reentrant model
 32886 ;;
 32887                           
 32888                           	psect	text90
 32889  01685A                     __ptext90:
 32890                           	opt stack 0
 32891  01685A                     i1_SendLCDbyte:
 32892                           	opt stack 18
 32893                           
 32894                           ;incstack = 0
 32895                           ;i1SendLCDbyte@data stored from wreg
 32896  01685A  6E0C               	movwf	i1SendLCDbyte@data,c
 32897                           
 32898                           ;LCD.c: 108: unsigned char MSB_nibble=0;
 32899  01685C  0E00               	movlw	0
 32900  01685E  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 32901                           
 32902                           ;LCD.c: 109: unsigned char LSB_nibble=0;
 32903  016860  0E00               	movlw	0
 32904  016862  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 32905                           
 32906                           ;LCD.c: 111: LATA &= ~(0b00001000+0b00010000+0b00100000);
 32907  016864  0EC7               	movlw	199
 32908  016866  1689               	andwf	3977,f,c	;volatile
 32909                           
 32910                           ;LCD.c: 112: LATE &= ~0b00000001;
 32911  016868  908D               	bcf	3981,0,c	;volatile
 32912                           
 32913                           ;LCD.c: 113: LATD &= ~(0b10000000 + 0b00100000);
 32914  01686A  0E5F               	movlw	95
 32915  01686C  168C               	andwf	3980,f,c	;volatile
 32916                           
 32917                           ;LCD.c: 114: delayUS(10);
 32918  01686E  0E0A               	movlw	10
 32919  016870  6E01               	movwf	i1delayUS@US,c
 32920  016872  0E00               	movlw	0
 32921  016874  6E02               	movwf	i1delayUS@US+1,c
 32922  016876  0E00               	movlw	0
 32923  016878  6E03               	movwf	i1delayUS@US+2,c
 32924  01687A  0E00               	movlw	0
 32925  01687C  6E04               	movwf	i1delayUS@US+3,c
 32926  01687E  EC18  F0BC         	call	i1_delayUS	;wreg free
 32927                           
 32928                           ;LCD.c: 115: MSB_nibble = (data & 0xF0)>>4;
 32929  016882  380C               	swapf	i1SendLCDbyte@data,w,c
 32930  016884  0B0F               	andlw	15
 32931  016886  0B0F               	andlw	15
 32932  016888  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 32933                           
 32934                           ;LCD.c: 116: LSB_nibble = (data & 0x0F);
 32935  01688A  500C               	movf	i1SendLCDbyte@data,w,c
 32936  01688C  0B0F               	andlw	15
 32937  01688E  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 32938                           
 32939                           ;LCD.c: 117: if(!LCDwait)
 32940  016890  0101               	movlb	1	; () banked
 32941  016892  6795               	tstfsz	_LCDwait& (0+255),b
 32942  016894  D028               	goto	i1l12136
 32943                           
 32944                           ; BSR set to: 1
 32945                           ;LCD.c: 118: {
 32946                           ;LCD.c: 119: if(isCommand)
 32947  016896  500B               	movf	i1SendLCDbyte@isCommand,w,c
 32948  016898  B4D8               	btfsc	status,2,c
 32949  01689A  D002               	goto	i1l12092
 32950                           
 32951                           ; BSR set to: 1
 32952                           ;LCD.c: 120: {
 32953                           ;LCD.c: 121: LATD |= (0b00100000);
 32954  01689C  8A8C               	bsf	3980,5,c	;volatile
 32955                           
 32956                           ;LCD.c: 122: }
 32957  01689E  D001               	goto	i1l12094
 32958  0168A0                     i1l12092:
 32959                           
 32960                           ; BSR set to: 1
 32961                           ;LCD.c: 123: else
 32962                           ;LCD.c: 124: {
 32963                           ;LCD.c: 125: LATD &= ~(0b00100000);
 32964  0168A0  9A8C               	bcf	3980,5,c	;volatile
 32965  0168A2                     i1l12094:
 32966                           
 32967                           ; BSR set to: 1
 32968                           ;LCD.c: 126: }
 32969                           ;LCD.c: 127: if(MSB_nibble&0b1000)
 32970  0168A2  B60D               	btfsc	i1SendLCDbyte@MSB_nibble,3,c
 32971                           
 32972                           ; BSR set to: 1
 32973                           ;LCD.c: 128: {
 32974                           ;LCD.c: 129: LATA |= 0b00001000;
 32975  0168A4  8689               	bsf	3977,3,c	;volatile
 32976                           
 32977                           ; BSR set to: 1
 32978                           ;LCD.c: 130: }
 32979                           ;LCD.c: 131: if(MSB_nibble&0b0100)
 32980                           
 32981                           ; BSR set to: 1
 32982  0168A6  B40D               	btfsc	i1SendLCDbyte@MSB_nibble,2,c
 32983                           
 32984                           ; BSR set to: 1
 32985                           ;LCD.c: 132: {
 32986                           ;LCD.c: 133: LATA |= 0b00010000;
 32987  0168A8  8889               	bsf	3977,4,c	;volatile
 32988                           
 32989                           ; BSR set to: 1
 32990                           ;LCD.c: 134: }
 32991                           ;LCD.c: 135: if(MSB_nibble&0b0010)
 32992                           
 32993                           ; BSR set to: 1
 32994  0168AA  B20D               	btfsc	i1SendLCDbyte@MSB_nibble,1,c
 32995                           
 32996                           ; BSR set to: 1
 32997                           ;LCD.c: 136: {
 32998                           ;LCD.c: 137: LATA |= 0b00100000;
 32999  0168AC  8A89               	bsf	3977,5,c	;volatile
 33000                           
 33001                           ; BSR set to: 1
 33002                           ;LCD.c: 138: }
 33003                           ;LCD.c: 139: if(MSB_nibble&0b0001)
 33004                           
 33005                           ; BSR set to: 1
 33006  0168AE  B00D               	btfsc	i1SendLCDbyte@MSB_nibble,0,c
 33007                           
 33008                           ; BSR set to: 1
 33009                           ;LCD.c: 140: {
 33010                           ;LCD.c: 141: LATE |= 0b00000001;
 33011  0168B0  808D               	bsf	3981,0,c	;volatile
 33012                           
 33013                           ; BSR set to: 1
 33014                           ;LCD.c: 142: }
 33015                           ;LCD.c: 143: PulseEnablePin();
 33016                           
 33017                           ; BSR set to: 1
 33018  0168B2  EC6B  F0BD         	call	i1_PulseEnablePin	;wreg free
 33019                           
 33020                           ;LCD.c: 144: LATA &= ~(0b00001000+0b00010000+0b00100000);
 33021  0168B6  0EC7               	movlw	199
 33022  0168B8  1689               	andwf	3977,f,c	;volatile
 33023                           
 33024                           ;LCD.c: 145: LATE &= ~0b00000001;
 33025  0168BA  908D               	bcf	3981,0,c	;volatile
 33026                           
 33027                           ;LCD.c: 146: delayUS(10);
 33028  0168BC  0E0A               	movlw	10
 33029  0168BE  6E01               	movwf	i1delayUS@US,c
 33030  0168C0  0E00               	movlw	0
 33031  0168C2  6E02               	movwf	i1delayUS@US+1,c
 33032  0168C4  0E00               	movlw	0
 33033  0168C6  6E03               	movwf	i1delayUS@US+2,c
 33034  0168C8  0E00               	movlw	0
 33035  0168CA  6E04               	movwf	i1delayUS@US+3,c
 33036  0168CC  EC18  F0BC         	call	i1_delayUS	;wreg free
 33037                           
 33038                           ;LCD.c: 147: if(LSB_nibble&0b1000)
 33039  0168D0  B60E               	btfsc	i1SendLCDbyte@LSB_nibble,3,c
 33040                           
 33041                           ;LCD.c: 148: {
 33042                           ;LCD.c: 149: LATA |= 0b00001000;
 33043  0168D2  8689               	bsf	3977,3,c	;volatile
 33044                           
 33045                           ;LCD.c: 150: }
 33046                           ;LCD.c: 151: if(LSB_nibble&0b0100)
 33047  0168D4  B40E               	btfsc	i1SendLCDbyte@LSB_nibble,2,c
 33048                           
 33049                           ;LCD.c: 152: {
 33050                           ;LCD.c: 153: LATA |= 0b00010000;
 33051  0168D6  8889               	bsf	3977,4,c	;volatile
 33052                           
 33053                           ;LCD.c: 154: }
 33054                           ;LCD.c: 155: if(LSB_nibble&0b0010)
 33055  0168D8  B20E               	btfsc	i1SendLCDbyte@LSB_nibble,1,c
 33056                           
 33057                           ;LCD.c: 156: {
 33058                           ;LCD.c: 157: LATA |= 0b00100000;
 33059  0168DA  8A89               	bsf	3977,5,c	;volatile
 33060                           
 33061                           ;LCD.c: 158: }
 33062                           ;LCD.c: 159: if(LSB_nibble&0b0001)
 33063  0168DC  B00E               	btfsc	i1SendLCDbyte@LSB_nibble,0,c
 33064                           
 33065                           ;LCD.c: 160: {
 33066                           ;LCD.c: 161: LATE |= 0b00000001;
 33067  0168DE  808D               	bsf	3981,0,c	;volatile
 33068                           
 33069                           ;LCD.c: 162: }
 33070                           ;LCD.c: 163: PulseEnablePin();
 33071  0168E0  EC6B  F0BD         	call	i1_PulseEnablePin	;wreg free
 33072                           
 33073                           ;LCD.c: 164: }
 33074  0168E4  0012               	return	
 33075  0168E6                     i1l12136:
 33076                           
 33077                           ;LCD.c: 165: else
 33078                           ;LCD.c: 166: {
 33079                           ;LCD.c: 167: delayUS(20);
 33080  0168E6  0E14               	movlw	20
 33081  0168E8  6E01               	movwf	i1delayUS@US,c
 33082  0168EA  0E00               	movlw	0
 33083  0168EC  6E02               	movwf	i1delayUS@US+1,c
 33084  0168EE  0E00               	movlw	0
 33085  0168F0  6E03               	movwf	i1delayUS@US+2,c
 33086  0168F2  0E00               	movlw	0
 33087  0168F4  6E04               	movwf	i1delayUS@US+3,c
 33088  0168F6  EC18  F0BC         	call	i1_delayUS	;wreg free
 33089  0168FA  0012               	return	
 33090  0168FC                     __end_ofi1_SendLCDbyte:
 33091                           	opt stack 0
 33092                           pclatu	equ	0xFFB
 33093                           pclath	equ	0xFFA
 33094                           tblptru	equ	0xFF8
 33095                           tblptrh	equ	0xFF7
 33096                           tblptrl	equ	0xFF6
 33097                           tablat	equ	0xFF5
 33098                           prodh	equ	0xFF4
 33099                           prodl	equ	0xFF3
 33100                           intcon	equ	0xFF2
 33101                           postinc0	equ	0xFEE
 33102                           fsr0h	equ	0xFEA
 33103                           fsr0l	equ	0xFE9
 33104                           wreg	equ	0xFE8
 33105                           indf1	equ	0xFE7
 33106                           postinc1	equ	0xFE6
 33107                           postdec1	equ	0xFE5
 33108                           fsr1h	equ	0xFE2
 33109                           fsr1l	equ	0xFE1
 33110                           bsr	equ	0xFE0
 33111                           indf2	equ	0xFDF
 33112                           postinc2	equ	0xFDE
 33113                           postdec2	equ	0xFDD
 33114                           fsr2h	equ	0xFDA
 33115                           fsr2l	equ	0xFD9
 33116                           status	equ	0xFD8
 33117                           
 33118 ;; *************** function i1_PulseEnablePin *****************
 33119 ;; Defined at:
 33120 ;;		line 177 in file "LCD.c"
 33121 ;; Parameters:    Size  Location     Type
 33122 ;;		None
 33123 ;; Auto vars:     Size  Location     Type
 33124 ;;		None
 33125 ;; Return value:  Size  Location     Type
 33126 ;;		None               void
 33127 ;; Registers used:
 33128 ;;		wreg, status,2, status,0, cstack
 33129 ;; Tracked objects:
 33130 ;;		On entry : 0/0
 33131 ;;		On exit  : 0/0
 33132 ;;		Unchanged: 0/0
 33133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33138 ;;Total ram usage:        0 bytes
 33139 ;; Hardware stack levels used:    1
 33140 ;; Hardware stack levels required when called:    2
 33141 ;; This function calls:
 33142 ;;		i1_delayUS
 33143 ;; This function is called by:
 33144 ;;		i1_SendLCDbyte
 33145 ;; This function uses a non-reentrant model
 33146 ;;
 33147                           
 33148                           	psect	text91
 33149  017AD6                     __ptext91:
 33150                           	opt stack 0
 33151  017AD6                     i1_PulseEnablePin:
 33152                           	opt stack 18
 33153                           
 33154                           ;LCD.c: 180: LATD |= (0b10000000);
 33155                           
 33156                           ;incstack = 0
 33157  017AD6  8E8C               	bsf	3980,7,c	;volatile
 33158                           
 33159                           ;LCD.c: 181: delayUS(2500);
 33160  017AD8  0EC4               	movlw	196
 33161  017ADA  6E01               	movwf	i1delayUS@US,c
 33162  017ADC  0E09               	movlw	9
 33163  017ADE  6E02               	movwf	i1delayUS@US+1,c
 33164  017AE0  0E00               	movlw	0
 33165  017AE2  6E03               	movwf	i1delayUS@US+2,c
 33166  017AE4  0E00               	movlw	0
 33167  017AE6  6E04               	movwf	i1delayUS@US+3,c
 33168  017AE8  EC18  F0BC         	call	i1_delayUS	;wreg free
 33169                           
 33170                           ;LCD.c: 183: LATD &= ~(0b10000000);
 33171  017AEC  9E8C               	bcf	3980,7,c	;volatile
 33172                           
 33173                           ;LCD.c: 184: delayUS(2500);
 33174  017AEE  0EC4               	movlw	196
 33175  017AF0  6E01               	movwf	i1delayUS@US,c
 33176  017AF2  0E09               	movlw	9
 33177  017AF4  6E02               	movwf	i1delayUS@US+1,c
 33178  017AF6  0E00               	movlw	0
 33179  017AF8  6E03               	movwf	i1delayUS@US+2,c
 33180  017AFA  0E00               	movlw	0
 33181  017AFC  6E04               	movwf	i1delayUS@US+3,c
 33182  017AFE  EC18  F0BC         	call	i1_delayUS	;wreg free
 33183  017B02  0012               	return	
 33184  017B04                     __end_ofi1_PulseEnablePin:
 33185                           	opt stack 0
 33186                           pclatu	equ	0xFFB
 33187                           pclath	equ	0xFFA
 33188                           tblptru	equ	0xFF8
 33189                           tblptrh	equ	0xFF7
 33190                           tblptrl	equ	0xFF6
 33191                           tablat	equ	0xFF5
 33192                           prodh	equ	0xFF4
 33193                           prodl	equ	0xFF3
 33194                           intcon	equ	0xFF2
 33195                           postinc0	equ	0xFEE
 33196                           fsr0h	equ	0xFEA
 33197                           fsr0l	equ	0xFE9
 33198                           wreg	equ	0xFE8
 33199                           indf1	equ	0xFE7
 33200                           postinc1	equ	0xFE6
 33201                           postdec1	equ	0xFE5
 33202                           fsr1h	equ	0xFE2
 33203                           fsr1l	equ	0xFE1
 33204                           bsr	equ	0xFE0
 33205                           indf2	equ	0xFDF
 33206                           postinc2	equ	0xFDE
 33207                           postdec2	equ	0xFDD
 33208                           fsr2h	equ	0xFDA
 33209                           fsr2l	equ	0xFD9
 33210                           status	equ	0xFD8
 33211                           
 33212 ;; *************** function i1_delayUS *****************
 33213 ;; Defined at:
 33214 ;;		line 55 in file "MISC.c"
 33215 ;; Parameters:    Size  Location     Type
 33216 ;;  US              4    0[COMRAM] long 
 33217 ;; Auto vars:     Size  Location     Type
 33218 ;;  delayUS         4    5[COMRAM] long 
 33219 ;;  delayUS         1    9[COMRAM] unsigned char 
 33220 ;; Return value:  Size  Location     Type
 33221 ;;		None               void
 33222 ;; Registers used:
 33223 ;;		wreg, status,2, status,0
 33224 ;; Tracked objects:
 33225 ;;		On entry : 0/0
 33226 ;;		On exit  : 0/0
 33227 ;;		Unchanged: 0/0
 33228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33230 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33232 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33233 ;;Total ram usage:       10 bytes
 33234 ;; Hardware stack levels used:    1
 33235 ;; Hardware stack levels required when called:    1
 33236 ;; This function calls:
 33237 ;;		Nothing
 33238 ;; This function is called by:
 33239 ;;		i1_SendLCDbyte
 33240 ;;		i1_PulseEnablePin
 33241 ;; This function uses a non-reentrant model
 33242 ;;
 33243                           
 33244                           	psect	text92
 33245  017830                     __ptext92:
 33246                           	opt stack 0
 33247  017830                     i1_delayUS:
 33248                           	opt stack 19
 33249                           
 33250                           ;MISC.c: 57: long i;
 33251                           ;MISC.c: 58: unsigned char j;
 33252                           ;MISC.c: 59: for(i=0;i<US;i+=31)
 33253                           
 33254                           ;incstack = 0
 33255  017830  0E00               	movlw	0
 33256  017832  6E06               	movwf	i1delayUS@i,c
 33257  017834  0E00               	movlw	0
 33258  017836  6E07               	movwf	i1delayUS@i+1,c
 33259  017838  0E00               	movlw	0
 33260  01783A  6E08               	movwf	i1delayUS@i+2,c
 33261  01783C  0E00               	movlw	0
 33262  01783E  6E09               	movwf	i1delayUS@i+3,c
 33263  017840  D00E               	goto	i1l217
 33264  017842                     i1l10162:
 33265                           
 33266                           ;MISC.c: 60: {
 33267                           ;MISC.c: 61: for(j=0;j<41;j++)
 33268  017842  0E00               	movlw	0
 33269  017844  6E0A               	movwf	i1delayUS@j,c
 33270  017846  D002               	goto	L52
 33271  017848                     i1l219:
 33272                           
 33273                           ;MISC.c: 62: {
 33274                           ;MISC.c: 63: __nop();
 33275  017848  F000               	nop	
 33276  01784A  2A0A               	incf	i1delayUS@j,f,c
 33277  01784C                     L52:
 33278  01784C  0E28               	movlw	40
 33279  01784E  640A               	cpfsgt	i1delayUS@j,c
 33280  017850  D7FB               	goto	i1l219
 33281  017852  0E1F               	movlw	31
 33282  017854  2606               	addwf	i1delayUS@i,f,c
 33283  017856  0E00               	movlw	0
 33284  017858  2207               	addwfc	i1delayUS@i+1,f,c
 33285  01785A  2208               	addwfc	i1delayUS@i+2,f,c
 33286  01785C  2209               	addwfc	i1delayUS@i+3,f,c
 33287  01785E                     i1l217:
 33288  01785E  5009               	movf	i1delayUS@i+3,w,c
 33289  017860  0A80               	xorlw	128
 33290  017862  6E05               	movwf	??i1_delayUS& (0+255),c
 33291  017864  5001               	movf	i1delayUS@US,w,c
 33292  017866  5C06               	subwf	i1delayUS@i,w,c
 33293  017868  5002               	movf	i1delayUS@US+1,w,c
 33294  01786A  5807               	subwfb	i1delayUS@i+1,w,c
 33295  01786C  5003               	movf	i1delayUS@US+2,w,c
 33296  01786E  5808               	subwfb	i1delayUS@i+2,w,c
 33297  017870  5004               	movf	i1delayUS@US+3,w,c
 33298  017872  0A80               	xorlw	128
 33299  017874  5805               	subwfb	??i1_delayUS& (0+255),w,c
 33300  017876  B0D8               	btfsc	status,0,c
 33301  017878  0012               	return	
 33302  01787A  D7E3               	goto	i1l10162
 33303  01787C                     __end_ofi1_delayUS:
 33304                           	opt stack 0
 33305                           pclatu	equ	0xFFB
 33306                           pclath	equ	0xFFA
 33307                           tblptru	equ	0xFF8
 33308                           tblptrh	equ	0xFF7
 33309                           tblptrl	equ	0xFF6
 33310                           tablat	equ	0xFF5
 33311                           prodh	equ	0xFF4
 33312                           prodl	equ	0xFF3
 33313                           intcon	equ	0xFF2
 33314                           postinc0	equ	0xFEE
 33315                           fsr0h	equ	0xFEA
 33316                           fsr0l	equ	0xFE9
 33317                           wreg	equ	0xFE8
 33318                           indf1	equ	0xFE7
 33319                           postinc1	equ	0xFE6
 33320                           postdec1	equ	0xFE5
 33321                           fsr1h	equ	0xFE2
 33322                           fsr1l	equ	0xFE1
 33323                           bsr	equ	0xFE0
 33324                           indf2	equ	0xFDF
 33325                           postinc2	equ	0xFDE
 33326                           postdec2	equ	0xFDD
 33327                           fsr2h	equ	0xFDA
 33328                           fsr2l	equ	0xFD9
 33329                           status	equ	0xFD8
 33330                           
 33331 ;; *************** function i1_BufferCopy *****************
 33332 ;; Defined at:
 33333 ;;		line 87 in file "MISC.c"
 33334 ;; Parameters:    Size  Location     Type
 33335 ;;  from            2    8[COMRAM] PTR unsigned char 
 33336 ;;		 -> STR_292(5), STR_291(5), STR_290(10), STR_289(16), 
 33337 ;;		 -> STR_288(11), STR_287(12), STR_286(9), STR_285(14), 
 33338 ;;		 -> STR_268(6), STR_267(9), STR_266(14), STR_250(4), 
 33339 ;;		 -> STR_249(5), STR_248(8), STR_247(10), STR_246(9), 
 33340 ;;		 -> STR_215(2), STR_214(10), STR_213(9), STR_194(10), 
 33341 ;;		 -> STR_193(10), STR_192(13), STR_177(10), STR_176(10), 
 33342 ;;		 -> STR_175(17), STR_155(6), STR_154(6), STR_153(9), 
 33343 ;;		 -> STR_152(10), STR_127(7), STR_126(4), STR_125(6), 
 33344 ;;		 -> STR_124(9), STR_123(13), STR_92(4), STR_91(6), 
 33345 ;;		 -> STR_90(9), STR_89(14), STR_67(5), STR_66(5), 
 33346 ;;		 -> STR_65(9), STR_64(9), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 33347 ;;		 -> low_isr@TEMP_Rxdata(100), 
 33348 ;;  to              2   10[COMRAM] PTR unsigned char 
 33349 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 33350 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 33351 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 33352 ;;  count           1   12[COMRAM] unsigned char 
 33353 ;;  shift           1   13[COMRAM] unsigned char 
 33354 ;; Auto vars:     Size  Location     Type
 33355 ;;  BufferCopy      1   14[COMRAM] unsigned char 
 33356 ;; Return value:  Size  Location     Type
 33357 ;;		None               void
 33358 ;; Registers used:
 33359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33360 ;; Tracked objects:
 33361 ;;		On entry : 0/0
 33362 ;;		On exit  : 0/0
 33363 ;;		Unchanged: 0/0
 33364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33365 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33368 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33369 ;;Total ram usage:        7 bytes
 33370 ;; Hardware stack levels used:    1
 33371 ;; Hardware stack levels required when called:    2
 33372 ;; This function calls:
 33373 ;;		i1_cleanBuffer
 33374 ;; This function is called by:
 33375 ;;		_low_isr
 33376 ;; This function uses a non-reentrant model
 33377 ;;
 33378                           
 33379                           	psect	text93
 33380  0168FC                     __ptext93:
 33381                           	opt stack 0
 33382  0168FC                     i1_BufferCopy:
 33383                           	opt stack 20
 33384                           
 33385                           ;MISC.c: 89: unsigned char i=0;
 33386                           
 33387                           ;incstack = 0
 33388  0168FC  0E00               	movlw	0
 33389  0168FE  6E0F               	movwf	i1BufferCopy@i,c
 33390                           
 33391                           ;MISC.c: 90: cleanBuffer(to,count);
 33392  016900  C00C  F002         	movff	i1BufferCopy@to+1,i1cleanBuffer@data+1
 33393  016904  C00B  F001         	movff	i1BufferCopy@to,i1cleanBuffer@data
 33394  016908  C00D  F003         	movff	i1BufferCopy@count,i1cleanBuffer@count
 33395  01690C  6A04               	clrf	i1cleanBuffer@count+1,c
 33396  01690E  ECA1  F0BC         	call	i1_cleanBuffer	;wreg free
 33397                           
 33398                           ;MISC.c: 91: for(i = shift; i>0;i--)
 33399  016912  C00E  F00F         	movff	i1BufferCopy@shift,i1BufferCopy@i
 33400  016916  D009               	goto	L54
 33401  016918                     i1l9422:
 33402                           
 33403                           ;MISC.c: 92: {
 33404                           ;MISC.c: 93: *to = ' ';
 33405  016918  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 33406  01691C  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 33407  016920  0E20               	movlw	32
 33408  016922  6EDF               	movwf	indf2,c
 33409                           
 33410                           ;MISC.c: 94: to++;
 33411  016924  4A0B               	infsnz	i1BufferCopy@to,f,c
 33412  016926  2A0C               	incf	i1BufferCopy@to+1,f,c
 33413  016928  060F               	decf	i1BufferCopy@i,f,c
 33414  01692A                     L54:
 33415  01692A  660F               	tstfsz	i1BufferCopy@i,c
 33416  01692C  D7F5               	goto	i1l9422
 33417  01692E  D01B               	goto	L53
 33418  016930                     i1l9430:
 33419                           
 33420                           ;MISC.c: 97: {
 33421                           ;MISC.c: 98: *to = *from;
 33422  016930  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 33423  016934  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 33424  016938  0E00               	movlw	low (__mediumconst shr (0+16))
 33425  01693A  6EF8               	movwf	tblptru,c
 33426  01693C  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 33427  016940  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 33428  016944  0E0C               	movlw	(high __ramtop+-1)
 33429  016946  64F7               	cpfsgt	tblptrh,c
 33430  016948  D003               	bra	i1u1141_27
 33431  01694A  0008               	tblrd		*
 33432  01694C  50F5               	movf	tablat,w,c
 33433  01694E  D005               	bra	i1u1141_20
 33434  016950                     i1u1141_27:
 33435  016950  CFF6 FFE1          	movff	tblptrl,fsr1l
 33436  016954  CFF7 FFE2          	movff	tblptrh,fsr1h
 33437  016958  50E7               	movf	indf1,w,c
 33438  01695A                     i1u1141_20:
 33439  01695A  6EDF               	movwf	indf2,c
 33440                           
 33441                           ;MISC.c: 99: from++;
 33442  01695C  4A09               	infsnz	i1BufferCopy@from,f,c
 33443  01695E  2A0A               	incf	i1BufferCopy@from+1,f,c
 33444                           
 33445                           ;MISC.c: 100: to++;
 33446  016960  4A0B               	infsnz	i1BufferCopy@to,f,c
 33447  016962  2A0C               	incf	i1BufferCopy@to+1,f,c
 33448                           
 33449                           ;MISC.c: 101: count--;
 33450  016964  060D               	decf	i1BufferCopy@count,f,c
 33451  016966                     L53:
 33452  016966  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 33453  01696A  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 33454  01696E  0E00               	movlw	low (__mediumconst shr (0+16))
 33455  016970  6EF8               	movwf	tblptru,c
 33456  016972  0E0C               	movlw	(high __ramtop+-1)
 33457  016974  64F7               	cpfsgt	tblptrh,c
 33458  016976  D003               	bra	i1u1142_27
 33459  016978  0008               	tblrd		*
 33460  01697A  50F5               	movf	tablat,w,c
 33461  01697C  D005               	bra	i1u1142_20
 33462  01697E                     i1u1142_27:
 33463  01697E  CFF6 FFE1          	movff	tblptrl,fsr1l
 33464  016982  CFF7 FFE2          	movff	tblptrh,fsr1h
 33465  016986  50E7               	movf	indf1,w,c
 33466  016988                     i1u1142_20:
 33467  016988  0900               	iorlw	0
 33468  01698A  B4D8               	btfsc	status,2,c
 33469  01698C  0012               	return	
 33470  01698E  660D               	tstfsz	i1BufferCopy@count,c
 33471  016990  D7CF               	goto	i1l9430
 33472  016992  0012               	return	
 33473  016994                     __end_ofi1_BufferCopy:
 33474                           	opt stack 0
 33475                           pclatu	equ	0xFFB
 33476                           pclath	equ	0xFFA
 33477                           tblptru	equ	0xFF8
 33478                           tblptrh	equ	0xFF7
 33479                           tblptrl	equ	0xFF6
 33480                           tablat	equ	0xFF5
 33481                           prodh	equ	0xFF4
 33482                           prodl	equ	0xFF3
 33483                           intcon	equ	0xFF2
 33484                           postinc0	equ	0xFEE
 33485                           fsr0h	equ	0xFEA
 33486                           fsr0l	equ	0xFE9
 33487                           wreg	equ	0xFE8
 33488                           indf1	equ	0xFE7
 33489                           postinc1	equ	0xFE6
 33490                           postdec1	equ	0xFE5
 33491                           fsr1h	equ	0xFE2
 33492                           fsr1l	equ	0xFE1
 33493                           bsr	equ	0xFE0
 33494                           indf2	equ	0xFDF
 33495                           postinc2	equ	0xFDE
 33496                           postdec2	equ	0xFDD
 33497                           fsr2h	equ	0xFDA
 33498                           fsr2l	equ	0xFD9
 33499                           status	equ	0xFD8
 33500                           
 33501 ;; *************** function i1_cleanBuffer *****************
 33502 ;; Defined at:
 33503 ;;		line 73 in file "MISC.c"
 33504 ;; Parameters:    Size  Location     Type
 33505 ;;  data            2    0[COMRAM] PTR unsigned char 
 33506 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 33507 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 33508 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 33509 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 33510 ;;  count           2    2[COMRAM] int 
 33511 ;; Auto vars:     Size  Location     Type
 33512 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 33513 ;; Return value:  Size  Location     Type
 33514 ;;		None               void
 33515 ;; Registers used:
 33516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33517 ;; Tracked objects:
 33518 ;;		On entry : 0/0
 33519 ;;		On exit  : 0/0
 33520 ;;		Unchanged: 0/0
 33521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33524 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33525 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33526 ;;Total ram usage:        8 bytes
 33527 ;; Hardware stack levels used:    1
 33528 ;; Hardware stack levels required when called:    1
 33529 ;; This function calls:
 33530 ;;		Nothing
 33531 ;; This function is called by:
 33532 ;;		_low_isr
 33533 ;;		i1_BufferCopy
 33534 ;; This function uses a non-reentrant model
 33535 ;;
 33536                           
 33537                           	psect	text94
 33538  017942                     __ptext94:
 33539                           	opt stack 0
 33540  017942                     i1_cleanBuffer:
 33541                           	opt stack 21
 33542                           
 33543                           ;MISC.c: 75: unsigned char i=0;
 33544                           
 33545                           ;incstack = 0
 33546  017942  0E00               	movlw	0
 33547  017944  6E08               	movwf	i1cleanBuffer@i,c
 33548                           
 33549                           ;MISC.c: 76: for(i=0; i<count;i++)
 33550  017946  0E00               	movlw	0
 33551  017948  6E08               	movwf	i1cleanBuffer@i,c
 33552  01794A  D00B               	goto	i1l8334
 33553  01794C                     i1l8330:
 33554                           
 33555                           ;MISC.c: 77: {
 33556                           ;MISC.c: 78: data[i]= 0;
 33557  01794C  5008               	movf	i1cleanBuffer@i,w,c
 33558  01794E  0D01               	mullw	1
 33559  017950  50F3               	movf	prodl,w,c
 33560  017952  2401               	addwf	i1cleanBuffer@data,w,c
 33561  017954  6ED9               	movwf	fsr2l,c
 33562  017956  50F4               	movf	prodh,w,c
 33563  017958  2002               	addwfc	i1cleanBuffer@data+1,w,c
 33564  01795A  6EDA               	movwf	fsr2h,c
 33565  01795C  0E00               	movlw	0
 33566  01795E  6EDF               	movwf	indf2,c
 33567  017960  2A08               	incf	i1cleanBuffer@i,f,c
 33568  017962                     i1l8334:
 33569  017962  5008               	movf	i1cleanBuffer@i,w,c
 33570  017964  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 33571  017966  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 33572  017968  5006               	movf	??i1_cleanBuffer+1,w,c
 33573  01796A  0A80               	xorlw	128
 33574  01796C  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 33575  01796E  5003               	movf	i1cleanBuffer@count,w,c
 33576  017970  5C05               	subwf	??i1_cleanBuffer,w,c
 33577  017972  5004               	movf	i1cleanBuffer@count+1,w,c
 33578  017974  0A80               	xorlw	128
 33579  017976  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 33580  017978  B0D8               	btfsc	status,0,c
 33581  01797A  0012               	return	
 33582  01797C  D7E7               	goto	i1l8330
 33583  01797E                     __end_ofi1_cleanBuffer:
 33584                           	opt stack 0
 33585                           pclatu	equ	0xFFB
 33586                           pclath	equ	0xFFA
 33587                           tblptru	equ	0xFF8
 33588                           tblptrh	equ	0xFF7
 33589                           tblptrl	equ	0xFF6
 33590                           tablat	equ	0xFF5
 33591                           prodh	equ	0xFF4
 33592                           prodl	equ	0xFF3
 33593                           intcon	equ	0xFF2
 33594                           postinc0	equ	0xFEE
 33595                           fsr0h	equ	0xFEA
 33596                           fsr0l	equ	0xFE9
 33597                           wreg	equ	0xFE8
 33598                           indf1	equ	0xFE7
 33599                           postinc1	equ	0xFE6
 33600                           postdec1	equ	0xFE5
 33601                           fsr1h	equ	0xFE2
 33602                           fsr1l	equ	0xFE1
 33603                           bsr	equ	0xFE0
 33604                           indf2	equ	0xFDF
 33605                           postinc2	equ	0xFDE
 33606                           postdec2	equ	0xFDD
 33607                           fsr2h	equ	0xFDA
 33608                           fsr2l	equ	0xFD9
 33609                           status	equ	0xFD8
 33610                           
 33611 ;; *************** function _WriteUSART *****************
 33612 ;; Defined at:
 33613 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
 33614 ;; Parameters:    Size  Location     Type
 33615 ;;  data            1    wreg     unsigned char 
 33616 ;; Auto vars:     Size  Location     Type
 33617 ;;  data            1    0[COMRAM] unsigned char 
 33618 ;; Return value:  Size  Location     Type
 33619 ;;		None               void
 33620 ;; Registers used:
 33621 ;;		wreg
 33622 ;; Tracked objects:
 33623 ;;		On entry : 0/0
 33624 ;;		On exit  : 0/0
 33625 ;;		Unchanged: 0/0
 33626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33631 ;;Total ram usage:        1 bytes
 33632 ;; Hardware stack levels used:    1
 33633 ;; Hardware stack levels required when called:    1
 33634 ;; This function calls:
 33635 ;;		Nothing
 33636 ;; This function is called by:
 33637 ;;		_low_isr
 33638 ;; This function uses a non-reentrant model
 33639 ;;
 33640                           
 33641                           	psect	text95
 33642  017C42                     __ptext95:
 33643                           	opt stack 0
 33644  017C42                     _WriteUSART:
 33645                           	opt stack 21
 33646                           
 33647                           ;incstack = 0
 33648                           ;WriteUSART@data stored from wreg
 33649  017C42  6E01               	movwf	WriteUSART@data,c
 33650  017C44  ACAC               	btfss	4012,6,c	;volatile
 33651  017C46  D004               	goto	i1l8428
 33652  017C48  90AC               	bcf	4012,0,c	;volatile
 33653  017C4A  0101               	movlb	1	; () banked
 33654  017C4C  B399               	btfsc	_USART_Status& (0+255),1,b
 33655                           
 33656                           ; BSR set to: 1
 33657  017C4E  80AC               	bsf	4012,0,c	;volatile
 33658  017C50                     i1l8428:
 33659  017C50  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
 33660  017C54  0012               	return	
 33661  017C56                     __end_of_WriteUSART:
 33662                           	opt stack 0
 33663                           pclatu	equ	0xFFB
 33664                           pclath	equ	0xFFA
 33665                           tblptru	equ	0xFF8
 33666                           tblptrh	equ	0xFF7
 33667                           tblptrl	equ	0xFF6
 33668                           tablat	equ	0xFF5
 33669                           prodh	equ	0xFF4
 33670                           prodl	equ	0xFF3
 33671                           intcon	equ	0xFF2
 33672                           postinc0	equ	0xFEE
 33673                           fsr0h	equ	0xFEA
 33674                           fsr0l	equ	0xFE9
 33675                           wreg	equ	0xFE8
 33676                           indf1	equ	0xFE7
 33677                           postinc1	equ	0xFE6
 33678                           postdec1	equ	0xFE5
 33679                           fsr1h	equ	0xFE2
 33680                           fsr1l	equ	0xFE1
 33681                           bsr	equ	0xFE0
 33682                           indf2	equ	0xFDF
 33683                           postinc2	equ	0xFDE
 33684                           postdec2	equ	0xFDD
 33685                           fsr2h	equ	0xFDA
 33686                           fsr2l	equ	0xFD9
 33687                           status	equ	0xFD8
 33688                           
 33689 ;; *************** function _high_isr *****************
 33690 ;; Defined at:
 33691 ;;		line 59 in file "interrupts.c"
 33692 ;; Parameters:    Size  Location     Type
 33693 ;;		None
 33694 ;; Auto vars:     Size  Location     Type
 33695 ;;		None
 33696 ;; Return value:  Size  Location     Type
 33697 ;;		None               void
 33698 ;; Registers used:
 33699 ;;		None
 33700 ;; Tracked objects:
 33701 ;;		On entry : 0/0
 33702 ;;		On exit  : 0/0
 33703 ;;		Unchanged: 0/0
 33704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33707 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 33708 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 33709 ;;Total ram usage:       14 bytes
 33710 ;; Hardware stack levels used:    1
 33711 ;; This function calls:
 33712 ;;		Nothing
 33713 ;; This function is called by:
 33714 ;;		Interrupt level 2
 33715 ;; This function uses a non-reentrant model
 33716 ;;
 33717                           
 33718                           	psect	intcode
 33719  000008                     __pintcode:
 33720                           	opt stack 0
 33721  000008                     _high_isr:
 33722                           	opt stack 18
 33723                           
 33724                           ;incstack = 0
 33725  000008  CFFA F100          	movff	pclath,??_high_isr
 33726  00000C  CFFB F101          	movff	pclatu,??_high_isr+1
 33727  000010  CFE9 F102          	movff	fsr0l,??_high_isr+2
 33728  000014  EF8E  F0BA         	goto	int_func
 33729                           pclatu	equ	0xFFB
 33730                           pclath	equ	0xFFA
 33731                           tblptru	equ	0xFF8
 33732                           tblptrh	equ	0xFF7
 33733                           tblptrl	equ	0xFF6
 33734                           tablat	equ	0xFF5
 33735                           prodh	equ	0xFF4
 33736                           prodl	equ	0xFF3
 33737                           intcon	equ	0xFF2
 33738                           postinc0	equ	0xFEE
 33739                           fsr0h	equ	0xFEA
 33740                           fsr0l	equ	0xFE9
 33741                           wreg	equ	0xFE8
 33742                           indf1	equ	0xFE7
 33743                           postinc1	equ	0xFE6
 33744                           postdec1	equ	0xFE5
 33745                           fsr1h	equ	0xFE2
 33746                           fsr1l	equ	0xFE1
 33747                           bsr	equ	0xFE0
 33748                           indf2	equ	0xFDF
 33749                           postinc2	equ	0xFDE
 33750                           postdec2	equ	0xFDD
 33751                           fsr2h	equ	0xFDA
 33752                           fsr2l	equ	0xFD9
 33753                           status	equ	0xFD8
 33754                           
 33755                           	psect	intcode_body
 33756  01751C                     __pintcode_body:
 33757                           	opt stack 18
 33758  01751C                     int_func:
 33759                           	opt stack 18
 33760  01751C  CFEA F103          	movff	fsr0h,??_high_isr+3
 33761  017520  CFE1 F104          	movff	fsr1l,??_high_isr+4
 33762  017524  CFE2 F105          	movff	fsr1h,??_high_isr+5
 33763  017528  CFD9 F106          	movff	fsr2l,??_high_isr+6
 33764  01752C  CFDA F107          	movff	fsr2h,??_high_isr+7
 33765  017530  CFF3 F108          	movff	prodl,??_high_isr+8
 33766  017534  CFF4 F109          	movff	prodh,??_high_isr+9
 33767  017538  CFF6 F10A          	movff	tblptrl,??_high_isr+10
 33768  01753C  CFF7 F10B          	movff	tblptrh,??_high_isr+11
 33769  017540  CFF8 F10C          	movff	tblptru,??_high_isr+12
 33770  017544  CFF5 F10D          	movff	tablat,??_high_isr+13
 33771  017548  C10D  FFF5         	movff	??_high_isr+13,tablat
 33772  01754C  C10C  FFF8         	movff	??_high_isr+12,tblptru
 33773  017550  C10B  FFF7         	movff	??_high_isr+11,tblptrh
 33774  017554  C10A  FFF6         	movff	??_high_isr+10,tblptrl
 33775  017558  C109  FFF4         	movff	??_high_isr+9,prodh
 33776  01755C  C108  FFF3         	movff	??_high_isr+8,prodl
 33777  017560  C107  FFDA         	movff	??_high_isr+7,fsr2h
 33778  017564  C106  FFD9         	movff	??_high_isr+6,fsr2l
 33779  017568  C105  FFE2         	movff	??_high_isr+5,fsr1h
 33780  01756C  C104  FFE1         	movff	??_high_isr+4,fsr1l
 33781  017570  C103  FFEA         	movff	??_high_isr+3,fsr0h
 33782  017574  C102  FFE9         	movff	??_high_isr+2,fsr0l
 33783  017578  C101  FFFB         	movff	??_high_isr+1,pclatu
 33784  01757C  C100  FFFA         	movff	??_high_isr,pclath
 33785  017580  0011               	retfie		f
 33786  017582                     __end_of_high_isr:
 33787                           	opt stack 0
 33788                           pclatu	equ	0xFFB
 33789                           pclath	equ	0xFFA
 33790                           tblptru	equ	0xFF8
 33791                           tblptrh	equ	0xFF7
 33792                           tblptrl	equ	0xFF6
 33793                           tablat	equ	0xFF5
 33794                           prodh	equ	0xFF4
 33795                           prodl	equ	0xFF3
 33796                           intcon	equ	0xFF2
 33797                           postinc0	equ	0xFEE
 33798                           fsr0h	equ	0xFEA
 33799                           fsr0l	equ	0xFE9
 33800                           wreg	equ	0xFE8
 33801                           indf1	equ	0xFE7
 33802                           postinc1	equ	0xFE6
 33803                           postdec1	equ	0xFE5
 33804                           fsr1h	equ	0xFE2
 33805                           fsr1l	equ	0xFE1
 33806                           bsr	equ	0xFE0
 33807                           indf2	equ	0xFDF
 33808                           postinc2	equ	0xFDE
 33809                           postdec2	equ	0xFDD
 33810                           fsr2h	equ	0xFDA
 33811                           fsr2l	equ	0xFD9
 33812                           status	equ	0xFD8
 33813                           pclatu	equ	0xFFB
 33814                           pclath	equ	0xFFA
 33815                           tblptru	equ	0xFF8
 33816                           tblptrh	equ	0xFF7
 33817                           tblptrl	equ	0xFF6
 33818                           tablat	equ	0xFF5
 33819                           prodh	equ	0xFF4
 33820                           prodl	equ	0xFF3
 33821                           intcon	equ	0xFF2
 33822                           postinc0	equ	0xFEE
 33823                           fsr0h	equ	0xFEA
 33824                           fsr0l	equ	0xFE9
 33825                           wreg	equ	0xFE8
 33826                           indf1	equ	0xFE7
 33827                           postinc1	equ	0xFE6
 33828                           postdec1	equ	0xFE5
 33829                           fsr1h	equ	0xFE2
 33830                           fsr1l	equ	0xFE1
 33831                           bsr	equ	0xFE0
 33832                           indf2	equ	0xFDF
 33833                           postinc2	equ	0xFDE
 33834                           postdec2	equ	0xFDD
 33835                           fsr2h	equ	0xFDA
 33836                           fsr2l	equ	0xFD9
 33837                           status	equ	0xFD8
 33838                           
 33839                           	psect	param1
 33840  0000                     pclatu	equ	0xFFB
 33841                           pclath	equ	0xFFA
 33842                           tblptru	equ	0xFF8
 33843                           tblptrh	equ	0xFF7
 33844                           tblptrl	equ	0xFF6
 33845                           tablat	equ	0xFF5
 33846                           prodh	equ	0xFF4
 33847                           prodl	equ	0xFF3
 33848                           intcon	equ	0xFF2
 33849                           postinc0	equ	0xFEE
 33850                           fsr0h	equ	0xFEA
 33851                           fsr0l	equ	0xFE9
 33852                           wreg	equ	0xFE8
 33853                           indf1	equ	0xFE7
 33854                           postinc1	equ	0xFE6
 33855                           postdec1	equ	0xFE5
 33856                           fsr1h	equ	0xFE2
 33857                           fsr1l	equ	0xFE1
 33858                           bsr	equ	0xFE0
 33859                           indf2	equ	0xFDF
 33860                           postinc2	equ	0xFDE
 33861                           postdec2	equ	0xFDD
 33862                           fsr2h	equ	0xFDA
 33863                           fsr2l	equ	0xFD9
 33864                           status	equ	0xFD8


Data Sizes:
    Strings     4378
    Constant    412
    Data        28
    BSS         476
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      70
    BANK0           160    120     154
    BANK1           256    140     242
    BANK2           256     67      83
    BANK3           256      0     220
    BANK4           256      0     100
    BANK5           256    226     226
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          239      0       0

Pointer List with Targets:

    sprintf$2298	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_319(CODE[17]), STR_318(CODE[17]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_317(CODE[32]), STR_316(CODE[35]), STR_315(CODE[35]), STR_284(CODE[23]), 
		 -> STR_283(CODE[23]), STR_225(CODE[23]), STR_224(CODE[23]), STR_220(CODE[16]), 
		 -> STR_219(CODE[36]), STR_207(CODE[13]), STR_206(CODE[20]), STR_205(CODE[17]), 
		 -> STR_204(CODE[29]), STR_188(CODE[15]), STR_187(CODE[32]), STR_169(CODE[15]), 
		 -> STR_168(CODE[22]), STR_28(CODE[19]), STR_25(CODE[52]), STR_24(CODE[48]), 
		 -> STR_23(CODE[47]), STR_22(CODE[54]), STR_21(CODE[53]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK5[200]), SetBaud@buf(BANK2[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2278$_cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    Multiple_I2C_Read@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    I2C_Read_Sequential@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    Parse_Time@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    SprintDate@ReturnBuf	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK5[200]), 

    LCD_Scroll@This	PTR unsigned char  size(2) Largest target is 17
		 -> STR_292(CODE[5]), STR_291(CODE[5]), STR_290(CODE[10]), STR_289(CODE[16]), 
		 -> STR_288(CODE[11]), STR_287(CODE[12]), STR_286(CODE[9]), STR_285(CODE[14]), 
		 -> STR_268(CODE[6]), STR_267(CODE[9]), STR_266(CODE[14]), STR_250(CODE[4]), 
		 -> STR_249(CODE[5]), STR_248(CODE[8]), STR_247(CODE[10]), STR_246(CODE[9]), 
		 -> STR_215(CODE[2]), STR_214(CODE[10]), STR_213(CODE[9]), STR_194(CODE[10]), 
		 -> STR_193(CODE[10]), STR_192(CODE[13]), STR_177(CODE[10]), STR_176(CODE[10]), 
		 -> STR_175(CODE[17]), STR_155(CODE[6]), STR_154(CODE[6]), STR_153(CODE[9]), 
		 -> STR_152(CODE[10]), STR_127(CODE[7]), STR_126(CODE[4]), STR_125(CODE[6]), 
		 -> STR_124(CODE[9]), STR_123(CODE[13]), STR_92(CODE[4]), STR_91(CODE[6]), 
		 -> STR_90(CODE[9]), STR_89(CODE[14]), STR_67(CODE[5]), STR_66(CODE[5]), 
		 -> STR_65(CODE[9]), STR_64(CODE[9]), 

    LCDdisplayFeedback@Text	PTR unsigned char  size(2) Largest target is 200
		 -> STR_312(CODE[16]), STR_310(CODE[16]), STR_260(CODE[16]), STR_258(CODE[16]), 
		 -> STR_255(CODE[15]), STR_203(CODE[16]), STR_201(CODE[16]), STR_199(CODE[13]), 
		 -> STR_186(CODE[14]), STR_184(CODE[16]), STR_182(CODE[15]), STR_171(CODE[16]), 
		 -> Command@buf(BANK5[200]), STR_167(CODE[14]), STR_165(CODE[16]), STR_163(CODE[15]), 
		 -> STR_145(CODE[13]), STR_143(CODE[15]), STR_139(CODE[14]), STR_135(CODE[16]), 
		 -> STR_122(CODE[16]), STR_114(CODE[16]), STR_112(CODE[16]), STR_109(CODE[15]), 
		 -> STR_106(CODE[15]), STR_103(CODE[14]), STR_100(CODE[16]), STR_88(CODE[16]), 
		 -> STR_81(CODE[16]), STR_79(CODE[15]), STR_76(CODE[14]), STR_73(CODE[16]), 
		 -> STR_57(CODE[12]), STR_55(CODE[9]), STR_52(CODE[8]), STR_49(CODE[13]), 
		 -> STR_46(CODE[9]), STR_43(CODE[8]), STR_40(CODE[13]), 

    LCDPrintString@Text	PTR unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK2[16]), Scroll_9(BANK0[16]), Scroll_8(BANK0[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(COMRAM[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_312(CODE[16]), STR_310(CODE[16]), 
		 -> STR_294(CODE[17]), STR_281(CODE[10]), STR_260(CODE[16]), STR_258(CODE[16]), 
		 -> STR_255(CODE[15]), STR_227(CODE[17]), STR_223(CODE[17]), STR_203(CODE[16]), 
		 -> STR_201(CODE[16]), STR_199(CODE[13]), STR_186(CODE[14]), STR_184(CODE[16]), 
		 -> STR_182(CODE[15]), STR_171(CODE[16]), Command@buf(BANK5[200]), STR_167(CODE[14]), 
		 -> STR_165(CODE[16]), STR_163(CODE[15]), STR_145(CODE[13]), STR_143(CODE[15]), 
		 -> STR_139(CODE[14]), STR_135(CODE[16]), STR_122(CODE[16]), STR_114(CODE[16]), 
		 -> STR_112(CODE[16]), STR_109(CODE[15]), STR_106(CODE[15]), STR_103(CODE[14]), 
		 -> STR_100(CODE[16]), STR_88(CODE[16]), STR_81(CODE[16]), STR_79(CODE[15]), 
		 -> STR_76(CODE[14]), STR_73(CODE[16]), STR_57(CODE[12]), STR_55(CODE[9]), 
		 -> STR_52(CODE[8]), STR_49(CODE[13]), STR_46(CODE[9]), STR_43(CODE[8]), 
		 -> STR_40(CODE[13]), STR_18(CODE[10]), STR_17(CODE[17]), STR_16(CODE[16]), 
		 -> STR_15(CODE[15]), STR_14(CODE[14]), STR_13(CODE[13]), STR_12(CODE[12]), 
		 -> STR_11(CODE[11]), STR_10(CODE[10]), STR_8(CODE[9]), low_isr@LCD_TEMP(BANK0[16]), 

    LCDPrintString@c	PTR unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK2[16]), Scroll_9(BANK0[16]), Scroll_8(BANK0[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(COMRAM[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_312(CODE[16]), STR_310(CODE[16]), 
		 -> STR_294(CODE[17]), STR_281(CODE[10]), STR_260(CODE[16]), STR_258(CODE[16]), 
		 -> STR_255(CODE[15]), STR_227(CODE[17]), STR_223(CODE[17]), STR_203(CODE[16]), 
		 -> STR_201(CODE[16]), STR_199(CODE[13]), STR_186(CODE[14]), STR_184(CODE[16]), 
		 -> STR_182(CODE[15]), STR_171(CODE[16]), Command@buf(BANK5[200]), STR_167(CODE[14]), 
		 -> STR_165(CODE[16]), STR_163(CODE[15]), STR_145(CODE[13]), STR_143(CODE[15]), 
		 -> STR_139(CODE[14]), STR_135(CODE[16]), STR_122(CODE[16]), STR_114(CODE[16]), 
		 -> STR_112(CODE[16]), STR_109(CODE[15]), STR_106(CODE[15]), STR_103(CODE[14]), 
		 -> STR_100(CODE[16]), STR_88(CODE[16]), STR_81(CODE[16]), STR_79(CODE[15]), 
		 -> STR_76(CODE[14]), STR_73(CODE[16]), STR_57(CODE[12]), STR_55(CODE[9]), 
		 -> STR_52(CODE[8]), STR_49(CODE[13]), STR_46(CODE[9]), STR_43(CODE[8]), 
		 -> STR_40(CODE[13]), STR_18(CODE[10]), STR_17(CODE[17]), STR_16(CODE[16]), 
		 -> STR_15(CODE[15]), STR_14(CODE[14]), STR_13(CODE[13]), STR_12(CODE[12]), 
		 -> STR_11(CODE[11]), STR_10(CODE[10]), STR_8(CODE[9]), low_isr@LCD_TEMP(BANK0[16]), 

    Send_Config2@data	PTR const unsigned char  size(2) Largest target is 16
		 -> SubLightOFF(CODE[16]), SubLightON(CODE[16]), Aux2OFF(CODE[16]), Aux2ON(CODE[16]), 
		 -> BedOFF(CODE[16]), BedON(CODE[16]), AuxOFF(CODE[16]), AuxON(CODE[16]), 
		 -> fanOFF(CODE[16]), fanON(CODE[16]), 

    Send_Config1@data	PTR const unsigned char  size(2) Largest target is 12
		 -> TXdataF(CODE[12]), TXdataE(CODE[12]), TXdataD(CODE[12]), 

    Command@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    UARTstringWAIT@data	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[18]), STR_31(CODE[17]), STR_30(CODE[24]), STR_29(CODE[23]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 200
		 -> STR_314(CODE[26]), STR_313(CODE[3]), STR_311(CODE[18]), STR_309(CODE[18]), 
		 -> STR_305(CODE[20]), STR_293(CODE[24]), STR_282(CODE[3]), STR_280(CODE[15]), 
		 -> STR_279(CODE[22]), STR_278(CODE[50]), STR_277(CODE[7]), STR_276(CODE[6]), 
		 -> STR_275(CODE[11]), STR_274(CODE[17]), STR_273(CODE[12]), STR_272(CODE[13]), 
		 -> STR_271(CODE[10]), STR_270(CODE[12]), STR_265(CODE[28]), STR_264(CODE[68]), 
		 -> STR_263(CODE[9]), STR_262(CODE[11]), STR_261(CODE[23]), STR_259(CODE[19]), 
		 -> STR_257(CODE[20]), STR_254(CODE[20]), STR_245(CODE[21]), STR_244(CODE[61]), 
		 -> STR_243(CODE[69]), STR_242(CODE[7]), STR_241(CODE[7]), STR_240(CODE[10]), 
		 -> STR_239(CODE[11]), STR_238(CODE[29]), STR_237(CODE[13]), STR_236(CODE[33]), 
		 -> STR_235(CODE[25]), STR_234(CODE[28]), STR_233(CODE[3]), STR_232(CODE[26]), 
		 -> STR_231(CODE[2]), STR_230(CODE[34]), STR_229(CODE[37]), STR_226(CODE[24]), 
		 -> STR_222(CODE[3]), STR_212(CODE[13]), STR_211(CODE[73]), STR_210(CODE[5]), 
		 -> STR_209(CODE[12]), STR_208(CODE[17]), STR_202(CODE[28]), STR_200(CODE[30]), 
		 -> STR_198(CODE[33]), STR_191(CODE[42]), STR_190(CODE[62]), STR_189(CODE[26]), 
		 -> STR_185(CODE[43]), STR_183(CODE[48]), STR_181(CODE[27]), STR_174(CODE[42]), 
		 -> STR_173(CODE[66]), STR_172(CODE[25]), STR_170(CODE[49]), Command@buf(BANK5[200]), 
		 -> STR_166(CODE[33]), STR_164(CODE[38]), STR_162(CODE[27]), STR_161(CODE[28]), 
		 -> STR_151(CODE[37]), STR_150(CODE[68]), STR_149(CODE[18]), STR_148(CODE[15]), 
		 -> STR_147(CODE[11]), STR_146(CODE[28]), STR_144(CODE[18]), STR_142(CODE[32]), 
		 -> STR_138(CODE[31]), STR_134(CODE[38]), STR_121(CODE[24]), STR_120(CODE[68]), 
		 -> STR_119(CODE[10]), STR_118(CODE[6]), STR_117(CODE[8]), STR_116(CODE[11]), 
		 -> STR_115(CODE[21]), STR_113(CODE[16]), STR_111(CODE[19]), STR_108(CODE[18]), 
		 -> STR_105(CODE[16]), STR_102(CODE[15]), STR_99(CODE[22]), STR_87(CODE[27]), 
		 -> STR_86(CODE[68]), STR_85(CODE[7]), STR_84(CODE[8]), STR_83(CODE[11]), 
		 -> STR_82(CODE[24]), STR_80(CODE[19]), STR_78(CODE[19]), STR_75(CODE[18]), 
		 -> STR_72(CODE[25]), STR_63(CODE[17]), STR_62(CODE[68]), STR_61(CODE[8]), 
		 -> STR_60(CODE[7]), STR_59(CODE[11]), STR_58(CODE[17]), STR_56(CODE[12]), 
		 -> STR_54(CODE[9]), STR_51(CODE[8]), STR_48(CODE[13]), STR_45(CODE[9]), 
		 -> STR_42(CODE[8]), STR_39(CODE[13]), STR_34(CODE[4]), STR_33(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[3]), SetBaud@buf(BANK2[50]), STR_20(CODE[4]), 
		 -> STR_19(CODE[29]), STR_9(CODE[12]), STR_7(CODE[3]), Version(BANK3[20]), 
		 -> STR_6(CODE[19]), STR_5(CODE[38]), low_isr@TEMP_Rxdata(BANK0[100]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    lowercase@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@address	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    GetEnteredNumber@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StartsWith@That	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_251(CODE[4]), STR_216(CODE[4]), STR_195(CODE[4]), STR_178(CODE[9]), 
		 -> STR_159(CODE[17]), STR_158(CODE[7]), STR_156(CODE[4]), STR_93(CODE[8]), 
		 -> STR_68(CODE[11]), STR_36(CODE[4]), 

    StartsWith@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_308(CODE[2]), STR_307(CODE[14]), STR_306(CODE[7]), STR_304(CODE[13]), 
		 -> STR_303(CODE[12]), STR_302(CODE[18]), STR_301(CODE[17]), STR_300(CODE[16]), 
		 -> STR_299(CODE[2]), STR_298(CODE[11]), STR_297(CODE[8]), STR_296(CODE[8]), 
		 -> STR_295(CODE[16]), STR_252(CODE[2]), STR_228(CODE[4]), STR_221(CODE[5]), 
		 -> STR_218(CODE[8]), STR_217(CODE[2]), STR_197(CODE[2]), STR_196(CODE[2]), 
		 -> STR_180(CODE[2]), STR_179(CODE[2]), STR_160(CODE[2]), STR_157(CODE[2]), 
		 -> STR_141(CODE[5]), STR_140(CODE[6]), STR_137(CODE[4]), STR_136(CODE[6]), 
		 -> STR_133(CODE[2]), STR_132(CODE[6]), STR_131(CODE[2]), STR_130(CODE[10]), 
		 -> STR_129(CODE[6]), STR_128(CODE[6]), STR_96(CODE[4]), STR_95(CODE[6]), 
		 -> STR_94(CODE[2]), STR_69(CODE[2]), STR_37(CODE[2]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_269(CODE[2]), STR_256(CODE[18]), STR_253(CODE[17]), STR_110(CODE[18]), 
		 -> STR_107(CODE[17]), STR_104(CODE[15]), STR_101(CODE[14]), STR_98(CODE[17]), 
		 -> STR_97(CODE[16]), STR_77(CODE[18]), STR_74(CODE[17]), STR_71(CODE[20]), 
		 -> STR_70(CODE[19]), STR_53(CODE[9]), STR_50(CODE[8]), STR_47(CODE[5]), 
		 -> STR_44(CODE[9]), STR_41(CODE[8]), STR_38(CODE[5]), STR_35(CODE[2]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 100
		 -> STR_292(CODE[5]), STR_291(CODE[5]), STR_290(CODE[10]), STR_289(CODE[16]), 
		 -> STR_288(CODE[11]), STR_287(CODE[12]), STR_286(CODE[9]), STR_285(CODE[14]), 
		 -> STR_268(CODE[6]), STR_267(CODE[9]), STR_266(CODE[14]), STR_250(CODE[4]), 
		 -> STR_249(CODE[5]), STR_248(CODE[8]), STR_247(CODE[10]), STR_246(CODE[9]), 
		 -> STR_215(CODE[2]), STR_214(CODE[10]), STR_213(CODE[9]), STR_194(CODE[10]), 
		 -> STR_193(CODE[10]), STR_192(CODE[13]), STR_177(CODE[10]), STR_176(CODE[10]), 
		 -> STR_175(CODE[17]), STR_155(CODE[6]), STR_154(CODE[6]), STR_153(CODE[9]), 
		 -> STR_152(CODE[10]), STR_127(CODE[7]), STR_126(CODE[4]), STR_125(CODE[6]), 
		 -> STR_124(CODE[9]), STR_123(CODE[13]), STR_92(CODE[4]), STR_91(CODE[6]), 
		 -> STR_90(CODE[9]), STR_89(CODE[14]), STR_67(CODE[5]), STR_66(CODE[5]), 
		 -> STR_65(CODE[9]), STR_64(CODE[9]), StringAddEqual@temp(BANK1[100]), RemoveSpaces@That(BANK1[100]), 
		 -> low_isr@TEMP_Rxdata(BANK0[100]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK2[16]), Scroll_9(BANK0[16]), Scroll_8(BANK0[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(COMRAM[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), Rxdata(BANK3[100]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK2[16]), Scroll_9(BANK0[16]), Scroll_8(BANK0[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(COMRAM[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), StringAddEqual@temp(BANK1[100]), RemoveSpaces@That(BANK1[100]), 
		 -> Rxdata(BANK3[100]), low_isr@TEMP_Rxdata(BANK0[100]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_LCDPrintString
    i1_UARTstring->i1_UARTchar
    i1_UARTchar->i1_CheckSum_byte
    i1_SetLCDcursor->i1_SendLCDbyte
    i1_LCDPrintString->i1_SendLCDbyte
    i1_LCDPrintChar->i1_SendLCDbyte
    i1_ClearLCD->i1_SendLCDbyte
    i1_SendLCDbyte->i1_delayUS
    i1_PulseEnablePin->i1_delayUS
    i1_BufferCopy->i1_cleanBuffer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Command
    _init_LCD->_SendLCDbyte
    _RTC_INIT->_InternalADC_Read
    _I2C_Read_At_Address->_WriteI2C
    _PWM_init->_SetDuty
    _SetFreq->___aldiv
    ___aldiv->___wmul
    _LCDScreenUpdate->_LCDPrintString
    _LCDPrintChar->_SendLCDbyte
    _InitApp->_delayUS
    _ContrastPWM_init->_SetDuty
    _Command->_StringAddEqual
    ___lwtoft->___ftpack
    _StringAddEqual->_BufferCopy
    _SprintDate->_sprintf
    _SetDuty->___fttol
    _SetContrast->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lbtoft
    _SetBaud->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _UARTstringWAIT->_UARTchar
    _InitUART->___lldiv
    _Send_Config2->_One_Config2
    _Send_Config2->_Zero_Config2
    _Zero_Config2->_delayUS
    _One_Config2->_delayUS
    _Send_Config1->_One_Config1
    _Send_Config1->_Zero_Config1
    _Send_Config1->_f_Config1
    _f_Config1->_delayUS
    _Zero_Config1->_delayUS
    _One_Config1->_delayUS
    _SET_RTC_TIME->_I2C_Write_At_Address
    _SET_RTC_TIME->___awdiv
    _I2C_Write_At_Address->_WriteI2C
    _RemoveSpaces->_BufferCopy
    _READ_RTC_TIME->_I2C_Read_Sequential
    _ResetI2C->_delayUS
    _Init_I2C_Master->_OpenI2C
    _I2C_Read_Sequential->_Multiple_I2C_Read
    _WriteI2C->_IdleI2C
    _Multiple_I2C_Read->_readI2C
    _LCDdisplayFeedback->_LCDPrintString
    _SetLCDcursor->_SendLCDbyte
    _LCDPrintString->_SendLCDbyte
    _ClearLCD->_SendLCDbyte
    _SendLCDbyte->_delayUS
    _PulseEnablePin->_delayUS
    _LCD_Scroll->_BufferCopy
    _BufferCopy->_cleanBuffer
    _InternalADC_Read->_UARTstring
    _UARTstring->_UARTchar
    _UARTchar->_CheckSum_byte
    _GetEnteredNumber->___lmul

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Command
    _Command->_SetBaud

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_Command

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  505580
                                            138 BANK1      2     2      0
                           _ClearLCD
                            _Command
                _ConfigureOscillator
                   _ContrastPWM_init
                  _EnableInternalADC
                            _InitApp
                           _InitUART
                    _Init_I2C_Master
                       _LCDPrintChar
                     _LCDPrintString
                    _LCDScreenUpdate
                           _PWM_init
                           _RTC_INIT
                          _ReadUSART
                        _SetContrast
                            _SetDuty
                       _SetLCDcursor
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                           _init_LCD
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             0     0      0   28010
                           _ClearLCD
                     _PulseEnablePin
                        _SendLCDbyte
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _RTC_INIT                                             0     0      0   25089
                   _InternalADC_Read
                   _RTC_Clock_Enable
               _RTC_TIME_NONMilitary
 ---------------------------------------------------------------------------------
 (2) _RTC_TIME_NONMilitary                                 5     5      0    6773
                                             24 BANK1      5     5      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (2) _RTC_Clock_Enable                                     3     3      0    6705
                                             24 BANK1      3     3      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_At_Address                                  3     1      2     432
                                             17 BANK1      3     1      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0   11848
                            _SetDuty
                            _SetFreq
 ---------------------------------------------------------------------------------
 (2) _SetFreq                                              7     5      2    1267
                                             34 BANK1      7     5      2
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     428
                                             20 BANK1     14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCDScreenUpdate                                      4     4      0   52116
                                             32 BANK1      4     4      0
                           _ClearLCD
                       _LCDPrintChar
                     _LCDPrintString
                       _SetLCDcursor
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _LCDPrintChar                                         1     1      0    9742
                                             28 BANK1      1     1      0
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0    4294
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _EnableInternalADC                                    2     2      0     254
                                             14 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ContrastPWM_init                                     0     0      0   10581
                            _SetDuty
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Command                                            232   230      2  286101
                                            136 BANK1      2     0      2
                                             63 BANK2      4     4      0
                                              0 BANK5    226   226      0
                   _GetEnteredNumber
                           _ISNUMBER
                   _InternalADC_Read
                     _LCDPrintString
                         _LCD_Scroll
                 _LCDdisplayFeedback
                         _Parse_Time
                      _READ_RTC_TIME
                       _RemoveSpaces
                       _SET_RTC_TIME
                       _Send_Config1
                       _Send_Config2
                            _SetBaud
                        _SetContrast
                            _SetDuty
                       _SetLCDcursor
                         _SprintDate
                         _StartsWith
                     _StringAddEqual
                     _StringContains
                        _StringMatch
                         _UARTstring
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwmod
                           ___lwtoft
                        _cleanBuffer
                            _delayUS
                          _lowercase
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercase                                            4     2      2     439
                                             14 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2618
                                             22 BANK1      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          4     0      4    3241
                                             14 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _StringContains                                       5     1      4    6170
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     107   105      2   11228
                                             29 BANK1    107   105      2
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _StartsWith                                           5     1      4    1732
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _SprintDate                                          12     0     12   11315
                                             78 BANK1     12     0     12
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetDuty                                             12    12      0   10581
                                             71 BANK1     12    12      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) _SetContrast                                         12    12      0   10649
                                             71 BANK1     12    12      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2464
                                             22 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     679
                                             56 BANK1     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3651
                                             41 BANK1     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3583
                                             26 BANK1     15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2433
                                             14 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) _SetBaud                                             72    67      5   34453
                                             78 BANK1      9     4      5
                                              0 BANK2     63    63      0
                           _InitUART
                         _UARTstring
                     _UARTstringWAIT
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    26     16    9861
                                             36 BANK1     42    26     16
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     694
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     386
                                             27 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UARTstringWAIT                                       2     0      2    5735
                                             25 BANK1      2     0      2
                           _UARTchar
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _InitUART                                            17    12      5    1944
                                             27 BANK1     17    12      5
                          _OpenUSART
                          _ReadUSART
                            ___lldiv
                          _baudUSART
 ---------------------------------------------------------------------------------
 (2) _baudUSART                                            1     1      0      31
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     857
                                             14 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (1) _ReadUSART                                            1     1      0      34
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     387
                                             14 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Send_Config2                                         6     4      2   19546
                                             25 BANK1      6     4      2
                        _One_Config2
                       _Zero_Config2
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config2                                         1     1      0    4356
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config2                                          1     1      0    4356
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _Send_Config1                                         7     5      2   19515
                                             25 BANK1      7     5      2
                        _One_Config1
                       _Zero_Config1
                            _delayUS
                          _f_Config1
 ---------------------------------------------------------------------------------
 (3) _f_Config1                                            1     1      0    4418
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config1                                         1     1      0    4418
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config1                                          1     1      0    4418
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SET_RTC_TIME                                        21    12      9    5638
                                             22 BANK1     21    12      9
               _I2C_Write_At_Address
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1357
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1369
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_At_Address                                 5     3      2    1664
                                             17 BANK1      5     3      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _RemoveSpaces                                       105   103      2   10319
                                             29 BANK1    105   103      2
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _READ_RTC_TIME                                        8     8      0    5777
                                             24 BANK1      8     8      0
                _I2C_Read_Sequential
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _ResetI2C                                             0     0      0    4535
                    _Init_I2C_Master
                            _delayUS
 ---------------------------------------------------------------------------------
 (4) _Init_I2C_Master                                      2     2      0     241
                                             16 BANK1      2     2      0
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (5) _OpenI2C                                              2     1      1     139
                                             14 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Sequential                                  5     1      4     667
                                             19 BANK1      5     1      4
                            _IdleI2C
                  _Multiple_I2C_Read
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             2     2      0      31
                                             15 BANK1      2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Multiple_I2C_Read                                    4     1      3     250
                                             15 BANK1      4     1      3
                            _readI2C
 ---------------------------------------------------------------------------------
 (5) _readI2C                                              1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Parse_Time                                          13    11      2    2693
                                             14 BANK1     13    11      2
 ---------------------------------------------------------------------------------
 (2) _LCDdisplayFeedback                                   2     0      2   38727
                                             32 BANK1      2     0      2
                           _ClearLCD
                     _LCDPrintString
                       _SetLCDcursor
 ---------------------------------------------------------------------------------
 (1) _SetLCDcursor                                         3     2      1   12942
                                             28 BANK1      3     2      1
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _LCDPrintString                                       4     2      2   12732
                                             28 BANK1      4     2      2
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _ClearLCD                                             0     0      0    9711
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _SendLCDbyte                                          4     3      1    9711
                                             24 BANK1      4     3      1
                     _PulseEnablePin
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _PulseEnablePin                                       0     0      0    4294
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _delayUS                                             10     6      4    4294
                                             14 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Scroll                                           2     0      2   10770
                                             29 BANK1      2     0      2
                         _BufferCopy
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    7226
                                             22 BANK1      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    2695
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _InternalADC_Read                                     5     3      2   11611
                                             29 BANK1      5     3      2
                         _UARTstring
 ---------------------------------------------------------------------------------
 (1) _UARTstring                                           4     2      2   11549
                                             25 BANK1      4     2      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (2) _UARTchar                                             4     2      2    1040
                                             21 BANK1      4     2      2
                      _CheckSum_byte
 ---------------------------------------------------------------------------------
 (3) _CheckSum_byte                                        7     4      3     546
                                             14 BANK1      7     4      3
 ---------------------------------------------------------------------------------
 (2) _ISNUMBER                                             1     1      0      62
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetEnteredNumber                                    15    11      4    1293
                                             26 BANK1     15    11      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                             14 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                            140   140      0    8188
                                             18 COMRAM    20    20      0
                                              0 BANK0    120   120      0
                         _WriteUSART
                       i1_BufferCopy
                         i1_ClearLCD
                     i1_LCDPrintChar
                   i1_LCDPrintString
                        i1_ReadUSART
                     i1_SetLCDcursor
                       i1_UARTstring
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (8) i1_UARTstring                                         4     2      2     937
                                             11 COMRAM     4     2      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (9) i1_UARTchar                                           4     2      2     634
                                              7 COMRAM     4     2      2
                    i1_CheckSum_byte
 ---------------------------------------------------------------------------------
 (10) i1_CheckSum_byte                                     7     4      3     378
                                              0 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (8) i1_SetLCDcursor                                       3     2      1    1357
                                             14 COMRAM     3     2      1
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_ReadUSART                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_LCDPrintString                                     4     2      2    1315
                                             14 COMRAM     4     2      2
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_LCDPrintChar                                       1     1      0    1181
                                             14 COMRAM     1     1      0
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_ClearLCD                                           0     0      0    1150
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (9) i1_SendLCDbyte                                        4     3      1    1150
                                             10 COMRAM     4     3      1
                   i1_PulseEnablePin
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_PulseEnablePin                                    0     0      0     311
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_delayUS                                          10     6      4     311
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) i1_BufferCopy                                         7     1      6     838
                                              8 COMRAM     7     1      6
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (8) i1_cleanBuffer                                        8     4      4     299
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           14    14      0       0
                                              0 BANK1     14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCD
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _Command
     _GetEnteredNumber
       ___lmul
     _ISNUMBER
     _InternalADC_Read
       _UARTstring
         _UARTchar
           _CheckSum_byte
     _LCDPrintString
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCD_Scroll
       _BufferCopy
         _cleanBuffer
     _LCDdisplayFeedback
       _ClearLCD
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _LCDPrintString
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _SetLCDcursor
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
     _Parse_Time
     _READ_RTC_TIME
       _I2C_Read_Sequential
         _IdleI2C
         _Multiple_I2C_Read
           _readI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RemoveSpaces
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _SET_RTC_TIME
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       ___awdiv
       ___awmod
     _Send_Config1
       _One_Config1
         _delayUS
       _Zero_Config1
         _delayUS
       _delayUS
       _f_Config1
         _delayUS
     _Send_Config2
       _One_Config2
         _delayUS
       _Zero_Config2
         _delayUS
       _delayUS
     _SetBaud
       _InitUART
         _OpenUSART
         _ReadUSART
         ___lldiv
         _baudUSART
       _UARTstring
         _UARTchar
           _CheckSum_byte
       _UARTstringWAIT
         _UARTchar
           _CheckSum_byte
         _delayUS
       _delayUS
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
     _SetContrast
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetLCDcursor
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _SprintDate
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
     _StartsWith
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContains
     _StringMatch
     _UARTstring
       _UARTchar
         _CheckSum_byte
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwmod
     ___lwtoft
       ___ftpack
     _cleanBuffer
     _delayUS
     _lowercase
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit
   _ConfigureOscillator
   _ContrastPWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
   _EnableInternalADC
   _InitApp
     _delayUS
   _InitUART
     _OpenUSART
     _ReadUSART
     ___lldiv
     _baudUSART
   _Init_I2C_Master
     _OpenI2C
   _LCDPrintChar
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _LCDPrintString
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _LCDScreenUpdate
     _ClearLCD
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCDPrintChar
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCDPrintString
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _SetLCDcursor
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _cleanBuffer
     _delayUS
   _PWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetFreq
       ___aldiv
         ___wmul (ARG)
       ___wmul
   _RTC_INIT
     _InternalADC_Read
       _UARTstring
         _UARTchar
           _CheckSum_byte
     _RTC_Clock_Enable
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RTC_TIME_NONMilitary
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
   _ReadUSART
   _SetContrast
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetDuty
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetLCDcursor
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _UARTstring
     _UARTchar
       _CheckSum_byte
   _cleanBuffer
   _delayUS
   _init_LCD
     _ClearLCD
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _PulseEnablePin
       _delayUS
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
     _delayUS

 _low_isr (ROOT)
   _WriteUSART
   i1_BufferCopy
     i1_cleanBuffer
   i1_ClearLCD
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDPrintChar
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDPrintString
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_ReadUSART
   i1_SetLCDcursor
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_UARTstring
     i1_UARTchar
       i1_CheckSum_byte
   i1_cleanBuffer

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CEE      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100     E2      E2      16       88.3%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      64      14       39.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      DC      12       85.9%
BITBANK2           100      0       0       9        0.0%
BANK2              100     43      53      10       32.4%
BITBANK1           100      0       0       7        0.0%
BANK1              100     8C      F2       8       94.5%
BITBANK12           EF      0       0      29        0.0%
BANK12              EF      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     78      9A       6       96.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      46       1       73.7%
BITSFR_8             0      0       0      40        0.0%
SFR_8                0      0       0      40        0.0%
BITSFR_7             0      0       0      40        0.0%
SFR_7                0      0       0      40        0.0%
BITSFR_6             0      0       0      40        0.0%
SFR_6                0      0       0      40        0.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     447       3        0.0%
DATA                 0      0     447       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jan 23 21:18:03 2015

                      BufferCopy@shift 011B                      i1LCDPrintString@c 0011  
              __size_of_StringContains 007E                           _Zero_Config1 6ABC  
                         _Zero_Config2 7798                            _SSPSTATbits 000FC7  
                          ?_LCD_Scroll 011D                           ___awdiv@sign 0113  
                                   bsr 000FE0                    ___wmul@multiplicand 0110  
                          __CFG_BORV$3 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                           __CFG_CP4$OFF 000000  
                         __CFG_CP5$OFF 000000                                    l217 7264  
                                  l331 75FE                                    l219 7242  
                                  l411 72DC                                    l412 72DE  
                                  l333 7608                                    l413 72EA  
                                  l317 4F58                                    l334 7634  
                                  l430 666C                                    l414 72EC  
                                  l407 72C2                                    l424 706A  
                                  l432 66CE                                    l184 7CA8  
                                  l425 706E                                    l441 7A38  
                                  l442 7A40                                    l451 7004  
                                  l611 0422                                    l439 7A30  
                                  l449 6FAA                                    l626 0832  
                                  l397 50D4                                    l590 28C4  
                                  l883 74FA                           __CFG_CPB$OFF 000000  
                                  _PR2 000FCB                           __CFG_CPD$OFF 000000  
                   _TXToiletMyBathroom EDCD                   i1LCDPrintString@Text 000F  
                                  _buf 0300                           ___awmod@sign 0113  
                                  prod 000FF3                                    wreg 000FE8  
                      _LCDScreenUpdate 35D4                       ??i1_SetLCDcursor 0010  
                       SetContrast@LSB 014F                         SetContrast@MSB 014E  
                        Send_Config1@i 011E                          Send_Config2@i 011E  
                         __CFG_LVP$OFF 000000                           ___ftdiv@cntr 0123  
                      ??i1_SendLCDbyte 000C                           ___ftdiv@sign 0128  
                         __CFG_WDT$OFF 000000                                   l1115 4926  
                                 l1044 3B04                                   l1311 5A68  
                                 l1303 595A                                   l1160 3E0A  
                                 l1312 5998                                   l1401 60E2  
                                 l1321 5A40                                   l1313 5986  
                                 l1330 59EC                                   l1322 59C4  
                                 l1306 595E                                   l1155 3D52  
                                 l1147 3CA4                                   l1139 3BE6  
                                 l1404 60E6                                   l1340 5A10  
                                 l1316 5A54                                   l1413 60FE  
                                 l1333 5A2C                                   l1325 59C8  
                                 l1317 59BE                                   l1246 6DC6  
                                 l1334 5A04                                   l1318 59AC  
                                 l1255 6E00                                   l1271 65AA  
                                 l1263 651A                                   l1351 5A2E  
                                 l1343 5A16                                   l1176 3F76  
                                 l1168 3EC8                                   l1424 738C  
                                 l1272 655E                                   l1096 6F86  
                                 l1441 7A70                                   l1433 73CC  
                                 l1417 6108                                   l1409 60F4  
                                 l1281 6596                                   l1273 6556  
                                 l1337 5A0C                                   l1329 59FE  
                RTC_Clock_Enable@Error 011A                                   l1186 4028  
                                 l1442 7A72                                   l1266 651E  
                                 l2066 62B0                                   l1514 2DC6  
                                 l1346 5A1A                                   l1291 65A2  
                                 l1283 658E                                   l2139 75D8  
                                 l1355 5A42                                   l1364 6040  
                                 l1276 65A0                                   l2076 6848  
                                 l1373 606E                                   l1277 657A  
                                 l1390 60AA                                   l1382 60FC  
                                 l1374 6066                                   l1294 65AC  
                                 l1278 6572                                   l1383 6090  
                                 l1367 6044                                   l1287 6598  
                                 l1359 5A56                                   l1393 60F2  
                                 l1377 6106                                   l1297 65B0  
                                 l1553 3146                                   l1394 60D4  
                                 l1386 6094                                   l1378 608A  
                                 l1395 60D8                                   l1379 6082  
                                 l1389 60B2                                   l1398 60DC  
                                 l1495 2B6E                                   l1569 3258  
                                 l1990 57DE                                   l7122 528E  
                                 l7134 5304                                   l7150 5398  
                                 l7136 531C                                   l7128 52D6  
                                 l7154 53BE                                   l7146 537E  
                                 l7138 5322                                   l8500 676E  
                                 l8512 679A                                   l8504 677E  
                                 l8516 67AC                                   l8508 678C  
                                 l8518 67B0                                   l8480 6728  
                                 _BAUD 01EA                                   l8492 6752  
                                 l8484 6736                                   l8496 6760  
                                 l8488 6744                                   l9752 723A  
                                 l9922 7072                                   l9818 7C56  
                                 l9916 703A                                   l9924 708A  
                                 l9852 76CC                                   l9860 777A  
                                 l9918 7050                                   l9926 70A0  
                                 l9950 6172                                   l9862 7786  
                                 STR_1 FFFD                                   l9784 7630  
                                 l9848 76AE                                   l9952 6174  
                                 STR_2 F974                                   STR_3 FFFD  
                                 l9794 763E                                   STR_4 F4F7  
                                 STR_5 F2A6                                   l9884 72C4  
                                 l9876 72B2                                   STR_6 F839  
                                 STR_7 F6F4                                   STR_8 FEF7  
                                 STR_9 FDC3                                   l9994 61D0  
              EnableInternalADC@config 010E                  ??_I2C_Read_At_Address 0113  
                                 _LATA 000F89                                   _LATC 000F8B  
                                 _LATD 000F8C                                   _LATE 000F8D  
                                 _PIE1 000F9D                                   i1l62 02BA  
                                 i1l64 025A                                   u8235 5266  
                                 u8245 52AE                           __CFG_PWRT$ON 000000  
                           i1delayUS@i 0006                             i1delayUS@j 000A  
                        ?_LCDPrintChar 0001                                   _main 4048  
                   UARTstringWAIT@data 0119                           ___ftpack@arg 010E  
                         ___ftpack@exp 0111                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   indf1 000FE7  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                       ??_PulseEnablePin 0118  
                  baudUSART@baudconfig 010E                                   pclat 000FFA  
              __end_of_Init_I2C_Master 7798                      SetBaud@Paritytemp 0237  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 0390                        __end_of_Aux2OFF EE31  
                        __CFG_IESO$OFF 000000                        Command@BAUDtemp 05CE  
                      __end_of_IdleI2C 7C68                      ?_GetEnteredNumber 011A  
                         _sprintf$2291 013B                           _sprintf$2292 013D  
                         _sprintf$2298 013F             __size_of_Multiple_I2C_Read 006A  
                        __CFG_MCLRE$ON 000000                           ___ftmul@cntr 0136  
                      __end_of_Command 28D8                         UARTstring@data 0119  
                          ?i1_UARTchar 0008                           ___ftmul@sign 0137  
                      __end_of_TXdataD EECD                        __end_of_TXdataE EED9  
                      __end_of_TXdataF EEE5                        __end_of_InitApp 76A0  
                   ??_GetEnteredNumber 011E                        SetContrast@Duty 0152  
                      __end_of_OpenI2C 7BCC               I2C_Write_At_Address@data 0112  
                      __end_of_SetBaud 47C8                           ___fttol@exp1 0146  
               __size_of_READ_RTC_TIME 00E6                           ___fttol@lval 0142  
                      __end_of_SetFreq 7376                        __end_of_SetDuty 6394  
                      SetContrast@temp 0150                           f_Config1@pin 0118  
    i1UARTchar@NinethBit_override_data 0009        UARTchar@NinethBit_override_data 0116  
                       _LCDPrintString 71A4                                  l10020 6DD4  
                                l10100 5BFA                                  l10006 6D9C  
                                l10200 71E8                                  l10024 6DD8  
                                l11000 5FDA                                  l10112 5C70  
                                l10104 5C20                                  l10042 6E14  
                                l10130 6234                                  l10106 5C4C  
                                l10060 73C0                                  l11012 6018  
                                l10140 6296                                  l10132 623A  
                                l10300 2928                                  l10108 5C60  
                                l10222 649C                                  l10214 647E  
                                l10038 6E10                                  l10150 67E4  
                                l10302 292E                                  l10310 2944  
                                l10118 5C8A                                  l10056 7398  
                                l10048 7378                                  l10064 73D0  
                                l11016 602C                                  l11008 600A  
                                l11040 6408                                  l11032 63E4  
                                l10128 621C                                  l10152 67EA  
                                l10400 2C66                                  l10304 2934  
                                l10314 297A                                  l10306 293A  
                                l11202 7168                                  l11052 644E  
                                l11044 642C                                  l11036 63F6  
                                l11028 63C2                                  l10156 682E  
                                l10148 67CC                                  l10500 2FB0  
                                l10404 2C80                                  l10412 2CA6  
                                l10092 5BA6                                  l11220 70AC  
                                l11204 7174                                  l11038 6402  
                                l10078 7B26                                  l10422 2D4A  
                                l10414 2D02                                  l10334 2A6E  
                                l10318 29A2                                  l10326 2A2E  
                                l11062 5410                                  l11214 71A0  
                                l11312 4D9A                                  l11048 643A  
                                l10520 306E                                  l10512 3018  
                                l10440 2E20                                  l10408 2C9E  
                                l10360 2B6A                                  l10352 2B32  
                                l10096 5BBA                                  l11080 54B8  
                                l11400 4FC4                                  l12040 75A6  
                                l11330 4E76                                  l11306 4D84  
                                l10178 66D2                                  l10186 79C2  
                                l10258 50D0                                  l10514 3024  
                                l10506 2FE0                                  l10362 2B74  
                                l10346 2AD4                                  l10354 2B50  
                                l10098 5BCE                                  l11090 54F6  
                                l11410 4FF0                                  l11234 70E8  
                                l11340 4EBE                                  l11332 4E7C  
                                l10196 71B2                                  l10620 345C  
                                l10612 3328                                  l10532 310A  
                                l10460 2E92                                  l10436 2DF0  
                                l10372 2BC2                                  l10356 2B5E  
                                l10348 2AE2                                  l10292 28EC  
                                l11092 550E                                  l11084 54D4  
                                l11260 69E0                                  l11420 505A  
                                l11228 70D6                                  l12044 75CA  
                                l12036 7594                                  l13004 25D6  
                                l12028 6F8E                                  l11318 4DC2  
                                l11350 65F4                                  l10614 33CE  
                                l10630 353C                                  l10606 330C  
                                l10534 3116                                  l10526 30C6  
                                l10446 2E40                                  l10382 2BE8  
                                l10390 2C1E                                  l10374 2BCE  
                                l10358 2B64                                  l11094 5514  
                                l11246 6996                                  l11262 69EC  
                                l11238 7116                                  l12038 75A0  
                                l13030 2712                                  l13022 26C6  
                                l11336 4E98                                  l11280 4CFA  
                                l11520 4B1C                                  l10288 7008  
                                l10624 349C                                  l10528 30D2  
                                l10384 2BFE                                  l10368 2B9A  
                                l11256 69DC                                  l13040 277A  
                                l13008 2608                                  l11282 4D00  
                                l11434 7BE6                                  l10634 3550  
                                l10546 315A                                  l10562 31D2  
                                l10570 31FA                                  l10474 2EE4  
                                l10490 2F36                                  l10394 2C3C  
                                l10378 2BD6                                  l10298 290E  
                                l11442 449C                                  l11098 553A  
                                l11274 6A26                                  l11194 712A  
                                l11370 6D62                                  l13034 2738  
                                l13026 26EC                                  l13018 26A0  
                                l13042 278C                                  l12306 3816  
                                l10706 5970                                  l11292 4D46  
                                l11540 4C2C                                  l11532 4BC4  
                                l11524 4B54                                  l11516 4AE4  
                                l11700 3C04                                  l10820 6050  
                                l11356 662A                                  l10628 351E  
                                l10580 322E                                  l10556 31B2  
                                l10492 2F54                                  l10644 35A0  
                                l11444 44CE                                  l11452 4564  
                                l11380 4F04                                  l11364 6D06  
                                l11372 6D66                                  l12500 06B2  
                                l12316 3886                                  l12252 3642  
                                l11286 4D1E                                  l11358 6630  
                                l10638 357C                                  l10590 3270  
                                l10574 320A                                  l10398 2C4E  
                                l10646 35C6                                  l11470 46C0  
                                l11446 4500                                  l11454 457C  
                                l11390 4F7E                                  l11198 7164  
                                l12510 0766                                  l12430 0242  
                                l12422 01F8                                  l12414 01B0  
                                l12406 0168                                  l12326 38F2  
                                l12190 7B78                                  l10726 59DA  
                                l13310 439A                                  l11608 74E2  
                                l11544 4C64                                  l11536 4BF8  
                                l11528 4B8C                                  l11712 3C46  
                                l11640 5F4E                                  l10760 652A  
                                l10496 2F7C                                  l11448 4532  
                                l11456 45AC                                  l11384 4F3C  
                                l13064 2882                                  l13056 2816  
                                l12336 3956                                  l11298 4D5C  
                                l11802 3E24                                  l11722 3C90  
                                l11562 5CE8                                  l11482 473A  
                                l11474 46EC                                  l10914 5796  
                                l11650 5ADA                                  l11386 4F5E  
                                l13066 28A4                                  l12530 08D8  
                                l12346 39BE                                  l13330 43F0  
                                l13250 40D4                                  l11548 4C9C  
                                l11708 3C42                                  l10596 32B4  
                                l11484 474C                                  l11492 4782  
                                l10940 55C0                                  l11652 5B34  
                                l11396 4F90                                  l11388 4F62  
                                l12356 3A2E                                  l12276 36C6  
                                l12268 3694                                  l11902 3FEA  
                                l11814 3E66                                  l11806 3E28  
                                l11750 3D04                                  l11734 3CBE  
                                l11726 3CA0                                  l11670 3B84  
                                l11662 3B46                                  l11638 5F4A  
                                l11566 5D2A                                  l11558 5CAA  
                                l11590 6E70                                  l11486 475E  
                                l11494 479A                                  l10934 5586  
                                l12614 0EBE                                  l12542 09B2  
                                l12518 07EE                                  l12446 02D2  
                                l12438 028A                                  l12366 3A9E  
                                l12286 3736                                  l12374 3AEC  
                                l13342 443A                                  l11840 3EE2  
                                l11832 3EC4                                  l11760 3D4E  
                                l11568 5D32                                  l11584 6E2A  
                                l11488 4770                                  l11496 47AA  
                                l12448 02F6                                  l12296 37A6  
                                l10874 6EBA                                  l11914 4024  
                                l11818 3E6A                                  l11746 3D00  
                                l11738 3CC2                                  l11674 3B88  
                                l10954 560E                                  l12730 1558  
                                l12722 14E6                                  l12714 1494  
                                l12706 141E                                  l12642 1092  
                                l12554 0A9E                                  l12474 04C8  
                                l12458 039A                                  l12394 00DA  
                                l11852 3F24                                  l11844 3EE6  
                                l11828 3EB4                                  l11780 3DAC  
                                l11684 3BD2                                  l10868 6110  
                                l10796 65BC                                  l11588 6E68  
                                l10964 5658                                  l12804 1934  
                                l12812 19B8                                  l12628 0FA8  
                                l12644 10B6                                  l12580 0C78  
                                l10878 6EE0                                  l11790 3DF6  
                                l10990 5FAA                                  l10894 5736  
                                l10958 562C                                  l12734 1592  
                                l12726 1522                                  l12662 11E2  
                                l12654 115A                                  l12566 0B78  
                                l12486 05A2                                  l11856 3F28  
                                l11776 3DA8                                  l11768 3D6A  
                                l11696 3C00                                  l11688 3BE2  
                                l10984 5F82                                  l11936 4838  
                                l10888 56FC                                  l10968 5676  
                                l12760 16F0                                  l12744 1616  
                                l12752 167A                                  l12592 0D4C  
                                l11882 3FB4                                  l11874 3F8E  
                                l11866 3F72                                  l11794 3E06  
                                l11946 48A2                                  l12834 1BD8  
                                l12682 12D8                                  l12674 1266  
                                l12666 1214                                  l12578 0C54  
                                l12498 068E                                  l10996 5FC8  
                                l11964 494A                                  l12924 20E2  
                                l12852 1CCC                                  l12908 1FB4  
                                l12780 17EE                                  l12772 177E  
                                l11894 3FE2                                  l11886 3FB8  
                                l10998 5FD4                                  l11974 49B4  
                                l12854 1D1E                                  l12686 1312  
                                l12678 12A2                                  l12598 0DB2  
                                l11984 4A1E                                  l12936 21CC  
                                l12776 17B8                                  l12768 1742  
                                l12696 1396                                  l11898 3FE6  
                                l11994 4A88                                  l12938 21EE  
                                l12946 2270                                  l12890 1E94  
                                l12874 1DDC                                  l12858 1D40  
                                l12866 1D6E                                  l12698 13BA  
                                l12892 1EA8                                  l12788 1874  
                                l12966 2414                                  l12894 1ECC  
                                l12968 2466                                  l12896 1EE0  
                                l12994 2534                                  l12988 2508  
                                l12996 254E                        __end_of___aldiv 53D0  
                                ?_main 0001               __size_ofi1_CheckSum_byte 0048  
               __size_ofi1_cleanBuffer 003C                        __end_of___awdiv 6036  
                          ?i1_ClearLCD 0001                                  STR_10 FE8A  
                                STR_11 FE11                                  STR_12 FDC3  
                                STR_20 F4F5                                  STR_13 FD7A  
                                STR_21 F0AA                                  STR_30 F092  
                                STR_14 FCDD                                  STR_22 F074  
                                STR_31 F1F4                                  STR_15 FC42  
                                STR_23 F1D6                                  STR_32 F1C4  
                                STR_40 FD39                                  STR_16 FB6F  
                                STR_24 F1A6                                  STR_33 F0FD  
                                STR_41 FF30                                  STR_17 F9FE  
                                STR_25 F0DF                                  STR_34 EF6F  
                                STR_26 F6F4                                  STR_50 FF38  
                                STR_42 FF20                                  STR_18 FE80  
                                STR_35 F4F7                                  STR_43 FF20  
                                STR_51 FF28                                  STR_27 F723  
                                STR_19 F4DC                                  STR_36 FF7E  
                                STR_52 FF28                                  STR_60 FF6D  
                                STR_44 FEC1                                  STR_28 F826  
                      __end_of___awmod 6458                                  STR_29 F0C8  
                                STR_37 FA3D                                  STR_61 FF00  
                                STR_53 FECA                                  STR_45 FEAF  
                                STR_46 FEAF                                  STR_38 FFBE  
                                STR_54 FEB8                                  STR_70 F813  
                                STR_62 EF73                                  STR_55 FEB8  
                                STR_47 FFC8                                  STR_39 FD39  
                                STR_63 F954                                  STR_71 F79F  
                                STR_56 FA63                                  STR_64 FEEE  
                                STR_48 FD46                                  STR_80 F7C7  
                                STR_72 F63B                                  STR_57 FA63  
                                STR_49 FD46                                  STR_65 FE9D  
                                STR_73 FA9F                                  STR_81 FA2F  
                                STR_90 FE9D                                  STR_66 FFB9  
                                STR_74 F998                                  STR_58 F921  
                                STR_82 F654                                  STR_83 FDCF  
                                STR_67 FFC3                                  STR_91 FFA8  
                                STR_59 FDCF                                  STR_75 F8B8  
                                STR_92 FFED                                  STR_84 FF08  
                                STR_68 FE06                                  STR_76 FC97  
                                STR_69 FA3D                                  STR_85 FF5F  
                                STR_93 FF18                                  STR_77 F882  
                                STR_86 EF73                                  STR_94 FA3D  
                                STR_78 F7ED                                  STR_95 FFAE  
                                STR_79 FBCA                                  STR_87 F5A0  
                                STR_96 FFF1                                  STR_88 FB4F  
                                STR_89 FCCF                                  STR_97 FB2F  
                                STR_98 F976                                  STR_99 F70D  
                      __end_of___ftdiv 581A                       __end_of_ISNUMBER 7BEA  
                      __end_of___lldiv 62C2                        __end_of___ftmul 56C2  
                      ___awdiv@divisor 0110                        __end_of___llmod 685A  
                      __end_of___fttol 554C                                  _T2CON 000FCA  
                                u14201 5714                                  u13085 2D9C  
                                u12710 670A                                  u14231 5564  
                                u12810 64CA                                  u14251 559E  
                                u14411 53E8                                  u12820 6502  
                                u12717 6700                                  u14181 56DA  
                                u12670 6692                                  u12750 71DE  
                                u14430 543C                                  u12817 64C0  
                                u12690 66CA                                  u12770 7218  
                                u12827 64F8                                  u14435 5432  
                                u12860 5164                                  u12677 6688  
                                u12757 71D4                                  u12697 66C0  
                                u12777 720E                                  u12865 5158  
                                u17130 287E                                  u17125 2856  
                                u17135 287A                                  u15725 48AC  
                                u16605 14D4                                  u16525 1254  
                                u14970 45FC                                  u14975 45F0  
                                u14985 4684                                  u16841 1E1A  
                                u14995 46BC                                  u16931 2382  
                                u16861 1E5A                                  u16685 1730  
                                u16791 1C1E                                  i1l217 785E  
                                i1l219 7848                                  i1l331 7892  
                                i1l334 78B8                                  i1l430 6BE0  
                                i1l424 740E                                  i1l432 6C36  
                                i1l441 7AC6                                  i1l425 7412  
                      __end_of___lwmod 75E2                                  i1l442 7ACE  
                                i1l439 7ABE                        ___awdiv@counter 0112  
                                _RCREG 000FAE                                  _RCSTA 000FAB  
                                _SPBRG 000FAF                             _BufferCopy 6458  
                                _BedON EE71                           InitUART@Baud 011B  
                                _TXREG 000FAD                                  _TXSTA 000FAC  
                        ??_One_Config1 0118                          ??_One_Config2 0118  
                  _ConfigureOscillator 7CA8                        __end_of_delayUS 7296  
                     _InternalADC_Read 74B4                                  _AuxON EE51  
                        __CFG_WRT0$OFF 000000                            i1delayUS@US 0001  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                  ___lmul@multiplicand 0112                          __CFG_WRT3$OFF 000000  
                        __CFG_WRT4$OFF 000000                          __CFG_WRT5$OFF 000000  
                       __CFG_EBTR0$OFF 000000                         __CFG_FCMEN$OFF 000000  
                       __CFG_EBTR1$OFF 000000                         __CFG_EBTR2$OFF 000000  
                       __CFG_EBTR3$OFF 000000                         __CFG_EBTR4$OFF 000000  
                       __CFG_EBTR5$OFF 000000                           InitUART@temp 0128  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                                  _fanON EEB1  
                     __end_of_UARTchar 70AA                        __end_of_readI2C 7A7A  
                           SetBaud@buf 0200                         __CFG_EBTRB$OFF 000000  
                      __end_of_dpowers EDA1                       __end_of_RTC_INIT 7C78  
                      __end_of_isdigit 7B30                          ___ftpack@sign 0112  
                     Command@ADC_Value 05C8                         ??_LCDPrintChar 011C  
                        ??_SendLCDbyte 0119                        __end_of_low_isr 0390  
          I2C_Read_At_Address@Register 0111                                  tablat 000FF5  
                        ?_SetLCDcursor 011C                    __size_of_LCD_Scroll 0248  
                     __end_of_PWM_init 7B82                            ?_UARTstring 0119  
              InternalADC_Read@channel 0121                                  status 000FD8  
                      __end_of_sprintf 35D4                       __end_of_ClearLCD 7C04  
                 __size_of_cleanBuffer 0058                         __CFG_PBADEN$ON 000000  
                 ?_ConfigureOscillator 0001                     StringContains@That 0110  
                   StringContains@This 010E                     __size_ofi1_delayUS 004C  
                       WriteUSART@data 0001                             SetDuty@LSB 0150  
                           SetDuty@MSB 014F                        __initialization 6C70  
                   StringAddEqual@temp 0121                    _I2C_Read_Sequential 6036  
                         __end_of_main 445C                       __end_of_InitUART 5240  
                     ??_UARTstringWAIT 011B                          ??_SetContrast 0147  
               __end_of_LCDPrintString 7220                         __CFG_OSC$HSPLL 000000  
              __end_of_LCDScreenUpdate 3B1E              __size_of_ContrastPWM_init 000C  
                        _LCDclearCount 01EE                                 ??_main 018A  
                        ___fttol@sign1 0141                         SetDuty@tempPR2 014C  
                      Send_Config1@pin 011F                        Send_Config2@pin 011D  
                     __end_of_ResetI2C 7B5A                        SendLCDbyte@data 0119  
                        __activetblptr 000003                 Multiple_I2C_Read@rdptr 010F  
                           _Parse_Time 3B1E                        low_isr@LCD_TEMP 00C4  
                 ?_I2C_Read_Sequential 0113                       i1CheckSum_byte@i 0007  
                       _StringAddEqual 4ED0                                 _ADCON0 000FC2  
                               _ADCON1 000FC1                                 _ADCON2 000FC0  
                  __size_ofi1_UARTchar 006A                       ___llmod@dividend 011B  
                               STR_100 FAAF                                 STR_101 FCB3  
                               STR_102 FC06                                 STR_110 F894  
                               STR_103 FCA5                                 STR_111 F800  
                               STR_120 EF73                                 STR_104 FBE8  
                               STR_112 FAEF                                 STR_200 F484  
                               STR_201 FB1F                                 STR_105 FAFF  
                               STR_113 FA3F                                 STR_121 F684  
                               STR_114 FA3F                                 STR_210 FFB4  
                               STR_130 FE62                                 STR_106 FBD9  
                               STR_122 FA4F                                 STR_202 F515  
                               _ADRESH 000FC4                                 STR_131 FA3D  
                               STR_123 FD6D                                 STR_203 FADF  
                               STR_107 F9A9                                 STR_115 F739  
                               STR_211 EEE5                                 STR_116 FDCF  
                               STR_124 FE9D                                 STR_140 FF9C  
                               STR_132 FFA2                                 STR_212 FCEB  
                               STR_300 FB5F                                 STR_220 FABF  
                               STR_108 F8CA                                 STR_204 F4BF  
                               STR_117 FF08                                 STR_133 FD1D  
                               STR_141 FEC5                                 STR_125 FFA8  
                               STR_221 FFDC                                 STR_213 FEDC  
                               STR_109 FBF7                                 STR_301 F9DC  
                               STR_205 F932                                 STR_222 F6F4  
                               STR_150 EF73                                 STR_214 FE4E  
                               STR_126 FFED                                 STR_118 FF96  
                               STR_310 FACF                                 STR_302 F8DC  
                               STR_206 F777                                 STR_142 F445  
                               STR_230 F380                                 STR_134 F280  
                               _ADRESL 000FC3                                 STR_311 F85E  
                               STR_215 FC5D                                 STR_231 F4F7  
                               STR_127 FF82                                 STR_119 FE1C  
                               STR_303 FDB7                                 STR_207 FD2C  
                               STR_143 FBBB                                 STR_135 FA8F  
                               STR_223 F965                                 STR_151 F2CC  
                   _LCDdisplayFeedback 78C4                                 STR_160 FD1D  
                               STR_312 FACF                                 STR_136 FF9C  
                               STR_216 FFE5                                 STR_128 FFA2  
                               STR_152 FE6C                                 STR_240 FE30  
                               STR_304 FD53                                 STR_208 F910  
                               STR_144 F870                                 STR_224 F6CA  
                               STR_232 F5EF                                 STR_313 F6F4  
                               STR_233 F6F4                                 STR_153 FE9D  
                               STR_217 FA3D                                 STR_137 FF34  
                               STR_129 FF9C                                 STR_241 FF74  
                               STR_209 FD93                                 STR_145 FD1F  
                               STR_305 F763                                 STR_225 F6B3  
                               STR_161 F531                                 STR_154 FF9C  
                               STR_250 FFF5                                 STR_306 FF89  
                               STR_242 FF66                                 STR_218 FF50  
                               STR_226 F66C                                 STR_314 F5BB  
                               STR_162 F585                                 STR_234 F569  
                               STR_146 F4F9                                 STR_138 F465  
                               STR_170 F145                                 STR_147 FDCF  
                               STR_155 FFA2                                 STR_251 FFE9  
                               STR_139 FC89                                 STR_307 FC7B  
                               STR_163 FC33                                 STR_171 FA5F  
                               STR_227 F987                                 STR_235 F622  
                               STR_315 F33A                                 STR_219 F316  
                               STR_243 EF2E                                 STR_308 FD1D  
                               STR_180 FD1D                                 STR_252 FA3D  
                               STR_156 F4D8                                 STR_228 FFF9  
                               STR_148 FB8E                                 STR_260 FA6F  
                               STR_172 F609                                 STR_236 F3C3  
                               STR_316 F35D                                 STR_164 F25A  
                               STR_244 F037                                 STR_181 F585  
                               STR_157 FA3D                                 STR_237 FD05  
                               STR_165 FA1F                                 STR_253 F9BA  
                               STR_309 F85E                                 STR_149 F84C  
                               STR_245 F74E                                 STR_261 F69C  
                               STR_317 F405                                 STR_229 F2F1  
                               STR_173 EFB7                                 STR_262 FDCF  
                               STR_158 FF7B                                 STR_246 FEE5  
                               STR_270 FD87                                 STR_182 FC24  
                               STR_318 F8EE                                 STR_254 F7B3  
                               STR_238 F4A2                                 STR_166 F3A2  
                               STR_174 F230                                 STR_190 EFF9  
                               STR_191 F230                                 STR_247 FE4E  
                               STR_263 FE94                                 STR_271 FE26  
                               STR_239 FDDA                                 STR_167 FC5F  
                               STR_255 FC15                                 STR_175 F9ED  
                               STR_159 F9CB                                 STR_319 F8FF  
                               STR_183 F176                                 STR_264 EF73  
                               STR_248 FF48                                 STR_176 FE4E  
                               STR_192 FD60                                 STR_272 FCF8  
                               STR_280 FB7F                                 STR_184 FA0F  
                               STR_256 F8A6                                 STR_168 F6F7  
                               STR_193 FE4E                                 STR_249 FFD7  
                               STR_281 FE76                                 STR_177 FE3A  
                               STR_273 FD9F                                 STR_169 FBAC  
                               STR_257 F78B                                 STR_265 F54D  
                               STR_185 F205                                 STR_282 F6F4  
                               STR_178 FED3                                 STR_290 FE58  
                               STR_194 FE44                                 STR_266 FCC1  
                               STR_186 FC51                                 STR_258 FB0F  
                               STR_274 F943                                 STR_267 FE9D  
                               STR_179 FA3D                                 STR_283 F6CA  
                               STR_195 FFE1                                 STR_291 FFCD  
                               STR_275 FDE5                                 STR_259 F7DA  
                               STR_187 F425                                 STR_196 FA3D  
                               STR_284 F6B3                                 STR_268 FFA8  
                               STR_292 FFD2                                 STR_276 FF90  
                               STR_188 FB9D                                 STR_293 F66C  
                               STR_197 FD1D                                 STR_269 FA3D  
                               STR_277 FF58                                 STR_285 FC6D  
                               STR_189 F5D5                                 STR_294 F987  
                               STR_286 FEA6                                 STR_198 F3E4  
                               STR_278 F113                                 _CCPR1L 000FBE  
                               STR_287 FDAB                                 STR_199 FD12  
                               STR_295 FB3F                                 STR_279 F6E1  
                               STR_296 FF40                                 STR_288 FDF0  
                               STR_297 FF10                                 STR_289 FA7F  
                               STR_298 FDFB                                 STR_299 FD1D  
                     ___awdiv@dividend 010E                          _READ_RTC_TIME 5E6E  
                     __end_of_WriteI2C 6E18                        __CFG_BBSIZ$1024 000000  
                     __end_of___ftpack 5C98                       __end_of___lbtoft 7A1A  
                       ??_SetLCDcursor 011D                        _ScrollFIFOCount 0198  
            __size_ofi1_LCDPrintString 006A                            OpenI2C@slew 010E  
                  __end_of_One_Config1 6BE0                    __end_of_One_Config2 7830  
                               i1l8330 794C                                 i1l8334 7962  
                               i1l8428 7C50                                 i1l9430 6930  
                               i1l9422 6918                                 _PARITY 0196  
                     __end_of___lwtoft 7AA8                              ??_IdleI2C 010E  
                   __size_of_ReadUSART 0030                                 _OSCCON 000FD3  
                               _SPBRGH 000FB0                          i1_cleanBuffer 7942  
                               _BedOFF EE61                                 _SSPADD 000FC8  
                               _SSPBUF 000FC9                              ??_Command 023F  
                  ?_LCDdisplayFeedback 0120                                 _Aux2ON EE31  
                            ??_InitApp 0118                  ??_ConfigureOscillator 010E  
                               _TX_OLD 00D8                    __size_ofi1_ClearLCD 0016  
                               _AuxOFF EE41                       ?_Init_I2C_Master 0001  
 Command@RTC_Battery_Value_LOW_decimal 05D2                              ??_OpenI2C 010F  
                            ??_SetBaud 0153                              ??_SetFreq 0124  
                            ??_SetDuty 0147                    __end_of_SendLCDbyte 61EE  
                       __CFG_XINST$OFF 000000                          InitUART@spbrg 0124  
                          SetBaud@Baud 014E                       __end_of_high_isr 7582  
                               _Rxdata 0364                     __size_of_OpenUSART 0074  
                       _StringContains 70AA                             _SubLightON EE91  
                               _Txdata 0400                                 ___lmul 6EA2  
                               _fanOFF EEA1                              ??___aldiv 011C  
                      Command@contrast 05D8                                 ___wmul 797E  
                            ??___awdiv 0112               __end_ofi1_PulseEnablePin 7B04  
                       __CFG_STVREN$ON 000000                              ??___awmod 0112  
                            ??___ftdiv 0120                              ??___lldiv 0116  
                            ??___ftmul 012F                              ??___llmod 0123  
                            ??___fttol 013C                            SetBaud@temp 023B  
                      ?_LCDPrintString 011C                       __end_of_init_LCD 5950  
                            ??___lwmod 0112                           ?i1_ReadUSART 0001  
                               clear_0 6C76                                 clear_1 6C82  
                               clear_2 6C8E                                 clear_3 6C9A  
                               clear_4 6CA6                                 clear_5 6CB2  
                     ___awdiv@quotient 0114                              ??_delayUS 0112  
                      ___awmod@divisor 0110                        ___awmod@counter 0112  
        __size_of_I2C_Write_At_Address 00B0                                 main@ii 018A  
                      Command@tempLONG 05DE                    SprintDate@ReturnBuf 014E  
                 ??_LCDdisplayFeedback 0122                  ___ftmul@f3_as_product 0133  
                            ??_readI2C 010E                    __size_of_UARTstring 00A6  
                        ?_Send_Config1 0119                          ?_Send_Config2 0119  
                      __CFG_BOREN$BOHW 000000                            ?_BufferCopy 0116  
                  __end_of_SetContrast 5E6E                              ??_isdigit 010E  
                ??_I2C_Read_Sequential 0117                 __end_of_StringAddEqual 5088  
                         __mediumconst ED48                      __end_ofi1_delayUS 787C  
                            ??_low_isr 0013                        Zero_Config1@pin 0118  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                        Zero_Config2@pin 0118  
                      SetBaud@Baudtemp 0233                 __size_of_CheckSum_byte 0060  
                    ??i1_CheckSum_byte 0004                         ?_READ_RTC_TIME 0001  
                            ??_sprintf 0134                     __size_of_f_Config1 0092  
                           _StartsWith 6994                         ?i1_cleanBuffer 0001  
                           _SprintDate 5A74                            SetFreq@freq 0122  
                           __accesstop 0060                __end_of__initialization 6CF8  
                          SetFreq@temp 0128                    StringAddEqual@Input 011D  
                           ___ftdiv@f1 011A                             ___ftdiv@f2 011D  
                           ___ftdiv@f3 0124                              ?_ISNUMBER 0001  
               __end_of_StringContains 7128                     __size_of_baudUSART 000E  
                        __end_of_BedON EE81                             ___lbtoft@c 0119  
                          SetDuty@Duty 014B                             ___ftmul@f1 0129  
                           ___ftmul@f2 012C                          __end_of_AuxON EE61  
                           ___fttol@f1 0138              __size_of_RTC_Clock_Enable 0050  
                           _WriteUSART 7C42                         __pcstackCOMRAM 0001  
                          SetDuty@temp 0151                           __pidataBANK1 7CA0  
                         __pidataBANK3 7C1A                          __end_of_fanON EEC1  
                            ?_UARTchar 0115                           ??_LCD_Scroll 011F  
                   InitUART@baudconfig 0126                              ?_RTC_INIT 0001  
                 __end_of_LCDPrintChar 7C42                       ?_LCDScreenUpdate 0001  
                    __end_of_ReadUSART 7A4A                          ?i1_UARTstring 000C  
                           ___lwtoft@c 0116                         ??_Send_Config1 011B  
                       ??_Send_Config2 011B                    __end_of_SubLightOFF EE91  
                            ?_PWM_init 0001                     LCDPrintString@Text 011C  
                          ?_Parse_Time 010E                              ?_ClearLCD 0001  
                      ?_StringAddEqual 011D                            _One_Config1 6B4E  
                          _One_Config2 77E4                          ?_RemoveSpaces 011D  
                        ReadUSART@data 010E                         One_Config1@pin 0118  
                       One_Config2@pin 0118                      __end_of_OpenUSART 730A  
                     Send_Config1@data 0119                       Send_Config2@data 0119  
                         sprintf@width 0145                             __pbssBANK0 00D8  
                           __pbssBANK1 018C                             __pbssBANK2 0243  
                           __pbssBANK3 0300                             __pbssBANK4 0400  
                            ?_InitUART 011B                            _SendLCDbyte 6114  
                  SET_RTC_TIME@SetTime 0116            RTC_Clock_Enable@tempSeconds 0118  
              Multiple_I2C_Read@length 0111                     __end_of_LCD_Scroll 4CD4  
                        ??_StringMatch 0112                    SetLCDcursor@address 011E  
                           ??_ISNUMBER 010E                              ?_ResetI2C 0001  
                      ?_StringContains 010E            __end_of_TXdataBedroomCLOSED EDE5  
             __end_of_InternalADC_Read 751C                    __size_of_BufferCopy 00B8  
        __size_of_RTC_TIME_NONMilitary 0082                          _CheckSum_byte 75E2  
                         ??i1_UARTchar 000A            __end_of_TXdataBedroomOPENED EDF1  
                        RemoveSpaces@i 0185                                ?___lmul 010E  
                  i1CheckSum_byte@This 0001                                ?___wmul 010E  
                    __end_of_f_Config1 6ABC                      Command@PARITYtemp 05D4  
                           ??_UARTchar 0117                            _SetContrast 5D86  
       I2C_Write_At_Address@I2Caddress 0115                             ??_RTC_INIT 0122  
                              _CCP1CON 000FBD                                _BAUDCON 000FB8  
                 __end_of_SetLCDcursor 79E8                         ___lmul@product 0116  
                     _ContrastPWM_init 7C94                                _ECCPR1L 000FBB  
                       ??i1_UARTstring 000E                              ?_WriteI2C 0001  
                            ?___ftpack 010E                              ?___lbtoft 0116  
                   __size_of_lowercase 008E                           ??i1_ClearLCD 000F  
                i1CheckSum_byte@Parity 0006                              ?___lwtoft 0116  
                           ??_PWM_init 0153                                i1l10162 7842  
                              i1l11126 78B4                                i1l11136 78C0  
                              i1l12060 73FC                                i1l12136 68E6  
                              i1l12064 7416                                i1l13200 02EE  
                              i1l12058 73EC                                i1l12066 742E  
                              i1l13202 0312                                i1l13130 00C6  
                              i1l13122 009E                                i1l12092 68A0  
                              i1l12068 7440                                i1l13140 00FA  
                              i1l13212 0344                                i1l12094 68A2  
                              i1l13136 00E8                                i1l13082 7B8C  
                              i1l13076 6C3A                                i1l13094 7454  
                              i1l13174 01F8                                i1l13158 0172  
                              i1l13168 01DE                                i1l13098 7482  
                              i1l13178 0218                                i1l13186 0246  
            __size_of_GetEnteredNumber 01FC                         ??_RemoveSpaces 011F  
                           ??_ClearLCD 011C               Command@RTC_Battery_Value 05CA  
                       StartsWith@That 0110                         StartsWith@This 010E  
                     i1UARTstring@data 000C            __end_of_I2C_Read_At_Address 5A74  
                              _LCDwait 0195                        ??_READ_RTC_TIME 0118  
                    __end_of_baudUSART 7C86                    Init_I2C_Master@baud 0110  
                       lowercase@Input 010E                                _SSPCON1 000FC6  
                              _SSPCON2 000FC5                        ??i1_cleanBuffer 0005  
                            ?_high_isr 0001                                _SSPSTAT 000FC7  
                   __end_ofi1_UARTchar 744A                            ?_StartsWith 010E  
                     i1_LCDPrintString 744A               GetEnteredNumber@negative 0124  
                           ??_InitUART 0120                                _Aux2OFF EE21  
                          ?_SprintDate 014E                  __end_ofi1_SendLCDbyte 68FC  
                              _IdleI2C 7C56                              ?_init_LCD 0001  
                         ??_UARTstring 011B                                _Command 0000  
                              _TXdataD EEC1                                _TXdataE EECD  
                              _TXdataF EED9                                _InitApp 7642  
                        ?i1_BufferCopy 0009                        SetLCDcursor@Col 011C  
              __size_ofi1_LCDPrintChar 000E                             ??_ResetI2C 0118  
                              _OpenI2C 7BA8                        SetLCDcursor@Row 011D  
                              _SetBaud 445C                     __end_ofi1_ClearLCD 7C1A  
                       InitUART@config 0127                         ?_CheckSum_byte 010E  
                              __Hparam 0000                                _SetFreq 730A  
                              _SetDuty 62C2                                __Lparam 0000  
                              _NowTime 018C                          ?_SET_RTC_TIME 0116  
                  __size_of_Parse_Time 052A                         InitUART@parity 011F  
                          ?_WriteUSART 0001                i1CheckSum_byte@Odd_Even 0003  
                    i1cleanBuffer@data 0001                                _Version 03C8  
                              ___aldiv 5240                            _SubLightOFF EE81  
                              ___awdiv 5F54                        __size_of___lmul 0086  
                              ___awmod 6394                                ___ftdiv 56C2  
                              ___lldiv 61EE                    __end_of_StringMatch 71A4  
                      __size_of___wmul 0036                                ___ftmul 554C  
                              ___llmod 67B6                                ___fttol 53D0  
                              ___lwmod 7582                        LCDPrintString@c 011E  
                              __pcinit 6C70                             ??_WriteI2C 010F  
                              _delayUS 7220                             ??___ftpack 0113  
                           ??___lbtoft 0119                                __ramtop 0D00  
                              __ptext0 4048                                __ptext1 581A  
                              __ptext2 7C68                                __ptext3 6F28  
                              __ptext4 76F8                                __ptext5 5950  
                              __ptext6 7B5A                                __ptext7 730A  
                              __ptext8 5240                                __ptext9 35D4  
                           ??___lwtoft 0119                                _readI2C 7A4A  
                 __size_ofi1_ReadUSART 002E                      __end_of_hexpowers EDC1  
              i1SendLCDbyte@LSB_nibble 000E                                _dpowers ED79  
                   __end_of_UARTstring 6712                i1CheckSum_byte@ThisTemp 0004  
                              _isdigit 7B04                       ___awmod@dividend 010E  
                     ___aldiv@dividend 0114                                _low_isr 0018  
              i1SendLCDbyte@MSB_nibble 000D                                _sprintf 28D8  
                           ??_high_isr 0100                         __pintcode_body 751C  
                 end_of_initialization 6CF8                      __end_of_octpowers ED79  
                        ??_cleanBuffer 0112                             ??_init_LCD 011C  
                      i1ReadUSART@data 0001                              i1u1141_20 695A  
                            i1u1141_27 6950                              i1u1142_20 6988  
                            i1u1142_27 697E                      __end_of_lowercase 6D8C  
                              int_func 751C                              i1u1722_20 747A  
                            i1u1714_20 6C02                              i1u1722_27 7470  
                            i1u1714_27 6BF8                              i1u1724_20 74AC  
                            i1u1716_20 6C32                              i1u1724_27 74A2  
                            i1u1716_27 6C28                              i1u1718_20 6C68  
                            i1u1718_27 6C5E                         ??i1_BufferCopy 000F  
                 __end_of_Send_Config1 5D86                   __end_of_Send_Config2 6EA2  
                 GetEnteredNumber@This 011A                __size_ofi1_SetLCDcursor 0026  
                     ??_LCDPrintString 011E                        ___lldiv@divisor 0112  
                       ??_SET_RTC_TIME 011F                   GetEnteredNumber@temp 0125  
        I2C_Read_Sequential@I2Caddress 0117                        ___lldiv@counter 011A  
                     _RTC_Clock_Enable 76F8                  __size_of_LCDPrintChar 0014  
                            _RCSTAbits 000FAB                       ___aldiv@quotient 011E  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc1 000FE6  
                              postinc2 000FDE                          i1BufferCopy@i 000F  
                    ?i1_PulseEnablePin 0001                     Parse_Time@TempTime 0112  
              __size_of_PulseEnablePin 003E                        i1_CheckSum_byte 787C  
                  __size_of_StartsWith 0096                     ??i1_PulseEnablePin 000B  
              i1LCDPrintChar@character 000F                    __size_of_SprintDate 011A  
                         ??_BufferCopy 011C                              _TRISAbits 000F92  
                            _TRISCbits 000F94                              _TRISDbits 000F95  
                            _TRISEbits 000F96                         BufferCopy@from 0116  
                   low_isr@TEMP_Rxdata 0060                    __size_of_WriteUSART 0014  
          __end_of_ConfigureOscillator 7CAE                              i1_delayUS 7830  
         __end_of_I2C_Write_At_Address 65C0                           _LCDPrintChar 7C2E  
                 __end_ofi1_UARTstring 6C70                            ___ftdiv@exp 0127  
                      ??_CheckSum_byte 0111                              _TXSTAbits 000FAC  
                       __end_of_BedOFF EE71                            _StringMatch 7128  
                  __end_of_cleanBuffer 76F8                         __end_of_Aux2ON EE41  
                 __end_of_RemoveSpaces 666C                         __end_of_AuxOFF EE51  
                __size_of_SetLCDcursor 0034                     __end_of_BufferCopy 6510  
                          ___ftmul@exp 0132                      __size_of_ISNUMBER 001E  
                  RemoveSpaces@address 0183                          ?_Zero_Config1 0001  
                        ?_Zero_Config2 0001                  CheckSum_byte@Odd_Even 0110  
                       __end_of___lmul 6F28                         __end_of_fanOFF EEB1  
             __size_of_Init_I2C_Master 0050                         __end_of___wmul 79B4  
          __end_of_I2C_Read_Sequential 6114                       ??_StringAddEqual 011F  
                    _EnableInternalADC 6712                      __size_of_UARTchar 0080  
                    __size_of_RTC_INIT 0010            __size_of_LCDdisplayFeedback 0040  
                    GetEnteredNumber@i 0123                     ?_EnableInternalADC 0001  
                     _GetEnteredNumber 4CD4                           ??_Parse_Time 0110  
                  start_initialization 6C70                           ?_One_Config1 0001  
                         ?_One_Config2 0001                              _ReadUSART 7A1A  
              __size_of_UARTstringWAIT 0080                  SendLCDbyte@LSB_nibble 011B  
                    __size_of_PWM_init 0028                  CheckSum_byte@ThisTemp 0111  
                    __size_of_ClearLCD 001A                       WriteI2C@data_out 0110  
                SendLCDbyte@MSB_nibble 011A                    ??_EnableInternalADC 010E  
                           ?i1_delayUS 0001           __end_of_TXToiletAlexBathroom EDCD  
                         ?_SendLCDbyte 0118                       ??_StringContains 0112  
             __end_of_ContrastPWM_init 7CA0                           _SetLCDcursor 79B4  
                            _OpenUSART 7296                        ___llmod@divisor 011F  
                    __size_of_InitUART 01B8                        ___llmod@counter 0123  
                    i1BufferCopy@count 000D                         i1_LCDPrintChar 7C86  
                    i1BufferCopy@shift 000E                         Command@channel 05DA  
                            _Scroll_10 0243                __end_ofi1_CheckSum_byte 78C4  
                   SprintDate@Military 0159              StringAddEqual@firstnumber 0185  
                    ?_InternalADC_Read 011D                     __end_of_Parse_Time 4048  
                    __size_of_ResetI2C 002A                         ??_Zero_Config1 0118  
                       ??_Zero_Config2 0118                               ??___lmul 0116  
                             ??___wmul 0112                     ??_InternalADC_Read 011F  
            __end_of_EnableInternalADC 67B6                           ?_SetContrast 0001  
                          __pdataBANK1 01EA                            __pdataBANK3 03C8  
                     __CFG_LPT1OSC$OFF 000000               __end_ofi1_LCDPrintString 74B4  
                            _f_Config1 6A2A                      __size_of_WriteI2C 008C  
                   SetContrast@tempPR2 014B                      __size_of___ftpack 010A  
                    __size_of___lbtoft 0032                   __end_ofi1_BufferCopy 6994  
                LCDPrintChar@character 011C                       cleanBuffer@count 0110  
         __end_of_RTC_TIME_NONMilitary 6FAA                            __pbssCOMRAM 0027  
                           ?_ReadUSART 0001                      __size_of___lwtoft 002E  
                        __pcstackBANK0 0060                          __pcstackBANK1 0100  
                        __pcstackBANK2 0200                          __pcstackBANK5 0500  
                 __end_of_SET_RTC_TIME 4A8C                    __end_of__stringdata FFFF  
             __size_of_LCDScreenUpdate 054A                           _isdigit$2640 010F  
                __size_of_Send_Config1 00EE                  __size_of_Send_Config2 008A  
                         ??_StartsWith 0112                              _baudUSART 7C78  
                   __end_of_SubLightON EEA1                           ??_SprintDate 015A  
                          _cleanBuffer 76A0                               ?_IdleI2C 0001  
               __end_ofi1_LCDPrintChar 7C94                             ?_OpenUSART 010E  
                       LCD_Scroll@This 011D                      __size_of_high_isr 757A  
                          sprintf@_val 0147                            sprintf@flag 014C  
                          sprintf@prec 0143                               ?_Command 0188  
                       i1_SetLCDcursor 7B82          I2C_Read_At_Address@I2Caddress 0113  
                             ?_InitApp 0001                      __size_of_init_LCD 0136  
                             ?_OpenI2C 010E                               ?_SetBaud 014E  
                             ?_SetFreq 0122                               ?_SetDuty 0001  
                SprintDate@DisplayTime 0150                           ??_WriteUSART 0001  
                            __pintcode 0008                          __pmediumconst ED48  
                             ?___aldiv 0114                               ?___awdiv 010E  
                             ?___awmod 010E                        _TXdataLabCLOSED EE09  
                             ?___ftdiv 011A                               ?___lldiv 010E  
                             ?___ftmul 0129                               ?___llmod 011B  
                             ?___fttol 0138                               ?___lwmod 010E  
                       _PulseEnablePin 7904                        _TXdataLabOPENED EE15  
                          __pintcodelo 0018                               ?_delayUS 010E  
                   __end_of_StartsWith 6A2A                   _I2C_Write_At_Address 6510  
                           ?_f_Config1 0001                     __end_of_SprintDate 5B8E  
                             ?_readI2C 0001                       RemoveSpaces@That 011F  
             I2C_Read_Sequential@rdptr 0114                       RemoveSpaces@This 011D  
                             _ECCP1CON 000FBA                           _Send_Config1 5C98  
                         _Send_Config2 6E18                               ?_isdigit 0001  
                    ??_Init_I2C_Master 0110                               ?_low_isr 0001  
             __end_of_RTC_Clock_Enable 7748                              _hexpowers EDA1  
                __end_of_READ_RTC_TIME 5F54                  __size_ofi1_UARTstring 0090  
                             ?_sprintf 0124             UARTchar@NinethBit_override 0115  
                   __end_of_WriteUSART 7C56                             ?_baudUSART 0001  
                          ??i1_delayUS 0005                             lowercase@i 0111  
                            delayUS@US 010E                  __end_ofi1_cleanBuffer 797E  
               __end_ofi1_SetLCDcursor 7BA8           __size_of_I2C_Read_At_Address 0124  
                      ___aldiv@divisor 0118                        ?i1_LCDPrintChar 0001  
                       Parse_Time@This 010E                  __size_of_RemoveSpaces 00AC  
                      ___aldiv@counter 011C                         ___wmul@product 0112  
                       Parse_Time@temp 0111                              _octpowers ED49  
                             _IPR1bits 000F9F                               _PIE1bits 000F9D  
                         cleanBuffer@i 0115                            _bufferCount 00D9  
                             _ISNUMBER 7BCC             __end_of_TXToiletMyBathroom EDD9  
                            _lowercase 6CFE                               _PIR1bits 000F9E  
                             _PIR2bits 000FA1                       ?i1_CheckSum_byte 0001  
               __end_of_PulseEnablePin 7942                               _RCONbits 000FD0  
                     __CFG_WDTPS$32768 000000             __size_of_EnableInternalADC 00A4  
                             _UARTchar 702A                               _RTC_INIT 7C68  
                        ??i1_ReadUSART 0001                      i1SendLCDbyte@data 000C  
                ?_I2C_Write_At_Address 0111                   _TXToiletAlexBathroom EDC1  
                          __stringdata EEE5                 __size_ofi1_SendLCDbyte 00A2  
                    ___wmul@multiplier 010E                           i1_UARTstring 6BE0  
                             _PWM_init 7B5A              EnableInternalADC@channels 010F  
                            main@count 018B                               _ClearLCD 7BEA  
                       _UARTstringWAIT 6FAA                            ??_ReadUSART 010E  
                      StringAddEqual@i 0186                        StringAddEqual@j 0187  
                         _RemoveSpaces 65C0                   __size_of_One_Config1 0092  
                 __size_of_One_Config2 004C              __size_ofi1_PulseEnablePin 002E  
                 __end_of_Zero_Config1 6B4E                   __end_of_Zero_Config2 77E4  
                    ___lmul@multiplier 010E                              copy_data0 6CCC  
                            copy_data1 6CEC                               SetBaud@i 0232  
                             _InitUART 5088                       OpenI2C@sync_mode 010F  
                      ?i1_SetLCDcursor 000F                            ??_OpenUSART 0110  
                    ??_LCDScreenUpdate 0120                       __size_of_IdleI2C 0012  
                      OpenUSART@config 0113                  i1SetLCDcursor@address 0011  
                 __size_of_SendLCDbyte 00DA                __end_of_TXdataLabCLOSED EE15  
                             __Hparam1 0000                           ?_StringMatch 010E  
                     __size_of_Command 28D8               __end_of_GetEnteredNumber 4ED0  
                             _ResetI2C 7B30                       i1BufferCopy@from 0009  
                     __size_of_InitApp 005E                               __Lparam1 0000  
              __end_of_TXdataLabOPENED EE21                             ?_lowercase 010E  
                     __size_of_OpenI2C 0024                   _RTC_TIME_NONMilitary 6F28  
                             _Scroll_1 019A                               _Scroll_2 01AA  
                             _Scroll_3 01BA                               _Scroll_4 01CA  
                             _Scroll_5 01DA                               _Scroll_6 0027  
                             _Scroll_7 0037                               _Scroll_8 00DA  
                             _Scroll_9 00EA                       __size_of_SetBaud 036C  
                       i1cleanBuffer@i 0008                       __size_of_SetFreq 006C  
                     __size_of_SetDuty 00D2                        ?_PulseEnablePin 0001  
                     __size_of___aldiv 0190                     i1cleanBuffer@count 0003  
                     __size_of___awdiv 00E2                  __size_ofi1_BufferCopy 0098  
                     __size_of___awmod 00C4                       __size_of___ftdiv 0158  
                      cleanBuffer@data 010E                       __size_of___lldiv 00D4  
                     __size_of___ftmul 0176                       __size_of___llmod 00A4  
                     __size_of___fttol 017C                       __size_of___lwmod 0060  
          I2C_Read_Sequential@Register 0113                               _WriteI2C 6D8C  
                        SetBaud@Parity 0152                               ___ftpack 5B8E  
                             ___lbtoft 79E8                  __size_of_SET_RTC_TIME 02C4  
                 __size_of_SetContrast 00E8                       __size_of_delayUS 0076  
                          ??_f_Config1 0118                 __end_of_UARTstringWAIT 702A  
                             ___lwtoft 7A7A                             sprintf@idx 013A  
                     __size_of_readI2C 0030                      SET_RTC_TIME@Error 012A  
                  __end_ofi1_ReadUSART 7AD6                       __size_of_isdigit 002C  
                     __size_of_low_isr 0378                          ISNUMBER@ascii 010E  
                             __ptext10 7C2E                               __ptext11 7642  
                             __ptext20 70AA                               __ptext12 6712  
                             __ptext21 4ED0                               __ptext13 7C94  
               LCDdisplayFeedback@Text 0120                               __ptext30 5B8E  
                             __ptext22 6994                               __ptext14 7CA8  
                             __ptext31 445C                               __ptext23 5A74  
                             __ptext15 0000                               __ptext40 7A1A  
                             __ptext32 28D8                               __ptext24 62C2  
                             __ptext16 6CFE                               __ptext41 7296  
                             __ptext33 7B04                               __ptext25 5D86  
                             __ptext17 7A7A                               __ptext50 6394  
                             __ptext42 6E18                               __ptext34 797E  
                             __ptext26 79E8                               __ptext18 7582  
                             __ptext51 5F54                               __ptext43 7798  
                             __ptext35 67B6                               __ptext27 53D0  
                             __ptext19 7128                               __ptext60 7C56  
                             __ptext52 6510                               __ptext44 77E4  
                             __ptext36 6FAA                               __ptext28 554C  
                             __ptext61 7376                               __ptext53 65C0  
                             __ptext45 5C98                               __ptext37 5088  
                             __ptext29 56C2                               __ptext70 7220  
                             __ptext62 7A4A                               __ptext54 5E6E  
                             __ptext46 6A2A                               __ptext38 7C78  
                             __ptext71 4A8C                               __ptext63 3B1E  
                             __ptext55 7B30                               __ptext47 6ABC  
                             __ptext39 61EE                               __ptext80 6EA2  
                             __ptext72 6458                               __ptext64 78C4  
                             __ptext56 7748                               __ptext48 6B4E  
                             __ptext73 76A0                               __ptext65 79B4  
                             __ptext57 7BA8                               __ptext49 47C8  
                   READ_RTC_TIME@Error 011F                               __ptext90 685A  
                             __ptext82 6BE0                               __ptext74 74B4  
                             __ptext66 71A4                               __ptext58 6036  
                             __ptext91 7AD6                               __ptext83 73E0  
                             __ptext75 666C                               __ptext67 7BEA  
                             __ptext59 6D8C                               __ptext92 7830  
                             __ptext84 787C                               __ptext76 702A  
                             __ptext68 6114                               __ptext93 68FC  
                             __ptext85 7B82                               __ptext77 75E2  
                             __ptext69 7904                               __ptext94 7942  
                             __ptext86 7AA8                               __ptext78 7BCC  
                             __ptext95 7C42                               __ptext87 744A  
                             __ptext79 4CD4                               __ptext88 7C86  
                             __ptext89 7C04                               _high_isr 0008  
                          ??_baudUSART 010E                       __size_of_sprintf 0CFC  
                            low_isr@rx 00D7                               _init_LCD 581A  
                    ?_ContrastPWM_init 0001                          i1_SendLCDbyte 685A  
        RTC_TIME_NONMilitary@temphours 011B                          __size_of_main 0414  
                             delayUS@i 0113                               delayUS@j 0117  
                   ??_ContrastPWM_init 0153                           i1_BufferCopy 68FC  
         __size_of_ConfigureOscillator 0006                  __end_of_CheckSum_byte 7642  
                ?_RTC_TIME_NONMilitary 0001                           _SET_RTC_TIME 47C8  
                       CheckSum_byte@i 0114                      _Multiple_I2C_Read 7376  
                         BufferCopy@to 0118                 ??_I2C_Write_At_Address 0113  
                           _LCD_Scroll 4A8C             __end_of_LCDdisplayFeedback 7904  
                   ?_Multiple_I2C_Read 010F                      ?i1_LCDPrintString 000F  
              __size_of_LCDPrintString 007C           I2C_Write_At_Address@Register 0111  
                      ?_UARTstringWAIT 0119                    CheckSum_byte@Parity 0113  
                   ??i1_LCDPrintString 0011                           Command@Input 0188  
                           _INTCONbits 000FF2              __size_of_InternalADC_Read 0068  
                  ??_Multiple_I2C_Read 0112                         OpenUSART@spbrg 010E  
         __size_of_I2C_Read_Sequential 00DE                           UARTchar@data 0118  
                      StringMatch@That 0110                        StringMatch@This 010E  
         i1UARTchar@NinethBit_override 0008                               isdigit@c 0110  
Command@RTC_Battery_Value_HIGH_decimal 05CC                               intlevel1 0000  
                             intlevel2 0000                 i1SendLCDbyte@isCommand 000B  
                            sprintf@ap 0141                              sprintf@sp 0124  
                         ?_cleanBuffer 010E                         ?i1_SendLCDbyte 000B  
                  _TXdataBedroomCLOSED EDD9                       ___lwmod@dividend 010E  
                     SET_RTC_TIME@temp 0123                       ___lldiv@dividend 010E  
                    _TXdataFrontCLOSED EDF1                    _TXdataBedroomOPENED EDE5  
                    READ_RTC_TIME@temp 0118                               low_isr@i 00D4  
                             low_isr@j 00D6                      _TXdataFrontOPENED EDFD  
                          ??_lowercase 0110              __end_of_Multiple_I2C_Read 73E0  
                           i1_UARTchar 73E0                            BufferCopy@i 011C  
                      _Init_I2C_Master 7748                            i1_ReadUSART 7AA8  
                  _I2C_Read_At_Address 5950                         i1BufferCopy@to 000B  
                          Command@duty 05DC                             i1_ClearLCD 7C04  
                             sprintf@c 014B                               sprintf@f 0126  
            RTC_TIME_NONMilitary@Error 0119                       ___lldiv@quotient 0116  
                __size_of_Zero_Config1 0092                  __size_of_Zero_Config2 004C  
                      ___lwmod@divisor 0110                        ___lwmod@counter 0112  
                         ___aldiv@sign 011D              I2C_Read_Sequential@length 0116  
                          _SSPCON1bits 000FC6                       ??i1_LCDPrintChar 000F  
                          _SSPCON2bits 000FC5                  _ScrollDisplayPosition 0197  
                    ?_RTC_Clock_Enable 0001                       i1_PulseEnablePin 7AD6  
                    CheckSum_byte@This 010E                __size_of_StringAddEqual 01B8  
                       i1UARTchar@data 000B                             Command@buf 0500  
            __end_of_TXdataFrontCLOSED EDFD                     ??_RTC_Clock_Enable 0118  
                 ?_I2C_Read_At_Address 0111                   SendLCDbyte@isCommand 0118  
            __end_of_TXdataFrontOPENED EE09                      i1SetLCDcursor@Col 000F  
                           _UARTstring 666C                      i1SetLCDcursor@Row 0010  
               ??_RTC_TIME_NONMilitary 0118                           _USART_Status 0199  
                      BufferCopy@count 011A                   __size_of_StringMatch 007C  
