

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Mar 13 15:47:24 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4685
     2                           	fnconf	param1,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	idataBANK3,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   162                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   163                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   164                           	psect	param1,global,class=BANK1,space=1,delta=1
   165  0000                     
   166                           	psect	idataCOMRAM
   167  017CFC                     __pidataCOMRAM:
   168                           	opt stack 0
   169                           
   170                           ;initializer for _LCDclearCount
   171  017CFC  0011               	dw	17
   172  017CFE  0000               	dw	0
   173                           
   174                           	psect	idataBANK1
   175  000F88                     __pidataBANK1:
   176                           	opt stack 0
   177                           
   178                           ;initializer for _BlueLEDcount
   179  000F88  09C4               	dw	2500
   180                           
   181                           	psect	idataBANK3
   182  000E88                     __pidataBANK3:
   183                           	opt stack 0
   184                           
   185                           ;initializer for _Version
   186  000E88  31                 	db	49
   187  000E89  2E                 	db	46
   188  000E8A  30                 	db	48
   189  000E8B  5F                 	db	95
   190  000E8C  44                 	db	68
   191  000E8D  57                 	db	87
   192  000E8E  30                 	db	48
   193  000E8F  61                 	db	97
   194  000E90  00                 	db	0
   195  000E91  00                 	db	0
   196  000E92  00                 	db	0
   197  000E93  00                 	db	0
   198  000E94  00                 	db	0
   199  000E95  00                 	db	0
   200  000E96  00                 	db	0
   201  000E97  00                 	db	0
   202  000E98  00                 	db	0
   203  000E99  00                 	db	0
   204  000E9A  00                 	db	0
   205  000E9B  00                 	db	0
   206                           
   207                           	psect	mediumconst
   208  00ECC0                     __pmediumconst:
   209                           	opt stack 0
   210  00ECC0  00                 	db	0
   211  00ECC1                     _octpowers:
   212                           	opt stack 0
   213  00ECC1  0001               	dw	1
   214  00ECC3  0000               	dw	0
   215  00ECC5  0008               	dw	8
   216  00ECC7  0000               	dw	0
   217  00ECC9  0040               	dw	64
   218  00ECCB  0000               	dw	0
   219  00ECCD  0200               	dw	512
   220  00ECCF  0000               	dw	0
   221  00ECD1  1000               	dw	4096
   222  00ECD3  0000               	dw	0
   223  00ECD5  8000               	dw	32768
   224  00ECD7  0000               	dw	0
   225  00ECD9  0000               	dw	0
   226  00ECDB  0004               	dw	4
   227  00ECDD  0000               	dw	0
   228  00ECDF  0020               	dw	32
   229  00ECE1  0000               	dw	0
   230  00ECE3  0100               	dw	256
   231  00ECE5  0000               	dw	0
   232  00ECE7  0800               	dw	2048
   233  00ECE9  0000               	dw	0
   234  00ECEB  4000               	dw	16384
   235  00ECED  0000               	dw	0
   236  00ECEF  0000               	dw	0
   237  00ECF1                     __end_of_octpowers:
   238                           	opt stack 0
   239  00ECF1                     _dpowers:
   240                           	opt stack 0
   241  00ECF1  0001               	dw	1
   242  00ECF3  0000               	dw	0
   243  00ECF5  000A               	dw	10
   244  00ECF7  0000               	dw	0
   245  00ECF9  0064               	dw	100
   246  00ECFB  0000               	dw	0
   247  00ECFD  03E8               	dw	1000
   248  00ECFF  0000               	dw	0
   249  00ED01  2710               	dw	10000
   250  00ED03  0000               	dw	0
   251  00ED05  86A0               	dw	34464
   252  00ED07  0001               	dw	1
   253  00ED09  4240               	dw	16960
   254  00ED0B  000F               	dw	15
   255  00ED0D  9680               	dw	38528
   256  00ED0F  0098               	dw	152
   257  00ED11  E100               	dw	57600
   258  00ED13  05F5               	dw	1525
   259  00ED15  CA00               	dw	51712
   260  00ED17  3B9A               	dw	15258
   261  00ED19                     __end_of_dpowers:
   262                           	opt stack 0
   263  00ED19                     _hexpowers:
   264                           	opt stack 0
   265  00ED19  0001               	dw	1
   266  00ED1B  0000               	dw	0
   267  00ED1D  0010               	dw	16
   268  00ED1F  0000               	dw	0
   269  00ED21  0100               	dw	256
   270  00ED23  0000               	dw	0
   271  00ED25  1000               	dw	4096
   272  00ED27  0000               	dw	0
   273  00ED29  0000               	dw	0
   274  00ED2B  0001               	dw	1
   275  00ED2D  0000               	dw	0
   276  00ED2F  0010               	dw	16
   277  00ED31  0000               	dw	0
   278  00ED33  0100               	dw	256
   279  00ED35  0000               	dw	0
   280  00ED37  1000               	dw	4096
   281  00ED39                     __end_of_hexpowers:
   282                           	opt stack 0
   283  00ED39                     _TXToiletAlexBathroom:
   284                           	opt stack 0
   285  00ED39  00                 	db	0
   286  00ED3A  00                 	db	0
   287  00ED3B  00                 	db	0
   288  00ED3C  00                 	db	0
   289  00ED3D  00                 	db	0
   290  00ED3E  00                 	db	0
   291  00ED3F  00                 	db	0
   292  00ED40  00                 	db	0
   293  00ED41  00                 	db	0
   294  00ED42  00                 	db	0
   295  00ED43  00                 	db	0
   296  00ED44  02                 	db	2
   297  00ED45                     __end_of_TXToiletAlexBathroom:
   298                           	opt stack 0
   299  00ED45                     _TXToiletMyBathroom:
   300                           	opt stack 0
   301  00ED45  00                 	db	0
   302  00ED46  00                 	db	0
   303  00ED47  00                 	db	0
   304  00ED48  00                 	db	0
   305  00ED49  00                 	db	0
   306  00ED4A  00                 	db	0
   307  00ED4B  00                 	db	0
   308  00ED4C  00                 	db	0
   309  00ED4D  00                 	db	0
   310  00ED4E  00                 	db	0
   311  00ED4F  00                 	db	0
   312  00ED50  01                 	db	1
   313  00ED51                     __end_of_TXToiletMyBathroom:
   314                           	opt stack 0
   315  00ED51                     _TXdataBedroomCLOSED:
   316                           	opt stack 0
   317  00ED51  00                 	db	0
   318  00ED52  00                 	db	0
   319  00ED53  00                 	db	0
   320  00ED54  00                 	db	0
   321  00ED55  00                 	db	0
   322  00ED56  00                 	db	0
   323  00ED57  00                 	db	0
   324  00ED58  00                 	db	0
   325  00ED59  00                 	db	0
   326  00ED5A  01                 	db	1
   327  00ED5B  00                 	db	0
   328  00ED5C  00                 	db	0
   329  00ED5D                     __end_of_TXdataBedroomCLOSED:
   330                           	opt stack 0
   331  00ED5D                     _TXdataBedroomOPENED:
   332                           	opt stack 0
   333  00ED5D  00                 	db	0
   334  00ED5E  00                 	db	0
   335  00ED5F  00                 	db	0
   336  00ED60  00                 	db	0
   337  00ED61  00                 	db	0
   338  00ED62  00                 	db	0
   339  00ED63  00                 	db	0
   340  00ED64  00                 	db	0
   341  00ED65  00                 	db	0
   342  00ED66  02                 	db	2
   343  00ED67  00                 	db	0
   344  00ED68  00                 	db	0
   345  00ED69                     __end_of_TXdataBedroomOPENED:
   346                           	opt stack 0
   347  00ED69                     _TXdataFrontCLOSED:
   348                           	opt stack 0
   349  00ED69  00                 	db	0
   350  00ED6A  00                 	db	0
   351  00ED6B  00                 	db	0
   352  00ED6C  00                 	db	0
   353  00ED6D  00                 	db	0
   354  00ED6E  00                 	db	0
   355  00ED6F  00                 	db	0
   356  00ED70  00                 	db	0
   357  00ED71  00                 	db	0
   358  00ED72  00                 	db	0
   359  00ED73  02                 	db	2
   360  00ED74  00                 	db	0
   361  00ED75                     __end_of_TXdataFrontCLOSED:
   362                           	opt stack 0
   363  00ED75                     _TXdataFrontOPENED:
   364                           	opt stack 0
   365  00ED75  00                 	db	0
   366  00ED76  00                 	db	0
   367  00ED77  00                 	db	0
   368  00ED78  00                 	db	0
   369  00ED79  00                 	db	0
   370  00ED7A  00                 	db	0
   371  00ED7B  00                 	db	0
   372  00ED7C  00                 	db	0
   373  00ED7D  00                 	db	0
   374  00ED7E  00                 	db	0
   375  00ED7F  01                 	db	1
   376  00ED80  00                 	db	0
   377  00ED81                     __end_of_TXdataFrontOPENED:
   378                           	opt stack 0
   379  00ED81                     _TXdataLabCLOSED:
   380                           	opt stack 0
   381  00ED81  00                 	db	0
   382  00ED82  00                 	db	0
   383  00ED83  00                 	db	0
   384  00ED84  00                 	db	0
   385  00ED85  00                 	db	0
   386  00ED86  00                 	db	0
   387  00ED87  00                 	db	0
   388  00ED88  00                 	db	0
   389  00ED89  02                 	db	2
   390  00ED8A  00                 	db	0
   391  00ED8B  00                 	db	0
   392  00ED8C  00                 	db	0
   393  00ED8D                     __end_of_TXdataLabCLOSED:
   394                           	opt stack 0
   395  00ED8D                     _TXdataLabOPENED:
   396                           	opt stack 0
   397  00ED8D  00                 	db	0
   398  00ED8E  00                 	db	0
   399  00ED8F  00                 	db	0
   400  00ED90  00                 	db	0
   401  00ED91  00                 	db	0
   402  00ED92  00                 	db	0
   403  00ED93  00                 	db	0
   404  00ED94  00                 	db	0
   405  00ED95  01                 	db	1
   406  00ED96  00                 	db	0
   407  00ED97  00                 	db	0
   408  00ED98  00                 	db	0
   409  00ED99                     __end_of_TXdataLabOPENED:
   410                           	opt stack 0
   411  00ED99                     _Aux2OFF:
   412                           	opt stack 0
   413  00ED99  00                 	db	0
   414  00ED9A  01                 	db	1
   415  00ED9B  01                 	db	1
   416  00ED9C  00                 	db	0
   417  00ED9D  01                 	db	1
   418  00ED9E  00                 	db	0
   419  00ED9F  00                 	db	0
   420  00EDA0  00                 	db	0
   421  00EDA1  00                 	db	0
   422  00EDA2  00                 	db	0
   423  00EDA3  00                 	db	0
   424  00EDA4  01                 	db	1
   425  00EDA5  00                 	db	0
   426  00EDA6  00                 	db	0
   427  00EDA7  00                 	db	0
   428  00EDA8  01                 	db	1
   429  00EDA9                     __end_of_Aux2OFF:
   430                           	opt stack 0
   431  00EDA9                     _Aux2ON:
   432                           	opt stack 0
   433  00EDA9  00                 	db	0
   434  00EDAA  01                 	db	1
   435  00EDAB  01                 	db	1
   436  00EDAC  00                 	db	0
   437  00EDAD  01                 	db	1
   438  00EDAE  00                 	db	0
   439  00EDAF  00                 	db	0
   440  00EDB0  00                 	db	0
   441  00EDB1  00                 	db	0
   442  00EDB2  00                 	db	0
   443  00EDB3  01                 	db	1
   444  00EDB4  00                 	db	0
   445  00EDB5  00                 	db	0
   446  00EDB6  00                 	db	0
   447  00EDB7  00                 	db	0
   448  00EDB8  01                 	db	1
   449  00EDB9                     __end_of_Aux2ON:
   450                           	opt stack 0
   451  00EDB9                     _AuxOFF:
   452                           	opt stack 0
   453  00EDB9  00                 	db	0
   454  00EDBA  01                 	db	1
   455  00EDBB  01                 	db	1
   456  00EDBC  00                 	db	0
   457  00EDBD  01                 	db	1
   458  00EDBE  00                 	db	0
   459  00EDBF  01                 	db	1
   460  00EDC0  00                 	db	0
   461  00EDC1  00                 	db	0
   462  00EDC2  00                 	db	0
   463  00EDC3  00                 	db	0
   464  00EDC4  00                 	db	0
   465  00EDC5  00                 	db	0
   466  00EDC6  00                 	db	0
   467  00EDC7  00                 	db	0
   468  00EDC8  00                 	db	0
   469  00EDC9                     __end_of_AuxOFF:
   470                           	opt stack 0
   471  00EDC9                     _AuxON:
   472                           	opt stack 0
   473  00EDC9  00                 	db	0
   474  00EDCA  01                 	db	1
   475  00EDCB  01                 	db	1
   476  00EDCC  00                 	db	0
   477  00EDCD  01                 	db	1
   478  00EDCE  00                 	db	0
   479  00EDCF  00                 	db	0
   480  00EDD0  01                 	db	1
   481  00EDD1  00                 	db	0
   482  00EDD2  00                 	db	0
   483  00EDD3  00                 	db	0
   484  00EDD4  00                 	db	0
   485  00EDD5  00                 	db	0
   486  00EDD6  00                 	db	0
   487  00EDD7  00                 	db	0
   488  00EDD8  00                 	db	0
   489  00EDD9                     __end_of_AuxON:
   490                           	opt stack 0
   491  00EDD9                     _BedOFF:
   492                           	opt stack 0
   493  00EDD9  00                 	db	0
   494  00EDDA  01                 	db	1
   495  00EDDB  01                 	db	1
   496  00EDDC  00                 	db	0
   497  00EDDD  01                 	db	1
   498  00EDDE  00                 	db	0
   499  00EDDF  00                 	db	0
   500  00EDE0  00                 	db	0
   501  00EDE1  00                 	db	0
   502  00EDE2  01                 	db	1
   503  00EDE3  00                 	db	0
   504  00EDE4  00                 	db	0
   505  00EDE5  00                 	db	0
   506  00EDE6  00                 	db	0
   507  00EDE7  00                 	db	0
   508  00EDE8  00                 	db	0
   509  00EDE9                     __end_of_BedOFF:
   510                           	opt stack 0
   511  00EDE9                     _BedON:
   512                           	opt stack 0
   513  00EDE9  00                 	db	0
   514  00EDEA  01                 	db	1
   515  00EDEB  01                 	db	1
   516  00EDEC  00                 	db	0
   517  00EDED  01                 	db	1
   518  00EDEE  00                 	db	0
   519  00EDEF  00                 	db	0
   520  00EDF0  00                 	db	0
   521  00EDF1  01                 	db	1
   522  00EDF2  00                 	db	0
   523  00EDF3  00                 	db	0
   524  00EDF4  00                 	db	0
   525  00EDF5  00                 	db	0
   526  00EDF6  00                 	db	0
   527  00EDF7  00                 	db	0
   528  00EDF8  00                 	db	0
   529  00EDF9                     __end_of_BedON:
   530                           	opt stack 0
   531  00EDF9                     _SubLightOFF:
   532                           	opt stack 0
   533  00EDF9  00                 	db	0
   534  00EDFA  01                 	db	1
   535  00EDFB  01                 	db	1
   536  00EDFC  00                 	db	0
   537  00EDFD  01                 	db	1
   538  00EDFE  00                 	db	0
   539  00EDFF  00                 	db	0
   540  00EE00  00                 	db	0
   541  00EE01  00                 	db	0
   542  00EE02  00                 	db	0
   543  00EE03  00                 	db	0
   544  00EE04  01                 	db	1
   545  00EE05  00                 	db	0
   546  00EE06  01                 	db	1
   547  00EE07  00                 	db	0
   548  00EE08  00                 	db	0
   549  00EE09                     __end_of_SubLightOFF:
   550                           	opt stack 0
   551  00EE09                     _SubLightON:
   552                           	opt stack 0
   553  00EE09  00                 	db	0
   554  00EE0A  01                 	db	1
   555  00EE0B  01                 	db	1
   556  00EE0C  00                 	db	0
   557  00EE0D  01                 	db	1
   558  00EE0E  00                 	db	0
   559  00EE0F  00                 	db	0
   560  00EE10  00                 	db	0
   561  00EE11  00                 	db	0
   562  00EE12  00                 	db	0
   563  00EE13  01                 	db	1
   564  00EE14  00                 	db	0
   565  00EE15  00                 	db	0
   566  00EE16  01                 	db	1
   567  00EE17  00                 	db	0
   568  00EE18  00                 	db	0
   569  00EE19                     __end_of_SubLightON:
   570                           	opt stack 0
   571  00EE19                     _fanOFF:
   572                           	opt stack 0
   573  00EE19  00                 	db	0
   574  00EE1A  01                 	db	1
   575  00EE1B  01                 	db	1
   576  00EE1C  00                 	db	0
   577  00EE1D  01                 	db	1
   578  00EE1E  00                 	db	0
   579  00EE1F  00                 	db	0
   580  00EE20  00                 	db	0
   581  00EE21  00                 	db	0
   582  00EE22  00                 	db	0
   583  00EE23  00                 	db	0
   584  00EE24  01                 	db	1
   585  00EE25  00                 	db	0
   586  00EE26  00                 	db	0
   587  00EE27  00                 	db	0
   588  00EE28  00                 	db	0
   589  00EE29                     __end_of_fanOFF:
   590                           	opt stack 0
   591  00EE29                     _fanON:
   592                           	opt stack 0
   593  00EE29  00                 	db	0
   594  00EE2A  01                 	db	1
   595  00EE2B  01                 	db	1
   596  00EE2C  00                 	db	0
   597  00EE2D  01                 	db	1
   598  00EE2E  00                 	db	0
   599  00EE2F  00                 	db	0
   600  00EE30  00                 	db	0
   601  00EE31  00                 	db	0
   602  00EE32  00                 	db	0
   603  00EE33  01                 	db	1
   604  00EE34  00                 	db	0
   605  00EE35  00                 	db	0
   606  00EE36  00                 	db	0
   607  00EE37  00                 	db	0
   608  00EE38  00                 	db	0
   609  00EE39                     __end_of_fanON:
   610                           	opt stack 0
   611  00EE39                     _TXdataD:
   612                           	opt stack 0
   613  00EE39  02                 	db	2
   614  00EE3A  02                 	db	2
   615  00EE3B  02                 	db	2
   616  00EE3C  02                 	db	2
   617  00EE3D  02                 	db	2
   618  00EE3E  02                 	db	2
   619  00EE3F  00                 	db	0
   620  00EE40  00                 	db	0
   621  00EE41  01                 	db	1
   622  00EE42  00                 	db	0
   623  00EE43  00                 	db	0
   624  00EE44  00                 	db	0
   625  00EE45                     __end_of_TXdataD:
   626                           	opt stack 0
   627  00EE45                     _TXdataE:
   628                           	opt stack 0
   629  00EE45  00                 	db	0
   630  00EE46  02                 	db	2
   631  00EE47  02                 	db	2
   632  00EE48  02                 	db	2
   633  00EE49  02                 	db	2
   634  00EE4A  02                 	db	2
   635  00EE4B  00                 	db	0
   636  00EE4C  00                 	db	0
   637  00EE4D  01                 	db	1
   638  00EE4E  00                 	db	0
   639  00EE4F  00                 	db	0
   640  00EE50  00                 	db	0
   641  00EE51                     __end_of_TXdataE:
   642                           	opt stack 0
   643  00EE51                     _TXdataF:
   644                           	opt stack 0
   645  00EE51  02                 	db	2
   646  00EE52  00                 	db	0
   647  00EE53  02                 	db	2
   648  00EE54  02                 	db	2
   649  00EE55  02                 	db	2
   650  00EE56  02                 	db	2
   651  00EE57  00                 	db	0
   652  00EE58  00                 	db	0
   653  00EE59  01                 	db	1
   654  00EE5A  00                 	db	0
   655  00EE5B  00                 	db	0
   656  00EE5C  00                 	db	0
   657  00EE5D                     __end_of_TXdataF:
   658                           	opt stack 0
   659  0000                     _LATA	set	3977
   660  0000                     _LATC	set	3979
   661  0000                     _LATD	set	3980
   662  0000                     _LATE	set	3981
   663  0000                     _PORTB	set	3969
   664  0000                     _TRISAbits	set	3986
   665  0000                     _TRISBbits	set	3987
   666  0000                     _TRISCbits	set	3988
   667  0000                     _TRISDbits	set	3989
   668  0000                     _TRISEbits	set	3990
   669  0000                     _ADCON0	set	4034
   670  0000                     _ADCON1	set	4033
   671  0000                     _ADCON2	set	4032
   672  0000                     _ADRESH	set	4036
   673  0000                     _ADRESL	set	4035
   674  0000                     _BAUDCON	set	4024
   675  0000                     _CCP1CON	set	4029
   676  0000                     _CCPR1L	set	4030
   677  0000                     _ECCP1CON	set	4026
   678  0000                     _ECCPR1L	set	4027
   679  0000                     _EEADR	set	4009
   680  0000                     _EEADRH	set	4010
   681  0000                     _EECON1bits	set	4006
   682  0000                     _EECON2	set	4007
   683  0000                     _EEDATA	set	4008
   684  0000                     _IPR1bits	set	3999
   685  0000                     _OSCCON	set	4051
   686  0000                     _PIE1	set	3997
   687  0000                     _PIE1bits	set	3997
   688  0000                     _PIR1bits	set	3998
   689  0000                     _PIR2bits	set	4001
   690  0000                     _PR2	set	4043
   691  0000                     _RCONbits	set	4048
   692  0000                     _RCREG	set	4014
   693  0000                     _RCSTA	set	4011
   694  0000                     _RCSTAbits	set	4011
   695  0000                     _SPBRG	set	4015
   696  0000                     _SPBRGH	set	4016
   697  0000                     _SSPADD	set	4040
   698  0000                     _SSPBUF	set	4041
   699  0000                     _SSPCON1	set	4038
   700  0000                     _SSPCON1bits	set	4038
   701  0000                     _SSPCON2	set	4037
   702  0000                     _SSPCON2bits	set	4037
   703  0000                     _SSPSTAT	set	4039
   704  0000                     _SSPSTATbits	set	4039
   705  0000                     _T1CONbits	set	4045
   706  0000                     _T2CON	set	4042
   707  0000                     _TMR1H	set	4047
   708  0000                     _TMR1L	set	4046
   709  0000                     _TXREG	set	4013
   710  0000                     _TXSTA	set	4012
   711  0000                     _TXSTAbits	set	4012
   712  0000                     _T0CONbits	set	4053
   713  0000                     _TMR0H	set	4055
   714  0000                     _TMR0L	set	4054
   715  0000                     _INTCON2bits	set	4081
   716  0000                     _INTCONbits	set	4082
   717  00EE5D                     STR_213:
   718  00EE5D  54                 	db	84	;'T'
   719  00EE5E  6F                 	db	111	;'o'
   720  00EE5F  20                 	db	32
   721  00EE60  72                 	db	114	;'r'
   722  00EE61  65                 	db	101	;'e'
   723  00EE62  61                 	db	97	;'a'
   724  00EE63  64                 	db	100	;'d'
   725  00EE64  20                 	db	32
   726  00EE65  61                 	db	97	;'a'
   727  00EE66  6E                 	db	110	;'n'
   728  00EE67  64                 	db	100	;'d'
   729  00EE68  20                 	db	32
   730  00EE69  61                 	db	97	;'a'
   731  00EE6A  64                 	db	100	;'d'
   732  00EE6B  63                 	db	99	;'c'
   733  00EE6C  20                 	db	32
   734  00EE6D  63                 	db	99	;'c'
   735  00EE6E  68                 	db	104	;'h'
   736  00EE6F  61                 	db	97	;'a'
   737  00EE70  6E                 	db	110	;'n'
   738  00EE71  6E                 	db	110	;'n'
   739  00EE72  65                 	db	101	;'e'
   740  00EE73  6C                 	db	108	;'l'
   741  00EE74  2C                 	db	44
   742  00EE75  20                 	db	32
   743  00EE76  74                 	db	116	;'t'
   744  00EE77  79                 	db	121	;'y'
   745  00EE78  70                 	db	112	;'p'
   746  00EE79  65                 	db	101	;'e'
   747  00EE7A  20                 	db	32
   748  00EE7B  74                 	db	116	;'t'
   749  00EE7C  68                 	db	104	;'h'
   750  00EE7D  65                 	db	101	;'e'
   751  00EE7E  20                 	db	32
   752  00EE7F  63                 	db	99	;'c'
   753  00EE80  6F                 	db	111	;'o'
   754  00EE81  6D                 	db	109	;'m'
   755  00EE82  6D                 	db	109	;'m'
   756  00EE83  61                 	db	97	;'a'
   757  00EE84  6E                 	db	110	;'n'
   758  00EE85  64                 	db	100	;'d'
   759  00EE86  0D                 	db	13
   760  00EE87  0A                 	db	10
   761  00EE88  20                 	db	32
   762  00EE89  41                 	db	65	;'A'
   763  00EE8A  44                 	db	68	;'D'
   764  00EE8B  43                 	db	67	;'C'
   765  00EE8C  20                 	db	32
   766  00EE8D  66                 	db	102	;'f'
   767  00EE8E  6F                 	db	111	;'o'
   768  00EE8F  6C                 	db	108	;'l'
   769  00EE90  6C                 	db	108	;'l'
   770  00EE91  6F                 	db	111	;'o'
   771  00EE92  77                 	db	119	;'w'
   772  00EE93  65                 	db	101	;'e'
   773  00EE94  64                 	db	100	;'d'
   774  00EE95  20                 	db	32
   775  00EE96  62                 	db	98	;'b'
   776  00EE97  79                 	db	121	;'y'
   777  00EE98  20                 	db	32
   778  00EE99  27                 	db	39
   779  00EE9A  43                 	db	67	;'C'
   780  00EE9B  68                 	db	104	;'h'
   781  00EE9C  61                 	db	97	;'a'
   782  00EE9D  6E                 	db	110	;'n'
   783  00EE9E  6E                 	db	110	;'n'
   784  00EE9F  65                 	db	101	;'e'
   785  00EEA0  6C                 	db	108	;'l'
   786  00EEA1  27                 	db	39
   787  00EEA2  20                 	db	32
   788  00EEA3  0D                 	db	13
   789  00EEA4  0A                 	db	10
   790  00EEA5  00                 	db	0
   791  00EEA6                     STR_245:
   792  00EEA6  54                 	db	84	;'T'
   793  00EEA7  6F                 	db	111	;'o'
   794  00EEA8  20                 	db	32
   795  00EEA9  63                 	db	99	;'c'
   796  00EEAA  6F                 	db	111	;'o'
   797  00EEAB  6D                 	db	109	;'m'
   798  00EEAC  6D                 	db	109	;'m'
   799  00EEAD  61                 	db	97	;'a'
   800  00EEAE  6E                 	db	110	;'n'
   801  00EEAF  64                 	db	100	;'d'
   802  00EEB0  20                 	db	32
   803  00EEB1  74                 	db	116	;'t'
   804  00EEB2  68                 	db	104	;'h'
   805  00EEB3  65                 	db	101	;'e'
   806  00EEB4  20                 	db	32
   807  00EEB5  52                 	db	82	;'R'
   808  00EEB6  54                 	db	84	;'T'
   809  00EEB7  43                 	db	67	;'C'
   810  00EEB8  2C                 	db	44
   811  00EEB9  20                 	db	32
   812  00EEBA  74                 	db	116	;'t'
   813  00EEBB  79                 	db	121	;'y'
   814  00EEBC  70                 	db	112	;'p'
   815  00EEBD  65                 	db	101	;'e'
   816  00EEBE  20                 	db	32
   817  00EEBF  74                 	db	116	;'t'
   818  00EEC0  68                 	db	104	;'h'
   819  00EEC1  65                 	db	101	;'e'
   820  00EEC2  20                 	db	32
   821  00EEC3  61                 	db	97	;'a'
   822  00EEC4  63                 	db	99	;'c'
   823  00EEC5  74                 	db	116	;'t'
   824  00EEC6  69                 	db	105	;'i'
   825  00EEC7  6F                 	db	111	;'o'
   826  00EEC8  6E                 	db	110	;'n'
   827  00EEC9  0D                 	db	13
   828  00EECA  0A                 	db	10
   829  00EECB  20                 	db	32
   830  00EECC  66                 	db	102	;'f'
   831  00EECD  6F                 	db	111	;'o'
   832  00EECE  6C                 	db	108	;'l'
   833  00EECF  6C                 	db	108	;'l'
   834  00EED0  6F                 	db	111	;'o'
   835  00EED1  77                 	db	119	;'w'
   836  00EED2  65                 	db	101	;'e'
   837  00EED3  64                 	db	100	;'d'
   838  00EED4  20                 	db	32
   839  00EED5  62                 	db	98	;'b'
   840  00EED6  79                 	db	121	;'y'
   841  00EED7  20                 	db	32
   842  00EED8  74                 	db	116	;'t'
   843  00EED9  68                 	db	104	;'h'
   844  00EEDA  65                 	db	101	;'e'
   845  00EEDB  20                 	db	32
   846  00EEDC  70                 	db	112	;'p'
   847  00EEDD  61                 	db	97	;'a'
   848  00EEDE  72                 	db	114	;'r'
   849  00EEDF  61                 	db	97	;'a'
   850  00EEE0  6D                 	db	109	;'m'
   851  00EEE1  65                 	db	101	;'e'
   852  00EEE2  74                 	db	116	;'t'
   853  00EEE3  65                 	db	101	;'e'
   854  00EEE4  72                 	db	114	;'r'
   855  00EEE5  73                 	db	115	;'s'
   856  00EEE6  20                 	db	32
   857  00EEE7  0D                 	db	13
   858  00EEE8  0A                 	db	10
   859  00EEE9  0A                 	db	10
   860  00EEEA  00                 	db	0
   861  00EEEB                     STR_64:
   862  00EEEB  54                 	db	84	;'T'
   863  00EEEC  6F                 	db	111	;'o'
   864  00EEED  20                 	db	32
   865  00EEEE  63                 	db	99	;'c'
   866  00EEEF  6F                 	db	111	;'o'
   867  00EEF0  6E                 	db	110	;'n'
   868  00EEF1  74                 	db	116	;'t'
   869  00EEF2  72                 	db	114	;'r'
   870  00EEF3  6F                 	db	111	;'o'
   871  00EEF4  6C                 	db	108	;'l'
   872  00EEF5  20                 	db	32
   873  00EEF6  61                 	db	97	;'a'
   874  00EEF7  20                 	db	32
   875  00EEF8  64                 	db	100	;'d'
   876  00EEF9  65                 	db	101	;'e'
   877  00EEFA  76                 	db	118	;'v'
   878  00EEFB  69                 	db	105	;'i'
   879  00EEFC  63                 	db	99	;'c'
   880  00EEFD  65                 	db	101	;'e'
   881  00EEFE  20                 	db	32
   882  00EEFF  65                 	db	101	;'e'
   883  00EF00  6E                 	db	110	;'n'
   884  00EF01  74                 	db	116	;'t'
   885  00EF02  65                 	db	101	;'e'
   886  00EF03  72                 	db	114	;'r'
   887  00EF04  20                 	db	32
   888  00EF05  74                 	db	116	;'t'
   889  00EF06  68                 	db	104	;'h'
   890  00EF07  65                 	db	101	;'e'
   891  00EF08  20                 	db	32
   892  00EF09  64                 	db	100	;'d'
   893  00EF0A  65                 	db	101	;'e'
   894  00EF0B  76                 	db	118	;'v'
   895  00EF0C  69                 	db	105	;'i'
   896  00EF0D  63                 	db	99	;'c'
   897  00EF0E  65                 	db	101	;'e'
   898  00EF0F  20                 	db	32
   899  00EF10  66                 	db	102	;'f'
   900  00EF11  6F                 	db	111	;'o'
   901  00EF12  6C                 	db	108	;'l'
   902  00EF13  6C                 	db	108	;'l'
   903  00EF14  6F                 	db	111	;'o'
   904  00EF15  77                 	db	119	;'w'
   905  00EF16  65                 	db	101	;'e'
   906  00EF17  64                 	db	100	;'d'
   907  00EF18  20                 	db	32
   908  00EF19  62                 	db	98	;'b'
   909  00EF1A  79                 	db	121	;'y'
   910  00EF1B  20                 	db	32
   911  00EF1C  27                 	db	39
   912  00EF1D  3D                 	db	61	;'='
   913  00EF1E  27                 	db	39
   914  00EF1F  20                 	db	32
   915  00EF20  61                 	db	97	;'a'
   916  00EF21  6E                 	db	110	;'n'
   917  00EF22  64                 	db	100	;'d'
   918  00EF23  20                 	db	32
   919  00EF24  27                 	db	39
   920  00EF25  4F                 	db	79	;'O'
   921  00EF26  6E                 	db	110	;'n'
   922  00EF27  2F                 	db	47
   923  00EF28  4F                 	db	79	;'O'
   924  00EF29  66                 	db	102	;'f'
   925  00EF2A  66                 	db	102	;'f'
   926  00EF2B  27                 	db	39
   927  00EF2C  0D                 	db	13
   928  00EF2D  0A                 	db	10
   929  00EF2E  00                 	db	0
   930  00EF2F                     STR_175:
   931  00EF2F  54                 	db	84	;'T'
   932  00EF30  6F                 	db	111	;'o'
   933  00EF31  20                 	db	32
   934  00EF32  73                 	db	115	;'s'
   935  00EF33  65                 	db	101	;'e'
   936  00EF34  74                 	db	116	;'t'
   937  00EF35  20                 	db	32
   938  00EF36  74                 	db	116	;'t'
   939  00EF37  65                 	db	101	;'e'
   940  00EF38  20                 	db	32
   941  00EF39  50                 	db	80	;'P'
   942  00EF3A  57                 	db	87	;'W'
   943  00EF3B  4D                 	db	77	;'M'
   944  00EF3C  20                 	db	32
   945  00EF3D  62                 	db	98	;'b'
   946  00EF3E  72                 	db	114	;'r'
   947  00EF3F  69                 	db	105	;'i'
   948  00EF40  67                 	db	103	;'g'
   949  00EF41  68                 	db	104	;'h'
   950  00EF42  74                 	db	116	;'t'
   951  00EF43  6E                 	db	110	;'n'
   952  00EF44  65                 	db	101	;'e'
   953  00EF45  73                 	db	115	;'s'
   954  00EF46  73                 	db	115	;'s'
   955  00EF47  20                 	db	32
   956  00EF48  65                 	db	101	;'e'
   957  00EF49  6E                 	db	110	;'n'
   958  00EF4A  74                 	db	116	;'t'
   959  00EF4B  65                 	db	101	;'e'
   960  00EF4C  72                 	db	114	;'r'
   961  00EF4D  20                 	db	32
   962  00EF4E  27                 	db	39
   963  00EF4F  52                 	db	82	;'R'
   964  00EF50  65                 	db	101	;'e'
   965  00EF51  64                 	db	100	;'d'
   966  00EF52  20                 	db	32
   967  00EF53  4C                 	db	76	;'L'
   968  00EF54  45                 	db	69	;'E'
   969  00EF55  44                 	db	68	;'D'
   970  00EF56  20                 	db	32
   971  00EF57  62                 	db	98	;'b'
   972  00EF58  72                 	db	114	;'r'
   973  00EF59  69                 	db	105	;'i'
   974  00EF5A  67                 	db	103	;'g'
   975  00EF5B  68                 	db	104	;'h'
   976  00EF5C  74                 	db	116	;'t'
   977  00EF5D  6E                 	db	110	;'n'
   978  00EF5E  65                 	db	101	;'e'
   979  00EF5F  73                 	db	115	;'s'
   980  00EF60  73                 	db	115	;'s'
   981  00EF61  20                 	db	32
   982  00EF62  3D                 	db	61	;'='
   983  00EF63  20                 	db	32
   984  00EF64  64                 	db	100	;'d'
   985  00EF65  75                 	db	117	;'u'
   986  00EF66  74                 	db	116	;'t'
   987  00EF67  79                 	db	121	;'y'
   988  00EF68  63                 	db	99	;'c'
   989  00EF69  79                 	db	121	;'y'
   990  00EF6A  63                 	db	99	;'c'
   991  00EF6B  6C                 	db	108	;'l'
   992  00EF6C  65                 	db	101	;'e'
   993  00EF6D  27                 	db	39
   994  00EF6E  0D                 	db	13
   995  00EF6F  0A                 	db	10
   996  00EF70  00                 	db	0
   997  00EF71                     STR_192:
   998  00EF71  54                 	db	84	;'T'
   999  00EF72  6F                 	db	111	;'o'
  1000  00EF73  20                 	db	32
  1001  00EF74  73                 	db	115	;'s'
  1002  00EF75  65                 	db	101	;'e'
  1003  00EF76  74                 	db	116	;'t'
  1004  00EF77  20                 	db	32
  1005  00EF78  43                 	db	67	;'C'
  1006  00EF79  6F                 	db	111	;'o'
  1007  00EF7A  6E                 	db	110	;'n'
  1008  00EF7B  74                 	db	116	;'t'
  1009  00EF7C  72                 	db	114	;'r'
  1010  00EF7D  61                 	db	97	;'a'
  1011  00EF7E  73                 	db	115	;'s'
  1012  00EF7F  74                 	db	116	;'t'
  1013  00EF80  20                 	db	32
  1014  00EF81  50                 	db	80	;'P'
  1015  00EF82  57                 	db	87	;'W'
  1016  00EF83  4D                 	db	77	;'M'
  1017  00EF84  20                 	db	32
  1018  00EF85  62                 	db	98	;'b'
  1019  00EF86  72                 	db	114	;'r'
  1020  00EF87  69                 	db	105	;'i'
  1021  00EF88  67                 	db	103	;'g'
  1022  00EF89  68                 	db	104	;'h'
  1023  00EF8A  74                 	db	116	;'t'
  1024  00EF8B  6E                 	db	110	;'n'
  1025  00EF8C  65                 	db	101	;'e'
  1026  00EF8D  73                 	db	115	;'s'
  1027  00EF8E  73                 	db	115	;'s'
  1028  00EF8F  20                 	db	32
  1029  00EF90  65                 	db	101	;'e'
  1030  00EF91  6E                 	db	110	;'n'
  1031  00EF92  74                 	db	116	;'t'
  1032  00EF93  65                 	db	101	;'e'
  1033  00EF94  72                 	db	114	;'r'
  1034  00EF95  20                 	db	32
  1035  00EF96  27                 	db	39
  1036  00EF97  43                 	db	67	;'C'
  1037  00EF98  6F                 	db	111	;'o'
  1038  00EF99  6E                 	db	110	;'n'
  1039  00EF9A  74                 	db	116	;'t'
  1040  00EF9B  72                 	db	114	;'r'
  1041  00EF9C  61                 	db	97	;'a'
  1042  00EF9D  73                 	db	115	;'s'
  1043  00EF9E  74                 	db	116	;'t'
  1044  00EF9F  20                 	db	32
  1045  00EFA0  3D                 	db	61	;'='
  1046  00EFA1  20                 	db	32
  1047  00EFA2  64                 	db	100	;'d'
  1048  00EFA3  75                 	db	117	;'u'
  1049  00EFA4  74                 	db	116	;'t'
  1050  00EFA5  79                 	db	121	;'y'
  1051  00EFA6  63                 	db	99	;'c'
  1052  00EFA7  79                 	db	121	;'y'
  1053  00EFA8  63                 	db	99	;'c'
  1054  00EFA9  6C                 	db	108	;'l'
  1055  00EFAA  65                 	db	101	;'e'
  1056  00EFAB  27                 	db	39
  1057  00EFAC  0D                 	db	13
  1058  00EFAD  0A                 	db	10
  1059  00EFAE  00                 	db	0
  1060  00EFAF                     STR_246:
  1061  00EFAF  66                 	db	102	;'f'
  1062  00EFB0  75                 	db	117	;'u'
  1063  00EFB1  72                 	db	114	;'r'
  1064  00EFB2  74                 	db	116	;'t'
  1065  00EFB3  68                 	db	104	;'h'
  1066  00EFB4  65                 	db	101	;'e'
  1067  00EFB5  72                 	db	114	;'r'
  1068  00EFB6  20                 	db	32
  1069  00EFB7  73                 	db	115	;'s'
  1070  00EFB8  75                 	db	117	;'u'
  1071  00EFB9  62                 	db	98	;'b'
  1072  00EFBA  20                 	db	32
  1073  00EFBB  6D                 	db	109	;'m'
  1074  00EFBC  65                 	db	101	;'e'
  1075  00EFBD  6E                 	db	110	;'n'
  1076  00EFBE  75                 	db	117	;'u'
  1077  00EFBF  73                 	db	115	;'s'
  1078  00EFC0  20                 	db	32
  1079  00EFC1  61                 	db	97	;'a'
  1080  00EFC2  76                 	db	118	;'v'
  1081  00EFC3  61                 	db	97	;'a'
  1082  00EFC4  69                 	db	105	;'i'
  1083  00EFC5  6C                 	db	108	;'l'
  1084  00EFC6  61                 	db	97	;'a'
  1085  00EFC7  62                 	db	98	;'b'
  1086  00EFC8  6C                 	db	108	;'l'
  1087  00EFC9  65                 	db	101	;'e'
  1088  00EFCA  20                 	db	32
  1089  00EFCB  62                 	db	98	;'b'
  1090  00EFCC  79                 	db	121	;'y'
  1091  00EFCD  20                 	db	32
  1092  00EFCE  65                 	db	101	;'e'
  1093  00EFCF  6E                 	db	110	;'n'
  1094  00EFD0  74                 	db	116	;'t'
  1095  00EFD1  65                 	db	101	;'e'
  1096  00EFD2  72                 	db	114	;'r'
  1097  00EFD3  69                 	db	105	;'i'
  1098  00EFD4  6E                 	db	110	;'n'
  1099  00EFD5  67                 	db	103	;'g'
  1100  00EFD6  20                 	db	32
  1101  00EFD7  74                 	db	116	;'t'
  1102  00EFD8  68                 	db	104	;'h'
  1103  00EFD9  65                 	db	101	;'e'
  1104  00EFDA  20                 	db	32
  1105  00EFDB  61                 	db	97	;'a'
  1106  00EFDC  63                 	db	99	;'c'
  1107  00EFDD  74                 	db	116	;'t'
  1108  00EFDE  69                 	db	105	;'i'
  1109  00EFDF  6F                 	db	111	;'o'
  1110  00EFE0  6E                 	db	110	;'n'
  1111  00EFE1  20                 	db	32
  1112  00EFE2  61                 	db	97	;'a'
  1113  00EFE3  6E                 	db	110	;'n'
  1114  00EFE4  64                 	db	100	;'d'
  1115  00EFE5  20                 	db	32
  1116  00EFE6  61                 	db	97	;'a'
  1117  00EFE7  20                 	db	32
  1118  00EFE8  27                 	db	39
  1119  00EFE9  3F                 	db	63	;'?'
  1120  00EFEA  27                 	db	39
  1121  00EFEB  00                 	db	0
  1122  00EFEC                     STR_24:
  1123  00EFEC  53                 	db	83	;'S'
  1124  00EFED  79                 	db	121	;'y'
  1125  00EFEE  73                 	db	115	;'s'
  1126  00EFEF  74                 	db	116	;'t'
  1127  00EFF0  65                 	db	101	;'e'
  1128  00EFF1  6D                 	db	109	;'m'
  1129  00EFF2  20                 	db	32
  1130  00EFF3  42                 	db	66	;'B'
  1131  00EFF4  61                 	db	97	;'a'
  1132  00EFF5  75                 	db	117	;'u'
  1133  00EFF6  64                 	db	100	;'d'
  1134  00EFF7  20                 	db	32
  1135  00EFF8  77                 	db	119	;'w'
  1136  00EFF9  69                 	db	105	;'i'
  1137  00EFFA  6C                 	db	108	;'l'
  1138  00EFFB  6C                 	db	108	;'l'
  1139  00EFFC  20                 	db	32
  1140  00EFFD  62                 	db	98	;'b'
  1141  00EFFE  65                 	db	101	;'e'
  1142  00EFFF  20                 	db	32
  1143  00F000  73                 	db	115	;'s'
  1144  00F001  65                 	db	101	;'e'
  1145  00F002  74                 	db	116	;'t'
  1146  00F003  20                 	db	32
  1147  00F004  74                 	db	116	;'t'
  1148  00F005  6F                 	db	111	;'o'
  1149  00F006  20                 	db	32
  1150  00F007  25                 	db	37
  1151  00F008  6C                 	db	108	;'l'
  1152  00F009  75                 	db	117	;'u'
  1153  00F00A  20                 	db	32
  1154  00F00B  77                 	db	119	;'w'
  1155  00F00C  69                 	db	105	;'i'
  1156  00F00D  74                 	db	116	;'t'
  1157  00F00E  68                 	db	104	;'h'
  1158  00F00F  20                 	db	32
  1159  00F010  45                 	db	69	;'E'
  1160  00F011  76                 	db	118	;'v'
  1161  00F012  65                 	db	101	;'e'
  1162  00F013  6E                 	db	110	;'n'
  1163  00F014  20                 	db	32
  1164  00F015  70                 	db	112	;'p'
  1165  00F016  61                 	db	97	;'a'
  1166  00F017  72                 	db	114	;'r'
  1167  00F018  69                 	db	105	;'i'
  1168  00F019  74                 	db	116	;'t'
  1169  00F01A  79                 	db	121	;'y'
  1170  00F01B  20                 	db	32
  1171  00F01C  62                 	db	98	;'b'
  1172  00F01D  69                 	db	105	;'i'
  1173  00F01E  74                 	db	116	;'t'
  1174  00F01F  0D                 	db	13
  1175  00F020  0A                 	db	10
  1176  00F021  00                 	db	0
  1177  00F022                     STR_8:
  1178  00F022  45                 	db	69	;'E'
  1179  00F023  72                 	db	114	;'r'
  1180  00F024  72                 	db	114	;'r'
  1181  00F025  6F                 	db	111	;'o'
  1182  00F026  72                 	db	114	;'r'
  1183  00F027  3A                 	db	58	;':'
  1184  00F028  20                 	db	32
  1185  00F029  43                 	db	67	;'C'
  1186  00F02A  6F                 	db	111	;'o'
  1187  00F02B  75                 	db	117	;'u'
  1188  00F02C  6C                 	db	108	;'l'
  1189  00F02D  64                 	db	100	;'d'
  1190  00F02E  20                 	db	32
  1191  00F02F  6E                 	db	110	;'n'
  1192  00F030  6F                 	db	111	;'o'
  1193  00F031  74                 	db	116	;'t'
  1194  00F032  20                 	db	32
  1195  00F033  62                 	db	98	;'b'
  1196  00F034  75                 	db	117	;'u'
  1197  00F035  72                 	db	114	;'r'
  1198  00F036  6E                 	db	110	;'n'
  1199  00F037  20                 	db	32
  1200  00F038  64                 	db	100	;'d'
  1201  00F039  65                 	db	101	;'e'
  1202  00F03A  66                 	db	102	;'f'
  1203  00F03B  61                 	db	97	;'a'
  1204  00F03C  75                 	db	117	;'u'
  1205  00F03D  6C                 	db	108	;'l'
  1206  00F03E  74                 	db	116	;'t'
  1207  00F03F  20                 	db	32
  1208  00F040  42                 	db	66	;'B'
  1209  00F041  61                 	db	97	;'a'
  1210  00F042  75                 	db	117	;'u'
  1211  00F043  64                 	db	100	;'d'
  1212  00F044  20                 	db	32
  1213  00F045  72                 	db	114	;'r'
  1214  00F046  61                 	db	97	;'a'
  1215  00F047  74                 	db	116	;'t'
  1216  00F048  65                 	db	101	;'e'
  1217  00F049  20                 	db	32
  1218  00F04A  69                 	db	105	;'i'
  1219  00F04B  6E                 	db	110	;'n'
  1220  00F04C  74                 	db	116	;'t'
  1221  00F04D  6F                 	db	111	;'o'
  1222  00F04E  20                 	db	32
  1223  00F04F  4D                 	db	77	;'M'
  1224  00F050  65                 	db	101	;'e'
  1225  00F051  6D                 	db	109	;'m'
  1226  00F052  6F                 	db	111	;'o'
  1227  00F053  72                 	db	114	;'r'
  1228  00F054  79                 	db	121	;'y'
  1229  00F055  0D                 	db	13
  1230  00F056  0A                 	db	10
  1231  00F057  00                 	db	0
  1232  00F058                     STR_23:
  1233  00F058  53                 	db	83	;'S'
  1234  00F059  79                 	db	121	;'y'
  1235  00F05A  73                 	db	115	;'s'
  1236  00F05B  74                 	db	116	;'t'
  1237  00F05C  65                 	db	101	;'e'
  1238  00F05D  6D                 	db	109	;'m'
  1239  00F05E  20                 	db	32
  1240  00F05F  42                 	db	66	;'B'
  1241  00F060  61                 	db	97	;'a'
  1242  00F061  75                 	db	117	;'u'
  1243  00F062  64                 	db	100	;'d'
  1244  00F063  20                 	db	32
  1245  00F064  77                 	db	119	;'w'
  1246  00F065  69                 	db	105	;'i'
  1247  00F066  6C                 	db	108	;'l'
  1248  00F067  6C                 	db	108	;'l'
  1249  00F068  20                 	db	32
  1250  00F069  62                 	db	98	;'b'
  1251  00F06A  65                 	db	101	;'e'
  1252  00F06B  20                 	db	32
  1253  00F06C  73                 	db	115	;'s'
  1254  00F06D  65                 	db	101	;'e'
  1255  00F06E  74                 	db	116	;'t'
  1256  00F06F  20                 	db	32
  1257  00F070  74                 	db	116	;'t'
  1258  00F071  6F                 	db	111	;'o'
  1259  00F072  20                 	db	32
  1260  00F073  25                 	db	37
  1261  00F074  6C                 	db	108	;'l'
  1262  00F075  75                 	db	117	;'u'
  1263  00F076  20                 	db	32
  1264  00F077  77                 	db	119	;'w'
  1265  00F078  69                 	db	105	;'i'
  1266  00F079  74                 	db	116	;'t'
  1267  00F07A  68                 	db	104	;'h'
  1268  00F07B  20                 	db	32
  1269  00F07C  4F                 	db	79	;'O'
  1270  00F07D  64                 	db	100	;'d'
  1271  00F07E  64                 	db	100	;'d'
  1272  00F07F  20                 	db	32
  1273  00F080  70                 	db	112	;'p'
  1274  00F081  61                 	db	97	;'a'
  1275  00F082  72                 	db	114	;'r'
  1276  00F083  69                 	db	105	;'i'
  1277  00F084  74                 	db	116	;'t'
  1278  00F085  79                 	db	121	;'y'
  1279  00F086  20                 	db	32
  1280  00F087  62                 	db	98	;'b'
  1281  00F088  69                 	db	105	;'i'
  1282  00F089  74                 	db	116	;'t'
  1283  00F08A  0D                 	db	13
  1284  00F08B  0A                 	db	10
  1285  00F08C  00                 	db	0
  1286  00F08D                     STR_27:
  1287  00F08D  53                 	db	83	;'S'
  1288  00F08E  79                 	db	121	;'y'
  1289  00F08F  73                 	db	115	;'s'
  1290  00F090  74                 	db	116	;'t'
  1291  00F091  65                 	db	101	;'e'
  1292  00F092  6D                 	db	109	;'m'
  1293  00F093  20                 	db	32
  1294  00F094  42                 	db	66	;'B'
  1295  00F095  61                 	db	97	;'a'
  1296  00F096  75                 	db	117	;'u'
  1297  00F097  64                 	db	100	;'d'
  1298  00F098  20                 	db	32
  1299  00F099  77                 	db	119	;'w'
  1300  00F09A  69                 	db	105	;'i'
  1301  00F09B  6C                 	db	108	;'l'
  1302  00F09C  6C                 	db	108	;'l'
  1303  00F09D  20                 	db	32
  1304  00F09E  62                 	db	98	;'b'
  1305  00F09F  65                 	db	101	;'e'
  1306  00F0A0  20                 	db	32
  1307  00F0A1  73                 	db	115	;'s'
  1308  00F0A2  65                 	db	101	;'e'
  1309  00F0A3  74                 	db	116	;'t'
  1310  00F0A4  20                 	db	32
  1311  00F0A5  74                 	db	116	;'t'
  1312  00F0A6  6F                 	db	111	;'o'
  1313  00F0A7  20                 	db	32
  1314  00F0A8  25                 	db	37
  1315  00F0A9  6C                 	db	108	;'l'
  1316  00F0AA  75                 	db	117	;'u'
  1317  00F0AB  20                 	db	32
  1318  00F0AC  77                 	db	119	;'w'
  1319  00F0AD  69                 	db	105	;'i'
  1320  00F0AE  74                 	db	116	;'t'
  1321  00F0AF  68                 	db	104	;'h'
  1322  00F0B0  20                 	db	32
  1323  00F0B1  6E                 	db	110	;'n'
  1324  00F0B2  6F                 	db	111	;'o'
  1325  00F0B3  20                 	db	32
  1326  00F0B4  70                 	db	112	;'p'
  1327  00F0B5  61                 	db	97	;'a'
  1328  00F0B6  72                 	db	114	;'r'
  1329  00F0B7  69                 	db	105	;'i'
  1330  00F0B8  74                 	db	116	;'t'
  1331  00F0B9  79                 	db	121	;'y'
  1332  00F0BA  20                 	db	32
  1333  00F0BB  62                 	db	98	;'b'
  1334  00F0BC  69                 	db	105	;'i'
  1335  00F0BD  74                 	db	116	;'t'
  1336  00F0BE  0D                 	db	13
  1337  00F0BF  0A                 	db	10
  1338  00F0C0  00                 	db	0
  1339  00F0C1                     STR_281:
  1340  00F0C1  46                 	db	70	;'F'
  1341  00F0C2  6F                 	db	111	;'o'
  1342  00F0C3  72                 	db	114	;'r'
  1343  00F0C4  20                 	db	32
  1344  00F0C5  44                 	db	68	;'D'
  1345  00F0C6  65                 	db	101	;'e'
  1346  00F0C7  76                 	db	118	;'v'
  1347  00F0C8  69                 	db	105	;'i'
  1348  00F0C9  63                 	db	99	;'c'
  1349  00F0CA  65                 	db	101	;'e'
  1350  00F0CB  20                 	db	32
  1351  00F0CC  68                 	db	104	;'h'
  1352  00F0CD  65                 	db	101	;'e'
  1353  00F0CE  6C                 	db	108	;'l'
  1354  00F0CF  70                 	db	112	;'p'
  1355  00F0D0  20                 	db	32
  1356  00F0D1  65                 	db	101	;'e'
  1357  00F0D2  6E                 	db	110	;'n'
  1358  00F0D3  74                 	db	116	;'t'
  1359  00F0D4  65                 	db	101	;'e'
  1360  00F0D5  72                 	db	114	;'r'
  1361  00F0D6  20                 	db	32
  1362  00F0D7  64                 	db	100	;'d'
  1363  00F0D8  65                 	db	101	;'e'
  1364  00F0D9  76                 	db	118	;'v'
  1365  00F0DA  69                 	db	105	;'i'
  1366  00F0DB  63                 	db	99	;'c'
  1367  00F0DC  65                 	db	101	;'e'
  1368  00F0DD  20                 	db	32
  1369  00F0DE  66                 	db	102	;'f'
  1370  00F0DF  6F                 	db	111	;'o'
  1371  00F0E0  6C                 	db	108	;'l'
  1372  00F0E1  6C                 	db	108	;'l'
  1373  00F0E2  6F                 	db	111	;'o'
  1374  00F0E3  77                 	db	119	;'w'
  1375  00F0E4  65                 	db	101	;'e'
  1376  00F0E5  64                 	db	100	;'d'
  1377  00F0E6  20                 	db	32
  1378  00F0E7  62                 	db	98	;'b'
  1379  00F0E8  79                 	db	121	;'y'
  1380  00F0E9  20                 	db	32
  1381  00F0EA  61                 	db	97	;'a'
  1382  00F0EB  20                 	db	32
  1383  00F0EC  27                 	db	39
  1384  00F0ED  3F                 	db	63	;'?'
  1385  00F0EE  27                 	db	39
  1386  00F0EF  20                 	db	32
  1387  00F0F0  0D                 	db	13
  1388  00F0F1  0A                 	db	10
  1389  00F0F2  00                 	db	0
  1390  00F0F3                     STR_172:
  1391  00F0F3  72                 	db	114	;'r'
  1392  00F0F4  65                 	db	101	;'e'
  1393  00F0F5  64                 	db	100	;'d'
  1394  00F0F6  6C                 	db	108	;'l'
  1395  00F0F7  65                 	db	101	;'e'
  1396  00F0F8  64                 	db	100	;'d'
  1397  00F0F9  20                 	db	32
  1398  00F0FA  77                 	db	119	;'w'
  1399  00F0FB  68                 	db	104	;'h'
  1400  00F0FC  61                 	db	97	;'a'
  1401  00F0FD  74                 	db	116	;'t'
  1402  00F0FE  3F                 	db	63	;'?'
  1403  00F0FF  3F                 	db	63	;'?'
  1404  00F100  3F                 	db	63	;'?'
  1405  00F101  20                 	db	32
  1406  00F102  44                 	db	68	;'D'
  1407  00F103  6F                 	db	111	;'o'
  1408  00F104  20                 	db	32
  1409  00F105  79                 	db	121	;'y'
  1410  00F106  6F                 	db	111	;'o'
  1411  00F107  75                 	db	117	;'u'
  1412  00F108  20                 	db	32
  1413  00F109  6D                 	db	109	;'m'
  1414  00F10A  65                 	db	101	;'e'
  1415  00F10B  61                 	db	97	;'a'
  1416  00F10C  6E                 	db	110	;'n'
  1417  00F10D  20                 	db	32
  1418  00F10E  52                 	db	82	;'R'
  1419  00F10F  65                 	db	101	;'e'
  1420  00F110  64                 	db	100	;'d'
  1421  00F111  20                 	db	32
  1422  00F112  4C                 	db	76	;'L'
  1423  00F113  65                 	db	101	;'e'
  1424  00F114  64                 	db	100	;'d'
  1425  00F115  20                 	db	32
  1426  00F116  42                 	db	66	;'B'
  1427  00F117  72                 	db	114	;'r'
  1428  00F118  69                 	db	105	;'i'
  1429  00F119  67                 	db	103	;'g'
  1430  00F11A  68                 	db	104	;'h'
  1431  00F11B  74                 	db	116	;'t'
  1432  00F11C  6E                 	db	110	;'n'
  1433  00F11D  65                 	db	101	;'e'
  1434  00F11E  73                 	db	115	;'s'
  1435  00F11F  73                 	db	115	;'s'
  1436  00F120  3F                 	db	63	;'?'
  1437  00F121  3F                 	db	63	;'?'
  1438  00F122  3F                 	db	63	;'?'
  1439  00F123  00                 	db	0
  1440  00F124                     STR_185:
  1441  00F124  49                 	db	73	;'I'
  1442  00F125  6E                 	db	110	;'n'
  1443  00F126  76                 	db	118	;'v'
  1444  00F127  61                 	db	97	;'a'
  1445  00F128  6C                 	db	108	;'l'
  1446  00F129  69                 	db	105	;'i'
  1447  00F12A  64                 	db	100	;'d'
  1448  00F12B  20                 	db	32
  1449  00F12C  43                 	db	67	;'C'
  1450  00F12D  6F                 	db	111	;'o'
  1451  00F12E  6E                 	db	110	;'n'
  1452  00F12F  74                 	db	116	;'t'
  1453  00F130  72                 	db	114	;'r'
  1454  00F131  61                 	db	97	;'a'
  1455  00F132  73                 	db	115	;'s'
  1456  00F133  74                 	db	116	;'t'
  1457  00F134  20                 	db	32
  1458  00F135  44                 	db	68	;'D'
  1459  00F136  75                 	db	117	;'u'
  1460  00F137  74                 	db	116	;'t'
  1461  00F138  79                 	db	121	;'y'
  1462  00F139  20                 	db	32
  1463  00F13A  63                 	db	99	;'c'
  1464  00F13B  79                 	db	121	;'y'
  1465  00F13C  63                 	db	99	;'c'
  1466  00F13D  6C                 	db	108	;'l'
  1467  00F13E  65                 	db	101	;'e'
  1468  00F13F  3A                 	db	58	;':'
  1469  00F140  20                 	db	32
  1470  00F141  47                 	db	71	;'G'
  1471  00F142  72                 	db	114	;'r'
  1472  00F143  65                 	db	101	;'e'
  1473  00F144  61                 	db	97	;'a'
  1474  00F145  74                 	db	116	;'t'
  1475  00F146  65                 	db	101	;'e'
  1476  00F147  72                 	db	114	;'r'
  1477  00F148  20                 	db	32
  1478  00F149  74                 	db	116	;'t'
  1479  00F14A  68                 	db	104	;'h'
  1480  00F14B  61                 	db	97	;'a'
  1481  00F14C  6E                 	db	110	;'n'
  1482  00F14D  20                 	db	32
  1483  00F14E  31                 	db	49	;'1'
  1484  00F14F  30                 	db	48	;'0'
  1485  00F150  30                 	db	48	;'0'
  1486  00F151  0D                 	db	13
  1487  00F152  0A                 	db	10
  1488  00F153  00                 	db	0
  1489  00F154                     STR_26:
  1490  00F154  53                 	db	83	;'S'
  1491  00F155  79                 	db	121	;'y'
  1492  00F156  73                 	db	115	;'s'
  1493  00F157  74                 	db	116	;'t'
  1494  00F158  65                 	db	101	;'e'
  1495  00F159  6D                 	db	109	;'m'
  1496  00F15A  20                 	db	32
  1497  00F15B  42                 	db	66	;'B'
  1498  00F15C  61                 	db	97	;'a'
  1499  00F15D  75                 	db	117	;'u'
  1500  00F15E  64                 	db	100	;'d'
  1501  00F15F  20                 	db	32
  1502  00F160  77                 	db	119	;'w'
  1503  00F161  69                 	db	105	;'i'
  1504  00F162  6C                 	db	108	;'l'
  1505  00F163  6C                 	db	108	;'l'
  1506  00F164  20                 	db	32
  1507  00F165  62                 	db	98	;'b'
  1508  00F166  65                 	db	101	;'e'
  1509  00F167  20                 	db	32
  1510  00F168  73                 	db	115	;'s'
  1511  00F169  65                 	db	101	;'e'
  1512  00F16A  74                 	db	116	;'t'
  1513  00F16B  20                 	db	32
  1514  00F16C  74                 	db	116	;'t'
  1515  00F16D  6F                 	db	111	;'o'
  1516  00F16E  20                 	db	32
  1517  00F16F  25                 	db	37
  1518  00F170  6C                 	db	108	;'l'
  1519  00F171  75                 	db	117	;'u'
  1520  00F172  20                 	db	32
  1521  00F173  77                 	db	119	;'w'
  1522  00F174  69                 	db	105	;'i'
  1523  00F175  74                 	db	116	;'t'
  1524  00F176  68                 	db	104	;'h'
  1525  00F177  20                 	db	32
  1526  00F178  53                 	db	83	;'S'
  1527  00F179  70                 	db	112	;'p'
  1528  00F17A  61                 	db	97	;'a'
  1529  00F17B  63                 	db	99	;'c'
  1530  00F17C  65                 	db	101	;'e'
  1531  00F17D  20                 	db	32
  1532  00F17E  62                 	db	98	;'b'
  1533  00F17F  69                 	db	105	;'i'
  1534  00F180  74                 	db	116	;'t'
  1535  00F181  0D                 	db	13
  1536  00F182  0A                 	db	10
  1537  00F183  00                 	db	0
  1538  00F184                     STR_25:
  1539  00F184  53                 	db	83	;'S'
  1540  00F185  79                 	db	121	;'y'
  1541  00F186  73                 	db	115	;'s'
  1542  00F187  74                 	db	116	;'t'
  1543  00F188  65                 	db	101	;'e'
  1544  00F189  6D                 	db	109	;'m'
  1545  00F18A  20                 	db	32
  1546  00F18B  42                 	db	66	;'B'
  1547  00F18C  61                 	db	97	;'a'
  1548  00F18D  75                 	db	117	;'u'
  1549  00F18E  64                 	db	100	;'d'
  1550  00F18F  20                 	db	32
  1551  00F190  77                 	db	119	;'w'
  1552  00F191  69                 	db	105	;'i'
  1553  00F192  6C                 	db	108	;'l'
  1554  00F193  6C                 	db	108	;'l'
  1555  00F194  20                 	db	32
  1556  00F195  62                 	db	98	;'b'
  1557  00F196  65                 	db	101	;'e'
  1558  00F197  20                 	db	32
  1559  00F198  73                 	db	115	;'s'
  1560  00F199  65                 	db	101	;'e'
  1561  00F19A  74                 	db	116	;'t'
  1562  00F19B  20                 	db	32
  1563  00F19C  74                 	db	116	;'t'
  1564  00F19D  6F                 	db	111	;'o'
  1565  00F19E  20                 	db	32
  1566  00F19F  25                 	db	37
  1567  00F1A0  6C                 	db	108	;'l'
  1568  00F1A1  75                 	db	117	;'u'
  1569  00F1A2  20                 	db	32
  1570  00F1A3  77                 	db	119	;'w'
  1571  00F1A4  69                 	db	105	;'i'
  1572  00F1A5  74                 	db	116	;'t'
  1573  00F1A6  68                 	db	104	;'h'
  1574  00F1A7  20                 	db	32
  1575  00F1A8  4D                 	db	77	;'M'
  1576  00F1A9  61                 	db	97	;'a'
  1577  00F1AA  72                 	db	114	;'r'
  1578  00F1AB  6B                 	db	107	;'k'
  1579  00F1AC  20                 	db	32
  1580  00F1AD  62                 	db	98	;'b'
  1581  00F1AE  69                 	db	105	;'i'
  1582  00F1AF  74                 	db	116	;'t'
  1583  00F1B0  0D                 	db	13
  1584  00F1B1  0A                 	db	10
  1585  00F1B2  00                 	db	0
  1586  00F1B3                     STR_324:
  1587  00F1B3  45                 	db	69	;'E'
  1588  00F1B4  72                 	db	114	;'r'
  1589  00F1B5  72                 	db	114	;'r'
  1590  00F1B6  6F                 	db	111	;'o'
  1591  00F1B7  72                 	db	114	;'r'
  1592  00F1B8  3A                 	db	58	;':'
  1593  00F1B9  20                 	db	32
  1594  00F1BA  43                 	db	67	;'C'
  1595  00F1BB  6F                 	db	111	;'o'
  1596  00F1BC  75                 	db	117	;'u'
  1597  00F1BD  6C                 	db	108	;'l'
  1598  00F1BE  64                 	db	100	;'d'
  1599  00F1BF  20                 	db	32
  1600  00F1C0  6E                 	db	110	;'n'
  1601  00F1C1  6F                 	db	111	;'o'
  1602  00F1C2  74                 	db	116	;'t'
  1603  00F1C3  20                 	db	32
  1604  00F1C4  62                 	db	98	;'b'
  1605  00F1C5  75                 	db	117	;'u'
  1606  00F1C6  72                 	db	114	;'r'
  1607  00F1C7  6E                 	db	110	;'n'
  1608  00F1C8  20                 	db	32
  1609  00F1C9  49                 	db	73	;'I'
  1610  00F1CA  52                 	db	82	;'R'
  1611  00F1CB  20                 	db	32
  1612  00F1CC  43                 	db	67	;'C'
  1613  00F1CD  6F                 	db	111	;'o'
  1614  00F1CE  64                 	db	100	;'d'
  1615  00F1CF  65                 	db	101	;'e'
  1616  00F1D0  20                 	db	32
  1617  00F1D1  69                 	db	105	;'i'
  1618  00F1D2  6E                 	db	110	;'n'
  1619  00F1D3  74                 	db	116	;'t'
  1620  00F1D4  6F                 	db	111	;'o'
  1621  00F1D5  20                 	db	32
  1622  00F1D6  4D                 	db	77	;'M'
  1623  00F1D7  65                 	db	101	;'e'
  1624  00F1D8  6D                 	db	109	;'m'
  1625  00F1D9  6F                 	db	111	;'o'
  1626  00F1DA  72                 	db	114	;'r'
  1627  00F1DB  79                 	db	121	;'y'
  1628  00F1DC  0D                 	db	13
  1629  00F1DD  0A                 	db	10
  1630  00F1DE  00                 	db	0
  1631  00F1DF                     STR_187:
  1632  00F1DF  49                 	db	73	;'I'
  1633  00F1E0  6E                 	db	110	;'n'
  1634  00F1E1  76                 	db	118	;'v'
  1635  00F1E2  61                 	db	97	;'a'
  1636  00F1E3  6C                 	db	108	;'l'
  1637  00F1E4  69                 	db	105	;'i'
  1638  00F1E5  64                 	db	100	;'d'
  1639  00F1E6  20                 	db	32
  1640  00F1E7  43                 	db	67	;'C'
  1641  00F1E8  6F                 	db	111	;'o'
  1642  00F1E9  6E                 	db	110	;'n'
  1643  00F1EA  74                 	db	116	;'t'
  1644  00F1EB  72                 	db	114	;'r'
  1645  00F1EC  61                 	db	97	;'a'
  1646  00F1ED  73                 	db	115	;'s'
  1647  00F1EE  74                 	db	116	;'t'
  1648  00F1EF  20                 	db	32
  1649  00F1F0  44                 	db	68	;'D'
  1650  00F1F1  75                 	db	117	;'u'
  1651  00F1F2  74                 	db	116	;'t'
  1652  00F1F3  79                 	db	121	;'y'
  1653  00F1F4  20                 	db	32
  1654  00F1F5  43                 	db	67	;'C'
  1655  00F1F6  79                 	db	121	;'y'
  1656  00F1F7  63                 	db	99	;'c'
  1657  00F1F8  6C                 	db	108	;'l'
  1658  00F1F9  65                 	db	101	;'e'
  1659  00F1FA  3A                 	db	58	;':'
  1660  00F1FB  20                 	db	32
  1661  00F1FC  4C                 	db	76	;'L'
  1662  00F1FD  65                 	db	101	;'e'
  1663  00F1FE  73                 	db	115	;'s'
  1664  00F1FF  73                 	db	115	;'s'
  1665  00F200  20                 	db	32
  1666  00F201  74                 	db	116	;'t'
  1667  00F202  68                 	db	104	;'h'
  1668  00F203  61                 	db	97	;'a'
  1669  00F204  6E                 	db	110	;'n'
  1670  00F205  20                 	db	32
  1671  00F206  30                 	db	48	;'0'
  1672  00F207  0D                 	db	13
  1673  00F208  0A                 	db	10
  1674  00F209  00                 	db	0
  1675  00F20A                     STR_176:
  1676  00F20A  77                 	db	119	;'w'
  1677  00F20B  68                 	db	104	;'h'
  1678  00F20C  65                 	db	101	;'e'
  1679  00F20D  72                 	db	114	;'r'
  1680  00F20E  65                 	db	101	;'e'
  1681  00F20F  20                 	db	32
  1682  00F210  74                 	db	116	;'t'
  1683  00F211  68                 	db	104	;'h'
  1684  00F212  65                 	db	101	;'e'
  1685  00F213  20                 	db	32
  1686  00F214  64                 	db	100	;'d'
  1687  00F215  75                 	db	117	;'u'
  1688  00F216  74                 	db	116	;'t'
  1689  00F217  79                 	db	121	;'y'
  1690  00F218  63                 	db	99	;'c'
  1691  00F219  79                 	db	121	;'y'
  1692  00F21A  63                 	db	99	;'c'
  1693  00F21B  6C                 	db	108	;'l'
  1694  00F21C  65                 	db	101	;'e'
  1695  00F21D  20                 	db	32
  1696  00F21E  69                 	db	105	;'i'
  1697  00F21F  73                 	db	115	;'s'
  1698  00F220  20                 	db	32
  1699  00F221  61                 	db	97	;'a'
  1700  00F222  20                 	db	32
  1701  00F223  6E                 	db	110	;'n'
  1702  00F224  75                 	db	117	;'u'
  1703  00F225  6D                 	db	109	;'m'
  1704  00F226  62                 	db	98	;'b'
  1705  00F227  65                 	db	101	;'e'
  1706  00F228  72                 	db	114	;'r'
  1707  00F229  20                 	db	32
  1708  00F22A  30                 	db	48	;'0'
  1709  00F22B  20                 	db	32
  1710  00F22C  2D                 	db	45
  1711  00F22D  20                 	db	32
  1712  00F22E  31                 	db	49	;'1'
  1713  00F22F  30                 	db	48	;'0'
  1714  00F230  30                 	db	48	;'0'
  1715  00F231  0D                 	db	13
  1716  00F232  0A                 	db	10
  1717  00F233  00                 	db	0
  1718  00F234                     STR_166:
  1719  00F234  49                 	db	73	;'I'
  1720  00F235  6E                 	db	110	;'n'
  1721  00F236  76                 	db	118	;'v'
  1722  00F237  61                 	db	97	;'a'
  1723  00F238  6C                 	db	108	;'l'
  1724  00F239  69                 	db	105	;'i'
  1725  00F23A  64                 	db	100	;'d'
  1726  00F23B  20                 	db	32
  1727  00F23C  44                 	db	68	;'D'
  1728  00F23D  75                 	db	117	;'u'
  1729  00F23E  74                 	db	116	;'t'
  1730  00F23F  79                 	db	121	;'y'
  1731  00F240  63                 	db	99	;'c'
  1732  00F241  79                 	db	121	;'y'
  1733  00F242  63                 	db	99	;'c'
  1734  00F243  6C                 	db	108	;'l'
  1735  00F244  65                 	db	101	;'e'
  1736  00F245  3A                 	db	58	;':'
  1737  00F246  20                 	db	32
  1738  00F247  47                 	db	71	;'G'
  1739  00F248  72                 	db	114	;'r'
  1740  00F249  65                 	db	101	;'e'
  1741  00F24A  61                 	db	97	;'a'
  1742  00F24B  74                 	db	116	;'t'
  1743  00F24C  65                 	db	101	;'e'
  1744  00F24D  72                 	db	114	;'r'
  1745  00F24E  20                 	db	32
  1746  00F24F  74                 	db	116	;'t'
  1747  00F250  68                 	db	104	;'h'
  1748  00F251  61                 	db	97	;'a'
  1749  00F252  6E                 	db	110	;'n'
  1750  00F253  20                 	db	32
  1751  00F254  31                 	db	49	;'1'
  1752  00F255  30                 	db	48	;'0'
  1753  00F256  30                 	db	48	;'0'
  1754  00F257  0D                 	db	13
  1755  00F258  0A                 	db	10
  1756  00F259  00                 	db	0
  1757  00F25A                     STR_136:
  1758  00F25A  43                 	db	67	;'C'
  1759  00F25B  68                 	db	104	;'h'
  1760  00F25C  72                 	db	114	;'r'
  1761  00F25D  69                 	db	105	;'i'
  1762  00F25E  73                 	db	115	;'s'
  1763  00F25F  74                 	db	116	;'t'
  1764  00F260  6D                 	db	109	;'m'
  1765  00F261  61                 	db	97	;'a'
  1766  00F262  73                 	db	115	;'s'
  1767  00F263  20                 	db	32
  1768  00F264  54                 	db	84	;'T'
  1769  00F265  72                 	db	114	;'r'
  1770  00F266  65                 	db	101	;'e'
  1771  00F267  65                 	db	101	;'e'
  1772  00F268  20                 	db	32
  1773  00F269  43                 	db	67	;'C'
  1774  00F26A  6F                 	db	111	;'o'
  1775  00F26B  6C                 	db	108	;'l'
  1776  00F26C  6F                 	db	111	;'o'
  1777  00F26D  72                 	db	114	;'r'
  1778  00F26E  65                 	db	101	;'e'
  1779  00F26F  64                 	db	100	;'d'
  1780  00F270  20                 	db	32
  1781  00F271  4C                 	db	76	;'L'
  1782  00F272  69                 	db	105	;'i'
  1783  00F273  67                 	db	103	;'g'
  1784  00F274  68                 	db	104	;'h'
  1785  00F275  74                 	db	116	;'t'
  1786  00F276  73                 	db	115	;'s'
  1787  00F277  20                 	db	32
  1788  00F278  54                 	db	84	;'T'
  1789  00F279  6F                 	db	111	;'o'
  1790  00F27A  67                 	db	103	;'g'
  1791  00F27B  67                 	db	103	;'g'
  1792  00F27C  6C                 	db	108	;'l'
  1793  00F27D  65                 	db	101	;'e'
  1794  00F27E  64                 	db	100	;'d'
  1795  00F27F  00                 	db	0
  1796  00F280                     STR_5:
  1797  00F280  0D                 	db	13
  1798  00F281  0A                 	db	10
  1799  00F282  42                 	db	66	;'B'
  1800  00F283  75                 	db	117	;'u'
  1801  00F284  66                 	db	102	;'f'
  1802  00F285  66                 	db	102	;'f'
  1803  00F286  65                 	db	101	;'e'
  1804  00F287  72                 	db	114	;'r'
  1805  00F288  20                 	db	32
  1806  00F289  6F                 	db	111	;'o'
  1807  00F28A  76                 	db	118	;'v'
  1808  00F28B  65                 	db	101	;'e'
  1809  00F28C  72                 	db	114	;'r'
  1810  00F28D  66                 	db	102	;'f'
  1811  00F28E  6C                 	db	108	;'l'
  1812  00F28F  6F                 	db	111	;'o'
  1813  00F290  77                 	db	119	;'w'
  1814  00F291  21                 	db	33
  1815  00F292  20                 	db	32
  1816  00F293  44                 	db	68	;'D'
  1817  00F294  65                 	db	101	;'e'
  1818  00F295  6C                 	db	108	;'l'
  1819  00F296  65                 	db	101	;'e'
  1820  00F297  74                 	db	116	;'t'
  1821  00F298  69                 	db	105	;'i'
  1822  00F299  6E                 	db	110	;'n'
  1823  00F29A  67                 	db	103	;'g'
  1824  00F29B  20                 	db	32
  1825  00F29C  42                 	db	66	;'B'
  1826  00F29D  75                 	db	117	;'u'
  1827  00F29E  66                 	db	102	;'f'
  1828  00F29F  66                 	db	102	;'f'
  1829  00F2A0  65                 	db	101	;'e'
  1830  00F2A1  72                 	db	114	;'r'
  1831  00F2A2  20                 	db	32
  1832  00F2A3  0D                 	db	13
  1833  00F2A4  0A                 	db	10
  1834  00F2A5  00                 	db	0
  1835  00F2A6                     STR_153:
  1836  00F2A6  69                 	db	105	;'i'
  1837  00F2A7  2E                 	db	46
  1838  00F2A8  65                 	db	101	;'e'
  1839  00F2A9  2E                 	db	46
  1840  00F2AA  20                 	db	32
  1841  00F2AB  43                 	db	67	;'C'
  1842  00F2AC  68                 	db	104	;'h'
  1843  00F2AD  72                 	db	114	;'r'
  1844  00F2AE  69                 	db	105	;'i'
  1845  00F2AF  73                 	db	115	;'s'
  1846  00F2B0  74                 	db	116	;'t'
  1847  00F2B1  6D                 	db	109	;'m'
  1848  00F2B2  61                 	db	97	;'a'
  1849  00F2B3  73                 	db	115	;'s'
  1850  00F2B4  20                 	db	32
  1851  00F2B5  43                 	db	67	;'C'
  1852  00F2B6  6F                 	db	111	;'o'
  1853  00F2B7  6C                 	db	108	;'l'
  1854  00F2B8  6F                 	db	111	;'o'
  1855  00F2B9  72                 	db	114	;'r'
  1856  00F2BA  65                 	db	101	;'e'
  1857  00F2BB  64                 	db	100	;'d'
  1858  00F2BC  20                 	db	32
  1859  00F2BD  6C                 	db	108	;'l'
  1860  00F2BE  69                 	db	105	;'i'
  1861  00F2BF  67                 	db	103	;'g'
  1862  00F2C0  68                 	db	104	;'h'
  1863  00F2C1  74                 	db	116	;'t'
  1864  00F2C2  73                 	db	115	;'s'
  1865  00F2C3  20                 	db	32
  1866  00F2C4  3D                 	db	61	;'='
  1867  00F2C5  20                 	db	32
  1868  00F2C6  4F                 	db	79	;'O'
  1869  00F2C7  6E                 	db	110	;'n'
  1870  00F2C8  0D                 	db	13
  1871  00F2C9  0A                 	db	10
  1872  00F2CA  00                 	db	0
  1873  00F2CB                     STR_231:
  1874  00F2CB  45                 	db	69	;'E'
  1875  00F2CC  6E                 	db	110	;'n'
  1876  00F2CD  74                 	db	116	;'t'
  1877  00F2CE  65                 	db	101	;'e'
  1878  00F2CF  72                 	db	114	;'r'
  1879  00F2D0  20                 	db	32
  1880  00F2D1  54                 	db	84	;'T'
  1881  00F2D2  69                 	db	105	;'i'
  1882  00F2D3  6D                 	db	109	;'m'
  1883  00F2D4  65                 	db	101	;'e'
  1884  00F2D5  20                 	db	32
  1885  00F2D6  4D                 	db	77	;'M'
  1886  00F2D7  4D                 	db	77	;'M'
  1887  00F2D8  2F                 	db	47
  1888  00F2D9  44                 	db	68	;'D'
  1889  00F2DA  44                 	db	68	;'D'
  1890  00F2DB  2F                 	db	47
  1891  00F2DC  59                 	db	89	;'Y'
  1892  00F2DD  59                 	db	89	;'Y'
  1893  00F2DE  20                 	db	32
  1894  00F2DF  48                 	db	72	;'H'
  1895  00F2E0  48                 	db	72	;'H'
  1896  00F2E1  3A                 	db	58	;':'
  1897  00F2E2  4D                 	db	77	;'M'
  1898  00F2E3  4D                 	db	77	;'M'
  1899  00F2E4  3A                 	db	58	;':'
  1900  00F2E5  53                 	db	83	;'S'
  1901  00F2E6  53                 	db	83	;'S'
  1902  00F2E7  20                 	db	32
  1903  00F2E8  41                 	db	65	;'A'
  1904  00F2E9  4D                 	db	77	;'M'
  1905  00F2EA  20                 	db	32
  1906  00F2EB  6F                 	db	111	;'o'
  1907  00F2EC  72                 	db	114	;'r'
  1908  00F2ED  0D                 	db	13
  1909  00F2EE  0A                 	db	10
  1910  00F2EF  00                 	db	0
  1911  00F2F0                     STR_221:
  1912  00F2F0  20                 	db	32
  1913  00F2F1  33                 	db	51	;'3'
  1914  00F2F2  20                 	db	32
  1915  00F2F3  56                 	db	86	;'V'
  1916  00F2F4  6F                 	db	111	;'o'
  1917  00F2F5  6C                 	db	108	;'l'
  1918  00F2F6  74                 	db	116	;'t'
  1919  00F2F7  20                 	db	32
  1920  00F2F8  52                 	db	82	;'R'
  1921  00F2F9  54                 	db	84	;'T'
  1922  00F2FA  43                 	db	67	;'C'
  1923  00F2FB  20                 	db	32
  1924  00F2FC  42                 	db	66	;'B'
  1925  00F2FD  61                 	db	97	;'a'
  1926  00F2FE  74                 	db	116	;'t'
  1927  00F2FF  74                 	db	116	;'t'
  1928  00F300  65                 	db	101	;'e'
  1929  00F301  72                 	db	114	;'r'
  1930  00F302  79                 	db	121	;'y'
  1931  00F303  20                 	db	32
  1932  00F304  56                 	db	86	;'V'
  1933  00F305  6F                 	db	111	;'o'
  1934  00F306  6C                 	db	108	;'l'
  1935  00F307  74                 	db	116	;'t'
  1936  00F308  61                 	db	97	;'a'
  1937  00F309  67                 	db	103	;'g'
  1938  00F30A  65                 	db	101	;'e'
  1939  00F30B  20                 	db	32
  1940  00F30C  3D                 	db	61	;'='
  1941  00F30D  20                 	db	32
  1942  00F30E  25                 	db	37
  1943  00F30F  64                 	db	100	;'d'
  1944  00F310  2E                 	db	46
  1945  00F311  25                 	db	37
  1946  00F312  64                 	db	100	;'d'
  1947  00F313  00                 	db	0
  1948  00F314                     STR_321:
  1949  00F314  25                 	db	37
  1950  00F315  30                 	db	48	;'0'
  1951  00F316  32                 	db	50	;'2'
  1952  00F317  64                 	db	100	;'d'
  1953  00F318  2F                 	db	47
  1954  00F319  25                 	db	37
  1955  00F31A  30                 	db	48	;'0'
  1956  00F31B  32                 	db	50	;'2'
  1957  00F31C  64                 	db	100	;'d'
  1958  00F31D  2F                 	db	47
  1959  00F31E  32                 	db	50	;'2'
  1960  00F31F  30                 	db	48	;'0'
  1961  00F320  25                 	db	37
  1962  00F321  30                 	db	48	;'0'
  1963  00F322  32                 	db	50	;'2'
  1964  00F323  64                 	db	100	;'d'
  1965  00F324  20                 	db	32
  1966  00F325  25                 	db	37
  1967  00F326  30                 	db	48	;'0'
  1968  00F327  32                 	db	50	;'2'
  1969  00F328  64                 	db	100	;'d'
  1970  00F329  3A                 	db	58	;':'
  1971  00F32A  25                 	db	37
  1972  00F32B  30                 	db	48	;'0'
  1973  00F32C  32                 	db	50	;'2'
  1974  00F32D  64                 	db	100	;'d'
  1975  00F32E  3A                 	db	58	;':'
  1976  00F32F  25                 	db	37
  1977  00F330  30                 	db	48	;'0'
  1978  00F331  32                 	db	50	;'2'
  1979  00F332  64                 	db	100	;'d'
  1980  00F333  20                 	db	32
  1981  00F334  41                 	db	65	;'A'
  1982  00F335  4D                 	db	77	;'M'
  1983  00F336  00                 	db	0
  1984  00F337                     STR_322:
  1985  00F337  25                 	db	37
  1986  00F338  30                 	db	48	;'0'
  1987  00F339  32                 	db	50	;'2'
  1988  00F33A  64                 	db	100	;'d'
  1989  00F33B  2F                 	db	47
  1990  00F33C  25                 	db	37
  1991  00F33D  30                 	db	48	;'0'
  1992  00F33E  32                 	db	50	;'2'
  1993  00F33F  64                 	db	100	;'d'
  1994  00F340  2F                 	db	47
  1995  00F341  32                 	db	50	;'2'
  1996  00F342  30                 	db	48	;'0'
  1997  00F343  25                 	db	37
  1998  00F344  30                 	db	48	;'0'
  1999  00F345  32                 	db	50	;'2'
  2000  00F346  64                 	db	100	;'d'
  2001  00F347  20                 	db	32
  2002  00F348  25                 	db	37
  2003  00F349  30                 	db	48	;'0'
  2004  00F34A  32                 	db	50	;'2'
  2005  00F34B  64                 	db	100	;'d'
  2006  00F34C  3A                 	db	58	;':'
  2007  00F34D  25                 	db	37
  2008  00F34E  30                 	db	48	;'0'
  2009  00F34F  32                 	db	50	;'2'
  2010  00F350  64                 	db	100	;'d'
  2011  00F351  3A                 	db	58	;':'
  2012  00F352  25                 	db	37
  2013  00F353  30                 	db	48	;'0'
  2014  00F354  32                 	db	50	;'2'
  2015  00F355  64                 	db	100	;'d'
  2016  00F356  20                 	db	32
  2017  00F357  50                 	db	80	;'P'
  2018  00F358  4D                 	db	77	;'M'
  2019  00F359  00                 	db	0
  2020  00F35A                     STR_232:
  2021  00F35A  45                 	db	69	;'E'
  2022  00F35B  6E                 	db	110	;'n'
  2023  00F35C  74                 	db	116	;'t'
  2024  00F35D  65                 	db	101	;'e'
  2025  00F35E  72                 	db	114	;'r'
  2026  00F35F  20                 	db	32
  2027  00F360  54                 	db	84	;'T'
  2028  00F361  69                 	db	105	;'i'
  2029  00F362  6D                 	db	109	;'m'
  2030  00F363  65                 	db	101	;'e'
  2031  00F364  20                 	db	32
  2032  00F365  4D                 	db	77	;'M'
  2033  00F366  4D                 	db	77	;'M'
  2034  00F367  2F                 	db	47
  2035  00F368  44                 	db	68	;'D'
  2036  00F369  44                 	db	68	;'D'
  2037  00F36A  2F                 	db	47
  2038  00F36B  59                 	db	89	;'Y'
  2039  00F36C  59                 	db	89	;'Y'
  2040  00F36D  20                 	db	32
  2041  00F36E  48                 	db	72	;'H'
  2042  00F36F  48                 	db	72	;'H'
  2043  00F370  3A                 	db	58	;':'
  2044  00F371  4D                 	db	77	;'M'
  2045  00F372  4D                 	db	77	;'M'
  2046  00F373  3A                 	db	58	;':'
  2047  00F374  53                 	db	83	;'S'
  2048  00F375  53                 	db	83	;'S'
  2049  00F376  20                 	db	32
  2050  00F377  50                 	db	80	;'P'
  2051  00F378  4D                 	db	77	;'M'
  2052  00F379  0D                 	db	13
  2053  00F37A  0A                 	db	10
  2054  00F37B  00                 	db	0
  2055  00F37C                     STR_168:
  2056  00F37C  49                 	db	73	;'I'
  2057  00F37D  6E                 	db	110	;'n'
  2058  00F37E  76                 	db	118	;'v'
  2059  00F37F  61                 	db	97	;'a'
  2060  00F380  6C                 	db	108	;'l'
  2061  00F381  69                 	db	105	;'i'
  2062  00F382  64                 	db	100	;'d'
  2063  00F383  20                 	db	32
  2064  00F384  44                 	db	68	;'D'
  2065  00F385  75                 	db	117	;'u'
  2066  00F386  74                 	db	116	;'t'
  2067  00F387  79                 	db	121	;'y'
  2068  00F388  63                 	db	99	;'c'
  2069  00F389  79                 	db	121	;'y'
  2070  00F38A  63                 	db	99	;'c'
  2071  00F38B  6C                 	db	108	;'l'
  2072  00F38C  65                 	db	101	;'e'
  2073  00F38D  3A                 	db	58	;':'
  2074  00F38E  20                 	db	32
  2075  00F38F  4C                 	db	76	;'L'
  2076  00F390  65                 	db	101	;'e'
  2077  00F391  73                 	db	115	;'s'
  2078  00F392  73                 	db	115	;'s'
  2079  00F393  20                 	db	32
  2080  00F394  74                 	db	116	;'t'
  2081  00F395  68                 	db	104	;'h'
  2082  00F396  61                 	db	97	;'a'
  2083  00F397  6E                 	db	110	;'n'
  2084  00F398  20                 	db	32
  2085  00F399  30                 	db	48	;'0'
  2086  00F39A  0D                 	db	13
  2087  00F39B  0A                 	db	10
  2088  00F39C  00                 	db	0
  2089  00F39D                     STR_238:
  2090  00F39D  46                 	db	70	;'F'
  2091  00F39E  6F                 	db	111	;'o'
  2092  00F39F  72                 	db	114	;'r'
  2093  00F3A0  6D                 	db	109	;'m'
  2094  00F3A1  61                 	db	97	;'a'
  2095  00F3A2  74                 	db	116	;'t'
  2096  00F3A3  20                 	db	32
  2097  00F3A4  69                 	db	105	;'i'
  2098  00F3A5  73                 	db	115	;'s'
  2099  00F3A6  20                 	db	32
  2100  00F3A7  4D                 	db	77	;'M'
  2101  00F3A8  4D                 	db	77	;'M'
  2102  00F3A9  2F                 	db	47
  2103  00F3AA  44                 	db	68	;'D'
  2104  00F3AB  44                 	db	68	;'D'
  2105  00F3AC  2F                 	db	47
  2106  00F3AD  59                 	db	89	;'Y'
  2107  00F3AE  59                 	db	89	;'Y'
  2108  00F3AF  20                 	db	32
  2109  00F3B0  48                 	db	72	;'H'
  2110  00F3B1  48                 	db	72	;'H'
  2111  00F3B2  3A                 	db	58	;':'
  2112  00F3B3  4D                 	db	77	;'M'
  2113  00F3B4  4D                 	db	77	;'M'
  2114  00F3B5  3A                 	db	58	;':'
  2115  00F3B6  53                 	db	83	;'S'
  2116  00F3B7  53                 	db	83	;'S'
  2117  00F3B8  20                 	db	32
  2118  00F3B9  41                 	db	65	;'A'
  2119  00F3BA  4D                 	db	77	;'M'
  2120  00F3BB  0D                 	db	13
  2121  00F3BC  0A                 	db	10
  2122  00F3BD  00                 	db	0
  2123  00F3BE                     STR_200:
  2124  00F3BE  45                 	db	69	;'E'
  2125  00F3BF  72                 	db	114	;'r'
  2126  00F3C0  72                 	db	114	;'r'
  2127  00F3C1  6F                 	db	111	;'o'
  2128  00F3C2  72                 	db	114	;'r'
  2129  00F3C3  3A                 	db	58	;':'
  2130  00F3C4  20                 	db	32
  2131  00F3C5  6F                 	db	111	;'o'
  2132  00F3C6  6E                 	db	110	;'n'
  2133  00F3C7  6C                 	db	108	;'l'
  2134  00F3C8  79                 	db	121	;'y'
  2135  00F3C9  20                 	db	32
  2136  00F3CA  75                 	db	117	;'u'
  2137  00F3CB  73                 	db	115	;'s'
  2138  00F3CC  65                 	db	101	;'e'
  2139  00F3CD  20                 	db	32
  2140  00F3CE  6F                 	db	111	;'o'
  2141  00F3CF  6E                 	db	110	;'n'
  2142  00F3D0  65                 	db	101	;'e'
  2143  00F3D1  20                 	db	32
  2144  00F3D2  65                 	db	101	;'e'
  2145  00F3D3  71                 	db	113	;'q'
  2146  00F3D4  75                 	db	117	;'u'
  2147  00F3D5  61                 	db	97	;'a'
  2148  00F3D6  6C                 	db	108	;'l'
  2149  00F3D7  20                 	db	32
  2150  00F3D8  73                 	db	115	;'s'
  2151  00F3D9  69                 	db	105	;'i'
  2152  00F3DA  67                 	db	103	;'g'
  2153  00F3DB  6E                 	db	110	;'n'
  2154  00F3DC  0D                 	db	13
  2155  00F3DD  0A                 	db	10
  2156  00F3DE  00                 	db	0
  2157  00F3DF                     STR_323:
  2158  00F3DF  25                 	db	37
  2159  00F3E0  30                 	db	48	;'0'
  2160  00F3E1  32                 	db	50	;'2'
  2161  00F3E2  64                 	db	100	;'d'
  2162  00F3E3  2F                 	db	47
  2163  00F3E4  25                 	db	37
  2164  00F3E5  30                 	db	48	;'0'
  2165  00F3E6  32                 	db	50	;'2'
  2166  00F3E7  64                 	db	100	;'d'
  2167  00F3E8  2F                 	db	47
  2168  00F3E9  32                 	db	50	;'2'
  2169  00F3EA  30                 	db	48	;'0'
  2170  00F3EB  25                 	db	37
  2171  00F3EC  30                 	db	48	;'0'
  2172  00F3ED  32                 	db	50	;'2'
  2173  00F3EE  64                 	db	100	;'d'
  2174  00F3EF  20                 	db	32
  2175  00F3F0  25                 	db	37
  2176  00F3F1  30                 	db	48	;'0'
  2177  00F3F2  32                 	db	50	;'2'
  2178  00F3F3  64                 	db	100	;'d'
  2179  00F3F4  3A                 	db	58	;':'
  2180  00F3F5  25                 	db	37
  2181  00F3F6  30                 	db	48	;'0'
  2182  00F3F7  32                 	db	50	;'2'
  2183  00F3F8  64                 	db	100	;'d'
  2184  00F3F9  3A                 	db	58	;':'
  2185  00F3FA  25                 	db	37
  2186  00F3FB  30                 	db	48	;'0'
  2187  00F3FC  32                 	db	50	;'2'
  2188  00F3FD  64                 	db	100	;'d'
  2189  00F3FE  00                 	db	0
  2190  00F3FF                     STR_189:
  2191  00F3FF  43                 	db	67	;'C'
  2192  00F400  6F                 	db	111	;'o'
  2193  00F401  6E                 	db	110	;'n'
  2194  00F402  74                 	db	116	;'t'
  2195  00F403  72                 	db	114	;'r'
  2196  00F404  61                 	db	97	;'a'
  2197  00F405  73                 	db	115	;'s'
  2198  00F406  74                 	db	116	;'t'
  2199  00F407  20                 	db	32
  2200  00F408  44                 	db	68	;'D'
  2201  00F409  75                 	db	117	;'u'
  2202  00F40A  74                 	db	116	;'t'
  2203  00F40B  79                 	db	121	;'y'
  2204  00F40C  20                 	db	32
  2205  00F40D  43                 	db	67	;'C'
  2206  00F40E  79                 	db	121	;'y'
  2207  00F40F  63                 	db	99	;'c'
  2208  00F410  6C                 	db	108	;'l'
  2209  00F411  65                 	db	101	;'e'
  2210  00F412  20                 	db	32
  2211  00F413  73                 	db	115	;'s'
  2212  00F414  65                 	db	101	;'e'
  2213  00F415  74                 	db	116	;'t'
  2214  00F416  20                 	db	32
  2215  00F417  74                 	db	116	;'t'
  2216  00F418  6F                 	db	111	;'o'
  2217  00F419  20                 	db	32
  2218  00F41A  25                 	db	37
  2219  00F41B  64                 	db	100	;'d'
  2220  00F41C  0D                 	db	13
  2221  00F41D  0A                 	db	10
  2222  00F41E  00                 	db	0
  2223  00F41F                     STR_144:
  2224  00F41F  43                 	db	67	;'C'
  2225  00F420  68                 	db	104	;'h'
  2226  00F421  72                 	db	114	;'r'
  2227  00F422  69                 	db	105	;'i'
  2228  00F423  73                 	db	115	;'s'
  2229  00F424  74                 	db	116	;'t'
  2230  00F425  6D                 	db	109	;'m'
  2231  00F426  61                 	db	97	;'a'
  2232  00F427  73                 	db	115	;'s'
  2233  00F428  20                 	db	32
  2234  00F429  54                 	db	84	;'T'
  2235  00F42A  72                 	db	114	;'r'
  2236  00F42B  65                 	db	101	;'e'
  2237  00F42C  65                 	db	101	;'e'
  2238  00F42D  20                 	db	32
  2239  00F42E  57                 	db	87	;'W'
  2240  00F42F  68                 	db	104	;'h'
  2241  00F430  69                 	db	105	;'i'
  2242  00F431  74                 	db	116	;'t'
  2243  00F432  65                 	db	101	;'e'
  2244  00F433  20                 	db	32
  2245  00F434  4C                 	db	76	;'L'
  2246  00F435  69                 	db	105	;'i'
  2247  00F436  67                 	db	103	;'g'
  2248  00F437  68                 	db	104	;'h'
  2249  00F438  74                 	db	116	;'t'
  2250  00F439  73                 	db	115	;'s'
  2251  00F43A  20                 	db	32
  2252  00F43B  4F                 	db	79	;'O'
  2253  00F43C  66                 	db	102	;'f'
  2254  00F43D  66                 	db	102	;'f'
  2255  00F43E  00                 	db	0
  2256  00F43F                     STR_140:
  2257  00F43F  43                 	db	67	;'C'
  2258  00F440  68                 	db	104	;'h'
  2259  00F441  72                 	db	114	;'r'
  2260  00F442  69                 	db	105	;'i'
  2261  00F443  73                 	db	115	;'s'
  2262  00F444  74                 	db	116	;'t'
  2263  00F445  6D                 	db	109	;'m'
  2264  00F446  61                 	db	97	;'a'
  2265  00F447  73                 	db	115	;'s'
  2266  00F448  20                 	db	32
  2267  00F449  54                 	db	84	;'T'
  2268  00F44A  72                 	db	114	;'r'
  2269  00F44B  65                 	db	101	;'e'
  2270  00F44C  65                 	db	101	;'e'
  2271  00F44D  20                 	db	32
  2272  00F44E  57                 	db	87	;'W'
  2273  00F44F  68                 	db	104	;'h'
  2274  00F450  69                 	db	105	;'i'
  2275  00F451  74                 	db	116	;'t'
  2276  00F452  65                 	db	101	;'e'
  2277  00F453  20                 	db	32
  2278  00F454  4C                 	db	76	;'L'
  2279  00F455  69                 	db	105	;'i'
  2280  00F456  67                 	db	103	;'g'
  2281  00F457  68                 	db	104	;'h'
  2282  00F458  74                 	db	116	;'t'
  2283  00F459  73                 	db	115	;'s'
  2284  00F45A  20                 	db	32
  2285  00F45B  4F                 	db	79	;'O'
  2286  00F45C  6E                 	db	110	;'n'
  2287  00F45D  00                 	db	0
  2288  00F45E                     STR_202:
  2289  00F45E  45                 	db	69	;'E'
  2290  00F45F  72                 	db	114	;'r'
  2291  00F460  72                 	db	114	;'r'
  2292  00F461  6F                 	db	111	;'o'
  2293  00F462  72                 	db	114	;'r'
  2294  00F463  3A                 	db	58	;':'
  2295  00F464  20                 	db	32
  2296  00F465  4E                 	db	78	;'N'
  2297  00F466  6F                 	db	111	;'o'
  2298  00F467  20                 	db	32
  2299  00F468  6E                 	db	110	;'n'
  2300  00F469  65                 	db	101	;'e'
  2301  00F46A  67                 	db	103	;'g'
  2302  00F46B  61                 	db	97	;'a'
  2303  00F46C  74                 	db	116	;'t'
  2304  00F46D  69                 	db	105	;'i'
  2305  00F46E  76                 	db	118	;'v'
  2306  00F46F  65                 	db	101	;'e'
  2307  00F470  20                 	db	32
  2308  00F471  63                 	db	99	;'c'
  2309  00F472  68                 	db	104	;'h'
  2310  00F473  61                 	db	97	;'a'
  2311  00F474  6E                 	db	110	;'n'
  2312  00F475  6E                 	db	110	;'n'
  2313  00F476  65                 	db	101	;'e'
  2314  00F477  6C                 	db	108	;'l'
  2315  00F478  73                 	db	115	;'s'
  2316  00F479  0D                 	db	13
  2317  00F47A  0A                 	db	10
  2318  00F47B  00                 	db	0
  2319  00F47C                     STR_240:
  2320  00F47C  52                 	db	82	;'R'
  2321  00F47D  65                 	db	101	;'e'
  2322  00F47E  61                 	db	97	;'a'
  2323  00F47F  6C                 	db	108	;'l'
  2324  00F480  20                 	db	32
  2325  00F481  54                 	db	84	;'T'
  2326  00F482  69                 	db	105	;'i'
  2327  00F483  6D                 	db	109	;'m'
  2328  00F484  65                 	db	101	;'e'
  2329  00F485  20                 	db	32
  2330  00F486  43                 	db	67	;'C'
  2331  00F487  6C                 	db	108	;'l'
  2332  00F488  6F                 	db	111	;'o'
  2333  00F489  63                 	db	99	;'c'
  2334  00F48A  6B                 	db	107	;'k'
  2335  00F48B  20                 	db	32
  2336  00F48C  48                 	db	72	;'H'
  2337  00F48D  65                 	db	101	;'e'
  2338  00F48E  6C                 	db	108	;'l'
  2339  00F48F  70                 	db	112	;'p'
  2340  00F490  20                 	db	32
  2341  00F491  4D                 	db	77	;'M'
  2342  00F492  65                 	db	101	;'e'
  2343  00F493  6E                 	db	110	;'n'
  2344  00F494  75                 	db	117	;'u'
  2345  00F495  0D                 	db	13
  2346  00F496  0A                 	db	10
  2347  00F497  0A                 	db	10
  2348  00F498  00                 	db	0
  2349  00F499                     STR_206:
  2350  00F499  43                 	db	67	;'C'
  2351  00F49A  68                 	db	104	;'h'
  2352  00F49B  61                 	db	97	;'a'
  2353  00F49C  6E                 	db	110	;'n'
  2354  00F49D  6E                 	db	110	;'n'
  2355  00F49E  65                 	db	101	;'e'
  2356  00F49F  6C                 	db	108	;'l'
  2357  00F4A0  20                 	db	32
  2358  00F4A1  25                 	db	37
  2359  00F4A2  64                 	db	100	;'d'
  2360  00F4A3  20                 	db	32
  2361  00F4A4  69                 	db	105	;'i'
  2362  00F4A5  73                 	db	115	;'s'
  2363  00F4A6  20                 	db	32
  2364  00F4A7  6E                 	db	110	;'n'
  2365  00F4A8  6F                 	db	111	;'o'
  2366  00F4A9  74                 	db	116	;'t'
  2367  00F4AA  20                 	db	32
  2368  00F4AB  63                 	db	99	;'c'
  2369  00F4AC  6F                 	db	111	;'o'
  2370  00F4AD  6E                 	db	110	;'n'
  2371  00F4AE  66                 	db	102	;'f'
  2372  00F4AF  69                 	db	105	;'i'
  2373  00F4B0  67                 	db	103	;'g'
  2374  00F4B1  75                 	db	117	;'u'
  2375  00F4B2  72                 	db	114	;'r'
  2376  00F4B3  65                 	db	101	;'e'
  2377  00F4B4  64                 	db	100	;'d'
  2378  00F4B5  00                 	db	0
  2379  00F4B6                     STR_21:
  2380  00F4B6  0D                 	db	13
  2381  00F4B7  0A                 	db	10
  2382  00F4B8  45                 	db	69	;'E'
  2383  00F4B9  6E                 	db	110	;'n'
  2384  00F4BA  74                 	db	116	;'t'
  2385  00F4BB  65                 	db	101	;'e'
  2386  00F4BC  72                 	db	114	;'r'
  2387  00F4BD  20                 	db	32
  2388  00F4BE  27                 	db	39
  2389  00F4BF  3F                 	db	63	;'?'
  2390  00F4C0  27                 	db	39
  2391  00F4C1  20                 	db	32
  2392  00F4C2  66                 	db	102	;'f'
  2393  00F4C3  6F                 	db	111	;'o'
  2394  00F4C4  72                 	db	114	;'r'
  2395  00F4C5  20                 	db	32
  2396  00F4C6  48                 	db	72	;'H'
  2397  00F4C7  65                 	db	101	;'e'
  2398  00F4C8  6C                 	db	108	;'l'
  2399  00F4C9  70                 	db	112	;'p'
  2400  00F4CA  20                 	db	32
  2401  00F4CB  4D                 	db	77	;'M'
  2402  00F4CC  65                 	db	101	;'e'
  2403  00F4CD  6E                 	db	110	;'n'
  2404  00F4CE  75                 	db	117	;'u'
  2405  00F4CF  0D                 	db	13
  2406  00F4D0  0A                 	db	10
  2407  00F4D1  3E                 	db	62	;'>'
  2408  00F4D2  00                 	db	0
  2409  00F4D3                     STR_148:
  2410  00F4D3  43                 	db	67	;'C'
  2411  00F4D4  68                 	db	104	;'h'
  2412  00F4D5  72                 	db	114	;'r'
  2413  00F4D6  69                 	db	105	;'i'
  2414  00F4D7  73                 	db	115	;'s'
  2415  00F4D8  74                 	db	116	;'t'
  2416  00F4D9  6D                 	db	109	;'m'
  2417  00F4DA  61                 	db	97	;'a'
  2418  00F4DB  73                 	db	115	;'s'
  2419  00F4DC  20                 	db	32
  2420  00F4DD  74                 	db	116	;'t'
  2421  00F4DE  72                 	db	114	;'r'
  2422  00F4DF  65                 	db	101	;'e'
  2423  00F4E0  65                 	db	101	;'e'
  2424  00F4E1  20                 	db	32
  2425  00F4E2  48                 	db	72	;'H'
  2426  00F4E3  65                 	db	101	;'e'
  2427  00F4E4  6C                 	db	108	;'l'
  2428  00F4E5  70                 	db	112	;'p'
  2429  00F4E6  20                 	db	32
  2430  00F4E7  4D                 	db	77	;'M'
  2431  00F4E8  65                 	db	101	;'e'
  2432  00F4E9  6E                 	db	110	;'n'
  2433  00F4EA  75                 	db	117	;'u'
  2434  00F4EB  0D                 	db	13
  2435  00F4EC  0A                 	db	10
  2436  00F4ED  0A                 	db	10
  2437  00F4EE  00                 	db	0
  2438  00F4EF                     STR_204:
  2439  00F4EF  45                 	db	69	;'E'
  2440  00F4F0  72                 	db	114	;'r'
  2441  00F4F1  72                 	db	114	;'r'
  2442  00F4F2  6F                 	db	111	;'o'
  2443  00F4F3  72                 	db	114	;'r'
  2444  00F4F4  3A                 	db	58	;':'
  2445  00F4F5  20                 	db	32
  2446  00F4F6  69                 	db	105	;'i'
  2447  00F4F7  6E                 	db	110	;'n'
  2448  00F4F8  20                 	db	32
  2449  00F4F9  70                 	db	112	;'p'
  2450  00F4FA  61                 	db	97	;'a'
  2451  00F4FB  72                 	db	114	;'r'
  2452  00F4FC  73                 	db	115	;'s'
  2453  00F4FD  69                 	db	105	;'i'
  2454  00F4FE  6E                 	db	110	;'n'
  2455  00F4FF  67                 	db	103	;'g'
  2456  00F500  20                 	db	32
  2457  00F501  63                 	db	99	;'c'
  2458  00F502  6F                 	db	111	;'o'
  2459  00F503  6D                 	db	109	;'m'
  2460  00F504  6D                 	db	109	;'m'
  2461  00F505  61                 	db	97	;'a'
  2462  00F506  6E                 	db	110	;'n'
  2463  00F507  64                 	db	100	;'d'
  2464  00F508  0D                 	db	13
  2465  00F509  0A                 	db	10
  2466  00F50A  00                 	db	0
  2467  00F50B                     STR_163:
  2468  00F50B  74                 	db	116	;'t'
  2469  00F50C  68                 	db	104	;'h'
  2470  00F50D  65                 	db	101	;'e'
  2471  00F50E  72                 	db	114	;'r'
  2472  00F50F  65                 	db	101	;'e'
  2473  00F510  20                 	db	32
  2474  00F511  69                 	db	105	;'i'
  2475  00F512  73                 	db	115	;'s'
  2476  00F513  20                 	db	32
  2477  00F514  6E                 	db	110	;'n'
  2478  00F515  6F                 	db	111	;'o'
  2479  00F516  20                 	db	32
  2480  00F517  71                 	db	113	;'q'
  2481  00F518  75                 	db	117	;'u'
  2482  00F519  65                 	db	101	;'e'
  2483  00F51A  73                 	db	115	;'s'
  2484  00F51B  74                 	db	116	;'t'
  2485  00F51C  69                 	db	105	;'i'
  2486  00F51D  6F                 	db	111	;'o'
  2487  00F51E  6E                 	db	110	;'n'
  2488  00F51F  20                 	db	32
  2489  00F520  6D                 	db	109	;'m'
  2490  00F521  61                 	db	97	;'a'
  2491  00F522  72                 	db	114	;'r'
  2492  00F523  6B                 	db	107	;'k'
  2493  00F524  0D                 	db	13
  2494  00F525  0A                 	db	10
  2495  00F526  00                 	db	0
  2496  00F527                     STR_267:
  2497  00F527  69                 	db	105	;'i'
  2498  00F528  2E                 	db	46
  2499  00F529  65                 	db	101	;'e'
  2500  00F52A  2E                 	db	46
  2501  00F52B  20                 	db	32
  2502  00F52C  4A                 	db	74	;'J'
  2503  00F52D  6F                 	db	111	;'o'
  2504  00F52E  65                 	db	101	;'e'
  2505  00F52F  73                 	db	115	;'s'
  2506  00F530  20                 	db	32
  2507  00F531  72                 	db	114	;'r'
  2508  00F532  6F                 	db	111	;'o'
  2509  00F533  6F                 	db	111	;'o'
  2510  00F534  6D                 	db	109	;'m'
  2511  00F535  20                 	db	32
  2512  00F536  6C                 	db	108	;'l'
  2513  00F537  69                 	db	105	;'i'
  2514  00F538  67                 	db	103	;'g'
  2515  00F539  68                 	db	104	;'h'
  2516  00F53A  74                 	db	116	;'t'
  2517  00F53B  20                 	db	32
  2518  00F53C  3D                 	db	61	;'='
  2519  00F53D  20                 	db	32
  2520  00F53E  4F                 	db	79	;'O'
  2521  00F53F  6E                 	db	110	;'n'
  2522  00F540  0D                 	db	13
  2523  00F541  0A                 	db	10
  2524  00F542  00                 	db	0
  2525  00F543                     STR_236:
  2526  00F543  0D                 	db	13
  2527  00F544  0A                 	db	10
  2528  00F545  54                 	db	84	;'T'
  2529  00F546  69                 	db	105	;'i'
  2530  00F547  6D                 	db	109	;'m'
  2531  00F548  65                 	db	101	;'e'
  2532  00F549  20                 	db	32
  2533  00F54A  4E                 	db	78	;'N'
  2534  00F54B  6F                 	db	111	;'o'
  2535  00F54C  74                 	db	116	;'t'
  2536  00F54D  20                 	db	32
  2537  00F54E  53                 	db	83	;'S'
  2538  00F54F  65                 	db	101	;'e'
  2539  00F550  74                 	db	116	;'t'
  2540  00F551  20                 	db	32
  2541  00F552  53                 	db	83	;'S'
  2542  00F553  75                 	db	117	;'u'
  2543  00F554  63                 	db	99	;'c'
  2544  00F555  63                 	db	99	;'c'
  2545  00F556  65                 	db	101	;'e'
  2546  00F557  73                 	db	115	;'s'
  2547  00F558  73                 	db	115	;'s'
  2548  00F559  66                 	db	102	;'f'
  2549  00F55A  75                 	db	117	;'u'
  2550  00F55B  6C                 	db	108	;'l'
  2551  00F55C  6C                 	db	108	;'l'
  2552  00F55D  79                 	db	121	;'y'
  2553  00F55E  00                 	db	0
  2554  00F55F                     STR_164:
  2555  00F55F  45                 	db	69	;'E'
  2556  00F560  72                 	db	114	;'r'
  2557  00F561  72                 	db	114	;'r'
  2558  00F562  6F                 	db	111	;'o'
  2559  00F563  72                 	db	114	;'r'
  2560  00F564  3A                 	db	58	;':'
  2561  00F565  20                 	db	32
  2562  00F566  4E                 	db	78	;'N'
  2563  00F567  6F                 	db	111	;'o'
  2564  00F568  20                 	db	32
  2565  00F569  6E                 	db	110	;'n'
  2566  00F56A  75                 	db	117	;'u'
  2567  00F56B  6D                 	db	109	;'m'
  2568  00F56C  62                 	db	98	;'b'
  2569  00F56D  65                 	db	101	;'e'
  2570  00F56E  72                 	db	114	;'r'
  2571  00F56F  20                 	db	32
  2572  00F570  65                 	db	101	;'e'
  2573  00F571  6E                 	db	110	;'n'
  2574  00F572  74                 	db	116	;'t'
  2575  00F573  65                 	db	101	;'e'
  2576  00F574  72                 	db	114	;'r'
  2577  00F575  65                 	db	101	;'e'
  2578  00F576  64                 	db	100	;'d'
  2579  00F577  0D                 	db	13
  2580  00F578  0A                 	db	10
  2581  00F579  00                 	db	0
  2582  00F57A                     STR_89:
  2583  00F57A  69                 	db	105	;'i'
  2584  00F57B  2E                 	db	46
  2585  00F57C  65                 	db	101	;'e'
  2586  00F57D  2E                 	db	46
  2587  00F57E  20                 	db	32
  2588  00F57F  4C                 	db	76	;'L'
  2589  00F580  69                 	db	105	;'i'
  2590  00F581  76                 	db	118	;'v'
  2591  00F582  69                 	db	105	;'i'
  2592  00F583  6E                 	db	110	;'n'
  2593  00F584  67                 	db	103	;'g'
  2594  00F585  72                 	db	114	;'r'
  2595  00F586  6F                 	db	111	;'o'
  2596  00F587  6F                 	db	111	;'o'
  2597  00F588  6D                 	db	109	;'m'
  2598  00F589  20                 	db	32
  2599  00F58A  66                 	db	102	;'f'
  2600  00F58B  61                 	db	97	;'a'
  2601  00F58C  6E                 	db	110	;'n'
  2602  00F58D  20                 	db	32
  2603  00F58E  3D                 	db	61	;'='
  2604  00F58F  20                 	db	32
  2605  00F590  4F                 	db	79	;'O'
  2606  00F591  6E                 	db	110	;'n'
  2607  00F592  0D                 	db	13
  2608  00F593  0A                 	db	10
  2609  00F594  00                 	db	0
  2610  00F595                     STR_320:
  2611  00F595  41                 	db	65	;'A'
  2612  00F596  44                 	db	68	;'D'
  2613  00F597  43                 	db	67	;'C'
  2614  00F598  20                 	db	32
  2615  00F599  43                 	db	67	;'C'
  2616  00F59A  68                 	db	104	;'h'
  2617  00F59B  61                 	db	97	;'a'
  2618  00F59C  6E                 	db	110	;'n'
  2619  00F59D  6E                 	db	110	;'n'
  2620  00F59E  65                 	db	101	;'e'
  2621  00F59F  6C                 	db	108	;'l'
  2622  00F5A0  20                 	db	32
  2623  00F5A1  4F                 	db	79	;'O'
  2624  00F5A2  75                 	db	117	;'u'
  2625  00F5A3  74                 	db	116	;'t'
  2626  00F5A4  20                 	db	32
  2627  00F5A5  6F                 	db	111	;'o'
  2628  00F5A6  66                 	db	102	;'f'
  2629  00F5A7  20                 	db	32
  2630  00F5A8  42                 	db	66	;'B'
  2631  00F5A9  6F                 	db	111	;'o'
  2632  00F5AA  75                 	db	117	;'u'
  2633  00F5AB  6E                 	db	110	;'n'
  2634  00F5AC  64                 	db	100	;'d'
  2635  00F5AD  73                 	db	115	;'s'
  2636  00F5AE  00                 	db	0
  2637  00F5AF                     STR_191:
  2638  00F5AF  43                 	db	67	;'C'
  2639  00F5B0  6F                 	db	111	;'o'
  2640  00F5B1  6E                 	db	110	;'n'
  2641  00F5B2  74                 	db	116	;'t'
  2642  00F5B3  72                 	db	114	;'r'
  2643  00F5B4  61                 	db	97	;'a'
  2644  00F5B5  73                 	db	115	;'s'
  2645  00F5B6  74                 	db	116	;'t'
  2646  00F5B7  20                 	db	32
  2647  00F5B8  50                 	db	80	;'P'
  2648  00F5B9  57                 	db	87	;'W'
  2649  00F5BA  4D                 	db	77	;'M'
  2650  00F5BB  20                 	db	32
  2651  00F5BC  48                 	db	72	;'H'
  2652  00F5BD  65                 	db	101	;'e'
  2653  00F5BE  6C                 	db	108	;'l'
  2654  00F5BF  70                 	db	112	;'p'
  2655  00F5C0  20                 	db	32
  2656  00F5C1  4D                 	db	77	;'M'
  2657  00F5C2  65                 	db	101	;'e'
  2658  00F5C3  6E                 	db	110	;'n'
  2659  00F5C4  75                 	db	117	;'u'
  2660  00F5C5  0D                 	db	13
  2661  00F5C6  0A                 	db	10
  2662  00F5C7  0A                 	db	10
  2663  00F5C8  00                 	db	0
  2664  00F5C9                     STR_234:
  2665  00F5C9  0D                 	db	13
  2666  00F5CA  0A                 	db	10
  2667  00F5CB  54                 	db	84	;'T'
  2668  00F5CC  69                 	db	105	;'i'
  2669  00F5CD  6D                 	db	109	;'m'
  2670  00F5CE  65                 	db	101	;'e'
  2671  00F5CF  20                 	db	32
  2672  00F5D0  53                 	db	83	;'S'
  2673  00F5D1  65                 	db	101	;'e'
  2674  00F5D2  74                 	db	116	;'t'
  2675  00F5D3  20                 	db	32
  2676  00F5D4  53                 	db	83	;'S'
  2677  00F5D5  75                 	db	117	;'u'
  2678  00F5D6  63                 	db	99	;'c'
  2679  00F5D7  63                 	db	99	;'c'
  2680  00F5D8  65                 	db	101	;'e'
  2681  00F5D9  73                 	db	115	;'s'
  2682  00F5DA  73                 	db	115	;'s'
  2683  00F5DB  66                 	db	102	;'f'
  2684  00F5DC  75                 	db	117	;'u'
  2685  00F5DD  6C                 	db	108	;'l'
  2686  00F5DE  6C                 	db	108	;'l'
  2687  00F5DF  79                 	db	121	;'y'
  2688  00F5E0  0D                 	db	13
  2689  00F5E1  0A                 	db	10
  2690  00F5E2  00                 	db	0
  2691  00F5E3                     STR_174:
  2692  00F5E3  52                 	db	82	;'R'
  2693  00F5E4  65                 	db	101	;'e'
  2694  00F5E5  64                 	db	100	;'d'
  2695  00F5E6  20                 	db	32
  2696  00F5E7  4C                 	db	76	;'L'
  2697  00F5E8  45                 	db	69	;'E'
  2698  00F5E9  44                 	db	68	;'D'
  2699  00F5EA  20                 	db	32
  2700  00F5EB  50                 	db	80	;'P'
  2701  00F5EC  57                 	db	87	;'W'
  2702  00F5ED  4D                 	db	77	;'M'
  2703  00F5EE  20                 	db	32
  2704  00F5EF  48                 	db	72	;'H'
  2705  00F5F0  65                 	db	101	;'e'
  2706  00F5F1  6C                 	db	108	;'l'
  2707  00F5F2  70                 	db	112	;'p'
  2708  00F5F3  20                 	db	32
  2709  00F5F4  4D                 	db	77	;'M'
  2710  00F5F5  65                 	db	101	;'e'
  2711  00F5F6  6E                 	db	110	;'n'
  2712  00F5F7  75                 	db	117	;'u'
  2713  00F5F8  0D                 	db	13
  2714  00F5F9  0A                 	db	10
  2715  00F5FA  0A                 	db	10
  2716  00F5FB  00                 	db	0
  2717  00F5FC                     STR_237:
  2718  00F5FC  0D                 	db	13
  2719  00F5FD  0A                 	db	10
  2720  00F5FE  49                 	db	73	;'I'
  2721  00F5FF  6E                 	db	110	;'n'
  2722  00F600  76                 	db	118	;'v'
  2723  00F601  61                 	db	97	;'a'
  2724  00F602  6C                 	db	108	;'l'
  2725  00F603  69                 	db	105	;'i'
  2726  00F604  64                 	db	100	;'d'
  2727  00F605  20                 	db	32
  2728  00F606  54                 	db	84	;'T'
  2729  00F607  69                 	db	105	;'i'
  2730  00F608  6D                 	db	109	;'m'
  2731  00F609  65                 	db	101	;'e'
  2732  00F60A  20                 	db	32
  2733  00F60B  45                 	db	69	;'E'
  2734  00F60C  6E                 	db	110	;'n'
  2735  00F60D  74                 	db	116	;'t'
  2736  00F60E  65                 	db	101	;'e'
  2737  00F60F  72                 	db	114	;'r'
  2738  00F610  65                 	db	101	;'e'
  2739  00F611  64                 	db	100	;'d'
  2740  00F612  0D                 	db	13
  2741  00F613  0A                 	db	10
  2742  00F614  00                 	db	0
  2743  00F615                     STR_74:
  2744  00F615  4C                 	db	76	;'L'
  2745  00F616  69                 	db	105	;'i'
  2746  00F617  76                 	db	118	;'v'
  2747  00F618  69                 	db	105	;'i'
  2748  00F619  6E                 	db	110	;'n'
  2749  00F61A  67                 	db	103	;'g'
  2750  00F61B  72                 	db	114	;'r'
  2751  00F61C  6F                 	db	111	;'o'
  2752  00F61D  6F                 	db	111	;'o'
  2753  00F61E  6D                 	db	109	;'m'
  2754  00F61F  20                 	db	32
  2755  00F620  4C                 	db	76	;'L'
  2756  00F621  69                 	db	105	;'i'
  2757  00F622  67                 	db	103	;'g'
  2758  00F623  68                 	db	104	;'h'
  2759  00F624  74                 	db	116	;'t'
  2760  00F625  20                 	db	32
  2761  00F626  54                 	db	84	;'T'
  2762  00F627  6F                 	db	111	;'o'
  2763  00F628  67                 	db	103	;'g'
  2764  00F629  67                 	db	103	;'g'
  2765  00F62A  6C                 	db	108	;'l'
  2766  00F62B  65                 	db	101	;'e'
  2767  00F62C  64                 	db	100	;'d'
  2768  00F62D  00                 	db	0
  2769  00F62E                     STR_84:
  2770  00F62E  4C                 	db	76	;'L'
  2771  00F62F  69                 	db	105	;'i'
  2772  00F630  76                 	db	118	;'v'
  2773  00F631  69                 	db	105	;'i'
  2774  00F632  6E                 	db	110	;'n'
  2775  00F633  67                 	db	103	;'g'
  2776  00F634  72                 	db	114	;'r'
  2777  00F635  6F                 	db	111	;'o'
  2778  00F636  6F                 	db	111	;'o'
  2779  00F637  6D                 	db	109	;'m'
  2780  00F638  20                 	db	32
  2781  00F639  48                 	db	72	;'H'
  2782  00F63A  65                 	db	101	;'e'
  2783  00F63B  6C                 	db	108	;'l'
  2784  00F63C  70                 	db	112	;'p'
  2785  00F63D  20                 	db	32
  2786  00F63E  4D                 	db	77	;'M'
  2787  00F63F  65                 	db	101	;'e'
  2788  00F640  6E                 	db	110	;'n'
  2789  00F641  75                 	db	117	;'u'
  2790  00F642  0D                 	db	13
  2791  00F643  0A                 	db	10
  2792  00F644  0A                 	db	10
  2793  00F645  00                 	db	0
  2794  00F646                     STR_228:
  2795  00F646  45                 	db	69	;'E'
  2796  00F647  52                 	db	82	;'R'
  2797  00F648  52                 	db	82	;'R'
  2798  00F649  4F                 	db	79	;'O'
  2799  00F64A  52                 	db	82	;'R'
  2800  00F64B  3A                 	db	58	;':'
  2801  00F64C  20                 	db	32
  2802  00F64D  43                 	db	67	;'C'
  2803  00F64E  61                 	db	97	;'a'
  2804  00F64F  6E                 	db	110	;'n'
  2805  00F650  27                 	db	39
  2806  00F651  74                 	db	116	;'t'
  2807  00F652  20                 	db	32
  2808  00F653  52                 	db	82	;'R'
  2809  00F654  65                 	db	101	;'e'
  2810  00F655  61                 	db	97	;'a'
  2811  00F656  64                 	db	100	;'d'
  2812  00F657  20                 	db	32
  2813  00F658  52                 	db	82	;'R'
  2814  00F659  54                 	db	84	;'T'
  2815  00F65A  43                 	db	67	;'C'
  2816  00F65B  0D                 	db	13
  2817  00F65C  0A                 	db	10
  2818  00F65D  00                 	db	0
  2819  00F65E                     STR_123:
  2820  00F65E  69                 	db	105	;'i'
  2821  00F65F  2E                 	db	46
  2822  00F660  65                 	db	101	;'e'
  2823  00F661  2E                 	db	46
  2824  00F662  20                 	db	32
  2825  00F663  42                 	db	66	;'B'
  2826  00F664  65                 	db	101	;'e'
  2827  00F665  64                 	db	100	;'d'
  2828  00F666  72                 	db	114	;'r'
  2829  00F667  6F                 	db	111	;'o'
  2830  00F668  6F                 	db	111	;'o'
  2831  00F669  6D                 	db	109	;'m'
  2832  00F66A  20                 	db	32
  2833  00F66B  66                 	db	102	;'f'
  2834  00F66C  61                 	db	97	;'a'
  2835  00F66D  6E                 	db	110	;'n'
  2836  00F66E  20                 	db	32
  2837  00F66F  3D                 	db	61	;'='
  2838  00F670  20                 	db	32
  2839  00F671  4F                 	db	79	;'O'
  2840  00F672  6E                 	db	110	;'n'
  2841  00F673  0D                 	db	13
  2842  00F674  0A                 	db	10
  2843  00F675  00                 	db	0
  2844  00F676                     STR_263:
  2845  00F676  4A                 	db	74	;'J'
  2846  00F677  6F                 	db	111	;'o'
  2847  00F678  65                 	db	101	;'e'
  2848  00F679  73                 	db	115	;'s'
  2849  00F67A  20                 	db	32
  2850  00F67B  52                 	db	82	;'R'
  2851  00F67C  6F                 	db	111	;'o'
  2852  00F67D  6F                 	db	111	;'o'
  2853  00F67E  6D                 	db	109	;'m'
  2854  00F67F  20                 	db	32
  2855  00F680  48                 	db	72	;'H'
  2856  00F681  65                 	db	101	;'e'
  2857  00F682  6C                 	db	108	;'l'
  2858  00F683  70                 	db	112	;'p'
  2859  00F684  20                 	db	32
  2860  00F685  4D                 	db	77	;'M'
  2861  00F686  65                 	db	101	;'e'
  2862  00F687  6E                 	db	110	;'n'
  2863  00F688  75                 	db	117	;'u'
  2864  00F689  0D                 	db	13
  2865  00F68A  0A                 	db	10
  2866  00F68B  0A                 	db	10
  2867  00F68C  00                 	db	0
  2868  00F68D                     STR_227:
  2869  00F68D  25                 	db	37
  2870  00F68E  30                 	db	48	;'0'
  2871  00F68F  32                 	db	50	;'2'
  2872  00F690  64                 	db	100	;'d'
  2873  00F691  2F                 	db	47
  2874  00F692  25                 	db	37
  2875  00F693  30                 	db	48	;'0'
  2876  00F694  32                 	db	50	;'2'
  2877  00F695  64                 	db	100	;'d'
  2878  00F696  20                 	db	32
  2879  00F697  25                 	db	37
  2880  00F698  30                 	db	48	;'0'
  2881  00F699  32                 	db	50	;'2'
  2882  00F69A  64                 	db	100	;'d'
  2883  00F69B  3A                 	db	58	;':'
  2884  00F69C  25                 	db	37
  2885  00F69D  30                 	db	48	;'0'
  2886  00F69E  32                 	db	50	;'2'
  2887  00F69F  64                 	db	100	;'d'
  2888  00F6A0  20                 	db	32
  2889  00F6A1  41                 	db	65	;'A'
  2890  00F6A2  4D                 	db	77	;'M'
  2891  00F6A3  00                 	db	0
  2892  00F6A4                     STR_226:
  2893  00F6A4  25                 	db	37
  2894  00F6A5  30                 	db	48	;'0'
  2895  00F6A6  32                 	db	50	;'2'
  2896  00F6A7  64                 	db	100	;'d'
  2897  00F6A8  2F                 	db	47
  2898  00F6A9  25                 	db	37
  2899  00F6AA  30                 	db	48	;'0'
  2900  00F6AB  32                 	db	50	;'2'
  2901  00F6AC  64                 	db	100	;'d'
  2902  00F6AD  20                 	db	32
  2903  00F6AE  25                 	db	37
  2904  00F6AF  30                 	db	48	;'0'
  2905  00F6B0  32                 	db	50	;'2'
  2906  00F6B1  64                 	db	100	;'d'
  2907  00F6B2  3A                 	db	58	;':'
  2908  00F6B3  25                 	db	37
  2909  00F6B4  30                 	db	48	;'0'
  2910  00F6B5  32                 	db	50	;'2'
  2911  00F6B6  64                 	db	100	;'d'
  2912  00F6B7  20                 	db	32
  2913  00F6B8  50                 	db	80	;'P'
  2914  00F6B9  4D                 	db	77	;'M'
  2915  00F6BA  00                 	db	0
  2916  00F6BB                     STR_282:
  2917  00F6BB  69                 	db	105	;'i'
  2918  00F6BC  2E                 	db	46
  2919  00F6BD  65                 	db	101	;'e'
  2920  00F6BE  2E                 	db	46
  2921  00F6BF  20                 	db	32
  2922  00F6C0  20                 	db	32
  2923  00F6C1  4C                 	db	76	;'L'
  2924  00F6C2  69                 	db	105	;'i'
  2925  00F6C3  76                 	db	118	;'v'
  2926  00F6C4  69                 	db	105	;'i'
  2927  00F6C5  6E                 	db	110	;'n'
  2928  00F6C6  67                 	db	103	;'g'
  2929  00F6C7  72                 	db	114	;'r'
  2930  00F6C8  6F                 	db	111	;'o'
  2931  00F6C9  6F                 	db	111	;'o'
  2932  00F6CA  6D                 	db	109	;'m'
  2933  00F6CB  3F                 	db	63	;'?'
  2934  00F6CC  0D                 	db	13
  2935  00F6CD  0A                 	db	10
  2936  00F6CE  0D                 	db	13
  2937  00F6CF  0A                 	db	10
  2938  00F6D0  00                 	db	0
  2939  00F6D1                     STR_170:
  2940  00F6D1  44                 	db	68	;'D'
  2941  00F6D2  75                 	db	117	;'u'
  2942  00F6D3  74                 	db	116	;'t'
  2943  00F6D4  79                 	db	121	;'y'
  2944  00F6D5  63                 	db	99	;'c'
  2945  00F6D6  79                 	db	121	;'y'
  2946  00F6D7  63                 	db	99	;'c'
  2947  00F6D8  6C                 	db	108	;'l'
  2948  00F6D9  65                 	db	101	;'e'
  2949  00F6DA  20                 	db	32
  2950  00F6DB  73                 	db	115	;'s'
  2951  00F6DC  65                 	db	101	;'e'
  2952  00F6DD  74                 	db	116	;'t'
  2953  00F6DE  20                 	db	32
  2954  00F6DF  74                 	db	116	;'t'
  2955  00F6E0  6F                 	db	111	;'o'
  2956  00F6E1  20                 	db	32
  2957  00F6E2  25                 	db	37
  2958  00F6E3  64                 	db	100	;'d'
  2959  00F6E4  0D                 	db	13
  2960  00F6E5  0A                 	db	10
  2961  00F6E6  00                 	db	0
  2962  00F6E7                     STR_101:
  2963  00F6E7  42                 	db	66	;'B'
  2964  00F6E8  65                 	db	101	;'e'
  2965  00F6E9  64                 	db	100	;'d'
  2966  00F6EA  72                 	db	114	;'r'
  2967  00F6EB  6F                 	db	111	;'o'
  2968  00F6EC  6F                 	db	111	;'o'
  2969  00F6ED  6D                 	db	109	;'m'
  2970  00F6EE  20                 	db	32
  2971  00F6EF  4C                 	db	76	;'L'
  2972  00F6F0  69                 	db	105	;'i'
  2973  00F6F1  67                 	db	103	;'g'
  2974  00F6F2  68                 	db	104	;'h'
  2975  00F6F3  74                 	db	116	;'t'
  2976  00F6F4  20                 	db	32
  2977  00F6F5  54                 	db	84	;'T'
  2978  00F6F6  6F                 	db	111	;'o'
  2979  00F6F7  67                 	db	103	;'g'
  2980  00F6F8  67                 	db	103	;'g'
  2981  00F6F9  6C                 	db	108	;'l'
  2982  00F6FA  65                 	db	101	;'e'
  2983  00F6FB  64                 	db	100	;'d'
  2984  00F6FC  00                 	db	0
  2985  00F6FD                     STR_29:
  2986  00F6FD  53                 	db	83	;'S'
  2987  00F6FE  79                 	db	121	;'y'
  2988  00F6FF  73                 	db	115	;'s'
  2989  00F700  74                 	db	116	;'t'
  2990  00F701  65                 	db	101	;'e'
  2991  00F702  6D                 	db	109	;'m'
  2992  00F703  20                 	db	32
  2993  00F704  50                 	db	80	;'P'
  2994  00F705  72                 	db	114	;'r'
  2995  00F706  6F                 	db	111	;'o'
  2996  00F707  67                 	db	103	;'g'
  2997  00F708  72                 	db	114	;'r'
  2998  00F709  61                 	db	97	;'a'
  2999  00F70A  6D                 	db	109	;'m'
  3000  00F70B  20                 	db	32
  3001  00F70C  46                 	db	70	;'F'
  3002  00F70D  61                 	db	97	;'a'
  3003  00F70E  69                 	db	105	;'i'
  3004  00F70F  6C                 	db	108	;'l'
  3005  00F710  0D                 	db	13
  3006  00F711  0A                 	db	10
  3007  00F712  00                 	db	0
  3008  00F713                     STR_117:
  3009  00F713  42                 	db	66	;'B'
  3010  00F714  65                 	db	101	;'e'
  3011  00F715  64                 	db	100	;'d'
  3012  00F716  72                 	db	114	;'r'
  3013  00F717  6F                 	db	111	;'o'
  3014  00F718  6F                 	db	111	;'o'
  3015  00F719  6D                 	db	109	;'m'
  3016  00F71A  20                 	db	32
  3017  00F71B  48                 	db	72	;'H'
  3018  00F71C  65                 	db	101	;'e'
  3019  00F71D  6C                 	db	108	;'l'
  3020  00F71E  70                 	db	112	;'p'
  3021  00F71F  20                 	db	32
  3022  00F720  4D                 	db	77	;'M'
  3023  00F721  65                 	db	101	;'e'
  3024  00F722  6E                 	db	110	;'n'
  3025  00F723  75                 	db	117	;'u'
  3026  00F724  0D                 	db	13
  3027  00F725  0A                 	db	10
  3028  00F726  0A                 	db	10
  3029  00F727  00                 	db	0
  3030  00F728                     STR_247:
  3031  00F728  69                 	db	105	;'i'
  3032  00F729  2E                 	db	46
  3033  00F72A  65                 	db	101	;'e'
  3034  00F72B  2E                 	db	46
  3035  00F72C  20                 	db	32
  3036  00F72D  52                 	db	82	;'R'
  3037  00F72E  54                 	db	84	;'T'
  3038  00F72F  43                 	db	67	;'C'
  3039  00F730  20                 	db	32
  3040  00F731  53                 	db	83	;'S'
  3041  00F732  65                 	db	101	;'e'
  3042  00F733  74                 	db	116	;'t'
  3043  00F734  20                 	db	32
  3044  00F735  54                 	db	84	;'T'
  3045  00F736  69                 	db	105	;'i'
  3046  00F737  6D                 	db	109	;'m'
  3047  00F738  65                 	db	101	;'e'
  3048  00F739  3F                 	db	63	;'?'
  3049  00F73A  0D                 	db	13
  3050  00F73B  0A                 	db	10
  3051  00F73C  00                 	db	0
  3052  00F73D                     STR_311:
  3053  00F73D  42                 	db	66	;'B'
  3054  00F73E  61                 	db	97	;'a'
  3055  00F73F  75                 	db	117	;'u'
  3056  00F740  64                 	db	100	;'d'
  3057  00F741  20                 	db	32
  3058  00F742  4F                 	db	79	;'O'
  3059  00F743  75                 	db	117	;'u'
  3060  00F744  74                 	db	116	;'t'
  3061  00F745  20                 	db	32
  3062  00F746  6F                 	db	111	;'o'
  3063  00F747  66                 	db	102	;'f'
  3064  00F748  20                 	db	32
  3065  00F749  72                 	db	114	;'r'
  3066  00F74A  61                 	db	97	;'a'
  3067  00F74B  6E                 	db	110	;'n'
  3068  00F74C  67                 	db	103	;'g'
  3069  00F74D  65                 	db	101	;'e'
  3070  00F74E  0D                 	db	13
  3071  00F74F  0A                 	db	10
  3072  00F750  00                 	db	0
  3073  00F751                     STR_208:
  3074  00F751  41                 	db	65	;'A'
  3075  00F752  44                 	db	68	;'D'
  3076  00F753  43                 	db	67	;'C'
  3077  00F754  20                 	db	32
  3078  00F755  63                 	db	99	;'c'
  3079  00F756  68                 	db	104	;'h'
  3080  00F757  61                 	db	97	;'a'
  3081  00F758  6E                 	db	110	;'n'
  3082  00F759  6E                 	db	110	;'n'
  3083  00F75A  65                 	db	101	;'e'
  3084  00F75B  6C                 	db	108	;'l'
  3085  00F75C  20                 	db	32
  3086  00F75D  25                 	db	37
  3087  00F75E  64                 	db	100	;'d'
  3088  00F75F  20                 	db	32
  3089  00F760  3D                 	db	61	;'='
  3090  00F761  20                 	db	32
  3091  00F762  25                 	db	37
  3092  00F763  64                 	db	100	;'d'
  3093  00F764  00                 	db	0
  3094  00F765                     STR_259:
  3095  00F765  4A                 	db	74	;'J'
  3096  00F766  6F                 	db	111	;'o'
  3097  00F767  65                 	db	101	;'e'
  3098  00F768  73                 	db	115	;'s'
  3099  00F769  20                 	db	32
  3100  00F76A  72                 	db	114	;'r'
  3101  00F76B  6F                 	db	111	;'o'
  3102  00F76C  6F                 	db	111	;'o'
  3103  00F76D  6D                 	db	109	;'m'
  3104  00F76E  20                 	db	32
  3105  00F76F  6C                 	db	108	;'l'
  3106  00F770  69                 	db	105	;'i'
  3107  00F771  67                 	db	103	;'g'
  3108  00F772  68                 	db	104	;'h'
  3109  00F773  74                 	db	116	;'t'
  3110  00F774  20                 	db	32
  3111  00F775  4F                 	db	79	;'O'
  3112  00F776  66                 	db	102	;'f'
  3113  00F777  66                 	db	102	;'f'
  3114  00F778  00                 	db	0
  3115  00F779                     STR_73:
  3116  00F779  6C                 	db	108	;'l'
  3117  00F77A  69                 	db	105	;'i'
  3118  00F77B  76                 	db	118	;'v'
  3119  00F77C  69                 	db	105	;'i'
  3120  00F77D  6E                 	db	110	;'n'
  3121  00F77E  67                 	db	103	;'g'
  3122  00F77F  72                 	db	114	;'r'
  3123  00F780  6F                 	db	111	;'o'
  3124  00F781  6F                 	db	111	;'o'
  3125  00F782  6D                 	db	109	;'m'
  3126  00F783  6C                 	db	108	;'l'
  3127  00F784  69                 	db	105	;'i'
  3128  00F785  67                 	db	103	;'g'
  3129  00F786  68                 	db	104	;'h'
  3130  00F787  74                 	db	116	;'t'
  3131  00F788  3D                 	db	61	;'='
  3132  00F789  6F                 	db	111	;'o'
  3133  00F78A  66                 	db	102	;'f'
  3134  00F78B  66                 	db	102	;'f'
  3135  00F78C  00                 	db	0
  3136  00F78D                     STR_256:
  3137  00F78D  4A                 	db	74	;'J'
  3138  00F78E  6F                 	db	111	;'o'
  3139  00F78F  65                 	db	101	;'e'
  3140  00F790  27                 	db	39
  3141  00F791  73                 	db	115	;'s'
  3142  00F792  20                 	db	32
  3143  00F793  72                 	db	114	;'r'
  3144  00F794  6F                 	db	111	;'o'
  3145  00F795  6F                 	db	111	;'o'
  3146  00F796  6D                 	db	109	;'m'
  3147  00F797  20                 	db	32
  3148  00F798  6C                 	db	108	;'l'
  3149  00F799  69                 	db	105	;'i'
  3150  00F79A  67                 	db	103	;'g'
  3151  00F79B  68                 	db	104	;'h'
  3152  00F79C  74                 	db	116	;'t'
  3153  00F79D  20                 	db	32
  3154  00F79E  4F                 	db	79	;'O'
  3155  00F79F  6E                 	db	110	;'n'
  3156  00F7A0  00                 	db	0
  3157  00F7A1                     STR_82:
  3158  00F7A1  4C                 	db	76	;'L'
  3159  00F7A2  69                 	db	105	;'i'
  3160  00F7A3  76                 	db	118	;'v'
  3161  00F7A4  69                 	db	105	;'i'
  3162  00F7A5  6E                 	db	110	;'n'
  3163  00F7A6  67                 	db	103	;'g'
  3164  00F7A7  72                 	db	114	;'r'
  3165  00F7A8  6F                 	db	111	;'o'
  3166  00F7A9  6F                 	db	111	;'o'
  3167  00F7AA  6D                 	db	109	;'m'
  3168  00F7AB  20                 	db	32
  3169  00F7AC  54                 	db	84	;'T'
  3170  00F7AD  61                 	db	97	;'a'
  3171  00F7AE  73                 	db	115	;'s'
  3172  00F7AF  6B                 	db	107	;'k'
  3173  00F7B0  3F                 	db	63	;'?'
  3174  00F7B1  3F                 	db	63	;'?'
  3175  00F7B2  3F                 	db	63	;'?'
  3176  00F7B3  00                 	db	0
  3177  00F7B4                     STR_261:
  3178  00F7B4  4A                 	db	74	;'J'
  3179  00F7B5  6F                 	db	111	;'o'
  3180  00F7B6  65                 	db	101	;'e'
  3181  00F7B7  27                 	db	39
  3182  00F7B8  73                 	db	115	;'s'
  3183  00F7B9  20                 	db	32
  3184  00F7BA  72                 	db	114	;'r'
  3185  00F7BB  6F                 	db	111	;'o'
  3186  00F7BC  6F                 	db	111	;'o'
  3187  00F7BD  6D                 	db	109	;'m'
  3188  00F7BE  20                 	db	32
  3189  00F7BF  77                 	db	119	;'w'
  3190  00F7C0  68                 	db	104	;'h'
  3191  00F7C1  61                 	db	97	;'a'
  3192  00F7C2  74                 	db	116	;'t'
  3193  00F7C3  3F                 	db	63	;'?'
  3194  00F7C4  3F                 	db	63	;'?'
  3195  00F7C5  3F                 	db	63	;'?'
  3196  00F7C6  00                 	db	0
  3197  00F7C7                     STR_80:
  3198  00F7C7  4C                 	db	76	;'L'
  3199  00F7C8  69                 	db	105	;'i'
  3200  00F7C9  76                 	db	118	;'v'
  3201  00F7CA  69                 	db	105	;'i'
  3202  00F7CB  6E                 	db	110	;'n'
  3203  00F7CC  67                 	db	103	;'g'
  3204  00F7CD  72                 	db	114	;'r'
  3205  00F7CE  6F                 	db	111	;'o'
  3206  00F7CF  6F                 	db	111	;'o'
  3207  00F7D0  6D                 	db	109	;'m'
  3208  00F7D1  20                 	db	32
  3209  00F7D2  46                 	db	70	;'F'
  3210  00F7D3  61                 	db	97	;'a'
  3211  00F7D4  6E                 	db	110	;'n'
  3212  00F7D5  20                 	db	32
  3213  00F7D6  4F                 	db	79	;'O'
  3214  00F7D7  66                 	db	102	;'f'
  3215  00F7D8  66                 	db	102	;'f'
  3216  00F7D9  00                 	db	0
  3217  00F7DA                     STR_113:
  3218  00F7DA  42                 	db	66	;'B'
  3219  00F7DB  65                 	db	101	;'e'
  3220  00F7DC  64                 	db	100	;'d'
  3221  00F7DD  72                 	db	114	;'r'
  3222  00F7DE  6F                 	db	111	;'o'
  3223  00F7DF  6F                 	db	111	;'o'
  3224  00F7E0  6D                 	db	109	;'m'
  3225  00F7E1  20                 	db	32
  3226  00F7E2  53                 	db	83	;'S'
  3227  00F7E3  68                 	db	104	;'h'
  3228  00F7E4  61                 	db	97	;'a'
  3229  00F7E5  6B                 	db	107	;'k'
  3230  00F7E6  65                 	db	101	;'e'
  3231  00F7E7  72                 	db	114	;'r'
  3232  00F7E8  20                 	db	32
  3233  00F7E9  4F                 	db	79	;'O'
  3234  00F7EA  66                 	db	102	;'f'
  3235  00F7EB  66                 	db	102	;'f'
  3236  00F7EC  00                 	db	0
  3237  00F7ED                     STR_72:
  3238  00F7ED  6C                 	db	108	;'l'
  3239  00F7EE  69                 	db	105	;'i'
  3240  00F7EF  76                 	db	118	;'v'
  3241  00F7F0  69                 	db	105	;'i'
  3242  00F7F1  6E                 	db	110	;'n'
  3243  00F7F2  67                 	db	103	;'g'
  3244  00F7F3  72                 	db	114	;'r'
  3245  00F7F4  6F                 	db	111	;'o'
  3246  00F7F5  6F                 	db	111	;'o'
  3247  00F7F6  6D                 	db	109	;'m'
  3248  00F7F7  6C                 	db	108	;'l'
  3249  00F7F8  69                 	db	105	;'i'
  3250  00F7F9  67                 	db	103	;'g'
  3251  00F7FA  68                 	db	104	;'h'
  3252  00F7FB  74                 	db	116	;'t'
  3253  00F7FC  3D                 	db	61	;'='
  3254  00F7FD  6F                 	db	111	;'o'
  3255  00F7FE  6E                 	db	110	;'n'
  3256  00F7FF  00                 	db	0
  3257  00F800                     STR_30:
  3258  00F800  53                 	db	83	;'S'
  3259  00F801  79                 	db	121	;'y'
  3260  00F802  73                 	db	115	;'s'
  3261  00F803  74                 	db	116	;'t'
  3262  00F804  65                 	db	101	;'e'
  3263  00F805  6D                 	db	109	;'m'
  3264  00F806  20                 	db	32
  3265  00F807  42                 	db	66	;'B'
  3266  00F808  61                 	db	97	;'a'
  3267  00F809  75                 	db	117	;'u'
  3268  00F80A  64                 	db	100	;'d'
  3269  00F80B  20                 	db	32
  3270  00F80C  69                 	db	105	;'i'
  3271  00F80D  73                 	db	115	;'s'
  3272  00F80E  20                 	db	32
  3273  00F80F  25                 	db	37
  3274  00F810  6C                 	db	108	;'l'
  3275  00F811  75                 	db	117	;'u'
  3276  00F812  00                 	db	0
  3277  00F813                     STR_6:
  3278  00F813  46                 	db	70	;'F'
  3279  00F814  69                 	db	105	;'i'
  3280  00F815  72                 	db	114	;'r'
  3281  00F816  6D                 	db	109	;'m'
  3282  00F817  77                 	db	119	;'w'
  3283  00F818  61                 	db	97	;'a'
  3284  00F819  72                 	db	114	;'r'
  3285  00F81A  65                 	db	101	;'e'
  3286  00F81B  20                 	db	32
  3287  00F81C  56                 	db	86	;'V'
  3288  00F81D  65                 	db	101	;'e'
  3289  00F81E  72                 	db	114	;'r'
  3290  00F81F  73                 	db	115	;'s'
  3291  00F820  69                 	db	105	;'i'
  3292  00F821  6F                 	db	111	;'o'
  3293  00F822  6E                 	db	110	;'n'
  3294  00F823  3A                 	db	58	;':'
  3295  00F824  20                 	db	32
  3296  00F825  00                 	db	0
  3297  00F826                     STR_151:
  3298  00F826  63                 	db	99	;'c'
  3299  00F827  6F                 	db	111	;'o'
  3300  00F828  6C                 	db	108	;'l'
  3301  00F829  6F                 	db	111	;'o'
  3302  00F82A  72                 	db	114	;'r'
  3303  00F82B  65                 	db	101	;'e'
  3304  00F82C  64                 	db	100	;'d'
  3305  00F82D  20                 	db	32
  3306  00F82E  6C                 	db	108	;'l'
  3307  00F82F  69                 	db	105	;'i'
  3308  00F830  67                 	db	103	;'g'
  3309  00F831  68                 	db	104	;'h'
  3310  00F832  74                 	db	116	;'t'
  3311  00F833  73                 	db	115	;'s'
  3312  00F834  0D                 	db	13
  3313  00F835  0A                 	db	10
  3314  00F836  0A                 	db	10
  3315  00F837  00                 	db	0
  3316  00F838                     STR_315:
  3317  00F838  49                 	db	73	;'I'
  3318  00F839  6E                 	db	110	;'n'
  3319  00F83A  76                 	db	118	;'v'
  3320  00F83B  61                 	db	97	;'a'
  3321  00F83C  6C                 	db	108	;'l'
  3322  00F83D  69                 	db	105	;'i'
  3323  00F83E  64                 	db	100	;'d'
  3324  00F83F  20                 	db	32
  3325  00F840  43                 	db	67	;'C'
  3326  00F841  6F                 	db	111	;'o'
  3327  00F842  6D                 	db	109	;'m'
  3328  00F843  6D                 	db	109	;'m'
  3329  00F844  61                 	db	97	;'a'
  3330  00F845  6E                 	db	110	;'n'
  3331  00F846  64                 	db	100	;'d'
  3332  00F847  0D                 	db	13
  3333  00F848  0A                 	db	10
  3334  00F849  00                 	db	0
  3335  00F84A                     STR_146:
  3336  00F84A  43                 	db	67	;'C'
  3337  00F84B  68                 	db	104	;'h'
  3338  00F84C  72                 	db	114	;'r'
  3339  00F84D  69                 	db	105	;'i'
  3340  00F84E  73                 	db	115	;'s'
  3341  00F84F  74                 	db	116	;'t'
  3342  00F850  6D                 	db	109	;'m'
  3343  00F851  61                 	db	97	;'a'
  3344  00F852  73                 	db	115	;'s'
  3345  00F853  20                 	db	32
  3346  00F854  57                 	db	87	;'W'
  3347  00F855  68                 	db	104	;'h'
  3348  00F856  61                 	db	97	;'a'
  3349  00F857  74                 	db	116	;'t'
  3350  00F858  3F                 	db	63	;'?'
  3351  00F859  3F                 	db	63	;'?'
  3352  00F85A  3F                 	db	63	;'?'
  3353  00F85B  00                 	db	0
  3354  00F85C                     STR_79:
  3355  00F85C  6C                 	db	108	;'l'
  3356  00F85D  69                 	db	105	;'i'
  3357  00F85E  76                 	db	118	;'v'
  3358  00F85F  69                 	db	105	;'i'
  3359  00F860  6E                 	db	110	;'n'
  3360  00F861  67                 	db	103	;'g'
  3361  00F862  72                 	db	114	;'r'
  3362  00F863  6F                 	db	111	;'o'
  3363  00F864  6F                 	db	111	;'o'
  3364  00F865  6D                 	db	109	;'m'
  3365  00F866  66                 	db	102	;'f'
  3366  00F867  61                 	db	97	;'a'
  3367  00F868  6E                 	db	110	;'n'
  3368  00F869  3D                 	db	61	;'='
  3369  00F86A  6F                 	db	111	;'o'
  3370  00F86B  66                 	db	102	;'f'
  3371  00F86C  66                 	db	102	;'f'
  3372  00F86D  00                 	db	0
  3373  00F86E                     STR_112:
  3374  00F86E  62                 	db	98	;'b'
  3375  00F86F  65                 	db	101	;'e'
  3376  00F870  64                 	db	100	;'d'
  3377  00F871  72                 	db	114	;'r'
  3378  00F872  6F                 	db	111	;'o'
  3379  00F873  6F                 	db	111	;'o'
  3380  00F874  6D                 	db	109	;'m'
  3381  00F875  73                 	db	115	;'s'
  3382  00F876  68                 	db	104	;'h'
  3383  00F877  61                 	db	97	;'a'
  3384  00F878  6B                 	db	107	;'k'
  3385  00F879  65                 	db	101	;'e'
  3386  00F87A  72                 	db	114	;'r'
  3387  00F87B  3D                 	db	61	;'='
  3388  00F87C  6F                 	db	111	;'o'
  3389  00F87D  66                 	db	102	;'f'
  3390  00F87E  66                 	db	102	;'f'
  3391  00F87F  00                 	db	0
  3392  00F880                     STR_258:
  3393  00F880  6A                 	db	106	;'j'
  3394  00F881  6F                 	db	111	;'o'
  3395  00F882  65                 	db	101	;'e'
  3396  00F883  73                 	db	115	;'s'
  3397  00F884  72                 	db	114	;'r'
  3398  00F885  6F                 	db	111	;'o'
  3399  00F886  6F                 	db	111	;'o'
  3400  00F887  6D                 	db	109	;'m'
  3401  00F888  6C                 	db	108	;'l'
  3402  00F889  69                 	db	105	;'i'
  3403  00F88A  67                 	db	103	;'g'
  3404  00F88B  68                 	db	104	;'h'
  3405  00F88C  74                 	db	116	;'t'
  3406  00F88D  3D                 	db	61	;'='
  3407  00F88E  6F                 	db	111	;'o'
  3408  00F88F  66                 	db	102	;'f'
  3409  00F890  66                 	db	102	;'f'
  3410  00F891  00                 	db	0
  3411  00F892                     STR_77:
  3412  00F892  4C                 	db	76	;'L'
  3413  00F893  69                 	db	105	;'i'
  3414  00F894  76                 	db	118	;'v'
  3415  00F895  69                 	db	105	;'i'
  3416  00F896  6E                 	db	110	;'n'
  3417  00F897  67                 	db	103	;'g'
  3418  00F898  72                 	db	114	;'r'
  3419  00F899  6F                 	db	111	;'o'
  3420  00F89A  6F                 	db	111	;'o'
  3421  00F89B  6D                 	db	109	;'m'
  3422  00F89C  20                 	db	32
  3423  00F89D  46                 	db	70	;'F'
  3424  00F89E  61                 	db	97	;'a'
  3425  00F89F  6E                 	db	110	;'n'
  3426  00F8A0  20                 	db	32
  3427  00F8A1  4F                 	db	79	;'O'
  3428  00F8A2  6E                 	db	110	;'n'
  3429  00F8A3  00                 	db	0
  3430  00F8A4                     STR_110:
  3431  00F8A4  42                 	db	66	;'B'
  3432  00F8A5  65                 	db	101	;'e'
  3433  00F8A6  64                 	db	100	;'d'
  3434  00F8A7  72                 	db	114	;'r'
  3435  00F8A8  6F                 	db	111	;'o'
  3436  00F8A9  6F                 	db	111	;'o'
  3437  00F8AA  6D                 	db	109	;'m'
  3438  00F8AB  20                 	db	32
  3439  00F8AC  53                 	db	83	;'S'
  3440  00F8AD  68                 	db	104	;'h'
  3441  00F8AE  61                 	db	97	;'a'
  3442  00F8AF  6B                 	db	107	;'k'
  3443  00F8B0  65                 	db	101	;'e'
  3444  00F8B1  72                 	db	114	;'r'
  3445  00F8B2  20                 	db	32
  3446  00F8B3  4F                 	db	79	;'O'
  3447  00F8B4  6E                 	db	110	;'n'
  3448  00F8B5  00                 	db	0
  3449  00F8B6                     STR_308:
  3450  00F8B6  77                 	db	119	;'w'
  3451  00F8B7  69                 	db	105	;'i'
  3452  00F8B8  74                 	db	116	;'t'
  3453  00F8B9  68                 	db	104	;'h'
  3454  00F8BA  65                 	db	101	;'e'
  3455  00F8BB  76                 	db	118	;'v'
  3456  00F8BC  65                 	db	101	;'e'
  3457  00F8BD  6E                 	db	110	;'n'
  3458  00F8BE  70                 	db	112	;'p'
  3459  00F8BF  61                 	db	97	;'a'
  3460  00F8C0  72                 	db	114	;'r'
  3461  00F8C1  69                 	db	105	;'i'
  3462  00F8C2  74                 	db	116	;'t'
  3463  00F8C3  79                 	db	121	;'y'
  3464  00F8C4  62                 	db	98	;'b'
  3465  00F8C5  69                 	db	105	;'i'
  3466  00F8C6  74                 	db	116	;'t'
  3467  00F8C7  00                 	db	0
  3468  00F8C8                     STR_325:
  3469  00F8C8  30                 	db	48	;'0'
  3470  00F8C9  31                 	db	49	;'1'
  3471  00F8CA  32                 	db	50	;'2'
  3472  00F8CB  33                 	db	51	;'3'
  3473  00F8CC  34                 	db	52	;'4'
  3474  00F8CD  35                 	db	53	;'5'
  3475  00F8CE  36                 	db	54	;'6'
  3476  00F8CF  37                 	db	55	;'7'
  3477  00F8D0  38                 	db	56	;'8'
  3478  00F8D1  39                 	db	57	;'9'
  3479  00F8D2  41                 	db	65	;'A'
  3480  00F8D3  42                 	db	66	;'B'
  3481  00F8D4  43                 	db	67	;'C'
  3482  00F8D5  44                 	db	68	;'D'
  3483  00F8D6  45                 	db	69	;'E'
  3484  00F8D7  46                 	db	70	;'F'
  3485  00F8D8  00                 	db	0
  3486  00F8D9                     STR_326:
  3487  00F8D9  30                 	db	48	;'0'
  3488  00F8DA  31                 	db	49	;'1'
  3489  00F8DB  32                 	db	50	;'2'
  3490  00F8DC  33                 	db	51	;'3'
  3491  00F8DD  34                 	db	52	;'4'
  3492  00F8DE  35                 	db	53	;'5'
  3493  00F8DF  36                 	db	54	;'6'
  3494  00F8E0  37                 	db	55	;'7'
  3495  00F8E1  38                 	db	56	;'8'
  3496  00F8E2  39                 	db	57	;'9'
  3497  00F8E3  61                 	db	97	;'a'
  3498  00F8E4  62                 	db	98	;'b'
  3499  00F8E5  63                 	db	99	;'c'
  3500  00F8E6  64                 	db	100	;'d'
  3501  00F8E7  65                 	db	101	;'e'
  3502  00F8E8  66                 	db	102	;'f'
  3503  00F8E9  00                 	db	0
  3504  00F8EA                     STR_210:
  3505  00F8EA  41                 	db	65	;'A'
  3506  00F8EB  44                 	db	68	;'D'
  3507  00F8EC  43                 	db	67	;'C'
  3508  00F8ED  20                 	db	32
  3509  00F8EE  48                 	db	72	;'H'
  3510  00F8EF  65                 	db	101	;'e'
  3511  00F8F0  6C                 	db	108	;'l'
  3512  00F8F1  70                 	db	112	;'p'
  3513  00F8F2  20                 	db	32
  3514  00F8F3  4D                 	db	77	;'M'
  3515  00F8F4  65                 	db	101	;'e'
  3516  00F8F5  6E                 	db	110	;'n'
  3517  00F8F6  75                 	db	117	;'u'
  3518  00F8F7  0D                 	db	13
  3519  00F8F8  0A                 	db	10
  3520  00F8F9  0A                 	db	10
  3521  00F8FA  00                 	db	0
  3522  00F8FB                     STR_60:
  3523  00F8FB  4C                 	db	76	;'L'
  3524  00F8FC  45                 	db	69	;'E'
  3525  00F8FD  44                 	db	68	;'D'
  3526  00F8FE  20                 	db	32
  3527  00F8FF  48                 	db	72	;'H'
  3528  00F900  65                 	db	101	;'e'
  3529  00F901  6C                 	db	108	;'l'
  3530  00F902  70                 	db	112	;'p'
  3531  00F903  20                 	db	32
  3532  00F904  4D                 	db	77	;'M'
  3533  00F905  65                 	db	101	;'e'
  3534  00F906  6E                 	db	110	;'n'
  3535  00F907  75                 	db	117	;'u'
  3536  00F908  0D                 	db	13
  3537  00F909  0A                 	db	10
  3538  00F90A  0A                 	db	10
  3539  00F90B  00                 	db	0
  3540  00F90C                     STR_207:
  3541  00F90C  43                 	db	67	;'C'
  3542  00F90D  68                 	db	104	;'h'
  3543  00F90E  6E                 	db	110	;'n'
  3544  00F90F  6C                 	db	108	;'l'
  3545  00F910  20                 	db	32
  3546  00F911  73                 	db	115	;'s'
  3547  00F912  65                 	db	101	;'e'
  3548  00F913  74                 	db	116	;'t'
  3549  00F914  20                 	db	32
  3550  00F915  74                 	db	116	;'t'
  3551  00F916  6F                 	db	111	;'o'
  3552  00F917  20                 	db	32
  3553  00F918  25                 	db	37
  3554  00F919  64                 	db	100	;'d'
  3555  00F91A  0D                 	db	13
  3556  00F91B  0A                 	db	10
  3557  00F91C  00                 	db	0
  3558  00F91D                     STR_276:
  3559  00F91D  43                 	db	67	;'C'
  3560  00F91E  68                 	db	104	;'h'
  3561  00F91F  72                 	db	114	;'r'
  3562  00F920  69                 	db	105	;'i'
  3563  00F921  73                 	db	115	;'s'
  3564  00F922  74                 	db	116	;'t'
  3565  00F923  6D                 	db	109	;'m'
  3566  00F924  61                 	db	97	;'a'
  3567  00F925  73                 	db	115	;'s'
  3568  00F926  20                 	db	32
  3569  00F927  54                 	db	84	;'T'
  3570  00F928  72                 	db	114	;'r'
  3571  00F929  65                 	db	101	;'e'
  3572  00F92A  65                 	db	101	;'e'
  3573  00F92B  0D                 	db	13
  3574  00F92C  0A                 	db	10
  3575  00F92D  00                 	db	0
  3576  00F92E                     STR_65:
  3577  00F92E  69                 	db	105	;'i'
  3578  00F92F  2E                 	db	46
  3579  00F930  65                 	db	101	;'e'
  3580  00F931  2E                 	db	46
  3581  00F932  20                 	db	32
  3582  00F933  4C                 	db	76	;'L'
  3583  00F934  45                 	db	69	;'E'
  3584  00F935  44                 	db	68	;'D'
  3585  00F936  31                 	db	49	;'1'
  3586  00F937  20                 	db	32
  3587  00F938  3D                 	db	61	;'='
  3588  00F939  20                 	db	32
  3589  00F93A  4F                 	db	79	;'O'
  3590  00F93B  6E                 	db	110	;'n'
  3591  00F93C  0D                 	db	13
  3592  00F93D  0A                 	db	10
  3593  00F93E  00                 	db	0
  3594  00F93F                     STR_225:
  3595  00F93F  52                 	db	82	;'R'
  3596  00F940  54                 	db	84	;'T'
  3597  00F941  43                 	db	67	;'C'
  3598  00F942  20                 	db	32
  3599  00F943  54                 	db	84	;'T'
  3600  00F944  69                 	db	105	;'i'
  3601  00F945  6D                 	db	109	;'m'
  3602  00F946  65                 	db	101	;'e'
  3603  00F947  20                 	db	32
  3604  00F948  69                 	db	105	;'i'
  3605  00F949  73                 	db	115	;'s'
  3606  00F94A  3A                 	db	58	;':'
  3607  00F94B  20                 	db	32
  3608  00F94C  20                 	db	32
  3609  00F94D  20                 	db	32
  3610  00F94E  20                 	db	32
  3611  00F94F  00                 	db	0
  3612  00F950                     STR_100:
  3613  00F950  62                 	db	98	;'b'
  3614  00F951  65                 	db	101	;'e'
  3615  00F952  64                 	db	100	;'d'
  3616  00F953  72                 	db	114	;'r'
  3617  00F954  6F                 	db	111	;'o'
  3618  00F955  6F                 	db	111	;'o'
  3619  00F956  6D                 	db	109	;'m'
  3620  00F957  6C                 	db	108	;'l'
  3621  00F958  69                 	db	105	;'i'
  3622  00F959  67                 	db	103	;'g'
  3623  00F95A  68                 	db	104	;'h'
  3624  00F95B  74                 	db	116	;'t'
  3625  00F95C  3D                 	db	61	;'='
  3626  00F95D  6F                 	db	111	;'o'
  3627  00F95E  66                 	db	102	;'f'
  3628  00F95F  66                 	db	102	;'f'
  3629  00F960  00                 	db	0
  3630  00F961                     STR_229:
  3631  00F961  52                 	db	82	;'R'
  3632  00F962  54                 	db	84	;'T'
  3633  00F963  43                 	db	67	;'C'
  3634  00F964  20                 	db	32
  3635  00F965  69                 	db	105	;'i'
  3636  00F966  73                 	db	115	;'s'
  3637  00F967  6E                 	db	110	;'n'
  3638  00F968  74                 	db	116	;'t'
  3639  00F969  20                 	db	32
  3640  00F96A  77                 	db	119	;'w'
  3641  00F96B  6F                 	db	111	;'o'
  3642  00F96C  72                 	db	114	;'r'
  3643  00F96D  6B                 	db	107	;'k'
  3644  00F96E  69                 	db	105	;'i'
  3645  00F96F  6E                 	db	110	;'n'
  3646  00F970  67                 	db	103	;'g'
  3647  00F971  00                 	db	0
  3648  00F972                     STR_76:
  3649  00F972  6C                 	db	108	;'l'
  3650  00F973  69                 	db	105	;'i'
  3651  00F974  76                 	db	118	;'v'
  3652  00F975  69                 	db	105	;'i'
  3653  00F976  6E                 	db	110	;'n'
  3654  00F977  67                 	db	103	;'g'
  3655  00F978  72                 	db	114	;'r'
  3656  00F979  6F                 	db	111	;'o'
  3657  00F97A  6F                 	db	111	;'o'
  3658  00F97B  6D                 	db	109	;'m'
  3659  00F97C  66                 	db	102	;'f'
  3660  00F97D  61                 	db	97	;'a'
  3661  00F97E  6E                 	db	110	;'n'
  3662  00F97F  3D                 	db	61	;'='
  3663  00F980  6F                 	db	111	;'o'
  3664  00F981  6E                 	db	110	;'n'
  3665  00F982  00                 	db	0
  3666  00F983                     STR_109:
  3667  00F983  62                 	db	98	;'b'
  3668  00F984  65                 	db	101	;'e'
  3669  00F985  64                 	db	100	;'d'
  3670  00F986  72                 	db	114	;'r'
  3671  00F987  6F                 	db	111	;'o'
  3672  00F988  6F                 	db	111	;'o'
  3673  00F989  6D                 	db	109	;'m'
  3674  00F98A  73                 	db	115	;'s'
  3675  00F98B  68                 	db	104	;'h'
  3676  00F98C  61                 	db	97	;'a'
  3677  00F98D  6B                 	db	107	;'k'
  3678  00F98E  65                 	db	101	;'e'
  3679  00F98F  72                 	db	114	;'r'
  3680  00F990  3D                 	db	61	;'='
  3681  00F991  6F                 	db	111	;'o'
  3682  00F992  6E                 	db	110	;'n'
  3683  00F993  00                 	db	0
  3684  00F994                     STR_255:
  3685  00F994  6A                 	db	106	;'j'
  3686  00F995  6F                 	db	111	;'o'
  3687  00F996  65                 	db	101	;'e'
  3688  00F997  73                 	db	115	;'s'
  3689  00F998  72                 	db	114	;'r'
  3690  00F999  6F                 	db	111	;'o'
  3691  00F99A  6F                 	db	111	;'o'
  3692  00F99B  6D                 	db	109	;'m'
  3693  00F99C  6C                 	db	108	;'l'
  3694  00F99D  69                 	db	105	;'i'
  3695  00F99E  67                 	db	103	;'g'
  3696  00F99F  68                 	db	104	;'h'
  3697  00F9A0  74                 	db	116	;'t'
  3698  00F9A1  3D                 	db	61	;'='
  3699  00F9A2  6F                 	db	111	;'o'
  3700  00F9A3  6E                 	db	110	;'n'
  3701  00F9A4  00                 	db	0
  3702  00F9A5                     STR_161:
  3703  00F9A5  72                 	db	114	;'r'
  3704  00F9A6  65                 	db	101	;'e'
  3705  00F9A7  64                 	db	100	;'d'
  3706  00F9A8  6C                 	db	108	;'l'
  3707  00F9A9  65                 	db	101	;'e'
  3708  00F9AA  64                 	db	100	;'d'
  3709  00F9AB  62                 	db	98	;'b'
  3710  00F9AC  72                 	db	114	;'r'
  3711  00F9AD  69                 	db	105	;'i'
  3712  00F9AE  67                 	db	103	;'g'
  3713  00F9AF  68                 	db	104	;'h'
  3714  00F9B0  74                 	db	116	;'t'
  3715  00F9B1  6E                 	db	110	;'n'
  3716  00F9B2  65                 	db	101	;'e'
  3717  00F9B3  73                 	db	115	;'s'
  3718  00F9B4  73                 	db	115	;'s'
  3719  00F9B5  00                 	db	0
  3720  00F9B6                     STR_307:
  3721  00F9B6  77                 	db	119	;'w'
  3722  00F9B7  69                 	db	105	;'i'
  3723  00F9B8  74                 	db	116	;'t'
  3724  00F9B9  68                 	db	104	;'h'
  3725  00F9BA  6F                 	db	111	;'o'
  3726  00F9BB  64                 	db	100	;'d'
  3727  00F9BC  64                 	db	100	;'d'
  3728  00F9BD  70                 	db	112	;'p'
  3729  00F9BE  61                 	db	97	;'a'
  3730  00F9BF  72                 	db	114	;'r'
  3731  00F9C0  69                 	db	105	;'i'
  3732  00F9C1  74                 	db	116	;'t'
  3733  00F9C2  79                 	db	121	;'y'
  3734  00F9C3  62                 	db	98	;'b'
  3735  00F9C4  69                 	db	105	;'i'
  3736  00F9C5  74                 	db	116	;'t'
  3737  00F9C6  00                 	db	0
  3738  00F9C7                     STR_177:
  3739  00F9C7  52                 	db	82	;'R'
  3740  00F9C8  65                 	db	101	;'e'
  3741  00F9C9  64                 	db	100	;'d'
  3742  00F9CA  20                 	db	32
  3743  00F9CB  4C                 	db	76	;'L'
  3744  00F9CC  45                 	db	69	;'E'
  3745  00F9CD  44                 	db	68	;'D'
  3746  00F9CE  20                 	db	32
  3747  00F9CF  43                 	db	67	;'C'
  3748  00F9D0  6F                 	db	111	;'o'
  3749  00F9D1  6E                 	db	110	;'n'
  3750  00F9D2  74                 	db	116	;'t'
  3751  00F9D3  72                 	db	114	;'r'
  3752  00F9D4  61                 	db	97	;'a'
  3753  00F9D5  73                 	db	115	;'s'
  3754  00F9D6  74                 	db	116	;'t'
  3755  00F9D7  00                 	db	0
  3756  00F9D8                     STR_19:
  3757  00F9D8  53                 	db	83	;'S'
  3758  00F9D9  74                 	db	116	;'t'
  3759  00F9DA  61                 	db	97	;'a'
  3760  00F9DB  72                 	db	114	;'r'
  3761  00F9DC  74                 	db	116	;'t'
  3762  00F9DD  69                 	db	105	;'i'
  3763  00F9DE  6E                 	db	110	;'n'
  3764  00F9DF  67                 	db	103	;'g'
  3765  00F9E0  2E                 	db	46
  3766  00F9E1  2E                 	db	46
  3767  00F9E2  2E                 	db	46
  3768  00F9E3  2E                 	db	46
  3769  00F9E4  2E                 	db	46
  3770  00F9E5  2E                 	db	46
  3771  00F9E6  2E                 	db	46
  3772  00F9E7  2E                 	db	46
  3773  00F9E8  00                 	db	0
  3774  00F9E9                     STR_186:
  3775  00F9E9  45                 	db	69	;'E'
  3776  00F9EA  52                 	db	82	;'R'
  3777  00F9EB  52                 	db	82	;'R'
  3778  00F9EC  3A                 	db	58	;':'
  3779  00F9ED  20                 	db	32
  3780  00F9EE  43                 	db	67	;'C'
  3781  00F9EF  4E                 	db	78	;'N'
  3782  00F9F0  53                 	db	83	;'S'
  3783  00F9F1  54                 	db	84	;'T'
  3784  00F9F2  20                 	db	32
  3785  00F9F3  3E                 	db	62	;'>'
  3786  00F9F4  20                 	db	32
  3787  00F9F5  31                 	db	49	;'1'
  3788  00F9F6  30                 	db	48	;'0'
  3789  00F9F7  30                 	db	48	;'0'
  3790  00F9F8  00                 	db	0
  3791  00F9F9                     STR_167:
  3792  00F9F9  45                 	db	69	;'E'
  3793  00F9FA  52                 	db	82	;'R'
  3794  00F9FB  52                 	db	82	;'R'
  3795  00F9FC  3A                 	db	58	;':'
  3796  00F9FD  20                 	db	32
  3797  00F9FE  44                 	db	68	;'D'
  3798  00F9FF  75                 	db	117	;'u'
  3799  00FA00  74                 	db	116	;'t'
  3800  00FA01  79                 	db	121	;'y'
  3801  00FA02  20                 	db	32
  3802  00FA03  3E                 	db	62	;'>'
  3803  00FA04  20                 	db	32
  3804  00FA05  31                 	db	49	;'1'
  3805  00FA06  30                 	db	48	;'0'
  3806  00FA07  30                 	db	48	;'0'
  3807  00FA08  00                 	db	0
  3808  00FA09                     STR_83:
  3809  00FA09  4C                 	db	76	;'L'
  3810  00FA0A  56                 	db	86	;'V'
  3811  00FA0B  4E                 	db	78	;'N'
  3812  00FA0C  47                 	db	71	;'G'
  3813  00FA0D  20                 	db	32
  3814  00FA0E  52                 	db	82	;'R'
  3815  00FA0F  6D                 	db	109	;'m'
  3816  00FA10  20                 	db	32
  3817  00FA11  54                 	db	84	;'T'
  3818  00FA12  61                 	db	97	;'a'
  3819  00FA13  73                 	db	115	;'s'
  3820  00FA14  6B                 	db	107	;'k'
  3821  00FA15  3F                 	db	63	;'?'
  3822  00FA16  3F                 	db	63	;'?'
  3823  00FA17  3F                 	db	63	;'?'
  3824  00FA18  00                 	db	0
  3825  00FA19                     STR_115:
  3826  00FA19  42                 	db	66	;'B'
  3827  00FA1A  65                 	db	101	;'e'
  3828  00FA1B  64                 	db	100	;'d'
  3829  00FA1C  72                 	db	114	;'r'
  3830  00FA1D  6F                 	db	111	;'o'
  3831  00FA1E  6F                 	db	111	;'o'
  3832  00FA1F  6D                 	db	109	;'m'
  3833  00FA20  20                 	db	32
  3834  00FA21  54                 	db	84	;'T'
  3835  00FA22  61                 	db	97	;'a'
  3836  00FA23  73                 	db	115	;'s'
  3837  00FA24  6B                 	db	107	;'k'
  3838  00FA25  3F                 	db	63	;'?'
  3839  00FA26  3F                 	db	63	;'?'
  3840  00FA27  3F                 	db	63	;'?'
  3841  00FA28  00                 	db	0
  3842  00FA29                     STR_124:
  3843  00FA29  42                 	db	66	;'B'
  3844  00FA2A  65                 	db	101	;'e'
  3845  00FA2B  64                 	db	100	;'d'
  3846  00FA2C  72                 	db	114	;'r'
  3847  00FA2D  6F                 	db	111	;'o'
  3848  00FA2E  6F                 	db	111	;'o'
  3849  00FA2F  6D                 	db	109	;'m'
  3850  00FA30  20                 	db	32
  3851  00FA31  48                 	db	72	;'H'
  3852  00FA32  65                 	db	101	;'e'
  3853  00FA33  6C                 	db	108	;'l'
  3854  00FA34  70                 	db	112	;'p'
  3855  00FA35  3F                 	db	63	;'?'
  3856  00FA36  3F                 	db	63	;'?'
  3857  00FA37  3F                 	db	63	;'?'
  3858  00FA38  00                 	db	0
  3859  00FA39                     STR_173:
  3860  00FA39  52                 	db	82	;'R'
  3861  00FA3A  65                 	db	101	;'e'
  3862  00FA3B  64                 	db	100	;'d'
  3863  00FA3C  20                 	db	32
  3864  00FA3D  4C                 	db	76	;'L'
  3865  00FA3E  45                 	db	69	;'E'
  3866  00FA3F  44                 	db	68	;'D'
  3867  00FA40  20                 	db	32
  3868  00FA41  57                 	db	87	;'W'
  3869  00FA42  68                 	db	104	;'h'
  3870  00FA43  61                 	db	97	;'a'
  3871  00FA44  74                 	db	116	;'t'
  3872  00FA45  3F                 	db	63	;'?'
  3873  00FA46  3F                 	db	63	;'?'
  3874  00FA47  3F                 	db	63	;'?'
  3875  00FA48  00                 	db	0
  3876  00FA49                     STR_262:
  3877  00FA49  4A                 	db	74	;'J'
  3878  00FA4A  6F                 	db	111	;'o'
  3879  00FA4B  65                 	db	101	;'e'
  3880  00FA4C  20                 	db	32
  3881  00FA4D  72                 	db	114	;'r'
  3882  00FA4E  6F                 	db	111	;'o'
  3883  00FA4F  6F                 	db	111	;'o'
  3884  00FA50  6D                 	db	109	;'m'
  3885  00FA51  20                 	db	32
  3886  00FA52  77                 	db	119	;'w'
  3887  00FA53  68                 	db	104	;'h'
  3888  00FA54  61                 	db	97	;'a'
  3889  00FA55  74                 	db	116	;'t'
  3890  00FA56  3F                 	db	63	;'?'
  3891  00FA57  3F                 	db	63	;'?'
  3892  00FA58  00                 	db	0
  3893  00FA59                     STR_294:
  3894  00FA59  43                 	db	67	;'C'
  3895  00FA5A  68                 	db	104	;'h'
  3896  00FA5B  72                 	db	114	;'r'
  3897  00FA5C  69                 	db	105	;'i'
  3898  00FA5D  73                 	db	115	;'s'
  3899  00FA5E  74                 	db	116	;'t'
  3900  00FA5F  6D                 	db	109	;'m'
  3901  00FA60  61                 	db	97	;'a'
  3902  00FA61  73                 	db	115	;'s'
  3903  00FA62  20                 	db	32
  3904  00FA63  54                 	db	84	;'T'
  3905  00FA64  72                 	db	114	;'r'
  3906  00FA65  65                 	db	101	;'e'
  3907  00FA66  65                 	db	101	;'e'
  3908  00FA67  3F                 	db	63	;'?'
  3909  00FA68  00                 	db	0
  3910  00FA69                     STR_137:
  3911  00FA69  58                 	db	88	;'X'
  3912  00FA6A  4D                 	db	77	;'M'
  3913  00FA6B  41                 	db	65	;'A'
  3914  00FA6C  53                 	db	83	;'S'
  3915  00FA6D  20                 	db	32
  3916  00FA6E  43                 	db	67	;'C'
  3917  00FA6F  6F                 	db	111	;'o'
  3918  00FA70  6C                 	db	108	;'l'
  3919  00FA71  6F                 	db	111	;'o'
  3920  00FA72  72                 	db	114	;'r'
  3921  00FA73  20                 	db	32
  3922  00FA74  54                 	db	84	;'T'
  3923  00FA75  47                 	db	71	;'G'
  3924  00FA76  4C                 	db	76	;'L'
  3925  00FA77  44                 	db	68	;'D'
  3926  00FA78  00                 	db	0
  3927  00FA79                     STR_75:
  3928  00FA79  4C                 	db	76	;'L'
  3929  00FA7A  56                 	db	86	;'V'
  3930  00FA7B  4E                 	db	78	;'N'
  3931  00FA7C  47                 	db	71	;'G'
  3932  00FA7D  20                 	db	32
  3933  00FA7E  52                 	db	82	;'R'
  3934  00FA7F  6D                 	db	109	;'m'
  3935  00FA80  20                 	db	32
  3936  00FA81  4C                 	db	76	;'L'
  3937  00FA82  74                 	db	116	;'t'
  3938  00FA83  20                 	db	32
  3939  00FA84  54                 	db	84	;'T'
  3940  00FA85  47                 	db	71	;'G'
  3941  00FA86  4C                 	db	76	;'L'
  3942  00FA87  44                 	db	68	;'D'
  3943  00FA88  00                 	db	0
  3944  00FA89                     STR_102:
  3945  00FA89  42                 	db	66	;'B'
  3946  00FA8A  65                 	db	101	;'e'
  3947  00FA8B  64                 	db	100	;'d'
  3948  00FA8C  72                 	db	114	;'r'
  3949  00FA8D  6F                 	db	111	;'o'
  3950  00FA8E  6F                 	db	111	;'o'
  3951  00FA8F  6D                 	db	109	;'m'
  3952  00FA90  20                 	db	32
  3953  00FA91  4C                 	db	76	;'L'
  3954  00FA92  74                 	db	116	;'t'
  3955  00FA93  20                 	db	32
  3956  00FA94  54                 	db	84	;'T'
  3957  00FA95  47                 	db	71	;'G'
  3958  00FA96  4C                 	db	76	;'L'
  3959  00FA97  44                 	db	68	;'D'
  3960  00FA98  00                 	db	0
  3961  00FA99                     STR_222:
  3962  00FA99  52                 	db	82	;'R'
  3963  00FA9A  54                 	db	84	;'T'
  3964  00FA9B  43                 	db	67	;'C'
  3965  00FA9C  20                 	db	32
  3966  00FA9D  42                 	db	66	;'B'
  3967  00FA9E  74                 	db	116	;'t'
  3968  00FA9F  79                 	db	121	;'y'
  3969  00FAA0  20                 	db	32
  3970  00FAA1  3D                 	db	61	;'='
  3971  00FAA2  20                 	db	32
  3972  00FAA3  25                 	db	37
  3973  00FAA4  64                 	db	100	;'d'
  3974  00FAA5  2E                 	db	46
  3975  00FAA6  25                 	db	37
  3976  00FAA7  64                 	db	100	;'d'
  3977  00FAA8  00                 	db	0
  3978  00FAA9                     STR_316:
  3979  00FAA9  49                 	db	73	;'I'
  3980  00FAAA  6E                 	db	110	;'n'
  3981  00FAAB  76                 	db	118	;'v'
  3982  00FAAC  61                 	db	97	;'a'
  3983  00FAAD  6C                 	db	108	;'l'
  3984  00FAAE  69                 	db	105	;'i'
  3985  00FAAF  64                 	db	100	;'d'
  3986  00FAB0  20                 	db	32
  3987  00FAB1  43                 	db	67	;'C'
  3988  00FAB2  6F                 	db	111	;'o'
  3989  00FAB3  6D                 	db	109	;'m'
  3990  00FAB4  6D                 	db	109	;'m'
  3991  00FAB5  61                 	db	97	;'a'
  3992  00FAB6  6E                 	db	110	;'n'
  3993  00FAB7  64                 	db	100	;'d'
  3994  00FAB8  00                 	db	0
  3995  00FAB9                     STR_205:
  3996  00FAB9  45                 	db	69	;'E'
  3997  00FABA  52                 	db	82	;'R'
  3998  00FABB  52                 	db	82	;'R'
  3999  00FABC  3A                 	db	58	;':'
  4000  00FABD  20                 	db	32
  4001  00FABE  43                 	db	67	;'C'
  4002  00FABF  61                 	db	97	;'a'
  4003  00FAC0  6E                 	db	110	;'n'
  4004  00FAC1  74                 	db	116	;'t'
  4005  00FAC2  20                 	db	32
  4006  00FAC3  70                 	db	112	;'p'
  4007  00FAC4  61                 	db	97	;'a'
  4008  00FAC5  72                 	db	114	;'r'
  4009  00FAC6  73                 	db	115	;'s'
  4010  00FAC7  65                 	db	101	;'e'
  4011  00FAC8  00                 	db	0
  4012  00FAC9                     STR_114:
  4013  00FAC9  42                 	db	66	;'B'
  4014  00FACA  65                 	db	101	;'e'
  4015  00FACB  64                 	db	100	;'d'
  4016  00FACC  72                 	db	114	;'r'
  4017  00FACD  6F                 	db	111	;'o'
  4018  00FACE  6F                 	db	111	;'o'
  4019  00FACF  6D                 	db	109	;'m'
  4020  00FAD0  20                 	db	32
  4021  00FAD1  53                 	db	83	;'S'
  4022  00FAD2  4B                 	db	75	;'K'
  4023  00FAD3  52                 	db	82	;'R'
  4024  00FAD4  20                 	db	32
  4025  00FAD5  4F                 	db	79	;'O'
  4026  00FAD6  66                 	db	102	;'f'
  4027  00FAD7  66                 	db	102	;'f'
  4028  00FAD8  00                 	db	0
  4029  00FAD9                     STR_107:
  4030  00FAD9  42                 	db	66	;'B'
  4031  00FADA  65                 	db	101	;'e'
  4032  00FADB  64                 	db	100	;'d'
  4033  00FADC  72                 	db	114	;'r'
  4034  00FADD  6F                 	db	111	;'o'
  4035  00FADE  6F                 	db	111	;'o'
  4036  00FADF  6D                 	db	109	;'m'
  4037  00FAE0  20                 	db	32
  4038  00FAE1  46                 	db	70	;'F'
  4039  00FAE2  61                 	db	97	;'a'
  4040  00FAE3  6E                 	db	110	;'n'
  4041  00FAE4  20                 	db	32
  4042  00FAE5  4F                 	db	79	;'O'
  4043  00FAE6  66                 	db	102	;'f'
  4044  00FAE7  66                 	db	102	;'f'
  4045  00FAE8  00                 	db	0
  4046  00FAE9                     STR_260:
  4047  00FAE9  4A                 	db	74	;'J'
  4048  00FAEA  6F                 	db	111	;'o'
  4049  00FAEB  65                 	db	101	;'e'
  4050  00FAEC  20                 	db	32
  4051  00FAED  72                 	db	114	;'r'
  4052  00FAEE  6F                 	db	111	;'o'
  4053  00FAEF  6F                 	db	111	;'o'
  4054  00FAF0  6D                 	db	109	;'m'
  4055  00FAF1  20                 	db	32
  4056  00FAF2  6C                 	db	108	;'l'
  4057  00FAF3  74                 	db	116	;'t'
  4058  00FAF4  20                 	db	32
  4059  00FAF5  4F                 	db	79	;'O'
  4060  00FAF6  66                 	db	102	;'f'
  4061  00FAF7  66                 	db	102	;'f'
  4062  00FAF8  00                 	db	0
  4063  00FAF9                     STR_203:
  4064  00FAF9  45                 	db	69	;'E'
  4065  00FAFA  52                 	db	82	;'R'
  4066  00FAFB  52                 	db	82	;'R'
  4067  00FAFC  3A                 	db	58	;':'
  4068  00FAFD  20                 	db	32
  4069  00FAFE  55                 	db	85	;'U'
  4070  00FAFF  73                 	db	115	;'s'
  4071  00FB00  65                 	db	101	;'e'
  4072  00FB01  20                 	db	32
  4073  00FB02  2B                 	db	43
  4074  00FB03  20                 	db	32
  4075  00FB04  43                 	db	67	;'C'
  4076  00FB05  68                 	db	104	;'h'
  4077  00FB06  6E                 	db	110	;'n'
  4078  00FB07  6C                 	db	108	;'l'
  4079  00FB08  00                 	db	0
  4080  00FB09                     STR_99:
  4081  00FB09  62                 	db	98	;'b'
  4082  00FB0A  65                 	db	101	;'e'
  4083  00FB0B  64                 	db	100	;'d'
  4084  00FB0C  72                 	db	114	;'r'
  4085  00FB0D  6F                 	db	111	;'o'
  4086  00FB0E  6F                 	db	111	;'o'
  4087  00FB0F  6D                 	db	109	;'m'
  4088  00FB10  6C                 	db	108	;'l'
  4089  00FB11  69                 	db	105	;'i'
  4090  00FB12  67                 	db	103	;'g'
  4091  00FB13  68                 	db	104	;'h'
  4092  00FB14  74                 	db	116	;'t'
  4093  00FB15  3D                 	db	61	;'='
  4094  00FB16  6F                 	db	111	;'o'
  4095  00FB17  6E                 	db	110	;'n'
  4096  00FB18  00                 	db	0
  4097  00FB19                     STR_301:
  4098  00FB19  62                 	db	98	;'b'
  4099  00FB1A  61                 	db	97	;'a'
  4100  00FB1B  75                 	db	117	;'u'
  4101  00FB1C  64                 	db	100	;'d'
  4102  00FB1D  77                 	db	119	;'w'
  4103  00FB1E  69                 	db	105	;'i'
  4104  00FB1F  6C                 	db	108	;'l'
  4105  00FB20  6C                 	db	108	;'l'
  4106  00FB21  62                 	db	98	;'b'
  4107  00FB22  65                 	db	101	;'e'
  4108  00FB23  73                 	db	115	;'s'
  4109  00FB24  65                 	db	101	;'e'
  4110  00FB25  74                 	db	116	;'t'
  4111  00FB26  74                 	db	116	;'t'
  4112  00FB27  6F                 	db	111	;'o'
  4113  00FB28  00                 	db	0
  4114  00FB29                     STR_90:
  4115  00FB29  4C                 	db	76	;'L'
  4116  00FB2A  56                 	db	86	;'V'
  4117  00FB2B  4E                 	db	78	;'N'
  4118  00FB2C  47                 	db	71	;'G'
  4119  00FB2D  20                 	db	32
  4120  00FB2E  52                 	db	82	;'R'
  4121  00FB2F  6D                 	db	109	;'m'
  4122  00FB30  20                 	db	32
  4123  00FB31  4C                 	db	76	;'L'
  4124  00FB32  74                 	db	116	;'t'
  4125  00FB33  20                 	db	32
  4126  00FB34  68                 	db	104	;'h'
  4127  00FB35  65                 	db	101	;'e'
  4128  00FB36  6C                 	db	108	;'l'
  4129  00FB37  70                 	db	112	;'p'
  4130  00FB38  00                 	db	0
  4131  00FB39                     STR_306:
  4132  00FB39  77                 	db	119	;'w'
  4133  00FB3A  69                 	db	105	;'i'
  4134  00FB3B  74                 	db	116	;'t'
  4135  00FB3C  68                 	db	104	;'h'
  4136  00FB3D  6E                 	db	110	;'n'
  4137  00FB3E  6F                 	db	111	;'o'
  4138  00FB3F  70                 	db	112	;'p'
  4139  00FB40  61                 	db	97	;'a'
  4140  00FB41  72                 	db	114	;'r'
  4141  00FB42  69                 	db	105	;'i'
  4142  00FB43  74                 	db	116	;'t'
  4143  00FB44  79                 	db	121	;'y'
  4144  00FB45  62                 	db	98	;'b'
  4145  00FB46  69                 	db	105	;'i'
  4146  00FB47  74                 	db	116	;'t'
  4147  00FB48  00                 	db	0
  4148  00FB49                     STR_18:
  4149  00FB49  53                 	db	83	;'S'
  4150  00FB4A  74                 	db	116	;'t'
  4151  00FB4B  61                 	db	97	;'a'
  4152  00FB4C  72                 	db	114	;'r'
  4153  00FB4D  74                 	db	116	;'t'
  4154  00FB4E  69                 	db	105	;'i'
  4155  00FB4F  6E                 	db	110	;'n'
  4156  00FB50  67                 	db	103	;'g'
  4157  00FB51  2E                 	db	46
  4158  00FB52  2E                 	db	46
  4159  00FB53  2E                 	db	46
  4160  00FB54  2E                 	db	46
  4161  00FB55  2E                 	db	46
  4162  00FB56  2E                 	db	46
  4163  00FB57  2E                 	db	46
  4164  00FB58  00                 	db	0
  4165  00FB59                     STR_283:
  4166  00FB59  43                 	db	67	;'C'
  4167  00FB5A  75                 	db	117	;'u'
  4168  00FB5B  72                 	db	114	;'r'
  4169  00FB5C  72                 	db	114	;'r'
  4170  00FB5D  65                 	db	101	;'e'
  4171  00FB5E  6E                 	db	110	;'n'
  4172  00FB5F  74                 	db	116	;'t'
  4173  00FB60  20                 	db	32
  4174  00FB61  54                 	db	84	;'T'
  4175  00FB62  69                 	db	105	;'i'
  4176  00FB63  6D                 	db	109	;'m'
  4177  00FB64  65                 	db	101	;'e'
  4178  00FB65  0D                 	db	13
  4179  00FB66  0A                 	db	10
  4180  00FB67  00                 	db	0
  4181  00FB68                     STR_150:
  4182  00FB68  77                 	db	119	;'w'
  4183  00FB69  68                 	db	104	;'h'
  4184  00FB6A  69                 	db	105	;'i'
  4185  00FB6B  74                 	db	116	;'t'
  4186  00FB6C  65                 	db	101	;'e'
  4187  00FB6D  20                 	db	32
  4188  00FB6E  6C                 	db	108	;'l'
  4189  00FB6F  69                 	db	105	;'i'
  4190  00FB70  67                 	db	103	;'g'
  4191  00FB71  68                 	db	104	;'h'
  4192  00FB72  74                 	db	116	;'t'
  4193  00FB73  73                 	db	115	;'s'
  4194  00FB74  0D                 	db	13
  4195  00FB75  0A                 	db	10
  4196  00FB76  00                 	db	0
  4197  00FB77                     STR_190:
  4198  00FB77  43                 	db	67	;'C'
  4199  00FB78  4E                 	db	78	;'N'
  4200  00FB79  53                 	db	83	;'S'
  4201  00FB7A  54                 	db	84	;'T'
  4202  00FB7B  20                 	db	32
  4203  00FB7C  73                 	db	115	;'s'
  4204  00FB7D  65                 	db	101	;'e'
  4205  00FB7E  74                 	db	116	;'t'
  4206  00FB7F  20                 	db	32
  4207  00FB80  74                 	db	116	;'t'
  4208  00FB81  6F                 	db	111	;'o'
  4209  00FB82  20                 	db	32
  4210  00FB83  25                 	db	37
  4211  00FB84  64                 	db	100	;'d'
  4212  00FB85  00                 	db	0
  4213  00FB86                     STR_171:
  4214  00FB86  44                 	db	68	;'D'
  4215  00FB87  75                 	db	117	;'u'
  4216  00FB88  74                 	db	116	;'t'
  4217  00FB89  79                 	db	121	;'y'
  4218  00FB8A  20                 	db	32
  4219  00FB8B  73                 	db	115	;'s'
  4220  00FB8C  65                 	db	101	;'e'
  4221  00FB8D  74                 	db	116	;'t'
  4222  00FB8E  20                 	db	32
  4223  00FB8F  74                 	db	116	;'t'
  4224  00FB90  6F                 	db	111	;'o'
  4225  00FB91  20                 	db	32
  4226  00FB92  25                 	db	37
  4227  00FB93  64                 	db	100	;'d'
  4228  00FB94  00                 	db	0
  4229  00FB95                     STR_145:
  4230  00FB95  58                 	db	88	;'X'
  4231  00FB96  4D                 	db	77	;'M'
  4232  00FB97  41                 	db	65	;'A'
  4233  00FB98  53                 	db	83	;'S'
  4234  00FB99  20                 	db	32
  4235  00FB9A  57                 	db	87	;'W'
  4236  00FB9B  68                 	db	104	;'h'
  4237  00FB9C  69                 	db	105	;'i'
  4238  00FB9D  74                 	db	116	;'t'
  4239  00FB9E  65                 	db	101	;'e'
  4240  00FB9F  20                 	db	32
  4241  00FBA0  4F                 	db	79	;'O'
  4242  00FBA1  66                 	db	102	;'f'
  4243  00FBA2  66                 	db	102	;'f'
  4244  00FBA3  00                 	db	0
  4245  00FBA4                     STR_81:
  4246  00FBA4  4C                 	db	76	;'L'
  4247  00FBA5  56                 	db	86	;'V'
  4248  00FBA6  4E                 	db	78	;'N'
  4249  00FBA7  47                 	db	71	;'G'
  4250  00FBA8  20                 	db	32
  4251  00FBA9  52                 	db	82	;'R'
  4252  00FBAA  6D                 	db	109	;'m'
  4253  00FBAB  20                 	db	32
  4254  00FBAC  4C                 	db	76	;'L'
  4255  00FBAD  74                 	db	116	;'t'
  4256  00FBAE  20                 	db	32
  4257  00FBAF  4F                 	db	79	;'O'
  4258  00FBB0  66                 	db	102	;'f'
  4259  00FBB1  66                 	db	102	;'f'
  4260  00FBB2  00                 	db	0
  4261  00FBB3                     STR_108:
  4262  00FBB3  42                 	db	66	;'B'
  4263  00FBB4  65                 	db	101	;'e'
  4264  00FBB5  64                 	db	100	;'d'
  4265  00FBB6  72                 	db	114	;'r'
  4266  00FBB7  6F                 	db	111	;'o'
  4267  00FBB8  6F                 	db	111	;'o'
  4268  00FBB9  6D                 	db	109	;'m'
  4269  00FBBA  20                 	db	32
  4270  00FBBB  4C                 	db	76	;'L'
  4271  00FBBC  74                 	db	116	;'t'
  4272  00FBBD  20                 	db	32
  4273  00FBBE  4F                 	db	79	;'O'
  4274  00FBBF  66                 	db	102	;'f'
  4275  00FBC0  66                 	db	102	;'f'
  4276  00FBC1  00                 	db	0
  4277  00FBC2                     STR_106:
  4278  00FBC2  62                 	db	98	;'b'
  4279  00FBC3  65                 	db	101	;'e'
  4280  00FBC4  64                 	db	100	;'d'
  4281  00FBC5  72                 	db	114	;'r'
  4282  00FBC6  6F                 	db	111	;'o'
  4283  00FBC7  6F                 	db	111	;'o'
  4284  00FBC8  6D                 	db	109	;'m'
  4285  00FBC9  66                 	db	102	;'f'
  4286  00FBCA  61                 	db	97	;'a'
  4287  00FBCB  6E                 	db	110	;'n'
  4288  00FBCC  3D                 	db	61	;'='
  4289  00FBCD  6F                 	db	111	;'o'
  4290  00FBCE  66                 	db	102	;'f'
  4291  00FBCF  66                 	db	102	;'f'
  4292  00FBD0  00                 	db	0
  4293  00FBD1                     STR_111:
  4294  00FBD1  42                 	db	66	;'B'
  4295  00FBD2  65                 	db	101	;'e'
  4296  00FBD3  64                 	db	100	;'d'
  4297  00FBD4  72                 	db	114	;'r'
  4298  00FBD5  6F                 	db	111	;'o'
  4299  00FBD6  6F                 	db	111	;'o'
  4300  00FBD7  6D                 	db	109	;'m'
  4301  00FBD8  20                 	db	32
  4302  00FBD9  53                 	db	83	;'S'
  4303  00FBDA  4B                 	db	75	;'K'
  4304  00FBDB  52                 	db	82	;'R'
  4305  00FBDC  20                 	db	32
  4306  00FBDD  4F                 	db	79	;'O'
  4307  00FBDE  6E                 	db	110	;'n'
  4308  00FBDF  00                 	db	0
  4309  00FBE0                     STR_104:
  4310  00FBE0  42                 	db	66	;'B'
  4311  00FBE1  65                 	db	101	;'e'
  4312  00FBE2  64                 	db	100	;'d'
  4313  00FBE3  72                 	db	114	;'r'
  4314  00FBE4  6F                 	db	111	;'o'
  4315  00FBE5  6F                 	db	111	;'o'
  4316  00FBE6  6D                 	db	109	;'m'
  4317  00FBE7  20                 	db	32
  4318  00FBE8  46                 	db	70	;'F'
  4319  00FBE9  61                 	db	97	;'a'
  4320  00FBEA  6E                 	db	110	;'n'
  4321  00FBEB  20                 	db	32
  4322  00FBEC  4F                 	db	79	;'O'
  4323  00FBED  6E                 	db	110	;'n'
  4324  00FBEE  00                 	db	0
  4325  00FBEF                     STR_257:
  4326  00FBEF  4A                 	db	74	;'J'
  4327  00FBF0  6F                 	db	111	;'o'
  4328  00FBF1  65                 	db	101	;'e'
  4329  00FBF2  20                 	db	32
  4330  00FBF3  72                 	db	114	;'r'
  4331  00FBF4  6F                 	db	111	;'o'
  4332  00FBF5  6F                 	db	111	;'o'
  4333  00FBF6  6D                 	db	109	;'m'
  4334  00FBF7  20                 	db	32
  4335  00FBF8  6C                 	db	108	;'l'
  4336  00FBF9  74                 	db	116	;'t'
  4337  00FBFA  20                 	db	32
  4338  00FBFB  4F                 	db	79	;'O'
  4339  00FBFC  6E                 	db	110	;'n'
  4340  00FBFD  00                 	db	0
  4341  00FBFE                     STR_184:
  4342  00FBFE  45                 	db	69	;'E'
  4343  00FBFF  52                 	db	82	;'R'
  4344  00FC00  52                 	db	82	;'R'
  4345  00FC01  3A                 	db	58	;':'
  4346  00FC02  20                 	db	32
  4347  00FC03  4E                 	db	78	;'N'
  4348  00FC04  6F                 	db	111	;'o'
  4349  00FC05  20                 	db	32
  4350  00FC06  6E                 	db	110	;'n'
  4351  00FC07  75                 	db	117	;'u'
  4352  00FC08  6D                 	db	109	;'m'
  4353  00FC09  62                 	db	98	;'b'
  4354  00FC0A  65                 	db	101	;'e'
  4355  00FC0B  72                 	db	114	;'r'
  4356  00FC0C  00                 	db	0
  4357  00FC0D                     STR_165:
  4358  00FC0D  45                 	db	69	;'E'
  4359  00FC0E  52                 	db	82	;'R'
  4360  00FC0F  52                 	db	82	;'R'
  4361  00FC10  3A                 	db	58	;':'
  4362  00FC11  20                 	db	32
  4363  00FC12  6E                 	db	110	;'n'
  4364  00FC13  6F                 	db	111	;'o'
  4365  00FC14  20                 	db	32
  4366  00FC15  6E                 	db	110	;'n'
  4367  00FC16  75                 	db	117	;'u'
  4368  00FC17  6D                 	db	109	;'m'
  4369  00FC18  62                 	db	98	;'b'
  4370  00FC19  65                 	db	101	;'e'
  4371  00FC1A  72                 	db	114	;'r'
  4372  00FC1B  00                 	db	0
  4373  00FC1C                     STR_17:
  4374  00FC1C  53                 	db	83	;'S'
  4375  00FC1D  74                 	db	116	;'t'
  4376  00FC1E  61                 	db	97	;'a'
  4377  00FC1F  72                 	db	114	;'r'
  4378  00FC20  74                 	db	116	;'t'
  4379  00FC21  69                 	db	105	;'i'
  4380  00FC22  6E                 	db	110	;'n'
  4381  00FC23  67                 	db	103	;'g'
  4382  00FC24  2E                 	db	46
  4383  00FC25  2E                 	db	46
  4384  00FC26  2E                 	db	46
  4385  00FC27  2E                 	db	46
  4386  00FC28  2E                 	db	46
  4387  00FC29  2E                 	db	46
  4388  00FC2A  00                 	db	0
  4389  00FC2B                     STR_188:
  4390  00FC2B  45                 	db	69	;'E'
  4391  00FC2C  52                 	db	82	;'R'
  4392  00FC2D  52                 	db	82	;'R'
  4393  00FC2E  3A                 	db	58	;':'
  4394  00FC2F  20                 	db	32
  4395  00FC30  43                 	db	67	;'C'
  4396  00FC31  4E                 	db	78	;'N'
  4397  00FC32  53                 	db	83	;'S'
  4398  00FC33  54                 	db	84	;'T'
  4399  00FC34  20                 	db	32
  4400  00FC35  3C                 	db	60	;'<'
  4401  00FC36  20                 	db	32
  4402  00FC37  30                 	db	48	;'0'
  4403  00FC38  00                 	db	0
  4404  00FC39                     STR_169:
  4405  00FC39  45                 	db	69	;'E'
  4406  00FC3A  52                 	db	82	;'R'
  4407  00FC3B  52                 	db	82	;'R'
  4408  00FC3C  3A                 	db	58	;':'
  4409  00FC3D  20                 	db	32
  4410  00FC3E  44                 	db	68	;'D'
  4411  00FC3F  75                 	db	117	;'u'
  4412  00FC40  74                 	db	116	;'t'
  4413  00FC41  79                 	db	121	;'y'
  4414  00FC42  20                 	db	32
  4415  00FC43  3C                 	db	60	;'<'
  4416  00FC44  20                 	db	32
  4417  00FC45  30                 	db	48	;'0'
  4418  00FC46  00                 	db	0
  4419  00FC47                     STR_290:
  4420  00FC47  44                 	db	68	;'D'
  4421  00FC48  65                 	db	101	;'e'
  4422  00FC49  76                 	db	118	;'v'
  4423  00FC4A  69                 	db	105	;'i'
  4424  00FC4B  63                 	db	99	;'c'
  4425  00FC4C  65                 	db	101	;'e'
  4426  00FC4D  20                 	db	32
  4427  00FC4E  4D                 	db	77	;'M'
  4428  00FC4F  65                 	db	101	;'e'
  4429  00FC50  6E                 	db	110	;'n'
  4430  00FC51  75                 	db	117	;'u'
  4431  00FC52  73                 	db	115	;'s'
  4432  00FC53  3A                 	db	58	;':'
  4433  00FC54  00                 	db	0
  4434  00FC55                     STR_313:
  4435  00FC55  65                 	db	101	;'e'
  4436  00FC56  6E                 	db	110	;'n'
  4437  00FC57  74                 	db	116	;'t'
  4438  00FC58  65                 	db	101	;'e'
  4439  00FC59  72                 	db	114	;'r'
  4440  00FC5A  62                 	db	98	;'b'
  4441  00FC5B  61                 	db	97	;'a'
  4442  00FC5C  75                 	db	117	;'u'
  4443  00FC5D  64                 	db	100	;'d'
  4444  00FC5E  72                 	db	114	;'r'
  4445  00FC5F  61                 	db	97	;'a'
  4446  00FC60  74                 	db	116	;'t'
  4447  00FC61  65                 	db	101	;'e'
  4448  00FC62  00                 	db	0
  4449  00FC63                     STR_141:
  4450  00FC63  58                 	db	88	;'X'
  4451  00FC64  4D                 	db	77	;'M'
  4452  00FC65  41                 	db	65	;'A'
  4453  00FC66  53                 	db	83	;'S'
  4454  00FC67  20                 	db	32
  4455  00FC68  57                 	db	87	;'W'
  4456  00FC69  68                 	db	104	;'h'
  4457  00FC6A  69                 	db	105	;'i'
  4458  00FC6B  74                 	db	116	;'t'
  4459  00FC6C  65                 	db	101	;'e'
  4460  00FC6D  20                 	db	32
  4461  00FC6E  4F                 	db	79	;'O'
  4462  00FC6F  6E                 	db	110	;'n'
  4463  00FC70  00                 	db	0
  4464  00FC71                     STR_78:
  4465  00FC71  4C                 	db	76	;'L'
  4466  00FC72  56                 	db	86	;'V'
  4467  00FC73  4E                 	db	78	;'N'
  4468  00FC74  47                 	db	71	;'G'
  4469  00FC75  20                 	db	32
  4470  00FC76  52                 	db	82	;'R'
  4471  00FC77  6D                 	db	109	;'m'
  4472  00FC78  20                 	db	32
  4473  00FC79  4C                 	db	76	;'L'
  4474  00FC7A  74                 	db	116	;'t'
  4475  00FC7B  20                 	db	32
  4476  00FC7C  4F                 	db	79	;'O'
  4477  00FC7D  6E                 	db	110	;'n'
  4478  00FC7E  00                 	db	0
  4479  00FC7F                     STR_105:
  4480  00FC7F  42                 	db	66	;'B'
  4481  00FC80  65                 	db	101	;'e'
  4482  00FC81  64                 	db	100	;'d'
  4483  00FC82  72                 	db	114	;'r'
  4484  00FC83  6F                 	db	111	;'o'
  4485  00FC84  6F                 	db	111	;'o'
  4486  00FC85  6D                 	db	109	;'m'
  4487  00FC86  20                 	db	32
  4488  00FC87  4C                 	db	76	;'L'
  4489  00FC88  74                 	db	116	;'t'
  4490  00FC89  20                 	db	32
  4491  00FC8A  4F                 	db	79	;'O'
  4492  00FC8B  6E                 	db	110	;'n'
  4493  00FC8C  00                 	db	0
  4494  00FC8D                     STR_103:
  4495  00FC8D  62                 	db	98	;'b'
  4496  00FC8E  65                 	db	101	;'e'
  4497  00FC8F  64                 	db	100	;'d'
  4498  00FC90  72                 	db	114	;'r'
  4499  00FC91  6F                 	db	111	;'o'
  4500  00FC92  6F                 	db	111	;'o'
  4501  00FC93  6D                 	db	109	;'m'
  4502  00FC94  66                 	db	102	;'f'
  4503  00FC95  61                 	db	97	;'a'
  4504  00FC96  6E                 	db	110	;'n'
  4505  00FC97  3D                 	db	61	;'='
  4506  00FC98  6F                 	db	111	;'o'
  4507  00FC99  6E                 	db	110	;'n'
  4508  00FC9A  00                 	db	0
  4509  00FC9B                     STR_268:
  4510  00FC9B  4A                 	db	74	;'J'
  4511  00FC9C  6F                 	db	111	;'o'
  4512  00FC9D  65                 	db	101	;'e'
  4513  00FC9E  20                 	db	32
  4514  00FC9F  72                 	db	114	;'r'
  4515  00FCA0  6F                 	db	111	;'o'
  4516  00FCA1  6F                 	db	111	;'o'
  4517  00FCA2  6D                 	db	109	;'m'
  4518  00FCA3  20                 	db	32
  4519  00FCA4  4D                 	db	77	;'M'
  4520  00FCA5  65                 	db	101	;'e'
  4521  00FCA6  6E                 	db	110	;'n'
  4522  00FCA7  75                 	db	117	;'u'
  4523  00FCA8  00                 	db	0
  4524  00FCA9                     STR_91:
  4525  00FCA9  4C                 	db	76	;'L'
  4526  00FCAA  56                 	db	86	;'V'
  4527  00FCAB  4E                 	db	78	;'N'
  4528  00FCAC  47                 	db	71	;'G'
  4529  00FCAD  72                 	db	114	;'r'
  4530  00FCAE  6F                 	db	111	;'o'
  4531  00FCAF  6F                 	db	111	;'o'
  4532  00FCB0  6D                 	db	109	;'m'
  4533  00FCB1  20                 	db	32
  4534  00FCB2  4D                 	db	77	;'M'
  4535  00FCB3  65                 	db	101	;'e'
  4536  00FCB4  6E                 	db	110	;'n'
  4537  00FCB5  75                 	db	117	;'u'
  4538  00FCB6  00                 	db	0
  4539  00FCB7                     STR_16:
  4540  00FCB7  53                 	db	83	;'S'
  4541  00FCB8  74                 	db	116	;'t'
  4542  00FCB9  61                 	db	97	;'a'
  4543  00FCBA  72                 	db	114	;'r'
  4544  00FCBB  74                 	db	116	;'t'
  4545  00FCBC  69                 	db	105	;'i'
  4546  00FCBD  6E                 	db	110	;'n'
  4547  00FCBE  67                 	db	103	;'g'
  4548  00FCBF  2E                 	db	46
  4549  00FCC0  2E                 	db	46
  4550  00FCC1  2E                 	db	46
  4551  00FCC2  2E                 	db	46
  4552  00FCC3  2E                 	db	46
  4553  00FCC4  00                 	db	0
  4554  00FCC5                     STR_9:
  4555  00FCC5  45                 	db	69	;'E'
  4556  00FCC6  72                 	db	114	;'r'
  4557  00FCC7  72                 	db	114	;'r'
  4558  00FCC8  3A                 	db	58	;':'
  4559  00FCC9  20                 	db	32
  4560  00FCCA  42                 	db	66	;'B'
  4561  00FCCB  61                 	db	97	;'a'
  4562  00FCCC  75                 	db	117	;'u'
  4563  00FCCD  64                 	db	100	;'d'
  4564  00FCCE  20                 	db	32
  4565  00FCCF  4D                 	db	77	;'M'
  4566  00FCD0  65                 	db	101	;'e'
  4567  00FCD1  6D                 	db	109	;'m'
  4568  00FCD2  00                 	db	0
  4569  00FCD3                     STR_214:
  4570  00FCD3  69                 	db	105	;'i'
  4571  00FCD4  2E                 	db	46
  4572  00FCD5  65                 	db	101	;'e'
  4573  00FCD6  2E                 	db	46
  4574  00FCD7  20                 	db	32
  4575  00FCD8  41                 	db	65	;'A'
  4576  00FCD9  44                 	db	68	;'D'
  4577  00FCDA  43                 	db	67	;'C'
  4578  00FCDB  20                 	db	32
  4579  00FCDC  30                 	db	48	;'0'
  4580  00FCDD  0D                 	db	13
  4581  00FCDE  0A                 	db	10
  4582  00FCDF  00                 	db	0
  4583  00FCE0                     STR_274:
  4584  00FCE0  4C                 	db	76	;'L'
  4585  00FCE1  69                 	db	105	;'i'
  4586  00FCE2  76                 	db	118	;'v'
  4587  00FCE3  69                 	db	105	;'i'
  4588  00FCE4  6E                 	db	110	;'n'
  4589  00FCE5  67                 	db	103	;'g'
  4590  00FCE6  72                 	db	114	;'r'
  4591  00FCE7  6F                 	db	111	;'o'
  4592  00FCE8  6F                 	db	111	;'o'
  4593  00FCE9  6D                 	db	109	;'m'
  4594  00FCEA  0D                 	db	13
  4595  00FCEB  0A                 	db	10
  4596  00FCEC  00                 	db	0
  4597  00FCED                     STR_239:
  4598  00FCED  52                 	db	82	;'R'
  4599  00FCEE  54                 	db	84	;'T'
  4600  00FCEF  43                 	db	67	;'C'
  4601  00FCF0  20                 	db	32
  4602  00FCF1  57                 	db	87	;'W'
  4603  00FCF2  68                 	db	104	;'h'
  4604  00FCF3  61                 	db	97	;'a'
  4605  00FCF4  74                 	db	116	;'t'
  4606  00FCF5  3F                 	db	63	;'?'
  4607  00FCF6  3F                 	db	63	;'?'
  4608  00FCF7  3F                 	db	63	;'?'
  4609  00FCF8  0A                 	db	10
  4610  00FCF9  00                 	db	0
  4611  00FCFA                     STR_201:
  4612  00FCFA  45                 	db	69	;'E'
  4613  00FCFB  52                 	db	82	;'R'
  4614  00FCFC  52                 	db	82	;'R'
  4615  00FCFD  3A                 	db	58	;':'
  4616  00FCFE  20                 	db	32
  4617  00FCFF  55                 	db	85	;'U'
  4618  00FD00  73                 	db	115	;'s'
  4619  00FD01  65                 	db	101	;'e'
  4620  00FD02  20                 	db	32
  4621  00FD03  31                 	db	49	;'1'
  4622  00FD04  20                 	db	32
  4623  00FD05  3D                 	db	61	;'='
  4624  00FD06  00                 	db	0
  4625  00FD07                     STR_147:
  4626  00FD07  58                 	db	88	;'X'
  4627  00FD08  4D                 	db	77	;'M'
  4628  00FD09  41                 	db	65	;'A'
  4629  00FD0A  53                 	db	83	;'S'
  4630  00FD0B  20                 	db	32
  4631  00FD0C  57                 	db	87	;'W'
  4632  00FD0D  68                 	db	104	;'h'
  4633  00FD0E  61                 	db	97	;'a'
  4634  00FD0F  74                 	db	116	;'t'
  4635  00FD10  3F                 	db	63	;'?'
  4636  00FD11  3F                 	db	63	;'?'
  4637  00FD12  3F                 	db	63	;'?'
  4638  00FD13  00                 	db	0
  4639  00FD14                     STR_209:
  4640  00FD14  43                 	db	67	;'C'
  4641  00FD15  68                 	db	104	;'h'
  4642  00FD16  6E                 	db	110	;'n'
  4643  00FD17  6C                 	db	108	;'l'
  4644  00FD18  20                 	db	32
  4645  00FD19  25                 	db	37
  4646  00FD1A  64                 	db	100	;'d'
  4647  00FD1B  20                 	db	32
  4648  00FD1C  3D                 	db	61	;'='
  4649  00FD1D  20                 	db	32
  4650  00FD1E  25                 	db	37
  4651  00FD1F  64                 	db	100	;'d'
  4652  00FD20  00                 	db	0
  4653  00FD21                     STR_41:
  4654  00FD21  4C                 	db	76	;'L'
  4655  00FD22  45                 	db	69	;'E'
  4656  00FD23  44                 	db	68	;'D'
  4657  00FD24  30                 	db	48	;'0'
  4658  00FD25  20                 	db	32
  4659  00FD26  54                 	db	84	;'T'
  4660  00FD27  6F                 	db	111	;'o'
  4661  00FD28  67                 	db	103	;'g'
  4662  00FD29  67                 	db	103	;'g'
  4663  00FD2A  6C                 	db	108	;'l'
  4664  00FD2B  65                 	db	101	;'e'
  4665  00FD2C  64                 	db	100	;'d'
  4666  00FD2D  00                 	db	0
  4667  00FD2E                     STR_50:
  4668  00FD2E  4C                 	db	76	;'L'
  4669  00FD2F  45                 	db	69	;'E'
  4670  00FD30  44                 	db	68	;'D'
  4671  00FD31  31                 	db	49	;'1'
  4672  00FD32  20                 	db	32
  4673  00FD33  54                 	db	84	;'T'
  4674  00FD34  6F                 	db	111	;'o'
  4675  00FD35  67                 	db	103	;'g'
  4676  00FD36  67                 	db	103	;'g'
  4677  00FD37  6C                 	db	108	;'l'
  4678  00FD38  65                 	db	101	;'e'
  4679  00FD39  64                 	db	100	;'d'
  4680  00FD3A  00                 	db	0
  4681  00FD3B                     STR_310:
  4682  00FD3B  77                 	db	119	;'w'
  4683  00FD3C  69                 	db	105	;'i'
  4684  00FD3D  74                 	db	116	;'t'
  4685  00FD3E  68                 	db	104	;'h'
  4686  00FD3F  73                 	db	115	;'s'
  4687  00FD40  70                 	db	112	;'p'
  4688  00FD41  61                 	db	97	;'a'
  4689  00FD42  63                 	db	99	;'c'
  4690  00FD43  65                 	db	101	;'e'
  4691  00FD44  62                 	db	98	;'b'
  4692  00FD45  69                 	db	105	;'i'
  4693  00FD46  74                 	db	116	;'t'
  4694  00FD47  00                 	db	0
  4695  00FD48                     STR_194:
  4696  00FD48  4C                 	db	76	;'L'
  4697  00FD49  43                 	db	67	;'C'
  4698  00FD4A  44                 	db	68	;'D'
  4699  00FD4B  20                 	db	32
  4700  00FD4C  43                 	db	67	;'C'
  4701  00FD4D  6F                 	db	111	;'o'
  4702  00FD4E  6E                 	db	110	;'n'
  4703  00FD4F  74                 	db	116	;'t'
  4704  00FD50  72                 	db	114	;'r'
  4705  00FD51  61                 	db	97	;'a'
  4706  00FD52  73                 	db	115	;'s'
  4707  00FD53  74                 	db	116	;'t'
  4708  00FD54  00                 	db	0
  4709  00FD55                     STR_125:
  4710  00FD55  42                 	db	66	;'B'
  4711  00FD56  65                 	db	101	;'e'
  4712  00FD57  64                 	db	100	;'d'
  4713  00FD58  72                 	db	114	;'r'
  4714  00FD59  6F                 	db	111	;'o'
  4715  00FD5A  6F                 	db	111	;'o'
  4716  00FD5B  6D                 	db	109	;'m'
  4717  00FD5C  20                 	db	32
  4718  00FD5D  4D                 	db	77	;'M'
  4719  00FD5E  65                 	db	101	;'e'
  4720  00FD5F  6E                 	db	110	;'n'
  4721  00FD60  75                 	db	117	;'u'
  4722  00FD61  00                 	db	0
  4723  00FD62                     STR_15:
  4724  00FD62  53                 	db	83	;'S'
  4725  00FD63  74                 	db	116	;'t'
  4726  00FD64  61                 	db	97	;'a'
  4727  00FD65  72                 	db	114	;'r'
  4728  00FD66  74                 	db	116	;'t'
  4729  00FD67  69                 	db	105	;'i'
  4730  00FD68  6E                 	db	110	;'n'
  4731  00FD69  67                 	db	103	;'g'
  4732  00FD6A  2E                 	db	46
  4733  00FD6B  2E                 	db	46
  4734  00FD6C  2E                 	db	46
  4735  00FD6D  2E                 	db	46
  4736  00FD6E  00                 	db	0
  4737  00FD6F                     STR_272:
  4738  00FD6F  44                 	db	68	;'D'
  4739  00FD70  65                 	db	101	;'e'
  4740  00FD71  76                 	db	118	;'v'
  4741  00FD72  69                 	db	105	;'i'
  4742  00FD73  63                 	db	99	;'c'
  4743  00FD74  65                 	db	101	;'e'
  4744  00FD75  73                 	db	115	;'s'
  4745  00FD76  3A                 	db	58	;':'
  4746  00FD77  0D                 	db	13
  4747  00FD78  0A                 	db	10
  4748  00FD79  0A                 	db	10
  4749  00FD7A  00                 	db	0
  4750  00FD7B                     STR_211:
  4751  00FD7B  43                 	db	67	;'C'
  4752  00FD7C  68                 	db	104	;'h'
  4753  00FD7D  61                 	db	97	;'a'
  4754  00FD7E  6E                 	db	110	;'n'
  4755  00FD7F  6E                 	db	110	;'n'
  4756  00FD80  65                 	db	101	;'e'
  4757  00FD81  6C                 	db	108	;'l'
  4758  00FD82  73                 	db	115	;'s'
  4759  00FD83  3A                 	db	58	;':'
  4760  00FD84  0D                 	db	13
  4761  00FD85  0A                 	db	10
  4762  00FD86  00                 	db	0
  4763  00FD87                     STR_275:
  4764  00FD87  4A                 	db	74	;'J'
  4765  00FD88  6F                 	db	111	;'o'
  4766  00FD89  65                 	db	101	;'e'
  4767  00FD8A  73                 	db	115	;'s'
  4768  00FD8B  20                 	db	32
  4769  00FD8C  72                 	db	114	;'r'
  4770  00FD8D  6F                 	db	111	;'o'
  4771  00FD8E  6F                 	db	111	;'o'
  4772  00FD8F  6D                 	db	109	;'m'
  4773  00FD90  0D                 	db	13
  4774  00FD91  0A                 	db	10
  4775  00FD92  00                 	db	0
  4776  00FD93                     STR_292:
  4777  00FD93  4C                 	db	76	;'L'
  4778  00FD94  69                 	db	105	;'i'
  4779  00FD95  76                 	db	118	;'v'
  4780  00FD96  69                 	db	105	;'i'
  4781  00FD97  6E                 	db	110	;'n'
  4782  00FD98  67                 	db	103	;'g'
  4783  00FD99  72                 	db	114	;'r'
  4784  00FD9A  6F                 	db	111	;'o'
  4785  00FD9B  6F                 	db	111	;'o'
  4786  00FD9C  6D                 	db	109	;'m'
  4787  00FD9D  3F                 	db	63	;'?'
  4788  00FD9E  00                 	db	0
  4789  00FD9F                     STR_309:
  4790  00FD9F  77                 	db	119	;'w'
  4791  00FDA0  69                 	db	105	;'i'
  4792  00FDA1  74                 	db	116	;'t'
  4793  00FDA2  68                 	db	104	;'h'
  4794  00FDA3  6D                 	db	109	;'m'
  4795  00FDA4  61                 	db	97	;'a'
  4796  00FDA5  72                 	db	114	;'r'
  4797  00FDA6  6B                 	db	107	;'k'
  4798  00FDA7  62                 	db	98	;'b'
  4799  00FDA8  69                 	db	105	;'i'
  4800  00FDA9  74                 	db	116	;'t'
  4801  00FDAA  00                 	db	0
  4802  00FDAB                     STR_11:
  4803  00FDAB  53                 	db	83	;'S'
  4804  00FDAC  74                 	db	116	;'t'
  4805  00FDAD  61                 	db	97	;'a'
  4806  00FDAE  72                 	db	114	;'r'
  4807  00FDAF  74                 	db	116	;'t'
  4808  00FDB0  69                 	db	105	;'i'
  4809  00FDB1  6E                 	db	110	;'n'
  4810  00FDB2  67                 	db	103	;'g'
  4811  00FDB3  2E                 	db	46
  4812  00FDB4  2E                 	db	46
  4813  00FDB5  2E                 	db	46
  4814  00FDB6  00                 	db	0
  4815  00FDB7                     STR_61:
  4816  00FDB7  44                 	db	68	;'D'
  4817  00FDB8  65                 	db	101	;'e'
  4818  00FDB9  76                 	db	118	;'v'
  4819  00FDBA  69                 	db	105	;'i'
  4820  00FDBB  63                 	db	99	;'c'
  4821  00FDBC  65                 	db	101	;'e'
  4822  00FDBD  73                 	db	115	;'s'
  4823  00FDBE  3A                 	db	58	;':'
  4824  00FDBF  0D                 	db	13
  4825  00FDC0  0A                 	db	10
  4826  00FDC1  00                 	db	0
  4827  00FDC2                     STR_241:
  4828  00FDC2  41                 	db	65	;'A'
  4829  00FDC3  63                 	db	99	;'c'
  4830  00FDC4  74                 	db	116	;'t'
  4831  00FDC5  69                 	db	105	;'i'
  4832  00FDC6  6F                 	db	111	;'o'
  4833  00FDC7  6E                 	db	110	;'n'
  4834  00FDC8  73                 	db	115	;'s'
  4835  00FDC9  3A                 	db	58	;':'
  4836  00FDCA  0D                 	db	13
  4837  00FDCB  0A                 	db	10
  4838  00FDCC  00                 	db	0
  4839  00FDCD                     STR_277:
  4840  00FDCD  43                 	db	67	;'C'
  4841  00FDCE  6F                 	db	111	;'o'
  4842  00FDCF  6E                 	db	110	;'n'
  4843  00FDD0  74                 	db	116	;'t'
  4844  00FDD1  72                 	db	114	;'r'
  4845  00FDD2  61                 	db	97	;'a'
  4846  00FDD3  73                 	db	115	;'s'
  4847  00FDD4  74                 	db	116	;'t'
  4848  00FDD5  0D                 	db	13
  4849  00FDD6  0A                 	db	10
  4850  00FDD7  00                 	db	0
  4851  00FDD8                     STR_293:
  4852  00FDD8  4A                 	db	74	;'J'
  4853  00FDD9  6F                 	db	111	;'o'
  4854  00FDDA  65                 	db	101	;'e'
  4855  00FDDB  73                 	db	115	;'s'
  4856  00FDDC  20                 	db	32
  4857  00FDDD  52                 	db	82	;'R'
  4858  00FDDE  6F                 	db	111	;'o'
  4859  00FDDF  6F                 	db	111	;'o'
  4860  00FDE0  6D                 	db	109	;'m'
  4861  00FDE1  3F                 	db	63	;'?'
  4862  00FDE2  00                 	db	0
  4863  00FDE3                     STR_304:
  4864  00FDE3  63                 	db	99	;'c'
  4865  00FDE4  68                 	db	104	;'h'
  4866  00FDE5  61                 	db	97	;'a'
  4867  00FDE6  6E                 	db	110	;'n'
  4868  00FDE7  67                 	db	103	;'g'
  4869  00FDE8  65                 	db	101	;'e'
  4870  00FDE9  62                 	db	98	;'b'
  4871  00FDEA  61                 	db	97	;'a'
  4872  00FDEB  75                 	db	117	;'u'
  4873  00FDEC  64                 	db	100	;'d'
  4874  00FDED  00                 	db	0
  4875  00FDEE                     STR_70:
  4876  00FDEE  6C                 	db	108	;'l'
  4877  00FDEF  69                 	db	105	;'i'
  4878  00FDF0  76                 	db	118	;'v'
  4879  00FDF1  69                 	db	105	;'i'
  4880  00FDF2  6E                 	db	110	;'n'
  4881  00FDF3  67                 	db	103	;'g'
  4882  00FDF4  72                 	db	114	;'r'
  4883  00FDF5  6F                 	db	111	;'o'
  4884  00FDF6  6F                 	db	111	;'o'
  4885  00FDF7  6D                 	db	109	;'m'
  4886  00FDF8  00                 	db	0
  4887  00FDF9                     STR_13:
  4888  00FDF9  53                 	db	83	;'S'
  4889  00FDFA  74                 	db	116	;'t'
  4890  00FDFB  61                 	db	97	;'a'
  4891  00FDFC  72                 	db	114	;'r'
  4892  00FDFD  74                 	db	116	;'t'
  4893  00FDFE  69                 	db	105	;'i'
  4894  00FDFF  6E                 	db	110	;'n'
  4895  00FE00  67                 	db	103	;'g'
  4896  00FE01  2E                 	db	46
  4897  00FE02  2E                 	db	46
  4898  00FE03  00                 	db	0
  4899  00FE04                     STR_121:
  4900  00FE04  73                 	db	115	;'s'
  4901  00FE05  68                 	db	104	;'h'
  4902  00FE06  61                 	db	97	;'a'
  4903  00FE07  6B                 	db	107	;'k'
  4904  00FE08  65                 	db	101	;'e'
  4905  00FE09  72                 	db	114	;'r'
  4906  00FE0A  0D                 	db	13
  4907  00FE0B  0A                 	db	10
  4908  00FE0C  0A                 	db	10
  4909  00FE0D  00                 	db	0
  4910  00FE0E                     STR_273:
  4911  00FE0E  42                 	db	66	;'B'
  4912  00FE0F  65                 	db	101	;'e'
  4913  00FE10  64                 	db	100	;'d'
  4914  00FE11  72                 	db	114	;'r'
  4915  00FE12  6F                 	db	111	;'o'
  4916  00FE13  6F                 	db	111	;'o'
  4917  00FE14  6D                 	db	109	;'m'
  4918  00FE15  0D                 	db	13
  4919  00FE16  0A                 	db	10
  4920  00FE17  00                 	db	0
  4921  00FE18                     STR_242:
  4922  00FE18  42                 	db	66	;'B'
  4923  00FE19  61                 	db	97	;'a'
  4924  00FE1A  74                 	db	116	;'t'
  4925  00FE1B  74                 	db	116	;'t'
  4926  00FE1C  65                 	db	101	;'e'
  4927  00FE1D  72                 	db	114	;'r'
  4928  00FE1E  79                 	db	121	;'y'
  4929  00FE1F  0D                 	db	13
  4930  00FE20  0A                 	db	10
  4931  00FE21  00                 	db	0
  4932  00FE22                     STR_179:
  4933  00FE22  52                 	db	82	;'R'
  4934  00FE23  65                 	db	101	;'e'
  4935  00FE24  64                 	db	100	;'d'
  4936  00FE25  20                 	db	32
  4937  00FE26  4C                 	db	76	;'L'
  4938  00FE27  45                 	db	69	;'E'
  4939  00FE28  44                 	db	68	;'D'
  4940  00FE29  3D                 	db	61	;'='
  4941  00FE2A  23                 	db	35
  4942  00FE2B  00                 	db	0
  4943  00FE2C                     STR_196:
  4944  00FE2C  43                 	db	67	;'C'
  4945  00FE2D  6F                 	db	111	;'o'
  4946  00FE2E  6E                 	db	110	;'n'
  4947  00FE2F  74                 	db	116	;'t'
  4948  00FE30  72                 	db	114	;'r'
  4949  00FE31  61                 	db	97	;'a'
  4950  00FE32  73                 	db	115	;'s'
  4951  00FE33  74                 	db	116	;'t'
  4952  00FE34  23                 	db	35
  4953  00FE35  00                 	db	0
  4954  00FE36                     STR_178:
  4955  00FE36  43                 	db	67	;'C'
  4956  00FE37  6F                 	db	111	;'o'
  4957  00FE38  6D                 	db	109	;'m'
  4958  00FE39  6D                 	db	109	;'m'
  4959  00FE3A  61                 	db	97	;'a'
  4960  00FE3B  6E                 	db	110	;'n'
  4961  00FE3C  64                 	db	100	;'d'
  4962  00FE3D  73                 	db	115	;'s'
  4963  00FE3E  3A                 	db	58	;':'
  4964  00FE3F  00                 	db	0
  4965  00FE40                     STR_295:
  4966  00FE40  43                 	db	67	;'C'
  4967  00FE41  6F                 	db	111	;'o'
  4968  00FE42  6E                 	db	110	;'n'
  4969  00FE43  74                 	db	116	;'t'
  4970  00FE44  72                 	db	114	;'r'
  4971  00FE45  61                 	db	97	;'a'
  4972  00FE46  73                 	db	115	;'s'
  4973  00FE47  74                 	db	116	;'t'
  4974  00FE48  3F                 	db	63	;'?'
  4975  00FE49  00                 	db	0
  4976  00FE4A                     STR_300:
  4977  00FE4A  42                 	db	66	;'B'
  4978  00FE4B  41                 	db	65	;'A'
  4979  00FE4C  55                 	db	85	;'U'
  4980  00FE4D  44                 	db	68	;'D'
  4981  00FE4E  20                 	db	32
  4982  00FE4F  3D                 	db	61	;'='
  4983  00FE50  20                 	db	32
  4984  00FE51  25                 	db	37
  4985  00FE52  64                 	db	100	;'d'
  4986  00FE53  00                 	db	0
  4987  00FE54                     STR_132:
  4988  00FE54  63                 	db	99	;'c'
  4989  00FE55  68                 	db	104	;'h'
  4990  00FE56  72                 	db	114	;'r'
  4991  00FE57  69                 	db	105	;'i'
  4992  00FE58  73                 	db	115	;'s'
  4993  00FE59  74                 	db	116	;'t'
  4994  00FE5A  6D                 	db	109	;'m'
  4995  00FE5B  61                 	db	97	;'a'
  4996  00FE5C  73                 	db	115	;'s'
  4997  00FE5D  00                 	db	0
  4998  00FE5E                     STR_154:
  4999  00FE5E  58                 	db	88	;'X'
  5000  00FE5F  4D                 	db	77	;'M'
  5001  00FE60  41                 	db	65	;'A'
  5002  00FE61  53                 	db	83	;'S'
  5003  00FE62  20                 	db	32
  5004  00FE63  4D                 	db	77	;'M'
  5005  00FE64  65                 	db	101	;'e'
  5006  00FE65  6E                 	db	110	;'n'
  5007  00FE66  75                 	db	117	;'u'
  5008  00FE67  00                 	db	0
  5009  00FE68                     STR_284:
  5010  00FE68  48                 	db	72	;'H'
  5011  00FE69  65                 	db	101	;'e'
  5012  00FE6A  6C                 	db	108	;'l'
  5013  00FE6B  70                 	db	112	;'p'
  5014  00FE6C  20                 	db	32
  5015  00FE6D  4D                 	db	77	;'M'
  5016  00FE6E  65                 	db	101	;'e'
  5017  00FE6F  6E                 	db	110	;'n'
  5018  00FE70  75                 	db	117	;'u'
  5019  00FE71  00                 	db	0
  5020  00FE72                     STR_20:
  5021  00FE72  45                 	db	69	;'E'
  5022  00FE73  6E                 	db	110	;'n'
  5023  00FE74  74                 	db	116	;'t'
  5024  00FE75  65                 	db	101	;'e'
  5025  00FE76  72                 	db	114	;'r'
  5026  00FE77  20                 	db	32
  5027  00FE78  27                 	db	39
  5028  00FE79  3F                 	db	63	;'?'
  5029  00FE7A  27                 	db	39
  5030  00FE7B  00                 	db	0
  5031  00FE7C                     STR_12:
  5032  00FE7C  53                 	db	83	;'S'
  5033  00FE7D  74                 	db	116	;'t'
  5034  00FE7E  61                 	db	97	;'a'
  5035  00FE7F  72                 	db	114	;'r'
  5036  00FE80  74                 	db	116	;'t'
  5037  00FE81  69                 	db	105	;'i'
  5038  00FE82  6E                 	db	110	;'n'
  5039  00FE83  67                 	db	103	;'g'
  5040  00FE84  2E                 	db	46
  5041  00FE85  00                 	db	0
  5042  00FE86                     STR_265:
  5043  00FE86  4C                 	db	76	;'L'
  5044  00FE87  69                 	db	105	;'i'
  5045  00FE88  67                 	db	103	;'g'
  5046  00FE89  68                 	db	104	;'h'
  5047  00FE8A  74                 	db	116	;'t'
  5048  00FE8B  0D                 	db	13
  5049  00FE8C  0A                 	db	10
  5050  00FE8D  0A                 	db	10
  5051  00FE8E  00                 	db	0
  5052  00FE8F                     STR_67:
  5053  00FE8F  44                 	db	68	;'D'
  5054  00FE90  65                 	db	101	;'e'
  5055  00FE91  76                 	db	118	;'v'
  5056  00FE92  69                 	db	105	;'i'
  5057  00FE93  63                 	db	99	;'c'
  5058  00FE94  65                 	db	101	;'e'
  5059  00FE95  73                 	db	115	;'s'
  5060  00FE96  3A                 	db	58	;':'
  5061  00FE97  00                 	db	0
  5062  00FE98                     STR_291:
  5063  00FE98  42                 	db	66	;'B'
  5064  00FE99  65                 	db	101	;'e'
  5065  00FE9A  64                 	db	100	;'d'
  5066  00FE9B  72                 	db	114	;'r'
  5067  00FE9C  6F                 	db	111	;'o'
  5068  00FE9D  6F                 	db	111	;'o'
  5069  00FE9E  6D                 	db	109	;'m'
  5070  00FE9F  3F                 	db	63	;'?'
  5071  00FEA0  00                 	db	0
  5072  00FEA1                     STR_47:
  5073  00FEA1  4C                 	db	76	;'L'
  5074  00FEA2  45                 	db	69	;'E'
  5075  00FEA3  44                 	db	68	;'D'
  5076  00FEA4  30                 	db	48	;'0'
  5077  00FEA5  20                 	db	32
  5078  00FEA6  4F                 	db	79	;'O'
  5079  00FEA7  66                 	db	102	;'f'
  5080  00FEA8  66                 	db	102	;'f'
  5081  00FEA9  00                 	db	0
  5082  00FEAA                     STR_56:
  5083  00FEAA  4C                 	db	76	;'L'
  5084  00FEAB  45                 	db	69	;'E'
  5085  00FEAC  44                 	db	68	;'D'
  5086  00FEAD  31                 	db	49	;'1'
  5087  00FEAE  20                 	db	32
  5088  00FEAF  4F                 	db	79	;'O'
  5089  00FEB0  66                 	db	102	;'f'
  5090  00FEB1  66                 	db	102	;'f'
  5091  00FEB2  00                 	db	0
  5092  00FEB3                     STR_46:
  5093  00FEB3  6C                 	db	108	;'l'
  5094  00FEB4  65                 	db	101	;'e'
  5095  00FEB5  64                 	db	100	;'d'
  5096  00FEB6  30                 	db	48	;'0'
  5097  00FEB7  3D                 	db	61	;'='
  5098  00FEB8  6F                 	db	111	;'o'
  5099  00FEB9  66                 	db	102	;'f'
  5100  00FEBA  66                 	db	102	;'f'
  5101  00FEBB  00                 	db	0
  5102  00FEBC                     STR_55:
  5103  00FEBC  6C                 	db	108	;'l'
  5104  00FEBD  65                 	db	101	;'e'
  5105  00FEBE  64                 	db	100	;'d'
  5106  00FEBF  31                 	db	49	;'1'
  5107  00FEC0  3D                 	db	61	;'='
  5108  00FEC1  6F                 	db	111	;'o'
  5109  00FEC2  66                 	db	102	;'f'
  5110  00FEC3  66                 	db	102	;'f'
  5111  00FEC4  00                 	db	0
  5112  00FEC5                     STR_180:
  5113  00FEC5  63                 	db	99	;'c'
  5114  00FEC6  6F                 	db	111	;'o'
  5115  00FEC7  6E                 	db	110	;'n'
  5116  00FEC8  74                 	db	116	;'t'
  5117  00FEC9  72                 	db	114	;'r'
  5118  00FECA  61                 	db	97	;'a'
  5119  00FECB  73                 	db	115	;'s'
  5120  00FECC  74                 	db	116	;'t'
  5121  00FECD  00                 	db	0
  5122  00FECE                     STR_215:
  5123  00FECE  41                 	db	65	;'A'
  5124  00FECF  44                 	db	68	;'D'
  5125  00FED0  43                 	db	67	;'C'
  5126  00FED1  20                 	db	32
  5127  00FED2  4D                 	db	77	;'M'
  5128  00FED3  65                 	db	101	;'e'
  5129  00FED4  6E                 	db	110	;'n'
  5130  00FED5  75                 	db	117	;'u'
  5131  00FED6  00                 	db	0
  5132  00FED7                     STR_248:
  5133  00FED7  52                 	db	82	;'R'
  5134  00FED8  54                 	db	84	;'T'
  5135  00FED9  43                 	db	67	;'C'
  5136  00FEDA  20                 	db	32
  5137  00FEDB  4D                 	db	77	;'M'
  5138  00FEDC  65                 	db	101	;'e'
  5139  00FEDD  6E                 	db	110	;'n'
  5140  00FEDE  75                 	db	117	;'u'
  5141  00FEDF  00                 	db	0
  5142  00FEE0                     STR_66:
  5143  00FEE0  4C                 	db	76	;'L'
  5144  00FEE1  45                 	db	69	;'E'
  5145  00FEE2  44                 	db	68	;'D'
  5146  00FEE3  20                 	db	32
  5147  00FEE4  4D                 	db	77	;'M'
  5148  00FEE5  65                 	db	101	;'e'
  5149  00FEE6  6E                 	db	110	;'n'
  5150  00FEE7  75                 	db	117	;'u'
  5151  00FEE8  00                 	db	0
  5152  00FEE9                     STR_10:
  5153  00FEE9  53                 	db	83	;'S'
  5154  00FEEA  74                 	db	116	;'t'
  5155  00FEEB  61                 	db	97	;'a'
  5156  00FEEC  72                 	db	114	;'r'
  5157  00FEED  74                 	db	116	;'t'
  5158  00FEEE  69                 	db	105	;'i'
  5159  00FEEF  6E                 	db	110	;'n'
  5160  00FEF0  67                 	db	103	;'g'
  5161  00FEF1  00                 	db	0
  5162  00FEF2                     STR_63:
  5163  00FEF2  4C                 	db	76	;'L'
  5164  00FEF3  45                 	db	69	;'E'
  5165  00FEF4  44                 	db	68	;'D'
  5166  00FEF5  31                 	db	49	;'1'
  5167  00FEF6  0D                 	db	13
  5168  00FEF7  0A                 	db	10
  5169  00FEF8  0A                 	db	10
  5170  00FEF9  00                 	db	0
  5171  00FEFA                     STR_280:
  5172  00FEFA  42                 	db	66	;'B'
  5173  00FEFB  61                 	db	97	;'a'
  5174  00FEFC  75                 	db	117	;'u'
  5175  00FEFD  64                 	db	100	;'d'
  5176  00FEFE  0D                 	db	13
  5177  00FEFF  0A                 	db	10
  5178  00FF00  0A                 	db	10
  5179  00FF01  00                 	db	0
  5180  00FF02                     STR_86:
  5181  00FF02  6C                 	db	108	;'l'
  5182  00FF03  69                 	db	105	;'i'
  5183  00FF04  67                 	db	103	;'g'
  5184  00FF05  68                 	db	104	;'h'
  5185  00FF06  74                 	db	116	;'t'
  5186  00FF07  0D                 	db	13
  5187  00FF08  0A                 	db	10
  5188  00FF09  00                 	db	0
  5189  00FF0A                     STR_303:
  5190  00FF0A  73                 	db	115	;'s'
  5191  00FF0B  65                 	db	101	;'e'
  5192  00FF0C  74                 	db	116	;'t'
  5193  00FF0D  62                 	db	98	;'b'
  5194  00FF0E  61                 	db	97	;'a'
  5195  00FF0F  75                 	db	117	;'u'
  5196  00FF10  64                 	db	100	;'d'
  5197  00FF11  00                 	db	0
  5198  00FF12                     STR_95:
  5199  00FF12  62                 	db	98	;'b'
  5200  00FF13  65                 	db	101	;'e'
  5201  00FF14  64                 	db	100	;'d'
  5202  00FF15  72                 	db	114	;'r'
  5203  00FF16  6F                 	db	111	;'o'
  5204  00FF17  6F                 	db	111	;'o'
  5205  00FF18  6D                 	db	109	;'m'
  5206  00FF19  00                 	db	0
  5207  00FF1A                     STR_44:
  5208  00FF1A  4C                 	db	76	;'L'
  5209  00FF1B  45                 	db	69	;'E'
  5210  00FF1C  44                 	db	68	;'D'
  5211  00FF1D  30                 	db	48	;'0'
  5212  00FF1E  20                 	db	32
  5213  00FF1F  4F                 	db	79	;'O'
  5214  00FF20  6E                 	db	110	;'n'
  5215  00FF21  00                 	db	0
  5216  00FF22                     STR_53:
  5217  00FF22  4C                 	db	76	;'L'
  5218  00FF23  45                 	db	69	;'E'
  5219  00FF24  44                 	db	68	;'D'
  5220  00FF25  31                 	db	49	;'1'
  5221  00FF26  20                 	db	32
  5222  00FF27  4F                 	db	79	;'O'
  5223  00FF28  6E                 	db	110	;'n'
  5224  00FF29  00                 	db	0
  5225  00FF2A                     STR_43:
  5226  00FF2A  6C                 	db	108	;'l'
  5227  00FF2B  65                 	db	101	;'e'
  5228  00FF2C  64                 	db	100	;'d'
  5229  00FF2D  30                 	db	48	;'0'
  5230  00FF2E  3D                 	db	61	;'='
  5231  00FF2F  6F                 	db	111	;'o'
  5232  00FF30  6E                 	db	110	;'n'
  5233  00FF31  00                 	db	0
  5234  00FF32                     STR_52:
  5235  00FF32  6C                 	db	108	;'l'
  5236  00FF33  65                 	db	101	;'e'
  5237  00FF34  64                 	db	100	;'d'
  5238  00FF35  31                 	db	49	;'1'
  5239  00FF36  3D                 	db	61	;'='
  5240  00FF37  6F                 	db	111	;'o'
  5241  00FF38  6E                 	db	110	;'n'
  5242  00FF39  00                 	db	0
  5243  00FF3A                     STR_302:
  5244  00FF3A  72                 	db	114	;'r'
  5245  00FF3B  65                 	db	101	;'e'
  5246  00FF3C  73                 	db	115	;'s'
  5247  00FF3D  65                 	db	101	;'e'
  5248  00FF3E  74                 	db	116	;'t'
  5249  00FF3F  74                 	db	116	;'t'
  5250  00FF40  6F                 	db	111	;'o'
  5251  00FF41  00                 	db	0
  5252  00FF42                     STR_250:
  5253  00FF42  42                 	db	66	;'B'
  5254  00FF43  61                 	db	97	;'a'
  5255  00FF44  74                 	db	116	;'t'
  5256  00FF45  74                 	db	116	;'t'
  5257  00FF46  65                 	db	101	;'e'
  5258  00FF47  72                 	db	114	;'r'
  5259  00FF48  79                 	db	121	;'y'
  5260  00FF49  00                 	db	0
  5261  00FF4A                     STR_220:
  5262  00FF4A  62                 	db	98	;'b'
  5263  00FF4B  61                 	db	97	;'a'
  5264  00FF4C  74                 	db	116	;'t'
  5265  00FF4D  74                 	db	116	;'t'
  5266  00FF4E  65                 	db	101	;'e'
  5267  00FF4F  72                 	db	114	;'r'
  5268  00FF50  79                 	db	121	;'y'
  5269  00FF51  00                 	db	0
  5270  00FF52                     STR_87:
  5271  00FF52  66                 	db	102	;'f'
  5272  00FF53  61                 	db	97	;'a'
  5273  00FF54  6E                 	db	110	;'n'
  5274  00FF55  0D                 	db	13
  5275  00FF56  0A                 	db	10
  5276  00FF57  0A                 	db	10
  5277  00FF58  00                 	db	0
  5278  00FF59                     STR_244:
  5279  00FF59  53                 	db	83	;'S'
  5280  00FF5A  65                 	db	101	;'e'
  5281  00FF5B  74                 	db	116	;'t'
  5282  00FF5C  0D                 	db	13
  5283  00FF5D  0A                 	db	10
  5284  00FF5E  0A                 	db	10
  5285  00FF5F  00                 	db	0
  5286  00FF60                     STR_62:
  5287  00FF60  4C                 	db	76	;'L'
  5288  00FF61  45                 	db	69	;'E'
  5289  00FF62  44                 	db	68	;'D'
  5290  00FF63  30                 	db	48	;'0'
  5291  00FF64  0D                 	db	13
  5292  00FF65  0A                 	db	10
  5293  00FF66  00                 	db	0
  5294  00FF67                     STR_243:
  5295  00FF67  52                 	db	82	;'R'
  5296  00FF68  65                 	db	101	;'e'
  5297  00FF69  61                 	db	97	;'a'
  5298  00FF6A  64                 	db	100	;'d'
  5299  00FF6B  0D                 	db	13
  5300  00FF6C  0A                 	db	10
  5301  00FF6D  00                 	db	0
  5302  00FF6E                     STR_160:
  5303  00FF6E  72                 	db	114	;'r'
  5304  00FF6F  65                 	db	101	;'e'
  5305  00FF70  64                 	db	100	;'d'
  5306  00FF71  6C                 	db	108	;'l'
  5307  00FF72  65                 	db	101	;'e'
  5308  00FF73  64                 	db	100	;'d'
  5309  00FF74  00                 	db	0
  5310  00FF75                     STR_129:
  5311  00FF75  53                 	db	83	;'S'
  5312  00FF76  68                 	db	104	;'h'
  5313  00FF77  61                 	db	97	;'a'
  5314  00FF78  6B                 	db	107	;'k'
  5315  00FF79  65                 	db	101	;'e'
  5316  00FF7A  72                 	db	114	;'r'
  5317  00FF7B  00                 	db	0
  5318  00FF7C                     STR_312:
  5319  00FF7C  62                 	db	98	;'b'
  5320  00FF7D  61                 	db	97	;'a'
  5321  00FF7E  75                 	db	117	;'u'
  5322  00FF7F  64                 	db	100	;'d'
  5323  00FF80  69                 	db	105	;'i'
  5324  00FF81  73                 	db	115	;'s'
  5325  00FF82  00                 	db	0
  5326  00FF83                     STR_278:
  5327  00FF83  41                 	db	65	;'A'
  5328  00FF84  44                 	db	68	;'D'
  5329  00FF85  43                 	db	67	;'C'
  5330  00FF86  0D                 	db	13
  5331  00FF87  0A                 	db	10
  5332  00FF88  00                 	db	0
  5333  00FF89                     STR_120:
  5334  00FF89  66                 	db	102	;'f'
  5335  00FF8A  61                 	db	97	;'a'
  5336  00FF8B  6E                 	db	110	;'n'
  5337  00FF8C  0D                 	db	13
  5338  00FF8D  0A                 	db	10
  5339  00FF8E  00                 	db	0
  5340  00FF8F                     STR_298:
  5341  00FF8F  42                 	db	66	;'B'
  5342  00FF90  61                 	db	97	;'a'
  5343  00FF91  75                 	db	117	;'u'
  5344  00FF92  64                 	db	100	;'d'
  5345  00FF93  3F                 	db	63	;'?'
  5346  00FF94  00                 	db	0
  5347  00FF95                     STR_299:
  5348  00FF95  62                 	db	98	;'b'
  5349  00FF96  61                 	db	97	;'a'
  5350  00FF97  75                 	db	117	;'u'
  5351  00FF98  64                 	db	100	;'d'
  5352  00FF99  3F                 	db	63	;'?'
  5353  00FF9A  00                 	db	0
  5354  00FF9B                     STR_131:
  5355  00FF9B  77                 	db	119	;'w'
  5356  00FF9C  68                 	db	104	;'h'
  5357  00FF9D  69                 	db	105	;'i'
  5358  00FF9E  74                 	db	116	;'t'
  5359  00FF9F  65                 	db	101	;'e'
  5360  00FFA0  00                 	db	0
  5361  00FFA1                     STR_130:
  5362  00FFA1  63                 	db	99	;'c'
  5363  00FFA2  6F                 	db	111	;'o'
  5364  00FFA3  6C                 	db	108	;'l'
  5365  00FFA4  6F                 	db	111	;'o'
  5366  00FFA5  72                 	db	114	;'r'
  5367  00FFA6  00                 	db	0
  5368  00FFA7                     STR_93:
  5369  00FFA7  4C                 	db	76	;'L'
  5370  00FFA8  69                 	db	105	;'i'
  5371  00FFA9  67                 	db	103	;'g'
  5372  00FFAA  68                 	db	104	;'h'
  5373  00FFAB  74                 	db	116	;'t'
  5374  00FFAC  00                 	db	0
  5375  00FFAD                     STR_97:
  5376  00FFAD  6C                 	db	108	;'l'
  5377  00FFAE  69                 	db	105	;'i'
  5378  00FFAF  67                 	db	103	;'g'
  5379  00FFB0  68                 	db	104	;'h'
  5380  00FFB1  74                 	db	116	;'t'
  5381  00FFB2  00                 	db	0
  5382  00FFB3                     STR_212:
  5383  00FFB3  30                 	db	48	;'0'
  5384  00FFB4  0D                 	db	13
  5385  00FFB5  0A                 	db	10
  5386  00FFB6  0A                 	db	10
  5387  00FFB7  00                 	db	0
  5388  00FFB8                     STR_68:
  5389  00FFB8  4C                 	db	76	;'L'
  5390  00FFB9  45                 	db	69	;'E'
  5391  00FFBA  44                 	db	68	;'D'
  5392  00FFBB  30                 	db	48	;'0'
  5393  00FFBC  00                 	db	0
  5394  00FFBD                     STR_40:
  5395  00FFBD  6C                 	db	108	;'l'
  5396  00FFBE  65                 	db	101	;'e'
  5397  00FFBF  64                 	db	100	;'d'
  5398  00FFC0  30                 	db	48	;'0'
  5399  00FFC1  00                 	db	0
  5400  00FFC2                     STR_69:
  5401  00FFC2  4C                 	db	76	;'L'
  5402  00FFC3  45                 	db	69	;'E'
  5403  00FFC4  44                 	db	68	;'D'
  5404  00FFC5  31                 	db	49	;'1'
  5405  00FFC6  00                 	db	0
  5406  00FFC7                     STR_49:
  5407  00FFC7  6C                 	db	108	;'l'
  5408  00FFC8  65                 	db	101	;'e'
  5409  00FFC9  64                 	db	100	;'d'
  5410  00FFCA  31                 	db	49	;'1'
  5411  00FFCB  00                 	db	0
  5412  00FFCC                     STR_296:
  5413  00FFCC  41                 	db	65	;'A'
  5414  00FFCD  44                 	db	68	;'D'
  5415  00FFCE  43                 	db	67	;'C'
  5416  00FFCF  3F                 	db	63	;'?'
  5417  00FFD0  00                 	db	0
  5418  00FFD1                     STR_297:
  5419  00FFD1  52                 	db	82	;'R'
  5420  00FFD2  54                 	db	84	;'T'
  5421  00FFD3  43                 	db	67	;'C'
  5422  00FFD4  3F                 	db	63	;'?'
  5423  00FFD5  00                 	db	0
  5424  00FFD6                     STR_251:
  5425  00FFD6  52                 	db	82	;'R'
  5426  00FFD7  65                 	db	101	;'e'
  5427  00FFD8  61                 	db	97	;'a'
  5428  00FFD9  64                 	db	100	;'d'
  5429  00FFDA  00                 	db	0
  5430  00FFDB                     STR_223:
  5431  00FFDB  72                 	db	114	;'r'
  5432  00FFDC  65                 	db	101	;'e'
  5433  00FFDD  61                 	db	97	;'a'
  5434  00FFDE  64                 	db	100	;'d'
  5435  00FFDF  00                 	db	0
  5436  00FFE0                     STR_197:
  5437  00FFE0  61                 	db	97	;'a'
  5438  00FFE1  64                 	db	100	;'d'
  5439  00FFE2  63                 	db	99	;'c'
  5440  00FFE3  00                 	db	0
  5441  00FFE4                     STR_218:
  5442  00FFE4  72                 	db	114	;'r'
  5443  00FFE5  74                 	db	116	;'t'
  5444  00FFE6  63                 	db	99	;'c'
  5445  00FFE7  00                 	db	0
  5446  00FFE8                     STR_253:
  5447  00FFE8  6A                 	db	106	;'j'
  5448  00FFE9  6F                 	db	111	;'o'
  5449  00FFEA  65                 	db	101	;'e'
  5450  00FFEB  00                 	db	0
  5451  00FFEC                     STR_94:
  5452  00FFEC  46                 	db	70	;'F'
  5453  00FFED  61                 	db	97	;'a'
  5454  00FFEE  6E                 	db	110	;'n'
  5455  00FFEF  00                 	db	0
  5456  00FFF0                     STR_98:
  5457  00FFF0  66                 	db	102	;'f'
  5458  00FFF1  61                 	db	97	;'a'
  5459  00FFF2  6E                 	db	110	;'n'
  5460  00FFF3  00                 	db	0
  5461  00FFF4                     STR_252:
  5462  00FFF4  53                 	db	83	;'S'
  5463  00FFF5  65                 	db	101	;'e'
  5464  00FFF6  74                 	db	116	;'t'
  5465  00FFF7  00                 	db	0
  5466  00FFF8                     STR_230:
  5467  00FFF8  73                 	db	115	;'s'
  5468  00FFF9  65                 	db	101	;'e'
  5469  00FFFA  74                 	db	116	;'t'
  5470  00FFFB  00                 	db	0
  5471  00FFFC                     STR_1:
  5472  00FFFC  0D                 	db	13
  5473  00FFFD  00                 	db	0
  5474  0000                     
  5475                           ; #config settings
  5476  00FFFE  00                 	db	0	; dummy byte at the end
  5477  0000                     
  5478                           	psect	cinit
  5479  016D6A                     __pcinit:
  5480                           	opt stack 0
  5481  016D6A                     start_initialization:
  5482                           	opt stack 0
  5483  016D6A                     __initialization:
  5484                           	opt stack 0
  5485                           
  5486                           ; Clear objects allocated to BANK5 (100 bytes)
  5487  016D6A  EE05  F000         	lfsr	0,__pbssBANK5
  5488  016D6E  0E64               	movlw	100
  5489  016D70                     clear_0:
  5490  016D70  6AEE               	clrf	postinc0,c
  5491  016D72  06E8               	decf	wreg,f,c
  5492  016D74  E1FD               	bnz	clear_0
  5493                           
  5494                           ; Clear objects allocated to BANK4 (244 bytes)
  5495  016D76  EE04  F000         	lfsr	0,__pbssBANK4
  5496  016D7A  0EF4               	movlw	244
  5497  016D7C                     clear_1:
  5498  016D7C  6AEE               	clrf	postinc0,c
  5499  016D7E  06E8               	decf	wreg,f,c
  5500  016D80  E1FD               	bnz	clear_1
  5501                           
  5502                           ; Clear objects allocated to BANK3 (164 bytes)
  5503  016D82  EE03  F000         	lfsr	0,__pbssBANK3
  5504  016D86  0EA4               	movlw	164
  5505  016D88                     clear_2:
  5506  016D88  6AEE               	clrf	postinc0,c
  5507  016D8A  06E8               	decf	wreg,f,c
  5508  016D8C  E1FD               	bnz	clear_2
  5509                           
  5510                           ; Clear objects allocated to BANK2 (16 bytes)
  5511  016D8E  EE02  F0E5         	lfsr	0,__pbssBANK2
  5512  016D92  0E10               	movlw	16
  5513  016D94                     clear_3:
  5514  016D94  6AEE               	clrf	postinc0,c
  5515  016D96  06E8               	decf	wreg,f,c
  5516  016D98  E1FD               	bnz	clear_3
  5517                           
  5518                           ; Clear objects allocated to BANK1 (100 bytes)
  5519  016D9A  EE01  F08A         	lfsr	0,__pbssBANK1
  5520  016D9E  0E64               	movlw	100
  5521  016DA0                     clear_4:
  5522  016DA0  6AEE               	clrf	postinc0,c
  5523  016DA2  06E8               	decf	wreg,f,c
  5524  016DA4  E1FD               	bnz	clear_4
  5525                           
  5526                           ; Clear objects allocated to BANK0 (11 bytes)
  5527  016DA6  EE00  F0EE         	lfsr	0,__pbssBANK0
  5528  016DAA  0E0B               	movlw	11
  5529  016DAC                     clear_5:
  5530  016DAC  6AEE               	clrf	postinc0,c
  5531  016DAE  06E8               	decf	wreg,f,c
  5532  016DB0  E1FD               	bnz	clear_5
  5533                           
  5534                           ; Clear objects allocated to COMRAM (3 bytes)
  5535  016DB2  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
  5536  016DB4  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
  5537  016DB6  6A53               	clrf	__pbssCOMRAM& (0+255),c
  5538                           
  5539                           ; Initialize objects allocated to BANK3 (20 bytes)
  5540                           ; load TBLPTR registers with __pidataBANK3
  5541  016DB8  0E88               	movlw	low __pidataBANK3
  5542  016DBA  6EF6               	movwf	tblptrl,c
  5543  016DBC  0E0E               	movlw	high __pidataBANK3
  5544  016DBE  6EF7               	movwf	tblptrh,c
  5545  016DC0  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  5546  016DC2  6EF8               	movwf	tblptru,c
  5547  016DC4  EE03  F0A4         	lfsr	0,__pdataBANK3
  5548  016DC8  EE10 F014          	lfsr	1,20
  5549  016DCC                     copy_data0:
  5550  016DCC  0009               	tblrd		*+
  5551  016DCE  CFF5 FFEE          	movff	tablat,postinc0
  5552  016DD2  50E5               	movf	postdec1,w,c
  5553  016DD4  50E1               	movf	fsr1l,w,c
  5554  016DD6  E1FA               	bnz	copy_data0
  5555                           
  5556                           ; Initialize objects allocated to BANK1 (2 bytes)
  5557                           ; load TBLPTR registers with __pidataBANK1
  5558  016DD8  0E88               	movlw	low __pidataBANK1
  5559  016DDA  6EF6               	movwf	tblptrl,c
  5560  016DDC  0E0F               	movlw	high __pidataBANK1
  5561  016DDE  6EF7               	movwf	tblptrh,c
  5562  016DE0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  5563  016DE2  6EF8               	movwf	tblptru,c
  5564  016DE4  0009               	tblrd		*+	;fetch initializer
  5565  016DE6  CFF5 F1EE          	movff	tablat,__pdataBANK1
  5566  016DEA  0009               	tblrd		*+	;fetch initializer
  5567  016DEC  CFF5 F1EF          	movff	tablat,__pdataBANK1+1
  5568                           
  5569                           ; Initialize objects allocated to COMRAM (4 bytes)
  5570                           ; load TBLPTR registers with __pidataCOMRAM
  5571  016DF0  0EFC               	movlw	low __pidataCOMRAM
  5572  016DF2  6EF6               	movwf	tblptrl,c
  5573  016DF4  0E7C               	movlw	high __pidataCOMRAM
  5574  016DF6  6EF7               	movwf	tblptrh,c
  5575  016DF8  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  5576  016DFA  6EF8               	movwf	tblptru,c
  5577  016DFC  EE00  F04F         	lfsr	0,__pdataCOMRAM
  5578  016E00  EE10 F004          	lfsr	1,4
  5579  016E04                     copy_data1:
  5580  016E04  0009               	tblrd		*+
  5581  016E06  CFF5 FFEE          	movff	tablat,postinc0
  5582  016E0A  50E5               	movf	postdec1,w,c
  5583  016E0C  50E1               	movf	fsr1l,w,c
  5584  016E0E  E1FA               	bnz	copy_data1
  5585  016E10                     end_of_initialization:
  5586                           	opt stack 0
  5587  016E10                     __end_of__initialization:
  5588                           	opt stack 0
  5589  016E10  0100               	movlb	0
  5590  016E12  EF3E  F09C         	goto	_main	;jump to C main() function
  5591                           tblptru	equ	0xFF8
  5592                           tblptrh	equ	0xFF7
  5593                           tblptrl	equ	0xFF6
  5594                           tablat	equ	0xFF5
  5595                           postinc0	equ	0xFEE
  5596                           wreg	equ	0xFE8
  5597                           postdec1	equ	0xFE5
  5598                           fsr1l	equ	0xFE1
  5599                           
  5600                           	psect	bssCOMRAM
  5601  000053                     __pbssCOMRAM:
  5602                           	opt stack 0
  5603  000053                     _IRfault:
  5604                           	opt stack 0
  5605  000053                     	ds	1
  5606  000054                     _ScrollDisplayPosition:
  5607                           	opt stack 0
  5608  000054                     	ds	1
  5609  000055                     _ScrollFIFOCount:
  5610                           	opt stack 0
  5611  000055                     	ds	1
  5612                           tblptru	equ	0xFF8
  5613                           tblptrh	equ	0xFF7
  5614                           tblptrl	equ	0xFF6
  5615                           tablat	equ	0xFF5
  5616                           postinc0	equ	0xFEE
  5617                           wreg	equ	0xFE8
  5618                           postdec1	equ	0xFE5
  5619                           fsr1l	equ	0xFE1
  5620                           
  5621                           	psect	dataCOMRAM
  5622  00004F                     __pdataCOMRAM:
  5623                           	opt stack 0
  5624  00004F                     _LCDclearCount:
  5625                           	opt stack 0
  5626  00004F                     	ds	4
  5627                           tblptru	equ	0xFF8
  5628                           tblptrh	equ	0xFF7
  5629                           tblptrl	equ	0xFF6
  5630                           tablat	equ	0xFF5
  5631                           postinc0	equ	0xFEE
  5632                           wreg	equ	0xFE8
  5633                           postdec1	equ	0xFE5
  5634                           fsr1l	equ	0xFE1
  5635                           
  5636                           	psect	bssBANK0
  5637  0000EE                     __pbssBANK0:
  5638                           	opt stack 0
  5639  0000EE                     _IRrawCount:
  5640                           	opt stack 0
  5641  0000EE                     	ds	2
  5642  0000F0                     _IRpinOLD:
  5643                           	opt stack 0
  5644  0000F0                     	ds	1
  5645  0000F1                     _IRrawCodeNum:
  5646                           	opt stack 0
  5647  0000F1                     	ds	1
  5648  0000F2                     _TX_OLD:
  5649                           	opt stack 0
  5650  0000F2                     	ds	1
  5651  0000F3                     _bufferCount:
  5652                           	opt stack 0
  5653  0000F3                     	ds	1
  5654  0000F4                     _IR_NEC:
  5655                           	opt stack 0
  5656  0000F4                     	ds	4
  5657  0000F8                     _IR_New_Code:
  5658                           	opt stack 0
  5659  0000F8                     	ds	1
  5660                           tblptru	equ	0xFF8
  5661                           tblptrh	equ	0xFF7
  5662                           tblptrl	equ	0xFF6
  5663                           tablat	equ	0xFF5
  5664                           postinc0	equ	0xFEE
  5665                           wreg	equ	0xFE8
  5666                           postdec1	equ	0xFE5
  5667                           fsr1l	equ	0xFE1
  5668                           
  5669                           	psect	bssBANK1
  5670  00018A                     __pbssBANK1:
  5671                           	opt stack 0
  5672  00018A                     _Global:
  5673                           	opt stack 0
  5674  00018A                     	ds	9
  5675  000193                     _NowTime:
  5676                           	opt stack 0
  5677  000193                     	ds	9
  5678  00019C                     _LCDwait:
  5679                           	opt stack 0
  5680  00019C                     	ds	1
  5681  00019D                     _USART_Status:
  5682                           	opt stack 0
  5683  00019D                     	ds	1
  5684  00019E                     _Scroll_1:
  5685                           	opt stack 0
  5686  00019E                     	ds	16
  5687  0001AE                     _Scroll_2:
  5688                           	opt stack 0
  5689  0001AE                     	ds	16
  5690  0001BE                     _Scroll_3:
  5691                           	opt stack 0
  5692  0001BE                     	ds	16
  5693  0001CE                     _Scroll_4:
  5694                           	opt stack 0
  5695  0001CE                     	ds	16
  5696  0001DE                     _Scroll_5:
  5697                           	opt stack 0
  5698  0001DE                     	ds	16
  5699                           tblptru	equ	0xFF8
  5700                           tblptrh	equ	0xFF7
  5701                           tblptrl	equ	0xFF6
  5702                           tablat	equ	0xFF5
  5703                           postinc0	equ	0xFEE
  5704                           wreg	equ	0xFE8
  5705                           postdec1	equ	0xFE5
  5706                           fsr1l	equ	0xFE1
  5707                           
  5708                           	psect	dataBANK1
  5709  0001EE                     __pdataBANK1:
  5710                           	opt stack 0
  5711  0001EE                     _BlueLEDcount:
  5712                           	opt stack 0
  5713  0001EE                     	ds	2
  5714                           tblptru	equ	0xFF8
  5715                           tblptrh	equ	0xFF7
  5716                           tblptrl	equ	0xFF6
  5717                           tablat	equ	0xFF5
  5718                           postinc0	equ	0xFEE
  5719                           wreg	equ	0xFE8
  5720                           postdec1	equ	0xFE5
  5721                           fsr1l	equ	0xFE1
  5722                           
  5723                           	psect	bssBANK2
  5724  0002E5                     __pbssBANK2:
  5725                           	opt stack 0
  5726  0002E5                     _Scroll_6:
  5727                           	opt stack 0
  5728  0002E5                     	ds	16
  5729                           tblptru	equ	0xFF8
  5730                           tblptrh	equ	0xFF7
  5731                           tblptrl	equ	0xFF6
  5732                           tablat	equ	0xFF5
  5733                           postinc0	equ	0xFEE
  5734                           wreg	equ	0xFE8
  5735                           postdec1	equ	0xFE5
  5736                           fsr1l	equ	0xFE1
  5737                           
  5738                           	psect	bssBANK3
  5739  000300                     __pbssBANK3:
  5740                           	opt stack 0
  5741  000300                     _Rxdata:
  5742                           	opt stack 0
  5743  000300                     	ds	100
  5744  000364                     _Scroll_10:
  5745                           	opt stack 0
  5746  000364                     	ds	16
  5747  000374                     _Scroll_7:
  5748                           	opt stack 0
  5749  000374                     	ds	16
  5750  000384                     _Scroll_8:
  5751                           	opt stack 0
  5752  000384                     	ds	16
  5753  000394                     _Scroll_9:
  5754                           	opt stack 0
  5755  000394                     	ds	16
  5756                           tblptru	equ	0xFF8
  5757                           tblptrh	equ	0xFF7
  5758                           tblptrl	equ	0xFF6
  5759                           tablat	equ	0xFF5
  5760                           postinc0	equ	0xFEE
  5761                           wreg	equ	0xFE8
  5762                           postdec1	equ	0xFE5
  5763                           fsr1l	equ	0xFE1
  5764                           
  5765                           	psect	dataBANK3
  5766  0003A4                     __pdataBANK3:
  5767                           	opt stack 0
  5768  0003A4                     _Version:
  5769                           	opt stack 0
  5770  0003A4                     	ds	20
  5771                           tblptru	equ	0xFF8
  5772                           tblptrh	equ	0xFF7
  5773                           tblptrl	equ	0xFF6
  5774                           tablat	equ	0xFF5
  5775                           postinc0	equ	0xFEE
  5776                           wreg	equ	0xFE8
  5777                           postdec1	equ	0xFE5
  5778                           fsr1l	equ	0xFE1
  5779                           
  5780                           	psect	bssBANK4
  5781  000400                     __pbssBANK4:
  5782                           	opt stack 0
  5783  000400                     _buf:
  5784                           	opt stack 0
  5785  000400                     	ds	100
  5786  000464                     _IRRawCode:
  5787                           	opt stack 0
  5788  000464                     	ds	144
  5789                           tblptru	equ	0xFF8
  5790                           tblptrh	equ	0xFF7
  5791                           tblptrl	equ	0xFF6
  5792                           tablat	equ	0xFF5
  5793                           postinc0	equ	0xFEE
  5794                           wreg	equ	0xFE8
  5795                           postdec1	equ	0xFE5
  5796                           fsr1l	equ	0xFE1
  5797                           
  5798                           	psect	bssBANK5
  5799  000500                     __pbssBANK5:
  5800                           	opt stack 0
  5801  000500                     _Txdata:
  5802                           	opt stack 0
  5803  000500                     	ds	100
  5804                           tblptru	equ	0xFF8
  5805                           tblptrh	equ	0xFF7
  5806                           tblptrl	equ	0xFF6
  5807                           tablat	equ	0xFF5
  5808                           postinc0	equ	0xFEE
  5809                           wreg	equ	0xFE8
  5810                           postdec1	equ	0xFE5
  5811                           fsr1l	equ	0xFE1
  5812                           
  5813                           	psect	cstackBANK2
  5814  000200                     __pcstackBANK2:
  5815                           	opt stack 0
  5816  000200                     Command@buf:
  5817                           	opt stack 0
  5818                           
  5819                           ; 200 bytes @ 0x0
  5820  000200                     	ds	200
  5821  0002C8                     Command@ADC_Value:
  5822                           	opt stack 0
  5823                           
  5824                           ; 2 bytes @ 0xC8
  5825  0002C8                     	ds	2
  5826  0002CA                     Command@RTC_Battery_Value:
  5827                           	opt stack 0
  5828                           
  5829                           ; 2 bytes @ 0xCA
  5830  0002CA                     	ds	2
  5831  0002CC                     Command@RTC_Battery_Value_HIGH_decimal:
  5832                           	opt stack 0
  5833                           
  5834                           ; 2 bytes @ 0xCC
  5835  0002CC                     	ds	2
  5836  0002CE                     Command@BAUDtemp:
  5837                           	opt stack 0
  5838                           
  5839                           ; 4 bytes @ 0xCE
  5840  0002CE                     	ds	4
  5841  0002D2                     Command@RTC_Battery_Value_LOW_decimal:
  5842                           	opt stack 0
  5843                           
  5844                           ; 2 bytes @ 0xD2
  5845  0002D2                     	ds	2
  5846  0002D4                     Command@PARITYtemp:
  5847                           	opt stack 0
  5848                           
  5849                           ; 4 bytes @ 0xD4
  5850  0002D4                     	ds	4
  5851  0002D8                     Command@contrast:
  5852                           	opt stack 0
  5853                           
  5854                           ; 2 bytes @ 0xD8
  5855  0002D8                     	ds	2
  5856  0002DA                     Command@channel:
  5857                           	opt stack 0
  5858                           
  5859                           ; 2 bytes @ 0xDA
  5860  0002DA                     	ds	2
  5861  0002DC                     Command@duty:
  5862                           	opt stack 0
  5863                           
  5864                           ; 2 bytes @ 0xDC
  5865  0002DC                     	ds	2
  5866  0002DE                     Command@tempLONG:
  5867                           	opt stack 0
  5868                           
  5869                           ; 4 bytes @ 0xDE
  5870  0002DE                     	ds	4
  5871  0002E2                     main@MemoryBurnflag:
  5872                           	opt stack 0
  5873                           
  5874                           ; 1 bytes @ 0xE2
  5875  0002E2                     	ds	1
  5876  0002E3                     main@ii:
  5877                           	opt stack 0
  5878                           
  5879                           ; 1 bytes @ 0xE3
  5880  0002E3                     	ds	1
  5881  0002E4                     main@count:
  5882                           	opt stack 0
  5883                           
  5884                           ; 1 bytes @ 0xE4
  5885  0002E4                     	ds	1
  5886                           tblptru	equ	0xFF8
  5887                           tblptrh	equ	0xFF7
  5888                           tblptrl	equ	0xFF6
  5889                           tablat	equ	0xFF5
  5890                           postinc0	equ	0xFEE
  5891                           wreg	equ	0xFE8
  5892                           postdec1	equ	0xFE5
  5893                           fsr1l	equ	0xFE1
  5894                           
  5895                           	psect	cstackBANK1
  5896  000100                     __pcstackBANK1:
  5897                           	opt stack 0
  5898  000100                     ??_high_isr:
  5899                           
  5900                           ; 0 bytes @ 0x0
  5901  000100                     	ds	14
  5902  00010E                     ??_isdigit:
  5903  00010E                     ??_IdleI2C:
  5904  00010E                     ?_ReadEEPROM_1Byte:
  5905                           	opt stack 0
  5906  00010E                     ?___wmul:
  5907                           	opt stack 0
  5908  00010E                     ?___awdiv:
  5909                           	opt stack 0
  5910  00010E                     ?___awmod:
  5911                           	opt stack 0
  5912  00010E                     ?___lwmod:
  5913                           	opt stack 0
  5914  00010E                     ?___ftpack:
  5915                           	opt stack 0
  5916  00010E                     ?_GetBaud:
  5917                           	opt stack 0
  5918  00010E                     ?___lmul:
  5919                           	opt stack 0
  5920  00010E                     ?___lldiv:
  5921                           	opt stack 0
  5922  00010E                     ISNUMBER@ascii:
  5923                           	opt stack 0
  5924  00010E                     baudUSART@baudconfig:
  5925                           	opt stack 0
  5926  00010E                     ReadUSART@data:
  5927                           	opt stack 0
  5928  00010E                     EnableInternalADC@config:
  5929                           	opt stack 0
  5930  00010E                     OpenI2C@slew:
  5931                           	opt stack 0
  5932  00010E                     cleanBuffer@data:
  5933                           	opt stack 0
  5934  00010E                     cleanBuffer16bit@data:
  5935                           	opt stack 0
  5936  00010E                     StringMatch@This:
  5937                           	opt stack 0
  5938  00010E                     StringContains@This:
  5939                           	opt stack 0
  5940  00010E                     StartsWith@This:
  5941                           	opt stack 0
  5942  00010E                     lowercase@Input:
  5943                           	opt stack 0
  5944  00010E                     CheckSum_byte@This:
  5945                           	opt stack 0
  5946  00010E                     OpenUSART@spbrg:
  5947                           	opt stack 0
  5948  00010E                     Parse_Time@This:
  5949                           	opt stack 0
  5950  00010E                     Multiple_I2C_Read@rdptr:
  5951                           	opt stack 0
  5952  00010E                     ReadEEPROM_1Byte@address:
  5953                           	opt stack 0
  5954  00010E                     WriteEEPROM_1Byte@address:
  5955                           	opt stack 0
  5956  00010E                     ___wmul@multiplier:
  5957                           	opt stack 0
  5958  00010E                     ___awdiv@dividend:
  5959                           	opt stack 0
  5960  00010E                     ___awmod@dividend:
  5961                           	opt stack 0
  5962  00010E                     ___lwmod@dividend:
  5963                           	opt stack 0
  5964  00010E                     ___ftpack@arg:
  5965                           	opt stack 0
  5966  00010E                     delayUS@US:
  5967                           	opt stack 0
  5968  00010E                     ___lmul@multiplier:
  5969                           	opt stack 0
  5970  00010E                     ___lldiv@dividend:
  5971                           	opt stack 0
  5972                           
  5973                           ; 4 bytes @ 0xE
  5974  00010E                     	ds	1
  5975  00010F                     EnableInternalADC@channels:
  5976                           	opt stack 0
  5977  00010F                     OpenI2C@sync_mode:
  5978                           	opt stack 0
  5979  00010F                     WriteI2C@data_out:
  5980                           	opt stack 0
  5981  00010F                     _isdigit$3366:
  5982                           	opt stack 0
  5983                           
  5984                           ; 1 bytes @ 0xF
  5985  00010F                     	ds	1
  5986  000110                     ?_I2C_Read_At_Address:
  5987                           	opt stack 0
  5988  000110                     CheckSum_byte@Odd_Even:
  5989                           	opt stack 0
  5990  000110                     OpenUSART@config:
  5991                           	opt stack 0
  5992  000110                     I2C_Write_At_Address@Register:
  5993                           	opt stack 0
  5994  000110                     I2C_Read_At_Address@Register:
  5995                           	opt stack 0
  5996  000110                     Multiple_I2C_Read@length:
  5997                           	opt stack 0
  5998  000110                     ReadEEPROM_1Byte@GIEstatus:
  5999                           	opt stack 0
  6000  000110                     WriteEEPROM_1Byte@data:
  6001                           	opt stack 0
  6002  000110                     isdigit@c:
  6003                           	opt stack 0
  6004  000110                     cleanBuffer@count:
  6005                           	opt stack 0
  6006  000110                     cleanBuffer16bit@count:
  6007                           	opt stack 0
  6008  000110                     StringMatch@That:
  6009                           	opt stack 0
  6010  000110                     StringContains@That:
  6011                           	opt stack 0
  6012  000110                     StartsWith@That:
  6013                           	opt stack 0
  6014  000110                     Init_I2C_Master@baud:
  6015                           	opt stack 0
  6016  000110                     ___wmul@multiplicand:
  6017                           	opt stack 0
  6018  000110                     ___awdiv@divisor:
  6019                           	opt stack 0
  6020  000110                     ___awmod@divisor:
  6021                           	opt stack 0
  6022  000110                     ___lwmod@divisor:
  6023                           	opt stack 0
  6024                           
  6025                           ; 2 bytes @ 0x10
  6026  000110                     	ds	1
  6027  000111                     ?_GetMemoryChar:
  6028                           	opt stack 0
  6029  000111                     ?_GetMemoryLong:
  6030                           	opt stack 0
  6031  000111                     ?_GetMemoryBaud:
  6032                           	opt stack 0
  6033  000111                     lowercase@i:
  6034                           	opt stack 0
  6035  000111                     Parse_Time@temp:
  6036                           	opt stack 0
  6037  000111                     I2C_Write_At_Address@data:
  6038                           	opt stack 0
  6039  000111                     I2C_Read_Sequential@Register:
  6040                           	opt stack 0
  6041  000111                     WriteEEPROM_1Byte@GIEstatus:
  6042                           	opt stack 0
  6043  000111                     GetMemoryParity@Parity:
  6044                           	opt stack 0
  6045  000111                     ___ftpack@exp:
  6046                           	opt stack 0
  6047  000111                     CheckSum_byte@ThisTemp:
  6048                           	opt stack 0
  6049                           
  6050                           ; 2 bytes @ 0x11
  6051  000111                     	ds	1
  6052  000112                     ??_cleanBuffer:
  6053  000112                     ??_cleanBuffer16bit:
  6054  000112                     ??_delayUS:
  6055  000112                     ??_I2C_Write_At_Address:
  6056  000112                     ??_StringMatch:
  6057  000112                     ??_StringContains:
  6058  000112                     ??_StartsWith:
  6059  000112                     I2C_Read_At_Address@I2Caddress:
  6060                           	opt stack 0
  6061  000112                     SetMemoryParity@Test:
  6062                           	opt stack 0
  6063  000112                     ___awdiv@counter:
  6064                           	opt stack 0
  6065  000112                     ___awmod@counter:
  6066                           	opt stack 0
  6067  000112                     ___ftpack@sign:
  6068                           	opt stack 0
  6069  000112                     ___lwmod@counter:
  6070                           	opt stack 0
  6071  000112                     I2C_Read_Sequential@rdptr:
  6072                           	opt stack 0
  6073  000112                     ___wmul@product:
  6074                           	opt stack 0
  6075  000112                     ___lmul@multiplicand:
  6076                           	opt stack 0
  6077  000112                     ___lldiv@divisor:
  6078                           	opt stack 0
  6079  000112                     Parse_Time@TempTime:
  6080                           	opt stack 0
  6081                           
  6082                           ; 9 bytes @ 0x12
  6083  000112                     	ds	1
  6084  000113                     ??___ftpack:
  6085  000113                     CheckSum_byte@Parity:
  6086                           	opt stack 0
  6087  000113                     SetMemoryParity@Parity:
  6088                           	opt stack 0
  6089  000113                     ___awdiv@sign:
  6090                           	opt stack 0
  6091  000113                     ___awmod@sign:
  6092                           	opt stack 0
  6093  000113                     delayUS@i:
  6094                           	opt stack 0
  6095                           
  6096                           ; 4 bytes @ 0x13
  6097  000113                     	ds	1
  6098  000114                     ?___aldiv:
  6099                           	opt stack 0
  6100  000114                     CheckSum_byte@i:
  6101                           	opt stack 0
  6102  000114                     I2C_Write_At_Address@I2Caddress:
  6103                           	opt stack 0
  6104  000114                     I2C_Read_Sequential@length:
  6105                           	opt stack 0
  6106  000114                     ___awdiv@quotient:
  6107                           	opt stack 0
  6108  000114                     ___aldiv@dividend:
  6109                           	opt stack 0
  6110                           
  6111                           ; 4 bytes @ 0x14
  6112  000114                     	ds	1
  6113  000115                     ??_GetMemoryLong:
  6114  000115                     ??_GetMemoryBaud:
  6115  000115                     cleanBuffer@i:
  6116                           	opt stack 0
  6117  000115                     cleanBuffer16bit@i:
  6118                           	opt stack 0
  6119  000115                     UARTchar@NinethBit_override:
  6120                           	opt stack 0
  6121  000115                     I2C_Read_Sequential@I2Caddress:
  6122                           	opt stack 0
  6123  000115                     GetMemoryChar@AddressFirst:
  6124                           	opt stack 0
  6125                           
  6126                           ; 1 bytes @ 0x15
  6127  000115                     	ds	1
  6128  000116                     ?___lbtoft:
  6129                           	opt stack 0
  6130  000116                     ?___lwtoft:
  6131                           	opt stack 0
  6132  000116                     UARTchar@NinethBit_override_data:
  6133                           	opt stack 0
  6134  000116                     GetMemoryChar@H:
  6135                           	opt stack 0
  6136  000116                     BufferCopy@from:
  6137                           	opt stack 0
  6138  000116                     ___lwtoft@c:
  6139                           	opt stack 0
  6140  000116                     ___lmul@product:
  6141                           	opt stack 0
  6142  000116                     ___lldiv@quotient:
  6143                           	opt stack 0
  6144  000116                     SET_RTC_TIME@SetTime:
  6145                           	opt stack 0
  6146                           
  6147                           ; 9 bytes @ 0x16
  6148  000116                     	ds	1
  6149  000117                     ??_UARTchar:
  6150  000117                     delayUS@j:
  6151                           	opt stack 0
  6152                           
  6153                           ; 1 bytes @ 0x17
  6154  000117                     	ds	1
  6155  000118                     ??_RTC_TIME_NONMilitary:
  6156  000118                     UARTchar@data:
  6157                           	opt stack 0
  6158  000118                     Zero_Config1@pin:
  6159                           	opt stack 0
  6160  000118                     One_Config1@pin:
  6161                           	opt stack 0
  6162  000118                     f_Config1@pin:
  6163                           	opt stack 0
  6164  000118                     Zero_Config2@pin:
  6165                           	opt stack 0
  6166  000118                     One_Config2@pin:
  6167                           	opt stack 0
  6168  000118                     SendLCDbyte@isCommand:
  6169                           	opt stack 0
  6170  000118                     BufferCopy@to:
  6171                           	opt stack 0
  6172  000118                     RTC_Clock_Enable@tempSeconds:
  6173                           	opt stack 0
  6174  000118                     ___aldiv@divisor:
  6175                           	opt stack 0
  6176  000118                     READ_RTC_TIME@temp:
  6177                           	opt stack 0
  6178                           
  6179                           ; 7 bytes @ 0x18
  6180  000118                     	ds	1
  6181  000119                     SendLCDbyte@data:
  6182                           	opt stack 0
  6183  000119                     ___lbtoft@c:
  6184                           	opt stack 0
  6185  000119                     UARTstring@data:
  6186                           	opt stack 0
  6187  000119                     UARTstringWAIT@data:
  6188                           	opt stack 0
  6189  000119                     Send_Config1@data:
  6190                           	opt stack 0
  6191  000119                     Send_Config2@data:
  6192                           	opt stack 0
  6193  000119                     RTC_TIME_NONMilitary@Error:
  6194                           	opt stack 0
  6195                           
  6196                           ; 2 bytes @ 0x19
  6197  000119                     	ds	1
  6198  00011A                     ?___ftdiv:
  6199                           	opt stack 0
  6200  00011A                     ?_GetEnteredNumber:
  6201                           	opt stack 0
  6202  00011A                     BufferCopy@count:
  6203                           	opt stack 0
  6204  00011A                     SendLCDbyte@MSB_nibble:
  6205                           	opt stack 0
  6206  00011A                     RTC_Clock_Enable@Error:
  6207                           	opt stack 0
  6208  00011A                     ___lldiv@counter:
  6209                           	opt stack 0
  6210  00011A                     GetEnteredNumber@This:
  6211                           	opt stack 0
  6212  00011A                     ___ftdiv@f1:
  6213                           	opt stack 0
  6214                           
  6215                           ; 3 bytes @ 0x1A
  6216  00011A                     	ds	1
  6217  00011B                     ??_UARTstring:
  6218  00011B                     ??_Send_Config1:
  6219  00011B                     ??_Send_Config2:
  6220  00011B                     ?___llmod:
  6221                           	opt stack 0
  6222  00011B                     BufferCopy@shift:
  6223                           	opt stack 0
  6224  00011B                     SendLCDbyte@LSB_nibble:
  6225                           	opt stack 0
  6226  00011B                     RTC_TIME_NONMilitary@temphours:
  6227                           	opt stack 0
  6228  00011B                     InitUART@Baud:
  6229                           	opt stack 0
  6230  00011B                     ___llmod@dividend:
  6231                           	opt stack 0
  6232                           
  6233                           ; 4 bytes @ 0x1B
  6234  00011B                     	ds	1
  6235  00011C                     BufferCopy@i:
  6236                           	opt stack 0
  6237  00011C                     SetLCDcursor@Col:
  6238                           	opt stack 0
  6239  00011C                     LCDPrintChar@character:
  6240                           	opt stack 0
  6241  00011C                     ___aldiv@counter:
  6242                           	opt stack 0
  6243  00011C                     LCDPrintString@Text:
  6244                           	opt stack 0
  6245                           
  6246                           ; 2 bytes @ 0x1C
  6247  00011C                     	ds	1
  6248  00011D                     ?_InternalADC_Read:
  6249                           	opt stack 0
  6250  00011D                     Send_Config1@i:
  6251                           	opt stack 0
  6252  00011D                     Send_Config2@pin:
  6253                           	opt stack 0
  6254  00011D                     SetLCDcursor@Row:
  6255                           	opt stack 0
  6256  00011D                     ___aldiv@sign:
  6257                           	opt stack 0
  6258  00011D                     RemoveSpaces@This:
  6259                           	opt stack 0
  6260  00011D                     StringAddEqual@Input:
  6261                           	opt stack 0
  6262  00011D                     LCD_Scroll@This:
  6263                           	opt stack 0
  6264  00011D                     ___ftdiv@f2:
  6265                           	opt stack 0
  6266                           
  6267                           ; 3 bytes @ 0x1D
  6268  00011D                     	ds	1
  6269  00011E                     ??_GetEnteredNumber:
  6270  00011E                     Send_Config1@pin:
  6271                           	opt stack 0
  6272  00011E                     Send_Config2@i:
  6273                           	opt stack 0
  6274  00011E                     SetLCDcursor@address:
  6275                           	opt stack 0
  6276  00011E                     LCDPrintString@c:
  6277                           	opt stack 0
  6278  00011E                     ___aldiv@quotient:
  6279                           	opt stack 0
  6280                           
  6281                           ; 4 bytes @ 0x1E
  6282  00011E                     	ds	1
  6283  00011F                     ??_InternalADC_Read:
  6284  00011F                     ??_SET_RTC_TIME:
  6285  00011F                     ??_StringAddEqual:
  6286  00011F                     InitUART@parity:
  6287                           	opt stack 0
  6288  00011F                     READ_RTC_TIME@Error:
  6289                           	opt stack 0
  6290  00011F                     ___llmod@divisor:
  6291                           	opt stack 0
  6292                           
  6293                           ; 4 bytes @ 0x1F
  6294  00011F                     	ds	1
  6295  000120                     ??_InitUART:
  6296  000120                     ??___ftdiv:
  6297  000120                     LCDdisplayFeedback@Text:
  6298                           	opt stack 0
  6299  000120                     RemoveSpaces@That:
  6300                           	opt stack 0
  6301                           
  6302                           ; 100 bytes @ 0x20
  6303  000120                     	ds	1
  6304  000121                     InternalADC_Read@channel:
  6305                           	opt stack 0
  6306  000121                     StringAddEqual@temp:
  6307                           	opt stack 0
  6308                           
  6309                           ; 100 bytes @ 0x21
  6310  000121                     	ds	1
  6311  000122                     SetFreq@freq:
  6312                           	opt stack 0
  6313                           
  6314                           ; 2 bytes @ 0x22
  6315  000122                     	ds	1
  6316  000123                     GetEnteredNumber@i:
  6317                           	opt stack 0
  6318  000123                     ___ftdiv@cntr:
  6319                           	opt stack 0
  6320  000123                     ___llmod@counter:
  6321                           	opt stack 0
  6322  000123                     SET_RTC_TIME@temp:
  6323                           	opt stack 0
  6324                           
  6325                           ; 7 bytes @ 0x23
  6326  000123                     	ds	1
  6327  000124                     ?_sprintf:
  6328                           	opt stack 0
  6329  000124                     GetEnteredNumber@negative:
  6330                           	opt stack 0
  6331  000124                     SetFreq@temp:
  6332                           	opt stack 0
  6333  000124                     InitUART@spbrg:
  6334                           	opt stack 0
  6335  000124                     sprintf@sp:
  6336                           	opt stack 0
  6337  000124                     ___ftdiv@f3:
  6338                           	opt stack 0
  6339                           
  6340                           ; 3 bytes @ 0x24
  6341  000124                     	ds	1
  6342  000125                     GetEnteredNumber@temp:
  6343                           	opt stack 0
  6344                           
  6345                           ; 4 bytes @ 0x25
  6346  000125                     	ds	1
  6347  000126                     InitUART@baudconfig:
  6348                           	opt stack 0
  6349  000126                     sprintf@f:
  6350                           	opt stack 0
  6351                           
  6352                           ; 2 bytes @ 0x26
  6353  000126                     	ds	1
  6354  000127                     InitUART@config:
  6355                           	opt stack 0
  6356  000127                     ___ftdiv@exp:
  6357                           	opt stack 0
  6358                           
  6359                           ; 1 bytes @ 0x27
  6360  000127                     	ds	1
  6361  000128                     ___ftdiv@sign:
  6362                           	opt stack 0
  6363  000128                     InitUART@temp:
  6364                           	opt stack 0
  6365                           
  6366                           ; 4 bytes @ 0x28
  6367  000128                     	ds	1
  6368  000129                     ?___ftmul:
  6369                           	opt stack 0
  6370  000129                     ___ftmul@f1:
  6371                           	opt stack 0
  6372  000129                     GetMemoryBaud@baud:
  6373                           	opt stack 0
  6374  000129                     GetMemoryLong@temp:
  6375                           	opt stack 0
  6376                           
  6377                           ; 4 bytes @ 0x29
  6378  000129                     	ds	1
  6379  00012A                     SET_RTC_TIME@Error:
  6380                           	opt stack 0
  6381                           
  6382                           ; 1 bytes @ 0x2A
  6383  00012A                     	ds	2
  6384  00012C                     ___ftmul@f2:
  6385                           	opt stack 0
  6386                           
  6387                           ; 3 bytes @ 0x2C
  6388  00012C                     	ds	1
  6389  00012D                     GetMemoryBaud@BaudTempH:
  6390                           	opt stack 0
  6391  00012D                     GetMemoryLong@H:
  6392                           	opt stack 0
  6393                           
  6394                           ; 1 bytes @ 0x2D
  6395  00012D                     	ds	1
  6396  00012E                     GetMemoryBaud@BaudTempMH:
  6397                           	opt stack 0
  6398  00012E                     GetMemoryLong@MH:
  6399                           	opt stack 0
  6400                           
  6401                           ; 1 bytes @ 0x2E
  6402  00012E                     	ds	1
  6403  00012F                     ??___ftmul:
  6404  00012F                     GetMemoryBaud@BaudTempML:
  6405                           	opt stack 0
  6406  00012F                     GetMemoryLong@ML:
  6407                           	opt stack 0
  6408                           
  6409                           ; 1 bytes @ 0x2F
  6410  00012F                     	ds	1
  6411  000130                     GetMemoryBaud@BaudTempL:
  6412                           	opt stack 0
  6413  000130                     GetMemoryLong@L:
  6414                           	opt stack 0
  6415                           
  6416                           ; 1 bytes @ 0x30
  6417  000130                     	ds	1
  6418  000131                     GetMemoryLong@AddressFirst:
  6419                           	opt stack 0
  6420  000131                     SetMemoryBaud@Baud:
  6421                           	opt stack 0
  6422                           
  6423                           ; 4 bytes @ 0x31
  6424  000131                     	ds	1
  6425  000132                     ?_GetEEPROM:
  6426                           	opt stack 0
  6427  000132                     ___ftmul@exp:
  6428                           	opt stack 0
  6429  000132                     SetMemoryLong@Data:
  6430                           	opt stack 0
  6431                           
  6432                           ; 4 bytes @ 0x32
  6433  000132                     	ds	1
  6434  000133                     ___ftmul@f3_as_product:
  6435                           	opt stack 0
  6436                           
  6437                           ; 3 bytes @ 0x33
  6438  000133                     	ds	1
  6439  000134                     ??_sprintf:
  6440                           
  6441                           ; 0 bytes @ 0x34
  6442  000134                     	ds	1
  6443  000135                     ??_SetMemoryBaud:
  6444                           
  6445                           ; 0 bytes @ 0x35
  6446  000135                     	ds	1
  6447  000136                     SetMemoryLong@AddressFirst:
  6448                           	opt stack 0
  6449  000136                     ___ftmul@cntr:
  6450                           	opt stack 0
  6451                           
  6452                           ; 1 bytes @ 0x36
  6453  000136                     	ds	1
  6454  000137                     ??_SetMemoryLong:
  6455  000137                     ___ftmul@sign:
  6456                           	opt stack 0
  6457                           
  6458                           ; 1 bytes @ 0x37
  6459  000137                     	ds	1
  6460  000138                     ?___fttol:
  6461                           	opt stack 0
  6462  000138                     sprintf@idx:
  6463                           	opt stack 0
  6464  000138                     ___fttol@f1:
  6465                           	opt stack 0
  6466                           
  6467                           ; 3 bytes @ 0x38
  6468  000138                     	ds	1
  6469  000139                     sprintf@cp:
  6470                           	opt stack 0
  6471  000139                     SetMemoryBaud@Test:
  6472                           	opt stack 0
  6473                           
  6474                           ; 4 bytes @ 0x39
  6475  000139                     	ds	2
  6476  00013B                     _sprintf$3080:
  6477                           	opt stack 0
  6478  00013B                     SetMemoryLong@Test:
  6479                           	opt stack 0
  6480  00013B                     GetEEPROM@Temp:
  6481                           	opt stack 0
  6482                           
  6483                           ; 9 bytes @ 0x3B
  6484  00013B                     	ds	1
  6485  00013C                     ??___fttol:
  6486                           
  6487                           ; 0 bytes @ 0x3C
  6488  00013C                     	ds	1
  6489  00013D                     SetMemoryBaud@BaudTempH:
  6490                           	opt stack 0
  6491  00013D                     _sprintf$3081:
  6492                           	opt stack 0
  6493                           
  6494                           ; 2 bytes @ 0x3D
  6495  00013D                     	ds	1
  6496  00013E                     SetMemoryBaud@BaudTempMH:
  6497                           	opt stack 0
  6498                           
  6499                           ; 1 bytes @ 0x3E
  6500  00013E                     	ds	1
  6501  00013F                     SetMemoryBaud@BaudTempML:
  6502                           	opt stack 0
  6503  00013F                     SetMemoryLong@H:
  6504                           	opt stack 0
  6505  00013F                     _sprintf$3087:
  6506                           	opt stack 0
  6507                           
  6508                           ; 2 bytes @ 0x3F
  6509  00013F                     	ds	1
  6510  000140                     SetMemoryBaud@BaudTempL:
  6511                           	opt stack 0
  6512  000140                     SetMemoryLong@MH:
  6513                           	opt stack 0
  6514                           
  6515                           ; 1 bytes @ 0x40
  6516  000140                     	ds	1
  6517  000141                     SetMemoryLong@ML:
  6518                           	opt stack 0
  6519  000141                     ___fttol@sign1:
  6520                           	opt stack 0
  6521  000141                     sprintf@len:
  6522                           	opt stack 0
  6523                           
  6524                           ; 2 bytes @ 0x41
  6525  000141                     	ds	1
  6526  000142                     SetMemoryLong@L:
  6527                           	opt stack 0
  6528  000142                     ___fttol@lval:
  6529                           	opt stack 0
  6530                           
  6531                           ; 4 bytes @ 0x42
  6532  000142                     	ds	1
  6533  000143                     ?_SetEEPROM:
  6534                           	opt stack 0
  6535  000143                     sprintf@ap:
  6536                           	opt stack 0
  6537  000143                     SetEEPROM@Temp:
  6538                           	opt stack 0
  6539                           
  6540                           ; 9 bytes @ 0x43
  6541  000143                     	ds	1
  6542  000144                     SyncEEPROMandGLOBAL@Temp:
  6543                           	opt stack 0
  6544                           
  6545                           ; 9 bytes @ 0x44
  6546  000144                     	ds	1
  6547  000145                     sprintf@val:
  6548                           	opt stack 0
  6549                           
  6550                           ; 4 bytes @ 0x45
  6551  000145                     	ds	1
  6552  000146                     ___fttol@exp1:
  6553                           	opt stack 0
  6554                           
  6555                           ; 1 bytes @ 0x46
  6556  000146                     	ds	1
  6557  000147                     SetDuty@Duty:
  6558                           	opt stack 0
  6559  000147                     SetContrast@tempPR2:
  6560                           	opt stack 0
  6561                           
  6562                           ; 3 bytes @ 0x47
  6563  000147                     	ds	1
  6564  000148                     SetDuty@tempPR2:
  6565                           	opt stack 0
  6566                           
  6567                           ; 3 bytes @ 0x48
  6568  000148                     	ds	1
  6569  000149                     sprintf@prec:
  6570                           	opt stack 0
  6571                           
  6572                           ; 2 bytes @ 0x49
  6573  000149                     	ds	1
  6574  00014A                     SetContrast@MSB:
  6575                           	opt stack 0
  6576                           
  6577                           ; 1 bytes @ 0x4A
  6578  00014A                     	ds	1
  6579  00014B                     SetContrast@LSB:
  6580                           	opt stack 0
  6581  00014B                     SetDuty@MSB:
  6582                           	opt stack 0
  6583  00014B                     sprintf@width:
  6584                           	opt stack 0
  6585                           
  6586                           ; 2 bytes @ 0x4B
  6587  00014B                     	ds	1
  6588  00014C                     SetDuty@LSB:
  6589                           	opt stack 0
  6590  00014C                     SetContrast@temp:
  6591                           	opt stack 0
  6592  00014C                     SetEEPROM@burn:
  6593                           	opt stack 0
  6594                           
  6595                           ; 4 bytes @ 0x4C
  6596  00014C                     	ds	1
  6597  00014D                     sprintf@c:
  6598                           	opt stack 0
  6599  00014D                     SetDuty@temp:
  6600                           	opt stack 0
  6601                           
  6602                           ; 2 bytes @ 0x4D
  6603  00014D                     	ds	1
  6604  00014E                     SetContrast@Duty:
  6605                           	opt stack 0
  6606  00014E                     sprintf@flag:
  6607                           	opt stack 0
  6608                           
  6609                           ; 2 bytes @ 0x4E
  6610  00014E                     	ds	1
  6611  00014F                     
  6612                           ; 0 bytes @ 0x4F
  6613  00014F                     	ds	1
  6614  000150                     SprintDate@ReturnBuf:
  6615                           	opt stack 0
  6616  000150                     SetBaud@Baud:
  6617                           	opt stack 0
  6618  000150                     SetEEPROM@fail:
  6619                           	opt stack 0
  6620                           
  6621                           ; 4 bytes @ 0x50
  6622  000150                     	ds	2
  6623  000152                     SprintDate@DisplayTime:
  6624                           	opt stack 0
  6625                           
  6626                           ; 9 bytes @ 0x52
  6627  000152                     	ds	2
  6628  000154                     SetBaud@Parity:
  6629                           	opt stack 0
  6630                           
  6631                           ; 1 bytes @ 0x54
  6632  000154                     	ds	1
  6633  000155                     SetBaud@buf:
  6634                           	opt stack 0
  6635                           
  6636                           ; 50 bytes @ 0x55
  6637  000155                     	ds	6
  6638  00015B                     SprintDate@Military:
  6639                           	opt stack 0
  6640                           
  6641                           ; 1 bytes @ 0x5B
  6642  00015B                     	ds	1
  6643  00015C                     
  6644                           ; 0 bytes @ 0x5C
  6645  00015C                     	ds	40
  6646  000184                     RemoveSpaces@address:
  6647                           	opt stack 0
  6648                           
  6649                           ; 2 bytes @ 0x84
  6650  000184                     	ds	1
  6651  000185                     StringAddEqual@firstnumber:
  6652                           	opt stack 0
  6653                           
  6654                           ; 1 bytes @ 0x85
  6655  000185                     	ds	1
  6656  000186                     RemoveSpaces@i:
  6657                           	opt stack 0
  6658  000186                     StringAddEqual@i:
  6659                           	opt stack 0
  6660                           
  6661                           ; 1 bytes @ 0x86
  6662  000186                     	ds	1
  6663  000187                     StringAddEqual@j:
  6664                           	opt stack 0
  6665  000187                     SetBaud@status:
  6666                           	opt stack 0
  6667                           
  6668                           ; 1 bytes @ 0x87
  6669  000187                     	ds	1
  6670  000188                     Command@Input:
  6671                           	opt stack 0
  6672                           
  6673                           ; 2 bytes @ 0x88
  6674  000188                     	ds	2
  6675  00018A                     tblptru	equ	0xFF8
  6676                           tblptrh	equ	0xFF7
  6677                           tblptrl	equ	0xFF6
  6678                           tablat	equ	0xFF5
  6679                           postinc0	equ	0xFEE
  6680                           wreg	equ	0xFE8
  6681                           postdec1	equ	0xFE5
  6682                           fsr1l	equ	0xFE1
  6683                           
  6684                           ; 0 bytes @ 0x8A
  6685                           
  6686                           	psect	cstackBANK0
  6687  000060                     __pcstackBANK0:
  6688                           	opt stack 0
  6689  000060                     ??_low_isr:
  6690                           
  6691                           ; 0 bytes @ 0x0
  6692  000060                     	ds	21
  6693  000075                     low_isr@TEMP_Rxdata:
  6694                           	opt stack 0
  6695                           
  6696                           ; 100 bytes @ 0x15
  6697  000075                     	ds	100
  6698  0000D9                     low_isr@LCD_TEMP:
  6699                           	opt stack 0
  6700                           
  6701                           ; 16 bytes @ 0x79
  6702  0000D9                     	ds	16
  6703  0000E9                     low_isr@i:
  6704                           	opt stack 0
  6705                           
  6706                           ; 2 bytes @ 0x89
  6707  0000E9                     	ds	2
  6708  0000EB                     low_isr@IRpin:
  6709                           	opt stack 0
  6710                           
  6711                           ; 1 bytes @ 0x8B
  6712  0000EB                     	ds	1
  6713  0000EC                     low_isr@j:
  6714                           	opt stack 0
  6715                           
  6716                           ; 1 bytes @ 0x8C
  6717  0000EC                     	ds	1
  6718  0000ED                     low_isr@rx:
  6719                           	opt stack 0
  6720                           
  6721                           ; 1 bytes @ 0x8D
  6722  0000ED                     	ds	1
  6723                           tblptru	equ	0xFF8
  6724                           tblptrh	equ	0xFF7
  6725                           tblptrl	equ	0xFF6
  6726                           tablat	equ	0xFF5
  6727                           postinc0	equ	0xFEE
  6728                           wreg	equ	0xFE8
  6729                           postdec1	equ	0xFE5
  6730                           fsr1l	equ	0xFE1
  6731                           
  6732                           	psect	cstackCOMRAM
  6733  000001                     __pcstackCOMRAM:
  6734                           	opt stack 0
  6735  000001                     ?i1_ReadEEPROM_1Byte:
  6736                           	opt stack 0
  6737  000001                     IsPrintableASCII@data:
  6738                           	opt stack 0
  6739  000001                     i1ReadUSART@data:
  6740                           	opt stack 0
  6741  000001                     IRrawToNEC@Raw:
  6742                           	opt stack 0
  6743  000001                     i1cleanBuffer@data:
  6744                           	opt stack 0
  6745  000001                     i1cleanBuffer16bit@data:
  6746                           	opt stack 0
  6747  000001                     i1CheckSum_byte@This:
  6748                           	opt stack 0
  6749  000001                     i1ReadEEPROM_1Byte@address:
  6750                           	opt stack 0
  6751  000001                     i1WriteEEPROM_1Byte@address:
  6752                           	opt stack 0
  6753  000001                     i1delayUS@US:
  6754                           	opt stack 0
  6755                           
  6756                           ; 4 bytes @ 0x0
  6757  000001                     	ds	2
  6758  000003                     i1CheckSum_byte@Odd_Even:
  6759                           	opt stack 0
  6760  000003                     i1ReadEEPROM_1Byte@GIEstatus:
  6761                           	opt stack 0
  6762  000003                     i1WriteEEPROM_1Byte@data:
  6763                           	opt stack 0
  6764  000003                     IRrawToNEC@NEC:
  6765                           	opt stack 0
  6766  000003                     i1cleanBuffer@count:
  6767                           	opt stack 0
  6768  000003                     i1cleanBuffer16bit@count:
  6769                           	opt stack 0
  6770                           
  6771                           ; 2 bytes @ 0x2
  6772  000003                     	ds	1
  6773  000004                     ?i1_GetMemoryBaud:
  6774                           	opt stack 0
  6775  000004                     ?i1_GetMemoryLong:
  6776                           	opt stack 0
  6777  000004                     i1WriteEEPROM_1Byte@GIEstatus:
  6778                           	opt stack 0
  6779  000004                     i1GetMemoryParity@Parity:
  6780                           	opt stack 0
  6781  000004                     i1CheckSum_byte@ThisTemp:
  6782                           	opt stack 0
  6783                           
  6784                           ; 2 bytes @ 0x3
  6785  000004                     	ds	1
  6786  000005                     ??i1_delayUS:
  6787  000005                     ??i1_cleanBuffer:
  6788  000005                     ??i1_cleanBuffer16bit:
  6789  000005                     IRrawToNEC@Invert:
  6790                           	opt stack 0
  6791  000005                     i1SetMemoryParity@Test:
  6792                           	opt stack 0
  6793                           
  6794                           ; 1 bytes @ 0x4
  6795  000005                     	ds	1
  6796  000006                     ??_IRrawToNEC:
  6797  000006                     i1CheckSum_byte@Parity:
  6798                           	opt stack 0
  6799  000006                     i1SetMemoryParity@Parity:
  6800                           	opt stack 0
  6801  000006                     i1delayUS@i:
  6802                           	opt stack 0
  6803                           
  6804                           ; 4 bytes @ 0x5
  6805  000006                     	ds	1
  6806  000007                     i1CheckSum_byte@i:
  6807                           	opt stack 0
  6808                           
  6809                           ; 1 bytes @ 0x6
  6810  000007                     	ds	1
  6811  000008                     ??i1_GetMemoryBaud:
  6812  000008                     ??i1_GetMemoryLong:
  6813  000008                     i1cleanBuffer@i:
  6814                           	opt stack 0
  6815  000008                     i1cleanBuffer16bit@i:
  6816                           	opt stack 0
  6817  000008                     i1UARTchar@NinethBit_override:
  6818                           	opt stack 0
  6819  000008                     IRrawToNEC@NECtemp:
  6820                           	opt stack 0
  6821                           
  6822                           ; 4 bytes @ 0x7
  6823  000008                     	ds	1
  6824  000009                     i1UARTchar@NinethBit_override_data:
  6825                           	opt stack 0
  6826  000009                     i1BufferCopy@from:
  6827                           	opt stack 0
  6828                           
  6829                           ; 2 bytes @ 0x8
  6830  000009                     	ds	1
  6831  00000A                     ??i1_UARTchar:
  6832  00000A                     i1delayUS@j:
  6833                           	opt stack 0
  6834                           
  6835                           ; 1 bytes @ 0x9
  6836  00000A                     	ds	1
  6837  00000B                     i1UARTchar@data:
  6838                           	opt stack 0
  6839  00000B                     i1SendLCDbyte@isCommand:
  6840                           	opt stack 0
  6841  00000B                     i1BufferCopy@to:
  6842                           	opt stack 0
  6843                           
  6844                           ; 2 bytes @ 0xA
  6845  00000B                     	ds	1
  6846  00000C                     IRrawToNEC@Pause:
  6847                           	opt stack 0
  6848  00000C                     i1SendLCDbyte@data:
  6849                           	opt stack 0
  6850  00000C                     i1UARTstring@data:
  6851                           	opt stack 0
  6852                           
  6853                           ; 2 bytes @ 0xB
  6854  00000C                     	ds	1
  6855  00000D                     IRrawToNEC@first:
  6856                           	opt stack 0
  6857  00000D                     i1BufferCopy@count:
  6858                           	opt stack 0
  6859  00000D                     i1SendLCDbyte@MSB_nibble:
  6860                           	opt stack 0
  6861                           
  6862                           ; 1 bytes @ 0xC
  6863  00000D                     	ds	1
  6864  00000E                     ??i1_UARTstring:
  6865  00000E                     IRrawToNEC@i:
  6866                           	opt stack 0
  6867  00000E                     i1BufferCopy@shift:
  6868                           	opt stack 0
  6869  00000E                     i1SendLCDbyte@LSB_nibble:
  6870                           	opt stack 0
  6871                           
  6872                           ; 1 bytes @ 0xD
  6873  00000E                     	ds	1
  6874  00000F                     IRrawToNEC@StartBit:
  6875                           	opt stack 0
  6876  00000F                     i1BufferCopy@i:
  6877                           	opt stack 0
  6878  00000F                     i1SetLCDcursor@Col:
  6879                           	opt stack 0
  6880  00000F                     i1LCDPrintChar@character:
  6881                           	opt stack 0
  6882  00000F                     i1LCDPrintString@Text:
  6883                           	opt stack 0
  6884                           
  6885                           ; 2 bytes @ 0xE
  6886  00000F                     	ds	1
  6887  000010                     i1SetLCDcursor@Row:
  6888                           	opt stack 0
  6889                           
  6890                           ; 1 bytes @ 0xF
  6891  000010                     	ds	1
  6892  000011                     i1SetLCDcursor@address:
  6893                           	opt stack 0
  6894  000011                     i1LCDPrintString@c:
  6895                           	opt stack 0
  6896                           
  6897                           ; 2 bytes @ 0x10
  6898  000011                     	ds	2
  6899  000013                     
  6900                           ; 0 bytes @ 0x12
  6901  000013                     	ds	9
  6902  00001C                     i1GetMemoryBaud@baud:
  6903                           	opt stack 0
  6904  00001C                     i1GetMemoryLong@temp:
  6905                           	opt stack 0
  6906                           
  6907                           ; 4 bytes @ 0x1B
  6908  00001C                     	ds	4
  6909  000020                     i1GetMemoryBaud@BaudTempH:
  6910                           	opt stack 0
  6911  000020                     i1GetMemoryLong@H:
  6912                           	opt stack 0
  6913                           
  6914                           ; 1 bytes @ 0x1F
  6915  000020                     	ds	1
  6916  000021                     i1GetMemoryBaud@BaudTempMH:
  6917                           	opt stack 0
  6918  000021                     i1GetMemoryLong@MH:
  6919                           	opt stack 0
  6920                           
  6921                           ; 1 bytes @ 0x20
  6922  000021                     	ds	1
  6923  000022                     i1GetMemoryBaud@BaudTempML:
  6924                           	opt stack 0
  6925  000022                     i1GetMemoryLong@ML:
  6926                           	opt stack 0
  6927                           
  6928                           ; 1 bytes @ 0x21
  6929  000022                     	ds	1
  6930  000023                     i1GetMemoryBaud@BaudTempL:
  6931                           	opt stack 0
  6932  000023                     i1GetMemoryLong@L:
  6933                           	opt stack 0
  6934                           
  6935                           ; 1 bytes @ 0x22
  6936  000023                     	ds	1
  6937  000024                     i1GetMemoryLong@AddressFirst:
  6938                           	opt stack 0
  6939  000024                     i1SetMemoryBaud@Baud:
  6940                           	opt stack 0
  6941                           
  6942                           ; 4 bytes @ 0x23
  6943  000024                     	ds	1
  6944  000025                     i1SetMemoryLong@Data:
  6945                           	opt stack 0
  6946                           
  6947                           ; 4 bytes @ 0x24
  6948  000025                     	ds	3
  6949  000028                     ??i1_SetMemoryBaud:
  6950                           
  6951                           ; 0 bytes @ 0x27
  6952  000028                     	ds	1
  6953  000029                     i1SetMemoryLong@AddressFirst:
  6954                           	opt stack 0
  6955                           
  6956                           ; 1 bytes @ 0x28
  6957  000029                     	ds	1
  6958  00002A                     ??i1_SetMemoryLong:
  6959                           
  6960                           ; 0 bytes @ 0x29
  6961  00002A                     	ds	2
  6962  00002C                     i1SetMemoryBaud@Test:
  6963                           	opt stack 0
  6964                           
  6965                           ; 4 bytes @ 0x2B
  6966  00002C                     	ds	2
  6967  00002E                     i1SetMemoryLong@Test:
  6968                           	opt stack 0
  6969                           
  6970                           ; 4 bytes @ 0x2D
  6971  00002E                     	ds	2
  6972  000030                     i1SetMemoryBaud@BaudTempH:
  6973                           	opt stack 0
  6974                           
  6975                           ; 1 bytes @ 0x2F
  6976  000030                     	ds	1
  6977  000031                     i1SetMemoryBaud@BaudTempMH:
  6978                           	opt stack 0
  6979                           
  6980                           ; 1 bytes @ 0x30
  6981  000031                     	ds	1
  6982  000032                     i1SetMemoryBaud@BaudTempML:
  6983                           	opt stack 0
  6984  000032                     i1SetMemoryLong@H:
  6985                           	opt stack 0
  6986                           
  6987                           ; 1 bytes @ 0x31
  6988  000032                     	ds	1
  6989  000033                     i1SetMemoryBaud@BaudTempL:
  6990                           	opt stack 0
  6991  000033                     i1SetMemoryLong@MH:
  6992                           	opt stack 0
  6993                           
  6994                           ; 1 bytes @ 0x32
  6995  000033                     	ds	1
  6996  000034                     i1SetMemoryLong@ML:
  6997                           	opt stack 0
  6998                           
  6999                           ; 1 bytes @ 0x33
  7000  000034                     	ds	1
  7001  000035                     i1SetMemoryLong@L:
  7002                           	opt stack 0
  7003                           
  7004                           ; 1 bytes @ 0x34
  7005  000035                     	ds	1
  7006  000036                     ?i1_SetEEPROM:
  7007                           	opt stack 0
  7008  000036                     i1SetEEPROM@Temp:
  7009                           	opt stack 0
  7010                           
  7011                           ; 9 bytes @ 0x35
  7012  000036                     	ds	9
  7013  00003F                     i1SetEEPROM@burn:
  7014                           	opt stack 0
  7015                           
  7016                           ; 4 bytes @ 0x3E
  7017  00003F                     	ds	4
  7018  000043                     i1SetEEPROM@fail:
  7019                           	opt stack 0
  7020                           
  7021                           ; 4 bytes @ 0x42
  7022  000043                     	ds	4
  7023  000047                     UseIRCode@Code:
  7024                           	opt stack 0
  7025                           
  7026                           ; 2 bytes @ 0x46
  7027  000047                     	ds	2
  7028  000049                     UseIRCode@NEC:
  7029                           	opt stack 0
  7030                           
  7031                           ; 4 bytes @ 0x48
  7032  000049                     	ds	4
  7033  00004D                     
  7034                           ; 0 bytes @ 0x4C
  7035  00004D                     	ds	1
  7036  00004E                     UseIRCode@i:
  7037                           	opt stack 0
  7038                           
  7039                           ; 1 bytes @ 0x4D
  7040  00004E                     	ds	1
  7041                           tblptru	equ	0xFF8
  7042                           tblptrh	equ	0xFF7
  7043                           tblptrl	equ	0xFF6
  7044                           tablat	equ	0xFF5
  7045                           postinc0	equ	0xFEE
  7046                           wreg	equ	0xFE8
  7047                           postdec1	equ	0xFE5
  7048                           fsr1l	equ	0xFE1
  7049                           
  7050 ;;
  7051 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7052 ;;
  7053 ;; *************** function _main *****************
  7054 ;; Defined at:
  7055 ;;		line 84 in file "main.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;		None
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;  count           1  228[BANK2 ] unsigned char 
  7060 ;;  ii              1  227[BANK2 ] unsigned char 
  7061 ;;  MemoryBurnfl    1  226[BANK2 ] unsigned char 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;		None               void
  7064 ;; Registers used:
  7065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7072 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  7073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7074 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  7075 ;;Total ram usage:        3 bytes
  7076 ;; Hardware stack levels required when called:   13
  7077 ;; This function calls:
  7078 ;;		_ClearLCD
  7079 ;;		_Command
  7080 ;;		_ConfigureOscillator
  7081 ;;		_ContrastPWM_init
  7082 ;;		_EnableInternalADC
  7083 ;;		_InitApp
  7084 ;;		_InitUART
  7085 ;;		_Init_I2C_Master
  7086 ;;		_LCDPrintChar
  7087 ;;		_LCDPrintString
  7088 ;;		_PWM_init
  7089 ;;		_RTC_INIT
  7090 ;;		_ReadUSART
  7091 ;;		_SetContrast
  7092 ;;		_SetDuty
  7093 ;;		_SetEEPROM
  7094 ;;		_SetLCDcursor
  7095 ;;		_SyncEEPROMandGLOBAL
  7096 ;;		_UARTstring
  7097 ;;		_cleanBuffer
  7098 ;;		_delayUS
  7099 ;;		_init_IR
  7100 ;;		_init_LCD
  7101 ;; This function is called by:
  7102 ;;		Startup code after reset
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text0
  7107  01387C                     __ptext0:
  7108                           	opt stack 0
  7109  01387C                     _main:
  7110                           	opt stack 18
  7111                           
  7112                           ;main.c: 86: unsigned char ii = 0;
  7113                           
  7114                           ;incstack = 0
  7115  01387C  0E00               	movlw	0
  7116  01387E  0102               	movlb	2	; () banked
  7117  013880  6FE3               	movwf	main@ii& (0+255),b
  7118                           
  7119                           ;main.c: 87: unsigned char count = 0;
  7120  013882  0E00               	movlw	0
  7121  013884  0102               	movlb	2	; () banked
  7122  013886  6FE4               	movwf	main@count& (0+255),b
  7123                           
  7124                           ;main.c: 88: unsigned char MemoryBurnflag = 0;
  7125  013888  0E00               	movlw	0
  7126  01388A  0102               	movlb	2	; () banked
  7127  01388C  6FE2               	movwf	main@MemoryBurnflag& (0+255),b
  7128                           
  7129                           ; BSR set to: 2
  7130                           ;main.c: 90: ConfigureOscillator();
  7131  01388E  ECB8  F007         	call	_ConfigureOscillator	;wreg free
  7132                           
  7133                           ;main.c: 91: InitApp();
  7134  013892  ECD6  F002         	call	_InitApp	;wreg free
  7135                           
  7136                           ;main.c: 92: EnableInternalADC(1);
  7137  013896  0E01               	movlw	1
  7138  013898  EC0B  F0B7         	call	_EnableInternalADC
  7139                           
  7140                           ;main.c: 93: PWM_init();
  7141  01389C  ECEC  F005         	call	_PWM_init	;wreg free
  7142                           
  7143                           ;main.c: 94: ContrastPWM_init();
  7144  0138A0  EC9E  F007         	call	_ContrastPWM_init	;wreg free
  7145                           
  7146                           ;main.c: 95: Init_I2C_Master();
  7147  0138A4  EC81  F003         	call	_Init_I2C_Master	;wreg free
  7148                           
  7149                           ;main.c: 96: RTC_INIT();
  7150  0138A8  EC73  F007         	call	_RTC_INIT	;wreg free
  7151                           
  7152                           ;main.c: 97: init_LCD();
  7153  0138AC  ECC3  F0AC         	call	_init_LCD	;wreg free
  7154                           
  7155                           ;main.c: 99: SyncEEPROMandGLOBAL();
  7156  0138B0  EC19  F005         	call	_SyncEEPROMandGLOBAL	;wreg free
  7157                           
  7158                           ;main.c: 101: if(Global.Baud < 2400 || Global.Baud > 115200)
  7159  0138B4  0101               	movlb	1	; () banked
  7160  0138B6  518D               	movf	(_Global+3)& (0+255),w,b
  7161  0138B8  0101               	movlb	1	; () banked
  7162  0138BA  118C               	iorwf	(_Global+2)& (0+255),w,b
  7163  0138BC  E108               	bnz	u19590
  7164  0138BE  0E60               	movlw	96
  7165  0138C0  0101               	movlb	1	; () banked
  7166  0138C2  5D8A               	subwf	_Global& (0+255),w,b
  7167  0138C4  0E09               	movlw	9
  7168  0138C6  0101               	movlb	1	; () banked
  7169  0138C8  598B               	subwfb	(_Global+1)& (0+255),w,b
  7170  0138CA  A0D8               	btfss	status,0,c
  7171  0138CC  D00F               	goto	l15341
  7172  0138CE                     u19590:
  7173                           
  7174                           ; BSR set to: 1
  7175  0138CE  0101               	movlb	1	; () banked
  7176  0138D0  518D               	movf	(_Global+3)& (0+255),w,b
  7177  0138D2  E10C               	bnz	l15341
  7178  0138D4  0101               	movlb	1	; () banked
  7179  0138D6  058A               	decf	_Global& (0+255),w,b
  7180  0138D8  0EC2               	movlw	194
  7181  0138DA  0101               	movlb	1	; () banked
  7182  0138DC  598B               	subwfb	(_Global+1)& (0+255),w,b
  7183  0138DE  0E01               	movlw	1
  7184  0138E0  0101               	movlb	1	; () banked
  7185  0138E2  598C               	subwfb	(_Global+2)& (0+255),w,b
  7186  0138E4  B0D8               	btfsc	status,0,c
  7187  0138E6  D002               	goto	l15341
  7188  0138E8  D02F               	goto	l15347
  7189  0138EA  D000               	goto	l15341
  7190  0138EC                     l15341:
  7191                           
  7192                           ; BSR set to: 1
  7193                           ;main.c: 102: {
  7194                           ;main.c: 104: Global.Baud = 9600;
  7195  0138EC  0E80               	movlw	128
  7196  0138EE  0101               	movlb	1	; () banked
  7197  0138F0  6F8A               	movwf	_Global& (0+255),b
  7198  0138F2  0E25               	movlw	37
  7199  0138F4  6F8B               	movwf	(_Global+1)& (0+255),b
  7200  0138F6  0E00               	movlw	0
  7201  0138F8  6F8C               	movwf	(_Global+2)& (0+255),b
  7202  0138FA  0E00               	movlw	0
  7203  0138FC  6F8D               	movwf	(_Global+3)& (0+255),b
  7204                           
  7205                           ;main.c: 105: Global.Parity = 0;
  7206  0138FE  0E00               	movlw	0
  7207  013900  0101               	movlb	1	; () banked
  7208  013902  6F8E               	movwf	(_Global+4)& (0+255),b
  7209                           
  7210                           ; BSR set to: 1
  7211                           ;main.c: 107: if(!SetEEPROM(Global,0x3))
  7212  013904  EE21  F08A         	lfsr	2,_Global
  7213  013908  EE01  F043         	lfsr	0,SetEEPROM@Temp
  7214  01390C  0E08               	movlw	8
  7215  01390E                     u19611:
  7216  01390E  CFDB FFEB          	movff	plusw2,plusw0
  7217  013912  06E8               	decf	wreg,f,c
  7218  013914  E2FC               	bc	u19611
  7219  013916  0E03               	movlw	3
  7220  013918  0101               	movlb	1	; () banked
  7221  01391A  6F4C               	movwf	SetEEPROM@burn& (0+255),b
  7222  01391C  0E00               	movlw	0
  7223  01391E  6F4D               	movwf	(SetEEPROM@burn+1)& (0+255),b
  7224  013920  0E00               	movlw	0
  7225  013922  6F4E               	movwf	(SetEEPROM@burn+2)& (0+255),b
  7226  013924  0E00               	movlw	0
  7227  013926  6F4F               	movwf	(SetEEPROM@burn+3)& (0+255),b
  7228  013928  EC5D  F0B6         	call	_SetEEPROM	;wreg free
  7229  01392C  0101               	movlb	1	; () banked
  7230  01392E  5143               	movf	?_SetEEPROM& (0+255),w,b
  7231  013930  0101               	movlb	1	; () banked
  7232  013932  1144               	iorwf	(?_SetEEPROM+1)& (0+255),w,b
  7233  013934  0101               	movlb	1	; () banked
  7234  013936  1145               	iorwf	(?_SetEEPROM+2)& (0+255),w,b
  7235  013938  0101               	movlb	1	; () banked
  7236  01393A  1146               	iorwf	(?_SetEEPROM+3)& (0+255),w,b
  7237  01393C  A4D8               	btfss	status,2,c
  7238  01393E  D004               	goto	l15347
  7239                           
  7240                           ; BSR set to: 1
  7241                           ;main.c: 108: {
  7242                           ;main.c: 110: MemoryBurnflag = 1;
  7243  013940  0E01               	movlw	1
  7244  013942  0102               	movlb	2	; () banked
  7245  013944  6FE2               	movwf	main@MemoryBurnflag& (0+255),b
  7246                           
  7247                           ; BSR set to: 2
  7248  013946  D000               	goto	l15347
  7249  013948                     l15347:
  7250                           
  7251                           ;main.c: 111: }
  7252                           ;main.c: 112: }
  7253                           ;main.c: 113: SyncEEPROMandGLOBAL();
  7254  013948  EC19  F005         	call	_SyncEEPROMandGLOBAL	;wreg free
  7255                           
  7256                           ;main.c: 114: InitUART(Global.Baud, Global.Parity);
  7257  01394C  C18A  F11B         	movff	_Global,InitUART@Baud
  7258  013950  C18B  F11C         	movff	_Global+1,InitUART@Baud+1
  7259  013954  C18C  F11D         	movff	_Global+2,InitUART@Baud+2
  7260  013958  C18D  F11E         	movff	_Global+3,InitUART@Baud+3
  7261  01395C  C18E  F11F         	movff	_Global+4,InitUART@parity
  7262  013960  ECE4  F0A8         	call	_InitUART	;wreg free
  7263                           
  7264                           ;main.c: 115: UARTstring("Firmware Version: ");
  7265  013964  0E13               	movlw	low STR_6
  7266  013966  0101               	movlb	1	; () banked
  7267  013968  6F19               	movwf	UARTstring@data& (0+255),b
  7268  01396A  0EF8               	movlw	high STR_6
  7269  01396C  0101               	movlb	1	; () banked
  7270  01396E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
  7271  013970  EC03  F0B8         	call	_UARTstring	;wreg free
  7272                           
  7273                           ;main.c: 116: UARTstring(Version);
  7274  013974  0EA4               	movlw	low _Version
  7275  013976  0101               	movlb	1	; () banked
  7276  013978  6F19               	movwf	UARTstring@data& (0+255),b
  7277  01397A  0E03               	movlw	high _Version
  7278  01397C  0101               	movlb	1	; () banked
  7279  01397E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
  7280  013980  EC03  F0B8         	call	_UARTstring	;wreg free
  7281                           
  7282                           ;main.c: 117: UARTstring("\r\n");
  7283  013984  0ECE               	movlw	low (STR_282+19)
  7284  013986  0101               	movlb	1	; () banked
  7285  013988  6F19               	movwf	UARTstring@data& (0+255),b
  7286  01398A  0EF6               	movlw	high (STR_282+19)
  7287  01398C  0101               	movlb	1	; () banked
  7288  01398E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
  7289  013990  EC03  F0B8         	call	_UARTstring	;wreg free
  7290                           
  7291                           ;main.c: 119: for(ii =0; ii <10;ii++)
  7292  013994  0E00               	movlw	0
  7293  013996  0102               	movlb	2	; () banked
  7294  013998  6FE3               	movwf	main@ii& (0+255),b
  7295  01399A                     l15359:
  7296                           
  7297                           ; BSR set to: 2
  7298  01399A  0E09               	movlw	9
  7299  01399C  0102               	movlb	2	; () banked
  7300  01399E  65E3               	cpfsgt	main@ii& (0+255),b
  7301  0139A0  D001               	goto	l15363
  7302                           
  7303                           ; BSR set to: 2
  7304  0139A2  D01D               	goto	l15375
  7305  0139A4                     l15363:
  7306                           
  7307                           ; BSR set to: 2
  7308                           ;main.c: 120: {
  7309                           ;main.c: 121: LATD |= 0b00000010;
  7310  0139A4  828C               	bsf	3980,1,c	;volatile
  7311                           
  7312                           ;main.c: 122: LATD &= ~0b00000100;
  7313  0139A6  948C               	bcf	3980,2,c	;volatile
  7314                           
  7315                           ; BSR set to: 2
  7316                           ;main.c: 123: delayUS(50000);
  7317  0139A8  0E50               	movlw	80
  7318  0139AA  0101               	movlb	1	; () banked
  7319  0139AC  6F0E               	movwf	delayUS@US& (0+255),b
  7320  0139AE  0EC3               	movlw	195
  7321  0139B0  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7322  0139B2  0E00               	movlw	0
  7323  0139B4  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7324  0139B6  0E00               	movlw	0
  7325  0139B8  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7326  0139BA  EC58  F0BD         	call	_delayUS	;wreg free
  7327                           
  7328                           ;main.c: 124: LATD |= 0b00000100;
  7329  0139BE  848C               	bsf	3980,2,c	;volatile
  7330                           
  7331                           ;main.c: 125: LATD &= ~0b00000010;
  7332  0139C0  928C               	bcf	3980,1,c	;volatile
  7333                           
  7334                           ;main.c: 126: delayUS(50000);
  7335  0139C2  0E50               	movlw	80
  7336  0139C4  0101               	movlb	1	; () banked
  7337  0139C6  6F0E               	movwf	delayUS@US& (0+255),b
  7338  0139C8  0EC3               	movlw	195
  7339  0139CA  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7340  0139CC  0E00               	movlw	0
  7341  0139CE  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7342  0139D0  0E00               	movlw	0
  7343  0139D2  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7344  0139D4  EC58  F0BD         	call	_delayUS	;wreg free
  7345  0139D8  0102               	movlb	2	; () banked
  7346  0139DA  2BE3               	incf	main@ii& (0+255),f,b
  7347  0139DC  D7DE               	goto	l15359
  7348  0139DE                     l15375:
  7349                           
  7350                           ; BSR set to: 2
  7351                           ;main.c: 127: }
  7352                           ;main.c: 128: LATD &= ~0b00000100;
  7353  0139DE  948C               	bcf	3980,2,c	;volatile
  7354                           
  7355                           ; BSR set to: 2
  7356                           ;main.c: 129: SetContrast(65);
  7357  0139E0  0E41               	movlw	65
  7358  0139E2  EC69  F0B3         	call	_SetContrast
  7359                           
  7360                           ;main.c: 130: delayUS(20);
  7361  0139E6  0E14               	movlw	20
  7362  0139E8  0101               	movlb	1	; () banked
  7363  0139EA  6F0E               	movwf	delayUS@US& (0+255),b
  7364  0139EC  0E00               	movlw	0
  7365  0139EE  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7366  0139F0  0E00               	movlw	0
  7367  0139F2  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7368  0139F4  0E00               	movlw	0
  7369  0139F6  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7370  0139F8  EC58  F0BD         	call	_delayUS	;wreg free
  7371                           
  7372                           ;main.c: 131: SetLCDcursor(0, 0);
  7373  0139FC  0E00               	movlw	0
  7374  0139FE  0101               	movlb	1	; () banked
  7375  013A00  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7376  013A02  0E00               	movlw	0
  7377  013A04  EC9F  F004         	call	_SetLCDcursor
  7378                           
  7379                           ;main.c: 132: if(MemoryBurnflag)
  7380  013A08  0102               	movlb	2	; () banked
  7381  013A0A  51E2               	movf	main@MemoryBurnflag& (0+255),w,b
  7382  013A0C  0102               	movlb	2	; () banked
  7383  013A0E  B4D8               	btfsc	status,2,c
  7384  013A10  D024               	goto	l15393
  7385                           
  7386                           ; BSR set to: 2
  7387                           ;main.c: 133: {
  7388                           ;main.c: 134: UARTstring("Error: Could not burn default Baud rate into Memory\r\n");
  7389  013A12  0E22               	movlw	low STR_8
  7390  013A14  0101               	movlb	1	; () banked
  7391  013A16  6F19               	movwf	UARTstring@data& (0+255),b
  7392  013A18  0EF0               	movlw	high STR_8
  7393  013A1A  0101               	movlb	1	; () banked
  7394  013A1C  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
  7395  013A1E  EC03  F0B8         	call	_UARTstring	;wreg free
  7396                           
  7397                           ;main.c: 135: LCDPrintString("Err: Baud Mem");
  7398  013A22  0EC5               	movlw	low STR_9
  7399  013A24  0101               	movlb	1	; () banked
  7400  013A26  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  7401  013A28  0EFC               	movlw	high STR_9
  7402  013A2A  0101               	movlb	1	; () banked
  7403  013A2C  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7404  013A2E  ECC7  F0BB         	call	_LCDPrintString	;wreg free
  7405                           
  7406                           ;main.c: 136: delayUS(100000);
  7407  013A32  0EA0               	movlw	160
  7408  013A34  0101               	movlb	1	; () banked
  7409  013A36  6F0E               	movwf	delayUS@US& (0+255),b
  7410  013A38  0E86               	movlw	134
  7411  013A3A  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7412  013A3C  0E01               	movlw	1
  7413  013A3E  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7414  013A40  0E00               	movlw	0
  7415  013A42  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7416  013A44  EC58  F0BD         	call	_delayUS	;wreg free
  7417                           
  7418                           ;main.c: 137: ClearLCD();
  7419  013A48  ECF4  F006         	call	_ClearLCD	;wreg free
  7420                           
  7421                           ;main.c: 138: SetLCDcursor(0, 0);
  7422  013A4C  0E00               	movlw	0
  7423  013A4E  0101               	movlb	1	; () banked
  7424  013A50  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7425  013A52  0E00               	movlw	0
  7426  013A54  EC9F  F004         	call	_SetLCDcursor
  7427  013A58  D000               	goto	l15393
  7428  013A5A                     l15393:
  7429                           
  7430                           ;main.c: 139: }
  7431                           ;main.c: 140: LCDPrintString("Starting");
  7432  013A5A  0EE9               	movlw	low STR_10
  7433  013A5C  0101               	movlb	1	; () banked
  7434  013A5E  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  7435  013A60  0EFE               	movlw	high STR_10
  7436  013A62  0101               	movlb	1	; () banked
  7437  013A64  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7438  013A66  ECC7  F0BB         	call	_LCDPrintString	;wreg free
  7439                           
  7440                           ;main.c: 141: UARTstring("Starting...");
  7441  013A6A  0EAB               	movlw	low STR_11
  7442  013A6C  0101               	movlb	1	; () banked
  7443  013A6E  6F19               	movwf	UARTstring@data& (0+255),b
  7444  013A70  0EFD               	movlw	high STR_11
  7445  013A72  0101               	movlb	1	; () banked
  7446  013A74  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
  7447  013A76  EC03  F0B8         	call	_UARTstring	;wreg free
  7448                           
  7449                           ;main.c: 142: delayUS(100000);
  7450  013A7A  0EA0               	movlw	160
  7451  013A7C  0101               	movlb	1	; () banked
  7452  013A7E  6F0E               	movwf	delayUS@US& (0+255),b
  7453  013A80  0E86               	movlw	134
  7454  013A82  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7455  013A84  0E01               	movlw	1
  7456  013A86  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7457  013A88  0E00               	movlw	0
  7458  013A8A  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7459  013A8C  EC58  F0BD         	call	_delayUS	;wreg free
  7460                           
  7461                           ;main.c: 143: SetLCDcursor(0, 0);
  7462  013A90  0E00               	movlw	0
  7463  013A92  0101               	movlb	1	; () banked
  7464  013A94  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7465  013A96  0E00               	movlw	0
  7466  013A98  EC9F  F004         	call	_SetLCDcursor
  7467                           
  7468                           ;main.c: 144: LCDPrintString("Starting.");
  7469  013A9C  0E7C               	movlw	low STR_12
  7470  013A9E  0101               	movlb	1	; () banked
  7471  013AA0  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  7472  013AA2  0EFE               	movlw	high STR_12
  7473  013AA4  0101               	movlb	1	; () banked
  7474  013AA6  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7475  013AA8  ECC7  F0BB         	call	_LCDPrintString	;wreg free
  7476                           
  7477                           ;main.c: 145: delayUS(100000);
  7478  013AAC  0EA0               	movlw	160
  7479  013AAE  0101               	movlb	1	; () banked
  7480  013AB0  6F0E               	movwf	delayUS@US& (0+255),b
  7481  013AB2  0E86               	movlw	134
  7482  013AB4  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7483  013AB6  0E01               	movlw	1
  7484  013AB8  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7485  013ABA  0E00               	movlw	0
  7486  013ABC  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7487  013ABE  EC58  F0BD         	call	_delayUS	;wreg free
  7488                           
  7489                           ;main.c: 146: SetLCDcursor(0, 0);
  7490  013AC2  0E00               	movlw	0
  7491  013AC4  0101               	movlb	1	; () banked
  7492  013AC6  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7493  013AC8  0E00               	movlw	0
  7494  013ACA  EC9F  F004         	call	_SetLCDcursor
  7495                           
  7496                           ;main.c: 147: LCDPrintString("Starting..");
  7497  013ACE  0EF9               	movlw	low STR_13
  7498  013AD0  0101               	movlb	1	; () banked
  7499  013AD2  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  7500  013AD4  0EFD               	movlw	high STR_13
  7501  013AD6  0101               	movlb	1	; () banked
  7502  013AD8  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7503  013ADA  ECC7  F0BB         	call	_LCDPrintString	;wreg free
  7504                           
  7505                           ;main.c: 148: delayUS(100000);
  7506  013ADE  0EA0               	movlw	160
  7507  013AE0  0101               	movlb	1	; () banked
  7508  013AE2  6F0E               	movwf	delayUS@US& (0+255),b
  7509  013AE4  0E86               	movlw	134
  7510  013AE6  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7511  013AE8  0E01               	movlw	1
  7512  013AEA  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7513  013AEC  0E00               	movlw	0
  7514  013AEE  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7515  013AF0  EC58  F0BD         	call	_delayUS	;wreg free
  7516                           
  7517                           ;main.c: 149: SetLCDcursor(0, 0);
  7518  013AF4  0E00               	movlw	0
  7519  013AF6  0101               	movlb	1	; () banked
  7520  013AF8  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7521  013AFA  0E00               	movlw	0
  7522  013AFC  EC9F  F004         	call	_SetLCDcursor
  7523                           
  7524                           ;main.c: 150: LCDPrintString("Starting...");
  7525  013B00  0EAB               	movlw	low STR_11
  7526  013B02  0101               	movlb	1	; () banked
  7527  013B04  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  7528  013B06  0EFD               	movlw	high STR_11
  7529  013B08  0101               	movlb	1	; () banked
  7530  013B0A  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7531  013B0C  ECC7  F0BB         	call	_LCDPrintString	;wreg free
  7532                           
  7533                           ;main.c: 151: delayUS(100000);
  7534  013B10  0EA0               	movlw	160
  7535  013B12  0101               	movlb	1	; () banked
  7536  013B14  6F0E               	movwf	delayUS@US& (0+255),b
  7537  013B16  0E86               	movlw	134
  7538  013B18  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7539  013B1A  0E01               	movlw	1
  7540  013B1C  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7541  013B1E  0E00               	movlw	0
  7542  013B20  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7543  013B22  EC58  F0BD         	call	_delayUS	;wreg free
  7544                           
  7545                           ;main.c: 152: SetLCDcursor(0, 0);
  7546  013B26  0E00               	movlw	0
  7547  013B28  0101               	movlb	1	; () banked
  7548  013B2A  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7549  013B2C  0E00               	movlw	0
  7550  013B2E  EC9F  F004         	call	_SetLCDcursor
  7551                           
  7552                           ;main.c: 153: LCDPrintString("Starting....");
  7553  013B32  0E62               	movlw	low STR_15
  7554  013B34  0101               	movlb	1	; () banked
  7555  013B36  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  7556  013B38  0EFD               	movlw	high STR_15
  7557  013B3A  0101               	movlb	1	; () banked
  7558  013B3C  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7559  013B3E  ECC7  F0BB         	call	_LCDPrintString	;wreg free
  7560                           
  7561                           ;main.c: 154: delayUS(100000);
  7562  013B42  0EA0               	movlw	160
  7563  013B44  0101               	movlb	1	; () banked
  7564  013B46  6F0E               	movwf	delayUS@US& (0+255),b
  7565  013B48  0E86               	movlw	134
  7566  013B4A  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7567  013B4C  0E01               	movlw	1
  7568  013B4E  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7569  013B50  0E00               	movlw	0
  7570  013B52  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7571  013B54  EC58  F0BD         	call	_delayUS	;wreg free
  7572                           
  7573                           ;main.c: 155: SetLCDcursor(0, 0);
  7574  013B58  0E00               	movlw	0
  7575  013B5A  0101               	movlb	1	; () banked
  7576  013B5C  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7577  013B5E  0E00               	movlw	0
  7578  013B60  EC9F  F004         	call	_SetLCDcursor
  7579                           
  7580                           ;main.c: 156: LCDPrintString("Starting.....");
  7581  013B64  0EB7               	movlw	low STR_16
  7582  013B66  0101               	movlb	1	; () banked
  7583  013B68  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  7584  013B6A  0EFC               	movlw	high STR_16
  7585  013B6C  0101               	movlb	1	; () banked
  7586  013B6E  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7587  013B70  ECC7  F0BB         	call	_LCDPrintString	;wreg free
  7588                           
  7589                           ;main.c: 157: delayUS(100000);
  7590  013B74  0EA0               	movlw	160
  7591  013B76  0101               	movlb	1	; () banked
  7592  013B78  6F0E               	movwf	delayUS@US& (0+255),b
  7593  013B7A  0E86               	movlw	134
  7594  013B7C  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7595  013B7E  0E01               	movlw	1
  7596  013B80  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7597  013B82  0E00               	movlw	0
  7598  013B84  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7599  013B86  EC58  F0BD         	call	_delayUS	;wreg free
  7600                           
  7601                           ;main.c: 158: SetLCDcursor(0, 0);
  7602  013B8A  0E00               	movlw	0
  7603  013B8C  0101               	movlb	1	; () banked
  7604  013B8E  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7605  013B90  0E00               	movlw	0
  7606  013B92  EC9F  F004         	call	_SetLCDcursor
  7607                           
  7608                           ;main.c: 159: LCDPrintString("Starting......");
  7609  013B96  0E1C               	movlw	low STR_17
  7610  013B98  0101               	movlb	1	; () banked
  7611  013B9A  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  7612  013B9C  0EFC               	movlw	high STR_17
  7613  013B9E  0101               	movlb	1	; () banked
  7614  013BA0  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7615  013BA2  ECC7  F0BB         	call	_LCDPrintString	;wreg free
  7616                           
  7617                           ;main.c: 160: delayUS(100000);
  7618  013BA6  0EA0               	movlw	160
  7619  013BA8  0101               	movlb	1	; () banked
  7620  013BAA  6F0E               	movwf	delayUS@US& (0+255),b
  7621  013BAC  0E86               	movlw	134
  7622  013BAE  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7623  013BB0  0E01               	movlw	1
  7624  013BB2  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7625  013BB4  0E00               	movlw	0
  7626  013BB6  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7627  013BB8  EC58  F0BD         	call	_delayUS	;wreg free
  7628                           
  7629                           ;main.c: 161: SetLCDcursor(0, 0);
  7630  013BBC  0E00               	movlw	0
  7631  013BBE  0101               	movlb	1	; () banked
  7632  013BC0  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7633  013BC2  0E00               	movlw	0
  7634  013BC4  EC9F  F004         	call	_SetLCDcursor
  7635                           
  7636                           ;main.c: 162: LCDPrintString("Starting.......");
  7637  013BC8  0E49               	movlw	low STR_18
  7638  013BCA  0101               	movlb	1	; () banked
  7639  013BCC  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  7640  013BCE  0EFB               	movlw	high STR_18
  7641  013BD0  0101               	movlb	1	; () banked
  7642  013BD2  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7643  013BD4  ECC7  F0BB         	call	_LCDPrintString	;wreg free
  7644                           
  7645                           ;main.c: 163: delayUS(100000);
  7646  013BD8  0EA0               	movlw	160
  7647  013BDA  0101               	movlb	1	; () banked
  7648  013BDC  6F0E               	movwf	delayUS@US& (0+255),b
  7649  013BDE  0E86               	movlw	134
  7650  013BE0  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7651  013BE2  0E01               	movlw	1
  7652  013BE4  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7653  013BE6  0E00               	movlw	0
  7654  013BE8  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7655  013BEA  EC58  F0BD         	call	_delayUS	;wreg free
  7656                           
  7657                           ;main.c: 164: SetLCDcursor(0, 0);
  7658  013BEE  0E00               	movlw	0
  7659  013BF0  0101               	movlb	1	; () banked
  7660  013BF2  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7661  013BF4  0E00               	movlw	0
  7662  013BF6  EC9F  F004         	call	_SetLCDcursor
  7663                           
  7664                           ;main.c: 165: LCDPrintString("Starting........");
  7665  013BFA  0ED8               	movlw	low STR_19
  7666  013BFC  0101               	movlb	1	; () banked
  7667  013BFE  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  7668  013C00  0EF9               	movlw	high STR_19
  7669  013C02  0101               	movlb	1	; () banked
  7670  013C04  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7671  013C06  ECC7  F0BB         	call	_LCDPrintString	;wreg free
  7672                           
  7673                           ;main.c: 166: delayUS(100000);
  7674  013C0A  0EA0               	movlw	160
  7675  013C0C  0101               	movlb	1	; () banked
  7676  013C0E  6F0E               	movwf	delayUS@US& (0+255),b
  7677  013C10  0E86               	movlw	134
  7678  013C12  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7679  013C14  0E01               	movlw	1
  7680  013C16  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7681  013C18  0E00               	movlw	0
  7682  013C1A  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7683  013C1C  EC58  F0BD         	call	_delayUS	;wreg free
  7684                           
  7685                           ;main.c: 167: SetLCDcursor(1, 0);
  7686  013C20  0E00               	movlw	0
  7687  013C22  0101               	movlb	1	; () banked
  7688  013C24  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7689  013C26  0E01               	movlw	1
  7690  013C28  EC9F  F004         	call	_SetLCDcursor
  7691                           
  7692                           ;main.c: 168: LCDPrintString("Enter '?'");
  7693  013C2C  0E72               	movlw	low STR_20
  7694  013C2E  0101               	movlb	1	; () banked
  7695  013C30  6F1C               	movwf	LCDPrintString@Text& (0+255),b
  7696  013C32  0EFE               	movlw	high STR_20
  7697  013C34  0101               	movlb	1	; () banked
  7698  013C36  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7699  013C38  ECC7  F0BB         	call	_LCDPrintString	;wreg free
  7700                           
  7701                           ;main.c: 169: delayUS(100000);
  7702  013C3C  0EA0               	movlw	160
  7703  013C3E  0101               	movlb	1	; () banked
  7704  013C40  6F0E               	movwf	delayUS@US& (0+255),b
  7705  013C42  0E86               	movlw	134
  7706  013C44  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7707  013C46  0E01               	movlw	1
  7708  013C48  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7709  013C4A  0E00               	movlw	0
  7710  013C4C  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7711  013C4E  EC58  F0BD         	call	_delayUS	;wreg free
  7712                           
  7713                           ;main.c: 170: UARTstring("\r\nEnter '?' for Help Menu\r\n>");
  7714  013C52  0EB6               	movlw	low STR_21
  7715  013C54  0101               	movlb	1	; () banked
  7716  013C56  6F19               	movwf	UARTstring@data& (0+255),b
  7717  013C58  0EF4               	movlw	high STR_21
  7718  013C5A  0101               	movlb	1	; () banked
  7719  013C5C  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
  7720  013C5E  EC03  F0B8         	call	_UARTstring	;wreg free
  7721                           
  7722                           ;main.c: 172: for(count =100; count >0; count-=5)
  7723  013C62  0E64               	movlw	100
  7724  013C64  0102               	movlb	2	; () banked
  7725  013C66  6FE4               	movwf	main@count& (0+255),b
  7726  013C68                     l15439:
  7727                           
  7728                           ; BSR set to: 2
  7729  013C68  0102               	movlb	2	; () banked
  7730  013C6A  51E4               	movf	main@count& (0+255),w,b
  7731  013C6C  0102               	movlb	2	; () banked
  7732  013C6E  B4D8               	btfsc	status,2,c
  7733  013C70  D015               	goto	l15449
  7734  013C72  D001               	goto	l15443
  7735                           
  7736                           ; BSR set to: 2
  7737  013C74  D013               	goto	l15449
  7738  013C76                     l15443:
  7739                           
  7740                           ; BSR set to: 2
  7741                           ;main.c: 173: {
  7742                           ;main.c: 174: SetDuty(count);
  7743  013C76  0102               	movlb	2	; () banked
  7744  013C78  51E4               	movf	main@count& (0+255),w,b
  7745  013C7A  ECAB  F0B5         	call	_SetDuty
  7746                           
  7747                           ;main.c: 175: delayUS(50000);
  7748  013C7E  0E50               	movlw	80
  7749  013C80  0101               	movlb	1	; () banked
  7750  013C82  6F0E               	movwf	delayUS@US& (0+255),b
  7751  013C84  0EC3               	movlw	195
  7752  013C86  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7753  013C88  0E00               	movlw	0
  7754  013C8A  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7755  013C8C  0E00               	movlw	0
  7756  013C8E  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7757  013C90  EC58  F0BD         	call	_delayUS	;wreg free
  7758  013C94  0E05               	movlw	5
  7759  013C96  0102               	movlb	2	; () banked
  7760  013C98  5FE4               	subwf	main@count& (0+255),f,b
  7761  013C9A  D7E6               	goto	l15439
  7762  013C9C                     l15449:
  7763                           
  7764                           ; BSR set to: 2
  7765                           ;main.c: 176: }
  7766                           ;main.c: 178: LATD &= ~(0b00000010+0b00000100);
  7767  013C9C  0EF9               	movlw	249
  7768  013C9E  168C               	andwf	3980,f,c	;volatile
  7769                           
  7770                           ; BSR set to: 2
  7771                           ;main.c: 179: ReadUSART();
  7772  013CA0  EC87  F005         	call	_ReadUSART	;wreg free
  7773                           
  7774                           ;main.c: 180: ReadUSART();
  7775  013CA4  EC87  F005         	call	_ReadUSART	;wreg free
  7776                           
  7777                           ;main.c: 181: ReadUSART();
  7778  013CA8  EC87  F005         	call	_ReadUSART	;wreg free
  7779                           
  7780                           ;main.c: 183: ClearLCD();
  7781  013CAC  ECF4  F006         	call	_ClearLCD	;wreg free
  7782                           
  7783                           ;main.c: 184: SetLCDcursor(0, 0);
  7784  013CB0  0E00               	movlw	0
  7785  013CB2  0101               	movlb	1	; () banked
  7786  013CB4  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
  7787  013CB6  0E00               	movlw	0
  7788  013CB8  EC9F  F004         	call	_SetLCDcursor
  7789                           
  7790                           ;main.c: 185: LCDPrintChar('>');
  7791  013CBC  0E3E               	movlw	62
  7792  013CBE  EC4E  F007         	call	_LCDPrintChar
  7793                           
  7794                           ;main.c: 187: init_IR();
  7795  013CC2  EC1B  F004         	call	_init_IR	;wreg free
  7796  013CC6  D000               	goto	l15465
  7797  013CC8                     l15465:
  7798                           
  7799                           ;main.c: 190: {
  7800                           ;main.c: 191: if(BlueLEDcount < 2500)
  7801  013CC8  0EC4               	movlw	196
  7802  013CCA  0101               	movlb	1	; () banked
  7803  013CCC  5DEE               	subwf	_BlueLEDcount& (0+255),w,b
  7804  013CCE  0E09               	movlw	9
  7805  013CD0  0101               	movlb	1	; () banked
  7806  013CD2  59EF               	subwfb	(_BlueLEDcount+1)& (0+255),w,b
  7807  013CD4  B0D8               	btfsc	status,0,c
  7808  013CD6  D004               	goto	l15469
  7809                           
  7810                           ; BSR set to: 1
  7811                           ;main.c: 192: {
  7812                           ;main.c: 193: BlueLEDcount++;
  7813  013CD8  0101               	movlb	1	; () banked
  7814  013CDA  4BEE               	infsnz	_BlueLEDcount& (0+255),f,b
  7815  013CDC  2BEF               	incf	(_BlueLEDcount+1)& (0+255),f,b
  7816                           
  7817                           ;main.c: 194: }
  7818  013CDE  D003               	goto	l15471
  7819  013CE0                     l15469:
  7820                           
  7821                           ; BSR set to: 1
  7822                           ;main.c: 195: else
  7823                           ;main.c: 196: {
  7824                           ;main.c: 197: LATD &= ~0b00000010;
  7825  013CE0  928C               	bcf	3980,1,c	;volatile
  7826                           
  7827                           ;main.c: 198: LATD &= ~0b00000100;
  7828  013CE2  948C               	bcf	3980,2,c	;volatile
  7829  013CE4  D000               	goto	l15471
  7830  013CE6                     l15471:
  7831                           
  7832                           ; BSR set to: 1
  7833                           ;main.c: 199: }
  7834                           ;main.c: 200: if(Rxdata[0] != 0)
  7835  013CE6  0103               	movlb	3	; () banked
  7836  013CE8  5100               	movf	_Rxdata& (0+255),w,b
  7837  013CEA  B4D8               	btfsc	status,2,c
  7838  013CEC  D7ED               	goto	l15465
  7839                           
  7840                           ; BSR set to: 3
  7841                           ;main.c: 201: {
  7842                           ;main.c: 202: if (Rxdata[0] != '\r' && Rxdata[0] != '\n')
  7843  013CEE  0E0D               	movlw	13
  7844  013CF0  0103               	movlb	3	; () banked
  7845  013CF2  1900               	xorwf	_Rxdata& (0+255),w,b
  7846  013CF4  B4D8               	btfsc	status,2,c
  7847  013CF6  D019               	goto	l15481
  7848                           
  7849                           ; BSR set to: 3
  7850  013CF8  0E0A               	movlw	10
  7851  013CFA  0103               	movlb	3	; () banked
  7852  013CFC  1900               	xorwf	_Rxdata& (0+255),w,b
  7853  013CFE  B4D8               	btfsc	status,2,c
  7854  013D00  D014               	goto	l15481
  7855                           
  7856                           ; BSR set to: 3
  7857                           ;main.c: 203: {
  7858                           ;main.c: 204: if(Command(Rxdata))
  7859  013D02  0E00               	movlw	low _Rxdata
  7860  013D04  0101               	movlb	1	; () banked
  7861  013D06  6F88               	movwf	Command@Input& (0+255),b
  7862  013D08  0E03               	movlw	high _Rxdata
  7863  013D0A  0101               	movlb	1	; () banked
  7864  013D0C  6F89               	movwf	(Command@Input+1)& (0+255),b
  7865  013D0E  EC00  F080         	call	_Command	;wreg free
  7866  013D12  0900               	iorlw	0
  7867  013D14  B4D8               	btfsc	status,2,c
  7868  013D16  D009               	goto	l15481
  7869                           
  7870                           ;main.c: 205: {
  7871                           ;main.c: 206: UARTstring("\r\n>");
  7872  013D18  0ECF               	movlw	low (STR_21+25)
  7873  013D1A  0101               	movlb	1	; () banked
  7874  013D1C  6F19               	movwf	UARTstring@data& (0+255),b
  7875  013D1E  0EF4               	movlw	high (STR_21+25)
  7876  013D20  0101               	movlb	1	; () banked
  7877  013D22  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
  7878  013D24  EC03  F0B8         	call	_UARTstring	;wreg free
  7879  013D28  D000               	goto	l15481
  7880  013D2A                     l15481:
  7881                           
  7882                           ;main.c: 207: }
  7883                           ;main.c: 208: }
  7884                           ;main.c: 209: cleanBuffer(Rxdata, 100);
  7885  013D2A  0E00               	movlw	low _Rxdata
  7886  013D2C  0101               	movlb	1	; () banked
  7887  013D2E  6F0E               	movwf	cleanBuffer@data& (0+255),b
  7888  013D30  0E03               	movlw	high _Rxdata
  7889  013D32  0101               	movlb	1	; () banked
  7890  013D34  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
  7891  013D36  0E00               	movlw	0
  7892  013D38  0101               	movlb	1	; () banked
  7893  013D3A  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
  7894  013D3C  0E64               	movlw	100
  7895  013D3E  6F10               	movwf	cleanBuffer@count& (0+255),b
  7896  013D40  EC04  F003         	call	_cleanBuffer	;wreg free
  7897  013D44  D7C1               	goto	l15465
  7898  013D46  EF74  F002         	goto	start
  7899  013D4A                     __end_of_main:
  7900                           	opt stack 0
  7901                           tblptru	equ	0xFF8
  7902                           tblptrh	equ	0xFF7
  7903                           tblptrl	equ	0xFF6
  7904                           tablat	equ	0xFF5
  7905                           postinc0	equ	0xFEE
  7906                           plusw0	equ	0xFEB
  7907                           wreg	equ	0xFE8
  7908                           postdec1	equ	0xFE5
  7909                           fsr1l	equ	0xFE1
  7910                           plusw2	equ	0xFDB
  7911                           status	equ	0xFD8
  7912                           
  7913 ;; *************** function _init_LCD *****************
  7914 ;; Defined at:
  7915 ;;		line 67 in file "LCD.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;		None
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;		None
  7920 ;; Return value:  Size  Location     Type
  7921 ;;		None               void
  7922 ;; Registers used:
  7923 ;;		wreg, status,2, status,0, cstack
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;Total ram usage:        0 bytes
  7934 ;; Hardware stack levels used:    1
  7935 ;; Hardware stack levels required when called:   11
  7936 ;; This function calls:
  7937 ;;		_ClearLCD
  7938 ;;		_PulseEnablePin
  7939 ;;		_SendLCDbyte
  7940 ;;		_delayUS
  7941 ;;		_init_Timer1
  7942 ;; This function is called by:
  7943 ;;		_main
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text1
  7948  015986                     __ptext1:
  7949                           	opt stack 0
  7950  015986                     _init_LCD:
  7951                           	opt stack 19
  7952                           
  7953                           ;LCD.c: 69: LATD &= ~(0b01000000);
  7954                           
  7955                           ;incstack = 0
  7956  015986  9C8C               	bcf	3980,6,c	;volatile
  7957                           
  7958                           ;LCD.c: 70: PulseEnablePin();
  7959  015988  ECA1  F005         	call	_PulseEnablePin	;wreg free
  7960                           
  7961                           ;LCD.c: 71: LATD &= ~(0b10000000 + 0b00100000);
  7962  01598C  0E5F               	movlw	95
  7963  01598E  168C               	andwf	3980,f,c	;volatile
  7964                           
  7965                           ;LCD.c: 72: PulseEnablePin();
  7966  015990  ECA1  F005         	call	_PulseEnablePin	;wreg free
  7967                           
  7968                           ;LCD.c: 74: delayUS(50000);
  7969  015994  0E50               	movlw	80
  7970  015996  0101               	movlb	1	; () banked
  7971  015998  6F0E               	movwf	delayUS@US& (0+255),b
  7972  01599A  0EC3               	movlw	195
  7973  01599C  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7974  01599E  0E00               	movlw	0
  7975  0159A0  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7976  0159A2  0E00               	movlw	0
  7977  0159A4  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7978  0159A6  EC58  F0BD         	call	_delayUS	;wreg free
  7979                           
  7980                           ;LCD.c: 75: SendLCDbyte(0x00, 1);
  7981  0159AA  0E01               	movlw	1
  7982  0159AC  0101               	movlb	1	; () banked
  7983  0159AE  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
  7984  0159B0  0E00               	movlw	0
  7985  0159B2  EC59  F0B0         	call	_SendLCDbyte
  7986                           
  7987                           ;LCD.c: 76: delayUS(50000);
  7988  0159B6  0E50               	movlw	80
  7989  0159B8  0101               	movlb	1	; () banked
  7990  0159BA  6F0E               	movwf	delayUS@US& (0+255),b
  7991  0159BC  0EC3               	movlw	195
  7992  0159BE  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  7993  0159C0  0E00               	movlw	0
  7994  0159C2  6F10               	movwf	(delayUS@US+2)& (0+255),b
  7995  0159C4  0E00               	movlw	0
  7996  0159C6  6F11               	movwf	(delayUS@US+3)& (0+255),b
  7997  0159C8  EC58  F0BD         	call	_delayUS	;wreg free
  7998                           
  7999                           ;LCD.c: 77: SendLCDbyte(0x00, 0);
  8000  0159CC  0E00               	movlw	0
  8001  0159CE  0101               	movlb	1	; () banked
  8002  0159D0  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
  8003  0159D2  0E00               	movlw	0
  8004  0159D4  EC59  F0B0         	call	_SendLCDbyte
  8005                           
  8006                           ;LCD.c: 78: delayUS(50000);
  8007  0159D8  0E50               	movlw	80
  8008  0159DA  0101               	movlb	1	; () banked
  8009  0159DC  6F0E               	movwf	delayUS@US& (0+255),b
  8010  0159DE  0EC3               	movlw	195
  8011  0159E0  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  8012  0159E2  0E00               	movlw	0
  8013  0159E4  6F10               	movwf	(delayUS@US+2)& (0+255),b
  8014  0159E6  0E00               	movlw	0
  8015  0159E8  6F11               	movwf	(delayUS@US+3)& (0+255),b
  8016  0159EA  EC58  F0BD         	call	_delayUS	;wreg free
  8017                           
  8018                           ;LCD.c: 80: LATA |= (0b00100000);
  8019  0159EE  8A89               	bsf	3977,5,c	;volatile
  8020                           
  8021                           ;LCD.c: 81: delayUS(50000);
  8022  0159F0  0E50               	movlw	80
  8023  0159F2  0101               	movlb	1	; () banked
  8024  0159F4  6F0E               	movwf	delayUS@US& (0+255),b
  8025  0159F6  0EC3               	movlw	195
  8026  0159F8  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  8027  0159FA  0E00               	movlw	0
  8028  0159FC  6F10               	movwf	(delayUS@US+2)& (0+255),b
  8029  0159FE  0E00               	movlw	0
  8030  015A00  6F11               	movwf	(delayUS@US+3)& (0+255),b
  8031  015A02  EC58  F0BD         	call	_delayUS	;wreg free
  8032                           
  8033                           ;LCD.c: 82: PulseEnablePin();
  8034  015A06  ECA1  F005         	call	_PulseEnablePin	;wreg free
  8035                           
  8036                           ;LCD.c: 83: delayUS(50000);
  8037  015A0A  0E50               	movlw	80
  8038  015A0C  0101               	movlb	1	; () banked
  8039  015A0E  6F0E               	movwf	delayUS@US& (0+255),b
  8040  015A10  0EC3               	movlw	195
  8041  015A12  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  8042  015A14  0E00               	movlw	0
  8043  015A16  6F10               	movwf	(delayUS@US+2)& (0+255),b
  8044  015A18  0E00               	movlw	0
  8045  015A1A  6F11               	movwf	(delayUS@US+3)& (0+255),b
  8046  015A1C  EC58  F0BD         	call	_delayUS	;wreg free
  8047                           
  8048                           ;LCD.c: 87: SendLCDbyte(0x28, 0);
  8049  015A20  0E00               	movlw	0
  8050  015A22  0101               	movlb	1	; () banked
  8051  015A24  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
  8052  015A26  0E28               	movlw	40
  8053  015A28  EC59  F0B0         	call	_SendLCDbyte
  8054                           
  8055                           ;LCD.c: 88: delayUS(50000);
  8056  015A2C  0E50               	movlw	80
  8057  015A2E  0101               	movlb	1	; () banked
  8058  015A30  6F0E               	movwf	delayUS@US& (0+255),b
  8059  015A32  0EC3               	movlw	195
  8060  015A34  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  8061  015A36  0E00               	movlw	0
  8062  015A38  6F10               	movwf	(delayUS@US+2)& (0+255),b
  8063  015A3A  0E00               	movlw	0
  8064  015A3C  6F11               	movwf	(delayUS@US+3)& (0+255),b
  8065  015A3E  EC58  F0BD         	call	_delayUS	;wreg free
  8066                           
  8067                           ;LCD.c: 91: SendLCDbyte(0x0C, 0);
  8068  015A42  0E00               	movlw	0
  8069  015A44  0101               	movlb	1	; () banked
  8070  015A46  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
  8071  015A48  0E0C               	movlw	12
  8072  015A4A  EC59  F0B0         	call	_SendLCDbyte
  8073                           
  8074                           ;LCD.c: 92: delayUS(50000);
  8075  015A4E  0E50               	movlw	80
  8076  015A50  0101               	movlb	1	; () banked
  8077  015A52  6F0E               	movwf	delayUS@US& (0+255),b
  8078  015A54  0EC3               	movlw	195
  8079  015A56  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  8080  015A58  0E00               	movlw	0
  8081  015A5A  6F10               	movwf	(delayUS@US+2)& (0+255),b
  8082  015A5C  0E00               	movlw	0
  8083  015A5E  6F11               	movwf	(delayUS@US+3)& (0+255),b
  8084  015A60  EC58  F0BD         	call	_delayUS	;wreg free
  8085                           
  8086                           ;LCD.c: 95: SendLCDbyte(0x06, 0);
  8087  015A64  0E00               	movlw	0
  8088  015A66  0101               	movlb	1	; () banked
  8089  015A68  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
  8090  015A6A  0E06               	movlw	6
  8091  015A6C  EC59  F0B0         	call	_SendLCDbyte
  8092                           
  8093                           ;LCD.c: 96: delayUS(50000);
  8094  015A70  0E50               	movlw	80
  8095  015A72  0101               	movlb	1	; () banked
  8096  015A74  6F0E               	movwf	delayUS@US& (0+255),b
  8097  015A76  0EC3               	movlw	195
  8098  015A78  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  8099  015A7A  0E00               	movlw	0
  8100  015A7C  6F10               	movwf	(delayUS@US+2)& (0+255),b
  8101  015A7E  0E00               	movlw	0
  8102  015A80  6F11               	movwf	(delayUS@US+3)& (0+255),b
  8103  015A82  EC58  F0BD         	call	_delayUS	;wreg free
  8104                           
  8105                           ;LCD.c: 98: ClearLCD();
  8106  015A86  ECF4  F006         	call	_ClearLCD	;wreg free
  8107                           
  8108                           ;LCD.c: 99: delayUS(50000);
  8109  015A8A  0E50               	movlw	80
  8110  015A8C  0101               	movlb	1	; () banked
  8111  015A8E  6F0E               	movwf	delayUS@US& (0+255),b
  8112  015A90  0EC3               	movlw	195
  8113  015A92  6F0F               	movwf	(delayUS@US+1)& (0+255),b
  8114  015A94  0E00               	movlw	0
  8115  015A96  6F10               	movwf	(delayUS@US+2)& (0+255),b
  8116  015A98  0E00               	movlw	0
  8117  015A9A  6F11               	movwf	(delayUS@US+3)& (0+255),b
  8118  015A9C  EC58  F0BD         	call	_delayUS	;wreg free
  8119                           
  8120                           ;LCD.c: 101: init_Timer1();
  8121  015AA0  EC6B  F007         	call	_init_Timer1	;wreg free
  8122  015AA4  0012               	return		;funcret
  8123  015AA6                     __end_of_init_LCD:
  8124                           	opt stack 0
  8125                           tblptru	equ	0xFF8
  8126                           tblptrh	equ	0xFF7
  8127                           tblptrl	equ	0xFF6
  8128                           tablat	equ	0xFF5
  8129                           postinc0	equ	0xFEE
  8130                           plusw0	equ	0xFEB
  8131                           wreg	equ	0xFE8
  8132                           postdec1	equ	0xFE5
  8133                           fsr1l	equ	0xFE1
  8134                           plusw2	equ	0xFDB
  8135                           status	equ	0xFD8
  8136                           
  8137 ;; *************** function _init_Timer1 *****************
  8138 ;; Defined at:
  8139 ;;		line 119 in file "Timer.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;		None
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;		None
  8144 ;; Return value:  Size  Location     Type
  8145 ;;		None               void
  8146 ;; Registers used:
  8147 ;;		wreg, status,2, cstack
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8157 ;;Total ram usage:        0 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; Hardware stack levels required when called:    8
  8160 ;; This function calls:
  8161 ;;		_Stop_Timer1
  8162 ;; This function is called by:
  8163 ;;		_init_LCD
  8164 ;;		_init_Timers
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           	psect	text2
  8169  000ED6                     __ptext2:
  8170                           	opt stack 0
  8171  000ED6                     _init_Timer1:
  8172                           	opt stack 21
  8173                           
  8174                           ;Timer.c: 122: T1CONbits.RD16 = 1;
  8175                           
  8176                           ;incstack = 0
  8177  000ED6  8ECD               	bsf	4045,7,c	;volatile
  8178                           
  8179                           ;Timer.c: 124: T1CONbits.TMR1CS = 0;
  8180  000ED8  92CD               	bcf	4045,1,c	;volatile
  8181                           
  8182                           ;Timer.c: 126: T1CONbits.T1CKPS = 0x3;
  8183  000EDA  0E30               	movlw	48
  8184  000EDC  12CD               	iorwf	4045,f,c	;volatile
  8185                           
  8186                           ;Timer.c: 128: IPR1bits.TMR1IP = 0;
  8187  000EDE  909F               	bcf	3999,0,c	;volatile
  8188                           
  8189                           ;Timer.c: 129: Stop_Timer1();
  8190  000EE0  ECB4  F007         	call	_Stop_Timer1	;wreg free
  8191  000EE4  0012               	return		;funcret
  8192  000EE6                     __end_of_init_Timer1:
  8193                           	opt stack 0
  8194                           tblptru	equ	0xFF8
  8195                           tblptrh	equ	0xFF7
  8196                           tblptrl	equ	0xFF6
  8197                           tablat	equ	0xFF5
  8198                           postinc0	equ	0xFEE
  8199                           plusw0	equ	0xFEB
  8200                           wreg	equ	0xFE8
  8201                           postdec1	equ	0xFE5
  8202                           fsr1l	equ	0xFE1
  8203                           plusw2	equ	0xFDB
  8204                           status	equ	0xFD8
  8205                           
  8206 ;; *************** function _Stop_Timer1 *****************
  8207 ;; Defined at:
  8208 ;;		line 137 in file "Timer.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;		None
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;		None               void
  8215 ;; Registers used:
  8216 ;;		None
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;Total ram usage:        0 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; Hardware stack levels required when called:    7
  8229 ;; This function calls:
  8230 ;;		Nothing
  8231 ;; This function is called by:
  8232 ;;		_init_Timer1
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           	psect	text3
  8237  000F68                     __ptext3:
  8238                           	opt stack 0
  8239  000F68                     _Stop_Timer1:
  8240                           	opt stack 21
  8241                           
  8242                           ;Timer.c: 140: T1CONbits.TMR1ON =0;
  8243                           
  8244                           ;incstack = 0
  8245  000F68  90CD               	bcf	4045,0,c	;volatile
  8246                           
  8247                           ;Timer.c: 142: PIR1bits.TMR1IF = 0;
  8248  000F6A  909E               	bcf	3998,0,c	;volatile
  8249                           
  8250                           ;Timer.c: 143: PIE1bits.TMR1IE = 0;
  8251  000F6C  909D               	bcf	3997,0,c	;volatile
  8252  000F6E  0012               	return		;funcret
  8253  000F70                     __end_of_Stop_Timer1:
  8254                           	opt stack 0
  8255                           tblptru	equ	0xFF8
  8256                           tblptrh	equ	0xFF7
  8257                           tblptrl	equ	0xFF6
  8258                           tablat	equ	0xFF5
  8259                           postinc0	equ	0xFEE
  8260                           plusw0	equ	0xFEB
  8261                           wreg	equ	0xFE8
  8262                           postdec1	equ	0xFE5
  8263                           fsr1l	equ	0xFE1
  8264                           plusw2	equ	0xFDB
  8265                           status	equ	0xFD8
  8266                           
  8267 ;; *************** function _init_IR *****************
  8268 ;; Defined at:
  8269 ;;		line 68 in file "IR.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;		None
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;		None
  8274 ;; Return value:  Size  Location     Type
  8275 ;;		None               void
  8276 ;; Registers used:
  8277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8287 ;;Total ram usage:        0 bytes
  8288 ;; Hardware stack levels used:    1
  8289 ;; Hardware stack levels required when called:    9
  8290 ;; This function calls:
  8291 ;;		_ReadIRpin
  8292 ;;		_Start_Timer0
  8293 ;;		_cleanBuffer16bit
  8294 ;;		_init_Timer0
  8295 ;; This function is called by:
  8296 ;;		_main
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text4
  8301  000836                     __ptext4:
  8302                           	opt stack 0
  8303  000836                     _init_IR:
  8304                           	opt stack 21
  8305                           
  8306                           ;IR.c: 71: INTCON2bits.RBPU = 0;
  8307                           
  8308                           ;incstack = 0
  8309  000836  9EF1               	bcf	intcon2,7,c	;volatile
  8310                           
  8311                           ;IR.c: 73: INTCON2bits.RBIP = 0;
  8312  000838  90F1               	bcf	intcon2,0,c	;volatile
  8313                           
  8314                           ;IR.c: 75: IRpinOLD = ReadIRpin();
  8315  00083A  EC7B  F007         	call	_ReadIRpin	;wreg free
  8316  00083E  0100               	movlb	0	; () banked
  8317  000840  6FF0               	movwf	_IRpinOLD& (0+255),b
  8318                           
  8319                           ;IR.c: 77: init_Timer0();
  8320  000842  EC0D  F007         	call	_init_Timer0	;wreg free
  8321                           
  8322                           ;IR.c: 79: cleanBuffer16bit(IRRawCode, 72);
  8323  000846  0E64               	movlw	low _IRRawCode
  8324  000848  0101               	movlb	1	; () banked
  8325  00084A  6F0E               	movwf	cleanBuffer16bit@data& (0+255),b
  8326  00084C  0E04               	movlw	high _IRRawCode
  8327  00084E  0101               	movlb	1	; () banked
  8328  000850  6F0F               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
  8329  000852  0E00               	movlw	0
  8330  000854  0101               	movlb	1	; () banked
  8331  000856  6F11               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
  8332  000858  0E48               	movlw	72
  8333  00085A  6F10               	movwf	cleanBuffer16bit@count& (0+255),b
  8334  00085C  ECA7  F002         	call	_cleanBuffer16bit	;wreg free
  8335                           
  8336                           ;IR.c: 80: IR_NEC = 0;
  8337  000860  0E00               	movlw	0
  8338  000862  0100               	movlb	0	; () banked
  8339  000864  6FF4               	movwf	_IR_NEC& (0+255),b
  8340  000866  0E00               	movlw	0
  8341  000868  6FF5               	movwf	(_IR_NEC+1)& (0+255),b
  8342  00086A  0E00               	movlw	0
  8343  00086C  6FF6               	movwf	(_IR_NEC+2)& (0+255),b
  8344  00086E  0E00               	movlw	0
  8345  000870  6FF7               	movwf	(_IR_NEC+3)& (0+255),b
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;IR.c: 82: Start_Timer0();
  8349  000872  ECC2  F007         	call	_Start_Timer0	;wreg free
  8350                           
  8351                           ;IR.c: 84: INTCONbits.TMR0IF = 0;
  8352  000876  94F2               	bcf	intcon,2,c	;volatile
  8353                           
  8354                           ;IR.c: 85: INTCONbits.TMR0IE = 0;
  8355  000878  9AF2               	bcf	intcon,5,c	;volatile
  8356                           
  8357                           ;IR.c: 87: INTCONbits.RBIE = 1;
  8358  00087A  86F2               	bsf	intcon,3,c	;volatile
  8359  00087C  0012               	return		;funcret
  8360  00087E                     __end_of_init_IR:
  8361                           	opt stack 0
  8362                           tblptru	equ	0xFF8
  8363                           tblptrh	equ	0xFF7
  8364                           tblptrl	equ	0xFF6
  8365                           tablat	equ	0xFF5
  8366                           intcon	equ	0xFF2
  8367                           intcon2	equ	0xFF1
  8368                           postinc0	equ	0xFEE
  8369                           plusw0	equ	0xFEB
  8370                           wreg	equ	0xFE8
  8371                           postdec1	equ	0xFE5
  8372                           fsr1l	equ	0xFE1
  8373                           plusw2	equ	0xFDB
  8374                           status	equ	0xFD8
  8375                           
  8376 ;; *************** function _init_Timer0 *****************
  8377 ;; Defined at:
  8378 ;;		line 60 in file "Timer.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;		None
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;		None
  8383 ;; Return value:  Size  Location     Type
  8384 ;;		None               void
  8385 ;; Registers used:
  8386 ;;		wreg, status,2, cstack
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;Total ram usage:        0 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:    8
  8399 ;; This function calls:
  8400 ;;		_Stop_Timer0
  8401 ;; This function is called by:
  8402 ;;		_init_IR
  8403 ;;		_init_Timers
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text5
  8408  000E1A                     __ptext5:
  8409                           	opt stack 0
  8410  000E1A                     _init_Timer0:
  8411                           	opt stack 21
  8412                           
  8413                           ;Timer.c: 62: Stop_Timer0();
  8414                           
  8415                           ;incstack = 0
  8416  000E1A  ECC0  F007         	call	_Stop_Timer0	;wreg free
  8417                           
  8418                           ;Timer.c: 64: INTCON2bits.T0IP = 0;
  8419  000E1E  94F1               	bcf	intcon2,2,c	;volatile
  8420                           
  8421                           ;Timer.c: 66: T0CONbits.T08BIT = 0;
  8422  000E20  9CD5               	bcf	4053,6,c	;volatile
  8423                           
  8424                           ;Timer.c: 68: T0CONbits.T0CS = 0;
  8425  000E22  9AD5               	bcf	4053,5,c	;volatile
  8426                           
  8427                           ;Timer.c: 70: T0CONbits.PSA = 0;
  8428  000E24  96D5               	bcf	4053,3,c	;volatile
  8429                           
  8430                           ;Timer.c: 72: T0CONbits.T0PS = 0x4;
  8431  000E26  50D5               	movf	4053,w,c	;volatile
  8432  000E28  0BF8               	andlw	-8
  8433  000E2A  0904               	iorlw	4
  8434  000E2C  6ED5               	movwf	4053,c	;volatile
  8435  000E2E  0012               	return		;funcret
  8436  000E30                     __end_of_init_Timer0:
  8437                           	opt stack 0
  8438                           tblptru	equ	0xFF8
  8439                           tblptrh	equ	0xFF7
  8440                           tblptrl	equ	0xFF6
  8441                           tablat	equ	0xFF5
  8442                           intcon	equ	0xFF2
  8443                           intcon2	equ	0xFF1
  8444                           postinc0	equ	0xFEE
  8445                           plusw0	equ	0xFEB
  8446                           wreg	equ	0xFE8
  8447                           postdec1	equ	0xFE5
  8448                           fsr1l	equ	0xFE1
  8449                           plusw2	equ	0xFDB
  8450                           status	equ	0xFD8
  8451                           
  8452 ;; *************** function _Stop_Timer0 *****************
  8453 ;; Defined at:
  8454 ;;		line 81 in file "Timer.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;		None
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;		None
  8459 ;; Return value:  Size  Location     Type
  8460 ;;		None               void
  8461 ;; Registers used:
  8462 ;;		None
  8463 ;; Tracked objects:
  8464 ;;		On entry : 0/0
  8465 ;;		On exit  : 0/0
  8466 ;;		Unchanged: 0/0
  8467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8472 ;;Total ram usage:        0 bytes
  8473 ;; Hardware stack levels used:    1
  8474 ;; Hardware stack levels required when called:    7
  8475 ;; This function calls:
  8476 ;;		Nothing
  8477 ;; This function is called by:
  8478 ;;		_init_Timer0
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           	psect	text6
  8483  000F80                     __ptext6:
  8484                           	opt stack 0
  8485  000F80                     _Stop_Timer0:
  8486                           	opt stack 21
  8487                           
  8488                           ;Timer.c: 84: T0CONbits.TMR0ON =0;
  8489                           
  8490                           ;incstack = 0
  8491  000F80  9ED5               	bcf	4053,7,c	;volatile
  8492  000F82  0012               	return		;funcret
  8493  000F84                     __end_of_Stop_Timer0:
  8494                           	opt stack 0
  8495                           tblptru	equ	0xFF8
  8496                           tblptrh	equ	0xFF7
  8497                           tblptrl	equ	0xFF6
  8498                           tablat	equ	0xFF5
  8499                           intcon	equ	0xFF2
  8500                           intcon2	equ	0xFF1
  8501                           postinc0	equ	0xFEE
  8502                           plusw0	equ	0xFEB
  8503                           wreg	equ	0xFE8
  8504                           postdec1	equ	0xFE5
  8505                           fsr1l	equ	0xFE1
  8506                           plusw2	equ	0xFDB
  8507                           status	equ	0xFD8
  8508                           
  8509 ;; *************** function _cleanBuffer16bit *****************
  8510 ;; Defined at:
  8511 ;;		line 89 in file "MISC.c"
  8512 ;; Parameters:    Size  Location     Type
  8513 ;;  data            2   14[BANK1 ] PTR unsigned int 
  8514 ;;		 -> IRRawCode(144), 
  8515 ;;  count           2   16[BANK1 ] int 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;  i               1   21[BANK1 ] unsigned char 
  8518 ;; Return value:  Size  Location     Type
  8519 ;;		None               void
  8520 ;; Registers used:
  8521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8527 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8528 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8529 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8530 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8531 ;;Total ram usage:        8 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; Hardware stack levels required when called:    7
  8534 ;; This function calls:
  8535 ;;		Nothing
  8536 ;; This function is called by:
  8537 ;;		_init_IR
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           	psect	text7
  8542  00054E                     __ptext7:
  8543                           	opt stack 0
  8544  00054E                     _cleanBuffer16bit:
  8545                           	opt stack 22
  8546                           
  8547                           ;MISC.c: 91: unsigned char i=0;
  8548                           
  8549                           ;incstack = 0
  8550  00054E  0E00               	movlw	0
  8551  000550  0101               	movlb	1	; () banked
  8552  000552  6F15               	movwf	cleanBuffer16bit@i& (0+255),b
  8553                           
  8554                           ;MISC.c: 92: for(i=0; i<count;i++)
  8555  000554  0E00               	movlw	0
  8556  000556  0101               	movlb	1	; () banked
  8557  000558  6F15               	movwf	cleanBuffer16bit@i& (0+255),b
  8558  00055A  D012               	goto	l13435
  8559  00055C                     l13431:
  8560                           
  8561                           ; BSR set to: 1
  8562                           ;MISC.c: 93: {
  8563                           ;MISC.c: 94: data[i]= 0;
  8564  00055C  0101               	movlb	1	; () banked
  8565  00055E  5115               	movf	cleanBuffer16bit@i& (0+255),w,b
  8566  000560  0D02               	mullw	2
  8567  000562  50F3               	movf	prodl,w,c
  8568  000564  0101               	movlb	1	; () banked
  8569  000566  250E               	addwf	cleanBuffer16bit@data& (0+255),w,b
  8570  000568  6ED9               	movwf	fsr2l,c
  8571  00056A  50F4               	movf	prodh,w,c
  8572  00056C  0101               	movlb	1	; () banked
  8573  00056E  210F               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
  8574  000570  6EDA               	movwf	fsr2h,c
  8575  000572  0E00               	movlw	0
  8576  000574  6EDE               	movwf	postinc2,c
  8577  000576  0E00               	movlw	0
  8578  000578  6EDD               	movwf	postdec2,c
  8579                           
  8580                           ; BSR set to: 1
  8581  00057A  0101               	movlb	1	; () banked
  8582  00057C  2B15               	incf	cleanBuffer16bit@i& (0+255),f,b
  8583  00057E  D000               	goto	l13435
  8584  000580                     l13435:
  8585                           
  8586                           ; BSR set to: 1
  8587  000580  0101               	movlb	1	; () banked
  8588  000582  5115               	movf	cleanBuffer16bit@i& (0+255),w,b
  8589  000584  0101               	movlb	1	; () banked
  8590  000586  6F12               	movwf	??_cleanBuffer16bit& (0+255),b
  8591  000588  6B13               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
  8592  00058A  0101               	movlb	1	; () banked
  8593  00058C  5110               	movf	cleanBuffer16bit@count& (0+255),w,b
  8594  00058E  0101               	movlb	1	; () banked
  8595  000590  5D12               	subwf	??_cleanBuffer16bit& (0+255),w,b
  8596  000592  0101               	movlb	1	; () banked
  8597  000594  5113               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
  8598  000596  0A80               	xorlw	128
  8599  000598  0101               	movlb	1	; () banked
  8600  00059A  6F14               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
  8601  00059C  0101               	movlb	1	; () banked
  8602  00059E  5111               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
  8603  0005A0  0A80               	xorlw	128
  8604  0005A2  0101               	movlb	1	; () banked
  8605  0005A4  5914               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
  8606  0005A6  A0D8               	btfss	status,0,c
  8607  0005A8  D7D9               	goto	l13431
  8608                           
  8609                           ; BSR set to: 1
  8610                           
  8611                           ; BSR set to: 1
  8612  0005AA  0012               	return		;funcret
  8613  0005AC                     __end_of_cleanBuffer16bit:
  8614                           	opt stack 0
  8615                           tblptru	equ	0xFF8
  8616                           tblptrh	equ	0xFF7
  8617                           tblptrl	equ	0xFF6
  8618                           tablat	equ	0xFF5
  8619                           prodh	equ	0xFF4
  8620                           prodl	equ	0xFF3
  8621                           intcon	equ	0xFF2
  8622                           intcon2	equ	0xFF1
  8623                           postinc0	equ	0xFEE
  8624                           plusw0	equ	0xFEB
  8625                           wreg	equ	0xFE8
  8626                           postdec1	equ	0xFE5
  8627                           fsr1l	equ	0xFE1
  8628                           postinc2	equ	0xFDE
  8629                           postdec2	equ	0xFDD
  8630                           plusw2	equ	0xFDB
  8631                           fsr2h	equ	0xFDA
  8632                           fsr2l	equ	0xFD9
  8633                           status	equ	0xFD8
  8634                           
  8635 ;; *************** function _Start_Timer0 *****************
  8636 ;; Defined at:
  8637 ;;		line 92 in file "Timer.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;		None
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;		None
  8642 ;; Return value:  Size  Location     Type
  8643 ;;		None               void
  8644 ;; Registers used:
  8645 ;;		None
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;Total ram usage:        0 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; Hardware stack levels required when called:    7
  8658 ;; This function calls:
  8659 ;;		Nothing
  8660 ;; This function is called by:
  8661 ;;		_init_IR
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text8
  8666  000F84                     __ptext8:
  8667                           	opt stack 0
  8668  000F84                     _Start_Timer0:
  8669                           	opt stack 22
  8670                           
  8671                           ;Timer.c: 95: T0CONbits.TMR0ON =1;
  8672                           
  8673                           ; BSR set to: 1
  8674                           ;incstack = 0
  8675  000F84  8ED5               	bsf	4053,7,c	;volatile
  8676  000F86  0012               	return		;funcret
  8677  000F88                     __end_of_Start_Timer0:
  8678                           	opt stack 0
  8679                           tblptru	equ	0xFF8
  8680                           tblptrh	equ	0xFF7
  8681                           tblptrl	equ	0xFF6
  8682                           tablat	equ	0xFF5
  8683                           prodh	equ	0xFF4
  8684                           prodl	equ	0xFF3
  8685                           intcon	equ	0xFF2
  8686                           intcon2	equ	0xFF1
  8687                           postinc0	equ	0xFEE
  8688                           plusw0	equ	0xFEB
  8689                           wreg	equ	0xFE8
  8690                           postdec1	equ	0xFE5
  8691                           fsr1l	equ	0xFE1
  8692                           postinc2	equ	0xFDE
  8693                           postdec2	equ	0xFDD
  8694                           plusw2	equ	0xFDB
  8695                           fsr2h	equ	0xFDA
  8696                           fsr2l	equ	0xFD9
  8697                           status	equ	0xFD8
  8698                           
  8699 ;; *************** function _ReadIRpin *****************
  8700 ;; Defined at:
  8701 ;;		line 95 in file "IR.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;		None
  8704 ;; Auto vars:     Size  Location     Type
  8705 ;;		None
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  1    wreg      unsigned char 
  8708 ;; Registers used:
  8709 ;;		wreg
  8710 ;; Tracked objects:
  8711 ;;		On entry : 0/0
  8712 ;;		On exit  : 0/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;Total ram usage:        0 bytes
  8720 ;; Hardware stack levels used:    1
  8721 ;; Hardware stack levels required when called:    7
  8722 ;; This function calls:
  8723 ;;		Nothing
  8724 ;; This function is called by:
  8725 ;;		_init_IR
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729                           	psect	text9
  8730  000EF6                     __ptext9:
  8731                           	opt stack 0
  8732  000EF6                     _ReadIRpin:
  8733                           	opt stack 22
  8734                           
  8735                           ;IR.c: 98: if((PORTB & 0b00010000) == 0b00010000)
  8736                           
  8737                           ;incstack = 0
  8738  000EF6  A881               	btfss	3969,4,c	;volatile
  8739  000EF8  D002               	goto	l13425
  8740                           
  8741                           ;IR.c: 99: {
  8742                           ;IR.c: 100: return (1);
  8743  000EFA  0E01               	movlw	1
  8744                           
  8745                           ;IR.c: 101: }
  8746  000EFC  0012               	return	
  8747  000EFE                     l13425:
  8748                           
  8749                           ;IR.c: 102: else
  8750                           ;IR.c: 103: {
  8751                           ;IR.c: 104: return 0;
  8752  000EFE  0E00               	movlw	0
  8753  000F00  0012               	return	
  8754  000F02  0012               	return		;funcret
  8755  000F04                     __end_of_ReadIRpin:
  8756                           	opt stack 0
  8757                           tblptru	equ	0xFF8
  8758                           tblptrh	equ	0xFF7
  8759                           tblptrl	equ	0xFF6
  8760                           tablat	equ	0xFF5
  8761                           prodh	equ	0xFF4
  8762                           prodl	equ	0xFF3
  8763                           intcon	equ	0xFF2
  8764                           intcon2	equ	0xFF1
  8765                           postinc0	equ	0xFEE
  8766                           plusw0	equ	0xFEB
  8767                           wreg	equ	0xFE8
  8768                           postdec1	equ	0xFE5
  8769                           fsr1l	equ	0xFE1
  8770                           postinc2	equ	0xFDE
  8771                           postdec2	equ	0xFDD
  8772                           plusw2	equ	0xFDB
  8773                           fsr2h	equ	0xFDA
  8774                           fsr2l	equ	0xFD9
  8775                           status	equ	0xFD8
  8776                           
  8777 ;; *************** function _SyncEEPROMandGLOBAL *****************
  8778 ;; Defined at:
  8779 ;;		line 260 in file "EEPROM.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;		None
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;  Temp            9   68[BANK1 ] struct EEdata
  8784 ;; Return value:  Size  Location     Type
  8785 ;;		None               void
  8786 ;; Registers used:
  8787 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  8788 ;; Tracked objects:
  8789 ;;		On entry : 0/0
  8790 ;;		On exit  : 0/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8796 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8797 ;;Total ram usage:        9 bytes
  8798 ;; Hardware stack levels used:    1
  8799 ;; Hardware stack levels required when called:   10
  8800 ;; This function calls:
  8801 ;;		_GetEEPROM
  8802 ;; This function is called by:
  8803 ;;		_main
  8804 ;; This function uses a non-reentrant model
  8805 ;;
  8806                           
  8807                           	psect	text10
  8808  000A32                     __ptext10:
  8809                           	opt stack 0
  8810  000A32                     _SyncEEPROMandGLOBAL:
  8811                           	opt stack 20
  8812                           
  8813                           ;EEPROM.c: 262: GBLdata Temp;
  8814                           ;EEPROM.c: 264: Temp = GetEEPROM();
  8815                           
  8816                           ;incstack = 0
  8817  000A32  EC5A  F003         	call	_GetEEPROM	;wreg free
  8818  000A36  EE21  F044         	lfsr	2,SyncEEPROMandGLOBAL@Temp
  8819  000A3A  0E08               	movlw	8
  8820  000A3C                     u18491:
  8821  000A3C  CFEB FFDB          	movff	plusw0,plusw2
  8822  000A40  06E8               	decf	wreg,f,c
  8823  000A42  E2FC               	bc	u18491
  8824                           
  8825                           ;EEPROM.c: 266: Global.Baud = Temp.Baud;
  8826  000A44  C144  F18A         	movff	SyncEEPROMandGLOBAL@Temp,_Global
  8827  000A48  C145  F18B         	movff	SyncEEPROMandGLOBAL@Temp+1,_Global+1
  8828  000A4C  C146  F18C         	movff	SyncEEPROMandGLOBAL@Temp+2,_Global+2
  8829  000A50  C147  F18D         	movff	SyncEEPROMandGLOBAL@Temp+3,_Global+3
  8830                           
  8831                           ;EEPROM.c: 267: Global.Parity = Temp.Parity;
  8832  000A54  C148  F18E         	movff	SyncEEPROMandGLOBAL@Temp+4,_Global+4
  8833                           
  8834                           ;EEPROM.c: 268: Global.NEC1 = Temp.NEC1;
  8835  000A58  C149  F18F         	movff	SyncEEPROMandGLOBAL@Temp+5,_Global+5
  8836  000A5C  C14A  F190         	movff	SyncEEPROMandGLOBAL@Temp+6,_Global+6
  8837  000A60  C14B  F191         	movff	SyncEEPROMandGLOBAL@Temp+7,_Global+7
  8838  000A64  C14C  F192         	movff	SyncEEPROMandGLOBAL@Temp+8,_Global+8
  8839  000A68  0012               	return		;funcret
  8840  000A6A                     __end_of_SyncEEPROMandGLOBAL:
  8841                           	opt stack 0
  8842                           tblptru	equ	0xFF8
  8843                           tblptrh	equ	0xFF7
  8844                           tblptrl	equ	0xFF6
  8845                           tablat	equ	0xFF5
  8846                           prodh	equ	0xFF4
  8847                           prodl	equ	0xFF3
  8848                           intcon	equ	0xFF2
  8849                           intcon2	equ	0xFF1
  8850                           postinc0	equ	0xFEE
  8851                           plusw0	equ	0xFEB
  8852                           wreg	equ	0xFE8
  8853                           postdec1	equ	0xFE5
  8854                           fsr1l	equ	0xFE1
  8855                           postinc2	equ	0xFDE
  8856                           postdec2	equ	0xFDD
  8857                           plusw2	equ	0xFDB
  8858                           fsr2h	equ	0xFDA
  8859                           fsr2l	equ	0xFD9
  8860                           status	equ	0xFD8
  8861                           
  8862 ;; *************** function _GetEEPROM *****************
  8863 ;; Defined at:
  8864 ;;		line 211 in file "EEPROM.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;		None
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;  Temp            9   59[BANK1 ] struct EEdata
  8869 ;; Return value:  Size  Location     Type
  8870 ;;                  9   50[BANK1 ] struct EEdata
  8871 ;; Registers used:
  8872 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  8873 ;; Tracked objects:
  8874 ;;		On entry : 0/0
  8875 ;;		On exit  : 0/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8878 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8881 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  8882 ;;Total ram usage:       18 bytes
  8883 ;; Hardware stack levels used:    1
  8884 ;; Hardware stack levels required when called:    9
  8885 ;; This function calls:
  8886 ;;		_GetMemoryBaud
  8887 ;;		_GetMemoryChar
  8888 ;;		_GetMemoryLong
  8889 ;; This function is called by:
  8890 ;;		_SyncEEPROMandGLOBAL
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894                           	psect	text11
  8895  0006B4                     __ptext11:
  8896                           	opt stack 0
  8897  0006B4                     _GetEEPROM:
  8898                           	opt stack 20
  8899                           
  8900                           ;EEPROM.c: 213: GBLdata Temp;
  8901                           ;EEPROM.c: 214: Temp.Baud = GetMemoryBaud();
  8902                           
  8903                           ;incstack = 0
  8904  0006B4  EC99  F0A9         	call	_GetMemoryBaud	;wreg free
  8905  0006B8  C111  F13B         	movff	?_GetMemoryBaud,GetEEPROM@Temp
  8906  0006BC  C112  F13C         	movff	?_GetMemoryBaud+1,GetEEPROM@Temp+1
  8907  0006C0  C113  F13D         	movff	?_GetMemoryBaud+2,GetEEPROM@Temp+2
  8908  0006C4  C114  F13E         	movff	?_GetMemoryBaud+3,GetEEPROM@Temp+3
  8909                           
  8910                           ;EEPROM.c: 215: Temp.Parity = GetMemoryChar(4);
  8911  0006C8  0E04               	movlw	4
  8912  0006CA  EC77  F006         	call	_GetMemoryChar
  8913  0006CE  0101               	movlb	1	; () banked
  8914  0006D0  5111               	movf	?_GetMemoryChar& (0+255),w,b
  8915  0006D2  0101               	movlb	1	; () banked
  8916  0006D4  6F3F               	movwf	(GetEEPROM@Temp+4)& (0+255),b
  8917                           
  8918                           ;EEPROM.c: 216: Temp.NEC1 = GetMemoryLong(5);
  8919  0006D6  0E05               	movlw	5
  8920  0006D8  EC76  F0A7         	call	_GetMemoryLong
  8921  0006DC  C111  F140         	movff	?_GetMemoryLong,GetEEPROM@Temp+5
  8922  0006E0  C112  F141         	movff	?_GetMemoryLong+1,GetEEPROM@Temp+6
  8923  0006E4  C113  F142         	movff	?_GetMemoryLong+2,GetEEPROM@Temp+7
  8924  0006E8  C114  F143         	movff	?_GetMemoryLong+3,GetEEPROM@Temp+8
  8925                           
  8926                           ;EEPROM.c: 217: return Temp;
  8927  0006EC  EE21  F03B         	lfsr	2,GetEEPROM@Temp
  8928  0006F0  EE01  F032         	lfsr	0,?_GetEEPROM
  8929  0006F4  0E08               	movlw	8
  8930  0006F6                     u18321:
  8931  0006F6  CFDB FFEB          	movff	plusw2,plusw0
  8932  0006FA  06E8               	decf	wreg,f,c
  8933  0006FC  E2FC               	bc	u18321
  8934  0006FE  0012               	return	
  8935  000700  0012               	return		;funcret
  8936  000702                     __end_of_GetEEPROM:
  8937                           	opt stack 0
  8938                           tblptru	equ	0xFF8
  8939                           tblptrh	equ	0xFF7
  8940                           tblptrl	equ	0xFF6
  8941                           tablat	equ	0xFF5
  8942                           prodh	equ	0xFF4
  8943                           prodl	equ	0xFF3
  8944                           intcon	equ	0xFF2
  8945                           intcon2	equ	0xFF1
  8946                           postinc0	equ	0xFEE
  8947                           plusw0	equ	0xFEB
  8948                           wreg	equ	0xFE8
  8949                           postdec1	equ	0xFE5
  8950                           fsr1l	equ	0xFE1
  8951                           postinc2	equ	0xFDE
  8952                           postdec2	equ	0xFDD
  8953                           plusw2	equ	0xFDB
  8954                           fsr2h	equ	0xFDA
  8955                           fsr2l	equ	0xFD9
  8956                           status	equ	0xFD8
  8957                           
  8958 ;; *************** function _GetMemoryChar *****************
  8959 ;; Defined at:
  8960 ;;		line 380 in file "EEPROM.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;  AddressFirst    1    wreg     unsigned char 
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  AddressFirst    1   21[BANK1 ] unsigned char 
  8965 ;;  H               1   22[BANK1 ] unsigned char 
  8966 ;; Return value:  Size  Location     Type
  8967 ;;                  4   17[BANK1 ] unsigned long 
  8968 ;; Registers used:
  8969 ;;		wreg, status,2, status,0, cstack
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8975 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8976 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8978 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8979 ;;Total ram usage:        6 bytes
  8980 ;; Hardware stack levels used:    1
  8981 ;; Hardware stack levels required when called:    8
  8982 ;; This function calls:
  8983 ;;		_ReadEEPROM_1Byte
  8984 ;; This function is called by:
  8985 ;;		_GetEEPROM
  8986 ;;		_SetMemoryChar
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           	psect	text12
  8991  000CEE                     __ptext12:
  8992                           	opt stack 0
  8993  000CEE                     _GetMemoryChar:
  8994                           	opt stack 20
  8995                           
  8996                           ;incstack = 0
  8997                           ;GetMemoryChar@AddressFirst stored from wreg
  8998  000CEE  0101               	movlb	1	; () banked
  8999  000CF0  6F15               	movwf	GetMemoryChar@AddressFirst& (0+255),b
  9000                           
  9001                           ; BSR set to: 1
  9002                           ;EEPROM.c: 382: unsigned char H;
  9003                           ;EEPROM.c: 384: H = ReadEEPROM_1Byte(AddressFirst);
  9004  000CF2  C115  F10E         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
  9005  000CF6  0101               	movlb	1	; () banked
  9006  000CF8  6B0F               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9007  000CFA  ECDD  F004         	call	_ReadEEPROM_1Byte	;wreg free
  9008  000CFE  0101               	movlb	1	; () banked
  9009  000D00  510E               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9010  000D02  0101               	movlb	1	; () banked
  9011  000D04  6F16               	movwf	GetMemoryChar@H& (0+255),b
  9012                           
  9013                           ; BSR set to: 1
  9014                           ;EEPROM.c: 386: return H;
  9015  000D06  0101               	movlb	1	; () banked
  9016  000D08  5116               	movf	GetMemoryChar@H& (0+255),w,b
  9017  000D0A  0101               	movlb	1	; () banked
  9018  000D0C  6F11               	movwf	?_GetMemoryChar& (0+255),b
  9019  000D0E  6B12               	clrf	(?_GetMemoryChar+1)& (0+255),b
  9020  000D10  6B13               	clrf	(?_GetMemoryChar+2)& (0+255),b
  9021  000D12  6B14               	clrf	(?_GetMemoryChar+3)& (0+255),b
  9022  000D14  0012               	return	
  9023                           
  9024                           ; BSR set to: 1
  9025                           
  9026                           ; BSR set to: 1
  9027  000D16  0012               	return		;funcret
  9028  000D18                     __end_of_GetMemoryChar:
  9029                           	opt stack 0
  9030                           tblptru	equ	0xFF8
  9031                           tblptrh	equ	0xFF7
  9032                           tblptrl	equ	0xFF6
  9033                           tablat	equ	0xFF5
  9034                           prodh	equ	0xFF4
  9035                           prodl	equ	0xFF3
  9036                           intcon	equ	0xFF2
  9037                           intcon2	equ	0xFF1
  9038                           postinc0	equ	0xFEE
  9039                           plusw0	equ	0xFEB
  9040                           wreg	equ	0xFE8
  9041                           postdec1	equ	0xFE5
  9042                           fsr1l	equ	0xFE1
  9043                           postinc2	equ	0xFDE
  9044                           postdec2	equ	0xFDD
  9045                           plusw2	equ	0xFDB
  9046                           fsr2h	equ	0xFDA
  9047                           fsr2l	equ	0xFD9
  9048                           status	equ	0xFD8
  9049                           
  9050 ;; *************** function _SetEEPROM *****************
  9051 ;; Defined at:
  9052 ;;		line 225 in file "EEPROM.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  Temp            9   67[BANK1 ] struct EEdata
  9055 ;;  burn            4   76[BANK1 ] unsigned long 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;  fail            4   80[BANK1 ] unsigned long 
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  4   67[BANK1 ] unsigned long 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0, cstack
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9067 ;;      Params:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;Total ram usage:       17 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; Hardware stack levels required when called:   10
  9074 ;; This function calls:
  9075 ;;		_SetMemoryBaud
  9076 ;;		_SetMemoryLong
  9077 ;;		_SetMemoryParity
  9078 ;; This function is called by:
  9079 ;;		_main
  9080 ;; This function uses a non-reentrant model
  9081 ;;
  9082                           
  9083                           	psect	text13
  9084  016CBA                     __ptext13:
  9085                           	opt stack 0
  9086  016CBA                     _SetEEPROM:
  9087                           	opt stack 20
  9088                           
  9089                           ;EEPROM.c: 227: unsigned long fail = 0;
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;incstack = 0
  9093  016CBA  0E00               	movlw	0
  9094  016CBC  0101               	movlb	1	; () banked
  9095  016CBE  6F50               	movwf	SetEEPROM@fail& (0+255),b
  9096  016CC0  0E00               	movlw	0
  9097  016CC2  6F51               	movwf	(SetEEPROM@fail+1)& (0+255),b
  9098  016CC4  0E00               	movlw	0
  9099  016CC6  6F52               	movwf	(SetEEPROM@fail+2)& (0+255),b
  9100  016CC8  0E00               	movlw	0
  9101  016CCA  6F53               	movwf	(SetEEPROM@fail+3)& (0+255),b
  9102                           
  9103                           ; BSR set to: 1
  9104                           ;EEPROM.c: 228: if(burn & 0x00000001)
  9105  016CCC  0101               	movlb	1	; () banked
  9106  016CCE  A14C               	btfss	SetEEPROM@burn& (0+255),0,b
  9107  016CD0  D015               	goto	l14569
  9108                           
  9109                           ; BSR set to: 1
  9110                           ;EEPROM.c: 229: {
  9111                           ;EEPROM.c: 230: if(!SetMemoryBaud(Temp.Baud))
  9112  016CD2  C143  F131         	movff	SetEEPROM@Temp,SetMemoryBaud@Baud
  9113  016CD6  C144  F132         	movff	SetEEPROM@Temp+1,SetMemoryBaud@Baud+1
  9114  016CDA  C145  F133         	movff	SetEEPROM@Temp+2,SetMemoryBaud@Baud+2
  9115  016CDE  C146  F134         	movff	SetEEPROM@Temp+3,SetMemoryBaud@Baud+3
  9116  016CE2  ECBD  F0B1         	call	_SetMemoryBaud	;wreg free
  9117  016CE6  0900               	iorlw	0
  9118  016CE8  A4D8               	btfss	status,2,c
  9119  016CEA  D008               	goto	l14569
  9120                           
  9121                           ;EEPROM.c: 231: {
  9122                           ;EEPROM.c: 233: fail += 0x00000001;
  9123  016CEC  0E01               	movlw	1
  9124  016CEE  0101               	movlb	1	; () banked
  9125  016CF0  2750               	addwf	SetEEPROM@fail& (0+255),f,b
  9126  016CF2  0E00               	movlw	0
  9127  016CF4  2351               	addwfc	(SetEEPROM@fail+1)& (0+255),f,b
  9128  016CF6  2352               	addwfc	(SetEEPROM@fail+2)& (0+255),f,b
  9129  016CF8  2353               	addwfc	(SetEEPROM@fail+3)& (0+255),f,b
  9130                           
  9131                           ; BSR set to: 1
  9132  016CFA  D000               	goto	l14569
  9133  016CFC                     l14569:
  9134                           
  9135                           ;EEPROM.c: 234: }
  9136                           ;EEPROM.c: 235: }
  9137                           ;EEPROM.c: 236: if(burn & 0x00000002)
  9138  016CFC  0101               	movlb	1	; () banked
  9139  016CFE  A34C               	btfss	SetEEPROM@burn& (0+255),1,b
  9140  016D00  D00F               	goto	l14575
  9141                           
  9142                           ; BSR set to: 1
  9143                           ;EEPROM.c: 237: {
  9144                           ;EEPROM.c: 238: if(!SetMemoryParity(Temp.Parity))
  9145  016D02  0101               	movlb	1	; () banked
  9146  016D04  5147               	movf	(SetEEPROM@Temp+4)& (0+255),w,b
  9147  016D06  EC6D  F005         	call	_SetMemoryParity
  9148  016D0A  0900               	iorlw	0
  9149  016D0C  A4D8               	btfss	status,2,c
  9150  016D0E  D008               	goto	l14575
  9151                           
  9152                           ;EEPROM.c: 239: {
  9153                           ;EEPROM.c: 241: fail += 0x00000002;
  9154  016D10  0E02               	movlw	2
  9155  016D12  0101               	movlb	1	; () banked
  9156  016D14  2750               	addwf	SetEEPROM@fail& (0+255),f,b
  9157  016D16  0E00               	movlw	0
  9158  016D18  2351               	addwfc	(SetEEPROM@fail+1)& (0+255),f,b
  9159  016D1A  2352               	addwfc	(SetEEPROM@fail+2)& (0+255),f,b
  9160  016D1C  2353               	addwfc	(SetEEPROM@fail+3)& (0+255),f,b
  9161                           
  9162                           ; BSR set to: 1
  9163  016D1E  D000               	goto	l14575
  9164  016D20                     l14575:
  9165                           
  9166                           ;EEPROM.c: 242: }
  9167                           ;EEPROM.c: 243: }
  9168                           ;EEPROM.c: 244: if(burn & 0x00000004)
  9169  016D20  0101               	movlb	1	; () banked
  9170  016D22  A54C               	btfss	SetEEPROM@burn& (0+255),2,b
  9171  016D24  D018               	goto	l14581
  9172                           
  9173                           ; BSR set to: 1
  9174                           ;EEPROM.c: 245: {
  9175                           ;EEPROM.c: 246: if(!SetMemoryLong(Temp.NEC1,5))
  9176  016D26  C148  F132         	movff	SetEEPROM@Temp+5,SetMemoryLong@Data
  9177  016D2A  C149  F133         	movff	SetEEPROM@Temp+6,SetMemoryLong@Data+1
  9178  016D2E  C14A  F134         	movff	SetEEPROM@Temp+7,SetMemoryLong@Data+2
  9179  016D32  C14B  F135         	movff	SetEEPROM@Temp+8,SetMemoryLong@Data+3
  9180  016D36  0E05               	movlw	5
  9181  016D38  0101               	movlb	1	; () banked
  9182  016D3A  6F36               	movwf	SetMemoryLong@AddressFirst& (0+255),b
  9183  016D3C  ECE6  F0AE         	call	_SetMemoryLong	;wreg free
  9184  016D40  0900               	iorlw	0
  9185  016D42  A4D8               	btfss	status,2,c
  9186  016D44  D008               	goto	l14581
  9187                           
  9188                           ;EEPROM.c: 247: {
  9189                           ;EEPROM.c: 249: fail += 0x00000004;
  9190  016D46  0E04               	movlw	4
  9191  016D48  0101               	movlb	1	; () banked
  9192  016D4A  2750               	addwf	SetEEPROM@fail& (0+255),f,b
  9193  016D4C  0E00               	movlw	0
  9194  016D4E  2351               	addwfc	(SetEEPROM@fail+1)& (0+255),f,b
  9195  016D50  2352               	addwfc	(SetEEPROM@fail+2)& (0+255),f,b
  9196  016D52  2353               	addwfc	(SetEEPROM@fail+3)& (0+255),f,b
  9197                           
  9198                           ; BSR set to: 1
  9199  016D54  D000               	goto	l14581
  9200  016D56                     l14581:
  9201                           
  9202                           ;EEPROM.c: 250: }
  9203                           ;EEPROM.c: 251: }
  9204                           ;EEPROM.c: 252: return fail;
  9205  016D56  C150  F143         	movff	SetEEPROM@fail,?_SetEEPROM
  9206  016D5A  C151  F144         	movff	SetEEPROM@fail+1,?_SetEEPROM+1
  9207  016D5E  C152  F145         	movff	SetEEPROM@fail+2,?_SetEEPROM+2
  9208  016D62  C153  F146         	movff	SetEEPROM@fail+3,?_SetEEPROM+3
  9209  016D66  0012               	return	
  9210  016D68  0012               	return		;funcret
  9211  016D6A                     __end_of_SetEEPROM:
  9212                           	opt stack 0
  9213                           tblptru	equ	0xFF8
  9214                           tblptrh	equ	0xFF7
  9215                           tblptrl	equ	0xFF6
  9216                           tablat	equ	0xFF5
  9217                           prodh	equ	0xFF4
  9218                           prodl	equ	0xFF3
  9219                           intcon	equ	0xFF2
  9220                           intcon2	equ	0xFF1
  9221                           postinc0	equ	0xFEE
  9222                           plusw0	equ	0xFEB
  9223                           wreg	equ	0xFE8
  9224                           postdec1	equ	0xFE5
  9225                           fsr1l	equ	0xFE1
  9226                           postinc2	equ	0xFDE
  9227                           postdec2	equ	0xFDD
  9228                           plusw2	equ	0xFDB
  9229                           fsr2h	equ	0xFDA
  9230                           fsr2l	equ	0xFD9
  9231                           status	equ	0xFD8
  9232                           
  9233 ;; *************** function _SetMemoryLong *****************
  9234 ;; Defined at:
  9235 ;;		line 300 in file "EEPROM.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;  Data            4   50[BANK1 ] unsigned long 
  9238 ;;  AddressFirst    1   54[BANK1 ] unsigned char 
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;  Test            4   59[BANK1 ] unsigned long 
  9241 ;;  L               1   66[BANK1 ] unsigned char 
  9242 ;;  ML              1   65[BANK1 ] unsigned char 
  9243 ;;  MH              1   64[BANK1 ] unsigned char 
  9244 ;;  H               1   63[BANK1 ] unsigned char 
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  1    wreg      unsigned char 
  9247 ;; Registers used:
  9248 ;;		wreg, status,2, status,0, cstack
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9254 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9255 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9256 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9257 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  9258 ;;Total ram usage:       17 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:    9
  9261 ;; This function calls:
  9262 ;;		_GetMemoryLong
  9263 ;;		_WriteEEPROM_1Byte
  9264 ;; This function is called by:
  9265 ;;		_SetEEPROM
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           	psect	text14
  9270  015DCC                     __ptext14:
  9271                           	opt stack 0
  9272  015DCC                     _SetMemoryLong:
  9273                           	opt stack 20
  9274                           
  9275                           ;EEPROM.c: 302: unsigned char H;
  9276                           ;EEPROM.c: 303: unsigned char MH;
  9277                           ;EEPROM.c: 304: unsigned char ML;
  9278                           ;EEPROM.c: 305: unsigned char L;
  9279                           ;EEPROM.c: 306: unsigned long Test;
  9280                           ;EEPROM.c: 308: H = (unsigned char) ((Data & 0XFF000000) >> 24);
  9281                           
  9282                           ;incstack = 0
  9283  015DCC  0E00               	movlw	0
  9284  015DCE  0101               	movlb	1	; () banked
  9285  015DD0  1532               	andwf	SetMemoryLong@Data& (0+255),w,b
  9286  015DD2  0101               	movlb	1	; () banked
  9287  015DD4  6F37               	movwf	??_SetMemoryLong& (0+255),b
  9288  015DD6  0E00               	movlw	0
  9289  015DD8  0101               	movlb	1	; () banked
  9290  015DDA  1533               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
  9291  015DDC  0101               	movlb	1	; () banked
  9292  015DDE  6F38               	movwf	(??_SetMemoryLong+1)& (0+255),b
  9293  015DE0  0E00               	movlw	0
  9294  015DE2  0101               	movlb	1	; () banked
  9295  015DE4  1534               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
  9296  015DE6  0101               	movlb	1	; () banked
  9297  015DE8  6F39               	movwf	(??_SetMemoryLong+2)& (0+255),b
  9298  015DEA  0EFF               	movlw	255
  9299  015DEC  0101               	movlb	1	; () banked
  9300  015DEE  1535               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
  9301  015DF0  0101               	movlb	1	; () banked
  9302  015DF2  6F3A               	movwf	(??_SetMemoryLong+3)& (0+255),b
  9303  015DF4  0E19               	movlw	25
  9304  015DF6  D006               	goto	u18330
  9305  015DF8                     u18335:
  9306  015DF8  0101               	movlb	1	; () banked
  9307  015DFA  90D8               	bcf	status,0,c
  9308  015DFC  333A               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
  9309  015DFE  3339               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
  9310  015E00  3338               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
  9311  015E02  3337               	rrcf	??_SetMemoryLong& (0+255),f,b
  9312  015E04                     u18330:
  9313  015E04  2EE8               	decfsz	wreg,f,c
  9314  015E06  D7F8               	goto	u18335
  9315  015E08  0101               	movlb	1	; () banked
  9316  015E0A  5137               	movf	??_SetMemoryLong& (0+255),w,b
  9317  015E0C  0101               	movlb	1	; () banked
  9318  015E0E  6F3F               	movwf	SetMemoryLong@H& (0+255),b
  9319                           
  9320                           ; BSR set to: 1
  9321                           ;EEPROM.c: 309: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
  9322  015E10  C134  F140         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
  9323                           
  9324                           ; BSR set to: 1
  9325                           ;EEPROM.c: 310: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
  9326  015E14  C133  F141         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
  9327                           
  9328                           ; BSR set to: 1
  9329                           ;EEPROM.c: 311: L = (unsigned char) (Data & 0X000000FF);
  9330  015E18  C132  F142         	movff	SetMemoryLong@Data,SetMemoryLong@L
  9331                           
  9332                           ; BSR set to: 1
  9333                           ;EEPROM.c: 314: WriteEEPROM_1Byte(AddressFirst, H);
  9334  015E1C  C136  F10E         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
  9335  015E20  0101               	movlb	1	; () banked
  9336  015E22  6B0F               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  9337  015E24  C13F  F110         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
  9338  015E28  EC3F  F004         	call	_WriteEEPROM_1Byte	;wreg free
  9339                           
  9340                           ;EEPROM.c: 315: WriteEEPROM_1Byte((AddressFirst + 1), MH);
  9341  015E2C  0E01               	movlw	1
  9342  015E2E  0101               	movlb	1	; () banked
  9343  015E30  2536               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
  9344  015E32  0101               	movlb	1	; () banked
  9345  015E34  6F0E               	movwf	WriteEEPROM_1Byte@address& (0+255),b
  9346  015E36  0101               	movlb	1	; () banked
  9347  015E38  6B0F               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  9348  015E3A  0E00               	movlw	0
  9349  015E3C  230F               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
  9350  015E3E  C140  F110         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
  9351  015E42  EC3F  F004         	call	_WriteEEPROM_1Byte	;wreg free
  9352                           
  9353                           ;EEPROM.c: 316: WriteEEPROM_1Byte((AddressFirst + 2), ML);
  9354  015E46  0E02               	movlw	2
  9355  015E48  0101               	movlb	1	; () banked
  9356  015E4A  2536               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
  9357  015E4C  0101               	movlb	1	; () banked
  9358  015E4E  6F0E               	movwf	WriteEEPROM_1Byte@address& (0+255),b
  9359  015E50  0101               	movlb	1	; () banked
  9360  015E52  6B0F               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  9361  015E54  0E00               	movlw	0
  9362  015E56  230F               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
  9363  015E58  C141  F110         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
  9364  015E5C  EC3F  F004         	call	_WriteEEPROM_1Byte	;wreg free
  9365                           
  9366                           ;EEPROM.c: 317: WriteEEPROM_1Byte((AddressFirst + 3), L);
  9367  015E60  0E03               	movlw	3
  9368  015E62  0101               	movlb	1	; () banked
  9369  015E64  2536               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
  9370  015E66  0101               	movlb	1	; () banked
  9371  015E68  6F0E               	movwf	WriteEEPROM_1Byte@address& (0+255),b
  9372  015E6A  0101               	movlb	1	; () banked
  9373  015E6C  6B0F               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  9374  015E6E  0E00               	movlw	0
  9375  015E70  230F               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
  9376  015E72  C142  F110         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
  9377  015E76  EC3F  F004         	call	_WriteEEPROM_1Byte	;wreg free
  9378                           
  9379                           ;EEPROM.c: 320: Test = GetMemoryLong(AddressFirst);
  9380  015E7A  0101               	movlb	1	; () banked
  9381  015E7C  5136               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
  9382  015E7E  EC76  F0A7         	call	_GetMemoryLong
  9383  015E82  C111  F13B         	movff	?_GetMemoryLong,SetMemoryLong@Test
  9384  015E86  C112  F13C         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
  9385  015E8A  C113  F13D         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
  9386  015E8E  C114  F13E         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
  9387                           
  9388                           ;EEPROM.c: 322: if(Test == Data)
  9389  015E92  0101               	movlb	1	; () banked
  9390  015E94  5132               	movf	SetMemoryLong@Data& (0+255),w,b
  9391  015E96  0101               	movlb	1	; () banked
  9392  015E98  193B               	xorwf	SetMemoryLong@Test& (0+255),w,b
  9393  015E9A  E112               	bnz	l14353
  9394  015E9C  0101               	movlb	1	; () banked
  9395  015E9E  5133               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
  9396  015EA0  0101               	movlb	1	; () banked
  9397  015EA2  193C               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
  9398  015EA4  E10D               	bnz	l14353
  9399  015EA6  0101               	movlb	1	; () banked
  9400  015EA8  5134               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
  9401  015EAA  0101               	movlb	1	; () banked
  9402  015EAC  193D               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
  9403  015EAE  E108               	bnz	l14353
  9404  015EB0  0101               	movlb	1	; () banked
  9405  015EB2  5135               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
  9406  015EB4  0101               	movlb	1	; () banked
  9407  015EB6  193E               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
  9408  015EB8  A4D8               	btfss	status,2,c
  9409  015EBA  D002               	goto	l14353
  9410                           
  9411                           ; BSR set to: 1
  9412                           ;EEPROM.c: 323: {
  9413                           ;EEPROM.c: 324: return 1;
  9414  015EBC  0E01               	movlw	1
  9415                           
  9416                           ; BSR set to: 1
  9417  015EBE  0012               	return	
  9418  015EC0                     l14353:
  9419                           
  9420                           ; BSR set to: 1
  9421                           ;EEPROM.c: 325: }
  9422                           ;EEPROM.c: 326: return 0;
  9423  015EC0  0E00               	movlw	0
  9424  015EC2  0012               	return	
  9425                           
  9426                           ; BSR set to: 1
  9427                           
  9428                           ; BSR set to: 1
  9429  015EC4  0012               	return		;funcret
  9430  015EC6                     __end_of_SetMemoryLong:
  9431                           	opt stack 0
  9432                           tblptru	equ	0xFF8
  9433                           tblptrh	equ	0xFF7
  9434                           tblptrl	equ	0xFF6
  9435                           tablat	equ	0xFF5
  9436                           prodh	equ	0xFF4
  9437                           prodl	equ	0xFF3
  9438                           intcon	equ	0xFF2
  9439                           intcon2	equ	0xFF1
  9440                           postinc0	equ	0xFEE
  9441                           plusw0	equ	0xFEB
  9442                           wreg	equ	0xFE8
  9443                           postdec1	equ	0xFE5
  9444                           fsr1l	equ	0xFE1
  9445                           postinc2	equ	0xFDE
  9446                           postdec2	equ	0xFDD
  9447                           plusw2	equ	0xFDB
  9448                           fsr2h	equ	0xFDA
  9449                           fsr2l	equ	0xFD9
  9450                           status	equ	0xFD8
  9451                           
  9452 ;; *************** function _GetMemoryLong *****************
  9453 ;; Defined at:
  9454 ;;		line 277 in file "EEPROM.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;  AddressFirst    1    wreg     unsigned char 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  AddressFirst    1   49[BANK1 ] unsigned char 
  9459 ;;  temp            4   41[BANK1 ] unsigned long 
  9460 ;;  L               1   48[BANK1 ] unsigned char 
  9461 ;;  ML              1   47[BANK1 ] unsigned char 
  9462 ;;  MH              1   46[BANK1 ] unsigned char 
  9463 ;;  H               1   45[BANK1 ] unsigned char 
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  4   17[BANK1 ] unsigned long 
  9466 ;; Registers used:
  9467 ;;		wreg, status,2, status,0, cstack
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9473 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9474 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9475 ;;      Temps:          0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  9476 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  9477 ;;Total ram usage:       33 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; Hardware stack levels required when called:    8
  9480 ;; This function calls:
  9481 ;;		_ReadEEPROM_1Byte
  9482 ;; This function is called by:
  9483 ;;		_GetEEPROM
  9484 ;;		_SetMemoryLong
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text15
  9489  014EEC                     __ptext15:
  9490                           	opt stack 0
  9491  014EEC                     _GetMemoryLong:
  9492                           	opt stack 20
  9493                           
  9494                           ; BSR set to: 1
  9495                           ;incstack = 0
  9496                           ;GetMemoryLong@AddressFirst stored from wreg
  9497  014EEC  0101               	movlb	1	; () banked
  9498  014EEE  6F31               	movwf	GetMemoryLong@AddressFirst& (0+255),b
  9499                           
  9500                           ; BSR set to: 1
  9501                           ;EEPROM.c: 279: unsigned char H;
  9502                           ;EEPROM.c: 280: unsigned char MH;
  9503                           ;EEPROM.c: 281: unsigned char ML;
  9504                           ;EEPROM.c: 282: unsigned char L;
  9505                           ;EEPROM.c: 283: unsigned long temp =0;
  9506  014EF0  0E00               	movlw	0
  9507  014EF2  0101               	movlb	1	; () banked
  9508  014EF4  6F29               	movwf	GetMemoryLong@temp& (0+255),b
  9509  014EF6  0E00               	movlw	0
  9510  014EF8  6F2A               	movwf	(GetMemoryLong@temp+1)& (0+255),b
  9511  014EFA  0E00               	movlw	0
  9512  014EFC  6F2B               	movwf	(GetMemoryLong@temp+2)& (0+255),b
  9513  014EFE  0E00               	movlw	0
  9514  014F00  6F2C               	movwf	(GetMemoryLong@temp+3)& (0+255),b
  9515                           
  9516                           ; BSR set to: 1
  9517                           ;EEPROM.c: 285: H = ReadEEPROM_1Byte(AddressFirst);
  9518  014F02  C131  F10E         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
  9519  014F06  0101               	movlb	1	; () banked
  9520  014F08  6B0F               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9521  014F0A  ECDD  F004         	call	_ReadEEPROM_1Byte	;wreg free
  9522  014F0E  0101               	movlb	1	; () banked
  9523  014F10  510E               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9524  014F12  0101               	movlb	1	; () banked
  9525  014F14  6F2D               	movwf	GetMemoryLong@H& (0+255),b
  9526                           
  9527                           ; BSR set to: 1
  9528                           ;EEPROM.c: 286: MH = ReadEEPROM_1Byte(AddressFirst + 1);
  9529  014F16  0E01               	movlw	1
  9530  014F18  0101               	movlb	1	; () banked
  9531  014F1A  2531               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
  9532  014F1C  0101               	movlb	1	; () banked
  9533  014F1E  6F0E               	movwf	ReadEEPROM_1Byte@address& (0+255),b
  9534  014F20  0101               	movlb	1	; () banked
  9535  014F22  6B0F               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9536  014F24  0E00               	movlw	0
  9537  014F26  230F               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
  9538  014F28  ECDD  F004         	call	_ReadEEPROM_1Byte	;wreg free
  9539  014F2C  0101               	movlb	1	; () banked
  9540  014F2E  510E               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9541  014F30  0101               	movlb	1	; () banked
  9542  014F32  6F2E               	movwf	GetMemoryLong@MH& (0+255),b
  9543                           
  9544                           ; BSR set to: 1
  9545                           ;EEPROM.c: 287: ML = ReadEEPROM_1Byte(AddressFirst + 2);
  9546  014F34  0E02               	movlw	2
  9547  014F36  0101               	movlb	1	; () banked
  9548  014F38  2531               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
  9549  014F3A  0101               	movlb	1	; () banked
  9550  014F3C  6F0E               	movwf	ReadEEPROM_1Byte@address& (0+255),b
  9551  014F3E  0101               	movlb	1	; () banked
  9552  014F40  6B0F               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9553  014F42  0E00               	movlw	0
  9554  014F44  230F               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
  9555  014F46  ECDD  F004         	call	_ReadEEPROM_1Byte	;wreg free
  9556  014F4A  0101               	movlb	1	; () banked
  9557  014F4C  510E               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9558  014F4E  0101               	movlb	1	; () banked
  9559  014F50  6F2F               	movwf	GetMemoryLong@ML& (0+255),b
  9560                           
  9561                           ; BSR set to: 1
  9562                           ;EEPROM.c: 288: L = ReadEEPROM_1Byte(AddressFirst + 3);
  9563  014F52  0E03               	movlw	3
  9564  014F54  0101               	movlb	1	; () banked
  9565  014F56  2531               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
  9566  014F58  0101               	movlb	1	; () banked
  9567  014F5A  6F0E               	movwf	ReadEEPROM_1Byte@address& (0+255),b
  9568  014F5C  0101               	movlb	1	; () banked
  9569  014F5E  6B0F               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9570  014F60  0E00               	movlw	0
  9571  014F62  230F               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
  9572  014F64  ECDD  F004         	call	_ReadEEPROM_1Byte	;wreg free
  9573  014F68  0101               	movlb	1	; () banked
  9574  014F6A  510E               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9575  014F6C  0101               	movlb	1	; () banked
  9576  014F6E  6F30               	movwf	GetMemoryLong@L& (0+255),b
  9577                           
  9578                           ; BSR set to: 1
  9579                           ;EEPROM.c: 290: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
  9580                           ;EEPROM.c: 291: + ((unsigned long)ML << 8) + (unsigned long)L);
  9581  014F70  C12F  F115         	movff	GetMemoryLong@ML,??_GetMemoryLong
  9582  014F74  0101               	movlb	1	; () banked
  9583  014F76  6B16               	clrf	(??_GetMemoryLong+1)& (0+255),b
  9584  014F78  6B17               	clrf	(??_GetMemoryLong+2)& (0+255),b
  9585  014F7A  6B18               	clrf	(??_GetMemoryLong+3)& (0+255),b
  9586  014F7C  C117  F118         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
  9587  014F80  C116  F117         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
  9588  014F84  C115  F116         	movff	??_GetMemoryLong,??_GetMemoryLong+1
  9589  014F88  0101               	movlb	1	; () banked
  9590  014F8A  6B15               	clrf	??_GetMemoryLong& (0+255),b
  9591  014F8C  C12E  F119         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
  9592  014F90  0101               	movlb	1	; () banked
  9593  014F92  6B1A               	clrf	(??_GetMemoryLong+5)& (0+255),b
  9594  014F94  6B1B               	clrf	(??_GetMemoryLong+6)& (0+255),b
  9595  014F96  6B1C               	clrf	(??_GetMemoryLong+7)& (0+255),b
  9596  014F98  C11A  F11C         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
  9597  014F9C  C119  F11B         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
  9598  014FA0  0101               	movlb	1	; () banked
  9599  014FA2  6B1A               	clrf	(??_GetMemoryLong+5)& (0+255),b
  9600  014FA4  6B19               	clrf	(??_GetMemoryLong+4)& (0+255),b
  9601  014FA6  C12D  F11D         	movff	GetMemoryLong@H,??_GetMemoryLong+8
  9602  014FAA  0101               	movlb	1	; () banked
  9603  014FAC  6B1E               	clrf	(??_GetMemoryLong+9)& (0+255),b
  9604  014FAE  6B1F               	clrf	(??_GetMemoryLong+10)& (0+255),b
  9605  014FB0  6B20               	clrf	(??_GetMemoryLong+11)& (0+255),b
  9606  014FB2  C11D  F120         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
  9607  014FB6  0101               	movlb	1	; () banked
  9608  014FB8  6B1F               	clrf	(??_GetMemoryLong+10)& (0+255),b
  9609  014FBA  6B1E               	clrf	(??_GetMemoryLong+9)& (0+255),b
  9610  014FBC  6B1D               	clrf	(??_GetMemoryLong+8)& (0+255),b
  9611  014FBE  0101               	movlb	1	; () banked
  9612  014FC0  5119               	movf	(??_GetMemoryLong+4)& (0+255),w,b
  9613  014FC2  0101               	movlb	1	; () banked
  9614  014FC4  251D               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
  9615  014FC6  0101               	movlb	1	; () banked
  9616  014FC8  6F21               	movwf	(??_GetMemoryLong+12)& (0+255),b
  9617  014FCA  0101               	movlb	1	; () banked
  9618  014FCC  511A               	movf	(??_GetMemoryLong+5)& (0+255),w,b
  9619  014FCE  0101               	movlb	1	; () banked
  9620  014FD0  211E               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
  9621  014FD2  0101               	movlb	1	; () banked
  9622  014FD4  6F22               	movwf	(??_GetMemoryLong+13)& (0+255),b
  9623  014FD6  0101               	movlb	1	; () banked
  9624  014FD8  511B               	movf	(??_GetMemoryLong+6)& (0+255),w,b
  9625  014FDA  0101               	movlb	1	; () banked
  9626  014FDC  211F               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
  9627  014FDE  0101               	movlb	1	; () banked
  9628  014FE0  6F23               	movwf	(??_GetMemoryLong+14)& (0+255),b
  9629  014FE2  0101               	movlb	1	; () banked
  9630  014FE4  511C               	movf	(??_GetMemoryLong+7)& (0+255),w,b
  9631  014FE6  0101               	movlb	1	; () banked
  9632  014FE8  2120               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
  9633  014FEA  0101               	movlb	1	; () banked
  9634  014FEC  6F24               	movwf	(??_GetMemoryLong+15)& (0+255),b
  9635  014FEE  0101               	movlb	1	; () banked
  9636  014FF0  5115               	movf	??_GetMemoryLong& (0+255),w,b
  9637  014FF2  0101               	movlb	1	; () banked
  9638  014FF4  2521               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
  9639  014FF6  0101               	movlb	1	; () banked
  9640  014FF8  6F25               	movwf	(??_GetMemoryLong+16)& (0+255),b
  9641  014FFA  0101               	movlb	1	; () banked
  9642  014FFC  5116               	movf	(??_GetMemoryLong+1)& (0+255),w,b
  9643  014FFE  0101               	movlb	1	; () banked
  9644  015000  2122               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
  9645  015002  0101               	movlb	1	; () banked
  9646  015004  6F26               	movwf	(??_GetMemoryLong+17)& (0+255),b
  9647  015006  0101               	movlb	1	; () banked
  9648  015008  5117               	movf	(??_GetMemoryLong+2)& (0+255),w,b
  9649  01500A  0101               	movlb	1	; () banked
  9650  01500C  2123               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
  9651  01500E  0101               	movlb	1	; () banked
  9652  015010  6F27               	movwf	(??_GetMemoryLong+18)& (0+255),b
  9653  015012  0101               	movlb	1	; () banked
  9654  015014  5118               	movf	(??_GetMemoryLong+3)& (0+255),w,b
  9655  015016  0101               	movlb	1	; () banked
  9656  015018  2124               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
  9657  01501A  0101               	movlb	1	; () banked
  9658  01501C  6F28               	movwf	(??_GetMemoryLong+19)& (0+255),b
  9659  01501E  0101               	movlb	1	; () banked
  9660  015020  5130               	movf	GetMemoryLong@L& (0+255),w,b
  9661  015022  0101               	movlb	1	; () banked
  9662  015024  2525               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
  9663  015026  0101               	movlb	1	; () banked
  9664  015028  6F29               	movwf	GetMemoryLong@temp& (0+255),b
  9665  01502A  0E00               	movlw	0
  9666  01502C  0101               	movlb	1	; () banked
  9667  01502E  2126               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
  9668  015030  0101               	movlb	1	; () banked
  9669  015032  6F2A               	movwf	(GetMemoryLong@temp+1)& (0+255),b
  9670  015034  0E00               	movlw	0
  9671  015036  0101               	movlb	1	; () banked
  9672  015038  2127               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
  9673  01503A  0101               	movlb	1	; () banked
  9674  01503C  6F2B               	movwf	(GetMemoryLong@temp+2)& (0+255),b
  9675  01503E  0E00               	movlw	0
  9676  015040  0101               	movlb	1	; () banked
  9677  015042  2128               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
  9678  015044  0101               	movlb	1	; () banked
  9679  015046  6F2C               	movwf	(GetMemoryLong@temp+3)& (0+255),b
  9680                           
  9681                           ; BSR set to: 1
  9682                           ;EEPROM.c: 292: return temp;
  9683  015048  C129  F111         	movff	GetMemoryLong@temp,?_GetMemoryLong
  9684  01504C  C12A  F112         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
  9685  015050  C12B  F113         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
  9686  015054  C12C  F114         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
  9687  015058  0012               	return	
  9688                           
  9689                           ; BSR set to: 1
  9690                           
  9691                           ; BSR set to: 1
  9692  01505A  0012               	return		;funcret
  9693  01505C                     __end_of_GetMemoryLong:
  9694                           	opt stack 0
  9695                           tblptru	equ	0xFF8
  9696                           tblptrh	equ	0xFF7
  9697                           tblptrl	equ	0xFF6
  9698                           tablat	equ	0xFF5
  9699                           prodh	equ	0xFF4
  9700                           prodl	equ	0xFF3
  9701                           intcon	equ	0xFF2
  9702                           intcon2	equ	0xFF1
  9703                           postinc0	equ	0xFEE
  9704                           plusw0	equ	0xFEB
  9705                           wreg	equ	0xFE8
  9706                           postdec1	equ	0xFE5
  9707                           fsr1l	equ	0xFE1
  9708                           postinc2	equ	0xFDE
  9709                           postdec2	equ	0xFDD
  9710                           plusw2	equ	0xFDB
  9711                           fsr2h	equ	0xFDA
  9712                           fsr2l	equ	0xFD9
  9713                           status	equ	0xFD8
  9714                           
  9715 ;; *************** function _RTC_INIT *****************
  9716 ;; Defined at:
  9717 ;;		line 57 in file "RTC.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;		None
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;		None
  9722 ;; Return value:  Size  Location     Type
  9723 ;;		None               void
  9724 ;; Registers used:
  9725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9726 ;; Tracked objects:
  9727 ;;		On entry : 0/0
  9728 ;;		On exit  : 0/0
  9729 ;;		Unchanged: 0/0
  9730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;Total ram usage:        0 bytes
  9736 ;; Hardware stack levels used:    1
  9737 ;; Hardware stack levels required when called:   11
  9738 ;; This function calls:
  9739 ;;		_InternalADC_Read
  9740 ;;		_RTC_Clock_Enable
  9741 ;;		_RTC_TIME_NONMilitary
  9742 ;; This function is called by:
  9743 ;;		_main
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746                           
  9747                           	psect	text16
  9748  000EE6                     __ptext16:
  9749                           	opt stack 0
  9750  000EE6                     _RTC_INIT:
  9751                           	opt stack 19
  9752                           
  9753                           ;RTC.c: 59: RTC_Clock_Enable();
  9754                           
  9755                           ; BSR set to: 1
  9756                           ;incstack = 0
  9757  000EE6  ECCF  F003         	call	_RTC_Clock_Enable	;wreg free
  9758                           
  9759                           ;RTC.c: 60: RTC_TIME_NONMilitary();
  9760  000EEA  EC8E  F0BD         	call	_RTC_TIME_NONMilitary	;wreg free
  9761                           
  9762                           ;RTC.c: 61: InternalADC_Read(2);
  9763  000EEE  0E02               	movlw	2
  9764  000EF0  ECC3  F0BD         	call	_InternalADC_Read
  9765  000EF4  0012               	return		;funcret
  9766  000EF6                     __end_of_RTC_INIT:
  9767                           	opt stack 0
  9768                           tblptru	equ	0xFF8
  9769                           tblptrh	equ	0xFF7
  9770                           tblptrl	equ	0xFF6
  9771                           tablat	equ	0xFF5
  9772                           prodh	equ	0xFF4
  9773                           prodl	equ	0xFF3
  9774                           intcon	equ	0xFF2
  9775                           intcon2	equ	0xFF1
  9776                           postinc0	equ	0xFEE
  9777                           plusw0	equ	0xFEB
  9778                           wreg	equ	0xFE8
  9779                           postdec1	equ	0xFE5
  9780                           fsr1l	equ	0xFE1
  9781                           postinc2	equ	0xFDE
  9782                           postdec2	equ	0xFDD
  9783                           plusw2	equ	0xFDB
  9784                           fsr2h	equ	0xFDA
  9785                           fsr2l	equ	0xFD9
  9786                           status	equ	0xFD8
  9787                           
  9788 ;; *************** function _RTC_TIME_NONMilitary *****************
  9789 ;; Defined at:
  9790 ;;		line 89 in file "RTC.c"
  9791 ;; Parameters:    Size  Location     Type
  9792 ;;		None
  9793 ;; Auto vars:     Size  Location     Type
  9794 ;;  temphours       2   27[BANK1 ] int 
  9795 ;;  Error           2   25[BANK1 ] int 
  9796 ;; Return value:  Size  Location     Type
  9797 ;;		None               void
  9798 ;; Registers used:
  9799 ;;		wreg, status,2, status,0, cstack
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9806 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;Total ram usage:        5 bytes
  9810 ;; Hardware stack levels used:    1
  9811 ;; Hardware stack levels required when called:   10
  9812 ;; This function calls:
  9813 ;;		_I2C_Read_At_Address
  9814 ;;		_I2C_Write_At_Address
  9815 ;;		_ResetI2C
  9816 ;; This function is called by:
  9817 ;;		_RTC_INIT
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           	psect	text17
  9822  017B1C                     __ptext17:
  9823                           	opt stack 0
  9824  017B1C                     _RTC_TIME_NONMilitary:
  9825                           	opt stack 19
  9826                           
  9827                           ;RTC.c: 91: int temphours = 0;
  9828                           
  9829                           ;incstack = 0
  9830  017B1C  0E00               	movlw	0
  9831  017B1E  0101               	movlb	1	; () banked
  9832  017B20  6F1C               	movwf	(RTC_TIME_NONMilitary@temphours+1)& (0+255),b
  9833  017B22  0E00               	movlw	0
  9834  017B24  6F1B               	movwf	RTC_TIME_NONMilitary@temphours& (0+255),b
  9835                           
  9836                           ; BSR set to: 1
  9837                           ;RTC.c: 92: int Error = -1;
  9838  017B26  0101               	movlb	1	; () banked
  9839  017B28  6919               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  9840  017B2A  691A               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  9841                           
  9842                           ; BSR set to: 1
  9843                           ;RTC.c: 94: temphours = I2C_Read_At_Address(0b1101000, 0x02);
  9844  017B2C  0E02               	movlw	2
  9845  017B2E  0101               	movlb	1	; () banked
  9846  017B30  6F10               	movwf	I2C_Read_At_Address@Register& (0+255),b
  9847  017B32  0E68               	movlw	104
  9848  017B34  EC96  F0AB         	call	_I2C_Read_At_Address
  9849  017B38  C110  F11B         	movff	?_I2C_Read_At_Address,RTC_TIME_NONMilitary@temphours
  9850  017B3C  C111  F11C         	movff	?_I2C_Read_At_Address+1,RTC_TIME_NONMilitary@temphours+1
  9851                           
  9852                           ;RTC.c: 95: if(temphours >= 0)
  9853  017B40  0101               	movlb	1	; () banked
  9854  017B42  BF1C               	btfsc	(RTC_TIME_NONMilitary@temphours+1)& (0+255),7,b
  9855  017B44  D015               	goto	l1199
  9856                           
  9857                           ; BSR set to: 1
  9858                           ;RTC.c: 96: {
  9859                           ;RTC.c: 97: if((temphours & 0x40) == 0)
  9860  017B46  0101               	movlb	1	; () banked
  9861  017B48  BD1B               	btfsc	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  9862  017B4A  D016               	goto	l14319
  9863                           
  9864                           ; BSR set to: 1
  9865                           ;RTC.c: 98: {
  9866                           ;RTC.c: 99: temphours |= 0x40;
  9867  017B4C  0101               	movlb	1	; () banked
  9868  017B4E  8D1B               	bsf	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  9869                           
  9870                           ; BSR set to: 1
  9871                           ;RTC.c: 100: Error = I2C_Write_At_Address( 0b1101000, 0x02, temphours );
  9872  017B50  0E02               	movlw	2
  9873  017B52  0101               	movlb	1	; () banked
  9874  017B54  6F10               	movwf	I2C_Write_At_Address@Register& (0+255),b
  9875  017B56  C11B  F111         	movff	RTC_TIME_NONMilitary@temphours,I2C_Write_At_Address@data
  9876  017B5A  0E68               	movlw	104
  9877  017B5C  EC02  F0B3         	call	_I2C_Write_At_Address
  9878  017B60  0101               	movlb	1	; () banked
  9879  017B62  6F18               	movwf	??_RTC_TIME_NONMilitary& (0+255),b
  9880  017B64  0101               	movlb	1	; () banked
  9881  017B66  5118               	movf	??_RTC_TIME_NONMilitary& (0+255),w,b
  9882  017B68  0101               	movlb	1	; () banked
  9883  017B6A  6F19               	movwf	RTC_TIME_NONMilitary@Error& (0+255),b
  9884  017B6C  6B1A               	clrf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  9885                           
  9886                           ; BSR set to: 1
  9887                           ;RTC.c: 101: }
  9888                           ;RTC.c: 102: }
  9889  017B6E  D004               	goto	l14319
  9890  017B70                     l1199:
  9891                           
  9892                           ; BSR set to: 1
  9893                           ;RTC.c: 103: else
  9894                           ;RTC.c: 104: {
  9895                           ;RTC.c: 105: Error = -1;
  9896  017B70  0101               	movlb	1	; () banked
  9897  017B72  6919               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  9898  017B74  691A               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  9899  017B76  D000               	goto	l14319
  9900  017B78                     l14319:
  9901                           
  9902                           ; BSR set to: 1
  9903                           ;RTC.c: 106: }
  9904                           ;RTC.c: 107: if(Error < 0 )
  9905  017B78  0101               	movlb	1	; () banked
  9906  017B7A  AF1A               	btfss	(RTC_TIME_NONMilitary@Error+1)& (0+255),7,b
  9907  017B7C  0012               	return	
  9908                           
  9909                           ; BSR set to: 1
  9910                           ;RTC.c: 108: {
  9911                           ;RTC.c: 109: ResetI2C();
  9912  017B7E  ECA1  F006         	call	_ResetI2C	;wreg free
  9913  017B82  0012               	return	
  9914  017B84  0012               	return		;funcret
  9915  017B86                     __end_of_RTC_TIME_NONMilitary:
  9916                           	opt stack 0
  9917                           tblptru	equ	0xFF8
  9918                           tblptrh	equ	0xFF7
  9919                           tblptrl	equ	0xFF6
  9920                           tablat	equ	0xFF5
  9921                           prodh	equ	0xFF4
  9922                           prodl	equ	0xFF3
  9923                           intcon	equ	0xFF2
  9924                           intcon2	equ	0xFF1
  9925                           postinc0	equ	0xFEE
  9926                           plusw0	equ	0xFEB
  9927                           wreg	equ	0xFE8
  9928                           postdec1	equ	0xFE5
  9929                           fsr1l	equ	0xFE1
  9930                           postinc2	equ	0xFDE
  9931                           postdec2	equ	0xFDD
  9932                           plusw2	equ	0xFDB
  9933                           fsr2h	equ	0xFDA
  9934                           fsr2l	equ	0xFD9
  9935                           status	equ	0xFD8
  9936                           
  9937 ;; *************** function _RTC_Clock_Enable *****************
  9938 ;; Defined at:
  9939 ;;		line 70 in file "RTC.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;		None
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;  tempSeconds     2   24[BANK1 ] int 
  9944 ;;  Error           1   26[BANK1 ] char 
  9945 ;; Return value:  Size  Location     Type
  9946 ;;		None               void
  9947 ;; Registers used:
  9948 ;;		wreg, status,2, status,0, cstack
  9949 ;; Tracked objects:
  9950 ;;		On entry : 0/0
  9951 ;;		On exit  : 0/0
  9952 ;;		Unchanged: 0/0
  9953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9955 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9957 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9958 ;;Total ram usage:        3 bytes
  9959 ;; Hardware stack levels used:    1
  9960 ;; Hardware stack levels required when called:   10
  9961 ;; This function calls:
  9962 ;;		_I2C_Read_At_Address
  9963 ;;		_I2C_Write_At_Address
  9964 ;;		_ResetI2C
  9965 ;; This function is called by:
  9966 ;;		_RTC_INIT
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           	psect	text18
  9971  00079E                     __ptext18:
  9972                           	opt stack 0
  9973  00079E                     _RTC_Clock_Enable:
  9974                           	opt stack 19
  9975                           
  9976                           ;RTC.c: 72: int tempSeconds =0;
  9977                           
  9978                           ;incstack = 0
  9979  00079E  0E00               	movlw	0
  9980  0007A0  0101               	movlb	1	; () banked
  9981  0007A2  6F19               	movwf	(RTC_Clock_Enable@tempSeconds+1)& (0+255),b
  9982  0007A4  0E00               	movlw	0
  9983  0007A6  6F18               	movwf	RTC_Clock_Enable@tempSeconds& (0+255),b
  9984                           
  9985                           ;RTC.c: 73: signed char Error=0;
  9986  0007A8  0E00               	movlw	0
  9987  0007AA  0101               	movlb	1	; () banked
  9988  0007AC  6F1A               	movwf	RTC_Clock_Enable@Error& (0+255),b
  9989                           
  9990                           ; BSR set to: 1
  9991                           ;RTC.c: 75: tempSeconds = I2C_Read_At_Address(0b1101000, 0x00);
  9992  0007AE  0E00               	movlw	0
  9993  0007B0  0101               	movlb	1	; () banked
  9994  0007B2  6F10               	movwf	I2C_Read_At_Address@Register& (0+255),b
  9995  0007B4  0E68               	movlw	104
  9996  0007B6  EC96  F0AB         	call	_I2C_Read_At_Address
  9997  0007BA  C110  F118         	movff	?_I2C_Read_At_Address,RTC_Clock_Enable@tempSeconds
  9998  0007BE  C111  F119         	movff	?_I2C_Read_At_Address+1,RTC_Clock_Enable@tempSeconds+1
  9999                           
 10000                           ;RTC.c: 76: Error = I2C_Write_At_Address( 0b1101000, 0x00, (tempSeconds & 0x7F) );
 10001  0007C2  0E00               	movlw	0
 10002  0007C4  0101               	movlb	1	; () banked
 10003  0007C6  6F10               	movwf	I2C_Write_At_Address@Register& (0+255),b
 10004  0007C8  0101               	movlb	1	; () banked
 10005  0007CA  5118               	movf	RTC_Clock_Enable@tempSeconds& (0+255),w,b
 10006  0007CC  0B7F               	andlw	127
 10007  0007CE  0101               	movlb	1	; () banked
 10008  0007D0  6F11               	movwf	I2C_Write_At_Address@data& (0+255),b
 10009  0007D2  0E68               	movlw	104
 10010  0007D4  EC02  F0B3         	call	_I2C_Write_At_Address
 10011  0007D8  0101               	movlb	1	; () banked
 10012  0007DA  6F1A               	movwf	RTC_Clock_Enable@Error& (0+255),b
 10013                           
 10014                           ; BSR set to: 1
 10015                           ;RTC.c: 78: if(Error < 0 )
 10016  0007DC  0101               	movlb	1	; () banked
 10017  0007DE  AF1A               	btfss	RTC_Clock_Enable@Error& (0+255),7,b
 10018  0007E0  0012               	return	
 10019                           
 10020                           ; BSR set to: 1
 10021                           ;RTC.c: 79: {
 10022                           ;RTC.c: 80: ResetI2C();
 10023  0007E2  ECA1  F006         	call	_ResetI2C	;wreg free
 10024  0007E6  0012               	return	
 10025  0007E8  0012               	return		;funcret
 10026  0007EA                     __end_of_RTC_Clock_Enable:
 10027                           	opt stack 0
 10028                           tblptru	equ	0xFF8
 10029                           tblptrh	equ	0xFF7
 10030                           tblptrl	equ	0xFF6
 10031                           tablat	equ	0xFF5
 10032                           prodh	equ	0xFF4
 10033                           prodl	equ	0xFF3
 10034                           intcon	equ	0xFF2
 10035                           intcon2	equ	0xFF1
 10036                           postinc0	equ	0xFEE
 10037                           plusw0	equ	0xFEB
 10038                           wreg	equ	0xFE8
 10039                           postdec1	equ	0xFE5
 10040                           fsr1l	equ	0xFE1
 10041                           postinc2	equ	0xFDE
 10042                           postdec2	equ	0xFDD
 10043                           plusw2	equ	0xFDB
 10044                           fsr2h	equ	0xFDA
 10045                           fsr2l	equ	0xFD9
 10046                           status	equ	0xFD8
 10047                           
 10048 ;; *************** function _I2C_Read_At_Address *****************
 10049 ;; Defined at:
 10050 ;;		line 224 in file "I2C.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;  I2Caddress      1    wreg     unsigned char 
 10053 ;;  Register        1   16[BANK1 ] unsigned char 
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;  I2Caddress      1   18[BANK1 ] unsigned char 
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  2   16[BANK1 ] int 
 10058 ;; Registers used:
 10059 ;;		wreg, status,2, status,0, cstack
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10065 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10066 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10068 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10069 ;;Total ram usage:        3 bytes
 10070 ;; Hardware stack levels used:    1
 10071 ;; Hardware stack levels required when called:    9
 10072 ;; This function calls:
 10073 ;;		_IdleI2C
 10074 ;;		_WriteI2C
 10075 ;; This function is called by:
 10076 ;;		_RTC_Clock_Enable
 10077 ;;		_RTC_TIME_NONMilitary
 10078 ;;		_RTC_Clock_Disable
 10079 ;;		_READ_RTC_SECONDS
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           	psect	text19
 10084  01572C                     __ptext19:
 10085                           	opt stack 0
 10086  01572C                     _I2C_Read_At_Address:
 10087                           	opt stack 19
 10088                           
 10089                           ;incstack = 0
 10090                           ;I2C_Read_At_Address@I2Caddress stored from wreg
 10091  01572C  0101               	movlb	1	; () banked
 10092  01572E  6F12               	movwf	I2C_Read_At_Address@I2Caddress& (0+255),b
 10093                           
 10094                           ; BSR set to: 1
 10095                           ;I2C.c: 226: IdleI2C();
 10096  015730  EC58  F007         	call	_IdleI2C	;wreg free
 10097                           
 10098                           ;I2C.c: 227: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 10099  015734  80C5               	bsf	4037,0,c	;volatile
 10100  015736  D000               	goto	l1406
 10101  015738                     l1406:
 10102  015738  A0C5               	btfss	4037,0,c	;volatile
 10103  01573A  D002               	goto	l1409
 10104  01573C  D7FD               	goto	l1406
 10105                           
 10106                           ;I2C.c: 228: while ( SSPCON2bits.SEN );
 10107  01573E  D000               	goto	l1409
 10108  015740                     l1409:
 10109  015740  B0C5               	btfsc	4037,0,c	;volatile
 10110  015742  D7FE               	goto	l1409
 10111                           
 10112                           ;I2C.c: 229: if ( PIR2bits.BCLIF )
 10113  015744  A6A1               	btfss	4001,3,c	;volatile
 10114  015746  D005               	goto	l12949
 10115  015748                     l12945:
 10116                           
 10117                           ;I2C.c: 230: {
 10118                           ;I2C.c: 231: return ( -1 );
 10119  015748  0101               	movlb	1	; () banked
 10120  01574A  6910               	setf	?_I2C_Read_At_Address& (0+255),b
 10121  01574C  6911               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
 10122  01574E  0012               	return	
 10123                           
 10124                           ; BSR set to: 1
 10125                           ;I2C.c: 232: }
 10126  015750  D07F               	goto	l1414
 10127  015752                     l12949:
 10128                           
 10129                           ;I2C.c: 233: else
 10130                           ;I2C.c: 234: {
 10131                           ;I2C.c: 235: if ( WriteI2C( (I2Caddress << 1 ) & 0xFE ) )
 10132  015752  0101               	movlb	1	; () banked
 10133  015754  5112               	movf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
 10134  015756  2512               	addwf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
 10135  015758  0BFE               	andlw	254
 10136  01575A  EC22  F0BD         	call	_WriteI2C
 10137  01575E  0900               	iorlw	0
 10138  015760  B4D8               	btfsc	status,2,c
 10139  015762  D00A               	goto	l1415
 10140                           
 10141                           ;I2C.c: 236: {
 10142                           ;I2C.c: 237: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10143  015764  84C5               	bsf	4037,2,c	;volatile
 10144  015766  D000               	goto	l1416
 10145  015768                     l1416:
 10146  015768  B4C5               	btfsc	4037,2,c	;volatile
 10147  01576A  D7FE               	goto	l1416
 10148                           
 10149                           ;I2C.c: 238: return ( -3 );
 10150  01576C  0EFF               	movlw	255
 10151  01576E  0101               	movlb	1	; () banked
 10152  015770  6F11               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
 10153  015772  0EFD               	movlw	253
 10154  015774  6F10               	movwf	?_I2C_Read_At_Address& (0+255),b
 10155                           
 10156                           ; BSR set to: 1
 10157  015776  0012               	return	
 10158  015778                     l1415:
 10159                           
 10160                           ;I2C.c: 239: }
 10161                           ;I2C.c: 242: if ( !SSPCON2bits.ACKSTAT )
 10162  015778  BCC5               	btfsc	4037,6,c	;volatile
 10163  01577A  D060               	goto	l1419
 10164                           
 10165                           ;I2C.c: 243: {
 10166                           ;I2C.c: 244: if ( WriteI2C( Register ) )
 10167  01577C  0101               	movlb	1	; () banked
 10168  01577E  5110               	movf	I2C_Read_At_Address@Register& (0+255),w,b
 10169  015780  EC22  F0BD         	call	_WriteI2C
 10170  015784  0900               	iorlw	0
 10171  015786  B4D8               	btfsc	status,2,c
 10172  015788  D00A               	goto	l1420
 10173                           
 10174                           ;I2C.c: 245: {
 10175                           ;I2C.c: 246: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10176  01578A  84C5               	bsf	4037,2,c	;volatile
 10177  01578C  D000               	goto	l1421
 10178  01578E                     l1421:
 10179  01578E  B4C5               	btfsc	4037,2,c	;volatile
 10180  015790  D7FE               	goto	l1421
 10181                           
 10182                           ;I2C.c: 247: return ( -3 );
 10183  015792  0EFF               	movlw	255
 10184  015794  0101               	movlb	1	; () banked
 10185  015796  6F11               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
 10186  015798  0EFD               	movlw	253
 10187  01579A  6F10               	movwf	?_I2C_Read_At_Address& (0+255),b
 10188                           
 10189                           ; BSR set to: 1
 10190  01579C  0012               	return	
 10191  01579E                     l1420:
 10192                           
 10193                           ;I2C.c: 248: }
 10194                           ;I2C.c: 251: if ( !SSPCON2bits.ACKSTAT )
 10195  01579E  BCC5               	btfsc	4037,6,c	;volatile
 10196  0157A0  D046               	goto	l1424
 10197                           
 10198                           ;I2C.c: 252: {
 10199                           ;I2C.c: 253: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
 10200  0157A2  82C5               	bsf	4037,1,c	;volatile
 10201  0157A4  D000               	goto	l1425
 10202  0157A6                     l1425:
 10203  0157A6  A2C5               	btfss	4037,1,c	;volatile
 10204  0157A8  D002               	goto	l1428
 10205  0157AA  D7FD               	goto	l1425
 10206                           
 10207                           ;I2C.c: 254: while ( SSPCON2bits.RSEN );
 10208  0157AC  D000               	goto	l1428
 10209  0157AE                     l1428:
 10210  0157AE  B2C5               	btfsc	4037,1,c	;volatile
 10211  0157B0  D7FE               	goto	l1428
 10212                           
 10213                           ;I2C.c: 255: if ( PIR2bits.BCLIF )
 10214  0157B2  A6A1               	btfss	4001,3,c	;volatile
 10215  0157B4  D004               	goto	l12969
 10216                           
 10217                           ;I2C.c: 256: {
 10218                           ;I2C.c: 257: return ( -1 );
 10219  0157B6  0101               	movlb	1	; () banked
 10220  0157B8  6910               	setf	?_I2C_Read_At_Address& (0+255),b
 10221  0157BA  6911               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
 10222  0157BC  0012               	return	
 10223  0157BE                     l12969:
 10224                           
 10225                           ;I2C.c: 258: }
 10226                           ;I2C.c: 260: if ( WriteI2C( (I2Caddress << 1) + 1 ) )
 10227  0157BE  80D8               	bsf	status,0,c
 10228  0157C0  0101               	movlb	1	; () banked
 10229  0157C2  3512               	rlcf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
 10230  0157C4  EC22  F0BD         	call	_WriteI2C
 10231  0157C8  0900               	iorlw	0
 10232  0157CA  B4D8               	btfsc	status,2,c
 10233  0157CC  D00A               	goto	l1432
 10234                           
 10235                           ;I2C.c: 261: {
 10236                           ;I2C.c: 262: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10237  0157CE  84C5               	bsf	4037,2,c	;volatile
 10238  0157D0  D000               	goto	l1433
 10239  0157D2                     l1433:
 10240  0157D2  B4C5               	btfsc	4037,2,c	;volatile
 10241  0157D4  D7FE               	goto	l1433
 10242                           
 10243                           ;I2C.c: 263: return ( -3 );
 10244  0157D6  0EFF               	movlw	255
 10245  0157D8  0101               	movlb	1	; () banked
 10246  0157DA  6F11               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
 10247  0157DC  0EFD               	movlw	253
 10248  0157DE  6F10               	movwf	?_I2C_Read_At_Address& (0+255),b
 10249                           
 10250                           ; BSR set to: 1
 10251  0157E0  0012               	return	
 10252  0157E2                     l1432:
 10253                           
 10254                           ;I2C.c: 264: }
 10255                           ;I2C.c: 267: if ( !SSPCON2bits.ACKSTAT )
 10256  0157E2  BCC5               	btfsc	4037,6,c	;volatile
 10257  0157E4  D019               	goto	l1436
 10258                           
 10259                           ;I2C.c: 268: {
 10260                           ;I2C.c: 269: SSPCON2bits.RCEN = 1;
 10261  0157E6  86C5               	bsf	4037,3,c	;volatile
 10262                           
 10263                           ;I2C.c: 270: while ( SSPCON2bits.RCEN );
 10264  0157E8  D000               	goto	l1437
 10265  0157EA                     l1437:
 10266  0157EA  B6C5               	btfsc	4037,3,c	;volatile
 10267  0157EC  D7FE               	goto	l1437
 10268                           
 10269                           ;I2C.c: 271: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
 10270  0157EE  8AC5               	bsf	4037,5,c	;volatile
 10271  0157F0  88C5               	bsf	4037,4,c	;volatile
 10272  0157F2  D000               	goto	l1440
 10273  0157F4                     l1440:
 10274  0157F4  A8C5               	btfss	4037,4,c	;volatile
 10275  0157F6  D002               	goto	l1443
 10276  0157F8  D7FD               	goto	l1440
 10277                           
 10278                           ;I2C.c: 272: while ( SSPCON2bits.ACKEN );
 10279  0157FA  D000               	goto	l1443
 10280  0157FC                     l1443:
 10281  0157FC  B8C5               	btfsc	4037,4,c	;volatile
 10282  0157FE  D7FE               	goto	l1443
 10283                           
 10284                           ;I2C.c: 273: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10285  015800  84C5               	bsf	4037,2,c	;volatile
 10286  015802  D000               	goto	l1446
 10287  015804                     l1446:
 10288  015804  A4C5               	btfss	4037,2,c	;volatile
 10289  015806  D002               	goto	l1449
 10290  015808  D7FD               	goto	l1446
 10291                           
 10292                           ;I2C.c: 274: while ( SSPCON2bits.PEN );
 10293  01580A  D000               	goto	l1449
 10294  01580C                     l1449:
 10295  01580C  B4C5               	btfsc	4037,2,c	;volatile
 10296  01580E  D7FE               	goto	l1449
 10297                           
 10298                           ;I2C.c: 275: if ( PIR2bits.BCLIF )
 10299  015810  A6A1               	btfss	4001,3,c	;volatile
 10300  015812  D01E               	goto	l1414
 10301  015814  D799               	goto	l12945
 10302                           
 10303                           ; BSR set to: 1
 10304                           ;I2C.c: 278: }
 10305                           ;I2C.c: 279: }
 10306                           
 10307                           ;I2C.c: 276: {
 10308                           ;I2C.c: 277: return ( -1 );
 10309  015816  D01C               	goto	l1414
 10310  015818                     l1436:
 10311                           
 10312                           ;I2C.c: 280: else
 10313                           ;I2C.c: 281: {
 10314                           ;I2C.c: 282: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10315  015818  84C5               	bsf	4037,2,c	;volatile
 10316  01581A  D000               	goto	l1454
 10317  01581C                     l1454:
 10318  01581C  B4C5               	btfsc	4037,2,c	;volatile
 10319  01581E  D7FE               	goto	l1454
 10320  015820                     l12981:
 10321                           
 10322                           ;I2C.c: 283: return ( -2 );
 10323  015820  0EFF               	movlw	255
 10324  015822  0101               	movlb	1	; () banked
 10325  015824  6F11               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
 10326  015826  0EFE               	movlw	254
 10327  015828  6F10               	movwf	?_I2C_Read_At_Address& (0+255),b
 10328                           
 10329                           ; BSR set to: 1
 10330  01582A  0012               	return	
 10331                           
 10332                           ; BSR set to: 1
 10333                           ;I2C.c: 284: }
 10334                           ;I2C.c: 286: }
 10335  01582C  D011               	goto	l1414
 10336  01582E                     l1424:
 10337                           
 10338                           ;I2C.c: 287: else
 10339                           ;I2C.c: 288: {
 10340                           ;I2C.c: 289: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10341  01582E  84C5               	bsf	4037,2,c	;volatile
 10342  015830  D000               	goto	l1458
 10343  015832                     l1458:
 10344  015832  B4C5               	btfsc	4037,2,c	;volatile
 10345  015834  D7FE               	goto	l1458
 10346  015836  D7F4               	goto	l12981
 10347                           
 10348                           ; BSR set to: 1
 10349                           
 10350                           ;I2C.c: 290: return ( -2 );
 10351  015838  0012               	return	
 10352                           
 10353                           ; BSR set to: 1
 10354                           ;I2C.c: 291: }
 10355                           ;I2C.c: 292: }
 10356  01583A  D00A               	goto	l1414
 10357  01583C                     l1419:
 10358                           
 10359                           ;I2C.c: 293: else
 10360                           ;I2C.c: 294: {
 10361                           ;I2C.c: 295: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10362  01583C  84C5               	bsf	4037,2,c	;volatile
 10363  01583E  D000               	goto	l1462
 10364  015840                     l1462:
 10365  015840  B4C5               	btfsc	4037,2,c	;volatile
 10366  015842  D7FE               	goto	l1462
 10367                           
 10368                           ;I2C.c: 296: return ( -2 );
 10369  015844  0EFF               	movlw	255
 10370  015846  0101               	movlb	1	; () banked
 10371  015848  6F11               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
 10372  01584A  0EFE               	movlw	254
 10373  01584C  6F10               	movwf	?_I2C_Read_At_Address& (0+255),b
 10374                           
 10375                           ; BSR set to: 1
 10376  01584E  0012               	return	
 10377  015850                     l1414:
 10378                           
 10379                           ;I2C.c: 297: }
 10380                           ;I2C.c: 298: }
 10381                           ;I2C.c: 299: return ( (unsigned int) SSPBUF );
 10382  015850  CFC9 F110          	movff	4041,?_I2C_Read_At_Address	;volatile
 10383  015854  0101               	movlb	1	; () banked
 10384  015856  6B11               	clrf	(?_I2C_Read_At_Address+1)& (0+255),b
 10385                           
 10386                           ; BSR set to: 1
 10387  015858  0012               	return		;funcret
 10388  01585A                     __end_of_I2C_Read_At_Address:
 10389                           	opt stack 0
 10390                           tblptru	equ	0xFF8
 10391                           tblptrh	equ	0xFF7
 10392                           tblptrl	equ	0xFF6
 10393                           tablat	equ	0xFF5
 10394                           prodh	equ	0xFF4
 10395                           prodl	equ	0xFF3
 10396                           intcon	equ	0xFF2
 10397                           intcon2	equ	0xFF1
 10398                           postinc0	equ	0xFEE
 10399                           plusw0	equ	0xFEB
 10400                           wreg	equ	0xFE8
 10401                           postdec1	equ	0xFE5
 10402                           fsr1l	equ	0xFE1
 10403                           postinc2	equ	0xFDE
 10404                           postdec2	equ	0xFDD
 10405                           plusw2	equ	0xFDB
 10406                           fsr2h	equ	0xFDA
 10407                           fsr2l	equ	0xFD9
 10408                           status	equ	0xFD8
 10409                           
 10410 ;; *************** function _PWM_init *****************
 10411 ;; Defined at:
 10412 ;;		line 54 in file "PWM.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;		None
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;		None
 10417 ;; Return value:  Size  Location     Type
 10418 ;;		None               void
 10419 ;; Registers used:
 10420 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10430 ;;Total ram usage:        0 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; Hardware stack levels required when called:   10
 10433 ;; This function calls:
 10434 ;;		_SetDuty
 10435 ;;		_SetFreq
 10436 ;; This function is called by:
 10437 ;;		_main
 10438 ;; This function uses a non-reentrant model
 10439 ;;
 10440                           
 10441                           	psect	text20
 10442  000BD8                     __ptext20:
 10443                           	opt stack 0
 10444  000BD8                     _PWM_init:
 10445                           	opt stack 20
 10446                           
 10447                           ;PWM.c: 57: SetFreq(60);
 10448                           
 10449                           ; BSR set to: 1
 10450                           ;incstack = 0
 10451  000BD8  0E00               	movlw	0
 10452  000BDA  0101               	movlb	1	; () banked
 10453  000BDC  6F23               	movwf	(SetFreq@freq+1)& (0+255),b
 10454  000BDE  0E3C               	movlw	60
 10455  000BE0  6F22               	movwf	SetFreq@freq& (0+255),b
 10456  000BE2  EC31  F003         	call	_SetFreq	;wreg free
 10457                           
 10458                           ;PWM.c: 58: SetDuty(0);
 10459  000BE6  0E00               	movlw	0
 10460  000BE8  ECAB  F0B5         	call	_SetDuty
 10461                           
 10462                           ;PWM.c: 59: T2CON &= ~0x03;
 10463  000BEC  0EFC               	movlw	252
 10464  000BEE  16CA               	andwf	4042,f,c	;volatile
 10465                           
 10466                           ;PWM.c: 60: if(16 == 1)
 10467  000BF0  D005               	goto	l14497
 10468                           
 10469                           ;PWM.c: 61: {
 10470                           ;PWM.c: 62: __nop();
 10471  000BF2  F000               	nop	
 10472                           
 10473                           ;PWM.c: 63: }
 10474  000BF4  D005               	goto	l1005
 10475                           
 10476                           ;PWM.c: 64: else if (16 == 4)
 10477  000BF6  D002               	goto	l14497
 10478                           
 10479                           ;PWM.c: 65: {
 10480                           ;PWM.c: 66: T2CON |= 0x01;
 10481  000BF8  80CA               	bsf	4042,0,c	;volatile
 10482                           
 10483                           ;PWM.c: 67: }
 10484  000BFA  D002               	goto	l1005
 10485  000BFC                     l14497:
 10486                           
 10487                           ;PWM.c: 68: else
 10488                           ;PWM.c: 69: {
 10489                           ;PWM.c: 70: T2CON |= 0x10;
 10490  000BFC  88CA               	bsf	4042,4,c	;volatile
 10491  000BFE  D000               	goto	l1005
 10492  000C00                     l1005:
 10493                           
 10494                           ;PWM.c: 71: }
 10495                           ;PWM.c: 72: T2CON |= 0b00000100;
 10496  000C00  84CA               	bsf	4042,2,c	;volatile
 10497                           
 10498                           ;PWM.c: 73: CCP1CON |= 0b00001100;
 10499  000C02  0E0C               	movlw	12
 10500  000C04  12BD               	iorwf	4029,f,c	;volatile
 10501  000C06  0012               	return		;funcret
 10502  000C08                     __end_of_PWM_init:
 10503                           	opt stack 0
 10504                           tblptru	equ	0xFF8
 10505                           tblptrh	equ	0xFF7
 10506                           tblptrl	equ	0xFF6
 10507                           tablat	equ	0xFF5
 10508                           prodh	equ	0xFF4
 10509                           prodl	equ	0xFF3
 10510                           intcon	equ	0xFF2
 10511                           intcon2	equ	0xFF1
 10512                           postinc0	equ	0xFEE
 10513                           plusw0	equ	0xFEB
 10514                           wreg	equ	0xFE8
 10515                           postdec1	equ	0xFE5
 10516                           fsr1l	equ	0xFE1
 10517                           postinc2	equ	0xFDE
 10518                           postdec2	equ	0xFDD
 10519                           plusw2	equ	0xFDB
 10520                           fsr2h	equ	0xFDA
 10521                           fsr2l	equ	0xFD9
 10522                           status	equ	0xFD8
 10523                           
 10524 ;; *************** function _SetFreq *****************
 10525 ;; Defined at:
 10526 ;;		line 144 in file "PWM.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;  freq            2   34[BANK1 ] unsigned int 
 10529 ;; Auto vars:     Size  Location     Type
 10530 ;;  temp            1   36[BANK1 ] unsigned char 
 10531 ;; Return value:  Size  Location     Type
 10532 ;;		None               void
 10533 ;; Registers used:
 10534 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10535 ;; Tracked objects:
 10536 ;;		On entry : 0/0
 10537 ;;		On exit  : 0/0
 10538 ;;		Unchanged: 0/0
 10539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10540 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10541 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10543 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10544 ;;Total ram usage:        3 bytes
 10545 ;; Hardware stack levels used:    1
 10546 ;; Hardware stack levels required when called:    8
 10547 ;; This function calls:
 10548 ;;		___aldiv
 10549 ;;		___wmul
 10550 ;; This function is called by:
 10551 ;;		_PWM_init
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555                           	psect	text21
 10556  000662                     __ptext21:
 10557                           	opt stack 0
 10558  000662                     _SetFreq:
 10559                           	opt stack 21
 10560                           
 10561                           ;PWM.c: 147: unsigned char temp =0;
 10562                           
 10563                           ;incstack = 0
 10564  000662  0E00               	movlw	0
 10565  000664  0101               	movlb	1	; () banked
 10566  000666  6F24               	movwf	SetFreq@temp& (0+255),b
 10567                           
 10568                           ; BSR set to: 1
 10569                           ;PWM.c: 148: temp = (unsigned char)(((40960000L >> 2)/(freq*1000))-1);
 10570  000668  0E00               	movlw	0
 10571  00066A  0101               	movlb	1	; () banked
 10572  00066C  6F14               	movwf	___aldiv@dividend& (0+255),b
 10573  00066E  0E40               	movlw	64
 10574  000670  6F15               	movwf	(___aldiv@dividend+1)& (0+255),b
 10575  000672  0E9C               	movlw	156
 10576  000674  6F16               	movwf	(___aldiv@dividend+2)& (0+255),b
 10577  000676  0E00               	movlw	0
 10578  000678  6F17               	movwf	(___aldiv@dividend+3)& (0+255),b
 10579  00067A  C122  F10E         	movff	SetFreq@freq,___wmul@multiplier
 10580  00067E  C123  F10F         	movff	SetFreq@freq+1,___wmul@multiplier+1
 10581  000682  0E03               	movlw	3
 10582  000684  0101               	movlb	1	; () banked
 10583  000686  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10584  000688  0EE8               	movlw	232
 10585  00068A  6F10               	movwf	___wmul@multiplicand& (0+255),b
 10586  00068C  EC35  F005         	call	___wmul	;wreg free
 10587  000690  0101               	movlb	1	; () banked
 10588  000692  C10E  F118         	movff	?___wmul,___aldiv@divisor
 10589  000696  0101               	movlb	1	; () banked
 10590  000698  C10F  F119         	movff	?___wmul+1,___aldiv@divisor+1
 10591  00069C  0101               	movlb	1	; () banked
 10592  00069E  6B1A               	clrf	(___aldiv@divisor+2)& (0+255),b
 10593  0006A0  6B1B               	clrf	(___aldiv@divisor+3)& (0+255),b
 10594  0006A2  EC2D  F0AC         	call	___aldiv	;wreg free
 10595  0006A6  0101               	movlb	1	; () banked
 10596  0006A8  0514               	decf	?___aldiv& (0+255),w,b
 10597  0006AA  0101               	movlb	1	; () banked
 10598  0006AC  6F24               	movwf	SetFreq@temp& (0+255),b
 10599                           
 10600                           ; BSR set to: 1
 10601                           ;PWM.c: 149: PR2 = temp;
 10602  0006AE  C124  FFCB         	movff	SetFreq@temp,4043	;volatile
 10603                           
 10604                           ; BSR set to: 1
 10605  0006B2  0012               	return		;funcret
 10606  0006B4                     __end_of_SetFreq:
 10607                           	opt stack 0
 10608                           tblptru	equ	0xFF8
 10609                           tblptrh	equ	0xFF7
 10610                           tblptrl	equ	0xFF6
 10611                           tablat	equ	0xFF5
 10612                           prodh	equ	0xFF4
 10613                           prodl	equ	0xFF3
 10614                           intcon	equ	0xFF2
 10615                           intcon2	equ	0xFF1
 10616                           postinc0	equ	0xFEE
 10617                           plusw0	equ	0xFEB
 10618                           wreg	equ	0xFE8
 10619                           postdec1	equ	0xFE5
 10620                           fsr1l	equ	0xFE1
 10621                           postinc2	equ	0xFDE
 10622                           postdec2	equ	0xFDD
 10623                           plusw2	equ	0xFDB
 10624                           fsr2h	equ	0xFDA
 10625                           fsr2l	equ	0xFD9
 10626                           status	equ	0xFD8
 10627                           
 10628 ;; *************** function ___aldiv *****************
 10629 ;; Defined at:
 10630 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
 10631 ;; Parameters:    Size  Location     Type
 10632 ;;  dividend        4   20[BANK1 ] long 
 10633 ;;  divisor         4   24[BANK1 ] long 
 10634 ;; Auto vars:     Size  Location     Type
 10635 ;;  quotient        4   30[BANK1 ] long 
 10636 ;;  sign            1   29[BANK1 ] unsigned char 
 10637 ;;  counter         1   28[BANK1 ] unsigned char 
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  4   20[BANK1 ] long 
 10640 ;; Registers used:
 10641 ;;		wreg, status,2, status,0
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10647 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10648 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;Total ram usage:       14 bytes
 10652 ;; Hardware stack levels used:    1
 10653 ;; Hardware stack levels required when called:    7
 10654 ;; This function calls:
 10655 ;;		Nothing
 10656 ;; This function is called by:
 10657 ;;		_SetFreq
 10658 ;; This function uses a non-reentrant model
 10659 ;;
 10660                           
 10661                           	psect	text22
 10662  01585A                     __ptext22:
 10663                           	opt stack 0
 10664  01585A                     ___aldiv:
 10665                           	opt stack 21
 10666                           
 10667                           ; BSR set to: 1
 10668                           ;incstack = 0
 10669  01585A  0E00               	movlw	0
 10670  01585C  0101               	movlb	1	; () banked
 10671  01585E  6F1D               	movwf	___aldiv@sign& (0+255),b
 10672                           
 10673                           ; BSR set to: 1
 10674  015860  0101               	movlb	1	; () banked
 10675  015862  AF1B               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 10676  015864  D00D               	goto	l13157
 10677                           
 10678                           ; BSR set to: 1
 10679  015866  0101               	movlb	1	; () banked
 10680  015868  1F1B               	comf	(___aldiv@divisor+3)& (0+255),f,b
 10681  01586A  1F1A               	comf	(___aldiv@divisor+2)& (0+255),f,b
 10682  01586C  1F19               	comf	(___aldiv@divisor+1)& (0+255),f,b
 10683  01586E  6D18               	negf	___aldiv@divisor& (0+255),b
 10684  015870  0E00               	movlw	0
 10685  015872  2319               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 10686  015874  231A               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 10687  015876  231B               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 10688                           
 10689                           ; BSR set to: 1
 10690  015878  0E01               	movlw	1
 10691  01587A  0101               	movlb	1	; () banked
 10692  01587C  6F1D               	movwf	___aldiv@sign& (0+255),b
 10693  01587E  D000               	goto	l13157
 10694  015880                     l13157:
 10695                           
 10696                           ; BSR set to: 1
 10697  015880  0101               	movlb	1	; () banked
 10698  015882  AF17               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 10699  015884  D00D               	goto	l13163
 10700                           
 10701                           ; BSR set to: 1
 10702  015886  0101               	movlb	1	; () banked
 10703  015888  1F17               	comf	(___aldiv@dividend+3)& (0+255),f,b
 10704  01588A  1F16               	comf	(___aldiv@dividend+2)& (0+255),f,b
 10705  01588C  1F15               	comf	(___aldiv@dividend+1)& (0+255),f,b
 10706  01588E  6D14               	negf	___aldiv@dividend& (0+255),b
 10707  015890  0E00               	movlw	0
 10708  015892  2315               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 10709  015894  2316               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 10710  015896  2317               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 10711                           
 10712                           ; BSR set to: 1
 10713  015898  0E01               	movlw	1
 10714  01589A  0101               	movlb	1	; () banked
 10715  01589C  1B1D               	xorwf	___aldiv@sign& (0+255),f,b
 10716  01589E  D000               	goto	l13163
 10717  0158A0                     l13163:
 10718                           
 10719                           ; BSR set to: 1
 10720  0158A0  0E00               	movlw	0
 10721  0158A2  0101               	movlb	1	; () banked
 10722  0158A4  6F1E               	movwf	___aldiv@quotient& (0+255),b
 10723  0158A6  0E00               	movlw	0
 10724  0158A8  6F1F               	movwf	(___aldiv@quotient+1)& (0+255),b
 10725  0158AA  0E00               	movlw	0
 10726  0158AC  6F20               	movwf	(___aldiv@quotient+2)& (0+255),b
 10727  0158AE  0E00               	movlw	0
 10728  0158B0  6F21               	movwf	(___aldiv@quotient+3)& (0+255),b
 10729                           
 10730                           ; BSR set to: 1
 10731  0158B2  0101               	movlb	1	; () banked
 10732  0158B4  5118               	movf	___aldiv@divisor& (0+255),w,b
 10733  0158B6  0101               	movlb	1	; () banked
 10734  0158B8  1119               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 10735  0158BA  0101               	movlb	1	; () banked
 10736  0158BC  111A               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 10737  0158BE  0101               	movlb	1	; () banked
 10738  0158C0  111B               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 10739  0158C2  B4D8               	btfsc	status,2,c
 10740  0158C4  D047               	goto	l13185
 10741                           
 10742                           ; BSR set to: 1
 10743  0158C6  0E01               	movlw	1
 10744  0158C8  0101               	movlb	1	; () banked
 10745  0158CA  6F1C               	movwf	___aldiv@counter& (0+255),b
 10746  0158CC  D009               	goto	l13171
 10747  0158CE                     l13169:
 10748                           
 10749                           ; BSR set to: 1
 10750  0158CE  0101               	movlb	1	; () banked
 10751  0158D0  90D8               	bcf	status,0,c
 10752  0158D2  3718               	rlcf	___aldiv@divisor& (0+255),f,b
 10753  0158D4  3719               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 10754  0158D6  371A               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 10755  0158D8  371B               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 10756  0158DA  0101               	movlb	1	; () banked
 10757  0158DC  2B1C               	incf	___aldiv@counter& (0+255),f,b
 10758  0158DE  D000               	goto	l13171
 10759  0158E0                     l13171:
 10760                           
 10761                           ; BSR set to: 1
 10762  0158E0  0101               	movlb	1	; () banked
 10763  0158E2  BF1B               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
 10764  0158E4  D002               	goto	l13173
 10765  0158E6  D7F3               	goto	l13169
 10766                           
 10767                           ; BSR set to: 1
 10768  0158E8  D000               	goto	l13173
 10769  0158EA                     l13173:
 10770                           
 10771                           ; BSR set to: 1
 10772  0158EA  0101               	movlb	1	; () banked
 10773  0158EC  90D8               	bcf	status,0,c
 10774  0158EE  371E               	rlcf	___aldiv@quotient& (0+255),f,b
 10775  0158F0  371F               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 10776  0158F2  3720               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 10777  0158F4  3721               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 10778                           
 10779                           ; BSR set to: 1
 10780  0158F6  0101               	movlb	1	; () banked
 10781  0158F8  5118               	movf	___aldiv@divisor& (0+255),w,b
 10782  0158FA  0101               	movlb	1	; () banked
 10783  0158FC  5D14               	subwf	___aldiv@dividend& (0+255),w,b
 10784  0158FE  0101               	movlb	1	; () banked
 10785  015900  5119               	movf	(___aldiv@divisor+1)& (0+255),w,b
 10786  015902  0101               	movlb	1	; () banked
 10787  015904  5915               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 10788  015906  0101               	movlb	1	; () banked
 10789  015908  511A               	movf	(___aldiv@divisor+2)& (0+255),w,b
 10790  01590A  0101               	movlb	1	; () banked
 10791  01590C  5916               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 10792  01590E  0101               	movlb	1	; () banked
 10793  015910  511B               	movf	(___aldiv@divisor+3)& (0+255),w,b
 10794  015912  0101               	movlb	1	; () banked
 10795  015914  5917               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 10796  015916  A0D8               	btfss	status,0,c
 10797  015918  D013               	goto	l13181
 10798                           
 10799                           ; BSR set to: 1
 10800  01591A  0101               	movlb	1	; () banked
 10801  01591C  5118               	movf	___aldiv@divisor& (0+255),w,b
 10802  01591E  0101               	movlb	1	; () banked
 10803  015920  5F14               	subwf	___aldiv@dividend& (0+255),f,b
 10804  015922  0101               	movlb	1	; () banked
 10805  015924  5119               	movf	(___aldiv@divisor+1)& (0+255),w,b
 10806  015926  0101               	movlb	1	; () banked
 10807  015928  5B15               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 10808  01592A  0101               	movlb	1	; () banked
 10809  01592C  511A               	movf	(___aldiv@divisor+2)& (0+255),w,b
 10810  01592E  0101               	movlb	1	; () banked
 10811  015930  5B16               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 10812  015932  0101               	movlb	1	; () banked
 10813  015934  511B               	movf	(___aldiv@divisor+3)& (0+255),w,b
 10814  015936  0101               	movlb	1	; () banked
 10815  015938  5B17               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 10816                           
 10817                           ; BSR set to: 1
 10818  01593A  0101               	movlb	1	; () banked
 10819  01593C  811E               	bsf	___aldiv@quotient& (0+255),0,b
 10820  01593E  D000               	goto	l13181
 10821  015940                     l13181:
 10822                           
 10823                           ; BSR set to: 1
 10824  015940  0101               	movlb	1	; () banked
 10825  015942  90D8               	bcf	status,0,c
 10826  015944  331B               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 10827  015946  331A               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 10828  015948  3319               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 10829  01594A  3318               	rrcf	___aldiv@divisor& (0+255),f,b
 10830                           
 10831                           ; BSR set to: 1
 10832  01594C  0101               	movlb	1	; () banked
 10833  01594E  2F1C               	decfsz	___aldiv@counter& (0+255),f,b
 10834  015950  D7CC               	goto	l13173
 10835                           
 10836                           ; BSR set to: 1
 10837  015952  D000               	goto	l13185
 10838  015954                     l13185:
 10839                           
 10840                           ; BSR set to: 1
 10841  015954  0101               	movlb	1	; () banked
 10842  015956  511D               	movf	___aldiv@sign& (0+255),w,b
 10843  015958  0101               	movlb	1	; () banked
 10844  01595A  B4D8               	btfsc	status,2,c
 10845  01595C  D00A               	goto	l13189
 10846                           
 10847                           ; BSR set to: 1
 10848  01595E  0101               	movlb	1	; () banked
 10849  015960  1F21               	comf	(___aldiv@quotient+3)& (0+255),f,b
 10850  015962  1F20               	comf	(___aldiv@quotient+2)& (0+255),f,b
 10851  015964  1F1F               	comf	(___aldiv@quotient+1)& (0+255),f,b
 10852  015966  6D1E               	negf	___aldiv@quotient& (0+255),b
 10853  015968  0E00               	movlw	0
 10854  01596A  231F               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 10855  01596C  2320               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 10856  01596E  2321               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 10857  015970  D000               	goto	l13189
 10858  015972                     l13189:
 10859                           
 10860                           ; BSR set to: 1
 10861  015972  C11E  F114         	movff	___aldiv@quotient,?___aldiv
 10862  015976  C11F  F115         	movff	___aldiv@quotient+1,?___aldiv+1
 10863  01597A  C120  F116         	movff	___aldiv@quotient+2,?___aldiv+2
 10864  01597E  C121  F117         	movff	___aldiv@quotient+3,?___aldiv+3
 10865  015982  0012               	return	
 10866                           
 10867                           ; BSR set to: 1
 10868                           
 10869                           ; BSR set to: 1
 10870  015984  0012               	return		;funcret
 10871  015986                     __end_of___aldiv:
 10872                           	opt stack 0
 10873                           tblptru	equ	0xFF8
 10874                           tblptrh	equ	0xFF7
 10875                           tblptrl	equ	0xFF6
 10876                           tablat	equ	0xFF5
 10877                           prodh	equ	0xFF4
 10878                           prodl	equ	0xFF3
 10879                           intcon	equ	0xFF2
 10880                           intcon2	equ	0xFF1
 10881                           postinc0	equ	0xFEE
 10882                           plusw0	equ	0xFEB
 10883                           wreg	equ	0xFE8
 10884                           postdec1	equ	0xFE5
 10885                           fsr1l	equ	0xFE1
 10886                           postinc2	equ	0xFDE
 10887                           postdec2	equ	0xFDD
 10888                           plusw2	equ	0xFDB
 10889                           fsr2h	equ	0xFDA
 10890                           fsr2l	equ	0xFD9
 10891                           status	equ	0xFD8
 10892                           
 10893 ;; *************** function _LCDPrintChar *****************
 10894 ;; Defined at:
 10895 ;;		line 271 in file "LCD.c"
 10896 ;; Parameters:    Size  Location     Type
 10897 ;;  character       1    wreg     unsigned char 
 10898 ;; Auto vars:     Size  Location     Type
 10899 ;;  character       1   28[BANK1 ] unsigned char 
 10900 ;; Return value:  Size  Location     Type
 10901 ;;		None               void
 10902 ;; Registers used:
 10903 ;;		wreg, status,2, status,0, cstack
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10912 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10913 ;;Total ram usage:        1 bytes
 10914 ;; Hardware stack levels used:    1
 10915 ;; Hardware stack levels required when called:   10
 10916 ;; This function calls:
 10917 ;;		_SendLCDbyte
 10918 ;; This function is called by:
 10919 ;;		_main
 10920 ;; This function uses a non-reentrant model
 10921 ;;
 10922                           
 10923                           	psect	text23
 10924  000E9C                     __ptext23:
 10925                           	opt stack 0
 10926  000E9C                     _LCDPrintChar:
 10927                           	opt stack 20
 10928                           
 10929                           ; BSR set to: 1
 10930                           ;incstack = 0
 10931                           ;LCDPrintChar@character stored from wreg
 10932  000E9C  0101               	movlb	1	; () banked
 10933  000E9E  6F1C               	movwf	LCDPrintChar@character& (0+255),b
 10934                           
 10935                           ; BSR set to: 1
 10936                           ;LCD.c: 273: SendLCDbyte(character, 1);
 10937  000EA0  0E01               	movlw	1
 10938  000EA2  0101               	movlb	1	; () banked
 10939  000EA4  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
 10940  000EA6  0101               	movlb	1	; () banked
 10941  000EA8  511C               	movf	LCDPrintChar@character& (0+255),w,b
 10942  000EAA  EC59  F0B0         	call	_SendLCDbyte
 10943  000EAE  0012               	return		;funcret
 10944  000EB0                     __end_of_LCDPrintChar:
 10945                           	opt stack 0
 10946                           tblptru	equ	0xFF8
 10947                           tblptrh	equ	0xFF7
 10948                           tblptrl	equ	0xFF6
 10949                           tablat	equ	0xFF5
 10950                           prodh	equ	0xFF4
 10951                           prodl	equ	0xFF3
 10952                           intcon	equ	0xFF2
 10953                           intcon2	equ	0xFF1
 10954                           postinc0	equ	0xFEE
 10955                           plusw0	equ	0xFEB
 10956                           wreg	equ	0xFE8
 10957                           postdec1	equ	0xFE5
 10958                           fsr1l	equ	0xFE1
 10959                           postinc2	equ	0xFDE
 10960                           postdec2	equ	0xFDD
 10961                           plusw2	equ	0xFDB
 10962                           fsr2h	equ	0xFDA
 10963                           fsr2l	equ	0xFD9
 10964                           status	equ	0xFD8
 10965                           
 10966 ;; *************** function _InitApp *****************
 10967 ;; Defined at:
 10968 ;;		line 53 in file "user.c"
 10969 ;; Parameters:    Size  Location     Type
 10970 ;;		None
 10971 ;; Auto vars:     Size  Location     Type
 10972 ;;		None
 10973 ;; Return value:  Size  Location     Type
 10974 ;;		None               void
 10975 ;; Registers used:
 10976 ;;		wreg, status,2, status,0, cstack
 10977 ;; Tracked objects:
 10978 ;;		On entry : 0/0
 10979 ;;		On exit  : 0/0
 10980 ;;		Unchanged: 0/0
 10981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10986 ;;Total ram usage:        0 bytes
 10987 ;; Hardware stack levels used:    1
 10988 ;; Hardware stack levels required when called:    8
 10989 ;; This function calls:
 10990 ;;		_delayUS
 10991 ;; This function is called by:
 10992 ;;		_main
 10993 ;; This function uses a non-reentrant model
 10994 ;;
 10995                           
 10996                           	psect	text24
 10997  0005AC                     __ptext24:
 10998                           	opt stack 0
 10999  0005AC                     _InitApp:
 11000                           	opt stack 22
 11001                           
 11002                           ;user.c: 55: TRISDbits.TRISD1 = 0;
 11003                           
 11004                           ;incstack = 0
 11005  0005AC  9295               	bcf	3989,1,c	;volatile
 11006                           
 11007                           ;user.c: 56: TRISDbits.TRISD2 = 0;
 11008  0005AE  9495               	bcf	3989,2,c	;volatile
 11009                           
 11010                           ;user.c: 57: TRISDbits.TRISD0 = 0;
 11011  0005B0  9095               	bcf	3989,0,c	;volatile
 11012                           
 11013                           ;user.c: 58: TRISAbits.TRISA0 = 1;
 11014  0005B2  8092               	bsf	3986,0,c	;volatile
 11015                           
 11016                           ;user.c: 59: TRISCbits.TRISC2 = 0;
 11017  0005B4  9494               	bcf	3988,2,c	;volatile
 11018                           
 11019                           ;user.c: 60: TRISCbits.TRISC1 = 0;
 11020  0005B6  9294               	bcf	3988,1,c	;volatile
 11021                           
 11022                           ;user.c: 61: TRISEbits.TRISE2 = 1;
 11023  0005B8  8496               	bsf	3990,2,c	;volatile
 11024                           
 11025                           ;user.c: 62: TRISEbits.TRISE1 = 0;
 11026  0005BA  9296               	bcf	3990,1,c	;volatile
 11027                           
 11028                           ;user.c: 64: TRISCbits.TRISC3 = 0;
 11029  0005BC  9694               	bcf	3988,3,c	;volatile
 11030                           
 11031                           ;user.c: 65: TRISCbits.TRISC4 = 0;
 11032  0005BE  9894               	bcf	3988,4,c	;volatile
 11033                           
 11034                           ;user.c: 67: LATC &= ~0b00001000;
 11035  0005C0  968B               	bcf	3979,3,c	;volatile
 11036                           
 11037                           ;user.c: 68: delayUS(200);
 11038  0005C2  0EC8               	movlw	200
 11039  0005C4  0101               	movlb	1	; () banked
 11040  0005C6  6F0E               	movwf	delayUS@US& (0+255),b
 11041  0005C8  0E00               	movlw	0
 11042  0005CA  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 11043  0005CC  0E00               	movlw	0
 11044  0005CE  6F10               	movwf	(delayUS@US+2)& (0+255),b
 11045  0005D0  0E00               	movlw	0
 11046  0005D2  6F11               	movwf	(delayUS@US+3)& (0+255),b
 11047  0005D4  EC58  F0BD         	call	_delayUS	;wreg free
 11048                           
 11049                           ;user.c: 69: TRISCbits.TRISC3 = 1;
 11050  0005D8  8694               	bsf	3988,3,c	;volatile
 11051                           
 11052                           ;user.c: 71: LATD &= ~(0b00000010 + 0b00000100 + 0b00000001);
 11053  0005DA  0EF8               	movlw	248
 11054  0005DC  168C               	andwf	3980,f,c	;volatile
 11055                           
 11056                           ;user.c: 72: LATE &= ~0b00000010;
 11057  0005DE  928D               	bcf	3981,1,c	;volatile
 11058                           
 11059                           ;user.c: 73: LATC &= ~(0b00000010);
 11060  0005E0  928B               	bcf	3979,1,c	;volatile
 11061                           
 11062                           ;user.c: 76: TRISAbits.TRISA3 = 0;
 11063  0005E2  9692               	bcf	3986,3,c	;volatile
 11064                           
 11065                           ;user.c: 77: TRISAbits.TRISA4 = 0;
 11066  0005E4  9892               	bcf	3986,4,c	;volatile
 11067                           
 11068                           ;user.c: 78: TRISAbits.TRISA5 = 0;
 11069  0005E6  9A92               	bcf	3986,5,c	;volatile
 11070                           
 11071                           ;user.c: 79: TRISEbits.TRISE0 = 0;
 11072  0005E8  9096               	bcf	3990,0,c	;volatile
 11073                           
 11074                           ;user.c: 80: TRISDbits.TRISD4 = 0;
 11075  0005EA  9895               	bcf	3989,4,c	;volatile
 11076                           
 11077                           ;user.c: 81: TRISDbits.TRISD7 = 0;
 11078  0005EC  9E95               	bcf	3989,7,c	;volatile
 11079                           
 11080                           ;user.c: 82: TRISDbits.TRISD6 = 0;
 11081  0005EE  9C95               	bcf	3989,6,c	;volatile
 11082                           
 11083                           ;user.c: 83: TRISDbits.TRISD5 = 0;
 11084  0005F0  9A95               	bcf	3989,5,c	;volatile
 11085                           
 11086                           ;user.c: 85: LATA &= ~(0b00001000+0b00010000+0b00100000);
 11087  0005F2  0EC7               	movlw	199
 11088  0005F4  1689               	andwf	3977,f,c	;volatile
 11089                           
 11090                           ;user.c: 86: LATD &= ~(0b10000000 + 0b00100000 + 0b01000000);
 11091  0005F6  0E1F               	movlw	31
 11092  0005F8  168C               	andwf	3980,f,c	;volatile
 11093                           
 11094                           ;user.c: 87: LATE &= ~0b00000001;
 11095  0005FA  908D               	bcf	3981,0,c	;volatile
 11096                           
 11097                           ;user.c: 90: TRISBbits.TRISB4 = 1;
 11098  0005FC  8893               	bsf	3987,4,c	;volatile
 11099                           
 11100                           ;user.c: 93: TRISBbits.TRISB0 = 1;
 11101  0005FE  8093               	bsf	3987,0,c	;volatile
 11102                           
 11103                           ;user.c: 95: RCONbits.IPEN = 1;
 11104  000600  8ED0               	bsf	4048,7,c	;volatile
 11105                           
 11106                           ;user.c: 96: INTCONbits.PEIE = 1;
 11107  000602  8CF2               	bsf	intcon,6,c	;volatile
 11108                           
 11109                           ;user.c: 97: INTCONbits.GIE = 1;
 11110  000604  8EF2               	bsf	intcon,7,c	;volatile
 11111  000606  0012               	return		;funcret
 11112  000608                     __end_of_InitApp:
 11113                           	opt stack 0
 11114                           tblptru	equ	0xFF8
 11115                           tblptrh	equ	0xFF7
 11116                           tblptrl	equ	0xFF6
 11117                           tablat	equ	0xFF5
 11118                           prodh	equ	0xFF4
 11119                           prodl	equ	0xFF3
 11120                           intcon	equ	0xFF2
 11121                           intcon2	equ	0xFF1
 11122                           postinc0	equ	0xFEE
 11123                           plusw0	equ	0xFEB
 11124                           wreg	equ	0xFE8
 11125                           postdec1	equ	0xFE5
 11126                           fsr1l	equ	0xFE1
 11127                           postinc2	equ	0xFDE
 11128                           postdec2	equ	0xFDD
 11129                           plusw2	equ	0xFDB
 11130                           fsr2h	equ	0xFDA
 11131                           fsr2l	equ	0xFD9
 11132                           status	equ	0xFD8
 11133                           
 11134 ;; *************** function _EnableInternalADC *****************
 11135 ;; Defined at:
 11136 ;;		line 53 in file "ADC.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;  channels        1    wreg     unsigned char 
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;  channels        1   15[BANK1 ] unsigned char 
 11141 ;;  config          1   14[BANK1 ] unsigned char 
 11142 ;; Return value:  Size  Location     Type
 11143 ;;		None               void
 11144 ;; Registers used:
 11145 ;;		wreg, status,2, status,0
 11146 ;; Tracked objects:
 11147 ;;		On entry : 0/0
 11148 ;;		On exit  : 0/0
 11149 ;;		Unchanged: 0/0
 11150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11152 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11154 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11155 ;;Total ram usage:        2 bytes
 11156 ;; Hardware stack levels used:    1
 11157 ;; Hardware stack levels required when called:    7
 11158 ;; This function calls:
 11159 ;;		Nothing
 11160 ;; This function is called by:
 11161 ;;		_main
 11162 ;; This function uses a non-reentrant model
 11163 ;;
 11164                           
 11165                           	psect	text25
 11166  016E16                     __ptext25:
 11167                           	opt stack 0
 11168  016E16                     _EnableInternalADC:
 11169                           	opt stack 23
 11170                           
 11171                           ;incstack = 0
 11172                           ;EnableInternalADC@channels stored from wreg
 11173  016E16  0101               	movlb	1	; () banked
 11174  016E18  6F0F               	movwf	EnableInternalADC@channels& (0+255),b
 11175                           
 11176                           ; BSR set to: 1
 11177                           ;ADC.c: 55: unsigned char config =0;
 11178  016E1A  0E00               	movlw	0
 11179  016E1C  0101               	movlb	1	; () banked
 11180  016E1E  6F0E               	movwf	EnableInternalADC@config& (0+255),b
 11181                           
 11182                           ; BSR set to: 1
 11183                           ;ADC.c: 57: if(channels == 1)
 11184  016E20  0101               	movlb	1	; () banked
 11185  016E22  050F               	decf	EnableInternalADC@channels& (0+255),w,b
 11186  016E24  A4D8               	btfss	status,2,c
 11187  016E26  D002               	goto	l14447
 11188                           
 11189                           ; BSR set to: 1
 11190                           ;ADC.c: 58: {
 11191                           ;ADC.c: 59: config |= 0b00001110;
 11192  016E28  0E0E               	movlw	14
 11193  016E2A  D03F               	goto	L8
 11194  016E2C                     l14447:
 11195                           
 11196                           ; BSR set to: 1
 11197                           ;ADC.c: 61: else if(channels ==2)
 11198  016E2C  0E02               	movlw	2
 11199  016E2E  0101               	movlb	1	; () banked
 11200  016E30  190F               	xorwf	EnableInternalADC@channels& (0+255),w,b
 11201  016E32  A4D8               	btfss	status,2,c
 11202  016E34  D002               	goto	l14451
 11203                           
 11204                           ; BSR set to: 1
 11205                           ;ADC.c: 62: {
 11206                           ;ADC.c: 63: config |= 0b00001101;
 11207  016E36  0E0D               	movlw	13
 11208  016E38  D038               	goto	L8
 11209  016E3A                     l14451:
 11210                           
 11211                           ; BSR set to: 1
 11212                           ;ADC.c: 65: else if(channels ==3)
 11213  016E3A  0E03               	movlw	3
 11214  016E3C  0101               	movlb	1	; () banked
 11215  016E3E  190F               	xorwf	EnableInternalADC@channels& (0+255),w,b
 11216  016E40  A4D8               	btfss	status,2,c
 11217  016E42  D002               	goto	l14455
 11218                           
 11219                           ; BSR set to: 1
 11220                           ;ADC.c: 66: {
 11221                           ;ADC.c: 67: config |= 0b00001100;
 11222  016E44  0E0C               	movlw	12
 11223  016E46  D031               	goto	L8
 11224  016E48                     l14455:
 11225                           
 11226                           ; BSR set to: 1
 11227                           ;ADC.c: 69: else if(channels ==4)
 11228  016E48  0E04               	movlw	4
 11229  016E4A  0101               	movlb	1	; () banked
 11230  016E4C  190F               	xorwf	EnableInternalADC@channels& (0+255),w,b
 11231  016E4E  A4D8               	btfss	status,2,c
 11232  016E50  D002               	goto	l14459
 11233                           
 11234                           ; BSR set to: 1
 11235                           ;ADC.c: 70: {
 11236                           ;ADC.c: 71: config |= 0b00001011;
 11237  016E52  0E0B               	movlw	11
 11238  016E54  D02A               	goto	L8
 11239  016E56                     l14459:
 11240                           
 11241                           ; BSR set to: 1
 11242                           ;ADC.c: 73: else if(channels ==5)
 11243  016E56  0E05               	movlw	5
 11244  016E58  0101               	movlb	1	; () banked
 11245  016E5A  190F               	xorwf	EnableInternalADC@channels& (0+255),w,b
 11246  016E5C  A4D8               	btfss	status,2,c
 11247  016E5E  D002               	goto	l14463
 11248                           
 11249                           ; BSR set to: 1
 11250                           ;ADC.c: 74: {
 11251                           ;ADC.c: 75: config |= 0b00001010;
 11252  016E60  0E0A               	movlw	10
 11253  016E62  D023               	goto	L8
 11254  016E64                     l14463:
 11255                           
 11256                           ; BSR set to: 1
 11257                           ;ADC.c: 77: else if(channels ==6)
 11258  016E64  0E06               	movlw	6
 11259  016E66  0101               	movlb	1	; () banked
 11260  016E68  190F               	xorwf	EnableInternalADC@channels& (0+255),w,b
 11261  016E6A  A4D8               	btfss	status,2,c
 11262  016E6C  D002               	goto	l14467
 11263                           
 11264                           ; BSR set to: 1
 11265                           ;ADC.c: 78: {
 11266                           ;ADC.c: 79: config |= 0b00001001;
 11267  016E6E  0E09               	movlw	9
 11268  016E70  D01C               	goto	L8
 11269  016E72                     l14467:
 11270                           
 11271                           ; BSR set to: 1
 11272                           ;ADC.c: 81: else if(channels ==7)
 11273  016E72  0E07               	movlw	7
 11274  016E74  0101               	movlb	1	; () banked
 11275  016E76  190F               	xorwf	EnableInternalADC@channels& (0+255),w,b
 11276  016E78  A4D8               	btfss	status,2,c
 11277  016E7A  D003               	goto	l14471
 11278                           
 11279                           ; BSR set to: 1
 11280                           ;ADC.c: 82: {
 11281                           ;ADC.c: 83: config |= 0b00001000;
 11282  016E7C  0101               	movlb	1	; () banked
 11283  016E7E  870E               	bsf	EnableInternalADC@config& (0+255),3,b
 11284                           
 11285                           ;ADC.c: 84: }
 11286  016E80  D01A               	goto	l14485
 11287  016E82                     l14471:
 11288                           
 11289                           ; BSR set to: 1
 11290                           ;ADC.c: 85: else if(channels ==8)
 11291  016E82  0E08               	movlw	8
 11292  016E84  0101               	movlb	1	; () banked
 11293  016E86  190F               	xorwf	EnableInternalADC@channels& (0+255),w,b
 11294  016E88  A4D8               	btfss	status,2,c
 11295  016E8A  D002               	goto	l14475
 11296                           
 11297                           ; BSR set to: 1
 11298                           ;ADC.c: 86: {
 11299                           ;ADC.c: 87: config |= 0b00000111;
 11300  016E8C  0E07               	movlw	7
 11301  016E8E  D00D               	goto	L8
 11302  016E90                     l14475:
 11303                           
 11304                           ; BSR set to: 1
 11305                           ;ADC.c: 89: else if(channels ==9)
 11306  016E90  0E09               	movlw	9
 11307  016E92  0101               	movlb	1	; () banked
 11308  016E94  190F               	xorwf	EnableInternalADC@channels& (0+255),w,b
 11309  016E96  A4D8               	btfss	status,2,c
 11310  016E98  D002               	goto	l14479
 11311                           
 11312                           ; BSR set to: 1
 11313                           ;ADC.c: 90: {
 11314                           ;ADC.c: 91: config |= 0b00000110;
 11315  016E9A  0E06               	movlw	6
 11316  016E9C  D006               	goto	L8
 11317  016E9E                     l14479:
 11318                           
 11319                           ; BSR set to: 1
 11320                           ;ADC.c: 93: else if(channels ==10)
 11321  016E9E  0E0A               	movlw	10
 11322  016EA0  0101               	movlb	1	; () banked
 11323  016EA2  190F               	xorwf	EnableInternalADC@channels& (0+255),w,b
 11324  016EA4  A4D8               	btfss	status,2,c
 11325  016EA6  D004               	goto	l14483
 11326                           
 11327                           ; BSR set to: 1
 11328                           ;ADC.c: 94: {
 11329                           ;ADC.c: 95: config |= 0b00000101;
 11330  016EA8  0E05               	movlw	5
 11331  016EAA                     L8:
 11332  016EAA  0101               	movlb	1	; () banked
 11333  016EAC  130E               	iorwf	EnableInternalADC@config& (0+255),f,b
 11334                           
 11335                           ;ADC.c: 96: }
 11336  016EAE  D003               	goto	l14485
 11337  016EB0                     l14483:
 11338                           
 11339                           ; BSR set to: 1
 11340                           ;ADC.c: 97: else
 11341                           ;ADC.c: 98: {
 11342                           ;ADC.c: 99: config |= 0b00000100;
 11343  016EB0  0101               	movlb	1	; () banked
 11344  016EB2  850E               	bsf	EnableInternalADC@config& (0+255),2,b
 11345                           
 11346                           ; BSR set to: 1
 11347                           
 11348                           ; BSR set to: 1
 11349                           
 11350                           ; BSR set to: 1
 11351                           
 11352                           ; BSR set to: 1
 11353                           
 11354                           ; BSR set to: 1
 11355                           
 11356                           ; BSR set to: 1
 11357                           
 11358                           ; BSR set to: 1
 11359                           
 11360                           ; BSR set to: 1
 11361                           
 11362                           ; BSR set to: 1
 11363  016EB4  D000               	goto	l14485
 11364  016EB6                     l14485:
 11365                           
 11366                           ; BSR set to: 1
 11367                           ;ADC.c: 100: }
 11368                           ;ADC.c: 102: ADCON1 = config;
 11369  016EB6  C10E  FFC1         	movff	EnableInternalADC@config,4033	;volatile
 11370                           
 11371                           ; BSR set to: 1
 11372  016EBA  0012               	return		;funcret
 11373  016EBC                     __end_of_EnableInternalADC:
 11374                           	opt stack 0
 11375                           tblptru	equ	0xFF8
 11376                           tblptrh	equ	0xFF7
 11377                           tblptrl	equ	0xFF6
 11378                           tablat	equ	0xFF5
 11379                           prodh	equ	0xFF4
 11380                           prodl	equ	0xFF3
 11381                           intcon	equ	0xFF2
 11382                           intcon2	equ	0xFF1
 11383                           postinc0	equ	0xFEE
 11384                           plusw0	equ	0xFEB
 11385                           wreg	equ	0xFE8
 11386                           postdec1	equ	0xFE5
 11387                           fsr1l	equ	0xFE1
 11388                           postinc2	equ	0xFDE
 11389                           postdec2	equ	0xFDD
 11390                           plusw2	equ	0xFDB
 11391                           fsr2h	equ	0xFDA
 11392                           fsr2l	equ	0xFD9
 11393                           status	equ	0xFD8
 11394                           
 11395 ;; *************** function _ContrastPWM_init *****************
 11396 ;; Defined at:
 11397 ;;		line 81 in file "PWM.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;		None
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;		None
 11402 ;; Return value:  Size  Location     Type
 11403 ;;		None               void
 11404 ;; Registers used:
 11405 ;;		wreg, status,2, status,0, cstack
 11406 ;; Tracked objects:
 11407 ;;		On entry : 0/0
 11408 ;;		On exit  : 0/0
 11409 ;;		Unchanged: 0/0
 11410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11415 ;;Total ram usage:        0 bytes
 11416 ;; Hardware stack levels used:    1
 11417 ;; Hardware stack levels required when called:   10
 11418 ;; This function calls:
 11419 ;;		_SetDuty
 11420 ;; This function is called by:
 11421 ;;		_main
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           	psect	text26
 11426  000F3C                     __ptext26:
 11427                           	opt stack 0
 11428  000F3C                     _ContrastPWM_init:
 11429                           	opt stack 20
 11430                           
 11431                           ;PWM.c: 85: SetDuty(0);
 11432                           
 11433                           ; BSR set to: 1
 11434                           ;incstack = 0
 11435  000F3C  0E00               	movlw	0
 11436  000F3E  ECAB  F0B5         	call	_SetDuty
 11437                           
 11438                           ;PWM.c: 86: ECCP1CON |= 0b00001100;
 11439  000F42  0E0C               	movlw	12
 11440  000F44  12BA               	iorwf	4026,f,c	;volatile
 11441  000F46  0012               	return		;funcret
 11442  000F48                     __end_of_ContrastPWM_init:
 11443                           	opt stack 0
 11444                           tblptru	equ	0xFF8
 11445                           tblptrh	equ	0xFF7
 11446                           tblptrl	equ	0xFF6
 11447                           tablat	equ	0xFF5
 11448                           prodh	equ	0xFF4
 11449                           prodl	equ	0xFF3
 11450                           intcon	equ	0xFF2
 11451                           intcon2	equ	0xFF1
 11452                           postinc0	equ	0xFEE
 11453                           plusw0	equ	0xFEB
 11454                           wreg	equ	0xFE8
 11455                           postdec1	equ	0xFE5
 11456                           fsr1l	equ	0xFE1
 11457                           postinc2	equ	0xFDE
 11458                           postdec2	equ	0xFDD
 11459                           plusw2	equ	0xFDB
 11460                           fsr2h	equ	0xFDA
 11461                           fsr2l	equ	0xFD9
 11462                           status	equ	0xFD8
 11463                           
 11464 ;; *************** function _ConfigureOscillator *****************
 11465 ;; Defined at:
 11466 ;;		line 52 in file "system.c"
 11467 ;; Parameters:    Size  Location     Type
 11468 ;;		None
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;		None
 11471 ;; Return value:  Size  Location     Type
 11472 ;;		None               void
 11473 ;; Registers used:
 11474 ;;		None
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11484 ;;Total ram usage:        0 bytes
 11485 ;; Hardware stack levels used:    1
 11486 ;; Hardware stack levels required when called:    7
 11487 ;; This function calls:
 11488 ;;		Nothing
 11489 ;; This function is called by:
 11490 ;;		_main
 11491 ;; This function uses a non-reentrant model
 11492 ;;
 11493                           
 11494                           	psect	text27
 11495  000F70                     __ptext27:
 11496                           	opt stack 0
 11497  000F70                     _ConfigureOscillator:
 11498                           	opt stack 23
 11499                           
 11500                           ;system.c: 56: while(!(OSCCON & 0b00001000));
 11501                           
 11502                           ;incstack = 0
 11503  000F70  D000               	goto	l247
 11504  000F72                     l247:
 11505  000F72  A6D3               	btfss	4051,3,c	;volatile
 11506  000F74  D7FE               	goto	l247
 11507  000F76  0012               	return		;funcret
 11508  000F78                     __end_of_ConfigureOscillator:
 11509                           	opt stack 0
 11510                           tblptru	equ	0xFF8
 11511                           tblptrh	equ	0xFF7
 11512                           tblptrl	equ	0xFF6
 11513                           tablat	equ	0xFF5
 11514                           prodh	equ	0xFF4
 11515                           prodl	equ	0xFF3
 11516                           intcon	equ	0xFF2
 11517                           intcon2	equ	0xFF1
 11518                           postinc0	equ	0xFEE
 11519                           plusw0	equ	0xFEB
 11520                           wreg	equ	0xFE8
 11521                           postdec1	equ	0xFE5
 11522                           fsr1l	equ	0xFE1
 11523                           postinc2	equ	0xFDE
 11524                           postdec2	equ	0xFDD
 11525                           plusw2	equ	0xFDB
 11526                           fsr2h	equ	0xFDA
 11527                           fsr2l	equ	0xFD9
 11528                           status	equ	0xFD8
 11529                           
 11530 ;; *************** function _Command *****************
 11531 ;; Defined at:
 11532 ;;		line 67 in file "StringCommand.c"
 11533 ;; Parameters:    Size  Location     Type
 11534 ;;  Input           2  136[BANK1 ] PTR unsigned char 
 11535 ;;		 -> Rxdata(100), 
 11536 ;; Auto vars:     Size  Location     Type
 11537 ;;  buf           200    0[BANK2 ] unsigned char [200]
 11538 ;;  tempLONG        4  222[BANK2 ] long 
 11539 ;;  PARITYtemp      4  212[BANK2 ] unsigned long 
 11540 ;;  BAUDtemp        4  206[BANK2 ] unsigned long 
 11541 ;;  duty            2  220[BANK2 ] int 
 11542 ;;  channel         2  218[BANK2 ] int 
 11543 ;;  contrast        2  216[BANK2 ] int 
 11544 ;;  RTC_Battery_    2  210[BANK2 ] unsigned int 
 11545 ;;  RTC_Battery_    2  204[BANK2 ] unsigned int 
 11546 ;;  RTC_Battery_    2  202[BANK2 ] unsigned int 
 11547 ;;  ADC_Value       2  200[BANK2 ] unsigned int 
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      unsigned char 
 11550 ;; Registers used:
 11551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11557 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;      Locals:         0       0       0     226       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11560 ;;      Totals:         0       0       2     226       0       0       0       0       0       0       0       0       
      +0       0
 11561 ;;Total ram usage:      228 bytes
 11562 ;; Hardware stack levels used:    1
 11563 ;; Hardware stack levels required when called:   12
 11564 ;; This function calls:
 11565 ;;		_GetBaud
 11566 ;;		_GetEnteredNumber
 11567 ;;		_ISNUMBER
 11568 ;;		_InternalADC_Read
 11569 ;;		_LCDPrintString
 11570 ;;		_LCD_Scroll
 11571 ;;		_LCDdisplayFeedback
 11572 ;;		_Parse_Time
 11573 ;;		_READ_RTC_TIME
 11574 ;;		_RemoveSpaces
 11575 ;;		_SET_RTC_TIME
 11576 ;;		_Send_Config1
 11577 ;;		_Send_Config2
 11578 ;;		_SetBaud
 11579 ;;		_SetContrast
 11580 ;;		_SetDuty
 11581 ;;		_SetLCDcursor
 11582 ;;		_SprintDate
 11583 ;;		_StartsWith
 11584 ;;		_StringAddEqual
 11585 ;;		_StringContains
 11586 ;;		_StringMatch
 11587 ;;		_UARTstring
 11588 ;;		___ftdiv
 11589 ;;		___ftmul
 11590 ;;		___fttol
 11591 ;;		___lwmod
 11592 ;;		___lwtoft
 11593 ;;		_cleanBuffer
 11594 ;;		_delayUS
 11595 ;;		_lowercase
 11596 ;;		_sprintf
 11597 ;; This function is called by:
 11598 ;;		_main
 11599 ;; This function uses a non-reentrant model
 11600 ;;
 11601                           
 11602                           	psect	text28
 11603  010000                     __ptext28:
 11604                           	opt stack 0
 11605  010000                     _Command:
 11606                           	opt stack 18
 11607                           
 11608                           ;StringCommand.c: 69: int channel = 20;
 11609                           
 11610                           ;incstack = 0
 11611  010000  0E00               	movlw	0
 11612  010002  0102               	movlb	2	; () banked
 11613  010004  6FDB               	movwf	(Command@channel+1)& (0+255),b
 11614  010006  0E14               	movlw	20
 11615  010008  6FDA               	movwf	Command@channel& (0+255),b
 11616                           
 11617                           ;StringCommand.c: 70: unsigned int ADC_Value = 0;
 11618  01000A  0E00               	movlw	0
 11619  01000C  0102               	movlb	2	; () banked
 11620  01000E  6FC9               	movwf	(Command@ADC_Value+1)& (0+255),b
 11621  010010  0E00               	movlw	0
 11622  010012  6FC8               	movwf	Command@ADC_Value& (0+255),b
 11623                           
 11624                           ;StringCommand.c: 71: unsigned int RTC_Battery_Value =0;
 11625  010014  0E00               	movlw	0
 11626  010016  0102               	movlb	2	; () banked
 11627  010018  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
 11628  01001A  0E00               	movlw	0
 11629  01001C  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
 11630                           
 11631                           ;StringCommand.c: 72: unsigned int RTC_Battery_Value_HIGH_decimal =0;
 11632  01001E  0E00               	movlw	0
 11633  010020  0102               	movlb	2	; () banked
 11634  010022  6FCD               	movwf	(Command@RTC_Battery_Value_HIGH_decimal+1)& (0+255),b
 11635  010024  0E00               	movlw	0
 11636  010026  6FCC               	movwf	Command@RTC_Battery_Value_HIGH_decimal& (0+255),b
 11637                           
 11638                           ;StringCommand.c: 73: unsigned int RTC_Battery_Value_LOW_decimal =0;
 11639  010028  0E00               	movlw	0
 11640  01002A  0102               	movlb	2	; () banked
 11641  01002C  6FD3               	movwf	(Command@RTC_Battery_Value_LOW_decimal+1)& (0+255),b
 11642  01002E  0E00               	movlw	0
 11643  010030  6FD2               	movwf	Command@RTC_Battery_Value_LOW_decimal& (0+255),b
 11644                           
 11645                           ;StringCommand.c: 74: int duty = 0;
 11646  010032  0E00               	movlw	0
 11647  010034  0102               	movlb	2	; () banked
 11648  010036  6FDD               	movwf	(Command@duty+1)& (0+255),b
 11649  010038  0E00               	movlw	0
 11650  01003A  6FDC               	movwf	Command@duty& (0+255),b
 11651                           
 11652                           ;StringCommand.c: 75: long tempLONG;
 11653                           ;StringCommand.c: 76: int contrast = 0;
 11654  01003C  0E00               	movlw	0
 11655  01003E  0102               	movlb	2	; () banked
 11656  010040  6FD9               	movwf	(Command@contrast+1)& (0+255),b
 11657  010042  0E00               	movlw	0
 11658  010044  6FD8               	movwf	Command@contrast& (0+255),b
 11659                           
 11660                           ;StringCommand.c: 77: unsigned char buf[200];
 11661                           ;StringCommand.c: 78: unsigned long BAUDtemp = 0;
 11662  010046  0E00               	movlw	0
 11663  010048  0102               	movlb	2	; () banked
 11664  01004A  6FCE               	movwf	Command@BAUDtemp& (0+255),b
 11665  01004C  0E00               	movlw	0
 11666  01004E  6FCF               	movwf	(Command@BAUDtemp+1)& (0+255),b
 11667  010050  0E00               	movlw	0
 11668  010052  6FD0               	movwf	(Command@BAUDtemp+2)& (0+255),b
 11669  010054  0E00               	movlw	0
 11670  010056  6FD1               	movwf	(Command@BAUDtemp+3)& (0+255),b
 11671                           
 11672                           ;StringCommand.c: 79: unsigned long PARITYtemp = 0;
 11673  010058  0E00               	movlw	0
 11674  01005A  0102               	movlb	2	; () banked
 11675  01005C  6FD4               	movwf	Command@PARITYtemp& (0+255),b
 11676  01005E  0E00               	movlw	0
 11677  010060  6FD5               	movwf	(Command@PARITYtemp+1)& (0+255),b
 11678  010062  0E00               	movlw	0
 11679  010064  6FD6               	movwf	(Command@PARITYtemp+2)& (0+255),b
 11680  010066  0E00               	movlw	0
 11681  010068  6FD7               	movwf	(Command@PARITYtemp+3)& (0+255),b
 11682                           
 11683                           ; BSR set to: 2
 11684                           ;StringCommand.c: 81: UARTstring("\r\n\n");
 11685  01006A  0EE7               	movlw	low (STR_245+65)
 11686  01006C  0101               	movlb	1	; () banked
 11687  01006E  6F19               	movwf	UARTstring@data& (0+255),b
 11688  010070  0EEE               	movlw	high (STR_245+65)
 11689  010072  0101               	movlb	1	; () banked
 11690  010074  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11691  010076  EC03  F0B8         	call	_UARTstring	;wreg free
 11692                           
 11693                           ;StringCommand.c: 82: lowercase(Input);
 11694  01007A  C188  F10E         	movff	Command@Input,lowercase@Input
 11695  01007E  C189  F10F         	movff	Command@Input+1,lowercase@Input+1
 11696  010082  EC86  F0B9         	call	_lowercase	;wreg free
 11697                           
 11698                           ;StringCommand.c: 83: RemoveSpaces(Input);
 11699  010086  C188  F11D         	movff	Command@Input,RemoveSpaces@This
 11700  01008A  C189  F11E         	movff	Command@Input+1,RemoveSpaces@This+1
 11701  01008E  ECA4  F0B8         	call	_RemoveSpaces	;wreg free
 11702                           
 11703                           ;StringCommand.c: 85: if(StringMatch(Input, ">"))
 11704  010092  C188  F10E         	movff	Command@Input,StringMatch@This
 11705  010096  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 11706  01009A  0ED1               	movlw	low (STR_21+27)
 11707  01009C  0101               	movlb	1	; () banked
 11708  01009E  6F10               	movwf	StringMatch@That& (0+255),b
 11709  0100A0  0EF4               	movlw	high (STR_21+27)
 11710  0100A2  0101               	movlb	1	; () banked
 11711  0100A4  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 11712  0100A6  EC94  F0BA         	call	_StringMatch	;wreg free
 11713  0100AA  0900               	iorlw	0
 11714  0100AC  B4D8               	btfsc	status,2,c
 11715  0100AE  D004               	goto	l14617
 11716                           
 11717                           ;StringCommand.c: 86: {
 11718                           ;StringCommand.c: 87: return 0;
 11719  0100B0  0E00               	movlw	0
 11720  0100B2  0012               	return	
 11721                           
 11722                           ;StringCommand.c: 88: }
 11723  0100B4  EF7B  F093         	goto	l683
 11724  0100B8                     l14617:
 11725                           
 11726                           ;StringCommand.c: 89: else if (StartsWith(Input, "led"))
 11727  0100B8  C188  F10E         	movff	Command@Input,StartsWith@This
 11728  0100BC  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 11729  0100C0  0E71               	movlw	low (STR_160+3)
 11730  0100C2  0101               	movlb	1	; () banked
 11731  0100C4  6F10               	movwf	StartsWith@That& (0+255),b
 11732  0100C6  0EFF               	movlw	high (STR_160+3)
 11733  0100C8  0101               	movlb	1	; () banked
 11734  0100CA  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 11735  0100CC  EC3C  F0B9         	call	_StartsWith	;wreg free
 11736  0100D0  0900               	iorlw	0
 11737  0100D2  B4D8               	btfsc	status,2,c
 11738  0100D4  D141               	goto	l14681
 11739                           
 11740                           ;StringCommand.c: 90: {
 11741                           ;StringCommand.c: 91: if (!StringContains(Input, "?"))
 11742  0100D6  C188  F10E         	movff	Command@Input,StringContains@This
 11743  0100DA  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 11744  0100DE  0E17               	movlw	low (STR_83+14)
 11745  0100E0  0101               	movlb	1	; () banked
 11746  0100E2  6F10               	movwf	StringContains@That& (0+255),b
 11747  0100E4  0EFA               	movlw	high (STR_83+14)
 11748  0100E6  0101               	movlb	1	; () banked
 11749  0100E8  6F11               	movwf	(StringContains@That+1)& (0+255),b
 11750  0100EA  EC54  F0BA         	call	_StringContains	;wreg free
 11751  0100EE  0900               	iorlw	0
 11752  0100F0  A4D8               	btfss	status,2,c
 11753  0100F2  D0E0               	goto	l14671
 11754                           
 11755                           ;StringCommand.c: 92: {
 11756                           ;StringCommand.c: 93: if (StringMatch(Input, "led0"))
 11757  0100F4  C188  F10E         	movff	Command@Input,StringMatch@This
 11758  0100F8  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 11759  0100FC  0EBD               	movlw	low STR_40
 11760  0100FE  0101               	movlb	1	; () banked
 11761  010100  6F10               	movwf	StringMatch@That& (0+255),b
 11762  010102  0EFF               	movlw	high STR_40
 11763  010104  0101               	movlb	1	; () banked
 11764  010106  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 11765  010108  EC94  F0BA         	call	_StringMatch	;wreg free
 11766  01010C  0900               	iorlw	0
 11767  01010E  B4D8               	btfsc	status,2,c
 11768  010110  D014               	goto	l14629
 11769                           
 11770                           ;StringCommand.c: 94: {
 11771                           ;StringCommand.c: 95: LATD ^= 0b00000010;
 11772  010112  0E02               	movlw	2
 11773  010114  1A8C               	xorwf	3980,f,c	;volatile
 11774                           
 11775                           ;StringCommand.c: 96: UARTstring("LED0 Toggled");
 11776  010116  0E21               	movlw	low STR_41
 11777  010118  0101               	movlb	1	; () banked
 11778  01011A  6F19               	movwf	UARTstring@data& (0+255),b
 11779  01011C  0EFD               	movlw	high STR_41
 11780  01011E  0101               	movlb	1	; () banked
 11781  010120  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11782  010122  EC03  F0B8         	call	_UARTstring	;wreg free
 11783                           
 11784                           ;StringCommand.c: 97: LCDdisplayFeedback("LED0 Toggled");
 11785  010126  0E21               	movlw	low STR_41
 11786  010128  0101               	movlb	1	; () banked
 11787  01012A  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11788  01012C  0EFD               	movlw	high STR_41
 11789  01012E  0101               	movlb	1	; () banked
 11790  010130  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11791  010132  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 11792                           
 11793                           ;StringCommand.c: 98: }
 11794  010136  EF7B  F093         	goto	l683
 11795  01013A                     l14629:
 11796                           
 11797                           ;StringCommand.c: 99: else if (StringMatch(Input, "led0=on"))
 11798  01013A  C188  F10E         	movff	Command@Input,StringMatch@This
 11799  01013E  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 11800  010142  0E2A               	movlw	low STR_43
 11801  010144  0101               	movlb	1	; () banked
 11802  010146  6F10               	movwf	StringMatch@That& (0+255),b
 11803  010148  0EFF               	movlw	high STR_43
 11804  01014A  0101               	movlb	1	; () banked
 11805  01014C  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 11806  01014E  EC94  F0BA         	call	_StringMatch	;wreg free
 11807  010152  0900               	iorlw	0
 11808  010154  B4D8               	btfsc	status,2,c
 11809  010156  D013               	goto	l14637
 11810                           
 11811                           ;StringCommand.c: 100: {
 11812                           ;StringCommand.c: 101: LATD |= 0b00000010;
 11813  010158  828C               	bsf	3980,1,c	;volatile
 11814                           
 11815                           ;StringCommand.c: 102: UARTstring("LED0 On");
 11816  01015A  0E1A               	movlw	low STR_44
 11817  01015C  0101               	movlb	1	; () banked
 11818  01015E  6F19               	movwf	UARTstring@data& (0+255),b
 11819  010160  0EFF               	movlw	high STR_44
 11820  010162  0101               	movlb	1	; () banked
 11821  010164  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11822  010166  EC03  F0B8         	call	_UARTstring	;wreg free
 11823                           
 11824                           ;StringCommand.c: 103: LCDdisplayFeedback("LED0 On");
 11825  01016A  0E1A               	movlw	low STR_44
 11826  01016C  0101               	movlb	1	; () banked
 11827  01016E  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11828  010170  0EFF               	movlw	high STR_44
 11829  010172  0101               	movlb	1	; () banked
 11830  010174  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11831  010176  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 11832                           
 11833                           ;StringCommand.c: 104: }
 11834  01017A  EF7B  F093         	goto	l683
 11835  01017E                     l14637:
 11836                           
 11837                           ;StringCommand.c: 105: else if (StringMatch(Input, "led0=off"))
 11838  01017E  C188  F10E         	movff	Command@Input,StringMatch@This
 11839  010182  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 11840  010186  0EB3               	movlw	low STR_46
 11841  010188  0101               	movlb	1	; () banked
 11842  01018A  6F10               	movwf	StringMatch@That& (0+255),b
 11843  01018C  0EFE               	movlw	high STR_46
 11844  01018E  0101               	movlb	1	; () banked
 11845  010190  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 11846  010192  EC94  F0BA         	call	_StringMatch	;wreg free
 11847  010196  0900               	iorlw	0
 11848  010198  B4D8               	btfsc	status,2,c
 11849  01019A  D013               	goto	l14645
 11850                           
 11851                           ;StringCommand.c: 106: {
 11852                           ;StringCommand.c: 107: LATD &= ~0b00000010;
 11853  01019C  928C               	bcf	3980,1,c	;volatile
 11854                           
 11855                           ;StringCommand.c: 108: UARTstring("LED0 Off");
 11856  01019E  0EA1               	movlw	low STR_47
 11857  0101A0  0101               	movlb	1	; () banked
 11858  0101A2  6F19               	movwf	UARTstring@data& (0+255),b
 11859  0101A4  0EFE               	movlw	high STR_47
 11860  0101A6  0101               	movlb	1	; () banked
 11861  0101A8  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11862  0101AA  EC03  F0B8         	call	_UARTstring	;wreg free
 11863                           
 11864                           ;StringCommand.c: 109: LCDdisplayFeedback("LED0 Off");
 11865  0101AE  0EA1               	movlw	low STR_47
 11866  0101B0  0101               	movlb	1	; () banked
 11867  0101B2  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11868  0101B4  0EFE               	movlw	high STR_47
 11869  0101B6  0101               	movlb	1	; () banked
 11870  0101B8  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11871  0101BA  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 11872                           
 11873                           ;StringCommand.c: 110: }
 11874  0101BE  EF7B  F093         	goto	l683
 11875  0101C2                     l14645:
 11876                           
 11877                           ;StringCommand.c: 111: else if (StringMatch(Input, "led1"))
 11878  0101C2  C188  F10E         	movff	Command@Input,StringMatch@This
 11879  0101C6  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 11880  0101CA  0EC7               	movlw	low STR_49
 11881  0101CC  0101               	movlb	1	; () banked
 11882  0101CE  6F10               	movwf	StringMatch@That& (0+255),b
 11883  0101D0  0EFF               	movlw	high STR_49
 11884  0101D2  0101               	movlb	1	; () banked
 11885  0101D4  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 11886  0101D6  EC94  F0BA         	call	_StringMatch	;wreg free
 11887  0101DA  0900               	iorlw	0
 11888  0101DC  B4D8               	btfsc	status,2,c
 11889  0101DE  D014               	goto	l14653
 11890                           
 11891                           ;StringCommand.c: 112: {
 11892                           ;StringCommand.c: 113: LATD ^= 0b00000100;
 11893  0101E0  0E04               	movlw	4
 11894  0101E2  1A8C               	xorwf	3980,f,c	;volatile
 11895                           
 11896                           ;StringCommand.c: 114: UARTstring("LED1 Toggled");
 11897  0101E4  0E2E               	movlw	low STR_50
 11898  0101E6  0101               	movlb	1	; () banked
 11899  0101E8  6F19               	movwf	UARTstring@data& (0+255),b
 11900  0101EA  0EFD               	movlw	high STR_50
 11901  0101EC  0101               	movlb	1	; () banked
 11902  0101EE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11903  0101F0  EC03  F0B8         	call	_UARTstring	;wreg free
 11904                           
 11905                           ;StringCommand.c: 115: LCDdisplayFeedback("LED1 Toggled");
 11906  0101F4  0E2E               	movlw	low STR_50
 11907  0101F6  0101               	movlb	1	; () banked
 11908  0101F8  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11909  0101FA  0EFD               	movlw	high STR_50
 11910  0101FC  0101               	movlb	1	; () banked
 11911  0101FE  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11912  010200  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 11913                           
 11914                           ;StringCommand.c: 116: }
 11915  010204  EF7B  F093         	goto	l683
 11916  010208                     l14653:
 11917                           
 11918                           ;StringCommand.c: 117: else if (StringMatch(Input, "led1=on"))
 11919  010208  C188  F10E         	movff	Command@Input,StringMatch@This
 11920  01020C  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 11921  010210  0E32               	movlw	low STR_52
 11922  010212  0101               	movlb	1	; () banked
 11923  010214  6F10               	movwf	StringMatch@That& (0+255),b
 11924  010216  0EFF               	movlw	high STR_52
 11925  010218  0101               	movlb	1	; () banked
 11926  01021A  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 11927  01021C  EC94  F0BA         	call	_StringMatch	;wreg free
 11928  010220  0900               	iorlw	0
 11929  010222  B4D8               	btfsc	status,2,c
 11930  010224  D013               	goto	l14661
 11931                           
 11932                           ;StringCommand.c: 118: {
 11933                           ;StringCommand.c: 119: LATD |= 0b00000100;
 11934  010226  848C               	bsf	3980,2,c	;volatile
 11935                           
 11936                           ;StringCommand.c: 120: UARTstring("LED1 On");
 11937  010228  0E22               	movlw	low STR_53
 11938  01022A  0101               	movlb	1	; () banked
 11939  01022C  6F19               	movwf	UARTstring@data& (0+255),b
 11940  01022E  0EFF               	movlw	high STR_53
 11941  010230  0101               	movlb	1	; () banked
 11942  010232  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11943  010234  EC03  F0B8         	call	_UARTstring	;wreg free
 11944                           
 11945                           ;StringCommand.c: 121: LCDdisplayFeedback("LED1 On");
 11946  010238  0E22               	movlw	low STR_53
 11947  01023A  0101               	movlb	1	; () banked
 11948  01023C  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11949  01023E  0EFF               	movlw	high STR_53
 11950  010240  0101               	movlb	1	; () banked
 11951  010242  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11952  010244  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 11953                           
 11954                           ;StringCommand.c: 122: }
 11955  010248  EF7B  F093         	goto	l683
 11956  01024C                     l14661:
 11957                           
 11958                           ;StringCommand.c: 123: else if (StringMatch(Input, "led1=off"))
 11959  01024C  C188  F10E         	movff	Command@Input,StringMatch@This
 11960  010250  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 11961  010254  0EBC               	movlw	low STR_55
 11962  010256  0101               	movlb	1	; () banked
 11963  010258  6F10               	movwf	StringMatch@That& (0+255),b
 11964  01025A  0EFE               	movlw	high STR_55
 11965  01025C  0101               	movlb	1	; () banked
 11966  01025E  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 11967  010260  EC94  F0BA         	call	_StringMatch	;wreg free
 11968  010264  0900               	iorlw	0
 11969  010266  B4D8               	btfsc	status,2,c
 11970  010268  D013               	goto	l14669
 11971                           
 11972                           ;StringCommand.c: 124: {
 11973                           ;StringCommand.c: 125: LATD &= ~0b00000100;
 11974  01026A  948C               	bcf	3980,2,c	;volatile
 11975                           
 11976                           ;StringCommand.c: 126: UARTstring("LED1 Off");
 11977  01026C  0EAA               	movlw	low STR_56
 11978  01026E  0101               	movlb	1	; () banked
 11979  010270  6F19               	movwf	UARTstring@data& (0+255),b
 11980  010272  0EFE               	movlw	high STR_56
 11981  010274  0101               	movlb	1	; () banked
 11982  010276  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 11983  010278  EC03  F0B8         	call	_UARTstring	;wreg free
 11984                           
 11985                           ;StringCommand.c: 127: LCDdisplayFeedback("LED1 Off");
 11986  01027C  0EAA               	movlw	low STR_56
 11987  01027E  0101               	movlb	1	; () banked
 11988  010280  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11989  010282  0EFE               	movlw	high STR_56
 11990  010284  0101               	movlb	1	; () banked
 11991  010286  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11992  010288  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 11993                           
 11994                           ;StringCommand.c: 128: }
 11995  01028C  EF7B  F093         	goto	l683
 11996  010290                     l14669:
 11997                           
 11998                           ;StringCommand.c: 129: else
 11999                           ;StringCommand.c: 130: {
 12000                           ;StringCommand.c: 131: UARTstring("LED What???");
 12001  010290  0E3D               	movlw	low (STR_173+4)
 12002  010292  0101               	movlb	1	; () banked
 12003  010294  6F19               	movwf	UARTstring@data& (0+255),b
 12004  010296  0EFA               	movlw	high (STR_173+4)
 12005  010298  0101               	movlb	1	; () banked
 12006  01029A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12007  01029C  EC03  F0B8         	call	_UARTstring	;wreg free
 12008                           
 12009                           ;StringCommand.c: 132: LCDdisplayFeedback("LED What???");
 12010  0102A0  0E3D               	movlw	low (STR_173+4)
 12011  0102A2  0101               	movlb	1	; () banked
 12012  0102A4  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12013  0102A6  0EFA               	movlw	high (STR_173+4)
 12014  0102A8  0101               	movlb	1	; () banked
 12015  0102AA  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12016  0102AC  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 12017                           
 12018                           ;StringCommand.c: 133: }
 12019                           ;StringCommand.c: 134: }
 12020  0102B0  EF7B  F093         	goto	l683
 12021  0102B4                     l14671:
 12022                           
 12023                           ;StringCommand.c: 135: else
 12024                           ;StringCommand.c: 136: {
 12025                           ;StringCommand.c: 137: UARTstring("LED Help Menu\r\n\n");
 12026  0102B4  0EFB               	movlw	low STR_60
 12027  0102B6  0101               	movlb	1	; () banked
 12028  0102B8  6F19               	movwf	UARTstring@data& (0+255),b
 12029  0102BA  0EF8               	movlw	high STR_60
 12030  0102BC  0101               	movlb	1	; () banked
 12031  0102BE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12032  0102C0  EC03  F0B8         	call	_UARTstring	;wreg free
 12033                           
 12034                           ;StringCommand.c: 138: UARTstring("Devices:\r\n");
 12035  0102C4  0EB7               	movlw	low STR_61
 12036  0102C6  0101               	movlb	1	; () banked
 12037  0102C8  6F19               	movwf	UARTstring@data& (0+255),b
 12038  0102CA  0EFD               	movlw	high STR_61
 12039  0102CC  0101               	movlb	1	; () banked
 12040  0102CE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12041  0102D0  EC03  F0B8         	call	_UARTstring	;wreg free
 12042                           
 12043                           ;StringCommand.c: 139: UARTstring("LED0\r\n");
 12044  0102D4  0E60               	movlw	low STR_62
 12045  0102D6  0101               	movlb	1	; () banked
 12046  0102D8  6F19               	movwf	UARTstring@data& (0+255),b
 12047  0102DA  0EFF               	movlw	high STR_62
 12048  0102DC  0101               	movlb	1	; () banked
 12049  0102DE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12050  0102E0  EC03  F0B8         	call	_UARTstring	;wreg free
 12051                           
 12052                           ;StringCommand.c: 140: UARTstring("LED1\r\n\n");
 12053  0102E4  0EF2               	movlw	low STR_63
 12054  0102E6  0101               	movlb	1	; () banked
 12055  0102E8  6F19               	movwf	UARTstring@data& (0+255),b
 12056  0102EA  0EFE               	movlw	high STR_63
 12057  0102EC  0101               	movlb	1	; () banked
 12058  0102EE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12059  0102F0  EC03  F0B8         	call	_UARTstring	;wreg free
 12060                           
 12061                           ;StringCommand.c: 141: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 12062  0102F4  0EEB               	movlw	low STR_64
 12063  0102F6  0101               	movlb	1	; () banked
 12064  0102F8  6F19               	movwf	UARTstring@data& (0+255),b
 12065  0102FA  0EEE               	movlw	high STR_64
 12066  0102FC  0101               	movlb	1	; () banked
 12067  0102FE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12068  010300  EC03  F0B8         	call	_UARTstring	;wreg free
 12069                           
 12070                           ;StringCommand.c: 142: UARTstring("i.e. LED1 = On\r\n");
 12071  010304  0E2E               	movlw	low STR_65
 12072  010306  0101               	movlb	1	; () banked
 12073  010308  6F19               	movwf	UARTstring@data& (0+255),b
 12074  01030A  0EF9               	movlw	high STR_65
 12075  01030C  0101               	movlb	1	; () banked
 12076  01030E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12077  010310  EC03  F0B8         	call	_UARTstring	;wreg free
 12078                           
 12079                           ;StringCommand.c: 143: LCD_Scroll("LED Menu");
 12080  010314  0EE0               	movlw	low STR_66
 12081  010316  0101               	movlb	1	; () banked
 12082  010318  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12083  01031A  0EFE               	movlw	high STR_66
 12084  01031C  0101               	movlb	1	; () banked
 12085  01031E  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12086  010320  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 12087                           
 12088                           ;StringCommand.c: 144: LCD_Scroll("Devices:");
 12089  010324  0E8F               	movlw	low STR_67
 12090  010326  0101               	movlb	1	; () banked
 12091  010328  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12092  01032A  0EFE               	movlw	high STR_67
 12093  01032C  0101               	movlb	1	; () banked
 12094  01032E  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12095  010330  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 12096                           
 12097                           ;StringCommand.c: 145: LCD_Scroll("LED0");
 12098  010334  0EB8               	movlw	low STR_68
 12099  010336  0101               	movlb	1	; () banked
 12100  010338  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12101  01033A  0EFF               	movlw	high STR_68
 12102  01033C  0101               	movlb	1	; () banked
 12103  01033E  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12104  010340  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 12105                           
 12106                           ;StringCommand.c: 146: LCD_Scroll("LED1");
 12107  010344  0EC2               	movlw	low STR_69
 12108  010346  0101               	movlb	1	; () banked
 12109  010348  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12110  01034A  0EFF               	movlw	high STR_69
 12111  01034C  0101               	movlb	1	; () banked
 12112  01034E  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12113  010350  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 12114                           
 12115                           ;StringCommand.c: 147: }
 12116                           ;StringCommand.c: 148: }
 12117  010354  EF7B  F093         	goto	l683
 12118  010358                     l14681:
 12119                           
 12120                           ;StringCommand.c: 150: else if (StartsWith(Input, "livingroom"))
 12121  010358  C188  F10E         	movff	Command@Input,StartsWith@This
 12122  01035C  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 12123  010360  0EEE               	movlw	low STR_70
 12124  010362  0101               	movlb	1	; () banked
 12125  010364  6F10               	movwf	StartsWith@That& (0+255),b
 12126  010366  0EFD               	movlw	high STR_70
 12127  010368  0101               	movlb	1	; () banked
 12128  01036A  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 12129  01036C  EC3C  F0B9         	call	_StartsWith	;wreg free
 12130  010370  0900               	iorlw	0
 12131  010372  B4D8               	btfsc	status,2,c
 12132  010374  D1CB               	goto	l14733
 12133                           
 12134                           ;StringCommand.c: 151: {
 12135                           ;StringCommand.c: 152: if (!StringContains(Input, "?"))
 12136  010376  C188  F10E         	movff	Command@Input,StringContains@This
 12137  01037A  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12138  01037E  0E17               	movlw	low (STR_83+14)
 12139  010380  0101               	movlb	1	; () banked
 12140  010382  6F10               	movwf	StringContains@That& (0+255),b
 12141  010384  0EFA               	movlw	high (STR_83+14)
 12142  010386  0101               	movlb	1	; () banked
 12143  010388  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12144  01038A  EC54  F0BA         	call	_StringContains	;wreg free
 12145  01038E  0900               	iorlw	0
 12146  010390  A4D8               	btfss	status,2,c
 12147  010392  D162               	goto	l14723
 12148                           
 12149                           ;StringCommand.c: 153: {
 12150                           ;StringCommand.c: 154: if (StringMatch(Input, "livingroomlight=on") || StringMatch(Input
      +                          , "livingroomlight=off"))
 12151  010394  C188  F10E         	movff	Command@Input,StringMatch@This
 12152  010398  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 12153  01039C  0EED               	movlw	low STR_72
 12154  01039E  0101               	movlb	1	; () banked
 12155  0103A0  6F10               	movwf	StringMatch@That& (0+255),b
 12156  0103A2  0EF7               	movlw	high STR_72
 12157  0103A4  0101               	movlb	1	; () banked
 12158  0103A6  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 12159  0103A8  EC94  F0BA         	call	_StringMatch	;wreg free
 12160  0103AC  0900               	iorlw	0
 12161  0103AE  A4D8               	btfss	status,2,c
 12162  0103B0  D00F               	goto	l704
 12163  0103B2  C188  F10E         	movff	Command@Input,StringMatch@This
 12164  0103B6  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 12165  0103BA  0E79               	movlw	low STR_73
 12166  0103BC  0101               	movlb	1	; () banked
 12167  0103BE  6F10               	movwf	StringMatch@That& (0+255),b
 12168  0103C0  0EF7               	movlw	high STR_73
 12169  0103C2  0101               	movlb	1	; () banked
 12170  0103C4  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 12171  0103C6  EC94  F0BA         	call	_StringMatch	;wreg free
 12172  0103CA  0900               	iorlw	0
 12173  0103CC  B4D8               	btfsc	status,2,c
 12174  0103CE  D053               	goto	l14697
 12175  0103D0                     l704:
 12176                           
 12177                           ;StringCommand.c: 155: {
 12178                           ;StringCommand.c: 156: INTCONbits.GIE = 0;
 12179  0103D0  9EF2               	bcf	intcon,7,c	;volatile
 12180                           
 12181                           ;StringCommand.c: 157: Send_Config1(0b00000001, TXdataD);
 12182  0103D2  0E39               	movlw	low _TXdataD
 12183  0103D4  0101               	movlb	1	; () banked
 12184  0103D6  6F19               	movwf	Send_Config1@data& (0+255),b
 12185  0103D8  0EEE               	movlw	high _TXdataD
 12186  0103DA  0101               	movlb	1	; () banked
 12187  0103DC  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12188  0103DE  0E01               	movlw	1
 12189  0103E0  EC2D  F0B2         	call	_Send_Config1
 12190                           
 12191                           ;StringCommand.c: 158: Send_Config1(0b00000001, TXdataD);
 12192  0103E4  0E39               	movlw	low _TXdataD
 12193  0103E6  0101               	movlb	1	; () banked
 12194  0103E8  6F19               	movwf	Send_Config1@data& (0+255),b
 12195  0103EA  0EEE               	movlw	high _TXdataD
 12196  0103EC  0101               	movlb	1	; () banked
 12197  0103EE  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12198  0103F0  0E01               	movlw	1
 12199  0103F2  EC2D  F0B2         	call	_Send_Config1
 12200                           
 12201                           ;StringCommand.c: 159: Send_Config1(0b00000001, TXdataD);
 12202  0103F6  0E39               	movlw	low _TXdataD
 12203  0103F8  0101               	movlb	1	; () banked
 12204  0103FA  6F19               	movwf	Send_Config1@data& (0+255),b
 12205  0103FC  0EEE               	movlw	high _TXdataD
 12206  0103FE  0101               	movlb	1	; () banked
 12207  010400  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12208  010402  0E01               	movlw	1
 12209  010404  EC2D  F0B2         	call	_Send_Config1
 12210                           
 12211                           ;StringCommand.c: 160: Send_Config1(0b00000001, TXdataD);
 12212  010408  0E39               	movlw	low _TXdataD
 12213  01040A  0101               	movlb	1	; () banked
 12214  01040C  6F19               	movwf	Send_Config1@data& (0+255),b
 12215  01040E  0EEE               	movlw	high _TXdataD
 12216  010410  0101               	movlb	1	; () banked
 12217  010412  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12218  010414  0E01               	movlw	1
 12219  010416  EC2D  F0B2         	call	_Send_Config1
 12220                           
 12221                           ;StringCommand.c: 161: Send_Config1(0b00000001, TXdataD);
 12222  01041A  0E39               	movlw	low _TXdataD
 12223  01041C  0101               	movlb	1	; () banked
 12224  01041E  6F19               	movwf	Send_Config1@data& (0+255),b
 12225  010420  0EEE               	movlw	high _TXdataD
 12226  010422  0101               	movlb	1	; () banked
 12227  010424  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12228  010426  0E01               	movlw	1
 12229  010428  EC2D  F0B2         	call	_Send_Config1
 12230                           
 12231                           ;StringCommand.c: 162: Send_Config1(0b00000001, TXdataD);
 12232  01042C  0E39               	movlw	low _TXdataD
 12233  01042E  0101               	movlb	1	; () banked
 12234  010430  6F19               	movwf	Send_Config1@data& (0+255),b
 12235  010432  0EEE               	movlw	high _TXdataD
 12236  010434  0101               	movlb	1	; () banked
 12237  010436  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12238  010438  0E01               	movlw	1
 12239  01043A  EC2D  F0B2         	call	_Send_Config1
 12240                           
 12241                           ;StringCommand.c: 163: Send_Config1(0b00000001, TXdataD);
 12242  01043E  0E39               	movlw	low _TXdataD
 12243  010440  0101               	movlb	1	; () banked
 12244  010442  6F19               	movwf	Send_Config1@data& (0+255),b
 12245  010444  0EEE               	movlw	high _TXdataD
 12246  010446  0101               	movlb	1	; () banked
 12247  010448  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12248  01044A  0E01               	movlw	1
 12249  01044C  EC2D  F0B2         	call	_Send_Config1
 12250                           
 12251                           ;StringCommand.c: 164: INTCONbits.GIE = 1;
 12252  010450  8EF2               	bsf	intcon,7,c	;volatile
 12253                           
 12254                           ;StringCommand.c: 165: UARTstring("Livingroom Light Toggled");
 12255  010452  0E15               	movlw	low STR_74
 12256  010454  0101               	movlb	1	; () banked
 12257  010456  6F19               	movwf	UARTstring@data& (0+255),b
 12258  010458  0EF6               	movlw	high STR_74
 12259  01045A  0101               	movlb	1	; () banked
 12260  01045C  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12261  01045E  EC03  F0B8         	call	_UARTstring	;wreg free
 12262                           
 12263                           ;StringCommand.c: 166: LCDdisplayFeedback("LVNG Rm Lt TGLD");
 12264  010462  0E79               	movlw	low STR_75
 12265  010464  0101               	movlb	1	; () banked
 12266  010466  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12267  010468  0EFA               	movlw	high STR_75
 12268  01046A  0101               	movlb	1	; () banked
 12269  01046C  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12270  01046E  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 12271                           
 12272                           ;StringCommand.c: 167: }
 12273  010472  EF7B  F093         	goto	l683
 12274  010476                     l14697:
 12275                           
 12276                           ;StringCommand.c: 168: else if (StringMatch(Input, "livingroomfan=on"))
 12277  010476  C188  F10E         	movff	Command@Input,StringMatch@This
 12278  01047A  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 12279  01047E  0E72               	movlw	low STR_76
 12280  010480  0101               	movlb	1	; () banked
 12281  010482  6F10               	movwf	StringMatch@That& (0+255),b
 12282  010484  0EF9               	movlw	high STR_76
 12283  010486  0101               	movlb	1	; () banked
 12284  010488  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 12285  01048A  EC94  F0BA         	call	_StringMatch	;wreg free
 12286  01048E  0900               	iorlw	0
 12287  010490  B4D8               	btfsc	status,2,c
 12288  010492  D05C               	goto	l14709
 12289                           
 12290                           ;StringCommand.c: 169: {
 12291                           ;StringCommand.c: 170: INTCONbits.GIE = 0;
 12292  010494  9EF2               	bcf	intcon,7,c	;volatile
 12293                           
 12294                           ;StringCommand.c: 171: Send_Config2(0b00000001, fanON);
 12295  010496  0E29               	movlw	low _fanON
 12296  010498  0101               	movlb	1	; () banked
 12297  01049A  6F19               	movwf	Send_Config2@data& (0+255),b
 12298  01049C  0EEE               	movlw	high _fanON
 12299  01049E  0101               	movlb	1	; () banked
 12300  0104A0  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12301  0104A2  0E01               	movlw	1
 12302  0104A4  EC12  F0BA         	call	_Send_Config2
 12303                           
 12304                           ;StringCommand.c: 172: Send_Config2(0b00000001, fanON);
 12305  0104A8  0E29               	movlw	low _fanON
 12306  0104AA  0101               	movlb	1	; () banked
 12307  0104AC  6F19               	movwf	Send_Config2@data& (0+255),b
 12308  0104AE  0EEE               	movlw	high _fanON
 12309  0104B0  0101               	movlb	1	; () banked
 12310  0104B2  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12311  0104B4  0E01               	movlw	1
 12312  0104B6  EC12  F0BA         	call	_Send_Config2
 12313                           
 12314                           ;StringCommand.c: 173: Send_Config2(0b00000001, fanON);
 12315  0104BA  0E29               	movlw	low _fanON
 12316  0104BC  0101               	movlb	1	; () banked
 12317  0104BE  6F19               	movwf	Send_Config2@data& (0+255),b
 12318  0104C0  0EEE               	movlw	high _fanON
 12319  0104C2  0101               	movlb	1	; () banked
 12320  0104C4  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12321  0104C6  0E01               	movlw	1
 12322  0104C8  EC12  F0BA         	call	_Send_Config2
 12323                           
 12324                           ;StringCommand.c: 174: Send_Config2(0b00000001, fanON);
 12325  0104CC  0E29               	movlw	low _fanON
 12326  0104CE  0101               	movlb	1	; () banked
 12327  0104D0  6F19               	movwf	Send_Config2@data& (0+255),b
 12328  0104D2  0EEE               	movlw	high _fanON
 12329  0104D4  0101               	movlb	1	; () banked
 12330  0104D6  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12331  0104D8  0E01               	movlw	1
 12332  0104DA  EC12  F0BA         	call	_Send_Config2
 12333                           
 12334                           ;StringCommand.c: 175: Send_Config2(0b00000001, fanON);
 12335  0104DE  0E29               	movlw	low _fanON
 12336  0104E0  0101               	movlb	1	; () banked
 12337  0104E2  6F19               	movwf	Send_Config2@data& (0+255),b
 12338  0104E4  0EEE               	movlw	high _fanON
 12339  0104E6  0101               	movlb	1	; () banked
 12340  0104E8  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12341  0104EA  0E01               	movlw	1
 12342  0104EC  EC12  F0BA         	call	_Send_Config2
 12343                           
 12344                           ;StringCommand.c: 176: Send_Config2(0b00000001, fanON);
 12345  0104F0  0E29               	movlw	low _fanON
 12346  0104F2  0101               	movlb	1	; () banked
 12347  0104F4  6F19               	movwf	Send_Config2@data& (0+255),b
 12348  0104F6  0EEE               	movlw	high _fanON
 12349  0104F8  0101               	movlb	1	; () banked
 12350  0104FA  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12351  0104FC  0E01               	movlw	1
 12352  0104FE  EC12  F0BA         	call	_Send_Config2
 12353                           
 12354                           ;StringCommand.c: 177: Send_Config2(0b00000001, fanON);
 12355  010502  0E29               	movlw	low _fanON
 12356  010504  0101               	movlb	1	; () banked
 12357  010506  6F19               	movwf	Send_Config2@data& (0+255),b
 12358  010508  0EEE               	movlw	high _fanON
 12359  01050A  0101               	movlb	1	; () banked
 12360  01050C  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12361  01050E  0E01               	movlw	1
 12362  010510  EC12  F0BA         	call	_Send_Config2
 12363                           
 12364                           ;StringCommand.c: 178: Send_Config2(0b00000001, fanON);
 12365  010514  0E29               	movlw	low _fanON
 12366  010516  0101               	movlb	1	; () banked
 12367  010518  6F19               	movwf	Send_Config2@data& (0+255),b
 12368  01051A  0EEE               	movlw	high _fanON
 12369  01051C  0101               	movlb	1	; () banked
 12370  01051E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12371  010520  0E01               	movlw	1
 12372  010522  EC12  F0BA         	call	_Send_Config2
 12373                           
 12374                           ;StringCommand.c: 179: INTCONbits.GIE = 1;
 12375  010526  8EF2               	bsf	intcon,7,c	;volatile
 12376                           
 12377                           ;StringCommand.c: 180: UARTstring("Livingroom Fan On");
 12378  010528  0E92               	movlw	low STR_77
 12379  01052A  0101               	movlb	1	; () banked
 12380  01052C  6F19               	movwf	UARTstring@data& (0+255),b
 12381  01052E  0EF8               	movlw	high STR_77
 12382  010530  0101               	movlb	1	; () banked
 12383  010532  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12384  010534  EC03  F0B8         	call	_UARTstring	;wreg free
 12385                           
 12386                           ;StringCommand.c: 181: LCDdisplayFeedback("LVNG Rm Lt On");
 12387  010538  0E71               	movlw	low STR_78
 12388  01053A  0101               	movlb	1	; () banked
 12389  01053C  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12390  01053E  0EFC               	movlw	high STR_78
 12391  010540  0101               	movlb	1	; () banked
 12392  010542  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12393  010544  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 12394                           
 12395                           ;StringCommand.c: 182: }
 12396  010548  EF7B  F093         	goto	l683
 12397  01054C                     l14709:
 12398                           
 12399                           ;StringCommand.c: 183: else if (StringMatch(Input, "livingroomfan=off"))
 12400  01054C  C188  F10E         	movff	Command@Input,StringMatch@This
 12401  010550  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 12402  010554  0E5C               	movlw	low STR_79
 12403  010556  0101               	movlb	1	; () banked
 12404  010558  6F10               	movwf	StringMatch@That& (0+255),b
 12405  01055A  0EF8               	movlw	high STR_79
 12406  01055C  0101               	movlb	1	; () banked
 12407  01055E  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 12408  010560  EC94  F0BA         	call	_StringMatch	;wreg free
 12409  010564  0900               	iorlw	0
 12410  010566  B4D8               	btfsc	status,2,c
 12411  010568  D065               	goto	l14721
 12412                           
 12413                           ;StringCommand.c: 184: {
 12414                           ;StringCommand.c: 185: INTCONbits.GIE = 0;
 12415  01056A  9EF2               	bcf	intcon,7,c	;volatile
 12416                           
 12417                           ;StringCommand.c: 186: Send_Config2(0b00000001, fanOFF);
 12418  01056C  0E19               	movlw	low _fanOFF
 12419  01056E  0101               	movlb	1	; () banked
 12420  010570  6F19               	movwf	Send_Config2@data& (0+255),b
 12421  010572  0EEE               	movlw	high _fanOFF
 12422  010574  0101               	movlb	1	; () banked
 12423  010576  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12424  010578  0E01               	movlw	1
 12425  01057A  EC12  F0BA         	call	_Send_Config2
 12426                           
 12427                           ;StringCommand.c: 187: Send_Config2(0b00000001, fanOFF);
 12428  01057E  0E19               	movlw	low _fanOFF
 12429  010580  0101               	movlb	1	; () banked
 12430  010582  6F19               	movwf	Send_Config2@data& (0+255),b
 12431  010584  0EEE               	movlw	high _fanOFF
 12432  010586  0101               	movlb	1	; () banked
 12433  010588  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12434  01058A  0E01               	movlw	1
 12435  01058C  EC12  F0BA         	call	_Send_Config2
 12436                           
 12437                           ;StringCommand.c: 188: Send_Config2(0b00000001, fanOFF);
 12438  010590  0E19               	movlw	low _fanOFF
 12439  010592  0101               	movlb	1	; () banked
 12440  010594  6F19               	movwf	Send_Config2@data& (0+255),b
 12441  010596  0EEE               	movlw	high _fanOFF
 12442  010598  0101               	movlb	1	; () banked
 12443  01059A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12444  01059C  0E01               	movlw	1
 12445  01059E  EC12  F0BA         	call	_Send_Config2
 12446                           
 12447                           ;StringCommand.c: 189: Send_Config2(0b00000001, fanOFF);
 12448  0105A2  0E19               	movlw	low _fanOFF
 12449  0105A4  0101               	movlb	1	; () banked
 12450  0105A6  6F19               	movwf	Send_Config2@data& (0+255),b
 12451  0105A8  0EEE               	movlw	high _fanOFF
 12452  0105AA  0101               	movlb	1	; () banked
 12453  0105AC  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12454  0105AE  0E01               	movlw	1
 12455  0105B0  EC12  F0BA         	call	_Send_Config2
 12456                           
 12457                           ;StringCommand.c: 190: Send_Config2(0b00000001, fanOFF);
 12458  0105B4  0E19               	movlw	low _fanOFF
 12459  0105B6  0101               	movlb	1	; () banked
 12460  0105B8  6F19               	movwf	Send_Config2@data& (0+255),b
 12461  0105BA  0EEE               	movlw	high _fanOFF
 12462  0105BC  0101               	movlb	1	; () banked
 12463  0105BE  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12464  0105C0  0E01               	movlw	1
 12465  0105C2  EC12  F0BA         	call	_Send_Config2
 12466                           
 12467                           ;StringCommand.c: 191: Send_Config2(0b00000001, fanOFF);
 12468  0105C6  0E19               	movlw	low _fanOFF
 12469  0105C8  0101               	movlb	1	; () banked
 12470  0105CA  6F19               	movwf	Send_Config2@data& (0+255),b
 12471  0105CC  0EEE               	movlw	high _fanOFF
 12472  0105CE  0101               	movlb	1	; () banked
 12473  0105D0  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12474  0105D2  0E01               	movlw	1
 12475  0105D4  EC12  F0BA         	call	_Send_Config2
 12476                           
 12477                           ;StringCommand.c: 192: Send_Config2(0b00000001, fanOFF);
 12478  0105D8  0E19               	movlw	low _fanOFF
 12479  0105DA  0101               	movlb	1	; () banked
 12480  0105DC  6F19               	movwf	Send_Config2@data& (0+255),b
 12481  0105DE  0EEE               	movlw	high _fanOFF
 12482  0105E0  0101               	movlb	1	; () banked
 12483  0105E2  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12484  0105E4  0E01               	movlw	1
 12485  0105E6  EC12  F0BA         	call	_Send_Config2
 12486                           
 12487                           ;StringCommand.c: 193: Send_Config2(0b00000001, fanOFF);
 12488  0105EA  0E19               	movlw	low _fanOFF
 12489  0105EC  0101               	movlb	1	; () banked
 12490  0105EE  6F19               	movwf	Send_Config2@data& (0+255),b
 12491  0105F0  0EEE               	movlw	high _fanOFF
 12492  0105F2  0101               	movlb	1	; () banked
 12493  0105F4  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12494  0105F6  0E01               	movlw	1
 12495  0105F8  EC12  F0BA         	call	_Send_Config2
 12496                           
 12497                           ;StringCommand.c: 194: Send_Config2(0b00000001, fanOFF);
 12498  0105FC  0E19               	movlw	low _fanOFF
 12499  0105FE  0101               	movlb	1	; () banked
 12500  010600  6F19               	movwf	Send_Config2@data& (0+255),b
 12501  010602  0EEE               	movlw	high _fanOFF
 12502  010604  0101               	movlb	1	; () banked
 12503  010606  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12504  010608  0E01               	movlw	1
 12505  01060A  EC12  F0BA         	call	_Send_Config2
 12506                           
 12507                           ;StringCommand.c: 195: INTCONbits.GIE = 1;
 12508  01060E  8EF2               	bsf	intcon,7,c	;volatile
 12509                           
 12510                           ;StringCommand.c: 196: UARTstring("Livingroom Fan Off");
 12511  010610  0EC7               	movlw	low STR_80
 12512  010612  0101               	movlb	1	; () banked
 12513  010614  6F19               	movwf	UARTstring@data& (0+255),b
 12514  010616  0EF7               	movlw	high STR_80
 12515  010618  0101               	movlb	1	; () banked
 12516  01061A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12517  01061C  EC03  F0B8         	call	_UARTstring	;wreg free
 12518                           
 12519                           ;StringCommand.c: 197: LCDdisplayFeedback("LVNG Rm Lt Off");
 12520  010620  0EA4               	movlw	low STR_81
 12521  010622  0101               	movlb	1	; () banked
 12522  010624  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12523  010626  0EFB               	movlw	high STR_81
 12524  010628  0101               	movlb	1	; () banked
 12525  01062A  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12526  01062C  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 12527                           
 12528                           ;StringCommand.c: 198: }
 12529  010630  EF7B  F093         	goto	l683
 12530  010634                     l14721:
 12531                           
 12532                           ;StringCommand.c: 199: else
 12533                           ;StringCommand.c: 200: {
 12534                           ;StringCommand.c: 201: UARTstring("Livingroom Task???");
 12535  010634  0EA1               	movlw	low STR_82
 12536  010636  0101               	movlb	1	; () banked
 12537  010638  6F19               	movwf	UARTstring@data& (0+255),b
 12538  01063A  0EF7               	movlw	high STR_82
 12539  01063C  0101               	movlb	1	; () banked
 12540  01063E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12541  010640  EC03  F0B8         	call	_UARTstring	;wreg free
 12542                           
 12543                           ;StringCommand.c: 202: LCDdisplayFeedback("LVNG Rm Task???");
 12544  010644  0E09               	movlw	low STR_83
 12545  010646  0101               	movlb	1	; () banked
 12546  010648  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12547  01064A  0EFA               	movlw	high STR_83
 12548  01064C  0101               	movlb	1	; () banked
 12549  01064E  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12550  010650  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 12551                           
 12552                           ;StringCommand.c: 203: }
 12553                           ;StringCommand.c: 204: }
 12554  010654  EF7B  F093         	goto	l683
 12555  010658                     l14723:
 12556                           
 12557                           ;StringCommand.c: 205: else
 12558                           ;StringCommand.c: 206: {
 12559                           ;StringCommand.c: 207: UARTstring("Livingroom Help Menu\r\n\n");
 12560  010658  0E2E               	movlw	low STR_84
 12561  01065A  0101               	movlb	1	; () banked
 12562  01065C  6F19               	movwf	UARTstring@data& (0+255),b
 12563  01065E  0EF6               	movlw	high STR_84
 12564  010660  0101               	movlb	1	; () banked
 12565  010662  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12566  010664  EC03  F0B8         	call	_UARTstring	;wreg free
 12567                           
 12568                           ;StringCommand.c: 208: UARTstring("Devices:\r\n");
 12569  010668  0EB7               	movlw	low STR_61
 12570  01066A  0101               	movlb	1	; () banked
 12571  01066C  6F19               	movwf	UARTstring@data& (0+255),b
 12572  01066E  0EFD               	movlw	high STR_61
 12573  010670  0101               	movlb	1	; () banked
 12574  010672  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12575  010674  EC03  F0B8         	call	_UARTstring	;wreg free
 12576                           
 12577                           ;StringCommand.c: 209: UARTstring("light\r\n");
 12578  010678  0E02               	movlw	low STR_86
 12579  01067A  0101               	movlb	1	; () banked
 12580  01067C  6F19               	movwf	UARTstring@data& (0+255),b
 12581  01067E  0EFF               	movlw	high STR_86
 12582  010680  0101               	movlb	1	; () banked
 12583  010682  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12584  010684  EC03  F0B8         	call	_UARTstring	;wreg free
 12585                           
 12586                           ;StringCommand.c: 210: UARTstring("fan\r\n\n");
 12587  010688  0E52               	movlw	low STR_87
 12588  01068A  0101               	movlb	1	; () banked
 12589  01068C  6F19               	movwf	UARTstring@data& (0+255),b
 12590  01068E  0EFF               	movlw	high STR_87
 12591  010690  0101               	movlb	1	; () banked
 12592  010692  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12593  010694  EC03  F0B8         	call	_UARTstring	;wreg free
 12594                           
 12595                           ;StringCommand.c: 211: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 12596  010698  0EEB               	movlw	low STR_64
 12597  01069A  0101               	movlb	1	; () banked
 12598  01069C  6F19               	movwf	UARTstring@data& (0+255),b
 12599  01069E  0EEE               	movlw	high STR_64
 12600  0106A0  0101               	movlb	1	; () banked
 12601  0106A2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12602  0106A4  EC03  F0B8         	call	_UARTstring	;wreg free
 12603                           
 12604                           ;StringCommand.c: 212: UARTstring("i.e. Livingroom fan = On\r\n");
 12605  0106A8  0E7A               	movlw	low STR_89
 12606  0106AA  0101               	movlb	1	; () banked
 12607  0106AC  6F19               	movwf	UARTstring@data& (0+255),b
 12608  0106AE  0EF5               	movlw	high STR_89
 12609  0106B0  0101               	movlb	1	; () banked
 12610  0106B2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12611  0106B4  EC03  F0B8         	call	_UARTstring	;wreg free
 12612                           
 12613                           ;StringCommand.c: 213: LCDdisplayFeedback("LVNG Rm Lt help");
 12614  0106B8  0E29               	movlw	low STR_90
 12615  0106BA  0101               	movlb	1	; () banked
 12616  0106BC  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12617  0106BE  0EFB               	movlw	high STR_90
 12618  0106C0  0101               	movlb	1	; () banked
 12619  0106C2  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12620  0106C4  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 12621                           
 12622                           ;StringCommand.c: 214: LCD_Scroll("LVNGroom Menu");
 12623  0106C8  0EA9               	movlw	low STR_91
 12624  0106CA  0101               	movlb	1	; () banked
 12625  0106CC  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12626  0106CE  0EFC               	movlw	high STR_91
 12627  0106D0  0101               	movlb	1	; () banked
 12628  0106D2  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12629  0106D4  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 12630                           
 12631                           ;StringCommand.c: 215: LCD_Scroll("Devices:");
 12632  0106D8  0E8F               	movlw	low STR_67
 12633  0106DA  0101               	movlb	1	; () banked
 12634  0106DC  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12635  0106DE  0EFE               	movlw	high STR_67
 12636  0106E0  0101               	movlb	1	; () banked
 12637  0106E2  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12638  0106E4  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 12639                           
 12640                           ;StringCommand.c: 216: LCD_Scroll("Light");
 12641  0106E8  0EA7               	movlw	low STR_93
 12642  0106EA  0101               	movlb	1	; () banked
 12643  0106EC  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12644  0106EE  0EFF               	movlw	high STR_93
 12645  0106F0  0101               	movlb	1	; () banked
 12646  0106F2  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12647  0106F4  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 12648                           
 12649                           ;StringCommand.c: 217: LCD_Scroll("Fan");
 12650  0106F8  0EEC               	movlw	low STR_94
 12651  0106FA  0101               	movlb	1	; () banked
 12652  0106FC  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 12653  0106FE  0EFF               	movlw	high STR_94
 12654  010700  0101               	movlb	1	; () banked
 12655  010702  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12656  010704  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 12657                           
 12658                           ;StringCommand.c: 218: }
 12659                           ;StringCommand.c: 219: }
 12660  010708  EF7B  F093         	goto	l683
 12661  01070C                     l14733:
 12662                           
 12663                           ;StringCommand.c: 221: else if (StartsWith(Input, "bedroom"))
 12664  01070C  C188  F10E         	movff	Command@Input,StartsWith@This
 12665  010710  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 12666  010714  0E12               	movlw	low STR_95
 12667  010716  0101               	movlb	1	; () banked
 12668  010718  6F10               	movwf	StartsWith@That& (0+255),b
 12669  01071A  0EFF               	movlw	high STR_95
 12670  01071C  0101               	movlb	1	; () banked
 12671  01071E  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 12672  010720  EC3C  F0B9         	call	_StartsWith	;wreg free
 12673  010724  0900               	iorlw	0
 12674  010726  B4D8               	btfsc	status,2,c
 12675  010728  D2D0               	goto	l14815
 12676                           
 12677                           ;StringCommand.c: 222: {
 12678                           ;StringCommand.c: 223: if (!StringContains(Input, "?"))
 12679  01072A  C188  F10E         	movff	Command@Input,StringContains@This
 12680  01072E  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12681  010732  0E17               	movlw	low (STR_83+14)
 12682  010734  0101               	movlb	1	; () banked
 12683  010736  6F10               	movwf	StringContains@That& (0+255),b
 12684  010738  0EFA               	movlw	high (STR_83+14)
 12685  01073A  0101               	movlb	1	; () banked
 12686  01073C  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12687  01073E  EC54  F0BA         	call	_StringContains	;wreg free
 12688  010742  0900               	iorlw	0
 12689  010744  A4D8               	btfss	status,2,c
 12690  010746  D257               	goto	l14803
 12691                           
 12692                           ;StringCommand.c: 224: {
 12693                           ;StringCommand.c: 225: if (StringContains(Input, "light") || StringContains(Input, "fan"
      +                          ))
 12694  010748  C188  F10E         	movff	Command@Input,StringContains@This
 12695  01074C  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12696  010750  0EAD               	movlw	low STR_97
 12697  010752  0101               	movlb	1	; () banked
 12698  010754  6F10               	movwf	StringContains@That& (0+255),b
 12699  010756  0EFF               	movlw	high STR_97
 12700  010758  0101               	movlb	1	; () banked
 12701  01075A  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12702  01075C  EC54  F0BA         	call	_StringContains	;wreg free
 12703  010760  0900               	iorlw	0
 12704  010762  A4D8               	btfss	status,2,c
 12705  010764  D00F               	goto	l14741
 12706  010766  C188  F10E         	movff	Command@Input,StringContains@This
 12707  01076A  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 12708  01076E  0EF0               	movlw	low STR_98
 12709  010770  0101               	movlb	1	; () banked
 12710  010772  6F10               	movwf	StringContains@That& (0+255),b
 12711  010774  0EFF               	movlw	high STR_98
 12712  010776  0101               	movlb	1	; () banked
 12713  010778  6F11               	movwf	(StringContains@That+1)& (0+255),b
 12714  01077A  EC54  F0BA         	call	_StringContains	;wreg free
 12715  01077E  0900               	iorlw	0
 12716  010780  B4D8               	btfsc	status,2,c
 12717  010782  D227               	goto	l14801
 12718  010784                     l14741:
 12719                           
 12720                           ;StringCommand.c: 226: {
 12721                           ;StringCommand.c: 227: if (StringMatch(Input, "bedroomlight=on") || StringMatch(Input, "
      +                          bedroomlight=off"))
 12722  010784  C188  F10E         	movff	Command@Input,StringMatch@This
 12723  010788  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 12724  01078C  0E09               	movlw	low STR_99
 12725  01078E  0101               	movlb	1	; () banked
 12726  010790  6F10               	movwf	StringMatch@That& (0+255),b
 12727  010792  0EFB               	movlw	high STR_99
 12728  010794  0101               	movlb	1	; () banked
 12729  010796  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 12730  010798  EC94  F0BA         	call	_StringMatch	;wreg free
 12731  01079C  0900               	iorlw	0
 12732  01079E  A4D8               	btfss	status,2,c
 12733  0107A0  D00F               	goto	l719
 12734  0107A2  C188  F10E         	movff	Command@Input,StringMatch@This
 12735  0107A6  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 12736  0107AA  0E50               	movlw	low STR_100
 12737  0107AC  0101               	movlb	1	; () banked
 12738  0107AE  6F10               	movwf	StringMatch@That& (0+255),b
 12739  0107B0  0EF9               	movlw	high STR_100
 12740  0107B2  0101               	movlb	1	; () banked
 12741  0107B4  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 12742  0107B6  EC94  F0BA         	call	_StringMatch	;wreg free
 12743  0107BA  0900               	iorlw	0
 12744  0107BC  B4D8               	btfsc	status,2,c
 12745  0107BE  D053               	goto	l14753
 12746  0107C0                     l719:
 12747                           
 12748                           ;StringCommand.c: 228: {
 12749                           ;StringCommand.c: 229: INTCONbits.GIE = 0;
 12750  0107C0  9EF2               	bcf	intcon,7,c	;volatile
 12751                           
 12752                           ;StringCommand.c: 230: Send_Config1(0b00000001, TXdataE);
 12753  0107C2  0E45               	movlw	low _TXdataE
 12754  0107C4  0101               	movlb	1	; () banked
 12755  0107C6  6F19               	movwf	Send_Config1@data& (0+255),b
 12756  0107C8  0EEE               	movlw	high _TXdataE
 12757  0107CA  0101               	movlb	1	; () banked
 12758  0107CC  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12759  0107CE  0E01               	movlw	1
 12760  0107D0  EC2D  F0B2         	call	_Send_Config1
 12761                           
 12762                           ;StringCommand.c: 231: Send_Config1(0b00000001, TXdataE);
 12763  0107D4  0E45               	movlw	low _TXdataE
 12764  0107D6  0101               	movlb	1	; () banked
 12765  0107D8  6F19               	movwf	Send_Config1@data& (0+255),b
 12766  0107DA  0EEE               	movlw	high _TXdataE
 12767  0107DC  0101               	movlb	1	; () banked
 12768  0107DE  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12769  0107E0  0E01               	movlw	1
 12770  0107E2  EC2D  F0B2         	call	_Send_Config1
 12771                           
 12772                           ;StringCommand.c: 232: Send_Config1(0b00000001, TXdataE);
 12773  0107E6  0E45               	movlw	low _TXdataE
 12774  0107E8  0101               	movlb	1	; () banked
 12775  0107EA  6F19               	movwf	Send_Config1@data& (0+255),b
 12776  0107EC  0EEE               	movlw	high _TXdataE
 12777  0107EE  0101               	movlb	1	; () banked
 12778  0107F0  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12779  0107F2  0E01               	movlw	1
 12780  0107F4  EC2D  F0B2         	call	_Send_Config1
 12781                           
 12782                           ;StringCommand.c: 233: Send_Config1(0b00000001, TXdataE);
 12783  0107F8  0E45               	movlw	low _TXdataE
 12784  0107FA  0101               	movlb	1	; () banked
 12785  0107FC  6F19               	movwf	Send_Config1@data& (0+255),b
 12786  0107FE  0EEE               	movlw	high _TXdataE
 12787  010800  0101               	movlb	1	; () banked
 12788  010802  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12789  010804  0E01               	movlw	1
 12790  010806  EC2D  F0B2         	call	_Send_Config1
 12791                           
 12792                           ;StringCommand.c: 234: Send_Config1(0b00000001, TXdataE);
 12793  01080A  0E45               	movlw	low _TXdataE
 12794  01080C  0101               	movlb	1	; () banked
 12795  01080E  6F19               	movwf	Send_Config1@data& (0+255),b
 12796  010810  0EEE               	movlw	high _TXdataE
 12797  010812  0101               	movlb	1	; () banked
 12798  010814  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12799  010816  0E01               	movlw	1
 12800  010818  EC2D  F0B2         	call	_Send_Config1
 12801                           
 12802                           ;StringCommand.c: 235: Send_Config1(0b00000001, TXdataE);
 12803  01081C  0E45               	movlw	low _TXdataE
 12804  01081E  0101               	movlb	1	; () banked
 12805  010820  6F19               	movwf	Send_Config1@data& (0+255),b
 12806  010822  0EEE               	movlw	high _TXdataE
 12807  010824  0101               	movlb	1	; () banked
 12808  010826  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12809  010828  0E01               	movlw	1
 12810  01082A  EC2D  F0B2         	call	_Send_Config1
 12811                           
 12812                           ;StringCommand.c: 236: Send_Config1(0b00000001, TXdataE);
 12813  01082E  0E45               	movlw	low _TXdataE
 12814  010830  0101               	movlb	1	; () banked
 12815  010832  6F19               	movwf	Send_Config1@data& (0+255),b
 12816  010834  0EEE               	movlw	high _TXdataE
 12817  010836  0101               	movlb	1	; () banked
 12818  010838  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 12819  01083A  0E01               	movlw	1
 12820  01083C  EC2D  F0B2         	call	_Send_Config1
 12821                           
 12822                           ;StringCommand.c: 237: INTCONbits.GIE = 1;
 12823  010840  8EF2               	bsf	intcon,7,c	;volatile
 12824                           
 12825                           ;StringCommand.c: 238: UARTstring("Bedroom Light Toggled");
 12826  010842  0EE7               	movlw	low STR_101
 12827  010844  0101               	movlb	1	; () banked
 12828  010846  6F19               	movwf	UARTstring@data& (0+255),b
 12829  010848  0EF6               	movlw	high STR_101
 12830  01084A  0101               	movlb	1	; () banked
 12831  01084C  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12832  01084E  EC03  F0B8         	call	_UARTstring	;wreg free
 12833                           
 12834                           ;StringCommand.c: 239: LCDdisplayFeedback("Bedroom Lt TGLD");
 12835  010852  0E89               	movlw	low STR_102
 12836  010854  0101               	movlb	1	; () banked
 12837  010856  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12838  010858  0EFA               	movlw	high STR_102
 12839  01085A  0101               	movlb	1	; () banked
 12840  01085C  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12841  01085E  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 12842                           
 12843                           ;StringCommand.c: 240: }
 12844  010862  EF7B  F093         	goto	l683
 12845  010866                     l14753:
 12846                           
 12847                           ;StringCommand.c: 241: else if (StringMatch(Input, "bedroomfan=on"))
 12848  010866  C188  F10E         	movff	Command@Input,StringMatch@This
 12849  01086A  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 12850  01086E  0E8D               	movlw	low STR_103
 12851  010870  0101               	movlb	1	; () banked
 12852  010872  6F10               	movwf	StringMatch@That& (0+255),b
 12853  010874  0EFC               	movlw	high STR_103
 12854  010876  0101               	movlb	1	; () banked
 12855  010878  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 12856  01087A  EC94  F0BA         	call	_StringMatch	;wreg free
 12857  01087E  0900               	iorlw	0
 12858  010880  B4D8               	btfsc	status,2,c
 12859  010882  D05C               	goto	l14765
 12860                           
 12861                           ;StringCommand.c: 242: {
 12862                           ;StringCommand.c: 243: INTCONbits.GIE = 0;
 12863  010884  9EF2               	bcf	intcon,7,c	;volatile
 12864                           
 12865                           ;StringCommand.c: 244: Send_Config2(0b00000001, AuxON);
 12866  010886  0EC9               	movlw	low _AuxON
 12867  010888  0101               	movlb	1	; () banked
 12868  01088A  6F19               	movwf	Send_Config2@data& (0+255),b
 12869  01088C  0EED               	movlw	high _AuxON
 12870  01088E  0101               	movlb	1	; () banked
 12871  010890  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12872  010892  0E01               	movlw	1
 12873  010894  EC12  F0BA         	call	_Send_Config2
 12874                           
 12875                           ;StringCommand.c: 245: Send_Config2(0b00000001, AuxON);
 12876  010898  0EC9               	movlw	low _AuxON
 12877  01089A  0101               	movlb	1	; () banked
 12878  01089C  6F19               	movwf	Send_Config2@data& (0+255),b
 12879  01089E  0EED               	movlw	high _AuxON
 12880  0108A0  0101               	movlb	1	; () banked
 12881  0108A2  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12882  0108A4  0E01               	movlw	1
 12883  0108A6  EC12  F0BA         	call	_Send_Config2
 12884                           
 12885                           ;StringCommand.c: 246: Send_Config2(0b00000001, AuxON);
 12886  0108AA  0EC9               	movlw	low _AuxON
 12887  0108AC  0101               	movlb	1	; () banked
 12888  0108AE  6F19               	movwf	Send_Config2@data& (0+255),b
 12889  0108B0  0EED               	movlw	high _AuxON
 12890  0108B2  0101               	movlb	1	; () banked
 12891  0108B4  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12892  0108B6  0E01               	movlw	1
 12893  0108B8  EC12  F0BA         	call	_Send_Config2
 12894                           
 12895                           ;StringCommand.c: 247: Send_Config2(0b00000001, AuxON);
 12896  0108BC  0EC9               	movlw	low _AuxON
 12897  0108BE  0101               	movlb	1	; () banked
 12898  0108C0  6F19               	movwf	Send_Config2@data& (0+255),b
 12899  0108C2  0EED               	movlw	high _AuxON
 12900  0108C4  0101               	movlb	1	; () banked
 12901  0108C6  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12902  0108C8  0E01               	movlw	1
 12903  0108CA  EC12  F0BA         	call	_Send_Config2
 12904                           
 12905                           ;StringCommand.c: 248: Send_Config2(0b00000001, AuxON);
 12906  0108CE  0EC9               	movlw	low _AuxON
 12907  0108D0  0101               	movlb	1	; () banked
 12908  0108D2  6F19               	movwf	Send_Config2@data& (0+255),b
 12909  0108D4  0EED               	movlw	high _AuxON
 12910  0108D6  0101               	movlb	1	; () banked
 12911  0108D8  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12912  0108DA  0E01               	movlw	1
 12913  0108DC  EC12  F0BA         	call	_Send_Config2
 12914                           
 12915                           ;StringCommand.c: 249: Send_Config2(0b00000001, AuxON);
 12916  0108E0  0EC9               	movlw	low _AuxON
 12917  0108E2  0101               	movlb	1	; () banked
 12918  0108E4  6F19               	movwf	Send_Config2@data& (0+255),b
 12919  0108E6  0EED               	movlw	high _AuxON
 12920  0108E8  0101               	movlb	1	; () banked
 12921  0108EA  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12922  0108EC  0E01               	movlw	1
 12923  0108EE  EC12  F0BA         	call	_Send_Config2
 12924                           
 12925                           ;StringCommand.c: 250: Send_Config2(0b00000001, AuxON);
 12926  0108F2  0EC9               	movlw	low _AuxON
 12927  0108F4  0101               	movlb	1	; () banked
 12928  0108F6  6F19               	movwf	Send_Config2@data& (0+255),b
 12929  0108F8  0EED               	movlw	high _AuxON
 12930  0108FA  0101               	movlb	1	; () banked
 12931  0108FC  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12932  0108FE  0E01               	movlw	1
 12933  010900  EC12  F0BA         	call	_Send_Config2
 12934                           
 12935                           ;StringCommand.c: 251: Send_Config2(0b00000001, AuxON);
 12936  010904  0EC9               	movlw	low _AuxON
 12937  010906  0101               	movlb	1	; () banked
 12938  010908  6F19               	movwf	Send_Config2@data& (0+255),b
 12939  01090A  0EED               	movlw	high _AuxON
 12940  01090C  0101               	movlb	1	; () banked
 12941  01090E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12942  010910  0E01               	movlw	1
 12943  010912  EC12  F0BA         	call	_Send_Config2
 12944                           
 12945                           ;StringCommand.c: 252: INTCONbits.GIE = 1;
 12946  010916  8EF2               	bsf	intcon,7,c	;volatile
 12947                           
 12948                           ;StringCommand.c: 253: UARTstring("Bedroom Fan On");
 12949  010918  0EE0               	movlw	low STR_104
 12950  01091A  0101               	movlb	1	; () banked
 12951  01091C  6F19               	movwf	UARTstring@data& (0+255),b
 12952  01091E  0EFB               	movlw	high STR_104
 12953  010920  0101               	movlb	1	; () banked
 12954  010922  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 12955  010924  EC03  F0B8         	call	_UARTstring	;wreg free
 12956                           
 12957                           ;StringCommand.c: 254: LCDdisplayFeedback("Bedroom Lt On");
 12958  010928  0E7F               	movlw	low STR_105
 12959  01092A  0101               	movlb	1	; () banked
 12960  01092C  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12961  01092E  0EFC               	movlw	high STR_105
 12962  010930  0101               	movlb	1	; () banked
 12963  010932  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12964  010934  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 12965                           
 12966                           ;StringCommand.c: 255: }
 12967  010938  EF7B  F093         	goto	l683
 12968  01093C                     l14765:
 12969                           
 12970                           ;StringCommand.c: 256: else if (StringMatch(Input, "bedroomfan=off"))
 12971  01093C  C188  F10E         	movff	Command@Input,StringMatch@This
 12972  010940  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 12973  010944  0EC2               	movlw	low STR_106
 12974  010946  0101               	movlb	1	; () banked
 12975  010948  6F10               	movwf	StringMatch@That& (0+255),b
 12976  01094A  0EFB               	movlw	high STR_106
 12977  01094C  0101               	movlb	1	; () banked
 12978  01094E  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 12979  010950  EC94  F0BA         	call	_StringMatch	;wreg free
 12980  010954  0900               	iorlw	0
 12981  010956  B4D8               	btfsc	status,2,c
 12982  010958  D065               	goto	l14777
 12983                           
 12984                           ;StringCommand.c: 257: {
 12985                           ;StringCommand.c: 258: INTCONbits.GIE = 0;
 12986  01095A  9EF2               	bcf	intcon,7,c	;volatile
 12987                           
 12988                           ;StringCommand.c: 259: Send_Config2(0b00000001, AuxOFF);
 12989  01095C  0EB9               	movlw	low _AuxOFF
 12990  01095E  0101               	movlb	1	; () banked
 12991  010960  6F19               	movwf	Send_Config2@data& (0+255),b
 12992  010962  0EED               	movlw	high _AuxOFF
 12993  010964  0101               	movlb	1	; () banked
 12994  010966  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 12995  010968  0E01               	movlw	1
 12996  01096A  EC12  F0BA         	call	_Send_Config2
 12997                           
 12998                           ;StringCommand.c: 260: Send_Config2(0b00000001, AuxOFF);
 12999  01096E  0EB9               	movlw	low _AuxOFF
 13000  010970  0101               	movlb	1	; () banked
 13001  010972  6F19               	movwf	Send_Config2@data& (0+255),b
 13002  010974  0EED               	movlw	high _AuxOFF
 13003  010976  0101               	movlb	1	; () banked
 13004  010978  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13005  01097A  0E01               	movlw	1
 13006  01097C  EC12  F0BA         	call	_Send_Config2
 13007                           
 13008                           ;StringCommand.c: 261: Send_Config2(0b00000001, AuxOFF);
 13009  010980  0EB9               	movlw	low _AuxOFF
 13010  010982  0101               	movlb	1	; () banked
 13011  010984  6F19               	movwf	Send_Config2@data& (0+255),b
 13012  010986  0EED               	movlw	high _AuxOFF
 13013  010988  0101               	movlb	1	; () banked
 13014  01098A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13015  01098C  0E01               	movlw	1
 13016  01098E  EC12  F0BA         	call	_Send_Config2
 13017                           
 13018                           ;StringCommand.c: 262: Send_Config2(0b00000001, AuxOFF);
 13019  010992  0EB9               	movlw	low _AuxOFF
 13020  010994  0101               	movlb	1	; () banked
 13021  010996  6F19               	movwf	Send_Config2@data& (0+255),b
 13022  010998  0EED               	movlw	high _AuxOFF
 13023  01099A  0101               	movlb	1	; () banked
 13024  01099C  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13025  01099E  0E01               	movlw	1
 13026  0109A0  EC12  F0BA         	call	_Send_Config2
 13027                           
 13028                           ;StringCommand.c: 263: Send_Config2(0b00000001, AuxOFF);
 13029  0109A4  0EB9               	movlw	low _AuxOFF
 13030  0109A6  0101               	movlb	1	; () banked
 13031  0109A8  6F19               	movwf	Send_Config2@data& (0+255),b
 13032  0109AA  0EED               	movlw	high _AuxOFF
 13033  0109AC  0101               	movlb	1	; () banked
 13034  0109AE  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13035  0109B0  0E01               	movlw	1
 13036  0109B2  EC12  F0BA         	call	_Send_Config2
 13037                           
 13038                           ;StringCommand.c: 264: Send_Config2(0b00000001, AuxOFF);
 13039  0109B6  0EB9               	movlw	low _AuxOFF
 13040  0109B8  0101               	movlb	1	; () banked
 13041  0109BA  6F19               	movwf	Send_Config2@data& (0+255),b
 13042  0109BC  0EED               	movlw	high _AuxOFF
 13043  0109BE  0101               	movlb	1	; () banked
 13044  0109C0  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13045  0109C2  0E01               	movlw	1
 13046  0109C4  EC12  F0BA         	call	_Send_Config2
 13047                           
 13048                           ;StringCommand.c: 265: Send_Config2(0b00000001, AuxOFF);
 13049  0109C8  0EB9               	movlw	low _AuxOFF
 13050  0109CA  0101               	movlb	1	; () banked
 13051  0109CC  6F19               	movwf	Send_Config2@data& (0+255),b
 13052  0109CE  0EED               	movlw	high _AuxOFF
 13053  0109D0  0101               	movlb	1	; () banked
 13054  0109D2  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13055  0109D4  0E01               	movlw	1
 13056  0109D6  EC12  F0BA         	call	_Send_Config2
 13057                           
 13058                           ;StringCommand.c: 266: Send_Config2(0b00000001, AuxOFF);
 13059  0109DA  0EB9               	movlw	low _AuxOFF
 13060  0109DC  0101               	movlb	1	; () banked
 13061  0109DE  6F19               	movwf	Send_Config2@data& (0+255),b
 13062  0109E0  0EED               	movlw	high _AuxOFF
 13063  0109E2  0101               	movlb	1	; () banked
 13064  0109E4  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13065  0109E6  0E01               	movlw	1
 13066  0109E8  EC12  F0BA         	call	_Send_Config2
 13067                           
 13068                           ;StringCommand.c: 267: Send_Config2(0b00000001, AuxOFF);
 13069  0109EC  0EB9               	movlw	low _AuxOFF
 13070  0109EE  0101               	movlb	1	; () banked
 13071  0109F0  6F19               	movwf	Send_Config2@data& (0+255),b
 13072  0109F2  0EED               	movlw	high _AuxOFF
 13073  0109F4  0101               	movlb	1	; () banked
 13074  0109F6  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13075  0109F8  0E01               	movlw	1
 13076  0109FA  EC12  F0BA         	call	_Send_Config2
 13077                           
 13078                           ;StringCommand.c: 268: INTCONbits.GIE = 1;
 13079  0109FE  8EF2               	bsf	intcon,7,c	;volatile
 13080                           
 13081                           ;StringCommand.c: 269: UARTstring("Bedroom Fan Off");
 13082  010A00  0ED9               	movlw	low STR_107
 13083  010A02  0101               	movlb	1	; () banked
 13084  010A04  6F19               	movwf	UARTstring@data& (0+255),b
 13085  010A06  0EFA               	movlw	high STR_107
 13086  010A08  0101               	movlb	1	; () banked
 13087  010A0A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13088  010A0C  EC03  F0B8         	call	_UARTstring	;wreg free
 13089                           
 13090                           ;StringCommand.c: 270: LCDdisplayFeedback("Bedroom Lt Off");
 13091  010A10  0EB3               	movlw	low STR_108
 13092  010A12  0101               	movlb	1	; () banked
 13093  010A14  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13094  010A16  0EFB               	movlw	high STR_108
 13095  010A18  0101               	movlb	1	; () banked
 13096  010A1A  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13097  010A1C  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 13098                           
 13099                           ;StringCommand.c: 271: }
 13100  010A20  EF7B  F093         	goto	l683
 13101  010A24                     l14777:
 13102                           
 13103                           ;StringCommand.c: 272: else if (StringMatch(Input, "bedroomshaker=on"))
 13104  010A24  C188  F10E         	movff	Command@Input,StringMatch@This
 13105  010A28  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 13106  010A2C  0E83               	movlw	low STR_109
 13107  010A2E  0101               	movlb	1	; () banked
 13108  010A30  6F10               	movwf	StringMatch@That& (0+255),b
 13109  010A32  0EF9               	movlw	high STR_109
 13110  010A34  0101               	movlb	1	; () banked
 13111  010A36  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 13112  010A38  EC94  F0BA         	call	_StringMatch	;wreg free
 13113  010A3C  0900               	iorlw	0
 13114  010A3E  B4D8               	btfsc	status,2,c
 13115  010A40  D05C               	goto	l14789
 13116                           
 13117                           ;StringCommand.c: 273: {
 13118                           ;StringCommand.c: 274: INTCONbits.GIE = 0;
 13119  010A42  9EF2               	bcf	intcon,7,c	;volatile
 13120                           
 13121                           ;StringCommand.c: 275: Send_Config2(0b00000001, BedON);
 13122  010A44  0EE9               	movlw	low _BedON
 13123  010A46  0101               	movlb	1	; () banked
 13124  010A48  6F19               	movwf	Send_Config2@data& (0+255),b
 13125  010A4A  0EED               	movlw	high _BedON
 13126  010A4C  0101               	movlb	1	; () banked
 13127  010A4E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13128  010A50  0E01               	movlw	1
 13129  010A52  EC12  F0BA         	call	_Send_Config2
 13130                           
 13131                           ;StringCommand.c: 276: Send_Config2(0b00000001, BedON);
 13132  010A56  0EE9               	movlw	low _BedON
 13133  010A58  0101               	movlb	1	; () banked
 13134  010A5A  6F19               	movwf	Send_Config2@data& (0+255),b
 13135  010A5C  0EED               	movlw	high _BedON
 13136  010A5E  0101               	movlb	1	; () banked
 13137  010A60  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13138  010A62  0E01               	movlw	1
 13139  010A64  EC12  F0BA         	call	_Send_Config2
 13140                           
 13141                           ;StringCommand.c: 277: Send_Config2(0b00000001, BedON);
 13142  010A68  0EE9               	movlw	low _BedON
 13143  010A6A  0101               	movlb	1	; () banked
 13144  010A6C  6F19               	movwf	Send_Config2@data& (0+255),b
 13145  010A6E  0EED               	movlw	high _BedON
 13146  010A70  0101               	movlb	1	; () banked
 13147  010A72  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13148  010A74  0E01               	movlw	1
 13149  010A76  EC12  F0BA         	call	_Send_Config2
 13150                           
 13151                           ;StringCommand.c: 278: Send_Config2(0b00000001, BedON);
 13152  010A7A  0EE9               	movlw	low _BedON
 13153  010A7C  0101               	movlb	1	; () banked
 13154  010A7E  6F19               	movwf	Send_Config2@data& (0+255),b
 13155  010A80  0EED               	movlw	high _BedON
 13156  010A82  0101               	movlb	1	; () banked
 13157  010A84  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13158  010A86  0E01               	movlw	1
 13159  010A88  EC12  F0BA         	call	_Send_Config2
 13160                           
 13161                           ;StringCommand.c: 279: Send_Config2(0b00000001, BedON);
 13162  010A8C  0EE9               	movlw	low _BedON
 13163  010A8E  0101               	movlb	1	; () banked
 13164  010A90  6F19               	movwf	Send_Config2@data& (0+255),b
 13165  010A92  0EED               	movlw	high _BedON
 13166  010A94  0101               	movlb	1	; () banked
 13167  010A96  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13168  010A98  0E01               	movlw	1
 13169  010A9A  EC12  F0BA         	call	_Send_Config2
 13170                           
 13171                           ;StringCommand.c: 280: Send_Config2(0b00000001, BedON);
 13172  010A9E  0EE9               	movlw	low _BedON
 13173  010AA0  0101               	movlb	1	; () banked
 13174  010AA2  6F19               	movwf	Send_Config2@data& (0+255),b
 13175  010AA4  0EED               	movlw	high _BedON
 13176  010AA6  0101               	movlb	1	; () banked
 13177  010AA8  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13178  010AAA  0E01               	movlw	1
 13179  010AAC  EC12  F0BA         	call	_Send_Config2
 13180                           
 13181                           ;StringCommand.c: 281: Send_Config2(0b00000001, BedON);
 13182  010AB0  0EE9               	movlw	low _BedON
 13183  010AB2  0101               	movlb	1	; () banked
 13184  010AB4  6F19               	movwf	Send_Config2@data& (0+255),b
 13185  010AB6  0EED               	movlw	high _BedON
 13186  010AB8  0101               	movlb	1	; () banked
 13187  010ABA  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13188  010ABC  0E01               	movlw	1
 13189  010ABE  EC12  F0BA         	call	_Send_Config2
 13190                           
 13191                           ;StringCommand.c: 282: Send_Config2(0b00000001, BedON);
 13192  010AC2  0EE9               	movlw	low _BedON
 13193  010AC4  0101               	movlb	1	; () banked
 13194  010AC6  6F19               	movwf	Send_Config2@data& (0+255),b
 13195  010AC8  0EED               	movlw	high _BedON
 13196  010ACA  0101               	movlb	1	; () banked
 13197  010ACC  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13198  010ACE  0E01               	movlw	1
 13199  010AD0  EC12  F0BA         	call	_Send_Config2
 13200                           
 13201                           ;StringCommand.c: 283: INTCONbits.GIE = 1;
 13202  010AD4  8EF2               	bsf	intcon,7,c	;volatile
 13203                           
 13204                           ;StringCommand.c: 284: UARTstring("Bedroom Shaker On");
 13205  010AD6  0EA4               	movlw	low STR_110
 13206  010AD8  0101               	movlb	1	; () banked
 13207  010ADA  6F19               	movwf	UARTstring@data& (0+255),b
 13208  010ADC  0EF8               	movlw	high STR_110
 13209  010ADE  0101               	movlb	1	; () banked
 13210  010AE0  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13211  010AE2  EC03  F0B8         	call	_UARTstring	;wreg free
 13212                           
 13213                           ;StringCommand.c: 285: LCDdisplayFeedback("Bedroom SKR On");
 13214  010AE6  0ED1               	movlw	low STR_111
 13215  010AE8  0101               	movlb	1	; () banked
 13216  010AEA  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13217  010AEC  0EFB               	movlw	high STR_111
 13218  010AEE  0101               	movlb	1	; () banked
 13219  010AF0  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13220  010AF2  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 13221                           
 13222                           ;StringCommand.c: 286: }
 13223  010AF6  EF7B  F093         	goto	l683
 13224  010AFA                     l14789:
 13225                           
 13226                           ;StringCommand.c: 287: else if (StringMatch(Input, "bedroomshaker=off"))
 13227  010AFA  C188  F10E         	movff	Command@Input,StringMatch@This
 13228  010AFE  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 13229  010B02  0E6E               	movlw	low STR_112
 13230  010B04  0101               	movlb	1	; () banked
 13231  010B06  6F10               	movwf	StringMatch@That& (0+255),b
 13232  010B08  0EF8               	movlw	high STR_112
 13233  010B0A  0101               	movlb	1	; () banked
 13234  010B0C  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 13235  010B0E  EC94  F0BA         	call	_StringMatch	;wreg free
 13236  010B12  0900               	iorlw	0
 13237  010B14  B4D8               	btfsc	status,2,c
 13238  010B16  EF7B  F093         	goto	l683
 13239                           
 13240                           ;StringCommand.c: 288: {
 13241                           ;StringCommand.c: 289: INTCONbits.GIE = 0;
 13242  010B1A  9EF2               	bcf	intcon,7,c	;volatile
 13243                           
 13244                           ;StringCommand.c: 290: Send_Config2(0b00000001, BedOFF);
 13245  010B1C  0ED9               	movlw	low _BedOFF
 13246  010B1E  0101               	movlb	1	; () banked
 13247  010B20  6F19               	movwf	Send_Config2@data& (0+255),b
 13248  010B22  0EED               	movlw	high _BedOFF
 13249  010B24  0101               	movlb	1	; () banked
 13250  010B26  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13251  010B28  0E01               	movlw	1
 13252  010B2A  EC12  F0BA         	call	_Send_Config2
 13253                           
 13254                           ;StringCommand.c: 291: Send_Config2(0b00000001, BedOFF);
 13255  010B2E  0ED9               	movlw	low _BedOFF
 13256  010B30  0101               	movlb	1	; () banked
 13257  010B32  6F19               	movwf	Send_Config2@data& (0+255),b
 13258  010B34  0EED               	movlw	high _BedOFF
 13259  010B36  0101               	movlb	1	; () banked
 13260  010B38  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13261  010B3A  0E01               	movlw	1
 13262  010B3C  EC12  F0BA         	call	_Send_Config2
 13263                           
 13264                           ;StringCommand.c: 292: Send_Config2(0b00000001, BedOFF);
 13265  010B40  0ED9               	movlw	low _BedOFF
 13266  010B42  0101               	movlb	1	; () banked
 13267  010B44  6F19               	movwf	Send_Config2@data& (0+255),b
 13268  010B46  0EED               	movlw	high _BedOFF
 13269  010B48  0101               	movlb	1	; () banked
 13270  010B4A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13271  010B4C  0E01               	movlw	1
 13272  010B4E  EC12  F0BA         	call	_Send_Config2
 13273                           
 13274                           ;StringCommand.c: 293: Send_Config2(0b00000001, BedOFF);
 13275  010B52  0ED9               	movlw	low _BedOFF
 13276  010B54  0101               	movlb	1	; () banked
 13277  010B56  6F19               	movwf	Send_Config2@data& (0+255),b
 13278  010B58  0EED               	movlw	high _BedOFF
 13279  010B5A  0101               	movlb	1	; () banked
 13280  010B5C  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13281  010B5E  0E01               	movlw	1
 13282  010B60  EC12  F0BA         	call	_Send_Config2
 13283                           
 13284                           ;StringCommand.c: 294: Send_Config2(0b00000001, BedOFF);
 13285  010B64  0ED9               	movlw	low _BedOFF
 13286  010B66  0101               	movlb	1	; () banked
 13287  010B68  6F19               	movwf	Send_Config2@data& (0+255),b
 13288  010B6A  0EED               	movlw	high _BedOFF
 13289  010B6C  0101               	movlb	1	; () banked
 13290  010B6E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13291  010B70  0E01               	movlw	1
 13292  010B72  EC12  F0BA         	call	_Send_Config2
 13293                           
 13294                           ;StringCommand.c: 295: Send_Config2(0b00000001, BedOFF);
 13295  010B76  0ED9               	movlw	low _BedOFF
 13296  010B78  0101               	movlb	1	; () banked
 13297  010B7A  6F19               	movwf	Send_Config2@data& (0+255),b
 13298  010B7C  0EED               	movlw	high _BedOFF
 13299  010B7E  0101               	movlb	1	; () banked
 13300  010B80  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13301  010B82  0E01               	movlw	1
 13302  010B84  EC12  F0BA         	call	_Send_Config2
 13303                           
 13304                           ;StringCommand.c: 296: Send_Config2(0b00000001, BedOFF);
 13305  010B88  0ED9               	movlw	low _BedOFF
 13306  010B8A  0101               	movlb	1	; () banked
 13307  010B8C  6F19               	movwf	Send_Config2@data& (0+255),b
 13308  010B8E  0EED               	movlw	high _BedOFF
 13309  010B90  0101               	movlb	1	; () banked
 13310  010B92  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13311  010B94  0E01               	movlw	1
 13312  010B96  EC12  F0BA         	call	_Send_Config2
 13313                           
 13314                           ;StringCommand.c: 297: Send_Config2(0b00000001, BedOFF);
 13315  010B9A  0ED9               	movlw	low _BedOFF
 13316  010B9C  0101               	movlb	1	; () banked
 13317  010B9E  6F19               	movwf	Send_Config2@data& (0+255),b
 13318  010BA0  0EED               	movlw	high _BedOFF
 13319  010BA2  0101               	movlb	1	; () banked
 13320  010BA4  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13321  010BA6  0E01               	movlw	1
 13322  010BA8  EC12  F0BA         	call	_Send_Config2
 13323                           
 13324                           ;StringCommand.c: 298: INTCONbits.GIE = 1;
 13325  010BAC  8EF2               	bsf	intcon,7,c	;volatile
 13326                           
 13327                           ;StringCommand.c: 299: UARTstring("Bedroom Shaker Off");
 13328  010BAE  0EDA               	movlw	low STR_113
 13329  010BB0  0101               	movlb	1	; () banked
 13330  010BB2  6F19               	movwf	UARTstring@data& (0+255),b
 13331  010BB4  0EF7               	movlw	high STR_113
 13332  010BB6  0101               	movlb	1	; () banked
 13333  010BB8  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13334  010BBA  EC03  F0B8         	call	_UARTstring	;wreg free
 13335                           
 13336                           ;StringCommand.c: 300: LCDdisplayFeedback("Bedroom SKR Off");
 13337  010BBE  0EC9               	movlw	low STR_114
 13338  010BC0  0101               	movlb	1	; () banked
 13339  010BC2  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13340  010BC4  0EFA               	movlw	high STR_114
 13341  010BC6  0101               	movlb	1	; () banked
 13342  010BC8  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13343  010BCA  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 13344                           
 13345                           ;StringCommand.c: 301: }
 13346                           ;StringCommand.c: 302: }
 13347  010BCE  EF7B  F093         	goto	l683
 13348  010BD2                     l14801:
 13349                           
 13350                           ;StringCommand.c: 303: else
 13351                           ;StringCommand.c: 304: {
 13352                           ;StringCommand.c: 305: UARTstring("Bedroom Task???");
 13353  010BD2  0E19               	movlw	low STR_115
 13354  010BD4  0101               	movlb	1	; () banked
 13355  010BD6  6F19               	movwf	UARTstring@data& (0+255),b
 13356  010BD8  0EFA               	movlw	high STR_115
 13357  010BDA  0101               	movlb	1	; () banked
 13358  010BDC  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13359  010BDE  EC03  F0B8         	call	_UARTstring	;wreg free
 13360                           
 13361                           ;StringCommand.c: 306: LCDdisplayFeedback("Bedroom Task???");
 13362  010BE2  0E19               	movlw	low STR_115
 13363  010BE4  0101               	movlb	1	; () banked
 13364  010BE6  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13365  010BE8  0EFA               	movlw	high STR_115
 13366  010BEA  0101               	movlb	1	; () banked
 13367  010BEC  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13368  010BEE  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 13369                           
 13370                           ;StringCommand.c: 307: }
 13371                           ;StringCommand.c: 308: }
 13372  010BF2  EF7B  F093         	goto	l683
 13373  010BF6                     l14803:
 13374                           
 13375                           ;StringCommand.c: 309: else
 13376                           ;StringCommand.c: 310: {
 13377                           ;StringCommand.c: 311: UARTstring("Bedroom Help Menu\r\n\n");
 13378  010BF6  0E13               	movlw	low STR_117
 13379  010BF8  0101               	movlb	1	; () banked
 13380  010BFA  6F19               	movwf	UARTstring@data& (0+255),b
 13381  010BFC  0EF7               	movlw	high STR_117
 13382  010BFE  0101               	movlb	1	; () banked
 13383  010C00  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13384  010C02  EC03  F0B8         	call	_UARTstring	;wreg free
 13385                           
 13386                           ;StringCommand.c: 312: UARTstring("Devices:\r\n");
 13387  010C06  0EB7               	movlw	low STR_61
 13388  010C08  0101               	movlb	1	; () banked
 13389  010C0A  6F19               	movwf	UARTstring@data& (0+255),b
 13390  010C0C  0EFD               	movlw	high STR_61
 13391  010C0E  0101               	movlb	1	; () banked
 13392  010C10  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13393  010C12  EC03  F0B8         	call	_UARTstring	;wreg free
 13394                           
 13395                           ;StringCommand.c: 313: UARTstring("light\r\n");
 13396  010C16  0E02               	movlw	low STR_86
 13397  010C18  0101               	movlb	1	; () banked
 13398  010C1A  6F19               	movwf	UARTstring@data& (0+255),b
 13399  010C1C  0EFF               	movlw	high STR_86
 13400  010C1E  0101               	movlb	1	; () banked
 13401  010C20  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13402  010C22  EC03  F0B8         	call	_UARTstring	;wreg free
 13403                           
 13404                           ;StringCommand.c: 314: UARTstring("fan\r\n");
 13405  010C26  0E89               	movlw	low STR_120
 13406  010C28  0101               	movlb	1	; () banked
 13407  010C2A  6F19               	movwf	UARTstring@data& (0+255),b
 13408  010C2C  0EFF               	movlw	high STR_120
 13409  010C2E  0101               	movlb	1	; () banked
 13410  010C30  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13411  010C32  EC03  F0B8         	call	_UARTstring	;wreg free
 13412                           
 13413                           ;StringCommand.c: 315: UARTstring("shaker\r\n\n");
 13414  010C36  0E04               	movlw	low STR_121
 13415  010C38  0101               	movlb	1	; () banked
 13416  010C3A  6F19               	movwf	UARTstring@data& (0+255),b
 13417  010C3C  0EFE               	movlw	high STR_121
 13418  010C3E  0101               	movlb	1	; () banked
 13419  010C40  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13420  010C42  EC03  F0B8         	call	_UARTstring	;wreg free
 13421                           
 13422                           ;StringCommand.c: 316: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 13423  010C46  0EEB               	movlw	low STR_64
 13424  010C48  0101               	movlb	1	; () banked
 13425  010C4A  6F19               	movwf	UARTstring@data& (0+255),b
 13426  010C4C  0EEE               	movlw	high STR_64
 13427  010C4E  0101               	movlb	1	; () banked
 13428  010C50  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13429  010C52  EC03  F0B8         	call	_UARTstring	;wreg free
 13430                           
 13431                           ;StringCommand.c: 317: UARTstring("i.e. Bedroom fan = On\r\n");
 13432  010C56  0E5E               	movlw	low STR_123
 13433  010C58  0101               	movlb	1	; () banked
 13434  010C5A  6F19               	movwf	UARTstring@data& (0+255),b
 13435  010C5C  0EF6               	movlw	high STR_123
 13436  010C5E  0101               	movlb	1	; () banked
 13437  010C60  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13438  010C62  EC03  F0B8         	call	_UARTstring	;wreg free
 13439                           
 13440                           ;StringCommand.c: 318: LCDdisplayFeedback("Bedroom Help???");
 13441  010C66  0E29               	movlw	low STR_124
 13442  010C68  0101               	movlb	1	; () banked
 13443  010C6A  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13444  010C6C  0EFA               	movlw	high STR_124
 13445  010C6E  0101               	movlb	1	; () banked
 13446  010C70  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13447  010C72  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 13448                           
 13449                           ;StringCommand.c: 319: LCD_Scroll("Bedroom Menu");
 13450  010C76  0E55               	movlw	low STR_125
 13451  010C78  0101               	movlb	1	; () banked
 13452  010C7A  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13453  010C7C  0EFD               	movlw	high STR_125
 13454  010C7E  0101               	movlb	1	; () banked
 13455  010C80  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13456  010C82  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 13457                           
 13458                           ;StringCommand.c: 320: LCD_Scroll("Devices:");
 13459  010C86  0E8F               	movlw	low STR_67
 13460  010C88  0101               	movlb	1	; () banked
 13461  010C8A  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13462  010C8C  0EFE               	movlw	high STR_67
 13463  010C8E  0101               	movlb	1	; () banked
 13464  010C90  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13465  010C92  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 13466                           
 13467                           ;StringCommand.c: 321: LCD_Scroll("Light");
 13468  010C96  0EA7               	movlw	low STR_93
 13469  010C98  0101               	movlb	1	; () banked
 13470  010C9A  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13471  010C9C  0EFF               	movlw	high STR_93
 13472  010C9E  0101               	movlb	1	; () banked
 13473  010CA0  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13474  010CA2  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 13475                           
 13476                           ;StringCommand.c: 322: LCD_Scroll("Fan");
 13477  010CA6  0EEC               	movlw	low STR_94
 13478  010CA8  0101               	movlb	1	; () banked
 13479  010CAA  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13480  010CAC  0EFF               	movlw	high STR_94
 13481  010CAE  0101               	movlb	1	; () banked
 13482  010CB0  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13483  010CB2  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 13484                           
 13485                           ;StringCommand.c: 323: LCD_Scroll("Shaker");
 13486  010CB6  0E75               	movlw	low STR_129
 13487  010CB8  0101               	movlb	1	; () banked
 13488  010CBA  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 13489  010CBC  0EFF               	movlw	high STR_129
 13490  010CBE  0101               	movlb	1	; () banked
 13491  010CC0  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13492  010CC2  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 13493                           
 13494                           ;StringCommand.c: 324: }
 13495                           ;StringCommand.c: 325: }
 13496  010CC6  EF7B  F093         	goto	l683
 13497  010CCA                     l14815:
 13498                           
 13499                           ;StringCommand.c: 327: else if (StringContains(Input, "color") || StringContains(Input, 
      +                          "white") || StringContains(Input, "christmas"))
 13500  010CCA  C188  F10E         	movff	Command@Input,StringContains@This
 13501  010CCE  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13502  010CD2  0EA1               	movlw	low STR_130
 13503  010CD4  0101               	movlb	1	; () banked
 13504  010CD6  6F10               	movwf	StringContains@That& (0+255),b
 13505  010CD8  0EFF               	movlw	high STR_130
 13506  010CDA  0101               	movlb	1	; () banked
 13507  010CDC  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13508  010CDE  EC54  F0BA         	call	_StringContains	;wreg free
 13509  010CE2  0900               	iorlw	0
 13510  010CE4  A4D8               	btfss	status,2,c
 13511  010CE6  D01E               	goto	l14821
 13512  010CE8  C188  F10E         	movff	Command@Input,StringContains@This
 13513  010CEC  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13514  010CF0  0E9B               	movlw	low STR_131
 13515  010CF2  0101               	movlb	1	; () banked
 13516  010CF4  6F10               	movwf	StringContains@That& (0+255),b
 13517  010CF6  0EFF               	movlw	high STR_131
 13518  010CF8  0101               	movlb	1	; () banked
 13519  010CFA  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13520  010CFC  EC54  F0BA         	call	_StringContains	;wreg free
 13521  010D00  0900               	iorlw	0
 13522  010D02  A4D8               	btfss	status,2,c
 13523  010D04  D00F               	goto	l14821
 13524  010D06  C188  F10E         	movff	Command@Input,StringContains@This
 13525  010D0A  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13526  010D0E  0E54               	movlw	low STR_132
 13527  010D10  0101               	movlb	1	; () banked
 13528  010D12  6F10               	movwf	StringContains@That& (0+255),b
 13529  010D14  0EFE               	movlw	high STR_132
 13530  010D16  0101               	movlb	1	; () banked
 13531  010D18  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13532  010D1A  EC54  F0BA         	call	_StringContains	;wreg free
 13533  010D1E  0900               	iorlw	0
 13534  010D20  B4D8               	btfsc	status,2,c
 13535  010D22  D1C6               	goto	l14877
 13536  010D24                     l14821:
 13537                           
 13538                           ;StringCommand.c: 328: {
 13539                           ;StringCommand.c: 329: if (!StringContains(Input, "?"))
 13540  010D24  C188  F10E         	movff	Command@Input,StringContains@This
 13541  010D28  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13542  010D2C  0E17               	movlw	low (STR_83+14)
 13543  010D2E  0101               	movlb	1	; () banked
 13544  010D30  6F10               	movwf	StringContains@That& (0+255),b
 13545  010D32  0EFA               	movlw	high (STR_83+14)
 13546  010D34  0101               	movlb	1	; () banked
 13547  010D36  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13548  010D38  EC54  F0BA         	call	_StringContains	;wreg free
 13549  010D3C  0900               	iorlw	0
 13550  010D3E  A4D8               	btfss	status,2,c
 13551  010D40  D165               	goto	l14867
 13552                           
 13553                           ;StringCommand.c: 330: {
 13554                           ;StringCommand.c: 331: if (StringContains(Input, "color") && StringContains(Input, "="))
 13555  010D42  C188  F10E         	movff	Command@Input,StringContains@This
 13556  010D46  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13557  010D4A  0EA1               	movlw	low STR_130
 13558  010D4C  0101               	movlb	1	; () banked
 13559  010D4E  6F10               	movwf	StringContains@That& (0+255),b
 13560  010D50  0EFF               	movlw	high STR_130
 13561  010D52  0101               	movlb	1	; () banked
 13562  010D54  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13563  010D56  EC54  F0BA         	call	_StringContains	;wreg free
 13564  010D5A  0900               	iorlw	0
 13565  010D5C  B4D8               	btfsc	status,2,c
 13566  010D5E  D062               	goto	l14837
 13567  010D60  C188  F10E         	movff	Command@Input,StringContains@This
 13568  010D64  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13569  010D68  0E05               	movlw	low (STR_201+11)
 13570  010D6A  0101               	movlb	1	; () banked
 13571  010D6C  6F10               	movwf	StringContains@That& (0+255),b
 13572  010D6E  0EFD               	movlw	high (STR_201+11)
 13573  010D70  0101               	movlb	1	; () banked
 13574  010D72  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13575  010D74  EC54  F0BA         	call	_StringContains	;wreg free
 13576  010D78  0900               	iorlw	0
 13577  010D7A  B4D8               	btfsc	status,2,c
 13578  010D7C  D053               	goto	l14837
 13579                           
 13580                           ;StringCommand.c: 332: {
 13581                           ;StringCommand.c: 333: INTCONbits.GIE = 0;
 13582  010D7E  9EF2               	bcf	intcon,7,c	;volatile
 13583                           
 13584                           ;StringCommand.c: 334: Send_Config1(0b00000001, TXdataF);
 13585  010D80  0E51               	movlw	low _TXdataF
 13586  010D82  0101               	movlb	1	; () banked
 13587  010D84  6F19               	movwf	Send_Config1@data& (0+255),b
 13588  010D86  0EEE               	movlw	high _TXdataF
 13589  010D88  0101               	movlb	1	; () banked
 13590  010D8A  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 13591  010D8C  0E01               	movlw	1
 13592  010D8E  EC2D  F0B2         	call	_Send_Config1
 13593                           
 13594                           ;StringCommand.c: 335: Send_Config1(0b00000001, TXdataF);
 13595  010D92  0E51               	movlw	low _TXdataF
 13596  010D94  0101               	movlb	1	; () banked
 13597  010D96  6F19               	movwf	Send_Config1@data& (0+255),b
 13598  010D98  0EEE               	movlw	high _TXdataF
 13599  010D9A  0101               	movlb	1	; () banked
 13600  010D9C  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 13601  010D9E  0E01               	movlw	1
 13602  010DA0  EC2D  F0B2         	call	_Send_Config1
 13603                           
 13604                           ;StringCommand.c: 336: Send_Config1(0b00000001, TXdataF);
 13605  010DA4  0E51               	movlw	low _TXdataF
 13606  010DA6  0101               	movlb	1	; () banked
 13607  010DA8  6F19               	movwf	Send_Config1@data& (0+255),b
 13608  010DAA  0EEE               	movlw	high _TXdataF
 13609  010DAC  0101               	movlb	1	; () banked
 13610  010DAE  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 13611  010DB0  0E01               	movlw	1
 13612  010DB2  EC2D  F0B2         	call	_Send_Config1
 13613                           
 13614                           ;StringCommand.c: 337: Send_Config1(0b00000001, TXdataF);
 13615  010DB6  0E51               	movlw	low _TXdataF
 13616  010DB8  0101               	movlb	1	; () banked
 13617  010DBA  6F19               	movwf	Send_Config1@data& (0+255),b
 13618  010DBC  0EEE               	movlw	high _TXdataF
 13619  010DBE  0101               	movlb	1	; () banked
 13620  010DC0  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 13621  010DC2  0E01               	movlw	1
 13622  010DC4  EC2D  F0B2         	call	_Send_Config1
 13623                           
 13624                           ;StringCommand.c: 338: Send_Config1(0b00000001, TXdataF);
 13625  010DC8  0E51               	movlw	low _TXdataF
 13626  010DCA  0101               	movlb	1	; () banked
 13627  010DCC  6F19               	movwf	Send_Config1@data& (0+255),b
 13628  010DCE  0EEE               	movlw	high _TXdataF
 13629  010DD0  0101               	movlb	1	; () banked
 13630  010DD2  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 13631  010DD4  0E01               	movlw	1
 13632  010DD6  EC2D  F0B2         	call	_Send_Config1
 13633                           
 13634                           ;StringCommand.c: 339: Send_Config1(0b00000001, TXdataF);
 13635  010DDA  0E51               	movlw	low _TXdataF
 13636  010DDC  0101               	movlb	1	; () banked
 13637  010DDE  6F19               	movwf	Send_Config1@data& (0+255),b
 13638  010DE0  0EEE               	movlw	high _TXdataF
 13639  010DE2  0101               	movlb	1	; () banked
 13640  010DE4  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 13641  010DE6  0E01               	movlw	1
 13642  010DE8  EC2D  F0B2         	call	_Send_Config1
 13643                           
 13644                           ;StringCommand.c: 340: Send_Config1(0b00000001, TXdataF);
 13645  010DEC  0E51               	movlw	low _TXdataF
 13646  010DEE  0101               	movlb	1	; () banked
 13647  010DF0  6F19               	movwf	Send_Config1@data& (0+255),b
 13648  010DF2  0EEE               	movlw	high _TXdataF
 13649  010DF4  0101               	movlb	1	; () banked
 13650  010DF6  6F1A               	movwf	(Send_Config1@data+1)& (0+255),b
 13651  010DF8  0E01               	movlw	1
 13652  010DFA  EC2D  F0B2         	call	_Send_Config1
 13653                           
 13654                           ;StringCommand.c: 341: INTCONbits.GIE = 1;
 13655  010DFE  8EF2               	bsf	intcon,7,c	;volatile
 13656                           
 13657                           ;StringCommand.c: 342: UARTstring("Christmas Tree Colored Lights Toggled");
 13658  010E00  0E5A               	movlw	low STR_136
 13659  010E02  0101               	movlb	1	; () banked
 13660  010E04  6F19               	movwf	UARTstring@data& (0+255),b
 13661  010E06  0EF2               	movlw	high STR_136
 13662  010E08  0101               	movlb	1	; () banked
 13663  010E0A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13664  010E0C  EC03  F0B8         	call	_UARTstring	;wreg free
 13665                           
 13666                           ;StringCommand.c: 343: LCDdisplayFeedback("XMAS Color TGLD");
 13667  010E10  0E69               	movlw	low STR_137
 13668  010E12  0101               	movlb	1	; () banked
 13669  010E14  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13670  010E16  0EFA               	movlw	high STR_137
 13671  010E18  0101               	movlb	1	; () banked
 13672  010E1A  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13673  010E1C  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 13674                           
 13675                           ;StringCommand.c: 344: }
 13676  010E20  EF7B  F093         	goto	l683
 13677  010E24                     l14837:
 13678                           
 13679                           ;StringCommand.c: 345: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=on"))
 13680  010E24  C188  F10E         	movff	Command@Input,StringContains@This
 13681  010E28  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13682  010E2C  0E9B               	movlw	low STR_131
 13683  010E2E  0101               	movlb	1	; () banked
 13684  010E30  6F10               	movwf	StringContains@That& (0+255),b
 13685  010E32  0EFF               	movlw	high STR_131
 13686  010E34  0101               	movlb	1	; () banked
 13687  010E36  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13688  010E38  EC54  F0BA         	call	_StringContains	;wreg free
 13689  010E3C  0900               	iorlw	0
 13690  010E3E  B4D8               	btfsc	status,2,c
 13691  010E40  D062               	goto	l14851
 13692  010E42  C188  F10E         	movff	Command@Input,StringContains@This
 13693  010E46  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13694  010E4A  0E2E               	movlw	low (STR_43+4)
 13695  010E4C  0101               	movlb	1	; () banked
 13696  010E4E  6F10               	movwf	StringContains@That& (0+255),b
 13697  010E50  0EFF               	movlw	high (STR_43+4)
 13698  010E52  0101               	movlb	1	; () banked
 13699  010E54  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13700  010E56  EC54  F0BA         	call	_StringContains	;wreg free
 13701  010E5A  0900               	iorlw	0
 13702  010E5C  B4D8               	btfsc	status,2,c
 13703  010E5E  D053               	goto	l14851
 13704                           
 13705                           ;StringCommand.c: 346: {
 13706                           ;StringCommand.c: 347: INTCONbits.GIE = 0;
 13707  010E60  9EF2               	bcf	intcon,7,c	;volatile
 13708                           
 13709                           ;StringCommand.c: 348: Send_Config2(0b00000001, Aux2ON);
 13710  010E62  0EA9               	movlw	low _Aux2ON
 13711  010E64  0101               	movlb	1	; () banked
 13712  010E66  6F19               	movwf	Send_Config2@data& (0+255),b
 13713  010E68  0EED               	movlw	high _Aux2ON
 13714  010E6A  0101               	movlb	1	; () banked
 13715  010E6C  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13716  010E6E  0E01               	movlw	1
 13717  010E70  EC12  F0BA         	call	_Send_Config2
 13718                           
 13719                           ;StringCommand.c: 349: Send_Config2(0b00000001, Aux2ON);
 13720  010E74  0EA9               	movlw	low _Aux2ON
 13721  010E76  0101               	movlb	1	; () banked
 13722  010E78  6F19               	movwf	Send_Config2@data& (0+255),b
 13723  010E7A  0EED               	movlw	high _Aux2ON
 13724  010E7C  0101               	movlb	1	; () banked
 13725  010E7E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13726  010E80  0E01               	movlw	1
 13727  010E82  EC12  F0BA         	call	_Send_Config2
 13728                           
 13729                           ;StringCommand.c: 350: Send_Config2(0b00000001, Aux2ON);
 13730  010E86  0EA9               	movlw	low _Aux2ON
 13731  010E88  0101               	movlb	1	; () banked
 13732  010E8A  6F19               	movwf	Send_Config2@data& (0+255),b
 13733  010E8C  0EED               	movlw	high _Aux2ON
 13734  010E8E  0101               	movlb	1	; () banked
 13735  010E90  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13736  010E92  0E01               	movlw	1
 13737  010E94  EC12  F0BA         	call	_Send_Config2
 13738                           
 13739                           ;StringCommand.c: 351: Send_Config2(0b00000001, Aux2ON);
 13740  010E98  0EA9               	movlw	low _Aux2ON
 13741  010E9A  0101               	movlb	1	; () banked
 13742  010E9C  6F19               	movwf	Send_Config2@data& (0+255),b
 13743  010E9E  0EED               	movlw	high _Aux2ON
 13744  010EA0  0101               	movlb	1	; () banked
 13745  010EA2  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13746  010EA4  0E01               	movlw	1
 13747  010EA6  EC12  F0BA         	call	_Send_Config2
 13748                           
 13749                           ;StringCommand.c: 352: Send_Config2(0b00000001, Aux2ON);
 13750  010EAA  0EA9               	movlw	low _Aux2ON
 13751  010EAC  0101               	movlb	1	; () banked
 13752  010EAE  6F19               	movwf	Send_Config2@data& (0+255),b
 13753  010EB0  0EED               	movlw	high _Aux2ON
 13754  010EB2  0101               	movlb	1	; () banked
 13755  010EB4  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13756  010EB6  0E01               	movlw	1
 13757  010EB8  EC12  F0BA         	call	_Send_Config2
 13758                           
 13759                           ;StringCommand.c: 353: Send_Config2(0b00000001, Aux2ON);
 13760  010EBC  0EA9               	movlw	low _Aux2ON
 13761  010EBE  0101               	movlb	1	; () banked
 13762  010EC0  6F19               	movwf	Send_Config2@data& (0+255),b
 13763  010EC2  0EED               	movlw	high _Aux2ON
 13764  010EC4  0101               	movlb	1	; () banked
 13765  010EC6  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13766  010EC8  0E01               	movlw	1
 13767  010ECA  EC12  F0BA         	call	_Send_Config2
 13768                           
 13769                           ;StringCommand.c: 354: Send_Config2(0b00000001, Aux2ON);
 13770  010ECE  0EA9               	movlw	low _Aux2ON
 13771  010ED0  0101               	movlb	1	; () banked
 13772  010ED2  6F19               	movwf	Send_Config2@data& (0+255),b
 13773  010ED4  0EED               	movlw	high _Aux2ON
 13774  010ED6  0101               	movlb	1	; () banked
 13775  010ED8  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13776  010EDA  0E01               	movlw	1
 13777  010EDC  EC12  F0BA         	call	_Send_Config2
 13778                           
 13779                           ;StringCommand.c: 355: INTCONbits.GIE = 1;
 13780  010EE0  8EF2               	bsf	intcon,7,c	;volatile
 13781                           
 13782                           ;StringCommand.c: 356: UARTstring("Christmas Tree White Lights On");
 13783  010EE2  0E3F               	movlw	low STR_140
 13784  010EE4  0101               	movlb	1	; () banked
 13785  010EE6  6F19               	movwf	UARTstring@data& (0+255),b
 13786  010EE8  0EF4               	movlw	high STR_140
 13787  010EEA  0101               	movlb	1	; () banked
 13788  010EEC  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13789  010EEE  EC03  F0B8         	call	_UARTstring	;wreg free
 13790                           
 13791                           ;StringCommand.c: 357: LCDdisplayFeedback("XMAS White On");
 13792  010EF2  0E63               	movlw	low STR_141
 13793  010EF4  0101               	movlb	1	; () banked
 13794  010EF6  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13795  010EF8  0EFC               	movlw	high STR_141
 13796  010EFA  0101               	movlb	1	; () banked
 13797  010EFC  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13798  010EFE  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 13799                           
 13800                           ;StringCommand.c: 358: }
 13801  010F02  EF7B  F093         	goto	l683
 13802  010F06                     l14851:
 13803                           
 13804                           ;StringCommand.c: 359: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=off"))
 13805  010F06  C188  F10E         	movff	Command@Input,StringContains@This
 13806  010F0A  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13807  010F0E  0E9B               	movlw	low STR_131
 13808  010F10  0101               	movlb	1	; () banked
 13809  010F12  6F10               	movwf	StringContains@That& (0+255),b
 13810  010F14  0EFF               	movlw	high STR_131
 13811  010F16  0101               	movlb	1	; () banked
 13812  010F18  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13813  010F1A  EC54  F0BA         	call	_StringContains	;wreg free
 13814  010F1E  0900               	iorlw	0
 13815  010F20  B4D8               	btfsc	status,2,c
 13816  010F22  D062               	goto	l14865
 13817  010F24  C188  F10E         	movff	Command@Input,StringContains@This
 13818  010F28  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 13819  010F2C  0EB7               	movlw	low (STR_46+4)
 13820  010F2E  0101               	movlb	1	; () banked
 13821  010F30  6F10               	movwf	StringContains@That& (0+255),b
 13822  010F32  0EFE               	movlw	high (STR_46+4)
 13823  010F34  0101               	movlb	1	; () banked
 13824  010F36  6F11               	movwf	(StringContains@That+1)& (0+255),b
 13825  010F38  EC54  F0BA         	call	_StringContains	;wreg free
 13826  010F3C  0900               	iorlw	0
 13827  010F3E  B4D8               	btfsc	status,2,c
 13828  010F40  D053               	goto	l14865
 13829                           
 13830                           ;StringCommand.c: 360: {
 13831                           ;StringCommand.c: 361: INTCONbits.GIE = 0;
 13832  010F42  9EF2               	bcf	intcon,7,c	;volatile
 13833                           
 13834                           ;StringCommand.c: 362: Send_Config2(0b00000001, Aux2OFF);
 13835  010F44  0E99               	movlw	low _Aux2OFF
 13836  010F46  0101               	movlb	1	; () banked
 13837  010F48  6F19               	movwf	Send_Config2@data& (0+255),b
 13838  010F4A  0EED               	movlw	high _Aux2OFF
 13839  010F4C  0101               	movlb	1	; () banked
 13840  010F4E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13841  010F50  0E01               	movlw	1
 13842  010F52  EC12  F0BA         	call	_Send_Config2
 13843                           
 13844                           ;StringCommand.c: 363: Send_Config2(0b00000001, Aux2OFF);
 13845  010F56  0E99               	movlw	low _Aux2OFF
 13846  010F58  0101               	movlb	1	; () banked
 13847  010F5A  6F19               	movwf	Send_Config2@data& (0+255),b
 13848  010F5C  0EED               	movlw	high _Aux2OFF
 13849  010F5E  0101               	movlb	1	; () banked
 13850  010F60  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13851  010F62  0E01               	movlw	1
 13852  010F64  EC12  F0BA         	call	_Send_Config2
 13853                           
 13854                           ;StringCommand.c: 364: Send_Config2(0b00000001, Aux2OFF);
 13855  010F68  0E99               	movlw	low _Aux2OFF
 13856  010F6A  0101               	movlb	1	; () banked
 13857  010F6C  6F19               	movwf	Send_Config2@data& (0+255),b
 13858  010F6E  0EED               	movlw	high _Aux2OFF
 13859  010F70  0101               	movlb	1	; () banked
 13860  010F72  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13861  010F74  0E01               	movlw	1
 13862  010F76  EC12  F0BA         	call	_Send_Config2
 13863                           
 13864                           ;StringCommand.c: 365: Send_Config2(0b00000001, Aux2OFF);
 13865  010F7A  0E99               	movlw	low _Aux2OFF
 13866  010F7C  0101               	movlb	1	; () banked
 13867  010F7E  6F19               	movwf	Send_Config2@data& (0+255),b
 13868  010F80  0EED               	movlw	high _Aux2OFF
 13869  010F82  0101               	movlb	1	; () banked
 13870  010F84  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13871  010F86  0E01               	movlw	1
 13872  010F88  EC12  F0BA         	call	_Send_Config2
 13873                           
 13874                           ;StringCommand.c: 366: Send_Config2(0b00000001, Aux2OFF);
 13875  010F8C  0E99               	movlw	low _Aux2OFF
 13876  010F8E  0101               	movlb	1	; () banked
 13877  010F90  6F19               	movwf	Send_Config2@data& (0+255),b
 13878  010F92  0EED               	movlw	high _Aux2OFF
 13879  010F94  0101               	movlb	1	; () banked
 13880  010F96  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13881  010F98  0E01               	movlw	1
 13882  010F9A  EC12  F0BA         	call	_Send_Config2
 13883                           
 13884                           ;StringCommand.c: 367: Send_Config2(0b00000001, Aux2OFF);
 13885  010F9E  0E99               	movlw	low _Aux2OFF
 13886  010FA0  0101               	movlb	1	; () banked
 13887  010FA2  6F19               	movwf	Send_Config2@data& (0+255),b
 13888  010FA4  0EED               	movlw	high _Aux2OFF
 13889  010FA6  0101               	movlb	1	; () banked
 13890  010FA8  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13891  010FAA  0E01               	movlw	1
 13892  010FAC  EC12  F0BA         	call	_Send_Config2
 13893                           
 13894                           ;StringCommand.c: 368: Send_Config2(0b00000001, Aux2OFF);
 13895  010FB0  0E99               	movlw	low _Aux2OFF
 13896  010FB2  0101               	movlb	1	; () banked
 13897  010FB4  6F19               	movwf	Send_Config2@data& (0+255),b
 13898  010FB6  0EED               	movlw	high _Aux2OFF
 13899  010FB8  0101               	movlb	1	; () banked
 13900  010FBA  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 13901  010FBC  0E01               	movlw	1
 13902  010FBE  EC12  F0BA         	call	_Send_Config2
 13903                           
 13904                           ;StringCommand.c: 369: INTCONbits.GIE = 1;
 13905  010FC2  8EF2               	bsf	intcon,7,c	;volatile
 13906                           
 13907                           ;StringCommand.c: 370: UARTstring("Christmas Tree White Lights Off");
 13908  010FC4  0E1F               	movlw	low STR_144
 13909  010FC6  0101               	movlb	1	; () banked
 13910  010FC8  6F19               	movwf	UARTstring@data& (0+255),b
 13911  010FCA  0EF4               	movlw	high STR_144
 13912  010FCC  0101               	movlb	1	; () banked
 13913  010FCE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13914  010FD0  EC03  F0B8         	call	_UARTstring	;wreg free
 13915                           
 13916                           ;StringCommand.c: 371: LCDdisplayFeedback("XMAS White Off");
 13917  010FD4  0E95               	movlw	low STR_145
 13918  010FD6  0101               	movlb	1	; () banked
 13919  010FD8  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13920  010FDA  0EFB               	movlw	high STR_145
 13921  010FDC  0101               	movlb	1	; () banked
 13922  010FDE  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13923  010FE0  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 13924                           
 13925                           ;StringCommand.c: 372: }
 13926  010FE4  EF7B  F093         	goto	l683
 13927  010FE8                     l14865:
 13928                           
 13929                           ;StringCommand.c: 373: else
 13930                           ;StringCommand.c: 374: {
 13931                           ;StringCommand.c: 375: UARTstring("Christmas What???");
 13932  010FE8  0E4A               	movlw	low STR_146
 13933  010FEA  0101               	movlb	1	; () banked
 13934  010FEC  6F19               	movwf	UARTstring@data& (0+255),b
 13935  010FEE  0EF8               	movlw	high STR_146
 13936  010FF0  0101               	movlb	1	; () banked
 13937  010FF2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13938  010FF4  EC03  F0B8         	call	_UARTstring	;wreg free
 13939                           
 13940                           ;StringCommand.c: 376: LCDdisplayFeedback("XMAS What???");
 13941  010FF8  0E07               	movlw	low STR_147
 13942  010FFA  0101               	movlb	1	; () banked
 13943  010FFC  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13944  010FFE  0EFD               	movlw	high STR_147
 13945  011000  0101               	movlb	1	; () banked
 13946  011002  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13947  011004  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 13948                           
 13949                           ;StringCommand.c: 377: }
 13950                           ;StringCommand.c: 378: }
 13951  011008  EF7B  F093         	goto	l683
 13952  01100C                     l14867:
 13953                           
 13954                           ;StringCommand.c: 379: else
 13955                           ;StringCommand.c: 380: {
 13956                           ;StringCommand.c: 381: UARTstring("Christmas tree Help Menu\r\n\n");
 13957  01100C  0ED3               	movlw	low STR_148
 13958  01100E  0101               	movlb	1	; () banked
 13959  011010  6F19               	movwf	UARTstring@data& (0+255),b
 13960  011012  0EF4               	movlw	high STR_148
 13961  011014  0101               	movlb	1	; () banked
 13962  011016  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13963  011018  EC03  F0B8         	call	_UARTstring	;wreg free
 13964                           
 13965                           ;StringCommand.c: 382: UARTstring("Devices:\r\n");
 13966  01101C  0EB7               	movlw	low STR_61
 13967  01101E  0101               	movlb	1	; () banked
 13968  011020  6F19               	movwf	UARTstring@data& (0+255),b
 13969  011022  0EFD               	movlw	high STR_61
 13970  011024  0101               	movlb	1	; () banked
 13971  011026  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13972  011028  EC03  F0B8         	call	_UARTstring	;wreg free
 13973                           
 13974                           ;StringCommand.c: 383: UARTstring("white lights\r\n");
 13975  01102C  0E68               	movlw	low STR_150
 13976  01102E  0101               	movlb	1	; () banked
 13977  011030  6F19               	movwf	UARTstring@data& (0+255),b
 13978  011032  0EFB               	movlw	high STR_150
 13979  011034  0101               	movlb	1	; () banked
 13980  011036  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13981  011038  EC03  F0B8         	call	_UARTstring	;wreg free
 13982                           
 13983                           ;StringCommand.c: 384: UARTstring("colored lights\r\n\n");
 13984  01103C  0E26               	movlw	low STR_151
 13985  01103E  0101               	movlb	1	; () banked
 13986  011040  6F19               	movwf	UARTstring@data& (0+255),b
 13987  011042  0EF8               	movlw	high STR_151
 13988  011044  0101               	movlb	1	; () banked
 13989  011046  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13990  011048  EC03  F0B8         	call	_UARTstring	;wreg free
 13991                           
 13992                           ;StringCommand.c: 385: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 13993  01104C  0EEB               	movlw	low STR_64
 13994  01104E  0101               	movlb	1	; () banked
 13995  011050  6F19               	movwf	UARTstring@data& (0+255),b
 13996  011052  0EEE               	movlw	high STR_64
 13997  011054  0101               	movlb	1	; () banked
 13998  011056  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 13999  011058  EC03  F0B8         	call	_UARTstring	;wreg free
 14000                           
 14001                           ;StringCommand.c: 386: UARTstring("i.e. Christmas Colored lights = On\r\n");
 14002  01105C  0EA6               	movlw	low STR_153
 14003  01105E  0101               	movlb	1	; () banked
 14004  011060  6F19               	movwf	UARTstring@data& (0+255),b
 14005  011062  0EF2               	movlw	high STR_153
 14006  011064  0101               	movlb	1	; () banked
 14007  011066  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14008  011068  EC03  F0B8         	call	_UARTstring	;wreg free
 14009                           
 14010                           ;StringCommand.c: 387: LCD_Scroll("XMAS Menu");
 14011  01106C  0E5E               	movlw	low STR_154
 14012  01106E  0101               	movlb	1	; () banked
 14013  011070  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14014  011072  0EFE               	movlw	high STR_154
 14015  011074  0101               	movlb	1	; () banked
 14016  011076  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14017  011078  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 14018                           
 14019                           ;StringCommand.c: 388: LCD_Scroll("Devices:");
 14020  01107C  0E8F               	movlw	low STR_67
 14021  01107E  0101               	movlb	1	; () banked
 14022  011080  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14023  011082  0EFE               	movlw	high STR_67
 14024  011084  0101               	movlb	1	; () banked
 14025  011086  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14026  011088  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 14027                           
 14028                           ;StringCommand.c: 389: LCD_Scroll("white");
 14029  01108C  0E9B               	movlw	low STR_131
 14030  01108E  0101               	movlb	1	; () banked
 14031  011090  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14032  011092  0EFF               	movlw	high STR_131
 14033  011094  0101               	movlb	1	; () banked
 14034  011096  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14035  011098  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 14036                           
 14037                           ;StringCommand.c: 390: LCD_Scroll("color");
 14038  01109C  0EA1               	movlw	low STR_130
 14039  01109E  0101               	movlb	1	; () banked
 14040  0110A0  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14041  0110A2  0EFF               	movlw	high STR_130
 14042  0110A4  0101               	movlb	1	; () banked
 14043  0110A6  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14044  0110A8  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 14045                           
 14046                           ;StringCommand.c: 391: }
 14047                           ;StringCommand.c: 392: }
 14048  0110AC  EF7B  F093         	goto	l683
 14049  0110B0                     l14877:
 14050                           
 14051                           ;StringCommand.c: 394: else if (StartsWith(Input, "red"))
 14052  0110B0  C188  F10E         	movff	Command@Input,StartsWith@This
 14053  0110B4  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 14054  0110B8  0EB2               	movlw	low (STR_206+25)
 14055  0110BA  0101               	movlb	1	; () banked
 14056  0110BC  6F10               	movwf	StartsWith@That& (0+255),b
 14057  0110BE  0EF4               	movlw	high (STR_206+25)
 14058  0110C0  0101               	movlb	1	; () banked
 14059  0110C2  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 14060  0110C4  EC3C  F0B9         	call	_StartsWith	;wreg free
 14061  0110C8  0900               	iorlw	0
 14062  0110CA  B4D8               	btfsc	status,2,c
 14063  0110CC  D13C               	goto	l14929
 14064                           
 14065                           ;StringCommand.c: 395: {
 14066                           ;StringCommand.c: 396: if (!StringContains(Input, "?"))
 14067  0110CE  C188  F10E         	movff	Command@Input,StringContains@This
 14068  0110D2  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 14069  0110D6  0E17               	movlw	low (STR_83+14)
 14070  0110D8  0101               	movlb	1	; () banked
 14071  0110DA  6F10               	movwf	StringContains@That& (0+255),b
 14072  0110DC  0EFA               	movlw	high (STR_83+14)
 14073  0110DE  0101               	movlb	1	; () banked
 14074  0110E0  6F11               	movwf	(StringContains@That+1)& (0+255),b
 14075  0110E2  EC54  F0BA         	call	_StringContains	;wreg free
 14076  0110E6  0900               	iorlw	0
 14077  0110E8  A4D8               	btfss	status,2,c
 14078  0110EA  D0FB               	goto	l14921
 14079                           
 14080                           ;StringCommand.c: 397: {
 14081                           ;StringCommand.c: 398: if (StartsWith(Input, "redled") || StartsWith(Input, "redledbrigh
      +                          tness"))
 14082  0110EC  C188  F10E         	movff	Command@Input,StartsWith@This
 14083  0110F0  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 14084  0110F4  0E6E               	movlw	low STR_160
 14085  0110F6  0101               	movlb	1	; () banked
 14086  0110F8  6F10               	movwf	StartsWith@That& (0+255),b
 14087  0110FA  0EFF               	movlw	high STR_160
 14088  0110FC  0101               	movlb	1	; () banked
 14089  0110FE  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 14090  011100  EC3C  F0B9         	call	_StartsWith	;wreg free
 14091  011104  0900               	iorlw	0
 14092  011106  A4D8               	btfss	status,2,c
 14093  011108  D00F               	goto	l14885
 14094  01110A  C188  F10E         	movff	Command@Input,StartsWith@This
 14095  01110E  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 14096  011112  0EA5               	movlw	low STR_161
 14097  011114  0101               	movlb	1	; () banked
 14098  011116  6F10               	movwf	StartsWith@That& (0+255),b
 14099  011118  0EF9               	movlw	high STR_161
 14100  01111A  0101               	movlb	1	; () banked
 14101  01111C  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 14102  01111E  EC3C  F0B9         	call	_StartsWith	;wreg free
 14103  011122  0900               	iorlw	0
 14104  011124  B4D8               	btfsc	status,2,c
 14105  011126  D0CB               	goto	l14919
 14106  011128                     l14885:
 14107                           
 14108                           ;StringCommand.c: 399: {
 14109                           ;StringCommand.c: 400: if (!StringContains(Input, "="))
 14110  011128  C188  F10E         	movff	Command@Input,StringContains@This
 14111  01112C  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 14112  011130  0E05               	movlw	low (STR_201+11)
 14113  011132  0101               	movlb	1	; () banked
 14114  011134  6F10               	movwf	StringContains@That& (0+255),b
 14115  011136  0EFD               	movlw	high (STR_201+11)
 14116  011138  0101               	movlb	1	; () banked
 14117  01113A  6F11               	movwf	(StringContains@That+1)& (0+255),b
 14118  01113C  EC54  F0BA         	call	_StringContains	;wreg free
 14119  011140  0900               	iorlw	0
 14120  011142  A4D8               	btfss	status,2,c
 14121  011144  D009               	goto	l14889
 14122                           
 14123                           ;StringCommand.c: 401: {
 14124                           ;StringCommand.c: 402: UARTstring("there is no question mark\r\n");
 14125  011146  0E0B               	movlw	low STR_163
 14126  011148  0101               	movlb	1	; () banked
 14127  01114A  6F19               	movwf	UARTstring@data& (0+255),b
 14128  01114C  0EF5               	movlw	high STR_163
 14129  01114E  0101               	movlb	1	; () banked
 14130  011150  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14131  011152  EC03  F0B8         	call	_UARTstring	;wreg free
 14132  011156  D000               	goto	l14889
 14133  011158                     l14889:
 14134                           
 14135                           ;StringCommand.c: 403: }
 14136                           ;StringCommand.c: 404: tempLONG = GetEnteredNumber(Input);
 14137  011158  C188  F11A         	movff	Command@Input,GetEnteredNumber@This
 14138  01115C  C189  F11B         	movff	Command@Input+1,GetEnteredNumber@This+1
 14139  011160  ECB2  F0A5         	call	_GetEnteredNumber	;wreg free
 14140  011164  C11A  F2DE         	movff	?_GetEnteredNumber,Command@tempLONG
 14141  011168  C11B  F2DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 14142  01116C  C11C  F2E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 14143  011170  C11D  F2E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 14144                           
 14145                           ;StringCommand.c: 405: if(tempLONG < 1000 && tempLONG >= 0 )
 14146  011174  0102               	movlb	2	; () banked
 14147  011176  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 14148  011178  D00D               	goto	l14893
 14149  01117A  0102               	movlb	2	; () banked
 14150  01117C  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 14151  01117E  0102               	movlb	2	; () banked
 14152  011180  11E0               	iorwf	(Command@tempLONG+2)& (0+255),w,b
 14153  011182  E110               	bnz	l14897
 14154  011184  0EE8               	movlw	232
 14155  011186  0102               	movlb	2	; () banked
 14156  011188  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 14157  01118A  0E03               	movlw	3
 14158  01118C  0102               	movlb	2	; () banked
 14159  01118E  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 14160  011190  B0D8               	btfsc	status,0,c
 14161  011192  D008               	goto	l14897
 14162  011194                     l14893:
 14163                           
 14164                           ; BSR set to: 2
 14165  011194  0102               	movlb	2	; () banked
 14166  011196  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 14167  011198  D005               	goto	l14897
 14168                           
 14169                           ; BSR set to: 2
 14170                           ;StringCommand.c: 406: {
 14171                           ;StringCommand.c: 407: duty = (int)tempLONG;
 14172  01119A  C2DE  F2DC         	movff	Command@tempLONG,Command@duty
 14173  01119E  C2DF  F2DD         	movff	Command@tempLONG+1,Command@duty+1
 14174  0111A2  D000               	goto	l14897
 14175  0111A4                     l14897:
 14176                           
 14177                           ; BSR set to: 2
 14178                           ;StringCommand.c: 408: }
 14179                           ;StringCommand.c: 409: if (tempLONG == 2147483645L)
 14180  0111A4  0EFD               	movlw	253
 14181  0111A6  0102               	movlb	2	; () banked
 14182  0111A8  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 14183  0111AA  E11D               	bnz	l14901
 14184  0111AC  0102               	movlb	2	; () banked
 14185  0111AE  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 14186  0111B0  E11A               	bnz	l14901
 14187  0111B2  0102               	movlb	2	; () banked
 14188  0111B4  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 14189  0111B6  E117               	bnz	l14901
 14190  0111B8  0E7F               	movlw	127
 14191  0111BA  0102               	movlb	2	; () banked
 14192  0111BC  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 14193  0111BE  A4D8               	btfss	status,2,c
 14194  0111C0  D012               	goto	l14901
 14195                           
 14196                           ; BSR set to: 2
 14197                           ;StringCommand.c: 410: {
 14198                           ;StringCommand.c: 411: UARTstring("Error: No number entered\r\n");
 14199  0111C2  0E5F               	movlw	low STR_164
 14200  0111C4  0101               	movlb	1	; () banked
 14201  0111C6  6F19               	movwf	UARTstring@data& (0+255),b
 14202  0111C8  0EF5               	movlw	high STR_164
 14203  0111CA  0101               	movlb	1	; () banked
 14204  0111CC  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14205  0111CE  EC03  F0B8         	call	_UARTstring	;wreg free
 14206                           
 14207                           ;StringCommand.c: 412: LCDdisplayFeedback("ERR: no number");
 14208  0111D2  0E0D               	movlw	low STR_165
 14209  0111D4  0101               	movlb	1	; () banked
 14210  0111D6  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14211  0111D8  0EFC               	movlw	high STR_165
 14212  0111DA  0101               	movlb	1	; () banked
 14213  0111DC  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14214  0111DE  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 14215                           
 14216                           ;StringCommand.c: 413: }
 14217  0111E2  EF7B  F093         	goto	l683
 14218  0111E6                     l14901:
 14219                           
 14220                           ;StringCommand.c: 414: else if (duty > 100)
 14221  0111E6  0102               	movlb	2	; () banked
 14222  0111E8  BFDD               	btfsc	(Command@duty+1)& (0+255),7,b
 14223  0111EA  D01A               	goto	l14905
 14224  0111EC  0102               	movlb	2	; () banked
 14225  0111EE  51DD               	movf	(Command@duty+1)& (0+255),w,b
 14226  0111F0  E105               	bnz	u18990
 14227  0111F2  0E65               	movlw	101
 14228  0111F4  0102               	movlb	2	; () banked
 14229  0111F6  5DDC               	subwf	Command@duty& (0+255),w,b
 14230  0111F8  A0D8               	btfss	status,0,c
 14231  0111FA  D012               	goto	l14905
 14232  0111FC                     u18990:
 14233                           
 14234                           ; BSR set to: 2
 14235                           ;StringCommand.c: 415: {
 14236                           ;StringCommand.c: 416: UARTstring("Invalid Dutycycle: Greater than 100\r\n");
 14237  0111FC  0E34               	movlw	low STR_166
 14238  0111FE  0101               	movlb	1	; () banked
 14239  011200  6F19               	movwf	UARTstring@data& (0+255),b
 14240  011202  0EF2               	movlw	high STR_166
 14241  011204  0101               	movlb	1	; () banked
 14242  011206  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14243  011208  EC03  F0B8         	call	_UARTstring	;wreg free
 14244                           
 14245                           ;StringCommand.c: 417: LCDdisplayFeedback("ERR: Duty > 100");
 14246  01120C  0EF9               	movlw	low STR_167
 14247  01120E  0101               	movlb	1	; () banked
 14248  011210  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14249  011212  0EF9               	movlw	high STR_167
 14250  011214  0101               	movlb	1	; () banked
 14251  011216  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14252  011218  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 14253                           
 14254                           ;StringCommand.c: 418: }
 14255  01121C  EF7B  F093         	goto	l683
 14256  011220                     l14905:
 14257                           
 14258                           ;StringCommand.c: 419: else if (duty < 0)
 14259  011220  0102               	movlb	2	; () banked
 14260  011222  AFDD               	btfss	(Command@duty+1)& (0+255),7,b
 14261  011224  D012               	goto	l14909
 14262                           
 14263                           ; BSR set to: 2
 14264                           ;StringCommand.c: 420: {
 14265                           ;StringCommand.c: 421: UARTstring("Invalid Dutycycle: Less than 0\r\n");
 14266  011226  0E7C               	movlw	low STR_168
 14267  011228  0101               	movlb	1	; () banked
 14268  01122A  6F19               	movwf	UARTstring@data& (0+255),b
 14269  01122C  0EF3               	movlw	high STR_168
 14270  01122E  0101               	movlb	1	; () banked
 14271  011230  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14272  011232  EC03  F0B8         	call	_UARTstring	;wreg free
 14273                           
 14274                           ;StringCommand.c: 422: LCDdisplayFeedback("ERR: Duty < 0");
 14275  011236  0E39               	movlw	low STR_169
 14276  011238  0101               	movlb	1	; () banked
 14277  01123A  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14278  01123C  0EFC               	movlw	high STR_169
 14279  01123E  0101               	movlb	1	; () banked
 14280  011240  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14281  011242  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 14282                           
 14283                           ;StringCommand.c: 423: }
 14284  011246  EF7B  F093         	goto	l683
 14285  01124A                     l14909:
 14286                           
 14287                           ;StringCommand.c: 424: else
 14288                           ;StringCommand.c: 425: {
 14289                           ;StringCommand.c: 426: SetDuty(duty);
 14290  01124A  0102               	movlb	2	; () banked
 14291  01124C  51DC               	movf	Command@duty& (0+255),w,b
 14292  01124E  ECAB  F0B5         	call	_SetDuty
 14293                           
 14294                           ;StringCommand.c: 427: sprintf(buf, "Dutycycle set to %d\r\n", duty);
 14295  011252  0E00               	movlw	low Command@buf
 14296  011254  0101               	movlb	1	; () banked
 14297  011256  6F24               	movwf	sprintf@sp& (0+255),b
 14298  011258  0E02               	movlw	high Command@buf
 14299  01125A  0101               	movlb	1	; () banked
 14300  01125C  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 14301  01125E  0ED1               	movlw	low STR_170
 14302  011260  0101               	movlb	1	; () banked
 14303  011262  6F26               	movwf	sprintf@f& (0+255),b
 14304  011264  0EF6               	movlw	high STR_170
 14305  011266  0101               	movlb	1	; () banked
 14306  011268  6F27               	movwf	(sprintf@f+1)& (0+255),b
 14307  01126A  C2DC  F128         	movff	Command@duty,?_sprintf+4
 14308  01126E  C2DD  F129         	movff	Command@duty+1,?_sprintf+5
 14309  011272  EC86  F093         	call	_sprintf	;wreg free
 14310                           
 14311                           ;StringCommand.c: 428: UARTstring(buf);
 14312  011276  0E00               	movlw	low Command@buf
 14313  011278  0101               	movlb	1	; () banked
 14314  01127A  6F19               	movwf	UARTstring@data& (0+255),b
 14315  01127C  0E02               	movlw	high Command@buf
 14316  01127E  0101               	movlb	1	; () banked
 14317  011280  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14318  011282  EC03  F0B8         	call	_UARTstring	;wreg free
 14319                           
 14320                           ;StringCommand.c: 429: sprintf(buf, "Duty set to %d", duty);
 14321  011286  0E00               	movlw	low Command@buf
 14322  011288  0101               	movlb	1	; () banked
 14323  01128A  6F24               	movwf	sprintf@sp& (0+255),b
 14324  01128C  0E02               	movlw	high Command@buf
 14325  01128E  0101               	movlb	1	; () banked
 14326  011290  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 14327  011292  0E86               	movlw	low STR_171
 14328  011294  0101               	movlb	1	; () banked
 14329  011296  6F26               	movwf	sprintf@f& (0+255),b
 14330  011298  0EFB               	movlw	high STR_171
 14331  01129A  0101               	movlb	1	; () banked
 14332  01129C  6F27               	movwf	(sprintf@f+1)& (0+255),b
 14333  01129E  C2DC  F128         	movff	Command@duty,?_sprintf+4
 14334  0112A2  C2DD  F129         	movff	Command@duty+1,?_sprintf+5
 14335  0112A6  EC86  F093         	call	_sprintf	;wreg free
 14336                           
 14337                           ;StringCommand.c: 430: LCDdisplayFeedback(buf);
 14338  0112AA  0E00               	movlw	low Command@buf
 14339  0112AC  0101               	movlb	1	; () banked
 14340  0112AE  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14341  0112B0  0E02               	movlw	high Command@buf
 14342  0112B2  0101               	movlb	1	; () banked
 14343  0112B4  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14344  0112B6  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 14345                           
 14346                           ;StringCommand.c: 431: }
 14347                           ;StringCommand.c: 432: }
 14348  0112BA  EF7B  F093         	goto	l683
 14349  0112BE                     l14919:
 14350                           
 14351                           ;StringCommand.c: 433: else
 14352                           ;StringCommand.c: 434: {
 14353                           ;StringCommand.c: 435: UARTstring("redled what??? Do you mean Red Led Brightness???");
 14354  0112BE  0EF3               	movlw	low STR_172
 14355  0112C0  0101               	movlb	1	; () banked
 14356  0112C2  6F19               	movwf	UARTstring@data& (0+255),b
 14357  0112C4  0EF0               	movlw	high STR_172
 14358  0112C6  0101               	movlb	1	; () banked
 14359  0112C8  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14360  0112CA  EC03  F0B8         	call	_UARTstring	;wreg free
 14361                           
 14362                           ;StringCommand.c: 436: LCDdisplayFeedback("Red LED What???");
 14363  0112CE  0E39               	movlw	low STR_173
 14364  0112D0  0101               	movlb	1	; () banked
 14365  0112D2  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14366  0112D4  0EFA               	movlw	high STR_173
 14367  0112D6  0101               	movlb	1	; () banked
 14368  0112D8  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14369  0112DA  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 14370                           
 14371                           ;StringCommand.c: 437: }
 14372                           ;StringCommand.c: 438: }
 14373  0112DE  EF7B  F093         	goto	l683
 14374  0112E2                     l14921:
 14375                           
 14376                           ;StringCommand.c: 439: else
 14377                           ;StringCommand.c: 440: {
 14378                           ;StringCommand.c: 441: UARTstring("Red LED PWM Help Menu\r\n\n");
 14379  0112E2  0EE3               	movlw	low STR_174
 14380  0112E4  0101               	movlb	1	; () banked
 14381  0112E6  6F19               	movwf	UARTstring@data& (0+255),b
 14382  0112E8  0EF5               	movlw	high STR_174
 14383  0112EA  0101               	movlb	1	; () banked
 14384  0112EC  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14385  0112EE  EC03  F0B8         	call	_UARTstring	;wreg free
 14386                           
 14387                           ;StringCommand.c: 442: UARTstring("To set te PWM brightness enter 'Red LED brightness = 
      +                          dutycycle'\r\n");
 14388  0112F2  0E2F               	movlw	low STR_175
 14389  0112F4  0101               	movlb	1	; () banked
 14390  0112F6  6F19               	movwf	UARTstring@data& (0+255),b
 14391  0112F8  0EEF               	movlw	high STR_175
 14392  0112FA  0101               	movlb	1	; () banked
 14393  0112FC  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14394  0112FE  EC03  F0B8         	call	_UARTstring	;wreg free
 14395                           
 14396                           ;StringCommand.c: 443: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 14397  011302  0E0A               	movlw	low STR_176
 14398  011304  0101               	movlb	1	; () banked
 14399  011306  6F19               	movwf	UARTstring@data& (0+255),b
 14400  011308  0EF2               	movlw	high STR_176
 14401  01130A  0101               	movlb	1	; () banked
 14402  01130C  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14403  01130E  EC03  F0B8         	call	_UARTstring	;wreg free
 14404                           
 14405                           ;StringCommand.c: 444: LCD_Scroll("Red LED Contrast");
 14406  011312  0EC7               	movlw	low STR_177
 14407  011314  0101               	movlb	1	; () banked
 14408  011316  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14409  011318  0EF9               	movlw	high STR_177
 14410  01131A  0101               	movlb	1	; () banked
 14411  01131C  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14412  01131E  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 14413                           
 14414                           ;StringCommand.c: 445: LCD_Scroll("Commands:");
 14415  011322  0E36               	movlw	low STR_178
 14416  011324  0101               	movlb	1	; () banked
 14417  011326  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14418  011328  0EFE               	movlw	high STR_178
 14419  01132A  0101               	movlb	1	; () banked
 14420  01132C  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14421  01132E  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 14422                           
 14423                           ;StringCommand.c: 446: LCD_Scroll("Red LED=#");
 14424  011332  0E22               	movlw	low STR_179
 14425  011334  0101               	movlb	1	; () banked
 14426  011336  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14427  011338  0EFE               	movlw	high STR_179
 14428  01133A  0101               	movlb	1	; () banked
 14429  01133C  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14430  01133E  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 14431                           
 14432                           ;StringCommand.c: 447: }
 14433                           ;StringCommand.c: 448: }
 14434  011342  EF7B  F093         	goto	l683
 14435  011346                     l14929:
 14436                           
 14437                           ;StringCommand.c: 450: else if (StartsWith(Input, "contrast"))
 14438  011346  C188  F10E         	movff	Command@Input,StartsWith@This
 14439  01134A  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 14440  01134E  0EC5               	movlw	low STR_180
 14441  011350  0101               	movlb	1	; () banked
 14442  011352  6F10               	movwf	StartsWith@That& (0+255),b
 14443  011354  0EFE               	movlw	high STR_180
 14444  011356  0101               	movlb	1	; () banked
 14445  011358  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 14446  01135A  EC3C  F0B9         	call	_StartsWith	;wreg free
 14447  01135E  0900               	iorlw	0
 14448  011360  B4D8               	btfsc	status,2,c
 14449  011362  D10A               	goto	l14975
 14450                           
 14451                           ;StringCommand.c: 451: {
 14452                           ;StringCommand.c: 452: if (!StringContains(Input, "?"))
 14453  011364  C188  F10E         	movff	Command@Input,StringContains@This
 14454  011368  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 14455  01136C  0E17               	movlw	low (STR_83+14)
 14456  01136E  0101               	movlb	1	; () banked
 14457  011370  6F10               	movwf	StringContains@That& (0+255),b
 14458  011372  0EFA               	movlw	high (STR_83+14)
 14459  011374  0101               	movlb	1	; () banked
 14460  011376  6F11               	movwf	(StringContains@That+1)& (0+255),b
 14461  011378  EC54  F0BA         	call	_StringContains	;wreg free
 14462  01137C  0900               	iorlw	0
 14463  01137E  A4D8               	btfss	status,2,c
 14464  011380  D0C9               	goto	l14967
 14465                           
 14466                           ;StringCommand.c: 453: {
 14467                           ;StringCommand.c: 454: if (!StringContains(Input, "="))
 14468  011382  C188  F10E         	movff	Command@Input,StringContains@This
 14469  011386  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 14470  01138A  0E05               	movlw	low (STR_201+11)
 14471  01138C  0101               	movlb	1	; () banked
 14472  01138E  6F10               	movwf	StringContains@That& (0+255),b
 14473  011390  0EFD               	movlw	high (STR_201+11)
 14474  011392  0101               	movlb	1	; () banked
 14475  011394  6F11               	movwf	(StringContains@That+1)& (0+255),b
 14476  011396  EC54  F0BA         	call	_StringContains	;wreg free
 14477  01139A  0900               	iorlw	0
 14478  01139C  A4D8               	btfss	status,2,c
 14479  01139E  D007               	goto	l14937
 14480                           
 14481                           ;StringCommand.c: 455: {
 14482                           ;StringCommand.c: 456: StringAddEqual(Input);
 14483  0113A0  C188  F11D         	movff	Command@Input,StringAddEqual@Input
 14484  0113A4  C189  F11E         	movff	Command@Input+1,StringAddEqual@Input+1
 14485  0113A8  EC9D  F0A6         	call	_StringAddEqual	;wreg free
 14486  0113AC  D000               	goto	l14937
 14487  0113AE                     l14937:
 14488                           
 14489                           ;StringCommand.c: 457: }
 14490                           ;StringCommand.c: 458: tempLONG = GetEnteredNumber(Input);
 14491  0113AE  C188  F11A         	movff	Command@Input,GetEnteredNumber@This
 14492  0113B2  C189  F11B         	movff	Command@Input+1,GetEnteredNumber@This+1
 14493  0113B6  ECB2  F0A5         	call	_GetEnteredNumber	;wreg free
 14494  0113BA  C11A  F2DE         	movff	?_GetEnteredNumber,Command@tempLONG
 14495  0113BE  C11B  F2DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 14496  0113C2  C11C  F2E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 14497  0113C6  C11D  F2E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 14498                           
 14499                           ;StringCommand.c: 459: if(tempLONG < 1000 && tempLONG >= 0 )
 14500  0113CA  0102               	movlb	2	; () banked
 14501  0113CC  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 14502  0113CE  D00D               	goto	l14941
 14503  0113D0  0102               	movlb	2	; () banked
 14504  0113D2  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 14505  0113D4  0102               	movlb	2	; () banked
 14506  0113D6  11E0               	iorwf	(Command@tempLONG+2)& (0+255),w,b
 14507  0113D8  E110               	bnz	l14945
 14508  0113DA  0EE8               	movlw	232
 14509  0113DC  0102               	movlb	2	; () banked
 14510  0113DE  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 14511  0113E0  0E03               	movlw	3
 14512  0113E2  0102               	movlb	2	; () banked
 14513  0113E4  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 14514  0113E6  B0D8               	btfsc	status,0,c
 14515  0113E8  D008               	goto	l14945
 14516  0113EA                     l14941:
 14517                           
 14518                           ; BSR set to: 2
 14519  0113EA  0102               	movlb	2	; () banked
 14520  0113EC  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 14521  0113EE  D005               	goto	l14945
 14522                           
 14523                           ; BSR set to: 2
 14524                           ;StringCommand.c: 460: {
 14525                           ;StringCommand.c: 461: contrast = (int)tempLONG;
 14526  0113F0  C2DE  F2D8         	movff	Command@tempLONG,Command@contrast
 14527  0113F4  C2DF  F2D9         	movff	Command@tempLONG+1,Command@contrast+1
 14528  0113F8  D000               	goto	l14945
 14529  0113FA                     l14945:
 14530                           
 14531                           ; BSR set to: 2
 14532                           ;StringCommand.c: 462: }
 14533                           ;StringCommand.c: 463: if (tempLONG == 2147483645L)
 14534  0113FA  0EFD               	movlw	253
 14535  0113FC  0102               	movlb	2	; () banked
 14536  0113FE  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 14537  011400  E11D               	bnz	l14949
 14538  011402  0102               	movlb	2	; () banked
 14539  011404  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 14540  011406  E11A               	bnz	l14949
 14541  011408  0102               	movlb	2	; () banked
 14542  01140A  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 14543  01140C  E117               	bnz	l14949
 14544  01140E  0E7F               	movlw	127
 14545  011410  0102               	movlb	2	; () banked
 14546  011412  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 14547  011414  A4D8               	btfss	status,2,c
 14548  011416  D012               	goto	l14949
 14549                           
 14550                           ; BSR set to: 2
 14551                           ;StringCommand.c: 464: {
 14552                           ;StringCommand.c: 465: UARTstring("Error: No number entered\r\n");
 14553  011418  0E5F               	movlw	low STR_164
 14554  01141A  0101               	movlb	1	; () banked
 14555  01141C  6F19               	movwf	UARTstring@data& (0+255),b
 14556  01141E  0EF5               	movlw	high STR_164
 14557  011420  0101               	movlb	1	; () banked
 14558  011422  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14559  011424  EC03  F0B8         	call	_UARTstring	;wreg free
 14560                           
 14561                           ;StringCommand.c: 466: LCDdisplayFeedback("ERR: No number");
 14562  011428  0EFE               	movlw	low STR_184
 14563  01142A  0101               	movlb	1	; () banked
 14564  01142C  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14565  01142E  0EFB               	movlw	high STR_184
 14566  011430  0101               	movlb	1	; () banked
 14567  011432  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14568  011434  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 14569                           
 14570                           ;StringCommand.c: 467: }
 14571  011438  EF7B  F093         	goto	l683
 14572  01143C                     l14949:
 14573                           
 14574                           ;StringCommand.c: 468: else if (contrast > 100)
 14575  01143C  0102               	movlb	2	; () banked
 14576  01143E  BFD9               	btfsc	(Command@contrast+1)& (0+255),7,b
 14577  011440  D01A               	goto	l14953
 14578  011442  0102               	movlb	2	; () banked
 14579  011444  51D9               	movf	(Command@contrast+1)& (0+255),w,b
 14580  011446  E105               	bnz	u19070
 14581  011448  0E65               	movlw	101
 14582  01144A  0102               	movlb	2	; () banked
 14583  01144C  5DD8               	subwf	Command@contrast& (0+255),w,b
 14584  01144E  A0D8               	btfss	status,0,c
 14585  011450  D012               	goto	l14953
 14586  011452                     u19070:
 14587                           
 14588                           ; BSR set to: 2
 14589                           ;StringCommand.c: 469: {
 14590                           ;StringCommand.c: 470: UARTstring("Invalid Contrast Duty cycle: Greater than 100\r\n");
 14591  011452  0E24               	movlw	low STR_185
 14592  011454  0101               	movlb	1	; () banked
 14593  011456  6F19               	movwf	UARTstring@data& (0+255),b
 14594  011458  0EF1               	movlw	high STR_185
 14595  01145A  0101               	movlb	1	; () banked
 14596  01145C  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14597  01145E  EC03  F0B8         	call	_UARTstring	;wreg free
 14598                           
 14599                           ;StringCommand.c: 471: LCDdisplayFeedback("ERR: CNST > 100");
 14600  011462  0EE9               	movlw	low STR_186
 14601  011464  0101               	movlb	1	; () banked
 14602  011466  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14603  011468  0EF9               	movlw	high STR_186
 14604  01146A  0101               	movlb	1	; () banked
 14605  01146C  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14606  01146E  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 14607                           
 14608                           ;StringCommand.c: 472: }
 14609  011472  EF7B  F093         	goto	l683
 14610  011476                     l14953:
 14611                           
 14612                           ;StringCommand.c: 473: else if (contrast < 0)
 14613  011476  0102               	movlb	2	; () banked
 14614  011478  AFD9               	btfss	(Command@contrast+1)& (0+255),7,b
 14615  01147A  D012               	goto	l14957
 14616                           
 14617                           ; BSR set to: 2
 14618                           ;StringCommand.c: 474: {
 14619                           ;StringCommand.c: 475: UARTstring("Invalid Contrast Duty Cycle: Less than 0\r\n");
 14620  01147C  0EDF               	movlw	low STR_187
 14621  01147E  0101               	movlb	1	; () banked
 14622  011480  6F19               	movwf	UARTstring@data& (0+255),b
 14623  011482  0EF1               	movlw	high STR_187
 14624  011484  0101               	movlb	1	; () banked
 14625  011486  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14626  011488  EC03  F0B8         	call	_UARTstring	;wreg free
 14627                           
 14628                           ;StringCommand.c: 476: LCDdisplayFeedback("ERR: CNST < 0");
 14629  01148C  0E2B               	movlw	low STR_188
 14630  01148E  0101               	movlb	1	; () banked
 14631  011490  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14632  011492  0EFC               	movlw	high STR_188
 14633  011494  0101               	movlb	1	; () banked
 14634  011496  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14635  011498  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 14636                           
 14637                           ;StringCommand.c: 477: }
 14638  01149C  EF7B  F093         	goto	l683
 14639  0114A0                     l14957:
 14640                           
 14641                           ;StringCommand.c: 478: else
 14642                           ;StringCommand.c: 479: {
 14643                           ;StringCommand.c: 480: SetContrast(contrast);
 14644  0114A0  0102               	movlb	2	; () banked
 14645  0114A2  51D8               	movf	Command@contrast& (0+255),w,b
 14646  0114A4  EC69  F0B3         	call	_SetContrast
 14647                           
 14648                           ;StringCommand.c: 481: sprintf(buf, "Contrast Duty Cycle set to %d\r\n", contrast);
 14649  0114A8  0E00               	movlw	low Command@buf
 14650  0114AA  0101               	movlb	1	; () banked
 14651  0114AC  6F24               	movwf	sprintf@sp& (0+255),b
 14652  0114AE  0E02               	movlw	high Command@buf
 14653  0114B0  0101               	movlb	1	; () banked
 14654  0114B2  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 14655  0114B4  0EFF               	movlw	low STR_189
 14656  0114B6  0101               	movlb	1	; () banked
 14657  0114B8  6F26               	movwf	sprintf@f& (0+255),b
 14658  0114BA  0EF3               	movlw	high STR_189
 14659  0114BC  0101               	movlb	1	; () banked
 14660  0114BE  6F27               	movwf	(sprintf@f+1)& (0+255),b
 14661  0114C0  C2D8  F128         	movff	Command@contrast,?_sprintf+4
 14662  0114C4  C2D9  F129         	movff	Command@contrast+1,?_sprintf+5
 14663  0114C8  EC86  F093         	call	_sprintf	;wreg free
 14664                           
 14665                           ;StringCommand.c: 482: UARTstring(buf);
 14666  0114CC  0E00               	movlw	low Command@buf
 14667  0114CE  0101               	movlb	1	; () banked
 14668  0114D0  6F19               	movwf	UARTstring@data& (0+255),b
 14669  0114D2  0E02               	movlw	high Command@buf
 14670  0114D4  0101               	movlb	1	; () banked
 14671  0114D6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14672  0114D8  EC03  F0B8         	call	_UARTstring	;wreg free
 14673                           
 14674                           ;StringCommand.c: 483: sprintf(buf, "CNST set to %d", duty);
 14675  0114DC  0E00               	movlw	low Command@buf
 14676  0114DE  0101               	movlb	1	; () banked
 14677  0114E0  6F24               	movwf	sprintf@sp& (0+255),b
 14678  0114E2  0E02               	movlw	high Command@buf
 14679  0114E4  0101               	movlb	1	; () banked
 14680  0114E6  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 14681  0114E8  0E77               	movlw	low STR_190
 14682  0114EA  0101               	movlb	1	; () banked
 14683  0114EC  6F26               	movwf	sprintf@f& (0+255),b
 14684  0114EE  0EFB               	movlw	high STR_190
 14685  0114F0  0101               	movlb	1	; () banked
 14686  0114F2  6F27               	movwf	(sprintf@f+1)& (0+255),b
 14687  0114F4  C2DC  F128         	movff	Command@duty,?_sprintf+4
 14688  0114F8  C2DD  F129         	movff	Command@duty+1,?_sprintf+5
 14689  0114FC  EC86  F093         	call	_sprintf	;wreg free
 14690                           
 14691                           ;StringCommand.c: 484: LCDdisplayFeedback(buf);
 14692  011500  0E00               	movlw	low Command@buf
 14693  011502  0101               	movlb	1	; () banked
 14694  011504  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14695  011506  0E02               	movlw	high Command@buf
 14696  011508  0101               	movlb	1	; () banked
 14697  01150A  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14698  01150C  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 14699                           
 14700                           ;StringCommand.c: 485: }
 14701                           ;StringCommand.c: 486: }
 14702  011510  EF7B  F093         	goto	l683
 14703  011514                     l14967:
 14704                           
 14705                           ;StringCommand.c: 487: else
 14706                           ;StringCommand.c: 488: {
 14707                           ;StringCommand.c: 489: UARTstring("Contrast PWM Help Menu\r\n\n");
 14708  011514  0EAF               	movlw	low STR_191
 14709  011516  0101               	movlb	1	; () banked
 14710  011518  6F19               	movwf	UARTstring@data& (0+255),b
 14711  01151A  0EF5               	movlw	high STR_191
 14712  01151C  0101               	movlb	1	; () banked
 14713  01151E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14714  011520  EC03  F0B8         	call	_UARTstring	;wreg free
 14715                           
 14716                           ;StringCommand.c: 490: UARTstring("To set Contrast PWM brightness enter 'Contrast = duty
      +                          cycle'\r\n");
 14717  011524  0E71               	movlw	low STR_192
 14718  011526  0101               	movlb	1	; () banked
 14719  011528  6F19               	movwf	UARTstring@data& (0+255),b
 14720  01152A  0EEF               	movlw	high STR_192
 14721  01152C  0101               	movlb	1	; () banked
 14722  01152E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14723  011530  EC03  F0B8         	call	_UARTstring	;wreg free
 14724                           
 14725                           ;StringCommand.c: 491: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 14726  011534  0E0A               	movlw	low STR_176
 14727  011536  0101               	movlb	1	; () banked
 14728  011538  6F19               	movwf	UARTstring@data& (0+255),b
 14729  01153A  0EF2               	movlw	high STR_176
 14730  01153C  0101               	movlb	1	; () banked
 14731  01153E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14732  011540  EC03  F0B8         	call	_UARTstring	;wreg free
 14733                           
 14734                           ;StringCommand.c: 492: LCD_Scroll("LCD Contrast");
 14735  011544  0E48               	movlw	low STR_194
 14736  011546  0101               	movlb	1	; () banked
 14737  011548  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14738  01154A  0EFD               	movlw	high STR_194
 14739  01154C  0101               	movlb	1	; () banked
 14740  01154E  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14741  011550  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 14742                           
 14743                           ;StringCommand.c: 493: LCD_Scroll("Commands:");
 14744  011554  0E36               	movlw	low STR_178
 14745  011556  0101               	movlb	1	; () banked
 14746  011558  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14747  01155A  0EFE               	movlw	high STR_178
 14748  01155C  0101               	movlb	1	; () banked
 14749  01155E  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14750  011560  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 14751                           
 14752                           ;StringCommand.c: 494: LCD_Scroll("Contrast#");
 14753  011564  0E2C               	movlw	low STR_196
 14754  011566  0101               	movlb	1	; () banked
 14755  011568  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 14756  01156A  0EFE               	movlw	high STR_196
 14757  01156C  0101               	movlb	1	; () banked
 14758  01156E  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14759  011570  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 14760                           
 14761                           ;StringCommand.c: 495: }
 14762                           ;StringCommand.c: 496: }
 14763  011574  EF7B  F093         	goto	l683
 14764  011578                     l14975:
 14765                           
 14766                           ;StringCommand.c: 498: else if (StartsWith(Input, "adc"))
 14767  011578  C188  F10E         	movff	Command@Input,StartsWith@This
 14768  01157C  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 14769  011580  0EE0               	movlw	low STR_197
 14770  011582  0101               	movlb	1	; () banked
 14771  011584  6F10               	movwf	StartsWith@That& (0+255),b
 14772  011586  0EFF               	movlw	high STR_197
 14773  011588  0101               	movlb	1	; () banked
 14774  01158A  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 14775  01158C  EC3C  F0B9         	call	_StartsWith	;wreg free
 14776  011590  0900               	iorlw	0
 14777  011592  B4D8               	btfsc	status,2,c
 14778  011594  D16C               	goto	l15035
 14779                           
 14780                           ;StringCommand.c: 499: {
 14781                           ;StringCommand.c: 500: if (!StringContains(Input, "?"))
 14782  011596  C188  F10E         	movff	Command@Input,StringContains@This
 14783  01159A  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 14784  01159E  0E17               	movlw	low (STR_83+14)
 14785  0115A0  0101               	movlb	1	; () banked
 14786  0115A2  6F10               	movwf	StringContains@That& (0+255),b
 14787  0115A4  0EFA               	movlw	high (STR_83+14)
 14788  0115A6  0101               	movlb	1	; () banked
 14789  0115A8  6F11               	movwf	(StringContains@That+1)& (0+255),b
 14790  0115AA  EC54  F0BA         	call	_StringContains	;wreg free
 14791  0115AE  0900               	iorlw	0
 14792  0115B0  A4D8               	btfss	status,2,c
 14793  0115B2  D11B               	goto	l15027
 14794                           
 14795                           ;StringCommand.c: 501: {
 14796                           ;StringCommand.c: 502: if (!StringContains(Input, "="))
 14797  0115B4  C188  F10E         	movff	Command@Input,StringContains@This
 14798  0115B8  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 14799  0115BC  0E05               	movlw	low (STR_201+11)
 14800  0115BE  0101               	movlb	1	; () banked
 14801  0115C0  6F10               	movwf	StringContains@That& (0+255),b
 14802  0115C2  0EFD               	movlw	high (STR_201+11)
 14803  0115C4  0101               	movlb	1	; () banked
 14804  0115C6  6F11               	movwf	(StringContains@That+1)& (0+255),b
 14805  0115C8  EC54  F0BA         	call	_StringContains	;wreg free
 14806  0115CC  0900               	iorlw	0
 14807  0115CE  A4D8               	btfss	status,2,c
 14808  0115D0  D007               	goto	l14983
 14809                           
 14810                           ;StringCommand.c: 503: {
 14811                           ;StringCommand.c: 504: StringAddEqual(Input);
 14812  0115D2  C188  F11D         	movff	Command@Input,StringAddEqual@Input
 14813  0115D6  C189  F11E         	movff	Command@Input+1,StringAddEqual@Input+1
 14814  0115DA  EC9D  F0A6         	call	_StringAddEqual	;wreg free
 14815  0115DE  D000               	goto	l14983
 14816  0115E0                     l14983:
 14817                           
 14818                           ;StringCommand.c: 505: }
 14819                           ;StringCommand.c: 506: tempLONG = GetEnteredNumber(Input);
 14820  0115E0  C188  F11A         	movff	Command@Input,GetEnteredNumber@This
 14821  0115E4  C189  F11B         	movff	Command@Input+1,GetEnteredNumber@This+1
 14822  0115E8  ECB2  F0A5         	call	_GetEnteredNumber	;wreg free
 14823  0115EC  C11A  F2DE         	movff	?_GetEnteredNumber,Command@tempLONG
 14824  0115F0  C11B  F2DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 14825  0115F4  C11C  F2E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 14826  0115F8  C11D  F2E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 14827                           
 14828                           ;StringCommand.c: 507: if(tempLONG < 1000 && tempLONG >= 0 )
 14829  0115FC  0102               	movlb	2	; () banked
 14830  0115FE  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 14831  011600  D00D               	goto	l14987
 14832  011602  0102               	movlb	2	; () banked
 14833  011604  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 14834  011606  0102               	movlb	2	; () banked
 14835  011608  11E0               	iorwf	(Command@tempLONG+2)& (0+255),w,b
 14836  01160A  E110               	bnz	l14991
 14837  01160C  0EE8               	movlw	232
 14838  01160E  0102               	movlb	2	; () banked
 14839  011610  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 14840  011612  0E03               	movlw	3
 14841  011614  0102               	movlb	2	; () banked
 14842  011616  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 14843  011618  B0D8               	btfsc	status,0,c
 14844  01161A  D008               	goto	l14991
 14845  01161C                     l14987:
 14846                           
 14847                           ; BSR set to: 2
 14848  01161C  0102               	movlb	2	; () banked
 14849  01161E  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 14850  011620  D005               	goto	l14991
 14851                           
 14852                           ; BSR set to: 2
 14853                           ;StringCommand.c: 508: {
 14854                           ;StringCommand.c: 509: channel = (int)tempLONG;
 14855  011622  C2DE  F2DA         	movff	Command@tempLONG,Command@channel
 14856  011626  C2DF  F2DB         	movff	Command@tempLONG+1,Command@channel+1
 14857  01162A  D000               	goto	l14991
 14858  01162C                     l14991:
 14859                           
 14860                           ; BSR set to: 2
 14861                           ;StringCommand.c: 510: }
 14862                           ;StringCommand.c: 511: if (tempLONG == 2147483645L) {
 14863  01162C  0EFD               	movlw	253
 14864  01162E  0102               	movlb	2	; () banked
 14865  011630  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 14866  011632  E11D               	bnz	l14995
 14867  011634  0102               	movlb	2	; () banked
 14868  011636  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 14869  011638  E11A               	bnz	l14995
 14870  01163A  0102               	movlb	2	; () banked
 14871  01163C  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 14872  01163E  E117               	bnz	l14995
 14873  011640  0E7F               	movlw	127
 14874  011642  0102               	movlb	2	; () banked
 14875  011644  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 14876  011646  A4D8               	btfss	status,2,c
 14877  011648  D012               	goto	l14995
 14878                           
 14879                           ; BSR set to: 2
 14880                           ;StringCommand.c: 512: UARTstring("Error: only use one equal sign\r\n");
 14881  01164A  0EBE               	movlw	low STR_200
 14882  01164C  0101               	movlb	1	; () banked
 14883  01164E  6F19               	movwf	UARTstring@data& (0+255),b
 14884  011650  0EF3               	movlw	high STR_200
 14885  011652  0101               	movlb	1	; () banked
 14886  011654  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14887  011656  EC03  F0B8         	call	_UARTstring	;wreg free
 14888                           
 14889                           ;StringCommand.c: 513: LCDdisplayFeedback("ERR: Use 1 =");
 14890  01165A  0EFA               	movlw	low STR_201
 14891  01165C  0101               	movlb	1	; () banked
 14892  01165E  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14893  011660  0EFC               	movlw	high STR_201
 14894  011662  0101               	movlb	1	; () banked
 14895  011664  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14896  011666  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 14897                           
 14898                           ;StringCommand.c: 514: }
 14899  01166A  EF7B  F093         	goto	l683
 14900  01166E                     l14995:
 14901                           
 14902                           ;StringCommand.c: 515: else if (channel < 0)
 14903  01166E  0102               	movlb	2	; () banked
 14904  011670  AFDB               	btfss	(Command@channel+1)& (0+255),7,b
 14905  011672  D012               	goto	l14999
 14906                           
 14907                           ; BSR set to: 2
 14908                           ;StringCommand.c: 516: {
 14909                           ;StringCommand.c: 517: UARTstring("Error: No negative channels\r\n");
 14910  011674  0E5E               	movlw	low STR_202
 14911  011676  0101               	movlb	1	; () banked
 14912  011678  6F19               	movwf	UARTstring@data& (0+255),b
 14913  01167A  0EF4               	movlw	high STR_202
 14914  01167C  0101               	movlb	1	; () banked
 14915  01167E  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14916  011680  EC03  F0B8         	call	_UARTstring	;wreg free
 14917                           
 14918                           ;StringCommand.c: 518: LCDdisplayFeedback("ERR: Use + Chnl");
 14919  011684  0EF9               	movlw	low STR_203
 14920  011686  0101               	movlb	1	; () banked
 14921  011688  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14922  01168A  0EFA               	movlw	high STR_203
 14923  01168C  0101               	movlb	1	; () banked
 14924  01168E  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14925  011690  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 14926                           
 14927                           ;StringCommand.c: 519: }
 14928  011694  EF7B  F093         	goto	l683
 14929  011698                     l14999:
 14930                           
 14931                           ;StringCommand.c: 520: else if (channel >= 32000)
 14932  011698  0102               	movlb	2	; () banked
 14933  01169A  BFDB               	btfsc	(Command@channel+1)& (0+255),7,b
 14934  01169C  D017               	goto	l15003
 14935  01169E  0E7D               	movlw	125
 14936  0116A0  0102               	movlb	2	; () banked
 14937  0116A2  5DDB               	subwf	(Command@channel+1)& (0+255),w,b
 14938  0116A4  A0D8               	btfss	status,0,c
 14939  0116A6  D012               	goto	l15003
 14940                           
 14941                           ; BSR set to: 2
 14942                           ;StringCommand.c: 521: {
 14943                           ;StringCommand.c: 522: UARTstring("Error: in parsing command\r\n");
 14944  0116A8  0EEF               	movlw	low STR_204
 14945  0116AA  0101               	movlb	1	; () banked
 14946  0116AC  6F19               	movwf	UARTstring@data& (0+255),b
 14947  0116AE  0EF4               	movlw	high STR_204
 14948  0116B0  0101               	movlb	1	; () banked
 14949  0116B2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14950  0116B4  EC03  F0B8         	call	_UARTstring	;wreg free
 14951                           
 14952                           ;StringCommand.c: 523: LCDdisplayFeedback("ERR: Cant parse");
 14953  0116B8  0EB9               	movlw	low STR_205
 14954  0116BA  0101               	movlb	1	; () banked
 14955  0116BC  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14956  0116BE  0EFA               	movlw	high STR_205
 14957  0116C0  0101               	movlb	1	; () banked
 14958  0116C2  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14959  0116C4  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 14960                           
 14961                           ;StringCommand.c: 524: }
 14962  0116C8  EF7B  F093         	goto	l683
 14963  0116CC                     l15003:
 14964                           
 14965                           ;StringCommand.c: 525: else if (channel != 0)
 14966  0116CC  0102               	movlb	2	; () banked
 14967  0116CE  51DA               	movf	Command@channel& (0+255),w,b
 14968  0116D0  0102               	movlb	2	; () banked
 14969  0116D2  11DB               	iorwf	(Command@channel+1)& (0+255),w,b
 14970  0116D4  B4D8               	btfsc	status,2,c
 14971  0116D6  D036               	goto	l15011
 14972                           
 14973                           ; BSR set to: 2
 14974                           ;StringCommand.c: 526: {
 14975                           ;StringCommand.c: 527: sprintf(buf, "Channel %d is not configured", channel);
 14976  0116D8  0E00               	movlw	low Command@buf
 14977  0116DA  0101               	movlb	1	; () banked
 14978  0116DC  6F24               	movwf	sprintf@sp& (0+255),b
 14979  0116DE  0E02               	movlw	high Command@buf
 14980  0116E0  0101               	movlb	1	; () banked
 14981  0116E2  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 14982  0116E4  0E99               	movlw	low STR_206
 14983  0116E6  0101               	movlb	1	; () banked
 14984  0116E8  6F26               	movwf	sprintf@f& (0+255),b
 14985  0116EA  0EF4               	movlw	high STR_206
 14986  0116EC  0101               	movlb	1	; () banked
 14987  0116EE  6F27               	movwf	(sprintf@f+1)& (0+255),b
 14988  0116F0  C2DA  F128         	movff	Command@channel,?_sprintf+4
 14989  0116F4  C2DB  F129         	movff	Command@channel+1,?_sprintf+5
 14990  0116F8  EC86  F093         	call	_sprintf	;wreg free
 14991                           
 14992                           ;StringCommand.c: 528: UARTstring(buf);
 14993  0116FC  0E00               	movlw	low Command@buf
 14994  0116FE  0101               	movlb	1	; () banked
 14995  011700  6F19               	movwf	UARTstring@data& (0+255),b
 14996  011702  0E02               	movlw	high Command@buf
 14997  011704  0101               	movlb	1	; () banked
 14998  011706  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 14999  011708  EC03  F0B8         	call	_UARTstring	;wreg free
 15000                           
 15001                           ;StringCommand.c: 529: sprintf(buf, "Chnl set to %d\r\n", duty);
 15002  01170C  0E00               	movlw	low Command@buf
 15003  01170E  0101               	movlb	1	; () banked
 15004  011710  6F24               	movwf	sprintf@sp& (0+255),b
 15005  011712  0E02               	movlw	high Command@buf
 15006  011714  0101               	movlb	1	; () banked
 15007  011716  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 15008  011718  0E0C               	movlw	low STR_207
 15009  01171A  0101               	movlb	1	; () banked
 15010  01171C  6F26               	movwf	sprintf@f& (0+255),b
 15011  01171E  0EF9               	movlw	high STR_207
 15012  011720  0101               	movlb	1	; () banked
 15013  011722  6F27               	movwf	(sprintf@f+1)& (0+255),b
 15014  011724  C2DC  F128         	movff	Command@duty,?_sprintf+4
 15015  011728  C2DD  F129         	movff	Command@duty+1,?_sprintf+5
 15016  01172C  EC86  F093         	call	_sprintf	;wreg free
 15017                           
 15018                           ;StringCommand.c: 530: LCDdisplayFeedback(buf);
 15019  011730  0E00               	movlw	low Command@buf
 15020  011732  0101               	movlb	1	; () banked
 15021  011734  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15022  011736  0E02               	movlw	high Command@buf
 15023  011738  0101               	movlb	1	; () banked
 15024  01173A  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15025  01173C  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 15026                           
 15027                           ;StringCommand.c: 531: }
 15028  011740  EF7B  F093         	goto	l683
 15029  011744                     l15011:
 15030                           
 15031                           ;StringCommand.c: 532: else
 15032                           ;StringCommand.c: 533: {
 15033                           ;StringCommand.c: 534: LATE |= 0b00000010;
 15034  011744  828D               	bsf	3981,1,c	;volatile
 15035                           
 15036                           ;StringCommand.c: 535: delayUS(1000);
 15037  011746  0EE8               	movlw	232
 15038  011748  0101               	movlb	1	; () banked
 15039  01174A  6F0E               	movwf	delayUS@US& (0+255),b
 15040  01174C  0E03               	movlw	3
 15041  01174E  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 15042  011750  0E00               	movlw	0
 15043  011752  6F10               	movwf	(delayUS@US+2)& (0+255),b
 15044  011754  0E00               	movlw	0
 15045  011756  6F11               	movwf	(delayUS@US+3)& (0+255),b
 15046  011758  EC58  F0BD         	call	_delayUS	;wreg free
 15047                           
 15048                           ;StringCommand.c: 536: ADC_Value = InternalADC_Read(channel);
 15049  01175C  0102               	movlb	2	; () banked
 15050  01175E  51DA               	movf	Command@channel& (0+255),w,b
 15051  011760  ECC3  F0BD         	call	_InternalADC_Read
 15052  011764  C11D  F2C8         	movff	?_InternalADC_Read,Command@ADC_Value
 15053  011768  C11E  F2C9         	movff	?_InternalADC_Read+1,Command@ADC_Value+1
 15054                           
 15055                           ;StringCommand.c: 537: sprintf(buf, "ADC channel %d = %d", channel, ADC_Value);
 15056  01176C  0E00               	movlw	low Command@buf
 15057  01176E  0101               	movlb	1	; () banked
 15058  011770  6F24               	movwf	sprintf@sp& (0+255),b
 15059  011772  0E02               	movlw	high Command@buf
 15060  011774  0101               	movlb	1	; () banked
 15061  011776  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 15062  011778  0E51               	movlw	low STR_208
 15063  01177A  0101               	movlb	1	; () banked
 15064  01177C  6F26               	movwf	sprintf@f& (0+255),b
 15065  01177E  0EF7               	movlw	high STR_208
 15066  011780  0101               	movlb	1	; () banked
 15067  011782  6F27               	movwf	(sprintf@f+1)& (0+255),b
 15068  011784  C2DA  F128         	movff	Command@channel,?_sprintf+4
 15069  011788  C2DB  F129         	movff	Command@channel+1,?_sprintf+5
 15070  01178C  C2C8  F12A         	movff	Command@ADC_Value,?_sprintf+6
 15071  011790  C2C9  F12B         	movff	Command@ADC_Value+1,?_sprintf+7
 15072  011794  EC86  F093         	call	_sprintf	;wreg free
 15073                           
 15074                           ;StringCommand.c: 538: LATE &= ~0b00000010;
 15075  011798  928D               	bcf	3981,1,c	;volatile
 15076                           
 15077                           ;StringCommand.c: 539: UARTstring(buf);
 15078  01179A  0E00               	movlw	low Command@buf
 15079  01179C  0101               	movlb	1	; () banked
 15080  01179E  6F19               	movwf	UARTstring@data& (0+255),b
 15081  0117A0  0E02               	movlw	high Command@buf
 15082  0117A2  0101               	movlb	1	; () banked
 15083  0117A4  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15084  0117A6  EC03  F0B8         	call	_UARTstring	;wreg free
 15085                           
 15086                           ;StringCommand.c: 540: sprintf(buf, "Chnl %d = %d", channel, ADC_Value);
 15087  0117AA  0E00               	movlw	low Command@buf
 15088  0117AC  0101               	movlb	1	; () banked
 15089  0117AE  6F24               	movwf	sprintf@sp& (0+255),b
 15090  0117B0  0E02               	movlw	high Command@buf
 15091  0117B2  0101               	movlb	1	; () banked
 15092  0117B4  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 15093  0117B6  0E14               	movlw	low STR_209
 15094  0117B8  0101               	movlb	1	; () banked
 15095  0117BA  6F26               	movwf	sprintf@f& (0+255),b
 15096  0117BC  0EFD               	movlw	high STR_209
 15097  0117BE  0101               	movlb	1	; () banked
 15098  0117C0  6F27               	movwf	(sprintf@f+1)& (0+255),b
 15099  0117C2  C2DA  F128         	movff	Command@channel,?_sprintf+4
 15100  0117C6  C2DB  F129         	movff	Command@channel+1,?_sprintf+5
 15101  0117CA  C2C8  F12A         	movff	Command@ADC_Value,?_sprintf+6
 15102  0117CE  C2C9  F12B         	movff	Command@ADC_Value+1,?_sprintf+7
 15103  0117D2  EC86  F093         	call	_sprintf	;wreg free
 15104                           
 15105                           ;StringCommand.c: 541: LCDdisplayFeedback(buf);
 15106  0117D6  0E00               	movlw	low Command@buf
 15107  0117D8  0101               	movlb	1	; () banked
 15108  0117DA  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15109  0117DC  0E02               	movlw	high Command@buf
 15110  0117DE  0101               	movlb	1	; () banked
 15111  0117E0  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15112  0117E2  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 15113                           
 15114                           ;StringCommand.c: 542: }
 15115                           ;StringCommand.c: 543: }
 15116  0117E6  EF7B  F093         	goto	l683
 15117  0117EA                     l15027:
 15118                           
 15119                           ;StringCommand.c: 544: else
 15120                           ;StringCommand.c: 545: {
 15121                           ;StringCommand.c: 546: UARTstring("ADC Help Menu\r\n\n");
 15122  0117EA  0EEA               	movlw	low STR_210
 15123  0117EC  0101               	movlb	1	; () banked
 15124  0117EE  6F19               	movwf	UARTstring@data& (0+255),b
 15125  0117F0  0EF8               	movlw	high STR_210
 15126  0117F2  0101               	movlb	1	; () banked
 15127  0117F4  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15128  0117F6  EC03  F0B8         	call	_UARTstring	;wreg free
 15129                           
 15130                           ;StringCommand.c: 547: UARTstring("Channels:\r\n");
 15131  0117FA  0E7B               	movlw	low STR_211
 15132  0117FC  0101               	movlb	1	; () banked
 15133  0117FE  6F19               	movwf	UARTstring@data& (0+255),b
 15134  011800  0EFD               	movlw	high STR_211
 15135  011802  0101               	movlb	1	; () banked
 15136  011804  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15137  011806  EC03  F0B8         	call	_UARTstring	;wreg free
 15138                           
 15139                           ;StringCommand.c: 548: UARTstring("0\r\n\n");
 15140  01180A  0EB3               	movlw	low STR_212
 15141  01180C  0101               	movlb	1	; () banked
 15142  01180E  6F19               	movwf	UARTstring@data& (0+255),b
 15143  011810  0EFF               	movlw	high STR_212
 15144  011812  0101               	movlb	1	; () banked
 15145  011814  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15146  011816  EC03  F0B8         	call	_UARTstring	;wreg free
 15147                           
 15148                           ;StringCommand.c: 549: UARTstring("To read and adc channel, type the command\r\n ADC"
 15149                           ;StringCommand.c: 550: " followed by 'Channel' \r\n");
 15150  01181A  0E5D               	movlw	low STR_213
 15151  01181C  0101               	movlb	1	; () banked
 15152  01181E  6F19               	movwf	UARTstring@data& (0+255),b
 15153  011820  0EEE               	movlw	high STR_213
 15154  011822  0101               	movlb	1	; () banked
 15155  011824  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15156  011826  EC03  F0B8         	call	_UARTstring	;wreg free
 15157                           
 15158                           ;StringCommand.c: 551: UARTstring("i.e. ADC 0\r\n");
 15159  01182A  0ED3               	movlw	low STR_214
 15160  01182C  0101               	movlb	1	; () banked
 15161  01182E  6F19               	movwf	UARTstring@data& (0+255),b
 15162  011830  0EFC               	movlw	high STR_214
 15163  011832  0101               	movlb	1	; () banked
 15164  011834  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15165  011836  EC03  F0B8         	call	_UARTstring	;wreg free
 15166                           
 15167                           ;StringCommand.c: 552: LCD_Scroll("ADC Menu");
 15168  01183A  0ECE               	movlw	low STR_215
 15169  01183C  0101               	movlb	1	; () banked
 15170  01183E  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15171  011840  0EFE               	movlw	high STR_215
 15172  011842  0101               	movlb	1	; () banked
 15173  011844  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15174  011846  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 15175                           
 15176                           ;StringCommand.c: 553: LCD_Scroll("Commands:");
 15177  01184A  0E36               	movlw	low STR_178
 15178  01184C  0101               	movlb	1	; () banked
 15179  01184E  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15180  011850  0EFE               	movlw	high STR_178
 15181  011852  0101               	movlb	1	; () banked
 15182  011854  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15183  011856  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 15184                           
 15185                           ;StringCommand.c: 554: LCD_Scroll("0");
 15186  01185A  0E37               	movlw	low (STR_188+12)
 15187  01185C  0101               	movlb	1	; () banked
 15188  01185E  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15189  011860  0EFC               	movlw	high (STR_188+12)
 15190  011862  0101               	movlb	1	; () banked
 15191  011864  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15192  011866  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 15193                           
 15194                           ;StringCommand.c: 555: }
 15195                           ;StringCommand.c: 556: }
 15196  01186A  EF7B  F093         	goto	l683
 15197  01186E                     l15035:
 15198                           
 15199                           ;StringCommand.c: 558: else if (StartsWith(Input, "rtc"))
 15200  01186E  C188  F10E         	movff	Command@Input,StartsWith@This
 15201  011872  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 15202  011876  0EE4               	movlw	low STR_218
 15203  011878  0101               	movlb	1	; () banked
 15204  01187A  6F10               	movwf	StartsWith@That& (0+255),b
 15205  01187C  0EFF               	movlw	high STR_218
 15206  01187E  0101               	movlb	1	; () banked
 15207  011880  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 15208  011882  EC3C  F0B9         	call	_StartsWith	;wreg free
 15209  011886  0900               	iorlw	0
 15210  011888  B4D8               	btfsc	status,2,c
 15211  01188A  D2B1               	goto	l15131
 15212                           
 15213                           ;StringCommand.c: 559: {
 15214                           ;StringCommand.c: 560: if (!StringContains(Input, "?"))
 15215  01188C  C188  F10E         	movff	Command@Input,StringContains@This
 15216  011890  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15217  011894  0E17               	movlw	low (STR_83+14)
 15218  011896  0101               	movlb	1	; () banked
 15219  011898  6F10               	movwf	StringContains@That& (0+255),b
 15220  01189A  0EFA               	movlw	high (STR_83+14)
 15221  01189C  0101               	movlb	1	; () banked
 15222  01189E  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15223  0118A0  EC54  F0BA         	call	_StringContains	;wreg free
 15224  0118A4  0900               	iorlw	0
 15225  0118A6  A4D8               	btfss	status,2,c
 15226  0118A8  D238               	goto	l15119
 15227                           
 15228                           ;StringCommand.c: 561: {
 15229                           ;StringCommand.c: 562: if (StringContains(Input, "battery"))
 15230  0118AA  C188  F10E         	movff	Command@Input,StringContains@This
 15231  0118AE  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15232  0118B2  0E4A               	movlw	low STR_220
 15233  0118B4  0101               	movlb	1	; () banked
 15234  0118B6  6F10               	movwf	StringContains@That& (0+255),b
 15235  0118B8  0EFF               	movlw	high STR_220
 15236  0118BA  0101               	movlb	1	; () banked
 15237  0118BC  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15238  0118BE  EC54  F0BA         	call	_StringContains	;wreg free
 15239  0118C2  0900               	iorlw	0
 15240  0118C4  B4D8               	btfsc	status,2,c
 15241  0118C6  D0C2               	goto	l15057
 15242                           
 15243                           ;StringCommand.c: 563: {
 15244                           ;StringCommand.c: 564: RTC_Battery_Value = (InternalADC_Read(2) + 8);
 15245  0118C8  0E02               	movlw	2
 15246  0118CA  ECC3  F0BD         	call	_InternalADC_Read
 15247  0118CE  0E08               	movlw	8
 15248  0118D0  0101               	movlb	1	; () banked
 15249  0118D2  251D               	addwf	?_InternalADC_Read& (0+255),w,b
 15250  0118D4  0102               	movlb	2	; () banked
 15251  0118D6  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
 15252  0118D8  0E00               	movlw	0
 15253  0118DA  0101               	movlb	1	; () banked
 15254  0118DC  211E               	addwfc	(?_InternalADC_Read+1)& (0+255),w,b
 15255  0118DE  0102               	movlb	2	; () banked
 15256  0118E0  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
 15257                           
 15258                           ; BSR set to: 2
 15259                           ;StringCommand.c: 565: RTC_Battery_Value_HIGH_decimal = (unsigned int)(((float)RTC_Batte
      +                          ry_Value / 1024) * 5);
 15260  0118E2  0E00               	movlw	0
 15261  0118E4  0101               	movlb	1	; () banked
 15262  0118E6  6F2C               	movwf	___ftmul@f2& (0+255),b
 15263  0118E8  0EA0               	movlw	160
 15264  0118EA  0101               	movlb	1	; () banked
 15265  0118EC  6F2D               	movwf	(___ftmul@f2+1)& (0+255),b
 15266  0118EE  0E40               	movlw	64
 15267  0118F0  0101               	movlb	1	; () banked
 15268  0118F2  6F2E               	movwf	(___ftmul@f2+2)& (0+255),b
 15269  0118F4  0E00               	movlw	0
 15270  0118F6  0101               	movlb	1	; () banked
 15271  0118F8  6F1D               	movwf	___ftdiv@f2& (0+255),b
 15272  0118FA  0E80               	movlw	128
 15273  0118FC  0101               	movlb	1	; () banked
 15274  0118FE  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
 15275  011900  0E44               	movlw	68
 15276  011902  0101               	movlb	1	; () banked
 15277  011904  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
 15278  011906  C2CA  F116         	movff	Command@RTC_Battery_Value,___lwtoft@c
 15279  01190A  C2CB  F117         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 15280  01190E  EC61  F006         	call	___lwtoft	;wreg free
 15281  011912  C116  F11A         	movff	?___lwtoft,___ftdiv@f1
 15282  011916  C117  F11B         	movff	?___lwtoft+1,___ftdiv@f1+1
 15283  01191A  C118  F11C         	movff	?___lwtoft+2,___ftdiv@f1+2
 15284  01191E  ECED  F0AA         	call	___ftdiv	;wreg free
 15285  011922  C11A  F129         	movff	?___ftdiv,___ftmul@f1
 15286  011926  C11B  F12A         	movff	?___ftdiv+1,___ftmul@f1+1
 15287  01192A  C11C  F12B         	movff	?___ftdiv+2,___ftmul@f1+2
 15288  01192E  EC2E  F0A8         	call	___ftmul	;wreg free
 15289  011932  C129  F138         	movff	?___ftmul,___fttol@f1
 15290  011936  C12A  F139         	movff	?___ftmul+1,___fttol@f1+1
 15291  01193A  C12B  F13A         	movff	?___ftmul+2,___fttol@f1+2
 15292  01193E  EC44  F0AA         	call	___fttol	;wreg free
 15293  011942  C138  F2CC         	movff	?___fttol,Command@RTC_Battery_Value_HIGH_decimal
 15294  011946  C139  F2CD         	movff	?___fttol+1,Command@RTC_Battery_Value_HIGH_decimal+1
 15295                           
 15296                           ;StringCommand.c: 566: RTC_Battery_Value_LOW_decimal = (unsigned int)((((float)RTC_Batte
      +                          ry_Value / 1024) * 500));
 15297  01194A  0E00               	movlw	0
 15298  01194C  0101               	movlb	1	; () banked
 15299  01194E  6F2C               	movwf	___ftmul@f2& (0+255),b
 15300  011950  0EFA               	movlw	250
 15301  011952  0101               	movlb	1	; () banked
 15302  011954  6F2D               	movwf	(___ftmul@f2+1)& (0+255),b
 15303  011956  0E43               	movlw	67
 15304  011958  0101               	movlb	1	; () banked
 15305  01195A  6F2E               	movwf	(___ftmul@f2+2)& (0+255),b
 15306  01195C  0E00               	movlw	0
 15307  01195E  0101               	movlb	1	; () banked
 15308  011960  6F1D               	movwf	___ftdiv@f2& (0+255),b
 15309  011962  0E80               	movlw	128
 15310  011964  0101               	movlb	1	; () banked
 15311  011966  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
 15312  011968  0E44               	movlw	68
 15313  01196A  0101               	movlb	1	; () banked
 15314  01196C  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
 15315  01196E  C2CA  F116         	movff	Command@RTC_Battery_Value,___lwtoft@c
 15316  011972  C2CB  F117         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 15317  011976  EC61  F006         	call	___lwtoft	;wreg free
 15318  01197A  C116  F11A         	movff	?___lwtoft,___ftdiv@f1
 15319  01197E  C117  F11B         	movff	?___lwtoft+1,___ftdiv@f1+1
 15320  011982  C118  F11C         	movff	?___lwtoft+2,___ftdiv@f1+2
 15321  011986  ECED  F0AA         	call	___ftdiv	;wreg free
 15322  01198A  C11A  F129         	movff	?___ftdiv,___ftmul@f1
 15323  01198E  C11B  F12A         	movff	?___ftdiv+1,___ftmul@f1+1
 15324  011992  C11C  F12B         	movff	?___ftdiv+2,___ftmul@f1+2
 15325  011996  EC2E  F0A8         	call	___ftmul	;wreg free
 15326  01199A  C129  F138         	movff	?___ftmul,___fttol@f1
 15327  01199E  C12A  F139         	movff	?___ftmul+1,___fttol@f1+1
 15328  0119A2  C12B  F13A         	movff	?___ftmul+2,___fttol@f1+2
 15329  0119A6  EC44  F0AA         	call	___fttol	;wreg free
 15330  0119AA  C138  F2D2         	movff	?___fttol,Command@RTC_Battery_Value_LOW_decimal
 15331  0119AE  C139  F2D3         	movff	?___fttol+1,Command@RTC_Battery_Value_LOW_decimal+1
 15332                           
 15333                           ;StringCommand.c: 567: RTC_Battery_Value_LOW_decimal = RTC_Battery_Value_LOW_decimal % 1
      +                          00;
 15334  0119B2  C2D2  F10E         	movff	Command@RTC_Battery_Value_LOW_decimal,___lwmod@dividend
 15335  0119B6  C2D3  F10F         	movff	Command@RTC_Battery_Value_LOW_decimal+1,___lwmod@dividend+1
 15336  0119BA  0E00               	movlw	0
 15337  0119BC  0101               	movlb	1	; () banked
 15338  0119BE  6F11               	movwf	(___lwmod@divisor+1)& (0+255),b
 15339  0119C0  0E64               	movlw	100
 15340  0119C2  6F10               	movwf	___lwmod@divisor& (0+255),b
 15341  0119C4  ECEC  F0BC         	call	___lwmod	;wreg free
 15342  0119C8  C10E  F2D2         	movff	?___lwmod,Command@RTC_Battery_Value_LOW_decimal
 15343  0119CC  C10F  F2D3         	movff	?___lwmod+1,Command@RTC_Battery_Value_LOW_decimal+1
 15344                           
 15345                           ;StringCommand.c: 568: sprintf(buf, " 3 Volt RTC Battery Voltage = %d.%d",
 15346                           ;StringCommand.c: 569: RTC_Battery_Value_HIGH_decimal, RTC_Battery_Value_LOW_decimal);
 15347  0119D0  0E00               	movlw	low Command@buf
 15348  0119D2  0101               	movlb	1	; () banked
 15349  0119D4  6F24               	movwf	sprintf@sp& (0+255),b
 15350  0119D6  0E02               	movlw	high Command@buf
 15351  0119D8  0101               	movlb	1	; () banked
 15352  0119DA  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 15353  0119DC  0EF0               	movlw	low STR_221
 15354  0119DE  0101               	movlb	1	; () banked
 15355  0119E0  6F26               	movwf	sprintf@f& (0+255),b
 15356  0119E2  0EF2               	movlw	high STR_221
 15357  0119E4  0101               	movlb	1	; () banked
 15358  0119E6  6F27               	movwf	(sprintf@f+1)& (0+255),b
 15359  0119E8  C2CC  F128         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 15360  0119EC  C2CD  F129         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 15361  0119F0  C2D2  F12A         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 15362  0119F4  C2D3  F12B         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 15363  0119F8  EC86  F093         	call	_sprintf	;wreg free
 15364                           
 15365                           ;StringCommand.c: 570: UARTstring(buf);
 15366  0119FC  0E00               	movlw	low Command@buf
 15367  0119FE  0101               	movlb	1	; () banked
 15368  011A00  6F19               	movwf	UARTstring@data& (0+255),b
 15369  011A02  0E02               	movlw	high Command@buf
 15370  011A04  0101               	movlb	1	; () banked
 15371  011A06  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15372  011A08  EC03  F0B8         	call	_UARTstring	;wreg free
 15373                           
 15374                           ;StringCommand.c: 571: sprintf(buf, "RTC Bty = %d.%d", RTC_Battery_Value_HIGH_decimal,
 15375                           ;StringCommand.c: 572: RTC_Battery_Value_LOW_decimal);
 15376  011A0C  0E00               	movlw	low Command@buf
 15377  011A0E  0101               	movlb	1	; () banked
 15378  011A10  6F24               	movwf	sprintf@sp& (0+255),b
 15379  011A12  0E02               	movlw	high Command@buf
 15380  011A14  0101               	movlb	1	; () banked
 15381  011A16  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 15382  011A18  0E99               	movlw	low STR_222
 15383  011A1A  0101               	movlb	1	; () banked
 15384  011A1C  6F26               	movwf	sprintf@f& (0+255),b
 15385  011A1E  0EFA               	movlw	high STR_222
 15386  011A20  0101               	movlb	1	; () banked
 15387  011A22  6F27               	movwf	(sprintf@f+1)& (0+255),b
 15388  011A24  C2CC  F128         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 15389  011A28  C2CD  F129         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 15390  011A2C  C2D2  F12A         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 15391  011A30  C2D3  F12B         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 15392  011A34  EC86  F093         	call	_sprintf	;wreg free
 15393                           
 15394                           ;StringCommand.c: 573: LCDdisplayFeedback(buf);
 15395  011A38  0E00               	movlw	low Command@buf
 15396  011A3A  0101               	movlb	1	; () banked
 15397  011A3C  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15398  011A3E  0E02               	movlw	high Command@buf
 15399  011A40  0101               	movlb	1	; () banked
 15400  011A42  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15401  011A44  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 15402                           
 15403                           ;StringCommand.c: 574: }
 15404  011A48  EF7B  F093         	goto	l683
 15405  011A4C                     l15057:
 15406                           
 15407                           ;StringCommand.c: 575: else if(StringContains(Input, "read"))
 15408  011A4C  C188  F10E         	movff	Command@Input,StringContains@This
 15409  011A50  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15410  011A54  0EDB               	movlw	low STR_223
 15411  011A56  0101               	movlb	1	; () banked
 15412  011A58  6F10               	movwf	StringContains@That& (0+255),b
 15413  011A5A  0EFF               	movlw	high STR_223
 15414  011A5C  0101               	movlb	1	; () banked
 15415  011A5E  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15416  011A60  EC54  F0BA         	call	_StringContains	;wreg free
 15417  011A64  0900               	iorlw	0
 15418  011A66  B4D8               	btfsc	status,2,c
 15419  011A68  D0A8               	goto	l15089
 15420                           
 15421                           ;StringCommand.c: 576: {
 15422                           ;StringCommand.c: 577: if(!READ_RTC_TIME())
 15423  011A6A  EC48  F0B1         	call	_READ_RTC_TIME	;wreg free
 15424  011A6E  0900               	iorlw	0
 15425  011A70  A4D8               	btfss	status,2,c
 15426  011A72  D08B               	goto	l15081
 15427                           
 15428                           ;StringCommand.c: 578: {
 15429                           ;StringCommand.c: 579: SprintDate(buf, NowTime, 0);
 15430  011A74  0E00               	movlw	low Command@buf
 15431  011A76  0101               	movlb	1	; () banked
 15432  011A78  6F50               	movwf	SprintDate@ReturnBuf& (0+255),b
 15433  011A7A  0E02               	movlw	high Command@buf
 15434  011A7C  0101               	movlb	1	; () banked
 15435  011A7E  6F51               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 15436  011A80  EE21  F093         	lfsr	2,_NowTime
 15437  011A84  EE01  F052         	lfsr	0,SprintDate@DisplayTime
 15438  011A88  0E08               	movlw	8
 15439  011A8A                     u19231:
 15440  011A8A  CFDB FFEB          	movff	plusw2,plusw0
 15441  011A8E  06E8               	decf	wreg,f,c
 15442  011A90  E2FC               	bc	u19231
 15443  011A92  0E00               	movlw	0
 15444  011A94  0101               	movlb	1	; () banked
 15445  011A96  6F5B               	movwf	SprintDate@Military& (0+255),b
 15446  011A98  ECE0  F0AF         	call	_SprintDate	;wreg free
 15447                           
 15448                           ;StringCommand.c: 580: UARTstring(buf);
 15449  011A9C  0E00               	movlw	low Command@buf
 15450  011A9E  0101               	movlb	1	; () banked
 15451  011AA0  6F19               	movwf	UARTstring@data& (0+255),b
 15452  011AA2  0E02               	movlw	high Command@buf
 15453  011AA4  0101               	movlb	1	; () banked
 15454  011AA6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15455  011AA8  EC03  F0B8         	call	_UARTstring	;wreg free
 15456                           
 15457                           ;StringCommand.c: 581: UARTstring("\r\n");
 15458  011AAC  0ECE               	movlw	low (STR_282+19)
 15459  011AAE  0101               	movlb	1	; () banked
 15460  011AB0  6F19               	movwf	UARTstring@data& (0+255),b
 15461  011AB2  0EF6               	movlw	high (STR_282+19)
 15462  011AB4  0101               	movlb	1	; () banked
 15463  011AB6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15464  011AB8  EC03  F0B8         	call	_UARTstring	;wreg free
 15465                           
 15466                           ;StringCommand.c: 582: SetLCDcursor(0, 0);
 15467  011ABC  0E00               	movlw	0
 15468  011ABE  0101               	movlb	1	; () banked
 15469  011AC0  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 15470  011AC2  0E00               	movlw	0
 15471  011AC4  EC9F  F004         	call	_SetLCDcursor
 15472                           
 15473                           ;StringCommand.c: 583: LCDPrintString("RTC Time is:    ");
 15474  011AC8  0E3F               	movlw	low STR_225
 15475  011ACA  0101               	movlb	1	; () banked
 15476  011ACC  6F1C               	movwf	LCDPrintString@Text& (0+255),b
 15477  011ACE  0EF9               	movlw	high STR_225
 15478  011AD0  0101               	movlb	1	; () banked
 15479  011AD2  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15480  011AD4  ECC7  F0BB         	call	_LCDPrintString	;wreg free
 15481                           
 15482                           ;StringCommand.c: 584: if(NowTime.HoursAM_PM)
 15483  011AD8  0101               	movlb	1	; () banked
 15484  011ADA  5197               	movf	(_NowTime+4)& (0+255),w,b
 15485  011ADC  B4D8               	btfsc	status,2,c
 15486  011ADE  D023               	goto	l15075
 15487                           
 15488                           ; BSR set to: 1
 15489                           ;StringCommand.c: 585: {
 15490                           ;StringCommand.c: 586: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 15491  011AE0  0E00               	movlw	low Command@buf
 15492  011AE2  0101               	movlb	1	; () banked
 15493  011AE4  6F24               	movwf	sprintf@sp& (0+255),b
 15494  011AE6  0E02               	movlw	high Command@buf
 15495  011AE8  0101               	movlb	1	; () banked
 15496  011AEA  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 15497  011AEC  0EA4               	movlw	low STR_226
 15498  011AEE  0101               	movlb	1	; () banked
 15499  011AF0  6F26               	movwf	sprintf@f& (0+255),b
 15500  011AF2  0EF6               	movlw	high STR_226
 15501  011AF4  0101               	movlb	1	; () banked
 15502  011AF6  6F27               	movwf	(sprintf@f+1)& (0+255),b
 15503  011AF8  C19A  F128         	movff	_NowTime+7,?_sprintf+4
 15504  011AFC  0101               	movlb	1	; () banked
 15505  011AFE  6B29               	clrf	(?_sprintf+5)& (0+255),b
 15506  011B00  C199  F12A         	movff	_NowTime+6,?_sprintf+6
 15507  011B04  0101               	movlb	1	; () banked
 15508  011B06  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 15509  011B08  C195  F12C         	movff	_NowTime+2,?_sprintf+8
 15510  011B0C  0101               	movlb	1	; () banked
 15511  011B0E  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 15512  011B10  C194  F12E         	movff	_NowTime+1,?_sprintf+10
 15513  011B14  0101               	movlb	1	; () banked
 15514  011B16  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 15515  011B18  C193  F130         	movff	_NowTime,?_sprintf+12
 15516  011B1C  0101               	movlb	1	; () banked
 15517  011B1E  6B31               	clrf	(?_sprintf+13)& (0+255),b
 15518  011B20  EC86  F093         	call	_sprintf	;wreg free
 15519                           
 15520                           ;StringCommand.c: 587: }
 15521  011B24  D023               	goto	l15077
 15522  011B26                     l15075:
 15523                           
 15524                           ;StringCommand.c: 588: else
 15525                           ;StringCommand.c: 589: {
 15526                           ;StringCommand.c: 590: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 15527  011B26  0E00               	movlw	low Command@buf
 15528  011B28  0101               	movlb	1	; () banked
 15529  011B2A  6F24               	movwf	sprintf@sp& (0+255),b
 15530  011B2C  0E02               	movlw	high Command@buf
 15531  011B2E  0101               	movlb	1	; () banked
 15532  011B30  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 15533  011B32  0E8D               	movlw	low STR_227
 15534  011B34  0101               	movlb	1	; () banked
 15535  011B36  6F26               	movwf	sprintf@f& (0+255),b
 15536  011B38  0EF6               	movlw	high STR_227
 15537  011B3A  0101               	movlb	1	; () banked
 15538  011B3C  6F27               	movwf	(sprintf@f+1)& (0+255),b
 15539  011B3E  C19A  F128         	movff	_NowTime+7,?_sprintf+4
 15540  011B42  0101               	movlb	1	; () banked
 15541  011B44  6B29               	clrf	(?_sprintf+5)& (0+255),b
 15542  011B46  C199  F12A         	movff	_NowTime+6,?_sprintf+6
 15543  011B4A  0101               	movlb	1	; () banked
 15544  011B4C  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 15545  011B4E  C195  F12C         	movff	_NowTime+2,?_sprintf+8
 15546  011B52  0101               	movlb	1	; () banked
 15547  011B54  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 15548  011B56  C194  F12E         	movff	_NowTime+1,?_sprintf+10
 15549  011B5A  0101               	movlb	1	; () banked
 15550  011B5C  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 15551  011B5E  C193  F130         	movff	_NowTime,?_sprintf+12
 15552  011B62  0101               	movlb	1	; () banked
 15553  011B64  6B31               	clrf	(?_sprintf+13)& (0+255),b
 15554  011B66  EC86  F093         	call	_sprintf	;wreg free
 15555  011B6A  D000               	goto	l15077
 15556  011B6C                     l15077:
 15557                           
 15558                           ;StringCommand.c: 591: }
 15559                           ;StringCommand.c: 592: SetLCDcursor(1, 0);
 15560  011B6C  0E00               	movlw	0
 15561  011B6E  0101               	movlb	1	; () banked
 15562  011B70  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 15563  011B72  0E01               	movlw	1
 15564  011B74  EC9F  F004         	call	_SetLCDcursor
 15565                           
 15566                           ;StringCommand.c: 593: LCDPrintString(buf);
 15567  011B78  0E00               	movlw	low Command@buf
 15568  011B7A  0101               	movlb	1	; () banked
 15569  011B7C  6F1C               	movwf	LCDPrintString@Text& (0+255),b
 15570  011B7E  0E02               	movlw	high Command@buf
 15571  011B80  0101               	movlb	1	; () banked
 15572  011B82  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15573  011B84  ECC7  F0BB         	call	_LCDPrintString	;wreg free
 15574                           
 15575                           ;StringCommand.c: 594: }
 15576  011B88  D3EB               	goto	l15219
 15577  011B8A                     l15081:
 15578                           
 15579                           ;StringCommand.c: 595: else
 15580                           ;StringCommand.c: 596: {
 15581                           ;StringCommand.c: 597: UARTstring("ERROR: Can't Read RTC\r\n");
 15582  011B8A  0E46               	movlw	low STR_228
 15583  011B8C  0101               	movlb	1	; () banked
 15584  011B8E  6F19               	movwf	UARTstring@data& (0+255),b
 15585  011B90  0EF6               	movlw	high STR_228
 15586  011B92  0101               	movlb	1	; () banked
 15587  011B94  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15588  011B96  EC03  F0B8         	call	_UARTstring	;wreg free
 15589                           
 15590                           ;StringCommand.c: 598: SetLCDcursor(1, 0);
 15591  011B9A  0E00               	movlw	0
 15592  011B9C  0101               	movlb	1	; () banked
 15593  011B9E  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 15594  011BA0  0E01               	movlw	1
 15595  011BA2  EC9F  F004         	call	_SetLCDcursor
 15596                           
 15597                           ;StringCommand.c: 599: LCDPrintString("RTC isnt working");
 15598  011BA6  0E61               	movlw	low STR_229
 15599  011BA8  0101               	movlb	1	; () banked
 15600  011BAA  6F1C               	movwf	LCDPrintString@Text& (0+255),b
 15601  011BAC  0EF9               	movlw	high STR_229
 15602  011BAE  0101               	movlb	1	; () banked
 15603  011BB0  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15604  011BB2  ECC7  F0BB         	call	_LCDPrintString	;wreg free
 15605  011BB6  D3D4               	goto	l15219
 15606  011BB8  D3D3               	goto	l15219
 15607  011BBA                     l15089:
 15608                           
 15609                           ;StringCommand.c: 603: else if(StringContains(Input, "set"))
 15610  011BBA  C188  F10E         	movff	Command@Input,StringContains@This
 15611  011BBE  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15612  011BC2  0EF8               	movlw	low STR_230
 15613  011BC4  0101               	movlb	1	; () banked
 15614  011BC6  6F10               	movwf	StringContains@That& (0+255),b
 15615  011BC8  0EFF               	movlw	high STR_230
 15616  011BCA  0101               	movlb	1	; () banked
 15617  011BCC  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15618  011BCE  EC54  F0BA         	call	_StringContains	;wreg free
 15619  011BD2  0900               	iorlw	0
 15620  011BD4  B4D8               	btfsc	status,2,c
 15621  011BD6  D097               	goto	l15117
 15622                           
 15623                           ;StringCommand.c: 604: {
 15624                           ;StringCommand.c: 605: UARTstring("Enter Time MM/DD/YY HH:MM:SS AM or\r\n");
 15625  011BD8  0ECB               	movlw	low STR_231
 15626  011BDA  0101               	movlb	1	; () banked
 15627  011BDC  6F19               	movwf	UARTstring@data& (0+255),b
 15628  011BDE  0EF2               	movlw	high STR_231
 15629  011BE0  0101               	movlb	1	; () banked
 15630  011BE2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15631  011BE4  EC03  F0B8         	call	_UARTstring	;wreg free
 15632                           
 15633                           ;StringCommand.c: 606: UARTstring("Enter Time MM/DD/YY HH:MM:SS PM\r\n");
 15634  011BE8  0E5A               	movlw	low STR_232
 15635  011BEA  0101               	movlb	1	; () banked
 15636  011BEC  6F19               	movwf	UARTstring@data& (0+255),b
 15637  011BEE  0EF3               	movlw	high STR_232
 15638  011BF0  0101               	movlb	1	; () banked
 15639  011BF2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15640  011BF4  EC03  F0B8         	call	_UARTstring	;wreg free
 15641                           
 15642                           ;StringCommand.c: 607: cleanBuffer(Input, 100);
 15643  011BF8  C188  F10E         	movff	Command@Input,cleanBuffer@data
 15644  011BFC  C189  F10F         	movff	Command@Input+1,cleanBuffer@data+1
 15645  011C00  0E00               	movlw	0
 15646  011C02  0101               	movlb	1	; () banked
 15647  011C04  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
 15648  011C06  0E64               	movlw	100
 15649  011C08  6F10               	movwf	cleanBuffer@count& (0+255),b
 15650  011C0A  EC04  F003         	call	_cleanBuffer	;wreg free
 15651                           
 15652                           ;StringCommand.c: 608: UARTstring(">");
 15653  011C0E  0ED1               	movlw	low (STR_21+27)
 15654  011C10  0101               	movlb	1	; () banked
 15655  011C12  6F19               	movwf	UARTstring@data& (0+255),b
 15656  011C14  0EF4               	movlw	high (STR_21+27)
 15657  011C16  0101               	movlb	1	; () banked
 15658  011C18  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15659  011C1A  EC03  F0B8         	call	_UARTstring	;wreg free
 15660  011C1E  D000               	goto	l15097
 15661  011C20                     l15097:
 15662                           
 15663                           ;StringCommand.c: 610: {
 15664                           ;StringCommand.c: 611: if(Input[0] != 0)
 15665  011C20  C188  FFD9         	movff	Command@Input,fsr2l
 15666  011C24  C189  FFDA         	movff	Command@Input+1,fsr2h
 15667  011C28  50DF               	movf	indf2,w,c
 15668  011C2A  B4D8               	btfsc	status,2,c
 15669  011C2C  D7F9               	goto	l15097
 15670                           
 15671                           ;StringCommand.c: 612: {
 15672                           ;StringCommand.c: 613: lowercase(Input);
 15673  011C2E  C188  F10E         	movff	Command@Input,lowercase@Input
 15674  011C32  C189  F10F         	movff	Command@Input+1,lowercase@Input+1
 15675  011C36  EC86  F0B9         	call	_lowercase	;wreg free
 15676                           
 15677                           ;StringCommand.c: 614: if(Parse_Time(Input))
 15678  011C3A  C188  F10E         	movff	Command@Input,Parse_Time@This
 15679  011C3E  C189  F10F         	movff	Command@Input+1,Parse_Time@This+1
 15680  011C42  ECD5  F099         	call	_Parse_Time	;wreg free
 15681  011C46  0900               	iorlw	0
 15682  011C48  B4D8               	btfsc	status,2,c
 15683  011C4A  D048               	goto	l15115
 15684                           
 15685                           ;StringCommand.c: 615: {
 15686                           ;StringCommand.c: 616: if(!SET_RTC_TIME(NowTime))
 15687  011C4C  EE21  F093         	lfsr	2,_NowTime
 15688  011C50  EE01  F016         	lfsr	0,SET_RTC_TIME@SetTime
 15689  011C54  0E08               	movlw	8
 15690  011C56                     u19281:
 15691  011C56  CFDB FFEB          	movff	plusw2,plusw0
 15692  011C5A  06E8               	decf	wreg,f,c
 15693  011C5C  E2FC               	bc	u19281
 15694  011C5E  EC27  F0A2         	call	_SET_RTC_TIME	;wreg free
 15695  011C62  0900               	iorlw	0
 15696  011C64  A4D8               	btfss	status,2,c
 15697  011C66  D030               	goto	l15113
 15698                           
 15699                           ;StringCommand.c: 617: {
 15700                           ;StringCommand.c: 618: UARTstring("\r\nTime Set Successfully\r\n");
 15701  011C68  0EC9               	movlw	low STR_234
 15702  011C6A  0101               	movlb	1	; () banked
 15703  011C6C  6F19               	movwf	UARTstring@data& (0+255),b
 15704  011C6E  0EF5               	movlw	high STR_234
 15705  011C70  0101               	movlb	1	; () banked
 15706  011C72  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15707  011C74  EC03  F0B8         	call	_UARTstring	;wreg free
 15708                           
 15709                           ;StringCommand.c: 619: READ_RTC_TIME();
 15710  011C78  EC48  F0B1         	call	_READ_RTC_TIME	;wreg free
 15711                           
 15712                           ;StringCommand.c: 620: SprintDate(buf, NowTime, 0);
 15713  011C7C  0E00               	movlw	low Command@buf
 15714  011C7E  0101               	movlb	1	; () banked
 15715  011C80  6F50               	movwf	SprintDate@ReturnBuf& (0+255),b
 15716  011C82  0E02               	movlw	high Command@buf
 15717  011C84  0101               	movlb	1	; () banked
 15718  011C86  6F51               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 15719  011C88  EE21  F093         	lfsr	2,_NowTime
 15720  011C8C  EE01  F052         	lfsr	0,SprintDate@DisplayTime
 15721  011C90  0E08               	movlw	8
 15722  011C92                     u19301:
 15723  011C92  CFDB FFEB          	movff	plusw2,plusw0
 15724  011C96  06E8               	decf	wreg,f,c
 15725  011C98  E2FC               	bc	u19301
 15726  011C9A  0E00               	movlw	0
 15727  011C9C  0101               	movlb	1	; () banked
 15728  011C9E  6F5B               	movwf	SprintDate@Military& (0+255),b
 15729  011CA0  ECE0  F0AF         	call	_SprintDate	;wreg free
 15730                           
 15731                           ;StringCommand.c: 621: UARTstring(buf);
 15732  011CA4  0E00               	movlw	low Command@buf
 15733  011CA6  0101               	movlb	1	; () banked
 15734  011CA8  6F19               	movwf	UARTstring@data& (0+255),b
 15735  011CAA  0E02               	movlw	high Command@buf
 15736  011CAC  0101               	movlb	1	; () banked
 15737  011CAE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15738  011CB0  EC03  F0B8         	call	_UARTstring	;wreg free
 15739                           
 15740                           ;StringCommand.c: 622: UARTstring("\r\n");
 15741  011CB4  0ECE               	movlw	low (STR_282+19)
 15742  011CB6  0101               	movlb	1	; () banked
 15743  011CB8  6F19               	movwf	UARTstring@data& (0+255),b
 15744  011CBA  0EF6               	movlw	high (STR_282+19)
 15745  011CBC  0101               	movlb	1	; () banked
 15746  011CBE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15747  011CC0  EC03  F0B8         	call	_UARTstring	;wreg free
 15748                           
 15749                           ;StringCommand.c: 623: }
 15750  011CC4  EF7B  F093         	goto	l683
 15751  011CC8                     l15113:
 15752                           
 15753                           ;StringCommand.c: 624: else
 15754                           ;StringCommand.c: 625: {
 15755                           ;StringCommand.c: 626: UARTstring("\r\nTime Not Set Successfully");
 15756  011CC8  0E43               	movlw	low STR_236
 15757  011CCA  0101               	movlb	1	; () banked
 15758  011CCC  6F19               	movwf	UARTstring@data& (0+255),b
 15759  011CCE  0EF5               	movlw	high STR_236
 15760  011CD0  0101               	movlb	1	; () banked
 15761  011CD2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15762  011CD4  EC03  F0B8         	call	_UARTstring	;wreg free
 15763                           
 15764                           ;StringCommand.c: 627: }
 15765                           ;StringCommand.c: 628: }
 15766  011CD8  EF7B  F093         	goto	l683
 15767  011CDC                     l15115:
 15768                           
 15769                           ;StringCommand.c: 629: else
 15770                           ;StringCommand.c: 630: {
 15771                           ;StringCommand.c: 631: UARTstring("\r\nInvalid Time Entered\r\n");
 15772  011CDC  0EFC               	movlw	low STR_237
 15773  011CDE  0101               	movlb	1	; () banked
 15774  011CE0  6F19               	movwf	UARTstring@data& (0+255),b
 15775  011CE2  0EF5               	movlw	high STR_237
 15776  011CE4  0101               	movlb	1	; () banked
 15777  011CE6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15778  011CE8  EC03  F0B8         	call	_UARTstring	;wreg free
 15779                           
 15780                           ;StringCommand.c: 632: UARTstring("Format is MM/DD/YY HH:MM:SS AM\r\n");
 15781  011CEC  0E9D               	movlw	low STR_238
 15782  011CEE  0101               	movlb	1	; () banked
 15783  011CF0  6F19               	movwf	UARTstring@data& (0+255),b
 15784  011CF2  0EF3               	movlw	high STR_238
 15785  011CF4  0101               	movlb	1	; () banked
 15786  011CF6  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15787  011CF8  EC03  F0B8         	call	_UARTstring	;wreg free
 15788                           
 15789                           ;StringCommand.c: 633: }
 15790                           ;StringCommand.c: 634: break;
 15791  011CFC  EF7B  F093         	goto	l683
 15792  011D00  D78F               	goto	l15097
 15793                           
 15794                           ;StringCommand.c: 635: }
 15795                           ;StringCommand.c: 636: }
 15796                           ;StringCommand.c: 637: }
 15797  011D02  EF7B  F093         	goto	l683
 15798  011D06                     l15117:
 15799                           
 15800                           ;StringCommand.c: 638: else
 15801                           ;StringCommand.c: 639: {
 15802                           ;StringCommand.c: 640: UARTstring("RTC What???\n");
 15803  011D06  0EED               	movlw	low STR_239
 15804  011D08  0101               	movlb	1	; () banked
 15805  011D0A  6F19               	movwf	UARTstring@data& (0+255),b
 15806  011D0C  0EFC               	movlw	high STR_239
 15807  011D0E  0101               	movlb	1	; () banked
 15808  011D10  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15809  011D12  EC03  F0B8         	call	_UARTstring	;wreg free
 15810                           
 15811                           ;StringCommand.c: 641: }
 15812                           ;StringCommand.c: 642: }
 15813  011D16  EF7B  F093         	goto	l683
 15814  011D1A                     l15119:
 15815                           
 15816                           ;StringCommand.c: 643: else
 15817                           ;StringCommand.c: 644: {
 15818                           ;StringCommand.c: 645: UARTstring("Real Time Clock Help Menu\r\n\n");
 15819  011D1A  0E7C               	movlw	low STR_240
 15820  011D1C  0101               	movlb	1	; () banked
 15821  011D1E  6F19               	movwf	UARTstring@data& (0+255),b
 15822  011D20  0EF4               	movlw	high STR_240
 15823  011D22  0101               	movlb	1	; () banked
 15824  011D24  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15825  011D26  EC03  F0B8         	call	_UARTstring	;wreg free
 15826                           
 15827                           ;StringCommand.c: 646: UARTstring("Actions:\r\n");
 15828  011D2A  0EC2               	movlw	low STR_241
 15829  011D2C  0101               	movlb	1	; () banked
 15830  011D2E  6F19               	movwf	UARTstring@data& (0+255),b
 15831  011D30  0EFD               	movlw	high STR_241
 15832  011D32  0101               	movlb	1	; () banked
 15833  011D34  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15834  011D36  EC03  F0B8         	call	_UARTstring	;wreg free
 15835                           
 15836                           ;StringCommand.c: 647: UARTstring("Battery\r\n");
 15837  011D3A  0E18               	movlw	low STR_242
 15838  011D3C  0101               	movlb	1	; () banked
 15839  011D3E  6F19               	movwf	UARTstring@data& (0+255),b
 15840  011D40  0EFE               	movlw	high STR_242
 15841  011D42  0101               	movlb	1	; () banked
 15842  011D44  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15843  011D46  EC03  F0B8         	call	_UARTstring	;wreg free
 15844                           
 15845                           ;StringCommand.c: 648: UARTstring("Read\r\n");
 15846  011D4A  0E67               	movlw	low STR_243
 15847  011D4C  0101               	movlb	1	; () banked
 15848  011D4E  6F19               	movwf	UARTstring@data& (0+255),b
 15849  011D50  0EFF               	movlw	high STR_243
 15850  011D52  0101               	movlb	1	; () banked
 15851  011D54  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15852  011D56  EC03  F0B8         	call	_UARTstring	;wreg free
 15853                           
 15854                           ;StringCommand.c: 649: UARTstring("Set\r\n\n");
 15855  011D5A  0E59               	movlw	low STR_244
 15856  011D5C  0101               	movlb	1	; () banked
 15857  011D5E  6F19               	movwf	UARTstring@data& (0+255),b
 15858  011D60  0EFF               	movlw	high STR_244
 15859  011D62  0101               	movlb	1	; () banked
 15860  011D64  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15861  011D66  EC03  F0B8         	call	_UARTstring	;wreg free
 15862                           
 15863                           ;StringCommand.c: 650: UARTstring("To command the RTC, type the action\r\n followed by"
 15864                           ;StringCommand.c: 651: " the parameters \r\n\n");
 15865  011D6A  0EA6               	movlw	low STR_245
 15866  011D6C  0101               	movlb	1	; () banked
 15867  011D6E  6F19               	movwf	UARTstring@data& (0+255),b
 15868  011D70  0EEE               	movlw	high STR_245
 15869  011D72  0101               	movlb	1	; () banked
 15870  011D74  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15871  011D76  EC03  F0B8         	call	_UARTstring	;wreg free
 15872                           
 15873                           ;StringCommand.c: 652: UARTstring("further sub menus available by entering the action an
      +                          d a '?'");
 15874  011D7A  0EAF               	movlw	low STR_246
 15875  011D7C  0101               	movlb	1	; () banked
 15876  011D7E  6F19               	movwf	UARTstring@data& (0+255),b
 15877  011D80  0EEF               	movlw	high STR_246
 15878  011D82  0101               	movlb	1	; () banked
 15879  011D84  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15880  011D86  EC03  F0B8         	call	_UARTstring	;wreg free
 15881                           
 15882                           ;StringCommand.c: 653: UARTstring("i.e. RTC Set Time?\r\n");
 15883  011D8A  0E28               	movlw	low STR_247
 15884  011D8C  0101               	movlb	1	; () banked
 15885  011D8E  6F19               	movwf	UARTstring@data& (0+255),b
 15886  011D90  0EF7               	movlw	high STR_247
 15887  011D92  0101               	movlb	1	; () banked
 15888  011D94  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 15889  011D96  EC03  F0B8         	call	_UARTstring	;wreg free
 15890                           
 15891                           ;StringCommand.c: 654: LCD_Scroll("RTC Menu");
 15892  011D9A  0ED7               	movlw	low STR_248
 15893  011D9C  0101               	movlb	1	; () banked
 15894  011D9E  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15895  011DA0  0EFE               	movlw	high STR_248
 15896  011DA2  0101               	movlb	1	; () banked
 15897  011DA4  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15898  011DA6  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 15899                           
 15900                           ;StringCommand.c: 655: LCD_Scroll("Commands:");
 15901  011DAA  0E36               	movlw	low STR_178
 15902  011DAC  0101               	movlb	1	; () banked
 15903  011DAE  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15904  011DB0  0EFE               	movlw	high STR_178
 15905  011DB2  0101               	movlb	1	; () banked
 15906  011DB4  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15907  011DB6  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 15908                           
 15909                           ;StringCommand.c: 656: LCD_Scroll("Battery");
 15910  011DBA  0E42               	movlw	low STR_250
 15911  011DBC  0101               	movlb	1	; () banked
 15912  011DBE  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15913  011DC0  0EFF               	movlw	high STR_250
 15914  011DC2  0101               	movlb	1	; () banked
 15915  011DC4  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15916  011DC6  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 15917                           
 15918                           ;StringCommand.c: 657: LCD_Scroll("Read");
 15919  011DCA  0ED6               	movlw	low STR_251
 15920  011DCC  0101               	movlb	1	; () banked
 15921  011DCE  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15922  011DD0  0EFF               	movlw	high STR_251
 15923  011DD2  0101               	movlb	1	; () banked
 15924  011DD4  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15925  011DD6  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 15926                           
 15927                           ;StringCommand.c: 658: LCD_Scroll("Set");
 15928  011DDA  0EF4               	movlw	low STR_252
 15929  011DDC  0101               	movlb	1	; () banked
 15930  011DDE  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 15931  011DE0  0EFF               	movlw	high STR_252
 15932  011DE2  0101               	movlb	1	; () banked
 15933  011DE4  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15934  011DE6  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 15935                           
 15936                           ;StringCommand.c: 660: }
 15937                           ;StringCommand.c: 661: }
 15938  011DEA  EF7B  F093         	goto	l683
 15939  011DEE                     l15131:
 15940                           
 15941                           ;StringCommand.c: 663: else if (StartsWith(Input, "joe"))
 15942  011DEE  C188  F10E         	movff	Command@Input,StartsWith@This
 15943  011DF2  C189  F10F         	movff	Command@Input+1,StartsWith@This+1
 15944  011DF6  0EE8               	movlw	low STR_253
 15945  011DF8  0101               	movlb	1	; () banked
 15946  011DFA  6F10               	movwf	StartsWith@That& (0+255),b
 15947  011DFC  0EFF               	movlw	high STR_253
 15948  011DFE  0101               	movlb	1	; () banked
 15949  011E00  6F11               	movwf	(StartsWith@That+1)& (0+255),b
 15950  011E02  EC3C  F0B9         	call	_StartsWith	;wreg free
 15951  011E06  0900               	iorlw	0
 15952  011E08  B4D8               	btfsc	status,2,c
 15953  011E0A  D147               	goto	l15169
 15954                           
 15955                           ;StringCommand.c: 664: {
 15956                           ;StringCommand.c: 665: if (!StringContains(Input, "?"))
 15957  011E0C  C188  F10E         	movff	Command@Input,StringContains@This
 15958  011E10  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 15959  011E14  0E17               	movlw	low (STR_83+14)
 15960  011E16  0101               	movlb	1	; () banked
 15961  011E18  6F10               	movwf	StringContains@That& (0+255),b
 15962  011E1A  0EFA               	movlw	high (STR_83+14)
 15963  011E1C  0101               	movlb	1	; () banked
 15964  011E1E  6F11               	movwf	(StringContains@That+1)& (0+255),b
 15965  011E20  EC54  F0BA         	call	_StringContains	;wreg free
 15966  011E24  0900               	iorlw	0
 15967  011E26  A4D8               	btfss	status,2,c
 15968  011E28  D0F7               	goto	l15161
 15969                           
 15970                           ;StringCommand.c: 666: {
 15971                           ;StringCommand.c: 667: if (StringMatch(Input, "joesroomlight=on"))
 15972  011E2A  C188  F10E         	movff	Command@Input,StringMatch@This
 15973  011E2E  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 15974  011E32  0E94               	movlw	low STR_255
 15975  011E34  0101               	movlb	1	; () banked
 15976  011E36  6F10               	movwf	StringMatch@That& (0+255),b
 15977  011E38  0EF9               	movlw	high STR_255
 15978  011E3A  0101               	movlb	1	; () banked
 15979  011E3C  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 15980  011E3E  EC94  F0BA         	call	_StringMatch	;wreg free
 15981  011E42  0900               	iorlw	0
 15982  011E44  B4D8               	btfsc	status,2,c
 15983  011E46  D064               	goto	l15147
 15984                           
 15985                           ;StringCommand.c: 668: {
 15986                           ;StringCommand.c: 669: INTCONbits.GIE = 0;
 15987  011E48  9EF2               	bcf	intcon,7,c	;volatile
 15988                           
 15989                           ;StringCommand.c: 670: Send_Config2(0b00000001, SubLightON);
 15990  011E4A  0E09               	movlw	low _SubLightON
 15991  011E4C  0101               	movlb	1	; () banked
 15992  011E4E  6F19               	movwf	Send_Config2@data& (0+255),b
 15993  011E50  0EEE               	movlw	high _SubLightON
 15994  011E52  0101               	movlb	1	; () banked
 15995  011E54  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 15996  011E56  0E01               	movlw	1
 15997  011E58  EC12  F0BA         	call	_Send_Config2
 15998                           
 15999                           ;StringCommand.c: 671: Send_Config2(0b00000001, SubLightON);
 16000  011E5C  0E09               	movlw	low _SubLightON
 16001  011E5E  0101               	movlb	1	; () banked
 16002  011E60  6F19               	movwf	Send_Config2@data& (0+255),b
 16003  011E62  0EEE               	movlw	high _SubLightON
 16004  011E64  0101               	movlb	1	; () banked
 16005  011E66  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16006  011E68  0E01               	movlw	1
 16007  011E6A  EC12  F0BA         	call	_Send_Config2
 16008                           
 16009                           ;StringCommand.c: 672: Send_Config2(0b00000001, SubLightON);
 16010  011E6E  0E09               	movlw	low _SubLightON
 16011  011E70  0101               	movlb	1	; () banked
 16012  011E72  6F19               	movwf	Send_Config2@data& (0+255),b
 16013  011E74  0EEE               	movlw	high _SubLightON
 16014  011E76  0101               	movlb	1	; () banked
 16015  011E78  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16016  011E7A  0E01               	movlw	1
 16017  011E7C  EC12  F0BA         	call	_Send_Config2
 16018                           
 16019                           ;StringCommand.c: 673: Send_Config2(0b00000001, SubLightON);
 16020  011E80  0E09               	movlw	low _SubLightON
 16021  011E82  0101               	movlb	1	; () banked
 16022  011E84  6F19               	movwf	Send_Config2@data& (0+255),b
 16023  011E86  0EEE               	movlw	high _SubLightON
 16024  011E88  0101               	movlb	1	; () banked
 16025  011E8A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16026  011E8C  0E01               	movlw	1
 16027  011E8E  EC12  F0BA         	call	_Send_Config2
 16028                           
 16029                           ;StringCommand.c: 674: Send_Config2(0b00000001, SubLightON);
 16030  011E92  0E09               	movlw	low _SubLightON
 16031  011E94  0101               	movlb	1	; () banked
 16032  011E96  6F19               	movwf	Send_Config2@data& (0+255),b
 16033  011E98  0EEE               	movlw	high _SubLightON
 16034  011E9A  0101               	movlb	1	; () banked
 16035  011E9C  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16036  011E9E  0E01               	movlw	1
 16037  011EA0  EC12  F0BA         	call	_Send_Config2
 16038                           
 16039                           ;StringCommand.c: 675: Send_Config2(0b00000001, SubLightON);
 16040  011EA4  0E09               	movlw	low _SubLightON
 16041  011EA6  0101               	movlb	1	; () banked
 16042  011EA8  6F19               	movwf	Send_Config2@data& (0+255),b
 16043  011EAA  0EEE               	movlw	high _SubLightON
 16044  011EAC  0101               	movlb	1	; () banked
 16045  011EAE  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16046  011EB0  0E01               	movlw	1
 16047  011EB2  EC12  F0BA         	call	_Send_Config2
 16048                           
 16049                           ;StringCommand.c: 676: Send_Config2(0b00000001, SubLightON);
 16050  011EB6  0E09               	movlw	low _SubLightON
 16051  011EB8  0101               	movlb	1	; () banked
 16052  011EBA  6F19               	movwf	Send_Config2@data& (0+255),b
 16053  011EBC  0EEE               	movlw	high _SubLightON
 16054  011EBE  0101               	movlb	1	; () banked
 16055  011EC0  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16056  011EC2  0E01               	movlw	1
 16057  011EC4  EC12  F0BA         	call	_Send_Config2
 16058                           
 16059                           ;StringCommand.c: 677: Send_Config2(0b00000001, SubLightON);
 16060  011EC8  0E09               	movlw	low _SubLightON
 16061  011ECA  0101               	movlb	1	; () banked
 16062  011ECC  6F19               	movwf	Send_Config2@data& (0+255),b
 16063  011ECE  0EEE               	movlw	high _SubLightON
 16064  011ED0  0101               	movlb	1	; () banked
 16065  011ED2  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16066  011ED4  0E01               	movlw	1
 16067  011ED6  EC12  F0BA         	call	_Send_Config2
 16068                           
 16069                           ;StringCommand.c: 678: Send_Config2(0b00000001, SubLightON);
 16070  011EDA  0E09               	movlw	low _SubLightON
 16071  011EDC  0101               	movlb	1	; () banked
 16072  011EDE  6F19               	movwf	Send_Config2@data& (0+255),b
 16073  011EE0  0EEE               	movlw	high _SubLightON
 16074  011EE2  0101               	movlb	1	; () banked
 16075  011EE4  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16076  011EE6  0E01               	movlw	1
 16077  011EE8  EC12  F0BA         	call	_Send_Config2
 16078                           
 16079                           ;StringCommand.c: 679: INTCONbits.GIE = 1;
 16080  011EEC  8EF2               	bsf	intcon,7,c	;volatile
 16081                           
 16082                           ;StringCommand.c: 680: UARTstring("Joe's room light On");
 16083  011EEE  0E8D               	movlw	low STR_256
 16084  011EF0  0101               	movlb	1	; () banked
 16085  011EF2  6F19               	movwf	UARTstring@data& (0+255),b
 16086  011EF4  0EF7               	movlw	high STR_256
 16087  011EF6  0101               	movlb	1	; () banked
 16088  011EF8  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16089  011EFA  EC03  F0B8         	call	_UARTstring	;wreg free
 16090                           
 16091                           ;StringCommand.c: 681: LCDdisplayFeedback("Joe room lt On");
 16092  011EFE  0EEF               	movlw	low STR_257
 16093  011F00  0101               	movlb	1	; () banked
 16094  011F02  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 16095  011F04  0EFB               	movlw	high STR_257
 16096  011F06  0101               	movlb	1	; () banked
 16097  011F08  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 16098  011F0A  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 16099                           
 16100                           ;StringCommand.c: 682: }
 16101  011F0E  D3F3               	goto	l683
 16102  011F10                     l15147:
 16103                           
 16104                           ;StringCommand.c: 683: else if (StringMatch(Input, "joesroomlight=off"))
 16105  011F10  C188  F10E         	movff	Command@Input,StringMatch@This
 16106  011F14  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 16107  011F18  0E80               	movlw	low STR_258
 16108  011F1A  0101               	movlb	1	; () banked
 16109  011F1C  6F10               	movwf	StringMatch@That& (0+255),b
 16110  011F1E  0EF8               	movlw	high STR_258
 16111  011F20  0101               	movlb	1	; () banked
 16112  011F22  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 16113  011F24  EC94  F0BA         	call	_StringMatch	;wreg free
 16114  011F28  0900               	iorlw	0
 16115  011F2A  B4D8               	btfsc	status,2,c
 16116  011F2C  D064               	goto	l15159
 16117                           
 16118                           ;StringCommand.c: 684: {
 16119                           ;StringCommand.c: 685: INTCONbits.GIE = 0;
 16120  011F2E  9EF2               	bcf	intcon,7,c	;volatile
 16121                           
 16122                           ;StringCommand.c: 686: Send_Config2(0b00000001, SubLightOFF);
 16123  011F30  0EF9               	movlw	low _SubLightOFF
 16124  011F32  0101               	movlb	1	; () banked
 16125  011F34  6F19               	movwf	Send_Config2@data& (0+255),b
 16126  011F36  0EED               	movlw	high _SubLightOFF
 16127  011F38  0101               	movlb	1	; () banked
 16128  011F3A  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16129  011F3C  0E01               	movlw	1
 16130  011F3E  EC12  F0BA         	call	_Send_Config2
 16131                           
 16132                           ;StringCommand.c: 687: Send_Config2(0b00000001, SubLightOFF);
 16133  011F42  0EF9               	movlw	low _SubLightOFF
 16134  011F44  0101               	movlb	1	; () banked
 16135  011F46  6F19               	movwf	Send_Config2@data& (0+255),b
 16136  011F48  0EED               	movlw	high _SubLightOFF
 16137  011F4A  0101               	movlb	1	; () banked
 16138  011F4C  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16139  011F4E  0E01               	movlw	1
 16140  011F50  EC12  F0BA         	call	_Send_Config2
 16141                           
 16142                           ;StringCommand.c: 688: Send_Config2(0b00000001, SubLightOFF);
 16143  011F54  0EF9               	movlw	low _SubLightOFF
 16144  011F56  0101               	movlb	1	; () banked
 16145  011F58  6F19               	movwf	Send_Config2@data& (0+255),b
 16146  011F5A  0EED               	movlw	high _SubLightOFF
 16147  011F5C  0101               	movlb	1	; () banked
 16148  011F5E  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16149  011F60  0E01               	movlw	1
 16150  011F62  EC12  F0BA         	call	_Send_Config2
 16151                           
 16152                           ;StringCommand.c: 689: Send_Config2(0b00000001, SubLightOFF);
 16153  011F66  0EF9               	movlw	low _SubLightOFF
 16154  011F68  0101               	movlb	1	; () banked
 16155  011F6A  6F19               	movwf	Send_Config2@data& (0+255),b
 16156  011F6C  0EED               	movlw	high _SubLightOFF
 16157  011F6E  0101               	movlb	1	; () banked
 16158  011F70  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16159  011F72  0E01               	movlw	1
 16160  011F74  EC12  F0BA         	call	_Send_Config2
 16161                           
 16162                           ;StringCommand.c: 690: Send_Config2(0b00000001, SubLightOFF);
 16163  011F78  0EF9               	movlw	low _SubLightOFF
 16164  011F7A  0101               	movlb	1	; () banked
 16165  011F7C  6F19               	movwf	Send_Config2@data& (0+255),b
 16166  011F7E  0EED               	movlw	high _SubLightOFF
 16167  011F80  0101               	movlb	1	; () banked
 16168  011F82  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16169  011F84  0E01               	movlw	1
 16170  011F86  EC12  F0BA         	call	_Send_Config2
 16171                           
 16172                           ;StringCommand.c: 691: Send_Config2(0b00000001, SubLightOFF);
 16173  011F8A  0EF9               	movlw	low _SubLightOFF
 16174  011F8C  0101               	movlb	1	; () banked
 16175  011F8E  6F19               	movwf	Send_Config2@data& (0+255),b
 16176  011F90  0EED               	movlw	high _SubLightOFF
 16177  011F92  0101               	movlb	1	; () banked
 16178  011F94  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16179  011F96  0E01               	movlw	1
 16180  011F98  EC12  F0BA         	call	_Send_Config2
 16181                           
 16182                           ;StringCommand.c: 692: Send_Config2(0b00000001, SubLightOFF);
 16183  011F9C  0EF9               	movlw	low _SubLightOFF
 16184  011F9E  0101               	movlb	1	; () banked
 16185  011FA0  6F19               	movwf	Send_Config2@data& (0+255),b
 16186  011FA2  0EED               	movlw	high _SubLightOFF
 16187  011FA4  0101               	movlb	1	; () banked
 16188  011FA6  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16189  011FA8  0E01               	movlw	1
 16190  011FAA  EC12  F0BA         	call	_Send_Config2
 16191                           
 16192                           ;StringCommand.c: 693: Send_Config2(0b00000001, SubLightOFF);
 16193  011FAE  0EF9               	movlw	low _SubLightOFF
 16194  011FB0  0101               	movlb	1	; () banked
 16195  011FB2  6F19               	movwf	Send_Config2@data& (0+255),b
 16196  011FB4  0EED               	movlw	high _SubLightOFF
 16197  011FB6  0101               	movlb	1	; () banked
 16198  011FB8  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16199  011FBA  0E01               	movlw	1
 16200  011FBC  EC12  F0BA         	call	_Send_Config2
 16201                           
 16202                           ;StringCommand.c: 694: Send_Config2(0b00000001, SubLightOFF);
 16203  011FC0  0EF9               	movlw	low _SubLightOFF
 16204  011FC2  0101               	movlb	1	; () banked
 16205  011FC4  6F19               	movwf	Send_Config2@data& (0+255),b
 16206  011FC6  0EED               	movlw	high _SubLightOFF
 16207  011FC8  0101               	movlb	1	; () banked
 16208  011FCA  6F1A               	movwf	(Send_Config2@data+1)& (0+255),b
 16209  011FCC  0E01               	movlw	1
 16210  011FCE  EC12  F0BA         	call	_Send_Config2
 16211                           
 16212                           ;StringCommand.c: 695: INTCONbits.GIE = 1;
 16213  011FD2  8EF2               	bsf	intcon,7,c	;volatile
 16214                           
 16215                           ;StringCommand.c: 696: UARTstring("Joes room light Off");
 16216  011FD4  0E65               	movlw	low STR_259
 16217  011FD6  0101               	movlb	1	; () banked
 16218  011FD8  6F19               	movwf	UARTstring@data& (0+255),b
 16219  011FDA  0EF7               	movlw	high STR_259
 16220  011FDC  0101               	movlb	1	; () banked
 16221  011FDE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16222  011FE0  EC03  F0B8         	call	_UARTstring	;wreg free
 16223                           
 16224                           ;StringCommand.c: 697: LCDdisplayFeedback("Joe room lt Off");
 16225  011FE4  0EE9               	movlw	low STR_260
 16226  011FE6  0101               	movlb	1	; () banked
 16227  011FE8  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 16228  011FEA  0EFA               	movlw	high STR_260
 16229  011FEC  0101               	movlb	1	; () banked
 16230  011FEE  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 16231  011FF0  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 16232                           
 16233                           ;StringCommand.c: 698: }
 16234  011FF4  D380               	goto	l683
 16235  011FF6                     l15159:
 16236                           
 16237                           ;StringCommand.c: 699: else
 16238                           ;StringCommand.c: 700: {
 16239                           ;StringCommand.c: 701: UARTstring("Joe's room what???");
 16240  011FF6  0EB4               	movlw	low STR_261
 16241  011FF8  0101               	movlb	1	; () banked
 16242  011FFA  6F19               	movwf	UARTstring@data& (0+255),b
 16243  011FFC  0EF7               	movlw	high STR_261
 16244  011FFE  0101               	movlb	1	; () banked
 16245  012000  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16246  012002  EC03  F0B8         	call	_UARTstring	;wreg free
 16247                           
 16248                           ;StringCommand.c: 702: LCDdisplayFeedback("Joe room what??");
 16249  012006  0E49               	movlw	low STR_262
 16250  012008  0101               	movlb	1	; () banked
 16251  01200A  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 16252  01200C  0EFA               	movlw	high STR_262
 16253  01200E  0101               	movlb	1	; () banked
 16254  012010  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 16255  012012  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 16256                           
 16257                           ;StringCommand.c: 703: }
 16258                           ;StringCommand.c: 704: }
 16259  012016  D36F               	goto	l683
 16260  012018                     l15161:
 16261                           
 16262                           ;StringCommand.c: 705: else
 16263                           ;StringCommand.c: 706: {
 16264                           ;StringCommand.c: 707: UARTstring("Joes Room Help Menu\r\n\n");
 16265  012018  0E76               	movlw	low STR_263
 16266  01201A  0101               	movlb	1	; () banked
 16267  01201C  6F19               	movwf	UARTstring@data& (0+255),b
 16268  01201E  0EF6               	movlw	high STR_263
 16269  012020  0101               	movlb	1	; () banked
 16270  012022  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16271  012024  EC03  F0B8         	call	_UARTstring	;wreg free
 16272                           
 16273                           ;StringCommand.c: 708: UARTstring("Devices:\r\n");
 16274  012028  0EB7               	movlw	low STR_61
 16275  01202A  0101               	movlb	1	; () banked
 16276  01202C  6F19               	movwf	UARTstring@data& (0+255),b
 16277  01202E  0EFD               	movlw	high STR_61
 16278  012030  0101               	movlb	1	; () banked
 16279  012032  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16280  012034  EC03  F0B8         	call	_UARTstring	;wreg free
 16281                           
 16282                           ;StringCommand.c: 709: UARTstring("Light\r\n\n");
 16283  012038  0E86               	movlw	low STR_265
 16284  01203A  0101               	movlb	1	; () banked
 16285  01203C  6F19               	movwf	UARTstring@data& (0+255),b
 16286  01203E  0EFE               	movlw	high STR_265
 16287  012040  0101               	movlb	1	; () banked
 16288  012042  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16289  012044  EC03  F0B8         	call	_UARTstring	;wreg free
 16290                           
 16291                           ;StringCommand.c: 710: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 16292  012048  0EEB               	movlw	low STR_64
 16293  01204A  0101               	movlb	1	; () banked
 16294  01204C  6F19               	movwf	UARTstring@data& (0+255),b
 16295  01204E  0EEE               	movlw	high STR_64
 16296  012050  0101               	movlb	1	; () banked
 16297  012052  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16298  012054  EC03  F0B8         	call	_UARTstring	;wreg free
 16299                           
 16300                           ;StringCommand.c: 711: UARTstring("i.e. Joes room light = On\r\n");
 16301  012058  0E27               	movlw	low STR_267
 16302  01205A  0101               	movlb	1	; () banked
 16303  01205C  6F19               	movwf	UARTstring@data& (0+255),b
 16304  01205E  0EF5               	movlw	high STR_267
 16305  012060  0101               	movlb	1	; () banked
 16306  012062  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16307  012064  EC03  F0B8         	call	_UARTstring	;wreg free
 16308                           
 16309                           ;StringCommand.c: 712: LCD_Scroll("Joe room Menu");
 16310  012068  0E9B               	movlw	low STR_268
 16311  01206A  0101               	movlb	1	; () banked
 16312  01206C  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 16313  01206E  0EFC               	movlw	high STR_268
 16314  012070  0101               	movlb	1	; () banked
 16315  012072  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16316  012074  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 16317                           
 16318                           ;StringCommand.c: 713: LCD_Scroll("Devices:");
 16319  012078  0E8F               	movlw	low STR_67
 16320  01207A  0101               	movlb	1	; () banked
 16321  01207C  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 16322  01207E  0EFE               	movlw	high STR_67
 16323  012080  0101               	movlb	1	; () banked
 16324  012082  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16325  012084  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 16326                           
 16327                           ;StringCommand.c: 714: LCD_Scroll("Light");
 16328  012088  0EA7               	movlw	low STR_93
 16329  01208A  0101               	movlb	1	; () banked
 16330  01208C  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 16331  01208E  0EFF               	movlw	high STR_93
 16332  012090  0101               	movlb	1	; () banked
 16333  012092  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16334  012094  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 16335                           
 16336                           ;StringCommand.c: 715: }
 16337                           ;StringCommand.c: 716: }
 16338  012098  D32E               	goto	l683
 16339  01209A                     l15169:
 16340                           
 16341                           ;StringCommand.c: 718: else if (StringMatch(Input, "?"))
 16342  01209A  C188  F10E         	movff	Command@Input,StringMatch@This
 16343  01209E  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 16344  0120A2  0E17               	movlw	low (STR_83+14)
 16345  0120A4  0101               	movlb	1	; () banked
 16346  0120A6  6F10               	movwf	StringMatch@That& (0+255),b
 16347  0120A8  0EFA               	movlw	high (STR_83+14)
 16348  0120AA  0101               	movlb	1	; () banked
 16349  0120AC  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 16350  0120AE  EC94  F0BA         	call	_StringMatch	;wreg free
 16351  0120B2  0900               	iorlw	0
 16352  0120B4  B4D8               	btfsc	status,2,c
 16353  0120B6  D15D               	goto	l15221
 16354                           
 16355                           ;StringCommand.c: 719: {
 16356                           ;StringCommand.c: 720: UARTstring("Devices:\r\n\n");
 16357  0120B8  0E6F               	movlw	low STR_272
 16358  0120BA  0101               	movlb	1	; () banked
 16359  0120BC  6F19               	movwf	UARTstring@data& (0+255),b
 16360  0120BE  0EFD               	movlw	high STR_272
 16361  0120C0  0101               	movlb	1	; () banked
 16362  0120C2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16363  0120C4  EC03  F0B8         	call	_UARTstring	;wreg free
 16364                           
 16365                           ;StringCommand.c: 721: UARTstring("Bedroom\r\n");
 16366  0120C8  0E0E               	movlw	low STR_273
 16367  0120CA  0101               	movlb	1	; () banked
 16368  0120CC  6F19               	movwf	UARTstring@data& (0+255),b
 16369  0120CE  0EFE               	movlw	high STR_273
 16370  0120D0  0101               	movlb	1	; () banked
 16371  0120D2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16372  0120D4  EC03  F0B8         	call	_UARTstring	;wreg free
 16373                           
 16374                           ;StringCommand.c: 722: UARTstring("Livingroom\r\n");
 16375  0120D8  0EE0               	movlw	low STR_274
 16376  0120DA  0101               	movlb	1	; () banked
 16377  0120DC  6F19               	movwf	UARTstring@data& (0+255),b
 16378  0120DE  0EFC               	movlw	high STR_274
 16379  0120E0  0101               	movlb	1	; () banked
 16380  0120E2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16381  0120E4  EC03  F0B8         	call	_UARTstring	;wreg free
 16382                           
 16383                           ;StringCommand.c: 723: UARTstring("Joes room\r\n");
 16384  0120E8  0E87               	movlw	low STR_275
 16385  0120EA  0101               	movlb	1	; () banked
 16386  0120EC  6F19               	movwf	UARTstring@data& (0+255),b
 16387  0120EE  0EFD               	movlw	high STR_275
 16388  0120F0  0101               	movlb	1	; () banked
 16389  0120F2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16390  0120F4  EC03  F0B8         	call	_UARTstring	;wreg free
 16391                           
 16392                           ;StringCommand.c: 724: UARTstring("Christmas Tree\r\n");
 16393  0120F8  0E1D               	movlw	low STR_276
 16394  0120FA  0101               	movlb	1	; () banked
 16395  0120FC  6F19               	movwf	UARTstring@data& (0+255),b
 16396  0120FE  0EF9               	movlw	high STR_276
 16397  012100  0101               	movlb	1	; () banked
 16398  012102  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16399  012104  EC03  F0B8         	call	_UARTstring	;wreg free
 16400                           
 16401                           ;StringCommand.c: 725: UARTstring("Contrast\r\n");
 16402  012108  0ECD               	movlw	low STR_277
 16403  01210A  0101               	movlb	1	; () banked
 16404  01210C  6F19               	movwf	UARTstring@data& (0+255),b
 16405  01210E  0EFD               	movlw	high STR_277
 16406  012110  0101               	movlb	1	; () banked
 16407  012112  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16408  012114  EC03  F0B8         	call	_UARTstring	;wreg free
 16409                           
 16410                           ;StringCommand.c: 726: UARTstring("ADC\r\n");
 16411  012118  0E83               	movlw	low STR_278
 16412  01211A  0101               	movlb	1	; () banked
 16413  01211C  6F19               	movwf	UARTstring@data& (0+255),b
 16414  01211E  0EFF               	movlw	high STR_278
 16415  012120  0101               	movlb	1	; () banked
 16416  012122  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16417  012124  EC03  F0B8         	call	_UARTstring	;wreg free
 16418                           
 16419                           ;StringCommand.c: 727: UARTstring("RTC\r\n");
 16420  012128  0E58               	movlw	low (STR_228+18)
 16421  01212A  0101               	movlb	1	; () banked
 16422  01212C  6F19               	movwf	UARTstring@data& (0+255),b
 16423  01212E  0EF6               	movlw	high (STR_228+18)
 16424  012130  0101               	movlb	1	; () banked
 16425  012132  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16426  012134  EC03  F0B8         	call	_UARTstring	;wreg free
 16427                           
 16428                           ;StringCommand.c: 728: UARTstring("Baud\r\n\n");
 16429  012138  0EFA               	movlw	low STR_280
 16430  01213A  0101               	movlb	1	; () banked
 16431  01213C  6F19               	movwf	UARTstring@data& (0+255),b
 16432  01213E  0EFE               	movlw	high STR_280
 16433  012140  0101               	movlb	1	; () banked
 16434  012142  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16435  012144  EC03  F0B8         	call	_UARTstring	;wreg free
 16436                           
 16437                           ;StringCommand.c: 729: UARTstring("For Device help enter device followed by a '?' \r\n")
      +                          ;
 16438  012148  0EC1               	movlw	low STR_281
 16439  01214A  0101               	movlb	1	; () banked
 16440  01214C  6F19               	movwf	UARTstring@data& (0+255),b
 16441  01214E  0EF0               	movlw	high STR_281
 16442  012150  0101               	movlb	1	; () banked
 16443  012152  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16444  012154  EC03  F0B8         	call	_UARTstring	;wreg free
 16445                           
 16446                           ;StringCommand.c: 730: UARTstring("i.e.  Livingroom?\r\n\r\n");
 16447  012158  0EBB               	movlw	low STR_282
 16448  01215A  0101               	movlb	1	; () banked
 16449  01215C  6F19               	movwf	UARTstring@data& (0+255),b
 16450  01215E  0EF6               	movlw	high STR_282
 16451  012160  0101               	movlb	1	; () banked
 16452  012162  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16453  012164  EC03  F0B8         	call	_UARTstring	;wreg free
 16454                           
 16455                           ;StringCommand.c: 731: UARTstring("Current Time\r\n");
 16456  012168  0E59               	movlw	low STR_283
 16457  01216A  0101               	movlb	1	; () banked
 16458  01216C  6F19               	movwf	UARTstring@data& (0+255),b
 16459  01216E  0EFB               	movlw	high STR_283
 16460  012170  0101               	movlb	1	; () banked
 16461  012172  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16462  012174  EC03  F0B8         	call	_UARTstring	;wreg free
 16463                           
 16464                           ;StringCommand.c: 732: SetLCDcursor(0, 0);
 16465  012178  0E00               	movlw	0
 16466  01217A  0101               	movlb	1	; () banked
 16467  01217C  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 16468  01217E  0E00               	movlw	0
 16469  012180  EC9F  F004         	call	_SetLCDcursor
 16470                           
 16471                           ;StringCommand.c: 733: LCDPrintString("Help Menu");
 16472  012184  0E68               	movlw	low STR_284
 16473  012186  0101               	movlb	1	; () banked
 16474  012188  6F1C               	movwf	LCDPrintString@Text& (0+255),b
 16475  01218A  0EFE               	movlw	high STR_284
 16476  01218C  0101               	movlb	1	; () banked
 16477  01218E  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
 16478  012190  ECC7  F0BB         	call	_LCDPrintString	;wreg free
 16479                           
 16480                           ;StringCommand.c: 734: if(!READ_RTC_TIME())
 16481  012194  EC48  F0B1         	call	_READ_RTC_TIME	;wreg free
 16482  012198  0900               	iorlw	0
 16483  01219A  A4D8               	btfss	status,2,c
 16484  01219C  D07D               	goto	l15195
 16485                           
 16486                           ;StringCommand.c: 735: {
 16487                           ;StringCommand.c: 736: SprintDate(buf, NowTime, 0);
 16488  01219E  0E00               	movlw	low Command@buf
 16489  0121A0  0101               	movlb	1	; () banked
 16490  0121A2  6F50               	movwf	SprintDate@ReturnBuf& (0+255),b
 16491  0121A4  0E02               	movlw	high Command@buf
 16492  0121A6  0101               	movlb	1	; () banked
 16493  0121A8  6F51               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 16494  0121AA  EE21  F093         	lfsr	2,_NowTime
 16495  0121AE  EE01  F052         	lfsr	0,SprintDate@DisplayTime
 16496  0121B2  0E08               	movlw	8
 16497  0121B4                     u19371:
 16498  0121B4  CFDB FFEB          	movff	plusw2,plusw0
 16499  0121B8  06E8               	decf	wreg,f,c
 16500  0121BA  E2FC               	bc	u19371
 16501  0121BC  0E00               	movlw	0
 16502  0121BE  0101               	movlb	1	; () banked
 16503  0121C0  6F5B               	movwf	SprintDate@Military& (0+255),b
 16504  0121C2  ECE0  F0AF         	call	_SprintDate	;wreg free
 16505                           
 16506                           ;StringCommand.c: 737: UARTstring(buf);
 16507  0121C6  0E00               	movlw	low Command@buf
 16508  0121C8  0101               	movlb	1	; () banked
 16509  0121CA  6F19               	movwf	UARTstring@data& (0+255),b
 16510  0121CC  0E02               	movlw	high Command@buf
 16511  0121CE  0101               	movlb	1	; () banked
 16512  0121D0  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16513  0121D2  EC03  F0B8         	call	_UARTstring	;wreg free
 16514                           
 16515                           ;StringCommand.c: 738: UARTstring("\r\n");
 16516  0121D6  0ECE               	movlw	low (STR_282+19)
 16517  0121D8  0101               	movlb	1	; () banked
 16518  0121DA  6F19               	movwf	UARTstring@data& (0+255),b
 16519  0121DC  0EF6               	movlw	high (STR_282+19)
 16520  0121DE  0101               	movlb	1	; () banked
 16521  0121E0  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16522  0121E2  EC03  F0B8         	call	_UARTstring	;wreg free
 16523                           
 16524                           ;StringCommand.c: 740: if(NowTime.HoursAM_PM)
 16525  0121E6  0101               	movlb	1	; () banked
 16526  0121E8  5197               	movf	(_NowTime+4)& (0+255),w,b
 16527  0121EA  B4D8               	btfsc	status,2,c
 16528  0121EC  D023               	goto	l15189
 16529                           
 16530                           ; BSR set to: 1
 16531                           ;StringCommand.c: 741: {
 16532                           ;StringCommand.c: 742: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 16533  0121EE  0E00               	movlw	low Command@buf
 16534  0121F0  0101               	movlb	1	; () banked
 16535  0121F2  6F24               	movwf	sprintf@sp& (0+255),b
 16536  0121F4  0E02               	movlw	high Command@buf
 16537  0121F6  0101               	movlb	1	; () banked
 16538  0121F8  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 16539  0121FA  0EA4               	movlw	low STR_226
 16540  0121FC  0101               	movlb	1	; () banked
 16541  0121FE  6F26               	movwf	sprintf@f& (0+255),b
 16542  012200  0EF6               	movlw	high STR_226
 16543  012202  0101               	movlb	1	; () banked
 16544  012204  6F27               	movwf	(sprintf@f+1)& (0+255),b
 16545  012206  C19A  F128         	movff	_NowTime+7,?_sprintf+4
 16546  01220A  0101               	movlb	1	; () banked
 16547  01220C  6B29               	clrf	(?_sprintf+5)& (0+255),b
 16548  01220E  C199  F12A         	movff	_NowTime+6,?_sprintf+6
 16549  012212  0101               	movlb	1	; () banked
 16550  012214  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 16551  012216  C195  F12C         	movff	_NowTime+2,?_sprintf+8
 16552  01221A  0101               	movlb	1	; () banked
 16553  01221C  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 16554  01221E  C194  F12E         	movff	_NowTime+1,?_sprintf+10
 16555  012222  0101               	movlb	1	; () banked
 16556  012224  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 16557  012226  C193  F130         	movff	_NowTime,?_sprintf+12
 16558  01222A  0101               	movlb	1	; () banked
 16559  01222C  6B31               	clrf	(?_sprintf+13)& (0+255),b
 16560  01222E  EC86  F093         	call	_sprintf	;wreg free
 16561                           
 16562                           ;StringCommand.c: 743: }
 16563  012232  D023               	goto	l15191
 16564  012234                     l15189:
 16565                           
 16566                           ;StringCommand.c: 744: else
 16567                           ;StringCommand.c: 745: {
 16568                           ;StringCommand.c: 746: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 16569  012234  0E00               	movlw	low Command@buf
 16570  012236  0101               	movlb	1	; () banked
 16571  012238  6F24               	movwf	sprintf@sp& (0+255),b
 16572  01223A  0E02               	movlw	high Command@buf
 16573  01223C  0101               	movlb	1	; () banked
 16574  01223E  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 16575  012240  0E8D               	movlw	low STR_227
 16576  012242  0101               	movlb	1	; () banked
 16577  012244  6F26               	movwf	sprintf@f& (0+255),b
 16578  012246  0EF6               	movlw	high STR_227
 16579  012248  0101               	movlb	1	; () banked
 16580  01224A  6F27               	movwf	(sprintf@f+1)& (0+255),b
 16581  01224C  C19A  F128         	movff	_NowTime+7,?_sprintf+4
 16582  012250  0101               	movlb	1	; () banked
 16583  012252  6B29               	clrf	(?_sprintf+5)& (0+255),b
 16584  012254  C199  F12A         	movff	_NowTime+6,?_sprintf+6
 16585  012258  0101               	movlb	1	; () banked
 16586  01225A  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 16587  01225C  C195  F12C         	movff	_NowTime+2,?_sprintf+8
 16588  012260  0101               	movlb	1	; () banked
 16589  012262  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 16590  012264  C194  F12E         	movff	_NowTime+1,?_sprintf+10
 16591  012268  0101               	movlb	1	; () banked
 16592  01226A  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 16593  01226C  C193  F130         	movff	_NowTime,?_sprintf+12
 16594  012270  0101               	movlb	1	; () banked
 16595  012272  6B31               	clrf	(?_sprintf+13)& (0+255),b
 16596  012274  EC86  F093         	call	_sprintf	;wreg free
 16597  012278  D000               	goto	l15191
 16598  01227A                     l15191:
 16599                           
 16600                           ;StringCommand.c: 747: }
 16601                           ;StringCommand.c: 748: SetLCDcursor(1, 0);
 16602  01227A  0E00               	movlw	0
 16603  01227C  0101               	movlb	1	; () banked
 16604  01227E  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 16605  012280  0E01               	movlw	1
 16606  012282  EC9F  F004         	call	_SetLCDcursor
 16607                           
 16608                           ;StringCommand.c: 749: LCDPrintString(buf);
 16609  012286  0E00               	movlw	low Command@buf
 16610  012288  0101               	movlb	1	; () banked
 16611  01228A  6F1C               	movwf	LCDPrintString@Text& (0+255),b
 16612  01228C  0E02               	movlw	high Command@buf
 16613  01228E  0101               	movlb	1	; () banked
 16614  012290  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
 16615  012292  ECC7  F0BB         	call	_LCDPrintString	;wreg free
 16616                           
 16617                           ;StringCommand.c: 750: }
 16618  012296  D016               	goto	l819
 16619  012298                     l15195:
 16620                           
 16621                           ;StringCommand.c: 751: else
 16622                           ;StringCommand.c: 752: {
 16623                           ;StringCommand.c: 753: UARTstring("ERROR: Can't Read RTC\r\n");
 16624  012298  0E46               	movlw	low STR_228
 16625  01229A  0101               	movlb	1	; () banked
 16626  01229C  6F19               	movwf	UARTstring@data& (0+255),b
 16627  01229E  0EF6               	movlw	high STR_228
 16628  0122A0  0101               	movlb	1	; () banked
 16629  0122A2  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16630  0122A4  EC03  F0B8         	call	_UARTstring	;wreg free
 16631                           
 16632                           ;StringCommand.c: 754: SetLCDcursor(1, 0);
 16633  0122A8  0E00               	movlw	0
 16634  0122AA  0101               	movlb	1	; () banked
 16635  0122AC  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 16636  0122AE  0E01               	movlw	1
 16637  0122B0  EC9F  F004         	call	_SetLCDcursor
 16638                           
 16639                           ;StringCommand.c: 755: LCDPrintString("RTC isnt working");
 16640  0122B4  0E61               	movlw	low STR_229
 16641  0122B6  0101               	movlb	1	; () banked
 16642  0122B8  6F1C               	movwf	LCDPrintString@Text& (0+255),b
 16643  0122BA  0EF9               	movlw	high STR_229
 16644  0122BC  0101               	movlb	1	; () banked
 16645  0122BE  6F1D               	movwf	(LCDPrintString@Text+1)& (0+255),b
 16646  0122C0  ECC7  F0BB         	call	_LCDPrintString	;wreg free
 16647  0122C4                     l819:
 16648                           
 16649                           ;StringCommand.c: 756: }
 16650                           ;StringCommand.c: 757: SetLCDcursor(1, 0);
 16651  0122C4  0E00               	movlw	0
 16652  0122C6  0101               	movlb	1	; () banked
 16653  0122C8  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 16654  0122CA  0E01               	movlw	1
 16655  0122CC  EC9F  F004         	call	_SetLCDcursor
 16656                           
 16657                           ;StringCommand.c: 758: LCD_Scroll("Device Menus:");
 16658  0122D0  0E47               	movlw	low STR_290
 16659  0122D2  0101               	movlb	1	; () banked
 16660  0122D4  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 16661  0122D6  0EFC               	movlw	high STR_290
 16662  0122D8  0101               	movlb	1	; () banked
 16663  0122DA  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16664  0122DC  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 16665                           
 16666                           ;StringCommand.c: 759: LCD_Scroll("Bedroom?");
 16667  0122E0  0E98               	movlw	low STR_291
 16668  0122E2  0101               	movlb	1	; () banked
 16669  0122E4  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 16670  0122E6  0EFE               	movlw	high STR_291
 16671  0122E8  0101               	movlb	1	; () banked
 16672  0122EA  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16673  0122EC  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 16674                           
 16675                           ;StringCommand.c: 760: LCD_Scroll("Livingroom?");
 16676  0122F0  0E93               	movlw	low STR_292
 16677  0122F2  0101               	movlb	1	; () banked
 16678  0122F4  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 16679  0122F6  0EFD               	movlw	high STR_292
 16680  0122F8  0101               	movlb	1	; () banked
 16681  0122FA  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16682  0122FC  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 16683                           
 16684                           ;StringCommand.c: 761: LCD_Scroll("Joes Room?");
 16685  012300  0ED8               	movlw	low STR_293
 16686  012302  0101               	movlb	1	; () banked
 16687  012304  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 16688  012306  0EFD               	movlw	high STR_293
 16689  012308  0101               	movlb	1	; () banked
 16690  01230A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16691  01230C  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 16692                           
 16693                           ;StringCommand.c: 762: LCD_Scroll("Christmas Tree?");
 16694  012310  0E59               	movlw	low STR_294
 16695  012312  0101               	movlb	1	; () banked
 16696  012314  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 16697  012316  0EFA               	movlw	high STR_294
 16698  012318  0101               	movlb	1	; () banked
 16699  01231A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16700  01231C  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 16701                           
 16702                           ;StringCommand.c: 763: LCD_Scroll("Contrast?");
 16703  012320  0E40               	movlw	low STR_295
 16704  012322  0101               	movlb	1	; () banked
 16705  012324  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 16706  012326  0EFE               	movlw	high STR_295
 16707  012328  0101               	movlb	1	; () banked
 16708  01232A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16709  01232C  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 16710                           
 16711                           ;StringCommand.c: 764: LCD_Scroll("ADC?");
 16712  012330  0ECC               	movlw	low STR_296
 16713  012332  0101               	movlb	1	; () banked
 16714  012334  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 16715  012336  0EFF               	movlw	high STR_296
 16716  012338  0101               	movlb	1	; () banked
 16717  01233A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16718  01233C  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 16719                           
 16720                           ;StringCommand.c: 765: LCD_Scroll("RTC?");
 16721  012340  0ED1               	movlw	low STR_297
 16722  012342  0101               	movlb	1	; () banked
 16723  012344  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 16724  012346  0EFF               	movlw	high STR_297
 16725  012348  0101               	movlb	1	; () banked
 16726  01234A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16727  01234C  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 16728                           
 16729                           ;StringCommand.c: 766: LCD_Scroll("Baud?");
 16730  012350  0E8F               	movlw	low STR_298
 16731  012352  0101               	movlb	1	; () banked
 16732  012354  6F1D               	movwf	LCD_Scroll@This& (0+255),b
 16733  012356  0EFF               	movlw	high STR_298
 16734  012358  0101               	movlb	1	; () banked
 16735  01235A  6F1E               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16736  01235C  ECBD  F0A4         	call	_LCD_Scroll	;wreg free
 16737  012360                     l15219:
 16738                           
 16739                           ;StringCommand.c: 767: LCDclearCount =0;
 16740  012360  0E00               	movlw	0
 16741  012362  6E4F               	movwf	_LCDclearCount,c
 16742  012364  0E00               	movlw	0
 16743  012366  6E50               	movwf	_LCDclearCount+1,c
 16744  012368  0E00               	movlw	0
 16745  01236A  6E51               	movwf	_LCDclearCount+2,c
 16746  01236C  0E00               	movlw	0
 16747  01236E  6E52               	movwf	_LCDclearCount+3,c
 16748                           
 16749                           ;StringCommand.c: 768: }
 16750  012370  D1C2               	goto	l683
 16751  012372                     l15221:
 16752                           
 16753                           ;StringCommand.c: 769: else if(StringMatch(Input, "baud?"))
 16754  012372  C188  F10E         	movff	Command@Input,StringMatch@This
 16755  012376  C189  F10F         	movff	Command@Input+1,StringMatch@This+1
 16756  01237A  0E95               	movlw	low STR_299
 16757  01237C  0101               	movlb	1	; () banked
 16758  01237E  6F10               	movwf	StringMatch@That& (0+255),b
 16759  012380  0EFF               	movlw	high STR_299
 16760  012382  0101               	movlb	1	; () banked
 16761  012384  6F11               	movwf	(StringMatch@That+1)& (0+255),b
 16762  012386  EC94  F0BA         	call	_StringMatch	;wreg free
 16763  01238A  0900               	iorlw	0
 16764  01238C  B4D8               	btfsc	status,2,c
 16765  01238E  D029               	goto	l15229
 16766                           
 16767                           ;StringCommand.c: 770: {
 16768                           ;StringCommand.c: 772: sprintf(buf,"BAUD = %d", GetBaud());
 16769  012390  0E00               	movlw	low Command@buf
 16770  012392  0101               	movlb	1	; () banked
 16771  012394  6F24               	movwf	sprintf@sp& (0+255),b
 16772  012396  0E02               	movlw	high Command@buf
 16773  012398  0101               	movlb	1	; () banked
 16774  01239A  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 16775  01239C  0E4A               	movlw	low STR_300
 16776  01239E  0101               	movlb	1	; () banked
 16777  0123A0  6F26               	movwf	sprintf@f& (0+255),b
 16778  0123A2  0EFE               	movlw	high STR_300
 16779  0123A4  0101               	movlb	1	; () banked
 16780  0123A6  6F27               	movwf	(sprintf@f+1)& (0+255),b
 16781  0123A8  EC62  F007         	call	_GetBaud	;wreg free
 16782  0123AC  C10E  F128         	movff	?_GetBaud,?_sprintf+4
 16783  0123B0  C10F  F129         	movff	?_GetBaud+1,?_sprintf+5
 16784  0123B4  C110  F12A         	movff	?_GetBaud+2,?_sprintf+6
 16785  0123B8  C111  F12B         	movff	?_GetBaud+3,?_sprintf+7
 16786  0123BC  EC86  F093         	call	_sprintf	;wreg free
 16787                           
 16788                           ;StringCommand.c: 773: UARTstring(buf);
 16789  0123C0  0E00               	movlw	low Command@buf
 16790  0123C2  0101               	movlb	1	; () banked
 16791  0123C4  6F19               	movwf	UARTstring@data& (0+255),b
 16792  0123C6  0E02               	movlw	high Command@buf
 16793  0123C8  0101               	movlb	1	; () banked
 16794  0123CA  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 16795  0123CC  EC03  F0B8         	call	_UARTstring	;wreg free
 16796                           
 16797                           ;StringCommand.c: 774: LCDdisplayFeedback(buf);
 16798  0123D0  0E00               	movlw	low Command@buf
 16799  0123D2  0101               	movlb	1	; () banked
 16800  0123D4  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 16801  0123D6  0E02               	movlw	high Command@buf
 16802  0123D8  0101               	movlb	1	; () banked
 16803  0123DA  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 16804  0123DC  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 16805                           
 16806                           ;StringCommand.c: 775: }
 16807  0123E0  D18A               	goto	l683
 16808  0123E2                     l15229:
 16809                           
 16810                           ;StringCommand.c: 776: else if(StringContains(Input, "baudwillbesetto") || StringContain
      +                          s(Input, "resetto") ||
 16811                           ;StringCommand.c: 777: StringContains(Input, "setbaud") || StringContains(Input, "change
      +                          baud"))
 16812  0123E2  C188  F10E         	movff	Command@Input,StringContains@This
 16813  0123E6  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 16814  0123EA  0E19               	movlw	low STR_301
 16815  0123EC  0101               	movlb	1	; () banked
 16816  0123EE  6F10               	movwf	StringContains@That& (0+255),b
 16817  0123F0  0EFB               	movlw	high STR_301
 16818  0123F2  0101               	movlb	1	; () banked
 16819  0123F4  6F11               	movwf	(StringContains@That+1)& (0+255),b
 16820  0123F6  EC54  F0BA         	call	_StringContains	;wreg free
 16821  0123FA  0900               	iorlw	0
 16822  0123FC  A4D8               	btfss	status,2,c
 16823  0123FE  D02D               	goto	l15237
 16824  012400  C188  F10E         	movff	Command@Input,StringContains@This
 16825  012404  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 16826  012408  0E3A               	movlw	low STR_302
 16827  01240A  0101               	movlb	1	; () banked
 16828  01240C  6F10               	movwf	StringContains@That& (0+255),b
 16829  01240E  0EFF               	movlw	high STR_302
 16830  012410  0101               	movlb	1	; () banked
 16831  012412  6F11               	movwf	(StringContains@That+1)& (0+255),b
 16832  012414  EC54  F0BA         	call	_StringContains	;wreg free
 16833  012418  0900               	iorlw	0
 16834  01241A  A4D8               	btfss	status,2,c
 16835  01241C  D01E               	goto	l15237
 16836  01241E  C188  F10E         	movff	Command@Input,StringContains@This
 16837  012422  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 16838  012426  0E0A               	movlw	low STR_303
 16839  012428  0101               	movlb	1	; () banked
 16840  01242A  6F10               	movwf	StringContains@That& (0+255),b
 16841  01242C  0EFF               	movlw	high STR_303
 16842  01242E  0101               	movlb	1	; () banked
 16843  012430  6F11               	movwf	(StringContains@That+1)& (0+255),b
 16844  012432  EC54  F0BA         	call	_StringContains	;wreg free
 16845  012436  0900               	iorlw	0
 16846  012438  A4D8               	btfss	status,2,c
 16847  01243A  D00F               	goto	l15237
 16848  01243C  C188  F10E         	movff	Command@Input,StringContains@This
 16849  012440  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 16850  012444  0EE3               	movlw	low STR_304
 16851  012446  0101               	movlb	1	; () banked
 16852  012448  6F10               	movwf	StringContains@That& (0+255),b
 16853  01244A  0EFD               	movlw	high STR_304
 16854  01244C  0101               	movlb	1	; () banked
 16855  01244E  6F11               	movwf	(StringContains@That+1)& (0+255),b
 16856  012450  EC54  F0BA         	call	_StringContains	;wreg free
 16857  012454  0900               	iorlw	0
 16858  012456  B4D8               	btfsc	status,2,c
 16859  012458  D0BE               	goto	l15275
 16860  01245A                     l15237:
 16861                           
 16862                           ;StringCommand.c: 778: {
 16863                           ;StringCommand.c: 780: if (!StringContains(Input, "="))
 16864  01245A  C188  F10E         	movff	Command@Input,StringContains@This
 16865  01245E  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 16866  012462  0E05               	movlw	low (STR_201+11)
 16867  012464  0101               	movlb	1	; () banked
 16868  012466  6F10               	movwf	StringContains@That& (0+255),b
 16869  012468  0EFD               	movlw	high (STR_201+11)
 16870  01246A  0101               	movlb	1	; () banked
 16871  01246C  6F11               	movwf	(StringContains@That+1)& (0+255),b
 16872  01246E  EC54  F0BA         	call	_StringContains	;wreg free
 16873  012472  0900               	iorlw	0
 16874  012474  A4D8               	btfss	status,2,c
 16875  012476  D007               	goto	l15241
 16876                           
 16877                           ;StringCommand.c: 781: {
 16878                           ;StringCommand.c: 782: StringAddEqual(Input);
 16879  012478  C188  F11D         	movff	Command@Input,StringAddEqual@Input
 16880  01247C  C189  F11E         	movff	Command@Input+1,StringAddEqual@Input+1
 16881  012480  EC9D  F0A6         	call	_StringAddEqual	;wreg free
 16882  012484  D000               	goto	l15241
 16883  012486                     l15241:
 16884                           
 16885                           ;StringCommand.c: 783: }
 16886                           ;StringCommand.c: 784: BAUDtemp = (unsigned long)GetEnteredNumber(Input);
 16887  012486  C188  F11A         	movff	Command@Input,GetEnteredNumber@This
 16888  01248A  C189  F11B         	movff	Command@Input+1,GetEnteredNumber@This+1
 16889  01248E  ECB2  F0A5         	call	_GetEnteredNumber	;wreg free
 16890  012492  C11A  F2CE         	movff	?_GetEnteredNumber,Command@BAUDtemp
 16891  012496  C11B  F2CF         	movff	?_GetEnteredNumber+1,Command@BAUDtemp+1
 16892  01249A  C11C  F2D0         	movff	?_GetEnteredNumber+2,Command@BAUDtemp+2
 16893  01249E  C11D  F2D1         	movff	?_GetEnteredNumber+3,Command@BAUDtemp+3
 16894                           
 16895                           ;StringCommand.c: 785: if(BAUDtemp >=2400 && BAUDtemp <= 115200)
 16896  0124A2  0102               	movlb	2	; () banked
 16897  0124A4  51D1               	movf	(Command@BAUDtemp+3)& (0+255),w,b
 16898  0124A6  0102               	movlb	2	; () banked
 16899  0124A8  11D0               	iorwf	(Command@BAUDtemp+2)& (0+255),w,b
 16900  0124AA  E108               	bnz	u19450
 16901  0124AC  0E60               	movlw	96
 16902  0124AE  0102               	movlb	2	; () banked
 16903  0124B0  5DCE               	subwf	Command@BAUDtemp& (0+255),w,b
 16904  0124B2  0E09               	movlw	9
 16905  0124B4  0102               	movlb	2	; () banked
 16906  0124B6  59CF               	subwfb	(Command@BAUDtemp+1)& (0+255),w,b
 16907  0124B8  A0D8               	btfss	status,0,c
 16908  0124BA  D084               	goto	l15273
 16909  0124BC                     u19450:
 16910                           
 16911                           ; BSR set to: 2
 16912  0124BC  0102               	movlb	2	; () banked
 16913  0124BE  51D1               	movf	(Command@BAUDtemp+3)& (0+255),w,b
 16914  0124C0  E109               	bnz	u19461
 16915  0124C2  0102               	movlb	2	; () banked
 16916  0124C4  05CE               	decf	Command@BAUDtemp& (0+255),w,b
 16917  0124C6  0EC2               	movlw	194
 16918  0124C8  0102               	movlb	2	; () banked
 16919  0124CA  59CF               	subwfb	(Command@BAUDtemp+1)& (0+255),w,b
 16920  0124CC  0E01               	movlw	1
 16921  0124CE  0102               	movlb	2	; () banked
 16922  0124D0  59D0               	subwfb	(Command@BAUDtemp+2)& (0+255),w,b
 16923  0124D2  B0D8               	btfsc	status,0,c
 16924  0124D4                     u19461:
 16925  0124D4  D077               	goto	l15273
 16926                           
 16927                           ; BSR set to: 2
 16928                           ;StringCommand.c: 786: {
 16929                           ;StringCommand.c: 787: if(StringContains(Input, "withnoparitybit"))
 16930  0124D6  C188  F10E         	movff	Command@Input,StringContains@This
 16931  0124DA  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 16932  0124DE  0E39               	movlw	low STR_306
 16933  0124E0  0101               	movlb	1	; () banked
 16934  0124E2  6F10               	movwf	StringContains@That& (0+255),b
 16935  0124E4  0EFB               	movlw	high STR_306
 16936  0124E6  0101               	movlb	1	; () banked
 16937  0124E8  6F11               	movwf	(StringContains@That+1)& (0+255),b
 16938  0124EA  EC54  F0BA         	call	_StringContains	;wreg free
 16939  0124EE  0900               	iorlw	0
 16940  0124F0  B4D8               	btfsc	status,2,c
 16941  0124F2  D002               	goto	l15251
 16942                           
 16943                           ;StringCommand.c: 788: {
 16944                           ;StringCommand.c: 789: PARITYtemp =0;
 16945  0124F4  0E00               	movlw	0
 16946  0124F6  D045               	goto	L13
 16947  0124F8                     l15251:
 16948                           
 16949                           ;StringCommand.c: 791: else if(StringContains(Input, "withoddparitybit"))
 16950  0124F8  C188  F10E         	movff	Command@Input,StringContains@This
 16951  0124FC  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 16952  012500  0EB6               	movlw	low STR_307
 16953  012502  0101               	movlb	1	; () banked
 16954  012504  6F10               	movwf	StringContains@That& (0+255),b
 16955  012506  0EF9               	movlw	high STR_307
 16956  012508  0101               	movlb	1	; () banked
 16957  01250A  6F11               	movwf	(StringContains@That+1)& (0+255),b
 16958  01250C  EC54  F0BA         	call	_StringContains	;wreg free
 16959  012510  0900               	iorlw	0
 16960  012512  B4D8               	btfsc	status,2,c
 16961  012514  D002               	goto	l15255
 16962                           
 16963                           ;StringCommand.c: 792: {
 16964                           ;StringCommand.c: 793: PARITYtemp =1;
 16965  012516  0E01               	movlw	1
 16966  012518  D034               	goto	L13
 16967  01251A                     l15255:
 16968                           
 16969                           ;StringCommand.c: 795: else if(StringContains(Input, "withevenparitybit"))
 16970  01251A  C188  F10E         	movff	Command@Input,StringContains@This
 16971  01251E  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 16972  012522  0EB6               	movlw	low STR_308
 16973  012524  0101               	movlb	1	; () banked
 16974  012526  6F10               	movwf	StringContains@That& (0+255),b
 16975  012528  0EF8               	movlw	high STR_308
 16976  01252A  0101               	movlb	1	; () banked
 16977  01252C  6F11               	movwf	(StringContains@That+1)& (0+255),b
 16978  01252E  EC54  F0BA         	call	_StringContains	;wreg free
 16979  012532  0900               	iorlw	0
 16980  012534  B4D8               	btfsc	status,2,c
 16981  012536  D002               	goto	l15259
 16982                           
 16983                           ;StringCommand.c: 796: {
 16984                           ;StringCommand.c: 797: PARITYtemp =2;
 16985  012538  0E02               	movlw	2
 16986  01253A  D023               	goto	L13
 16987  01253C                     l15259:
 16988                           
 16989                           ;StringCommand.c: 799: else if(StringContains(Input, "withmarkbit"))
 16990  01253C  C188  F10E         	movff	Command@Input,StringContains@This
 16991  012540  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 16992  012544  0E9F               	movlw	low STR_309
 16993  012546  0101               	movlb	1	; () banked
 16994  012548  6F10               	movwf	StringContains@That& (0+255),b
 16995  01254A  0EFD               	movlw	high STR_309
 16996  01254C  0101               	movlb	1	; () banked
 16997  01254E  6F11               	movwf	(StringContains@That+1)& (0+255),b
 16998  012550  EC54  F0BA         	call	_StringContains	;wreg free
 16999  012554  0900               	iorlw	0
 17000  012556  B4D8               	btfsc	status,2,c
 17001  012558  D002               	goto	l15263
 17002                           
 17003                           ;StringCommand.c: 800: {
 17004                           ;StringCommand.c: 801: PARITYtemp =3;
 17005  01255A  0E03               	movlw	3
 17006  01255C  D012               	goto	L13
 17007  01255E                     l15263:
 17008                           
 17009                           ;StringCommand.c: 803: else if(StringContains(Input, "withspacebit"))
 17010  01255E  C188  F10E         	movff	Command@Input,StringContains@This
 17011  012562  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 17012  012566  0E3B               	movlw	low STR_310
 17013  012568  0101               	movlb	1	; () banked
 17014  01256A  6F10               	movwf	StringContains@That& (0+255),b
 17015  01256C  0EFD               	movlw	high STR_310
 17016  01256E  0101               	movlb	1	; () banked
 17017  012570  6F11               	movwf	(StringContains@That+1)& (0+255),b
 17018  012572  EC54  F0BA         	call	_StringContains	;wreg free
 17019  012576  0900               	iorlw	0
 17020  012578  B4D8               	btfsc	status,2,c
 17021  01257A  D002               	goto	l15267
 17022                           
 17023                           ;StringCommand.c: 804: {
 17024                           ;StringCommand.c: 805: PARITYtemp =4;
 17025  01257C  0E04               	movlw	4
 17026  01257E  D001               	goto	L13
 17027  012580                     l15267:
 17028                           
 17029                           ;StringCommand.c: 807: else
 17030                           ;StringCommand.c: 808: {
 17031                           ;StringCommand.c: 809: PARITYtemp = 5;
 17032  012580  0E05               	movlw	5
 17033  012582                     L13:
 17034  012582  0102               	movlb	2	; () banked
 17035  012584  6FD4               	movwf	Command@PARITYtemp& (0+255),b
 17036  012586  0E00               	movlw	0
 17037  012588  6FD5               	movwf	(Command@PARITYtemp+1)& (0+255),b
 17038  01258A  0E00               	movlw	0
 17039  01258C  6FD6               	movwf	(Command@PARITYtemp+2)& (0+255),b
 17040  01258E  0E00               	movlw	0
 17041  012590  6FD7               	movwf	(Command@PARITYtemp+3)& (0+255),b
 17042                           
 17043                           ; BSR set to: 2
 17044                           
 17045                           ; BSR set to: 2
 17046                           
 17047                           ; BSR set to: 2
 17048                           
 17049                           ; BSR set to: 2
 17050  012592  D000               	goto	l15269
 17051  012594                     l15269:
 17052                           
 17053                           ; BSR set to: 2
 17054                           ;StringCommand.c: 810: }
 17055                           ;StringCommand.c: 811: if(PARITYtemp != 5)
 17056  012594  0E05               	movlw	5
 17057  012596  0102               	movlb	2	; () banked
 17058  012598  19D4               	xorwf	Command@PARITYtemp& (0+255),w,b
 17059  01259A  0102               	movlb	2	; () banked
 17060  01259C  11D5               	iorwf	(Command@PARITYtemp+1)& (0+255),w,b
 17061  01259E  0102               	movlb	2	; () banked
 17062  0125A0  11D6               	iorwf	(Command@PARITYtemp+2)& (0+255),w,b
 17063  0125A2  0102               	movlb	2	; () banked
 17064  0125A4  11D7               	iorwf	(Command@PARITYtemp+3)& (0+255),w,b
 17065  0125A6  B4D8               	btfsc	status,2,c
 17066  0125A8  D0A6               	goto	l683
 17067                           
 17068                           ; BSR set to: 2
 17069                           ;StringCommand.c: 812: {
 17070                           ;StringCommand.c: 813: SetBaud(BAUDtemp, PARITYtemp);
 17071  0125AA  C2CE  F150         	movff	Command@BAUDtemp,SetBaud@Baud
 17072  0125AE  C2CF  F151         	movff	Command@BAUDtemp+1,SetBaud@Baud+1
 17073  0125B2  C2D0  F152         	movff	Command@BAUDtemp+2,SetBaud@Baud+2
 17074  0125B6  C2D1  F153         	movff	Command@BAUDtemp+3,SetBaud@Baud+3
 17075  0125BA  C2D4  F154         	movff	Command@PARITYtemp,SetBaud@Parity
 17076  0125BE  EC79  F0A3         	call	_SetBaud	;wreg free
 17077                           
 17078                           ;StringCommand.c: 814: }
 17079                           ;StringCommand.c: 815: }
 17080  0125C2  D099               	goto	l683
 17081  0125C4                     l15273:
 17082                           
 17083                           ;StringCommand.c: 816: else
 17084                           ;StringCommand.c: 817: {
 17085                           ;StringCommand.c: 818: UARTstring("Baud Out of range\r\n");
 17086  0125C4  0E3D               	movlw	low STR_311
 17087  0125C6  0101               	movlb	1	; () banked
 17088  0125C8  6F19               	movwf	UARTstring@data& (0+255),b
 17089  0125CA  0EF7               	movlw	high STR_311
 17090  0125CC  0101               	movlb	1	; () banked
 17091  0125CE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 17092  0125D0  EC03  F0B8         	call	_UARTstring	;wreg free
 17093                           
 17094                           ;StringCommand.c: 819: }
 17095                           ;StringCommand.c: 820: }
 17096  0125D4  D090               	goto	l683
 17097  0125D6                     l15275:
 17098                           
 17099                           ;StringCommand.c: 821: else if(StringContains(Input, "baudis"))
 17100  0125D6  C188  F10E         	movff	Command@Input,StringContains@This
 17101  0125DA  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 17102  0125DE  0E7C               	movlw	low STR_312
 17103  0125E0  0101               	movlb	1	; () banked
 17104  0125E2  6F10               	movwf	StringContains@That& (0+255),b
 17105  0125E4  0EFF               	movlw	high STR_312
 17106  0125E6  0101               	movlb	1	; () banked
 17107  0125E8  6F11               	movwf	(StringContains@That+1)& (0+255),b
 17108  0125EA  EC54  F0BA         	call	_StringContains	;wreg free
 17109  0125EE  0900               	iorlw	0
 17110  0125F0  A4D8               	btfss	status,2,c
 17111  0125F2  D05D               	goto	l15295
 17112                           
 17113                           ;StringCommand.c: 829: else if(StringContains(Input, "enterbaudrate"))
 17114                           
 17115                           ;StringCommand.c: 828: }
 17116                           
 17117                           ;StringCommand.c: 822: {
 17118                           ;StringCommand.c: 827: __nop();
 17119  0125F4  C188  F10E         	movff	Command@Input,StringContains@This
 17120  0125F8  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 17121  0125FC  0E55               	movlw	low STR_313
 17122  0125FE  0101               	movlb	1	; () banked
 17123  012600  6F10               	movwf	StringContains@That& (0+255),b
 17124  012602  0EFC               	movlw	high STR_313
 17125  012604  0101               	movlb	1	; () banked
 17126  012606  6F11               	movwf	(StringContains@That+1)& (0+255),b
 17127  012608  EC54  F0BA         	call	_StringContains	;wreg free
 17128  01260C  0900               	iorlw	0
 17129  01260E  A4D8               	btfss	status,2,c
 17130  012610  D04E               	goto	l15295
 17131                           
 17132                           ;StringCommand.c: 834: else if(ISNUMBER(Input[0]))
 17133                           
 17134                           ;StringCommand.c: 833: }
 17135                           
 17136                           ;StringCommand.c: 830: {
 17137                           ;StringCommand.c: 832: __nop();
 17138  012612  C188  FFD9         	movff	Command@Input,fsr2l
 17139  012616  C189  FFDA         	movff	Command@Input+1,fsr2h
 17140  01261A  50DF               	movf	indf2,w,c
 17141  01261C  ECE5  F006         	call	_ISNUMBER
 17142  012620  0900               	iorlw	0
 17143  012622  B4D8               	btfsc	status,2,c
 17144  012624  D057               	goto	l15299
 17145                           
 17146                           ;StringCommand.c: 835: {
 17147                           ;StringCommand.c: 837: if (!StringContains(Input, "="))
 17148  012626  C188  F10E         	movff	Command@Input,StringContains@This
 17149  01262A  C189  F10F         	movff	Command@Input+1,StringContains@This+1
 17150  01262E  0E05               	movlw	low (STR_201+11)
 17151  012630  0101               	movlb	1	; () banked
 17152  012632  6F10               	movwf	StringContains@That& (0+255),b
 17153  012634  0EFD               	movlw	high (STR_201+11)
 17154  012636  0101               	movlb	1	; () banked
 17155  012638  6F11               	movwf	(StringContains@That+1)& (0+255),b
 17156  01263A  EC54  F0BA         	call	_StringContains	;wreg free
 17157  01263E  0900               	iorlw	0
 17158  012640  A4D8               	btfss	status,2,c
 17159  012642  D007               	goto	l15289
 17160                           
 17161                           ;StringCommand.c: 838: {
 17162                           ;StringCommand.c: 839: StringAddEqual(Input);
 17163  012644  C188  F11D         	movff	Command@Input,StringAddEqual@Input
 17164  012648  C189  F11E         	movff	Command@Input+1,StringAddEqual@Input+1
 17165  01264C  EC9D  F0A6         	call	_StringAddEqual	;wreg free
 17166  012650  D000               	goto	l15289
 17167  012652                     l15289:
 17168                           
 17169                           ;StringCommand.c: 840: }
 17170                           ;StringCommand.c: 841: tempLONG = (unsigned long)GetEnteredNumber(Input);
 17171  012652  C188  F11A         	movff	Command@Input,GetEnteredNumber@This
 17172  012656  C189  F11B         	movff	Command@Input+1,GetEnteredNumber@This+1
 17173  01265A  ECB2  F0A5         	call	_GetEnteredNumber	;wreg free
 17174  01265E  C11A  F2DE         	movff	?_GetEnteredNumber,Command@tempLONG
 17175  012662  C11B  F2DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 17176  012666  C11C  F2E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 17177  01266A  C11D  F2E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 17178                           
 17179                           ;StringCommand.c: 842: {
 17180                           ;StringCommand.c: 843: if(tempLONG >=2400 && tempLONG <=115200)
 17181  01266E  0102               	movlb	2	; () banked
 17182  012670  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 17183  012672  D01F               	goto	l15297
 17184  012674  0102               	movlb	2	; () banked
 17185  012676  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 17186  012678  0102               	movlb	2	; () banked
 17187  01267A  11E0               	iorwf	(Command@tempLONG+2)& (0+255),w,b
 17188  01267C  E108               	bnz	u19570
 17189  01267E  0E60               	movlw	96
 17190  012680  0102               	movlb	2	; () banked
 17191  012682  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 17192  012684  0E09               	movlw	9
 17193  012686  0102               	movlb	2	; () banked
 17194  012688  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 17195  01268A  A0D8               	btfss	status,0,c
 17196  01268C  D012               	goto	l15297
 17197  01268E                     u19570:
 17198                           
 17199                           ; BSR set to: 2
 17200  01268E  0102               	movlb	2	; () banked
 17201  012690  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 17202  012692  D00D               	goto	l15295
 17203  012694  0102               	movlb	2	; () banked
 17204  012696  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 17205  012698  E10C               	bnz	l15297
 17206  01269A  0102               	movlb	2	; () banked
 17207  01269C  05DE               	decf	Command@tempLONG& (0+255),w,b
 17208  01269E  0EC2               	movlw	194
 17209  0126A0  0102               	movlb	2	; () banked
 17210  0126A2  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 17211  0126A4  0E01               	movlw	1
 17212  0126A6  0102               	movlb	2	; () banked
 17213  0126A8  59E0               	subwfb	(Command@tempLONG+2)& (0+255),w,b
 17214  0126AA  B0D8               	btfsc	status,0,c
 17215  0126AC  D002               	goto	l15297
 17216  0126AE                     l15295:
 17217                           
 17218                           ; BSR set to: 2
 17219                           ;StringCommand.c: 844: {
 17220                           ;StringCommand.c: 845: __nop();
 17221  0126AE  F000               	nop	
 17222                           
 17223                           ;StringCommand.c: 846: }
 17224  0126B0  D022               	goto	l683
 17225  0126B2                     l15297:
 17226                           
 17227                           ;StringCommand.c: 847: else
 17228                           ;StringCommand.c: 848: {
 17229                           ;StringCommand.c: 849: UARTstring("Invalid Command\r\n");
 17230  0126B2  0E38               	movlw	low STR_315
 17231  0126B4  0101               	movlb	1	; () banked
 17232  0126B6  6F19               	movwf	UARTstring@data& (0+255),b
 17233  0126B8  0EF8               	movlw	high STR_315
 17234  0126BA  0101               	movlb	1	; () banked
 17235  0126BC  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 17236  0126BE  EC03  F0B8         	call	_UARTstring	;wreg free
 17237                           
 17238                           ;StringCommand.c: 850: LCDdisplayFeedback("Invalid Command");
 17239  0126C2  0EA9               	movlw	low STR_316
 17240  0126C4  0101               	movlb	1	; () banked
 17241  0126C6  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 17242  0126C8  0EFA               	movlw	high STR_316
 17243  0126CA  0101               	movlb	1	; () banked
 17244  0126CC  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 17245  0126CE  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 17246                           
 17247                           ;StringCommand.c: 851: }
 17248                           ;StringCommand.c: 852: }
 17249                           ;StringCommand.c: 853: }
 17250  0126D2  D011               	goto	l683
 17251  0126D4                     l15299:
 17252                           
 17253                           ;StringCommand.c: 854: else
 17254                           ;StringCommand.c: 855: {
 17255                           ;StringCommand.c: 856: UARTstring("Invalid Command\r\n");
 17256  0126D4  0E38               	movlw	low STR_315
 17257  0126D6  0101               	movlb	1	; () banked
 17258  0126D8  6F19               	movwf	UARTstring@data& (0+255),b
 17259  0126DA  0EF8               	movlw	high STR_315
 17260  0126DC  0101               	movlb	1	; () banked
 17261  0126DE  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 17262  0126E0  EC03  F0B8         	call	_UARTstring	;wreg free
 17263                           
 17264                           ;StringCommand.c: 857: LCDdisplayFeedback("Invalid Command");
 17265  0126E4  0EA9               	movlw	low STR_316
 17266  0126E6  0101               	movlb	1	; () banked
 17267  0126E8  6F20               	movwf	LCDdisplayFeedback@Text& (0+255),b
 17268  0126EA  0EFA               	movlw	high STR_316
 17269  0126EC  0101               	movlb	1	; () banked
 17270  0126EE  6F21               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 17271  0126F0  ECFB  F004         	call	_LCDdisplayFeedback	;wreg free
 17272  0126F4  D000               	goto	l683
 17273  0126F6                     l683:
 17274                           
 17275                           ;StringCommand.c: 858: }
 17276                           ;StringCommand.c: 859: UARTstring("\r\n");
 17277  0126F6  0ECE               	movlw	low (STR_282+19)
 17278  0126F8  0101               	movlb	1	; () banked
 17279  0126FA  6F19               	movwf	UARTstring@data& (0+255),b
 17280  0126FC  0EF6               	movlw	high (STR_282+19)
 17281  0126FE  0101               	movlb	1	; () banked
 17282  012700  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 17283  012702  EC03  F0B8         	call	_UARTstring	;wreg free
 17284                           
 17285                           ;StringCommand.c: 860: return 1;
 17286  012706  0E01               	movlw	1
 17287  012708  0012               	return	
 17288  01270A  0012               	return		;funcret
 17289  01270C                     __end_of_Command:
 17290                           	opt stack 0
 17291                           tblptru	equ	0xFF8
 17292                           tblptrh	equ	0xFF7
 17293                           tblptrl	equ	0xFF6
 17294                           tablat	equ	0xFF5
 17295                           prodh	equ	0xFF4
 17296                           prodl	equ	0xFF3
 17297                           intcon	equ	0xFF2
 17298                           intcon2	equ	0xFF1
 17299                           postinc0	equ	0xFEE
 17300                           plusw0	equ	0xFEB
 17301                           wreg	equ	0xFE8
 17302                           postdec1	equ	0xFE5
 17303                           fsr1l	equ	0xFE1
 17304                           indf2	equ	0xFDF
 17305                           postinc2	equ	0xFDE
 17306                           postdec2	equ	0xFDD
 17307                           plusw2	equ	0xFDB
 17308                           fsr2h	equ	0xFDA
 17309                           fsr2l	equ	0xFD9
 17310                           status	equ	0xFD8
 17311                           
 17312 ;; *************** function _lowercase *****************
 17313 ;; Defined at:
 17314 ;;		line 297 in file "MISC.c"
 17315 ;; Parameters:    Size  Location     Type
 17316 ;;  Input           2   14[BANK1 ] PTR unsigned char 
 17317 ;;		 -> Rxdata(100), 
 17318 ;; Auto vars:     Size  Location     Type
 17319 ;;  i               1   17[BANK1 ] unsigned char 
 17320 ;; Return value:  Size  Location     Type
 17321 ;;		None               void
 17322 ;; Registers used:
 17323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17324 ;; Tracked objects:
 17325 ;;		On entry : 0/0
 17326 ;;		On exit  : 0/0
 17327 ;;		Unchanged: 0/0
 17328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17329 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17330 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17331 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17332 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17333 ;;Total ram usage:        4 bytes
 17334 ;; Hardware stack levels used:    1
 17335 ;; Hardware stack levels required when called:    7
 17336 ;; This function calls:
 17337 ;;		Nothing
 17338 ;; This function is called by:
 17339 ;;		_Command
 17340 ;; This function uses a non-reentrant model
 17341 ;;
 17342                           
 17343                           	psect	text29
 17344  01730C                     __ptext29:
 17345                           	opt stack 0
 17346  01730C                     _lowercase:
 17347                           	opt stack 22
 17348                           
 17349                           ;MISC.c: 299: unsigned char i =0;
 17350                           
 17351                           ;incstack = 0
 17352  01730C  0E00               	movlw	0
 17353  01730E  0101               	movlb	1	; () banked
 17354  017310  6F11               	movwf	lowercase@i& (0+255),b
 17355                           
 17356                           ;MISC.c: 300: while((Input[i]!= 0) && (i < 100))
 17357  017312  D02D               	goto	l13661
 17358  017314                     l13653:
 17359                           
 17360                           ; BSR set to: 1
 17361                           ;MISC.c: 301: {
 17362                           ;MISC.c: 302: if((Input[i] >= 65) && (Input[i] <= 90 ))
 17363  017314  0101               	movlb	1	; () banked
 17364  017316  5111               	movf	lowercase@i& (0+255),w,b
 17365  017318  0D01               	mullw	1
 17366  01731A  50F3               	movf	prodl,w,c
 17367  01731C  0101               	movlb	1	; () banked
 17368  01731E  250E               	addwf	lowercase@Input& (0+255),w,b
 17369  017320  6ED9               	movwf	fsr2l,c
 17370  017322  50F4               	movf	prodh,w,c
 17371  017324  0101               	movlb	1	; () banked
 17372  017326  210F               	addwfc	(lowercase@Input+1)& (0+255),w,b
 17373  017328  6EDA               	movwf	fsr2h,c
 17374  01732A  0E40               	movlw	64
 17375  01732C  64DF               	cpfsgt	indf2,c
 17376  01732E  D01C               	goto	l13659
 17377                           
 17378                           ; BSR set to: 1
 17379  017330  0101               	movlb	1	; () banked
 17380  017332  5111               	movf	lowercase@i& (0+255),w,b
 17381  017334  0D01               	mullw	1
 17382  017336  50F3               	movf	prodl,w,c
 17383  017338  0101               	movlb	1	; () banked
 17384  01733A  250E               	addwf	lowercase@Input& (0+255),w,b
 17385  01733C  6ED9               	movwf	fsr2l,c
 17386  01733E  50F4               	movf	prodh,w,c
 17387  017340  0101               	movlb	1	; () banked
 17388  017342  210F               	addwfc	(lowercase@Input+1)& (0+255),w,b
 17389  017344  6EDA               	movwf	fsr2h,c
 17390  017346  0E5B               	movlw	91
 17391  017348  60DF               	cpfslt	indf2,c
 17392  01734A  D00E               	goto	l13659
 17393                           
 17394                           ; BSR set to: 1
 17395                           ;MISC.c: 303: {
 17396                           ;MISC.c: 304: Input[i] += 32;
 17397  01734C  0101               	movlb	1	; () banked
 17398  01734E  5111               	movf	lowercase@i& (0+255),w,b
 17399  017350  0D01               	mullw	1
 17400  017352  50F3               	movf	prodl,w,c
 17401  017354  0101               	movlb	1	; () banked
 17402  017356  250E               	addwf	lowercase@Input& (0+255),w,b
 17403  017358  6ED9               	movwf	fsr2l,c
 17404  01735A  50F4               	movf	prodh,w,c
 17405  01735C  0101               	movlb	1	; () banked
 17406  01735E  210F               	addwfc	(lowercase@Input+1)& (0+255),w,b
 17407  017360  6EDA               	movwf	fsr2h,c
 17408  017362  0E20               	movlw	32
 17409  017364  26DF               	addwf	indf2,f,c
 17410  017366  D000               	goto	l13659
 17411  017368                     l13659:
 17412                           
 17413                           ; BSR set to: 1
 17414                           ;MISC.c: 305: }
 17415                           ;MISC.c: 306: i++;
 17416  017368  0101               	movlb	1	; () banked
 17417  01736A  2B11               	incf	lowercase@i& (0+255),f,b
 17418  01736C  D000               	goto	l13661
 17419  01736E                     l13661:
 17420                           
 17421                           ; BSR set to: 1
 17422  01736E  0101               	movlb	1	; () banked
 17423  017370  5111               	movf	lowercase@i& (0+255),w,b
 17424  017372  0D01               	mullw	1
 17425  017374  50F3               	movf	prodl,w,c
 17426  017376  0101               	movlb	1	; () banked
 17427  017378  250E               	addwf	lowercase@Input& (0+255),w,b
 17428  01737A  6ED9               	movwf	fsr2l,c
 17429  01737C  50F4               	movf	prodh,w,c
 17430  01737E  0101               	movlb	1	; () banked
 17431  017380  210F               	addwfc	(lowercase@Input+1)& (0+255),w,b
 17432  017382  6EDA               	movwf	fsr2h,c
 17433  017384  50DF               	movf	indf2,w,c
 17434  017386  B4D8               	btfsc	status,2,c
 17435  017388  0012               	return	
 17436                           
 17437                           ; BSR set to: 1
 17438  01738A  0E63               	movlw	99
 17439  01738C  0101               	movlb	1	; () banked
 17440  01738E  6511               	cpfsgt	lowercase@i& (0+255),b
 17441  017390  D7C1               	goto	l13653
 17442  017392  0012               	return	
 17443                           
 17444                           ; BSR set to: 1
 17445  017394  0012               	return	
 17446                           
 17447                           ; BSR set to: 1
 17448                           
 17449                           ; BSR set to: 1
 17450  017396  0012               	return		;funcret
 17451  017398                     __end_of_lowercase:
 17452                           	opt stack 0
 17453                           tblptru	equ	0xFF8
 17454                           tblptrh	equ	0xFF7
 17455                           tblptrl	equ	0xFF6
 17456                           tablat	equ	0xFF5
 17457                           prodh	equ	0xFF4
 17458                           prodl	equ	0xFF3
 17459                           intcon	equ	0xFF2
 17460                           intcon2	equ	0xFF1
 17461                           postinc0	equ	0xFEE
 17462                           plusw0	equ	0xFEB
 17463                           wreg	equ	0xFE8
 17464                           postdec1	equ	0xFE5
 17465                           fsr1l	equ	0xFE1
 17466                           indf2	equ	0xFDF
 17467                           postinc2	equ	0xFDE
 17468                           postdec2	equ	0xFDD
 17469                           plusw2	equ	0xFDB
 17470                           fsr2h	equ	0xFDA
 17471                           fsr2l	equ	0xFD9
 17472                           status	equ	0xFD8
 17473                           
 17474 ;; *************** function ___lwtoft *****************
 17475 ;; Defined at:
 17476 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 17477 ;; Parameters:    Size  Location     Type
 17478 ;;  c               2   22[BANK1 ] unsigned int 
 17479 ;; Auto vars:     Size  Location     Type
 17480 ;;		None
 17481 ;; Return value:  Size  Location     Type
 17482 ;;                  3   22[BANK1 ] float 
 17483 ;; Registers used:
 17484 ;;		wreg, status,2, status,0, cstack
 17485 ;; Tracked objects:
 17486 ;;		On entry : 0/0
 17487 ;;		On exit  : 0/0
 17488 ;;		Unchanged: 0/0
 17489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17490 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 17491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17493 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 17494 ;;Total ram usage:        3 bytes
 17495 ;; Hardware stack levels used:    1
 17496 ;; Hardware stack levels required when called:    8
 17497 ;; This function calls:
 17498 ;;		___ftpack
 17499 ;; This function is called by:
 17500 ;;		_Command
 17501 ;; This function uses a non-reentrant model
 17502 ;;
 17503                           
 17504                           	psect	text30
 17505  000CC2                     __ptext30:
 17506                           	opt stack 0
 17507  000CC2                     ___lwtoft:
 17508                           	opt stack 21
 17509                           
 17510                           ; BSR set to: 1
 17511                           ;incstack = 0
 17512  000CC2  C116  F10E         	movff	___lwtoft@c,___ftpack@arg
 17513  000CC6  C117  F10F         	movff	___lwtoft@c+1,___ftpack@arg+1
 17514  000CCA  0101               	movlb	1	; () banked
 17515  000CCC  6B10               	clrf	(___ftpack@arg+2)& (0+255),b
 17516  000CCE  0E8E               	movlw	142
 17517  000CD0  0101               	movlb	1	; () banked
 17518  000CD2  6F11               	movwf	___ftpack@exp& (0+255),b
 17519  000CD4  0E00               	movlw	0
 17520  000CD6  0101               	movlb	1	; () banked
 17521  000CD8  6F12               	movwf	___ftpack@sign& (0+255),b
 17522  000CDA  EC53  F0AD         	call	___ftpack	;wreg free
 17523  000CDE  C10E  F116         	movff	?___ftpack,?___lwtoft
 17524  000CE2  C10F  F117         	movff	?___ftpack+1,?___lwtoft+1
 17525  000CE6  C110  F118         	movff	?___ftpack+2,?___lwtoft+2
 17526  000CEA  0012               	return	
 17527  000CEC  0012               	return		;funcret
 17528  000CEE                     __end_of___lwtoft:
 17529                           	opt stack 0
 17530                           tblptru	equ	0xFF8
 17531                           tblptrh	equ	0xFF7
 17532                           tblptrl	equ	0xFF6
 17533                           tablat	equ	0xFF5
 17534                           prodh	equ	0xFF4
 17535                           prodl	equ	0xFF3
 17536                           intcon	equ	0xFF2
 17537                           intcon2	equ	0xFF1
 17538                           postinc0	equ	0xFEE
 17539                           plusw0	equ	0xFEB
 17540                           wreg	equ	0xFE8
 17541                           postdec1	equ	0xFE5
 17542                           fsr1l	equ	0xFE1
 17543                           indf2	equ	0xFDF
 17544                           postinc2	equ	0xFDE
 17545                           postdec2	equ	0xFDD
 17546                           plusw2	equ	0xFDB
 17547                           fsr2h	equ	0xFDA
 17548                           fsr2l	equ	0xFD9
 17549                           status	equ	0xFD8
 17550                           
 17551 ;; *************** function ___lwmod *****************
 17552 ;; Defined at:
 17553 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
 17554 ;; Parameters:    Size  Location     Type
 17555 ;;  dividend        2   14[BANK1 ] unsigned int 
 17556 ;;  divisor         2   16[BANK1 ] unsigned int 
 17557 ;; Auto vars:     Size  Location     Type
 17558 ;;  counter         1   18[BANK1 ] unsigned char 
 17559 ;; Return value:  Size  Location     Type
 17560 ;;                  2   14[BANK1 ] unsigned int 
 17561 ;; Registers used:
 17562 ;;		wreg, status,2, status,0
 17563 ;; Tracked objects:
 17564 ;;		On entry : 0/0
 17565 ;;		On exit  : 0/0
 17566 ;;		Unchanged: 0/0
 17567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17568 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17569 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17571 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 17572 ;;Total ram usage:        5 bytes
 17573 ;; Hardware stack levels used:    1
 17574 ;; Hardware stack levels required when called:    7
 17575 ;; This function calls:
 17576 ;;		Nothing
 17577 ;; This function is called by:
 17578 ;;		_Command
 17579 ;; This function uses a non-reentrant model
 17580 ;;
 17581                           
 17582                           	psect	text31
 17583  0179D8                     __ptext31:
 17584                           	opt stack 0
 17585  0179D8                     ___lwmod:
 17586                           	opt stack 22
 17587                           
 17588                           ;incstack = 0
 17589  0179D8  0101               	movlb	1	; () banked
 17590  0179DA  5110               	movf	___lwmod@divisor& (0+255),w,b
 17591  0179DC  0101               	movlb	1	; () banked
 17592  0179DE  1111               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17593  0179E0  B4D8               	btfsc	status,2,c
 17594  0179E2  D02B               	goto	l2502
 17595                           
 17596                           ; BSR set to: 1
 17597  0179E4  0E01               	movlw	1
 17598  0179E6  0101               	movlb	1	; () banked
 17599  0179E8  6F12               	movwf	___lwmod@counter& (0+255),b
 17600  0179EA  D007               	goto	l14377
 17601  0179EC                     l14375:
 17602                           
 17603                           ; BSR set to: 1
 17604  0179EC  0101               	movlb	1	; () banked
 17605  0179EE  90D8               	bcf	status,0,c
 17606  0179F0  3710               	rlcf	___lwmod@divisor& (0+255),f,b
 17607  0179F2  3711               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17608  0179F4  0101               	movlb	1	; () banked
 17609  0179F6  2B12               	incf	___lwmod@counter& (0+255),f,b
 17610  0179F8  D000               	goto	l14377
 17611  0179FA                     l14377:
 17612                           
 17613                           ; BSR set to: 1
 17614  0179FA  0101               	movlb	1	; () banked
 17615  0179FC  BF11               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
 17616  0179FE  D002               	goto	l14379
 17617  017A00  D7F5               	goto	l14375
 17618                           
 17619                           ; BSR set to: 1
 17620  017A02  D000               	goto	l14379
 17621  017A04                     l14379:
 17622                           
 17623                           ; BSR set to: 1
 17624  017A04  0101               	movlb	1	; () banked
 17625  017A06  5110               	movf	___lwmod@divisor& (0+255),w,b
 17626  017A08  0101               	movlb	1	; () banked
 17627  017A0A  5D0E               	subwf	___lwmod@dividend& (0+255),w,b
 17628  017A0C  0101               	movlb	1	; () banked
 17629  017A0E  5111               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17630  017A10  0101               	movlb	1	; () banked
 17631  017A12  590F               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17632  017A14  A0D8               	btfss	status,0,c
 17633  017A16  D009               	goto	l14383
 17634                           
 17635                           ; BSR set to: 1
 17636  017A18  0101               	movlb	1	; () banked
 17637  017A1A  5110               	movf	___lwmod@divisor& (0+255),w,b
 17638  017A1C  0101               	movlb	1	; () banked
 17639  017A1E  5F0E               	subwf	___lwmod@dividend& (0+255),f,b
 17640  017A20  0101               	movlb	1	; () banked
 17641  017A22  5111               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17642  017A24  0101               	movlb	1	; () banked
 17643  017A26  5B0F               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17644  017A28  D000               	goto	l14383
 17645  017A2A                     l14383:
 17646                           
 17647                           ; BSR set to: 1
 17648  017A2A  0101               	movlb	1	; () banked
 17649  017A2C  90D8               	bcf	status,0,c
 17650  017A2E  3311               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17651  017A30  3310               	rrcf	___lwmod@divisor& (0+255),f,b
 17652                           
 17653                           ; BSR set to: 1
 17654  017A32  0101               	movlb	1	; () banked
 17655  017A34  2F12               	decfsz	___lwmod@counter& (0+255),f,b
 17656  017A36  D7E6               	goto	l14379
 17657  017A38  D000               	goto	l2502
 17658  017A3A                     l2502:
 17659                           
 17660                           ; BSR set to: 1
 17661  017A3A  C10E  F10E         	movff	___lwmod@dividend,?___lwmod
 17662  017A3E  C10F  F10F         	movff	___lwmod@dividend+1,?___lwmod+1
 17663                           
 17664                           ; BSR set to: 1
 17665  017A42  0012               	return		;funcret
 17666  017A44                     __end_of___lwmod:
 17667                           	opt stack 0
 17668                           tblptru	equ	0xFF8
 17669                           tblptrh	equ	0xFF7
 17670                           tblptrl	equ	0xFF6
 17671                           tablat	equ	0xFF5
 17672                           prodh	equ	0xFF4
 17673                           prodl	equ	0xFF3
 17674                           intcon	equ	0xFF2
 17675                           intcon2	equ	0xFF1
 17676                           postinc0	equ	0xFEE
 17677                           plusw0	equ	0xFEB
 17678                           wreg	equ	0xFE8
 17679                           postdec1	equ	0xFE5
 17680                           fsr1l	equ	0xFE1
 17681                           indf2	equ	0xFDF
 17682                           postinc2	equ	0xFDE
 17683                           postdec2	equ	0xFDD
 17684                           plusw2	equ	0xFDB
 17685                           fsr2h	equ	0xFDA
 17686                           fsr2l	equ	0xFD9
 17687                           status	equ	0xFD8
 17688                           
 17689 ;; *************** function _StringMatch *****************
 17690 ;; Defined at:
 17691 ;;		line 126 in file "MISC.c"
 17692 ;; Parameters:    Size  Location     Type
 17693 ;;  This            2   14[BANK1 ] PTR unsigned char 
 17694 ;;		 -> Rxdata(100), 
 17695 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 17696 ;;		 -> STR_299(6), STR_271(2), STR_258(18), STR_255(17), 
 17697 ;;		 -> STR_112(18), STR_109(17), STR_106(15), STR_103(14), 
 17698 ;;		 -> STR_100(17), STR_99(16), STR_79(18), STR_76(17), 
 17699 ;;		 -> STR_73(20), STR_72(19), STR_55(9), STR_52(8), 
 17700 ;;		 -> STR_49(5), STR_46(9), STR_43(8), STR_40(5), 
 17701 ;;		 -> STR_37(2), 
 17702 ;; Auto vars:     Size  Location     Type
 17703 ;;		None
 17704 ;; Return value:  Size  Location     Type
 17705 ;;                  1    wreg      unsigned char 
 17706 ;; Registers used:
 17707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17708 ;; Tracked objects:
 17709 ;;		On entry : 0/0
 17710 ;;		On exit  : 0/0
 17711 ;;		Unchanged: 0/0
 17712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17713 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17715 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17716 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 17717 ;;Total ram usage:        5 bytes
 17718 ;; Hardware stack levels used:    1
 17719 ;; Hardware stack levels required when called:    7
 17720 ;; This function calls:
 17721 ;;		Nothing
 17722 ;; This function is called by:
 17723 ;;		_Command
 17724 ;; This function uses a non-reentrant model
 17725 ;;
 17726                           
 17727                           	psect	text32
 17728  017528                     __ptext32:
 17729                           	opt stack 0
 17730  017528                     _StringMatch:
 17731                           	opt stack 22
 17732                           
 17733                           ;MISC.c: 128: while(*This != 0)
 17734                           
 17735                           ; BSR set to: 1
 17736                           ;incstack = 0
 17737  017528  D027               	goto	l13493
 17738  01752A                     l13483:
 17739                           
 17740                           ;MISC.c: 129: {
 17741                           ;MISC.c: 130: if(*This != *That || *That == 0)
 17742  01752A  C10E  FFD9         	movff	StringMatch@This,fsr2l
 17743  01752E  C10F  FFDA         	movff	StringMatch@This+1,fsr2h
 17744  017532  50DF               	movf	indf2,w,c
 17745  017534  0101               	movlb	1	; () banked
 17746  017536  6F12               	movwf	??_StringMatch& (0+255),b
 17747  017538  C110  FFF6         	movff	StringMatch@That,tblptrl
 17748  01753C  C111  FFF7         	movff	StringMatch@That+1,tblptrh
 17749  017540                     	if	0	;tblptru may be non-zero
 17750  017540                     	endif
 17751  017540                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17752  017540  0E00               	movlw	low (__mediumconst shr (0+16))
 17753  017542  6EF8               	movwf	tblptru,c
 17754  017544                     	endif
 17755  017544  0008               	tblrd		*
 17756  017546  50F5               	movf	tablat,w,c
 17757  017548  0101               	movlb	1	; () banked
 17758  01754A  1912               	xorwf	??_StringMatch& (0+255),w,b
 17759  01754C  A4D8               	btfss	status,2,c
 17760  01754E  D00B               	goto	l13487
 17761                           
 17762                           ; BSR set to: 1
 17763  017550  C110  FFF6         	movff	StringMatch@That,tblptrl
 17764  017554  C111  FFF7         	movff	StringMatch@That+1,tblptrh
 17765  017558                     	if	0	;tblptru may be non-zero
 17766  017558                     	endif
 17767  017558                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17768  017558  0E00               	movlw	low (__mediumconst shr (0+16))
 17769  01755A  6EF8               	movwf	tblptru,c
 17770  01755C                     	endif
 17771  01755C  0008               	tblrd		*
 17772  01755E  50F5               	movf	tablat,w,c
 17773  017560  0900               	iorlw	0
 17774  017562  A4D8               	btfss	status,2,c
 17775  017564  D002               	goto	l13491
 17776  017566                     l13487:
 17777                           
 17778                           ; BSR set to: 1
 17779                           ;MISC.c: 131: {
 17780                           ;MISC.c: 132: return 0;
 17781  017566  0E00               	movlw	0
 17782                           
 17783                           ; BSR set to: 1
 17784  017568  0012               	return	
 17785  01756A                     l13491:
 17786                           
 17787                           ; BSR set to: 1
 17788                           ;MISC.c: 133: }
 17789                           ;MISC.c: 134: This++;
 17790  01756A  0101               	movlb	1	; () banked
 17791  01756C  4B0E               	infsnz	StringMatch@This& (0+255),f,b
 17792  01756E  2B0F               	incf	(StringMatch@This+1)& (0+255),f,b
 17793                           
 17794                           ;MISC.c: 135: That++;
 17795  017570  0101               	movlb	1	; () banked
 17796  017572  4B10               	infsnz	StringMatch@That& (0+255),f,b
 17797  017574  2B11               	incf	(StringMatch@That+1)& (0+255),f,b
 17798  017576  D000               	goto	l13493
 17799  017578                     l13493:
 17800  017578  C10E  FFD9         	movff	StringMatch@This,fsr2l
 17801  01757C  C10F  FFDA         	movff	StringMatch@This+1,fsr2h
 17802  017580  50DF               	movf	indf2,w,c
 17803  017582  A4D8               	btfss	status,2,c
 17804  017584  D7D2               	goto	l13483
 17805                           
 17806                           ;MISC.c: 136: }
 17807                           ;MISC.c: 137: if(*That == 0)
 17808  017586  C110  FFF6         	movff	StringMatch@That,tblptrl
 17809  01758A  C111  FFF7         	movff	StringMatch@That+1,tblptrh
 17810  01758E                     	if	0	;tblptru may be non-zero
 17811  01758E                     	endif
 17812  01758E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17813  01758E  0E00               	movlw	low (__mediumconst shr (0+16))
 17814  017590  6EF8               	movwf	tblptru,c
 17815  017592                     	endif
 17816  017592  0008               	tblrd		*
 17817  017594  50F5               	movf	tablat,w,c
 17818  017596  0900               	iorlw	0
 17819  017598  A4D8               	btfss	status,2,c
 17820  01759A  D002               	goto	l13503
 17821                           
 17822                           ;MISC.c: 138: {
 17823                           ;MISC.c: 139: return 1;
 17824  01759C  0E01               	movlw	1
 17825                           
 17826                           ;MISC.c: 140: }
 17827  01759E  0012               	return	
 17828  0175A0                     l13503:
 17829                           
 17830                           ;MISC.c: 141: else
 17831                           ;MISC.c: 142: {
 17832                           ;MISC.c: 143: return 0;
 17833  0175A0  0E00               	movlw	0
 17834  0175A2  0012               	return	
 17835  0175A4  0012               	return		;funcret
 17836  0175A6                     __end_of_StringMatch:
 17837                           	opt stack 0
 17838                           tblptru	equ	0xFF8
 17839                           tblptrh	equ	0xFF7
 17840                           tblptrl	equ	0xFF6
 17841                           tablat	equ	0xFF5
 17842                           prodh	equ	0xFF4
 17843                           prodl	equ	0xFF3
 17844                           intcon	equ	0xFF2
 17845                           intcon2	equ	0xFF1
 17846                           postinc0	equ	0xFEE
 17847                           plusw0	equ	0xFEB
 17848                           wreg	equ	0xFE8
 17849                           postdec1	equ	0xFE5
 17850                           fsr1l	equ	0xFE1
 17851                           indf2	equ	0xFDF
 17852                           postinc2	equ	0xFDE
 17853                           postdec2	equ	0xFDD
 17854                           plusw2	equ	0xFDB
 17855                           fsr2h	equ	0xFDA
 17856                           fsr2l	equ	0xFD9
 17857                           status	equ	0xFD8
 17858                           
 17859 ;; *************** function _StringContains *****************
 17860 ;; Defined at:
 17861 ;;		line 153 in file "MISC.c"
 17862 ;; Parameters:    Size  Location     Type
 17863 ;;  This            2   14[BANK1 ] PTR unsigned char 
 17864 ;;		 -> Rxdata(100), 
 17865 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 17866 ;;		 -> STR_314(2), STR_313(14), STR_312(7), STR_310(13), 
 17867 ;;		 -> STR_309(12), STR_308(18), STR_307(17), STR_306(16), 
 17868 ;;		 -> STR_305(2), STR_304(11), STR_303(8), STR_302(8), 
 17869 ;;		 -> STR_301(16), STR_254(2), STR_230(4), STR_223(5), 
 17870 ;;		 -> STR_220(8), STR_219(2), STR_199(2), STR_198(2), 
 17871 ;;		 -> STR_182(2), STR_181(2), STR_162(2), STR_159(2), 
 17872 ;;		 -> STR_143(5), STR_142(6), STR_139(4), STR_138(6), 
 17873 ;;		 -> STR_135(2), STR_134(6), STR_133(2), STR_132(10), 
 17874 ;;		 -> STR_131(6), STR_130(6), STR_98(4), STR_97(6), 
 17875 ;;		 -> STR_96(2), STR_71(2), STR_39(2), 
 17876 ;; Auto vars:     Size  Location     Type
 17877 ;;		None
 17878 ;; Return value:  Size  Location     Type
 17879 ;;                  1    wreg      unsigned char 
 17880 ;; Registers used:
 17881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17882 ;; Tracked objects:
 17883 ;;		On entry : 0/0
 17884 ;;		On exit  : 0/0
 17885 ;;		Unchanged: 0/0
 17886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17887 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17889 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17890 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 17891 ;;Total ram usage:        5 bytes
 17892 ;; Hardware stack levels used:    1
 17893 ;; Hardware stack levels required when called:    7
 17894 ;; This function calls:
 17895 ;;		Nothing
 17896 ;; This function is called by:
 17897 ;;		_Command
 17898 ;; This function uses a non-reentrant model
 17899 ;;
 17900                           
 17901                           	psect	text33
 17902  0174A8                     __ptext33:
 17903                           	opt stack 0
 17904  0174A8                     _StringContains:
 17905                           	opt stack 22
 17906                           
 17907                           ;MISC.c: 155: while(*This != 0)
 17908                           
 17909                           ;incstack = 0
 17910  0174A8  D035               	goto	l13527
 17911                           
 17912                           ;MISC.c: 156: {
 17913                           ;MISC.c: 157: while(*This == *That)
 17914  0174AA  D01D               	goto	l13523
 17915  0174AC                     l13509:
 17916                           
 17917                           ;MISC.c: 158: {
 17918                           ;MISC.c: 159: That++;
 17919  0174AC  0101               	movlb	1	; () banked
 17920  0174AE  4B10               	infsnz	StringContains@That& (0+255),f,b
 17921  0174B0  2B11               	incf	(StringContains@That+1)& (0+255),f,b
 17922                           
 17923                           ;MISC.c: 160: This++;
 17924  0174B2  0101               	movlb	1	; () banked
 17925  0174B4  4B0E               	infsnz	StringContains@This& (0+255),f,b
 17926  0174B6  2B0F               	incf	(StringContains@This+1)& (0+255),f,b
 17927                           
 17928                           ; BSR set to: 1
 17929                           ;MISC.c: 161: if(*That == 0)
 17930  0174B8  C110  FFF6         	movff	StringContains@That,tblptrl
 17931  0174BC  C111  FFF7         	movff	StringContains@That+1,tblptrh
 17932  0174C0                     	if	0	;tblptru may be non-zero
 17933  0174C0                     	endif
 17934  0174C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17935  0174C0  0E00               	movlw	low (__mediumconst shr (0+16))
 17936  0174C2  6EF8               	movwf	tblptru,c
 17937  0174C4                     	endif
 17938  0174C4  0008               	tblrd		*
 17939  0174C6  50F5               	movf	tablat,w,c
 17940  0174C8  0900               	iorlw	0
 17941  0174CA  A4D8               	btfss	status,2,c
 17942  0174CC  D002               	goto	l13517
 17943                           
 17944                           ; BSR set to: 1
 17945                           ;MISC.c: 162: {
 17946                           ;MISC.c: 163: return 1;
 17947  0174CE  0E01               	movlw	1
 17948                           
 17949                           ; BSR set to: 1
 17950  0174D0  0012               	return	
 17951  0174D2                     l13517:
 17952                           
 17953                           ; BSR set to: 1
 17954                           ;MISC.c: 164: }
 17955                           ;MISC.c: 165: if(*This == 0)
 17956  0174D2  C10E  FFD9         	movff	StringContains@This,fsr2l
 17957  0174D6  C10F  FFDA         	movff	StringContains@This+1,fsr2h
 17958  0174DA  50DF               	movf	indf2,w,c
 17959  0174DC  A4D8               	btfss	status,2,c
 17960  0174DE  D003               	goto	l13523
 17961                           
 17962                           ; BSR set to: 1
 17963                           ;MISC.c: 166: {
 17964                           ;MISC.c: 167: return 0;
 17965  0174E0  0E00               	movlw	0
 17966                           
 17967                           ; BSR set to: 1
 17968  0174E2  0012               	return	
 17969                           
 17970                           ; BSR set to: 1
 17971  0174E4  D000               	goto	l13523
 17972  0174E6                     l13523:
 17973  0174E6  C10E  FFD9         	movff	StringContains@This,fsr2l
 17974  0174EA  C10F  FFDA         	movff	StringContains@This+1,fsr2h
 17975  0174EE  50DF               	movf	indf2,w,c
 17976  0174F0  0101               	movlb	1	; () banked
 17977  0174F2  6F12               	movwf	??_StringContains& (0+255),b
 17978  0174F4  C110  FFF6         	movff	StringContains@That,tblptrl
 17979  0174F8  C111  FFF7         	movff	StringContains@That+1,tblptrh
 17980  0174FC                     	if	0	;tblptru may be non-zero
 17981  0174FC                     	endif
 17982  0174FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17983  0174FC  0E00               	movlw	low (__mediumconst shr (0+16))
 17984  0174FE  6EF8               	movwf	tblptru,c
 17985  017500                     	endif
 17986  017500  0008               	tblrd		*
 17987  017502  50F5               	movf	tablat,w,c
 17988  017504  0101               	movlb	1	; () banked
 17989  017506  1912               	xorwf	??_StringContains& (0+255),w,b
 17990  017508  B4D8               	btfsc	status,2,c
 17991  01750A  D7D0               	goto	l13509
 17992                           
 17993                           ; BSR set to: 1
 17994                           ;MISC.c: 168: }
 17995                           ;MISC.c: 169: }
 17996                           ;MISC.c: 170: This++;
 17997                           
 17998                           ; BSR set to: 1
 17999  01750C  0101               	movlb	1	; () banked
 18000  01750E  4B0E               	infsnz	StringContains@This& (0+255),f,b
 18001  017510  2B0F               	incf	(StringContains@This+1)& (0+255),f,b
 18002  017512  D000               	goto	l13527
 18003  017514                     l13527:
 18004  017514  C10E  FFD9         	movff	StringContains@This,fsr2l
 18005  017518  C10F  FFDA         	movff	StringContains@This+1,fsr2h
 18006  01751C  50DF               	movf	indf2,w,c
 18007  01751E  A4D8               	btfss	status,2,c
 18008  017520  D7E2               	goto	l13523
 18009                           
 18010                           ;MISC.c: 171: }
 18011                           ;MISC.c: 172: return 0;
 18012  017522  0E00               	movlw	0
 18013  017524  0012               	return	
 18014  017526  0012               	return		;funcret
 18015  017528                     __end_of_StringContains:
 18016                           	opt stack 0
 18017                           tblptru	equ	0xFF8
 18018                           tblptrh	equ	0xFF7
 18019                           tblptrl	equ	0xFF6
 18020                           tablat	equ	0xFF5
 18021                           prodh	equ	0xFF4
 18022                           prodl	equ	0xFF3
 18023                           intcon	equ	0xFF2
 18024                           intcon2	equ	0xFF1
 18025                           postinc0	equ	0xFEE
 18026                           plusw0	equ	0xFEB
 18027                           wreg	equ	0xFE8
 18028                           postdec1	equ	0xFE5
 18029                           fsr1l	equ	0xFE1
 18030                           indf2	equ	0xFDF
 18031                           postinc2	equ	0xFDE
 18032                           postdec2	equ	0xFDD
 18033                           plusw2	equ	0xFDB
 18034                           fsr2h	equ	0xFDA
 18035                           fsr2l	equ	0xFD9
 18036                           status	equ	0xFD8
 18037                           
 18038 ;; *************** function _StringAddEqual *****************
 18039 ;; Defined at:
 18040 ;;		line 315 in file "MISC.c"
 18041 ;; Parameters:    Size  Location     Type
 18042 ;;  Input           2   29[BANK1 ] PTR unsigned char 
 18043 ;;		 -> Rxdata(100), 
 18044 ;; Auto vars:     Size  Location     Type
 18045 ;;  temp          100   33[BANK1 ] unsigned char [100]
 18046 ;;  j               1  135[BANK1 ] unsigned char 
 18047 ;;  i               1  134[BANK1 ] unsigned char 
 18048 ;;  firstnumber     1  133[BANK1 ] unsigned char 
 18049 ;; Return value:  Size  Location     Type
 18050 ;;                  1    wreg      unsigned char 
 18051 ;; Registers used:
 18052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18053 ;; Tracked objects:
 18054 ;;		On entry : 0/0
 18055 ;;		On exit  : 0/0
 18056 ;;		Unchanged: 0/0
 18057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18058 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18059 ;;      Locals:         0       0     103       0       0       0       0       0       0       0       0       0       
      +0       0
 18060 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18061 ;;      Totals:         0       0     107       0       0       0       0       0       0       0       0       0       
      +0       0
 18062 ;;Total ram usage:      107 bytes
 18063 ;; Hardware stack levels used:    1
 18064 ;; Hardware stack levels required when called:    9
 18065 ;; This function calls:
 18066 ;;		_BufferCopy
 18067 ;;		_cleanBuffer
 18068 ;; This function is called by:
 18069 ;;		_Command
 18070 ;; This function uses a non-reentrant model
 18071 ;;
 18072                           
 18073                           	psect	text34
 18074  014D3A                     __ptext34:
 18075                           	opt stack 0
 18076  014D3A                     _StringAddEqual:
 18077                           	opt stack 20
 18078                           
 18079                           ;MISC.c: 317: unsigned char i =0;
 18080                           
 18081                           ;incstack = 0
 18082  014D3A  0E00               	movlw	0
 18083  014D3C  0101               	movlb	1	; () banked
 18084  014D3E  6F86               	movwf	StringAddEqual@i& (0+255),b
 18085                           
 18086                           ;MISC.c: 318: unsigned char j =0;
 18087  014D40  0E00               	movlw	0
 18088  014D42  0101               	movlb	1	; () banked
 18089  014D44  6F87               	movwf	StringAddEqual@j& (0+255),b
 18090                           
 18091                           ;MISC.c: 319: unsigned char firstnumber =200;
 18092  014D46  0EC8               	movlw	200
 18093  014D48  0101               	movlb	1	; () banked
 18094  014D4A  6F85               	movwf	StringAddEqual@firstnumber& (0+255),b
 18095                           
 18096                           ; BSR set to: 1
 18097                           ;MISC.c: 320: unsigned char temp[100];
 18098                           ;MISC.c: 321: cleanBuffer(temp,100);
 18099  014D4C  0E21               	movlw	low StringAddEqual@temp
 18100  014D4E  0101               	movlb	1	; () banked
 18101  014D50  6F0E               	movwf	cleanBuffer@data& (0+255),b
 18102  014D52  0E01               	movlw	high StringAddEqual@temp
 18103  014D54  0101               	movlb	1	; () banked
 18104  014D56  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
 18105  014D58  0E00               	movlw	0
 18106  014D5A  0101               	movlb	1	; () banked
 18107  014D5C  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
 18108  014D5E  0E64               	movlw	100
 18109  014D60  6F10               	movwf	cleanBuffer@count& (0+255),b
 18110  014D62  EC04  F003         	call	_cleanBuffer	;wreg free
 18111                           
 18112                           ;MISC.c: 322: while(Input[i] != 0)
 18113  014D66  D032               	goto	l13677
 18114  014D68                     l13669:
 18115                           
 18116                           ;MISC.c: 323: {
 18117                           ;MISC.c: 324: if((Input[i] >= 48) && (Input[i] <= 57) || (Input[i] == '-'))
 18118  014D68  0101               	movlb	1	; () banked
 18119  014D6A  5186               	movf	StringAddEqual@i& (0+255),w,b
 18120  014D6C  0D01               	mullw	1
 18121  014D6E  50F3               	movf	prodl,w,c
 18122  014D70  0101               	movlb	1	; () banked
 18123  014D72  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 18124  014D74  6ED9               	movwf	fsr2l,c
 18125  014D76  50F4               	movf	prodh,w,c
 18126  014D78  0101               	movlb	1	; () banked
 18127  014D7A  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 18128  014D7C  6EDA               	movwf	fsr2h,c
 18129  014D7E  0E2F               	movlw	47
 18130  014D80  64DF               	cpfsgt	indf2,c
 18131  014D82  D00F               	goto	l13673
 18132                           
 18133                           ; BSR set to: 1
 18134  014D84  0101               	movlb	1	; () banked
 18135  014D86  5186               	movf	StringAddEqual@i& (0+255),w,b
 18136  014D88  0D01               	mullw	1
 18137  014D8A  50F3               	movf	prodl,w,c
 18138  014D8C  0101               	movlb	1	; () banked
 18139  014D8E  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 18140  014D90  6ED9               	movwf	fsr2l,c
 18141  014D92  50F4               	movf	prodh,w,c
 18142  014D94  0101               	movlb	1	; () banked
 18143  014D96  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 18144  014D98  6EDA               	movwf	fsr2h,c
 18145  014D9A  0E39               	movlw	57
 18146  014D9C  64DF               	cpfsgt	indf2,c
 18147  014D9E  D010               	goto	l388
 18148  014DA0  D000               	goto	l13673
 18149  014DA2                     l13673:
 18150                           
 18151                           ; BSR set to: 1
 18152  014DA2  0101               	movlb	1	; () banked
 18153  014DA4  5186               	movf	StringAddEqual@i& (0+255),w,b
 18154  014DA6  0D01               	mullw	1
 18155  014DA8  50F3               	movf	prodl,w,c
 18156  014DAA  0101               	movlb	1	; () banked
 18157  014DAC  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 18158  014DAE  6ED9               	movwf	fsr2l,c
 18159  014DB0  50F4               	movf	prodh,w,c
 18160  014DB2  0101               	movlb	1	; () banked
 18161  014DB4  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 18162  014DB6  6EDA               	movwf	fsr2h,c
 18163  014DB8  0E2D               	movlw	45
 18164  014DBA  18DE               	xorwf	postinc2,w,c
 18165  014DBC  A4D8               	btfss	status,2,c
 18166  014DBE  D003               	goto	l13675
 18167  014DC0                     l388:
 18168                           
 18169                           ; BSR set to: 1
 18170                           ;MISC.c: 325: {
 18171                           ;MISC.c: 326: firstnumber=i;
 18172  014DC0  C186  F185         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 18173                           
 18174                           ;MISC.c: 327: break;
 18175  014DC4  D011               	goto	l13679
 18176  014DC6                     l13675:
 18177                           
 18178                           ; BSR set to: 1
 18179                           ;MISC.c: 328: }
 18180                           ;MISC.c: 329: i++;
 18181  014DC6  0101               	movlb	1	; () banked
 18182  014DC8  2B86               	incf	StringAddEqual@i& (0+255),f,b
 18183  014DCA  D000               	goto	l13677
 18184  014DCC                     l13677:
 18185  014DCC  0101               	movlb	1	; () banked
 18186  014DCE  5186               	movf	StringAddEqual@i& (0+255),w,b
 18187  014DD0  0D01               	mullw	1
 18188  014DD2  50F3               	movf	prodl,w,c
 18189  014DD4  0101               	movlb	1	; () banked
 18190  014DD6  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 18191  014DD8  6ED9               	movwf	fsr2l,c
 18192  014DDA  50F4               	movf	prodh,w,c
 18193  014DDC  0101               	movlb	1	; () banked
 18194  014DDE  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 18195  014DE0  6EDA               	movwf	fsr2h,c
 18196  014DE2  50DF               	movf	indf2,w,c
 18197  014DE4  A4D8               	btfss	status,2,c
 18198  014DE6  D7C0               	goto	l13669
 18199  014DE8                     l13679:
 18200                           
 18201                           ; BSR set to: 1
 18202                           ;MISC.c: 330: }
 18203                           ;MISC.c: 331: if(firstnumber ==200)
 18204  014DE8  0EC8               	movlw	200
 18205  014DEA  0101               	movlb	1	; () banked
 18206  014DEC  1985               	xorwf	StringAddEqual@firstnumber& (0+255),w,b
 18207  014DEE  B4D8               	btfsc	status,2,c
 18208  014DF0  0012               	return	
 18209  014DF2  D001               	goto	l13683
 18210                           
 18211                           ; BSR set to: 1
 18212                           ;MISC.c: 332: {
 18213                           ;MISC.c: 333: return 0;
 18214                           ;	Return value of _StringAddEqual is never used
 18215  014DF4  0012               	return	
 18216  014DF6                     l13683:
 18217                           
 18218                           ; BSR set to: 1
 18219                           ;MISC.c: 334: }
 18220                           ;MISC.c: 335: for(j=0;j<firstnumber;j++)
 18221  014DF6  0E00               	movlw	0
 18222  014DF8  0101               	movlb	1	; () banked
 18223  014DFA  6F87               	movwf	StringAddEqual@j& (0+255),b
 18224  014DFC  D019               	goto	l13689
 18225  014DFE                     l13685:
 18226                           
 18227                           ; BSR set to: 1
 18228                           ;MISC.c: 336: {
 18229                           ;MISC.c: 337: temp[j] = Input[j];
 18230  014DFE  0101               	movlb	1	; () banked
 18231  014E00  5187               	movf	StringAddEqual@j& (0+255),w,b
 18232  014E02  0D01               	mullw	1
 18233  014E04  50F3               	movf	prodl,w,c
 18234  014E06  0101               	movlb	1	; () banked
 18235  014E08  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 18236  014E0A  6ED9               	movwf	fsr2l,c
 18237  014E0C  50F4               	movf	prodh,w,c
 18238  014E0E  0101               	movlb	1	; () banked
 18239  014E10  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 18240  014E12  6EDA               	movwf	fsr2h,c
 18241  014E14  0101               	movlb	1	; () banked
 18242  014E16  5187               	movf	StringAddEqual@j& (0+255),w,b
 18243  014E18  0D01               	mullw	1
 18244  014E1A  0E21               	movlw	low StringAddEqual@temp
 18245  014E1C  24F3               	addwf	prodl,w,c
 18246  014E1E  6EE1               	movwf	fsr1l,c
 18247  014E20  0E01               	movlw	high StringAddEqual@temp
 18248  014E22  20F4               	addwfc	prodh,w,c
 18249  014E24  6EE2               	movwf	fsr1h,c
 18250  014E26  CFDF FFE7          	movff	indf2,indf1
 18251                           
 18252                           ; BSR set to: 1
 18253  014E2A  0101               	movlb	1	; () banked
 18254  014E2C  2B87               	incf	StringAddEqual@j& (0+255),f,b
 18255  014E2E  D000               	goto	l13689
 18256  014E30                     l13689:
 18257                           
 18258                           ; BSR set to: 1
 18259  014E30  0101               	movlb	1	; () banked
 18260  014E32  5185               	movf	StringAddEqual@firstnumber& (0+255),w,b
 18261  014E34  0101               	movlb	1	; () banked
 18262  014E36  5D87               	subwf	StringAddEqual@j& (0+255),w,b
 18263  014E38  A0D8               	btfss	status,0,c
 18264  014E3A  D7E1               	goto	l13685
 18265                           
 18266                           ; BSR set to: 1
 18267                           ;MISC.c: 338: }
 18268                           ;MISC.c: 339: temp[firstnumber] = '=';
 18269                           
 18270                           ; BSR set to: 1
 18271  014E3C  0101               	movlb	1	; () banked
 18272  014E3E  5185               	movf	StringAddEqual@firstnumber& (0+255),w,b
 18273  014E40  0D01               	mullw	1
 18274  014E42  0E21               	movlw	low StringAddEqual@temp
 18275  014E44  24F3               	addwf	prodl,w,c
 18276  014E46  6ED9               	movwf	fsr2l,c
 18277  014E48  0E01               	movlw	high StringAddEqual@temp
 18278  014E4A  20F4               	addwfc	prodh,w,c
 18279  014E4C  6EDA               	movwf	fsr2h,c
 18280  014E4E  0E3D               	movlw	61
 18281  014E50  6EDF               	movwf	indf2,c
 18282                           
 18283                           ; BSR set to: 1
 18284                           ;MISC.c: 340: for(j = (firstnumber);j<99;j++)
 18285  014E52  C185  F187         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 18286  014E56                     l13695:
 18287                           
 18288                           ; BSR set to: 1
 18289  014E56  0E62               	movlw	98
 18290  014E58  0101               	movlb	1	; () banked
 18291  014E5A  6587               	cpfsgt	StringAddEqual@j& (0+255),b
 18292  014E5C  D001               	goto	l13699
 18293                           
 18294                           ; BSR set to: 1
 18295  014E5E  D032               	goto	l13709
 18296  014E60                     l13699:
 18297                           
 18298                           ; BSR set to: 1
 18299                           ;MISC.c: 341: {
 18300                           ;MISC.c: 342: temp[j+1] = Input[j];
 18301  014E60  0101               	movlb	1	; () banked
 18302  014E62  5187               	movf	StringAddEqual@j& (0+255),w,b
 18303  014E64  0D01               	mullw	1
 18304  014E66  50F3               	movf	prodl,w,c
 18305  014E68  0101               	movlb	1	; () banked
 18306  014E6A  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 18307  014E6C  6ED9               	movwf	fsr2l,c
 18308  014E6E  50F4               	movf	prodh,w,c
 18309  014E70  0101               	movlb	1	; () banked
 18310  014E72  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 18311  014E74  6EDA               	movwf	fsr2h,c
 18312  014E76  0101               	movlb	1	; () banked
 18313  014E78  5187               	movf	StringAddEqual@j& (0+255),w,b
 18314  014E7A  0101               	movlb	1	; () banked
 18315  014E7C  6F1F               	movwf	??_StringAddEqual& (0+255),b
 18316  014E7E  6B20               	clrf	(??_StringAddEqual+1)& (0+255),b
 18317  014E80  0E01               	movlw	1
 18318  014E82  0101               	movlb	1	; () banked
 18319  014E84  271F               	addwf	??_StringAddEqual& (0+255),f,b
 18320  014E86  0E00               	movlw	0
 18321  014E88  2320               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 18322  014E8A  0E21               	movlw	low StringAddEqual@temp
 18323  014E8C  0101               	movlb	1	; () banked
 18324  014E8E  251F               	addwf	??_StringAddEqual& (0+255),w,b
 18325  014E90  6EE1               	movwf	fsr1l,c
 18326  014E92  0E01               	movlw	high StringAddEqual@temp
 18327  014E94  0101               	movlb	1	; () banked
 18328  014E96  2120               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 18329  014E98  6EE2               	movwf	fsr1h,c
 18330  014E9A  CFDF FFE7          	movff	indf2,indf1
 18331                           
 18332                           ; BSR set to: 1
 18333                           ;MISC.c: 343: if(Input[j] ==0)
 18334  014E9E  0101               	movlb	1	; () banked
 18335  014EA0  5187               	movf	StringAddEqual@j& (0+255),w,b
 18336  014EA2  0D01               	mullw	1
 18337  014EA4  50F3               	movf	prodl,w,c
 18338  014EA6  0101               	movlb	1	; () banked
 18339  014EA8  251D               	addwf	StringAddEqual@Input& (0+255),w,b
 18340  014EAA  6ED9               	movwf	fsr2l,c
 18341  014EAC  50F4               	movf	prodh,w,c
 18342  014EAE  0101               	movlb	1	; () banked
 18343  014EB0  211E               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 18344  014EB2  6EDA               	movwf	fsr2h,c
 18345  014EB4  50DF               	movf	indf2,w,c
 18346  014EB6  B4D8               	btfsc	status,2,c
 18347  014EB8  D005               	goto	l13709
 18348  014EBA  D001               	goto	l13705
 18349                           
 18350                           ; BSR set to: 1
 18351                           ;MISC.c: 344: {
 18352                           ;MISC.c: 345: break;
 18353  014EBC  D003               	goto	l13709
 18354  014EBE                     l13705:
 18355                           
 18356                           ; BSR set to: 1
 18357  014EBE  0101               	movlb	1	; () banked
 18358  014EC0  2B87               	incf	StringAddEqual@j& (0+255),f,b
 18359  014EC2  D7C9               	goto	l13695
 18360  014EC4                     l13709:
 18361                           
 18362                           ; BSR set to: 1
 18363                           ;MISC.c: 346: }
 18364                           ;MISC.c: 347: }
 18365                           ;MISC.c: 348: BufferCopy(temp,Input,100, 0);
 18366  014EC4  0E21               	movlw	low StringAddEqual@temp
 18367  014EC6  0101               	movlb	1	; () banked
 18368  014EC8  6F16               	movwf	BufferCopy@from& (0+255),b
 18369  014ECA  0E01               	movlw	high StringAddEqual@temp
 18370  014ECC  0101               	movlb	1	; () banked
 18371  014ECE  6F17               	movwf	(BufferCopy@from+1)& (0+255),b
 18372  014ED0  C11D  F118         	movff	StringAddEqual@Input,BufferCopy@to
 18373  014ED4  C11E  F119         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 18374  014ED8  0E64               	movlw	100
 18375  014EDA  0101               	movlb	1	; () banked
 18376  014EDC  6F1A               	movwf	BufferCopy@count& (0+255),b
 18377  014EDE  0E00               	movlw	0
 18378  014EE0  0101               	movlb	1	; () banked
 18379  014EE2  6F1B               	movwf	BufferCopy@shift& (0+255),b
 18380  014EE4  ECF3  F0B4         	call	_BufferCopy	;wreg free
 18381  014EE8  0012               	return	
 18382                           
 18383                           ;MISC.c: 349: return 1;
 18384                           ;	Return value of _StringAddEqual is never used
 18385  014EEA  0012               	return		;funcret
 18386  014EEC                     __end_of_StringAddEqual:
 18387                           	opt stack 0
 18388                           tblptru	equ	0xFF8
 18389                           tblptrh	equ	0xFF7
 18390                           tblptrl	equ	0xFF6
 18391                           tablat	equ	0xFF5
 18392                           prodh	equ	0xFF4
 18393                           prodl	equ	0xFF3
 18394                           intcon	equ	0xFF2
 18395                           intcon2	equ	0xFF1
 18396                           postinc0	equ	0xFEE
 18397                           plusw0	equ	0xFEB
 18398                           wreg	equ	0xFE8
 18399                           indf1	equ	0xFE7
 18400                           postdec1	equ	0xFE5
 18401                           fsr1h	equ	0xFE2
 18402                           fsr1l	equ	0xFE1
 18403                           indf2	equ	0xFDF
 18404                           postinc2	equ	0xFDE
 18405                           postdec2	equ	0xFDD
 18406                           plusw2	equ	0xFDB
 18407                           fsr2h	equ	0xFDA
 18408                           fsr2l	equ	0xFD9
 18409                           status	equ	0xFD8
 18410                           
 18411 ;; *************** function _StartsWith *****************
 18412 ;; Defined at:
 18413 ;;		line 181 in file "MISC.c"
 18414 ;; Parameters:    Size  Location     Type
 18415 ;;  This            2   14[BANK1 ] PTR unsigned char 
 18416 ;;		 -> Rxdata(100), 
 18417 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 18418 ;;		 -> STR_253(4), STR_218(4), STR_197(4), STR_180(9), 
 18419 ;;		 -> STR_161(17), STR_160(7), STR_158(4), STR_95(8), 
 18420 ;;		 -> STR_70(11), STR_38(4), 
 18421 ;; Auto vars:     Size  Location     Type
 18422 ;;		None
 18423 ;; Return value:  Size  Location     Type
 18424 ;;                  1    wreg      unsigned char 
 18425 ;; Registers used:
 18426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18427 ;; Tracked objects:
 18428 ;;		On entry : 0/0
 18429 ;;		On exit  : 0/0
 18430 ;;		Unchanged: 0/0
 18431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18432 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18434 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18435 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 18436 ;;Total ram usage:        5 bytes
 18437 ;; Hardware stack levels used:    1
 18438 ;; Hardware stack levels required when called:    7
 18439 ;; This function calls:
 18440 ;;		Nothing
 18441 ;; This function is called by:
 18442 ;;		_Command
 18443 ;; This function uses a non-reentrant model
 18444 ;;
 18445                           
 18446                           	psect	text35
 18447  017278                     __ptext35:
 18448                           	opt stack 0
 18449  017278                     _StartsWith:
 18450                           	opt stack 22
 18451                           
 18452                           ;MISC.c: 183: while(*This != 0)
 18453                           
 18454                           ;incstack = 0
 18455  017278  D02B               	goto	l13551
 18456  01727A                     l13535:
 18457                           
 18458                           ;MISC.c: 184: {
 18459                           ;MISC.c: 185: if(*This != *That)
 18460  01727A  C10E  FFD9         	movff	StartsWith@This,fsr2l
 18461  01727E  C10F  FFDA         	movff	StartsWith@This+1,fsr2h
 18462  017282  50DF               	movf	indf2,w,c
 18463  017284  0101               	movlb	1	; () banked
 18464  017286  6F12               	movwf	??_StartsWith& (0+255),b
 18465  017288  C110  FFF6         	movff	StartsWith@That,tblptrl
 18466  01728C  C111  FFF7         	movff	StartsWith@That+1,tblptrh
 18467  017290                     	if	0	;tblptru may be non-zero
 18468  017290                     	endif
 18469  017290                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18470  017290  0E00               	movlw	low (__mediumconst shr (0+16))
 18471  017292  6EF8               	movwf	tblptru,c
 18472  017294                     	endif
 18473  017294  0008               	tblrd		*
 18474  017296  50F5               	movf	tablat,w,c
 18475  017298  0101               	movlb	1	; () banked
 18476  01729A  1912               	xorwf	??_StartsWith& (0+255),w,b
 18477  01729C  B4D8               	btfsc	status,2,c
 18478  01729E  D011               	goto	l13549
 18479                           
 18480                           ; BSR set to: 1
 18481                           ;MISC.c: 186: {
 18482                           ;MISC.c: 187: if(*That != 0)
 18483  0172A0  C110  FFF6         	movff	StartsWith@That,tblptrl
 18484  0172A4  C111  FFF7         	movff	StartsWith@That+1,tblptrh
 18485  0172A8                     	if	0	;tblptru may be non-zero
 18486  0172A8                     	endif
 18487  0172A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18488  0172A8  0E00               	movlw	low (__mediumconst shr (0+16))
 18489  0172AA  6EF8               	movwf	tblptru,c
 18490  0172AC                     	endif
 18491  0172AC  0008               	tblrd		*
 18492  0172AE  50F5               	movf	tablat,w,c
 18493  0172B0  0900               	iorlw	0
 18494  0172B2  B4D8               	btfsc	status,2,c
 18495  0172B4  D003               	goto	l13545
 18496                           
 18497                           ; BSR set to: 1
 18498                           ;MISC.c: 188: {
 18499                           ;MISC.c: 189: return 0;
 18500  0172B6  0E00               	movlw	0
 18501                           
 18502                           ; BSR set to: 1
 18503  0172B8  0012               	return	
 18504                           
 18505                           ; BSR set to: 1
 18506                           ;MISC.c: 190: }
 18507  0172BA  D003               	goto	l13549
 18508  0172BC                     l13545:
 18509                           
 18510                           ; BSR set to: 1
 18511                           ;MISC.c: 191: else
 18512                           ;MISC.c: 192: {
 18513                           ;MISC.c: 193: return 1;
 18514  0172BC  0E01               	movlw	1
 18515                           
 18516                           ; BSR set to: 1
 18517  0172BE  0012               	return	
 18518                           
 18519                           ; BSR set to: 1
 18520  0172C0  D000               	goto	l13549
 18521  0172C2                     l13549:
 18522                           
 18523                           ; BSR set to: 1
 18524                           ;MISC.c: 194: }
 18525                           ;MISC.c: 195: }
 18526                           ;MISC.c: 196: This++;
 18527  0172C2  0101               	movlb	1	; () banked
 18528  0172C4  4B0E               	infsnz	StartsWith@This& (0+255),f,b
 18529  0172C6  2B0F               	incf	(StartsWith@This+1)& (0+255),f,b
 18530                           
 18531                           ;MISC.c: 197: That++;
 18532  0172C8  0101               	movlb	1	; () banked
 18533  0172CA  4B10               	infsnz	StartsWith@That& (0+255),f,b
 18534  0172CC  2B11               	incf	(StartsWith@That+1)& (0+255),f,b
 18535  0172CE  D000               	goto	l13551
 18536  0172D0                     l13551:
 18537  0172D0  C10E  FFD9         	movff	StartsWith@This,fsr2l
 18538  0172D4  C10F  FFDA         	movff	StartsWith@This+1,fsr2h
 18539  0172D8  50DF               	movf	indf2,w,c
 18540  0172DA  A4D8               	btfss	status,2,c
 18541  0172DC  D7CE               	goto	l13535
 18542                           
 18543                           ;MISC.c: 198: }
 18544                           ;MISC.c: 199: if(*This == 0 && *That == 0)
 18545  0172DE  C10E  FFD9         	movff	StartsWith@This,fsr2l
 18546  0172E2  C10F  FFDA         	movff	StartsWith@This+1,fsr2h
 18547  0172E6  50DF               	movf	indf2,w,c
 18548  0172E8  A4D8               	btfss	status,2,c
 18549  0172EA  D00D               	goto	l13563
 18550  0172EC  C110  FFF6         	movff	StartsWith@That,tblptrl
 18551  0172F0  C111  FFF7         	movff	StartsWith@That+1,tblptrh
 18552  0172F4                     	if	0	;tblptru may be non-zero
 18553  0172F4                     	endif
 18554  0172F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18555  0172F4  0E00               	movlw	low (__mediumconst shr (0+16))
 18556  0172F6  6EF8               	movwf	tblptru,c
 18557  0172F8                     	endif
 18558  0172F8  0008               	tblrd		*
 18559  0172FA  50F5               	movf	tablat,w,c
 18560  0172FC  0900               	iorlw	0
 18561  0172FE  A4D8               	btfss	status,2,c
 18562  017300  D002               	goto	l13563
 18563                           
 18564                           ;MISC.c: 200: {
 18565                           ;MISC.c: 202: return 1;
 18566  017302  0E01               	movlw	1
 18567                           
 18568                           ;MISC.c: 203: }
 18569  017304  0012               	return	
 18570  017306                     l13563:
 18571                           
 18572                           ;MISC.c: 204: else
 18573                           ;MISC.c: 205: {
 18574                           ;MISC.c: 207: return 0;
 18575  017306  0E00               	movlw	0
 18576  017308  0012               	return	
 18577  01730A  0012               	return		;funcret
 18578  01730C                     __end_of_StartsWith:
 18579                           	opt stack 0
 18580                           tblptru	equ	0xFF8
 18581                           tblptrh	equ	0xFF7
 18582                           tblptrl	equ	0xFF6
 18583                           tablat	equ	0xFF5
 18584                           prodh	equ	0xFF4
 18585                           prodl	equ	0xFF3
 18586                           intcon	equ	0xFF2
 18587                           intcon2	equ	0xFF1
 18588                           postinc0	equ	0xFEE
 18589                           plusw0	equ	0xFEB
 18590                           wreg	equ	0xFE8
 18591                           indf1	equ	0xFE7
 18592                           postdec1	equ	0xFE5
 18593                           fsr1h	equ	0xFE2
 18594                           fsr1l	equ	0xFE1
 18595                           indf2	equ	0xFDF
 18596                           postinc2	equ	0xFDE
 18597                           postdec2	equ	0xFDD
 18598                           plusw2	equ	0xFDB
 18599                           fsr2h	equ	0xFDA
 18600                           fsr2l	equ	0xFD9
 18601                           status	equ	0xFD8
 18602                           
 18603 ;; *************** function _SprintDate *****************
 18604 ;; Defined at:
 18605 ;;		line 254 in file "RTC.c"
 18606 ;; Parameters:    Size  Location     Type
 18607 ;;  ReturnBuf       2   80[BANK1 ] PTR unsigned char 
 18608 ;;		 -> Command@buf(200), 
 18609 ;;  DisplayTime     9   82[BANK1 ] struct TIME
 18610 ;;  Military        1   91[BANK1 ] unsigned char 
 18611 ;; Auto vars:     Size  Location     Type
 18612 ;;		None
 18613 ;; Return value:  Size  Location     Type
 18614 ;;		None               void
 18615 ;; Registers used:
 18616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18617 ;; Tracked objects:
 18618 ;;		On entry : 0/0
 18619 ;;		On exit  : 0/0
 18620 ;;		Unchanged: 0/0
 18621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18622 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 18623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18625 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 18626 ;;Total ram usage:       12 bytes
 18627 ;; Hardware stack levels used:    1
 18628 ;; Hardware stack levels required when called:    9
 18629 ;; This function calls:
 18630 ;;		_sprintf
 18631 ;; This function is called by:
 18632 ;;		_Command
 18633 ;; This function uses a non-reentrant model
 18634 ;;
 18635                           
 18636                           	psect	text36
 18637  015FC0                     __ptext36:
 18638                           	opt stack 0
 18639  015FC0                     _SprintDate:
 18640                           	opt stack 20
 18641                           
 18642                           ;RTC.c: 256: if(!Military)
 18643                           
 18644                           ;incstack = 0
 18645  015FC0  0101               	movlb	1	; () banked
 18646  015FC2  515B               	movf	SprintDate@Military& (0+255),w,b
 18647  015FC4  0101               	movlb	1	; () banked
 18648  015FC6  A4D8               	btfss	status,2,c
 18649  015FC8  D04E               	goto	l13947
 18650                           
 18651                           ; BSR set to: 1
 18652                           ;RTC.c: 257: {
 18653                           ;RTC.c: 258: if(!DisplayTime.HoursAM_PM)
 18654  015FCA  0101               	movlb	1	; () banked
 18655  015FCC  5156               	movf	(SprintDate@DisplayTime+4)& (0+255),w,b
 18656  015FCE  A4D8               	btfss	status,2,c
 18657  015FD0  D025               	goto	l13945
 18658                           
 18659                           ; BSR set to: 1
 18660                           ;RTC.c: 259: {
 18661                           ;RTC.c: 260: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d AM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 18662  015FD2  C150  F124         	movff	SprintDate@ReturnBuf,sprintf@sp
 18663  015FD6  C151  F125         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 18664  015FDA  0E14               	movlw	low STR_321
 18665  015FDC  0101               	movlb	1	; () banked
 18666  015FDE  6F26               	movwf	sprintf@f& (0+255),b
 18667  015FE0  0EF3               	movlw	high STR_321
 18668  015FE2  0101               	movlb	1	; () banked
 18669  015FE4  6F27               	movwf	(sprintf@f+1)& (0+255),b
 18670  015FE6  C159  F128         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 18671  015FEA  0101               	movlb	1	; () banked
 18672  015FEC  6B29               	clrf	(?_sprintf+5)& (0+255),b
 18673  015FEE  C158  F12A         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 18674  015FF2  0101               	movlb	1	; () banked
 18675  015FF4  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 18676  015FF6  C15A  F12C         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 18677  015FFA  0101               	movlb	1	; () banked
 18678  015FFC  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 18679  015FFE  C154  F12E         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 18680  016002  0101               	movlb	1	; () banked
 18681  016004  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 18682  016006  C153  F130         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 18683  01600A  0101               	movlb	1	; () banked
 18684  01600C  6B31               	clrf	(?_sprintf+13)& (0+255),b
 18685  01600E  C152  F132         	movff	SprintDate@DisplayTime,?_sprintf+14
 18686  016012  0101               	movlb	1	; () banked
 18687  016014  6B33               	clrf	(?_sprintf+15)& (0+255),b
 18688  016016  EC86  F093         	call	_sprintf	;wreg free
 18689                           
 18690                           ;RTC.c: 261: }
 18691  01601A  0012               	return	
 18692  01601C                     l13945:
 18693                           
 18694                           ;RTC.c: 262: else
 18695                           ;RTC.c: 263: {
 18696                           ;RTC.c: 264: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d PM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 18697  01601C  C150  F124         	movff	SprintDate@ReturnBuf,sprintf@sp
 18698  016020  C151  F125         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 18699  016024  0E37               	movlw	low STR_322
 18700  016026  0101               	movlb	1	; () banked
 18701  016028  6F26               	movwf	sprintf@f& (0+255),b
 18702  01602A  0EF3               	movlw	high STR_322
 18703  01602C  0101               	movlb	1	; () banked
 18704  01602E  6F27               	movwf	(sprintf@f+1)& (0+255),b
 18705  016030  C159  F128         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 18706  016034  0101               	movlb	1	; () banked
 18707  016036  6B29               	clrf	(?_sprintf+5)& (0+255),b
 18708  016038  C158  F12A         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 18709  01603C  0101               	movlb	1	; () banked
 18710  01603E  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 18711  016040  C15A  F12C         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 18712  016044  0101               	movlb	1	; () banked
 18713  016046  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 18714  016048  C154  F12E         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 18715  01604C  0101               	movlb	1	; () banked
 18716  01604E  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 18717  016050  C153  F130         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 18718  016054  0101               	movlb	1	; () banked
 18719  016056  6B31               	clrf	(?_sprintf+13)& (0+255),b
 18720  016058  C152  F132         	movff	SprintDate@DisplayTime,?_sprintf+14
 18721  01605C  0101               	movlb	1	; () banked
 18722  01605E  6B33               	clrf	(?_sprintf+15)& (0+255),b
 18723  016060  EC86  F093         	call	_sprintf	;wreg free
 18724                           
 18725                           ;RTC.c: 265: }
 18726                           ;RTC.c: 266: }
 18727  016064  0012               	return	
 18728  016066                     l13947:
 18729                           
 18730                           ;RTC.c: 267: else
 18731                           ;RTC.c: 268: {
 18732                           ;RTC.c: 269: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d", DisplayTime.Month, Dis
      +                          playTime.Date, DisplayTime.Year, DisplayTime.HoursMilitary, DisplayTime.Minutes, Display
      +                          Time.Seconds);
 18733  016066  C150  F124         	movff	SprintDate@ReturnBuf,sprintf@sp
 18734  01606A  C151  F125         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 18735  01606E  0EDF               	movlw	low STR_323
 18736  016070  0101               	movlb	1	; () banked
 18737  016072  6F26               	movwf	sprintf@f& (0+255),b
 18738  016074  0EF3               	movlw	high STR_323
 18739  016076  0101               	movlb	1	; () banked
 18740  016078  6F27               	movwf	(sprintf@f+1)& (0+255),b
 18741  01607A  C159  F128         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 18742  01607E  0101               	movlb	1	; () banked
 18743  016080  6B29               	clrf	(?_sprintf+5)& (0+255),b
 18744  016082  C158  F12A         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 18745  016086  0101               	movlb	1	; () banked
 18746  016088  6B2B               	clrf	(?_sprintf+7)& (0+255),b
 18747  01608A  C15A  F12C         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 18748  01608E  0101               	movlb	1	; () banked
 18749  016090  6B2D               	clrf	(?_sprintf+9)& (0+255),b
 18750  016092  C155  F12E         	movff	SprintDate@DisplayTime+3,?_sprintf+10
 18751  016096  0101               	movlb	1	; () banked
 18752  016098  6B2F               	clrf	(?_sprintf+11)& (0+255),b
 18753  01609A  C153  F130         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 18754  01609E  0101               	movlb	1	; () banked
 18755  0160A0  6B31               	clrf	(?_sprintf+13)& (0+255),b
 18756  0160A2  C152  F132         	movff	SprintDate@DisplayTime,?_sprintf+14
 18757  0160A6  0101               	movlb	1	; () banked
 18758  0160A8  6B33               	clrf	(?_sprintf+15)& (0+255),b
 18759  0160AA  EC86  F093         	call	_sprintf	;wreg free
 18760  0160AE  0012               	return	
 18761  0160B0  0012               	return		;funcret
 18762  0160B2                     __end_of_SprintDate:
 18763                           	opt stack 0
 18764                           tblptru	equ	0xFF8
 18765                           tblptrh	equ	0xFF7
 18766                           tblptrl	equ	0xFF6
 18767                           tablat	equ	0xFF5
 18768                           prodh	equ	0xFF4
 18769                           prodl	equ	0xFF3
 18770                           intcon	equ	0xFF2
 18771                           intcon2	equ	0xFF1
 18772                           postinc0	equ	0xFEE
 18773                           plusw0	equ	0xFEB
 18774                           wreg	equ	0xFE8
 18775                           indf1	equ	0xFE7
 18776                           postdec1	equ	0xFE5
 18777                           fsr1h	equ	0xFE2
 18778                           fsr1l	equ	0xFE1
 18779                           indf2	equ	0xFDF
 18780                           postinc2	equ	0xFDE
 18781                           postdec2	equ	0xFDD
 18782                           plusw2	equ	0xFDB
 18783                           fsr2h	equ	0xFDA
 18784                           fsr2l	equ	0xFD9
 18785                           status	equ	0xFD8
 18786                           
 18787 ;; *************** function _SetDuty *****************
 18788 ;; Defined at:
 18789 ;;		line 120 in file "PWM.c"
 18790 ;; Parameters:    Size  Location     Type
 18791 ;;  Duty            1    wreg     unsigned char 
 18792 ;; Auto vars:     Size  Location     Type
 18793 ;;  Duty            1   71[BANK1 ] unsigned char 
 18794 ;;  tempPR2         3   72[BANK1 ] float 
 18795 ;;  temp            2   77[BANK1 ] unsigned int 
 18796 ;;  LSB             1   76[BANK1 ] unsigned char 
 18797 ;;  MSB             1   75[BANK1 ] unsigned char 
 18798 ;; Return value:  Size  Location     Type
 18799 ;;		None               void
 18800 ;; Registers used:
 18801 ;;		wreg, status,2, status,0, cstack
 18802 ;; Tracked objects:
 18803 ;;		On entry : 0/0
 18804 ;;		On exit  : 0/0
 18805 ;;		Unchanged: 0/0
 18806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18808 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 18809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18810 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 18811 ;;Total ram usage:        8 bytes
 18812 ;; Hardware stack levels used:    1
 18813 ;; Hardware stack levels required when called:    9
 18814 ;; This function calls:
 18815 ;;		___ftdiv
 18816 ;;		___ftmul
 18817 ;;		___fttol
 18818 ;;		___lbtoft
 18819 ;; This function is called by:
 18820 ;;		_main
 18821 ;;		_Command
 18822 ;;		_PWM_init
 18823 ;;		_ContrastPWM_init
 18824 ;; This function uses a non-reentrant model
 18825 ;;
 18826                           
 18827                           	psect	text37
 18828  016B56                     __ptext37:
 18829                           	opt stack 0
 18830  016B56                     _SetDuty:
 18831                           	opt stack 21
 18832                           
 18833                           ;incstack = 0
 18834                           ;SetDuty@Duty stored from wreg
 18835  016B56  0101               	movlb	1	; () banked
 18836  016B58  6F47               	movwf	SetDuty@Duty& (0+255),b
 18837                           
 18838                           ; BSR set to: 1
 18839                           ;PWM.c: 122: unsigned int temp=0;
 18840  016B5A  0E00               	movlw	0
 18841  016B5C  0101               	movlb	1	; () banked
 18842  016B5E  6F4E               	movwf	(SetDuty@temp+1)& (0+255),b
 18843  016B60  0E00               	movlw	0
 18844  016B62  6F4D               	movwf	SetDuty@temp& (0+255),b
 18845                           
 18846                           ; BSR set to: 1
 18847                           ;PWM.c: 123: float tempPR2=0;
 18848  016B64  0E00               	movlw	0
 18849  016B66  0101               	movlb	1	; () banked
 18850  016B68  6F48               	movwf	SetDuty@tempPR2& (0+255),b
 18851  016B6A  0E00               	movlw	0
 18852  016B6C  0101               	movlb	1	; () banked
 18853  016B6E  6F49               	movwf	(SetDuty@tempPR2+1)& (0+255),b
 18854  016B70  0E00               	movlw	0
 18855  016B72  0101               	movlb	1	; () banked
 18856  016B74  6F4A               	movwf	(SetDuty@tempPR2+2)& (0+255),b
 18857                           
 18858                           ; BSR set to: 1
 18859                           ;PWM.c: 124: unsigned char MSB,LSB;
 18860                           ;PWM.c: 126: tempPR2 = (float) PR2;
 18861  016B76  50CB               	movf	4043,w,c	;volatile
 18862  016B78  EC04  F006         	call	___lbtoft
 18863  016B7C  C116  F148         	movff	?___lbtoft,SetDuty@tempPR2
 18864  016B80  C117  F149         	movff	?___lbtoft+1,SetDuty@tempPR2+1
 18865  016B84  C118  F14A         	movff	?___lbtoft+2,SetDuty@tempPR2+2
 18866                           
 18867                           ;PWM.c: 128: temp = (int)(tempPR2 * ((float)Duty/100));
 18868  016B88  C148  F12C         	movff	SetDuty@tempPR2,___ftmul@f2
 18869  016B8C  C149  F12D         	movff	SetDuty@tempPR2+1,___ftmul@f2+1
 18870  016B90  C14A  F12E         	movff	SetDuty@tempPR2+2,___ftmul@f2+2
 18871  016B94  0E00               	movlw	0
 18872  016B96  0101               	movlb	1	; () banked
 18873  016B98  6F1D               	movwf	___ftdiv@f2& (0+255),b
 18874  016B9A  0EC8               	movlw	200
 18875  016B9C  0101               	movlb	1	; () banked
 18876  016B9E  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
 18877  016BA0  0E42               	movlw	66
 18878  016BA2  0101               	movlb	1	; () banked
 18879  016BA4  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
 18880  016BA6  0101               	movlb	1	; () banked
 18881  016BA8  5147               	movf	SetDuty@Duty& (0+255),w,b
 18882  016BAA  EC04  F006         	call	___lbtoft
 18883  016BAE  C116  F11A         	movff	?___lbtoft,___ftdiv@f1
 18884  016BB2  C117  F11B         	movff	?___lbtoft+1,___ftdiv@f1+1
 18885  016BB6  C118  F11C         	movff	?___lbtoft+2,___ftdiv@f1+2
 18886  016BBA  ECED  F0AA         	call	___ftdiv	;wreg free
 18887  016BBE  C11A  F129         	movff	?___ftdiv,___ftmul@f1
 18888  016BC2  C11B  F12A         	movff	?___ftdiv+1,___ftmul@f1+1
 18889  016BC6  C11C  F12B         	movff	?___ftdiv+2,___ftmul@f1+2
 18890  016BCA  EC2E  F0A8         	call	___ftmul	;wreg free
 18891  016BCE  C129  F138         	movff	?___ftmul,___fttol@f1
 18892  016BD2  C12A  F139         	movff	?___ftmul+1,___fttol@f1+1
 18893  016BD6  C12B  F13A         	movff	?___ftmul+2,___fttol@f1+2
 18894  016BDA  EC44  F0AA         	call	___fttol	;wreg free
 18895  016BDE  C138  F14D         	movff	?___fttol,SetDuty@temp
 18896  016BE2  C139  F14E         	movff	?___fttol+1,SetDuty@temp+1
 18897                           
 18898                           ;PWM.c: 129: MSB = (temp & 0x300)>>8;
 18899  016BE6  0101               	movlb	1	; () banked
 18900  016BE8  514E               	movf	(SetDuty@temp+1)& (0+255),w,b
 18901  016BEA  0B03               	andlw	3
 18902  016BEC  0101               	movlb	1	; () banked
 18903  016BEE  6F4B               	movwf	SetDuty@MSB& (0+255),b
 18904                           
 18905                           ; BSR set to: 1
 18906                           ;PWM.c: 130: LSB = temp & 0xff;
 18907  016BF0  C14D  F14C         	movff	SetDuty@temp,SetDuty@LSB
 18908                           
 18909                           ; BSR set to: 1
 18910                           ;PWM.c: 132: CCP1CON &= ~(0b00110000);
 18911  016BF4  0ECF               	movlw	207
 18912  016BF6  16BD               	andwf	4029,f,c	;volatile
 18913                           
 18914                           ; BSR set to: 1
 18915                           ;PWM.c: 133: CCP1CON |= MSB << 4;
 18916  016BF8  0101               	movlb	1	; () banked
 18917  016BFA  394B               	swapf	SetDuty@MSB& (0+255),w,b
 18918  016BFC  0BF0               	andlw	240
 18919  016BFE  12BD               	iorwf	4029,f,c	;volatile
 18920                           
 18921                           ; BSR set to: 1
 18922                           ;PWM.c: 134: CCPR1L = LSB;
 18923  016C00  C14C  FFBE         	movff	SetDuty@LSB,4030	;volatile
 18924                           
 18925                           ; BSR set to: 1
 18926                           ;PWM.c: 135: __nop();
 18927  016C04  F000               	nop	
 18928  016C06  0012               	return		;funcret
 18929  016C08                     __end_of_SetDuty:
 18930                           	opt stack 0
 18931                           tblptru	equ	0xFF8
 18932                           tblptrh	equ	0xFF7
 18933                           tblptrl	equ	0xFF6
 18934                           tablat	equ	0xFF5
 18935                           prodh	equ	0xFF4
 18936                           prodl	equ	0xFF3
 18937                           intcon	equ	0xFF2
 18938                           intcon2	equ	0xFF1
 18939                           postinc0	equ	0xFEE
 18940                           plusw0	equ	0xFEB
 18941                           wreg	equ	0xFE8
 18942                           indf1	equ	0xFE7
 18943                           postdec1	equ	0xFE5
 18944                           fsr1h	equ	0xFE2
 18945                           fsr1l	equ	0xFE1
 18946                           indf2	equ	0xFDF
 18947                           postinc2	equ	0xFDE
 18948                           postdec2	equ	0xFDD
 18949                           plusw2	equ	0xFDB
 18950                           fsr2h	equ	0xFDA
 18951                           fsr2l	equ	0xFD9
 18952                           status	equ	0xFD8
 18953                           
 18954 ;; *************** function _SetContrast *****************
 18955 ;; Defined at:
 18956 ;;		line 94 in file "PWM.c"
 18957 ;; Parameters:    Size  Location     Type
 18958 ;;  Duty            1    wreg     unsigned char 
 18959 ;; Auto vars:     Size  Location     Type
 18960 ;;  Duty            1   78[BANK1 ] unsigned char 
 18961 ;;  tempPR2         3   71[BANK1 ] float 
 18962 ;;  temp            2   76[BANK1 ] unsigned int 
 18963 ;;  LSB             1   75[BANK1 ] unsigned char 
 18964 ;;  MSB             1   74[BANK1 ] unsigned char 
 18965 ;; Return value:  Size  Location     Type
 18966 ;;		None               void
 18967 ;; Registers used:
 18968 ;;		wreg, status,2, status,0, cstack
 18969 ;; Tracked objects:
 18970 ;;		On entry : 0/0
 18971 ;;		On exit  : 0/0
 18972 ;;		Unchanged: 0/0
 18973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18975 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 18976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18977 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 18978 ;;Total ram usage:        8 bytes
 18979 ;; Hardware stack levels used:    1
 18980 ;; Hardware stack levels required when called:    9
 18981 ;; This function calls:
 18982 ;;		___ftdiv
 18983 ;;		___ftmul
 18984 ;;		___fttol
 18985 ;;		___lbtoft
 18986 ;; This function is called by:
 18987 ;;		_main
 18988 ;;		_Command
 18989 ;; This function uses a non-reentrant model
 18990 ;;
 18991                           
 18992                           	psect	text38
 18993  0166D2                     __ptext38:
 18994                           	opt stack 0
 18995  0166D2                     _SetContrast:
 18996                           	opt stack 21
 18997                           
 18998                           ;incstack = 0
 18999                           ;SetContrast@Duty stored from wreg
 19000  0166D2  0101               	movlb	1	; () banked
 19001  0166D4  6F4E               	movwf	SetContrast@Duty& (0+255),b
 19002                           
 19003                           ; BSR set to: 1
 19004                           ;PWM.c: 96: unsigned int temp=0;
 19005  0166D6  0E00               	movlw	0
 19006  0166D8  0101               	movlb	1	; () banked
 19007  0166DA  6F4D               	movwf	(SetContrast@temp+1)& (0+255),b
 19008  0166DC  0E00               	movlw	0
 19009  0166DE  6F4C               	movwf	SetContrast@temp& (0+255),b
 19010                           
 19011                           ; BSR set to: 1
 19012                           ;PWM.c: 97: float tempPR2=0;
 19013  0166E0  0E00               	movlw	0
 19014  0166E2  0101               	movlb	1	; () banked
 19015  0166E4  6F47               	movwf	SetContrast@tempPR2& (0+255),b
 19016  0166E6  0E00               	movlw	0
 19017  0166E8  0101               	movlb	1	; () banked
 19018  0166EA  6F48               	movwf	(SetContrast@tempPR2+1)& (0+255),b
 19019  0166EC  0E00               	movlw	0
 19020  0166EE  0101               	movlb	1	; () banked
 19021  0166F0  6F49               	movwf	(SetContrast@tempPR2+2)& (0+255),b
 19022                           
 19023                           ; BSR set to: 1
 19024                           ;PWM.c: 98: unsigned char MSB,LSB;
 19025                           ;PWM.c: 100: Duty = 100 - Duty;
 19026  0166F2  0101               	movlb	1	; () banked
 19027  0166F4  514E               	movf	SetContrast@Duty& (0+255),w,b
 19028  0166F6  0800               	sublw	0
 19029  0166F8  0F64               	addlw	100
 19030  0166FA  0101               	movlb	1	; () banked
 19031  0166FC  6F4E               	movwf	SetContrast@Duty& (0+255),b
 19032                           
 19033                           ; BSR set to: 1
 19034                           ;PWM.c: 101: Duty = (Duty>>1);
 19035  0166FE  0101               	movlb	1	; () banked
 19036  016700  90D8               	bcf	status,0,c
 19037  016702  314E               	rrcf	SetContrast@Duty& (0+255),w,b
 19038  016704  0101               	movlb	1	; () banked
 19039  016706  6F4E               	movwf	SetContrast@Duty& (0+255),b
 19040                           
 19041                           ; BSR set to: 1
 19042                           ;PWM.c: 103: tempPR2 = (float) PR2;
 19043  016708  50CB               	movf	4043,w,c	;volatile
 19044  01670A  EC04  F006         	call	___lbtoft
 19045  01670E  C116  F147         	movff	?___lbtoft,SetContrast@tempPR2
 19046  016712  C117  F148         	movff	?___lbtoft+1,SetContrast@tempPR2+1
 19047  016716  C118  F149         	movff	?___lbtoft+2,SetContrast@tempPR2+2
 19048                           
 19049                           ;PWM.c: 105: temp = (int)(tempPR2 * ((float)Duty/100));
 19050  01671A  C147  F12C         	movff	SetContrast@tempPR2,___ftmul@f2
 19051  01671E  C148  F12D         	movff	SetContrast@tempPR2+1,___ftmul@f2+1
 19052  016722  C149  F12E         	movff	SetContrast@tempPR2+2,___ftmul@f2+2
 19053  016726  0E00               	movlw	0
 19054  016728  0101               	movlb	1	; () banked
 19055  01672A  6F1D               	movwf	___ftdiv@f2& (0+255),b
 19056  01672C  0EC8               	movlw	200
 19057  01672E  0101               	movlb	1	; () banked
 19058  016730  6F1E               	movwf	(___ftdiv@f2+1)& (0+255),b
 19059  016732  0E42               	movlw	66
 19060  016734  0101               	movlb	1	; () banked
 19061  016736  6F1F               	movwf	(___ftdiv@f2+2)& (0+255),b
 19062  016738  0101               	movlb	1	; () banked
 19063  01673A  514E               	movf	SetContrast@Duty& (0+255),w,b
 19064  01673C  EC04  F006         	call	___lbtoft
 19065  016740  C116  F11A         	movff	?___lbtoft,___ftdiv@f1
 19066  016744  C117  F11B         	movff	?___lbtoft+1,___ftdiv@f1+1
 19067  016748  C118  F11C         	movff	?___lbtoft+2,___ftdiv@f1+2
 19068  01674C  ECED  F0AA         	call	___ftdiv	;wreg free
 19069  016750  C11A  F129         	movff	?___ftdiv,___ftmul@f1
 19070  016754  C11B  F12A         	movff	?___ftdiv+1,___ftmul@f1+1
 19071  016758  C11C  F12B         	movff	?___ftdiv+2,___ftmul@f1+2
 19072  01675C  EC2E  F0A8         	call	___ftmul	;wreg free
 19073  016760  C129  F138         	movff	?___ftmul,___fttol@f1
 19074  016764  C12A  F139         	movff	?___ftmul+1,___fttol@f1+1
 19075  016768  C12B  F13A         	movff	?___ftmul+2,___fttol@f1+2
 19076  01676C  EC44  F0AA         	call	___fttol	;wreg free
 19077  016770  C138  F14C         	movff	?___fttol,SetContrast@temp
 19078  016774  C139  F14D         	movff	?___fttol+1,SetContrast@temp+1
 19079                           
 19080                           ;PWM.c: 106: MSB = (temp & 0x300)>>8;
 19081  016778  0101               	movlb	1	; () banked
 19082  01677A  514D               	movf	(SetContrast@temp+1)& (0+255),w,b
 19083  01677C  0B03               	andlw	3
 19084  01677E  0101               	movlb	1	; () banked
 19085  016780  6F4A               	movwf	SetContrast@MSB& (0+255),b
 19086                           
 19087                           ; BSR set to: 1
 19088                           ;PWM.c: 107: LSB = temp & 0xff;
 19089  016782  C14C  F14B         	movff	SetContrast@temp,SetContrast@LSB
 19090                           
 19091                           ; BSR set to: 1
 19092                           ;PWM.c: 109: ECCP1CON &= ~0b00110000;
 19093  016786  0ECF               	movlw	207
 19094  016788  16BA               	andwf	4026,f,c	;volatile
 19095                           
 19096                           ; BSR set to: 1
 19097                           ;PWM.c: 110: ECCP1CON |= MSB << 4;
 19098  01678A  0101               	movlb	1	; () banked
 19099  01678C  394A               	swapf	SetContrast@MSB& (0+255),w,b
 19100  01678E  0BF0               	andlw	240
 19101  016790  12BA               	iorwf	4026,f,c	;volatile
 19102                           
 19103                           ; BSR set to: 1
 19104                           ;PWM.c: 111: ECCPR1L = LSB;
 19105  016792  C14B  FFBB         	movff	SetContrast@LSB,4027	;volatile
 19106                           
 19107                           ; BSR set to: 1
 19108                           ;PWM.c: 112: __nop();
 19109  016796  F000               	nop	
 19110  016798  0012               	return		;funcret
 19111  01679A                     __end_of_SetContrast:
 19112                           	opt stack 0
 19113                           tblptru	equ	0xFF8
 19114                           tblptrh	equ	0xFF7
 19115                           tblptrl	equ	0xFF6
 19116                           tablat	equ	0xFF5
 19117                           prodh	equ	0xFF4
 19118                           prodl	equ	0xFF3
 19119                           intcon	equ	0xFF2
 19120                           intcon2	equ	0xFF1
 19121                           postinc0	equ	0xFEE
 19122                           plusw0	equ	0xFEB
 19123                           wreg	equ	0xFE8
 19124                           indf1	equ	0xFE7
 19125                           postdec1	equ	0xFE5
 19126                           fsr1h	equ	0xFE2
 19127                           fsr1l	equ	0xFE1
 19128                           indf2	equ	0xFDF
 19129                           postinc2	equ	0xFDE
 19130                           postdec2	equ	0xFDD
 19131                           plusw2	equ	0xFDB
 19132                           fsr2h	equ	0xFDA
 19133                           fsr2l	equ	0xFD9
 19134                           status	equ	0xFD8
 19135                           
 19136 ;; *************** function ___lbtoft *****************
 19137 ;; Defined at:
 19138 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
 19139 ;; Parameters:    Size  Location     Type
 19140 ;;  c               1    wreg     unsigned char 
 19141 ;; Auto vars:     Size  Location     Type
 19142 ;;  c               1   25[BANK1 ] unsigned char 
 19143 ;; Return value:  Size  Location     Type
 19144 ;;                  3   22[BANK1 ] float 
 19145 ;; Registers used:
 19146 ;;		wreg, status,2, status,0, cstack
 19147 ;; Tracked objects:
 19148 ;;		On entry : 0/0
 19149 ;;		On exit  : 0/0
 19150 ;;		Unchanged: 0/0
 19151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19152 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19153 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19155 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19156 ;;Total ram usage:        4 bytes
 19157 ;; Hardware stack levels used:    1
 19158 ;; Hardware stack levels required when called:    8
 19159 ;; This function calls:
 19160 ;;		___ftpack
 19161 ;; This function is called by:
 19162 ;;		_SetContrast
 19163 ;;		_SetDuty
 19164 ;; This function uses a non-reentrant model
 19165 ;;
 19166                           
 19167                           	psect	text39
 19168  000C08                     __ptext39:
 19169                           	opt stack 0
 19170  000C08                     ___lbtoft:
 19171                           	opt stack 21
 19172                           
 19173                           ;incstack = 0
 19174                           ;___lbtoft@c stored from wreg
 19175  000C08  0101               	movlb	1	; () banked
 19176  000C0A  6F19               	movwf	___lbtoft@c& (0+255),b
 19177                           
 19178                           ; BSR set to: 1
 19179  000C0C  0101               	movlb	1	; () banked
 19180  000C0E  5119               	movf	___lbtoft@c& (0+255),w,b
 19181  000C10  0101               	movlb	1	; () banked
 19182  000C12  6F0E               	movwf	___ftpack@arg& (0+255),b
 19183  000C14  6B0F               	clrf	(___ftpack@arg+1)& (0+255),b
 19184  000C16  6B10               	clrf	(___ftpack@arg+2)& (0+255),b
 19185  000C18  0E8E               	movlw	142
 19186  000C1A  0101               	movlb	1	; () banked
 19187  000C1C  6F11               	movwf	___ftpack@exp& (0+255),b
 19188  000C1E  0E00               	movlw	0
 19189  000C20  0101               	movlb	1	; () banked
 19190  000C22  6F12               	movwf	___ftpack@sign& (0+255),b
 19191  000C24  EC53  F0AD         	call	___ftpack	;wreg free
 19192  000C28  C10E  F116         	movff	?___ftpack,?___lbtoft
 19193  000C2C  C10F  F117         	movff	?___ftpack+1,?___lbtoft+1
 19194  000C30  C110  F118         	movff	?___ftpack+2,?___lbtoft+2
 19195  000C34  0012               	return	
 19196  000C36  0012               	return		;funcret
 19197  000C38                     __end_of___lbtoft:
 19198                           	opt stack 0
 19199                           tblptru	equ	0xFF8
 19200                           tblptrh	equ	0xFF7
 19201                           tblptrl	equ	0xFF6
 19202                           tablat	equ	0xFF5
 19203                           prodh	equ	0xFF4
 19204                           prodl	equ	0xFF3
 19205                           intcon	equ	0xFF2
 19206                           intcon2	equ	0xFF1
 19207                           postinc0	equ	0xFEE
 19208                           plusw0	equ	0xFEB
 19209                           wreg	equ	0xFE8
 19210                           indf1	equ	0xFE7
 19211                           postdec1	equ	0xFE5
 19212                           fsr1h	equ	0xFE2
 19213                           fsr1l	equ	0xFE1
 19214                           indf2	equ	0xFDF
 19215                           postinc2	equ	0xFDE
 19216                           postdec2	equ	0xFDD
 19217                           plusw2	equ	0xFDB
 19218                           fsr2h	equ	0xFDA
 19219                           fsr2l	equ	0xFD9
 19220                           status	equ	0xFD8
 19221                           
 19222 ;; *************** function ___fttol *****************
 19223 ;; Defined at:
 19224 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 19225 ;; Parameters:    Size  Location     Type
 19226 ;;  f1              3   56[BANK1 ] float 
 19227 ;; Auto vars:     Size  Location     Type
 19228 ;;  lval            4   66[BANK1 ] unsigned long 
 19229 ;;  exp1            1   70[BANK1 ] unsigned char 
 19230 ;;  sign1           1   65[BANK1 ] unsigned char 
 19231 ;; Return value:  Size  Location     Type
 19232 ;;                  4   56[BANK1 ] long 
 19233 ;; Registers used:
 19234 ;;		wreg, status,2, status,0
 19235 ;; Tracked objects:
 19236 ;;		On entry : 0/0
 19237 ;;		On exit  : 0/0
 19238 ;;		Unchanged: 0/0
 19239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19240 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19241 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19242 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 19243 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 19244 ;;Total ram usage:       15 bytes
 19245 ;; Hardware stack levels used:    1
 19246 ;; Hardware stack levels required when called:    7
 19247 ;; This function calls:
 19248 ;;		Nothing
 19249 ;; This function is called by:
 19250 ;;		_Command
 19251 ;;		_SetContrast
 19252 ;;		_SetDuty
 19253 ;; This function uses a non-reentrant model
 19254 ;;
 19255                           
 19256                           	psect	text40
 19257  015488                     __ptext40:
 19258                           	opt stack 0
 19259  015488                     ___fttol:
 19260                           	opt stack 22
 19261                           
 19262                           ;incstack = 0
 19263  015488  C13A  F13C         	movff	___fttol@f1+2,??___fttol
 19264  01548C  0101               	movlb	1	; () banked
 19265  01548E  6B3D               	clrf	(??___fttol+1)& (0+255),b
 19266  015490  6B3E               	clrf	(??___fttol+2)& (0+255),b
 19267  015492  0101               	movlb	1	; () banked
 19268  015494  3539               	rlcf	(___fttol@f1+1)& (0+255),w,b
 19269  015496  0101               	movlb	1	; () banked
 19270  015498  373C               	rlcf	??___fttol& (0+255),f,b
 19271  01549A  E301               	bnc	u16961
 19272  01549C  813D               	bsf	(??___fttol+1)& (0+255),0,b
 19273  01549E                     u16961:
 19274  01549E  0101               	movlb	1	; () banked
 19275  0154A0  513C               	movf	??___fttol& (0+255),w,b
 19276  0154A2  0101               	movlb	1	; () banked
 19277  0154A4  6F46               	movwf	___fttol@exp1& (0+255),b
 19278  0154A6  0101               	movlb	1	; () banked
 19279  0154A8  5146               	movf	___fttol@exp1& (0+255),w,b
 19280  0154AA  A4D8               	btfss	status,2,c
 19281  0154AC  D00A               	goto	l13373
 19282                           
 19283                           ; BSR set to: 1
 19284  0154AE  0E00               	movlw	0
 19285  0154B0  0101               	movlb	1	; () banked
 19286  0154B2  6F38               	movwf	?___fttol& (0+255),b
 19287  0154B4  0E00               	movlw	0
 19288  0154B6  6F39               	movwf	(?___fttol+1)& (0+255),b
 19289  0154B8  0E00               	movlw	0
 19290  0154BA  6F3A               	movwf	(?___fttol+2)& (0+255),b
 19291  0154BC  0E00               	movlw	0
 19292  0154BE  6F3B               	movwf	(?___fttol+3)& (0+255),b
 19293                           
 19294                           ; BSR set to: 1
 19295  0154C0  0012               	return	
 19296  0154C2                     l13373:
 19297                           
 19298                           ; BSR set to: 1
 19299  0154C2  0E17               	movlw	23
 19300  0154C4  0101               	movlb	1	; () banked
 19301  0154C6  6F3C               	movwf	??___fttol& (0+255),b
 19302  0154C8  C138  F13D         	movff	___fttol@f1,??___fttol+1
 19303  0154CC  C139  F13E         	movff	___fttol@f1+1,??___fttol+2
 19304  0154D0  C13A  F13F         	movff	___fttol@f1+2,??___fttol+3
 19305  0154D4  0101               	movlb	1	; () banked
 19306  0154D6  293C               	incf	??___fttol& (0+255),w,b
 19307  0154D8  0101               	movlb	1	; () banked
 19308  0154DA  6F40               	movwf	(??___fttol+4)& (0+255),b
 19309  0154DC  D005               	goto	u16980
 19310  0154DE                     u16985:
 19311  0154DE  0101               	movlb	1	; () banked
 19312  0154E0  90D8               	bcf	status,0,c
 19313  0154E2  333F               	rrcf	(??___fttol+3)& (0+255),f,b
 19314  0154E4  333E               	rrcf	(??___fttol+2)& (0+255),f,b
 19315  0154E6  333D               	rrcf	(??___fttol+1)& (0+255),f,b
 19316  0154E8                     u16980:
 19317  0154E8  0101               	movlb	1	; () banked
 19318  0154EA  2F40               	decfsz	(??___fttol+4)& (0+255),f,b
 19319  0154EC  D7F8               	goto	u16985
 19320  0154EE  0101               	movlb	1	; () banked
 19321  0154F0  513D               	movf	(??___fttol+1)& (0+255),w,b
 19322  0154F2  0101               	movlb	1	; () banked
 19323  0154F4  6F41               	movwf	___fttol@sign1& (0+255),b
 19324                           
 19325                           ; BSR set to: 1
 19326  0154F6  0101               	movlb	1	; () banked
 19327  0154F8  8F39               	bsf	(___fttol@f1+1)& (0+255),7,b
 19328                           
 19329                           ; BSR set to: 1
 19330  0154FA  0EFF               	movlw	255
 19331  0154FC  0101               	movlb	1	; () banked
 19332  0154FE  1738               	andwf	___fttol@f1& (0+255),f,b
 19333  015500  0EFF               	movlw	255
 19334  015502  0101               	movlb	1	; () banked
 19335  015504  1739               	andwf	(___fttol@f1+1)& (0+255),f,b
 19336  015506  0E00               	movlw	0
 19337  015508  0101               	movlb	1	; () banked
 19338  01550A  173A               	andwf	(___fttol@f1+2)& (0+255),f,b
 19339                           
 19340                           ; BSR set to: 1
 19341  01550C  0101               	movlb	1	; () banked
 19342  01550E  5138               	movf	___fttol@f1& (0+255),w,b
 19343  015510  0101               	movlb	1	; () banked
 19344  015512  6F42               	movwf	___fttol@lval& (0+255),b
 19345  015514  0101               	movlb	1	; () banked
 19346  015516  5139               	movf	(___fttol@f1+1)& (0+255),w,b
 19347  015518  0101               	movlb	1	; () banked
 19348  01551A  6F43               	movwf	(___fttol@lval+1)& (0+255),b
 19349  01551C  0101               	movlb	1	; () banked
 19350  01551E  513A               	movf	(___fttol@f1+2)& (0+255),w,b
 19351  015520  0101               	movlb	1	; () banked
 19352  015522  6F44               	movwf	(___fttol@lval+2)& (0+255),b
 19353  015524  0101               	movlb	1	; () banked
 19354  015526  6B45               	clrf	(___fttol@lval+3)& (0+255),b
 19355                           
 19356                           ; BSR set to: 1
 19357  015528  0E8E               	movlw	142
 19358  01552A  0101               	movlb	1	; () banked
 19359  01552C  5F46               	subwf	___fttol@exp1& (0+255),f,b
 19360                           
 19361                           ; BSR set to: 1
 19362  01552E  0101               	movlb	1	; () banked
 19363  015530  AF46               	btfss	___fttol@exp1& (0+255),7,b
 19364  015532  D01B               	goto	l13395
 19365                           
 19366                           ; BSR set to: 1
 19367  015534  0101               	movlb	1	; () banked
 19368  015536  5146               	movf	___fttol@exp1& (0+255),w,b
 19369  015538  0A80               	xorlw	128
 19370  01553A  0F8F               	addlw	143
 19371  01553C  B0D8               	btfsc	status,0,c
 19372  01553E  D00B               	goto	l13391
 19373                           
 19374                           ; BSR set to: 1
 19375  015540  0E00               	movlw	0
 19376  015542  0101               	movlb	1	; () banked
 19377  015544  6F38               	movwf	?___fttol& (0+255),b
 19378  015546  0E00               	movlw	0
 19379  015548  6F39               	movwf	(?___fttol+1)& (0+255),b
 19380  01554A  0E00               	movlw	0
 19381  01554C  6F3A               	movwf	(?___fttol+2)& (0+255),b
 19382  01554E  0E00               	movlw	0
 19383  015550  6F3B               	movwf	(?___fttol+3)& (0+255),b
 19384                           
 19385                           ; BSR set to: 1
 19386  015552  0012               	return	
 19387                           
 19388                           ; BSR set to: 1
 19389  015554  D000               	goto	l13391
 19390  015556                     l13391:
 19391                           
 19392                           ; BSR set to: 1
 19393  015556  0101               	movlb	1	; () banked
 19394  015558  90D8               	bcf	status,0,c
 19395  01555A  3345               	rrcf	(___fttol@lval+3)& (0+255),f,b
 19396  01555C  3344               	rrcf	(___fttol@lval+2)& (0+255),f,b
 19397  01555E  3343               	rrcf	(___fttol@lval+1)& (0+255),f,b
 19398  015560  3342               	rrcf	___fttol@lval& (0+255),f,b
 19399                           
 19400                           ; BSR set to: 1
 19401  015562  0101               	movlb	1	; () banked
 19402  015564  3F46               	incfsz	___fttol@exp1& (0+255),f,b
 19403  015566  D7F7               	goto	l13391
 19404                           
 19405                           ; BSR set to: 1
 19406  015568  D01F               	goto	l13405
 19407  01556A                     l13395:
 19408                           
 19409                           ; BSR set to: 1
 19410  01556A  0E17               	movlw	23
 19411  01556C  0101               	movlb	1	; () banked
 19412  01556E  6546               	cpfsgt	___fttol@exp1& (0+255),b
 19413  015570  D014               	goto	l13403
 19414                           
 19415                           ; BSR set to: 1
 19416  015572  0E00               	movlw	0
 19417  015574  0101               	movlb	1	; () banked
 19418  015576  6F38               	movwf	?___fttol& (0+255),b
 19419  015578  0E00               	movlw	0
 19420  01557A  6F39               	movwf	(?___fttol+1)& (0+255),b
 19421  01557C  0E00               	movlw	0
 19422  01557E  6F3A               	movwf	(?___fttol+2)& (0+255),b
 19423  015580  0E00               	movlw	0
 19424  015582  6F3B               	movwf	(?___fttol+3)& (0+255),b
 19425                           
 19426                           ; BSR set to: 1
 19427  015584  0012               	return	
 19428                           
 19429                           ; BSR set to: 1
 19430  015586  D009               	goto	l13403
 19431  015588                     l13401:
 19432                           
 19433                           ; BSR set to: 1
 19434  015588  0101               	movlb	1	; () banked
 19435  01558A  90D8               	bcf	status,0,c
 19436  01558C  3742               	rlcf	___fttol@lval& (0+255),f,b
 19437  01558E  3743               	rlcf	(___fttol@lval+1)& (0+255),f,b
 19438  015590  3744               	rlcf	(___fttol@lval+2)& (0+255),f,b
 19439  015592  3745               	rlcf	(___fttol@lval+3)& (0+255),f,b
 19440  015594  0101               	movlb	1	; () banked
 19441  015596  0746               	decf	___fttol@exp1& (0+255),f,b
 19442  015598  D000               	goto	l13403
 19443  01559A                     l13403:
 19444                           
 19445                           ; BSR set to: 1
 19446  01559A  0101               	movlb	1	; () banked
 19447  01559C  5146               	movf	___fttol@exp1& (0+255),w,b
 19448  01559E  0101               	movlb	1	; () banked
 19449  0155A0  B4D8               	btfsc	status,2,c
 19450  0155A2  D002               	goto	l13405
 19451  0155A4  D7F1               	goto	l13401
 19452                           
 19453                           ; BSR set to: 1
 19454  0155A6  D000               	goto	l13405
 19455  0155A8                     l13405:
 19456                           
 19457                           ; BSR set to: 1
 19458  0155A8  0101               	movlb	1	; () banked
 19459  0155AA  5141               	movf	___fttol@sign1& (0+255),w,b
 19460  0155AC  0101               	movlb	1	; () banked
 19461  0155AE  B4D8               	btfsc	status,2,c
 19462  0155B0  D00A               	goto	l13409
 19463                           
 19464                           ; BSR set to: 1
 19465  0155B2  0101               	movlb	1	; () banked
 19466  0155B4  1F45               	comf	(___fttol@lval+3)& (0+255),f,b
 19467  0155B6  1F44               	comf	(___fttol@lval+2)& (0+255),f,b
 19468  0155B8  1F43               	comf	(___fttol@lval+1)& (0+255),f,b
 19469  0155BA  6D42               	negf	___fttol@lval& (0+255),b
 19470  0155BC  0E00               	movlw	0
 19471  0155BE  2343               	addwfc	(___fttol@lval+1)& (0+255),f,b
 19472  0155C0  2344               	addwfc	(___fttol@lval+2)& (0+255),f,b
 19473  0155C2  2345               	addwfc	(___fttol@lval+3)& (0+255),f,b
 19474  0155C4  D000               	goto	l13409
 19475  0155C6                     l13409:
 19476                           
 19477                           ; BSR set to: 1
 19478  0155C6  C142  F138         	movff	___fttol@lval,?___fttol
 19479  0155CA  C143  F139         	movff	___fttol@lval+1,?___fttol+1
 19480  0155CE  C144  F13A         	movff	___fttol@lval+2,?___fttol+2
 19481  0155D2  C145  F13B         	movff	___fttol@lval+3,?___fttol+3
 19482  0155D6  0012               	return	
 19483                           
 19484                           ; BSR set to: 1
 19485                           
 19486                           ; BSR set to: 1
 19487  0155D8  0012               	return		;funcret
 19488  0155DA                     __end_of___fttol:
 19489                           	opt stack 0
 19490                           tblptru	equ	0xFF8
 19491                           tblptrh	equ	0xFF7
 19492                           tblptrl	equ	0xFF6
 19493                           tablat	equ	0xFF5
 19494                           prodh	equ	0xFF4
 19495                           prodl	equ	0xFF3
 19496                           intcon	equ	0xFF2
 19497                           intcon2	equ	0xFF1
 19498                           postinc0	equ	0xFEE
 19499                           plusw0	equ	0xFEB
 19500                           wreg	equ	0xFE8
 19501                           indf1	equ	0xFE7
 19502                           postdec1	equ	0xFE5
 19503                           fsr1h	equ	0xFE2
 19504                           fsr1l	equ	0xFE1
 19505                           indf2	equ	0xFDF
 19506                           postinc2	equ	0xFDE
 19507                           postdec2	equ	0xFDD
 19508                           plusw2	equ	0xFDB
 19509                           fsr2h	equ	0xFDA
 19510                           fsr2l	equ	0xFD9
 19511                           status	equ	0xFD8
 19512                           
 19513 ;; *************** function ___ftmul *****************
 19514 ;; Defined at:
 19515 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 19516 ;; Parameters:    Size  Location     Type
 19517 ;;  f1              3   41[BANK1 ] float 
 19518 ;;  f2              3   44[BANK1 ] float 
 19519 ;; Auto vars:     Size  Location     Type
 19520 ;;  f3_as_produc    3   51[BANK1 ] unsigned um
 19521 ;;  sign            1   55[BANK1 ] unsigned char 
 19522 ;;  cntr            1   54[BANK1 ] unsigned char 
 19523 ;;  exp             1   50[BANK1 ] unsigned char 
 19524 ;; Return value:  Size  Location     Type
 19525 ;;                  3   41[BANK1 ] float 
 19526 ;; Registers used:
 19527 ;;		wreg, status,2, status,0, cstack
 19528 ;; Tracked objects:
 19529 ;;		On entry : 0/0
 19530 ;;		On exit  : 0/0
 19531 ;;		Unchanged: 0/0
 19532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19533 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19534 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19535 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19536 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 19537 ;;Total ram usage:       15 bytes
 19538 ;; Hardware stack levels used:    1
 19539 ;; Hardware stack levels required when called:    8
 19540 ;; This function calls:
 19541 ;;		___ftpack
 19542 ;; This function is called by:
 19543 ;;		_Command
 19544 ;;		_SetContrast
 19545 ;;		_SetDuty
 19546 ;; This function uses a non-reentrant model
 19547 ;;
 19548                           
 19549                           	psect	text41
 19550  01505C                     __ptext41:
 19551                           	opt stack 0
 19552  01505C                     ___ftmul:
 19553                           	opt stack 21
 19554                           
 19555                           ; BSR set to: 1
 19556                           ;incstack = 0
 19557  01505C  C12B  F12F         	movff	___ftmul@f1+2,??___ftmul
 19558  015060  0101               	movlb	1	; () banked
 19559  015062  6B30               	clrf	(??___ftmul+1)& (0+255),b
 19560  015064  6B31               	clrf	(??___ftmul+2)& (0+255),b
 19561  015066  0101               	movlb	1	; () banked
 19562  015068  352A               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 19563  01506A  0101               	movlb	1	; () banked
 19564  01506C  372F               	rlcf	??___ftmul& (0+255),f,b
 19565  01506E  E301               	bnc	u16781
 19566  015070  8130               	bsf	(??___ftmul+1)& (0+255),0,b
 19567  015072                     u16781:
 19568  015072  0101               	movlb	1	; () banked
 19569  015074  512F               	movf	??___ftmul& (0+255),w,b
 19570  015076  0101               	movlb	1	; () banked
 19571  015078  6F32               	movwf	___ftmul@exp& (0+255),b
 19572  01507A  0101               	movlb	1	; () banked
 19573  01507C  5132               	movf	___ftmul@exp& (0+255),w,b
 19574  01507E  A4D8               	btfss	status,2,c
 19575  015080  D00A               	goto	l13245
 19576                           
 19577                           ; BSR set to: 1
 19578  015082  0E00               	movlw	0
 19579  015084  0101               	movlb	1	; () banked
 19580  015086  6F29               	movwf	?___ftmul& (0+255),b
 19581  015088  0E00               	movlw	0
 19582  01508A  0101               	movlb	1	; () banked
 19583  01508C  6F2A               	movwf	(?___ftmul+1)& (0+255),b
 19584  01508E  0E00               	movlw	0
 19585  015090  0101               	movlb	1	; () banked
 19586  015092  6F2B               	movwf	(?___ftmul+2)& (0+255),b
 19587                           
 19588                           ; BSR set to: 1
 19589  015094  0012               	return	
 19590  015096                     l13245:
 19591                           
 19592                           ; BSR set to: 1
 19593  015096  C12E  F12F         	movff	___ftmul@f2+2,??___ftmul
 19594  01509A  0101               	movlb	1	; () banked
 19595  01509C  6B30               	clrf	(??___ftmul+1)& (0+255),b
 19596  01509E  6B31               	clrf	(??___ftmul+2)& (0+255),b
 19597  0150A0  0101               	movlb	1	; () banked
 19598  0150A2  352D               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 19599  0150A4  0101               	movlb	1	; () banked
 19600  0150A6  372F               	rlcf	??___ftmul& (0+255),f,b
 19601  0150A8  E301               	bnc	u16801
 19602  0150AA  8130               	bsf	(??___ftmul+1)& (0+255),0,b
 19603  0150AC                     u16801:
 19604  0150AC  0101               	movlb	1	; () banked
 19605  0150AE  512F               	movf	??___ftmul& (0+255),w,b
 19606  0150B0  0101               	movlb	1	; () banked
 19607  0150B2  6F37               	movwf	___ftmul@sign& (0+255),b
 19608  0150B4  0101               	movlb	1	; () banked
 19609  0150B6  5137               	movf	___ftmul@sign& (0+255),w,b
 19610  0150B8  A4D8               	btfss	status,2,c
 19611  0150BA  D00A               	goto	l13251
 19612                           
 19613                           ; BSR set to: 1
 19614  0150BC  0E00               	movlw	0
 19615  0150BE  0101               	movlb	1	; () banked
 19616  0150C0  6F29               	movwf	?___ftmul& (0+255),b
 19617  0150C2  0E00               	movlw	0
 19618  0150C4  0101               	movlb	1	; () banked
 19619  0150C6  6F2A               	movwf	(?___ftmul+1)& (0+255),b
 19620  0150C8  0E00               	movlw	0
 19621  0150CA  0101               	movlb	1	; () banked
 19622  0150CC  6F2B               	movwf	(?___ftmul+2)& (0+255),b
 19623                           
 19624                           ; BSR set to: 1
 19625  0150CE  0012               	return	
 19626  0150D0                     l13251:
 19627                           
 19628                           ; BSR set to: 1
 19629  0150D0  0101               	movlb	1	; () banked
 19630  0150D2  5137               	movf	___ftmul@sign& (0+255),w,b
 19631  0150D4  0F7B               	addlw	123
 19632  0150D6  0101               	movlb	1	; () banked
 19633  0150D8  2732               	addwf	___ftmul@exp& (0+255),f,b
 19634                           
 19635                           ; BSR set to: 1
 19636  0150DA  C12B  F137         	movff	___ftmul@f1+2,___ftmul@sign
 19637  0150DE  0101               	movlb	1	; () banked
 19638  0150E0  512E               	movf	(___ftmul@f2+2)& (0+255),w,b
 19639  0150E2  0101               	movlb	1	; () banked
 19640  0150E4  1B37               	xorwf	___ftmul@sign& (0+255),f,b
 19641  0150E6  0E80               	movlw	128
 19642  0150E8  0101               	movlb	1	; () banked
 19643  0150EA  1737               	andwf	___ftmul@sign& (0+255),f,b
 19644                           
 19645                           ; BSR set to: 1
 19646  0150EC  0101               	movlb	1	; () banked
 19647  0150EE  8F2A               	bsf	(___ftmul@f1+1)& (0+255),7,b
 19648                           
 19649                           ; BSR set to: 1
 19650  0150F0  0101               	movlb	1	; () banked
 19651  0150F2  8F2D               	bsf	(___ftmul@f2+1)& (0+255),7,b
 19652                           
 19653                           ; BSR set to: 1
 19654  0150F4  0EFF               	movlw	255
 19655  0150F6  0101               	movlb	1	; () banked
 19656  0150F8  172C               	andwf	___ftmul@f2& (0+255),f,b
 19657  0150FA  0EFF               	movlw	255
 19658  0150FC  0101               	movlb	1	; () banked
 19659  0150FE  172D               	andwf	(___ftmul@f2+1)& (0+255),f,b
 19660  015100  0E00               	movlw	0
 19661  015102  0101               	movlb	1	; () banked
 19662  015104  172E               	andwf	(___ftmul@f2+2)& (0+255),f,b
 19663                           
 19664                           ; BSR set to: 1
 19665  015106  0E00               	movlw	0
 19666  015108  0101               	movlb	1	; () banked
 19667  01510A  6F33               	movwf	___ftmul@f3_as_product& (0+255),b
 19668  01510C  0E00               	movlw	0
 19669  01510E  0101               	movlb	1	; () banked
 19670  015110  6F34               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 19671  015112  0E00               	movlw	0
 19672  015114  0101               	movlb	1	; () banked
 19673  015116  6F35               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 19674                           
 19675                           ; BSR set to: 1
 19676  015118  0E07               	movlw	7
 19677  01511A  0101               	movlb	1	; () banked
 19678  01511C  6F36               	movwf	___ftmul@cntr& (0+255),b
 19679  01511E  D000               	goto	l13265
 19680  015120                     l13265:
 19681                           
 19682                           ; BSR set to: 1
 19683  015120  0101               	movlb	1	; () banked
 19684  015122  A129               	btfss	___ftmul@f1& (0+255),0,b
 19685  015124  D00D               	goto	l13269
 19686                           
 19687                           ; BSR set to: 1
 19688  015126  0101               	movlb	1	; () banked
 19689  015128  512C               	movf	___ftmul@f2& (0+255),w,b
 19690  01512A  0101               	movlb	1	; () banked
 19691  01512C  2733               	addwf	___ftmul@f3_as_product& (0+255),f,b
 19692  01512E  0101               	movlb	1	; () banked
 19693  015130  512D               	movf	(___ftmul@f2+1)& (0+255),w,b
 19694  015132  0101               	movlb	1	; () banked
 19695  015134  2334               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 19696  015136  0101               	movlb	1	; () banked
 19697  015138  512E               	movf	(___ftmul@f2+2)& (0+255),w,b
 19698  01513A  0101               	movlb	1	; () banked
 19699  01513C  2335               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 19700  01513E  D000               	goto	l13269
 19701  015140                     l13269:
 19702                           
 19703                           ; BSR set to: 1
 19704  015140  0101               	movlb	1	; () banked
 19705  015142  90D8               	bcf	status,0,c
 19706  015144  332B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 19707  015146  332A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 19708  015148  3329               	rrcf	___ftmul@f1& (0+255),f,b
 19709  01514A  0101               	movlb	1	; () banked
 19710  01514C  90D8               	bcf	status,0,c
 19711  01514E  372C               	rlcf	___ftmul@f2& (0+255),f,b
 19712  015150  372D               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 19713  015152  372E               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 19714                           
 19715                           ; BSR set to: 1
 19716  015154  0101               	movlb	1	; () banked
 19717  015156  2F36               	decfsz	___ftmul@cntr& (0+255),f,b
 19718  015158  D7E3               	goto	l13265
 19719  01515A  D000               	goto	l13273
 19720  01515C                     l13273:
 19721                           
 19722                           ; BSR set to: 1
 19723  01515C  0E09               	movlw	9
 19724  01515E  0101               	movlb	1	; () banked
 19725  015160  6F36               	movwf	___ftmul@cntr& (0+255),b
 19726  015162  D000               	goto	l13275
 19727  015164                     l13275:
 19728                           
 19729                           ; BSR set to: 1
 19730  015164  0101               	movlb	1	; () banked
 19731  015166  A129               	btfss	___ftmul@f1& (0+255),0,b
 19732  015168  D00D               	goto	l13279
 19733                           
 19734                           ; BSR set to: 1
 19735  01516A  0101               	movlb	1	; () banked
 19736  01516C  512C               	movf	___ftmul@f2& (0+255),w,b
 19737  01516E  0101               	movlb	1	; () banked
 19738  015170  2733               	addwf	___ftmul@f3_as_product& (0+255),f,b
 19739  015172  0101               	movlb	1	; () banked
 19740  015174  512D               	movf	(___ftmul@f2+1)& (0+255),w,b
 19741  015176  0101               	movlb	1	; () banked
 19742  015178  2334               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 19743  01517A  0101               	movlb	1	; () banked
 19744  01517C  512E               	movf	(___ftmul@f2+2)& (0+255),w,b
 19745  01517E  0101               	movlb	1	; () banked
 19746  015180  2335               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 19747  015182  D000               	goto	l13279
 19748  015184                     l13279:
 19749                           
 19750                           ; BSR set to: 1
 19751  015184  0101               	movlb	1	; () banked
 19752  015186  90D8               	bcf	status,0,c
 19753  015188  332B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 19754  01518A  332A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 19755  01518C  3329               	rrcf	___ftmul@f1& (0+255),f,b
 19756  01518E  0101               	movlb	1	; () banked
 19757  015190  90D8               	bcf	status,0,c
 19758  015192  3335               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 19759  015194  3334               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 19760  015196  3333               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 19761                           
 19762                           ; BSR set to: 1
 19763  015198  0101               	movlb	1	; () banked
 19764  01519A  2F36               	decfsz	___ftmul@cntr& (0+255),f,b
 19765  01519C  D7E3               	goto	l13275
 19766  01519E  D000               	goto	l13283
 19767  0151A0                     l13283:
 19768                           
 19769                           ; BSR set to: 1
 19770  0151A0  C133  F10E         	movff	___ftmul@f3_as_product,___ftpack@arg
 19771  0151A4  C134  F10F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 19772  0151A8  C135  F110         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 19773  0151AC  C132  F111         	movff	___ftmul@exp,___ftpack@exp
 19774  0151B0  C137  F112         	movff	___ftmul@sign,___ftpack@sign
 19775  0151B4  EC53  F0AD         	call	___ftpack	;wreg free
 19776  0151B8  C10E  F129         	movff	?___ftpack,?___ftmul
 19777  0151BC  C10F  F12A         	movff	?___ftpack+1,?___ftmul+1
 19778  0151C0  C110  F12B         	movff	?___ftpack+2,?___ftmul+2
 19779  0151C4  0012               	return	
 19780  0151C6  0012               	return		;funcret
 19781  0151C8                     __end_of___ftmul:
 19782                           	opt stack 0
 19783                           tblptru	equ	0xFF8
 19784                           tblptrh	equ	0xFF7
 19785                           tblptrl	equ	0xFF6
 19786                           tablat	equ	0xFF5
 19787                           prodh	equ	0xFF4
 19788                           prodl	equ	0xFF3
 19789                           intcon	equ	0xFF2
 19790                           intcon2	equ	0xFF1
 19791                           postinc0	equ	0xFEE
 19792                           plusw0	equ	0xFEB
 19793                           wreg	equ	0xFE8
 19794                           indf1	equ	0xFE7
 19795                           postdec1	equ	0xFE5
 19796                           fsr1h	equ	0xFE2
 19797                           fsr1l	equ	0xFE1
 19798                           indf2	equ	0xFDF
 19799                           postinc2	equ	0xFDE
 19800                           postdec2	equ	0xFDD
 19801                           plusw2	equ	0xFDB
 19802                           fsr2h	equ	0xFDA
 19803                           fsr2l	equ	0xFD9
 19804                           status	equ	0xFD8
 19805                           
 19806 ;; *************** function ___ftdiv *****************
 19807 ;; Defined at:
 19808 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 19809 ;; Parameters:    Size  Location     Type
 19810 ;;  f1              3   26[BANK1 ] float 
 19811 ;;  f2              3   29[BANK1 ] float 
 19812 ;; Auto vars:     Size  Location     Type
 19813 ;;  f3              3   36[BANK1 ] float 
 19814 ;;  sign            1   40[BANK1 ] unsigned char 
 19815 ;;  exp             1   39[BANK1 ] unsigned char 
 19816 ;;  cntr            1   35[BANK1 ] unsigned char 
 19817 ;; Return value:  Size  Location     Type
 19818 ;;                  3   26[BANK1 ] float 
 19819 ;; Registers used:
 19820 ;;		wreg, status,2, status,0, cstack
 19821 ;; Tracked objects:
 19822 ;;		On entry : 0/0
 19823 ;;		On exit  : 0/0
 19824 ;;		Unchanged: 0/0
 19825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19826 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19827 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19828 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19829 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 19830 ;;Total ram usage:       15 bytes
 19831 ;; Hardware stack levels used:    1
 19832 ;; Hardware stack levels required when called:    8
 19833 ;; This function calls:
 19834 ;;		___ftpack
 19835 ;; This function is called by:
 19836 ;;		_Command
 19837 ;;		_SetContrast
 19838 ;;		_SetDuty
 19839 ;; This function uses a non-reentrant model
 19840 ;;
 19841                           
 19842                           	psect	text42
 19843  0155DA                     __ptext42:
 19844                           	opt stack 0
 19845  0155DA                     ___ftdiv:
 19846                           	opt stack 21
 19847                           
 19848                           ;incstack = 0
 19849  0155DA  C11C  F120         	movff	___ftdiv@f1+2,??___ftdiv
 19850  0155DE  0101               	movlb	1	; () banked
 19851  0155E0  6B21               	clrf	(??___ftdiv+1)& (0+255),b
 19852  0155E2  6B22               	clrf	(??___ftdiv+2)& (0+255),b
 19853  0155E4  0101               	movlb	1	; () banked
 19854  0155E6  351B               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 19855  0155E8  0101               	movlb	1	; () banked
 19856  0155EA  3720               	rlcf	??___ftdiv& (0+255),f,b
 19857  0155EC  E301               	bnc	u16731
 19858  0155EE  8121               	bsf	(??___ftdiv+1)& (0+255),0,b
 19859  0155F0                     u16731:
 19860  0155F0  0101               	movlb	1	; () banked
 19861  0155F2  5120               	movf	??___ftdiv& (0+255),w,b
 19862  0155F4  0101               	movlb	1	; () banked
 19863  0155F6  6F27               	movwf	___ftdiv@exp& (0+255),b
 19864  0155F8  0101               	movlb	1	; () banked
 19865  0155FA  5127               	movf	___ftdiv@exp& (0+255),w,b
 19866  0155FC  A4D8               	btfss	status,2,c
 19867  0155FE  D00A               	goto	l13199
 19868                           
 19869                           ; BSR set to: 1
 19870  015600  0E00               	movlw	0
 19871  015602  0101               	movlb	1	; () banked
 19872  015604  6F1A               	movwf	?___ftdiv& (0+255),b
 19873  015606  0E00               	movlw	0
 19874  015608  0101               	movlb	1	; () banked
 19875  01560A  6F1B               	movwf	(?___ftdiv+1)& (0+255),b
 19876  01560C  0E00               	movlw	0
 19877  01560E  0101               	movlb	1	; () banked
 19878  015610  6F1C               	movwf	(?___ftdiv+2)& (0+255),b
 19879                           
 19880                           ; BSR set to: 1
 19881  015612  0012               	return	
 19882  015614                     l13199:
 19883                           
 19884                           ; BSR set to: 1
 19885  015614  C11F  F120         	movff	___ftdiv@f2+2,??___ftdiv
 19886  015618  0101               	movlb	1	; () banked
 19887  01561A  6B21               	clrf	(??___ftdiv+1)& (0+255),b
 19888  01561C  6B22               	clrf	(??___ftdiv+2)& (0+255),b
 19889  01561E  0101               	movlb	1	; () banked
 19890  015620  351E               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 19891  015622  0101               	movlb	1	; () banked
 19892  015624  3720               	rlcf	??___ftdiv& (0+255),f,b
 19893  015626  E301               	bnc	u16751
 19894  015628  8121               	bsf	(??___ftdiv+1)& (0+255),0,b
 19895  01562A                     u16751:
 19896  01562A  0101               	movlb	1	; () banked
 19897  01562C  5120               	movf	??___ftdiv& (0+255),w,b
 19898  01562E  0101               	movlb	1	; () banked
 19899  015630  6F28               	movwf	___ftdiv@sign& (0+255),b
 19900  015632  0101               	movlb	1	; () banked
 19901  015634  5128               	movf	___ftdiv@sign& (0+255),w,b
 19902  015636  A4D8               	btfss	status,2,c
 19903  015638  D00A               	goto	l13205
 19904                           
 19905                           ; BSR set to: 1
 19906  01563A  0E00               	movlw	0
 19907  01563C  0101               	movlb	1	; () banked
 19908  01563E  6F1A               	movwf	?___ftdiv& (0+255),b
 19909  015640  0E00               	movlw	0
 19910  015642  0101               	movlb	1	; () banked
 19911  015644  6F1B               	movwf	(?___ftdiv+1)& (0+255),b
 19912  015646  0E00               	movlw	0
 19913  015648  0101               	movlb	1	; () banked
 19914  01564A  6F1C               	movwf	(?___ftdiv+2)& (0+255),b
 19915                           
 19916                           ; BSR set to: 1
 19917  01564C  0012               	return	
 19918  01564E                     l13205:
 19919                           
 19920                           ; BSR set to: 1
 19921  01564E  0E00               	movlw	0
 19922  015650  0101               	movlb	1	; () banked
 19923  015652  6F24               	movwf	___ftdiv@f3& (0+255),b
 19924  015654  0E00               	movlw	0
 19925  015656  0101               	movlb	1	; () banked
 19926  015658  6F25               	movwf	(___ftdiv@f3+1)& (0+255),b
 19927  01565A  0E00               	movlw	0
 19928  01565C  0101               	movlb	1	; () banked
 19929  01565E  6F26               	movwf	(___ftdiv@f3+2)& (0+255),b
 19930                           
 19931                           ; BSR set to: 1
 19932  015660  0101               	movlb	1	; () banked
 19933  015662  5128               	movf	___ftdiv@sign& (0+255),w,b
 19934  015664  0F89               	addlw	137
 19935  015666  0101               	movlb	1	; () banked
 19936  015668  5F27               	subwf	___ftdiv@exp& (0+255),f,b
 19937                           
 19938                           ; BSR set to: 1
 19939  01566A  C11C  F128         	movff	___ftdiv@f1+2,___ftdiv@sign
 19940                           
 19941                           ; BSR set to: 1
 19942  01566E  0101               	movlb	1	; () banked
 19943  015670  511F               	movf	(___ftdiv@f2+2)& (0+255),w,b
 19944  015672  0101               	movlb	1	; () banked
 19945  015674  1B28               	xorwf	___ftdiv@sign& (0+255),f,b
 19946                           
 19947                           ; BSR set to: 1
 19948  015676  0E80               	movlw	128
 19949  015678  0101               	movlb	1	; () banked
 19950  01567A  1728               	andwf	___ftdiv@sign& (0+255),f,b
 19951                           
 19952                           ; BSR set to: 1
 19953  01567C  0101               	movlb	1	; () banked
 19954  01567E  8F1B               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 19955                           
 19956                           ; BSR set to: 1
 19957  015680  0EFF               	movlw	255
 19958  015682  0101               	movlb	1	; () banked
 19959  015684  171A               	andwf	___ftdiv@f1& (0+255),f,b
 19960  015686  0EFF               	movlw	255
 19961  015688  0101               	movlb	1	; () banked
 19962  01568A  171B               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 19963  01568C  0E00               	movlw	0
 19964  01568E  0101               	movlb	1	; () banked
 19965  015690  171C               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 19966                           
 19967                           ; BSR set to: 1
 19968  015692  0101               	movlb	1	; () banked
 19969  015694  8F1E               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 19970                           
 19971                           ; BSR set to: 1
 19972  015696  0EFF               	movlw	255
 19973  015698  0101               	movlb	1	; () banked
 19974  01569A  171D               	andwf	___ftdiv@f2& (0+255),f,b
 19975  01569C  0EFF               	movlw	255
 19976  01569E  0101               	movlb	1	; () banked
 19977  0156A0  171E               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 19978  0156A2  0E00               	movlw	0
 19979  0156A4  0101               	movlb	1	; () banked
 19980  0156A6  171F               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 19981                           
 19982                           ; BSR set to: 1
 19983  0156A8  0E18               	movlw	24
 19984  0156AA  0101               	movlb	1	; () banked
 19985  0156AC  6F23               	movwf	___ftdiv@cntr& (0+255),b
 19986  0156AE  D000               	goto	l13225
 19987  0156B0                     l13225:
 19988                           
 19989                           ; BSR set to: 1
 19990  0156B0  0101               	movlb	1	; () banked
 19991  0156B2  90D8               	bcf	status,0,c
 19992  0156B4  3724               	rlcf	___ftdiv@f3& (0+255),f,b
 19993  0156B6  3725               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 19994  0156B8  3726               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 19995                           
 19996                           ; BSR set to: 1
 19997  0156BA  0101               	movlb	1	; () banked
 19998  0156BC  511D               	movf	___ftdiv@f2& (0+255),w,b
 19999  0156BE  0101               	movlb	1	; () banked
 20000  0156C0  5D1A               	subwf	___ftdiv@f1& (0+255),w,b
 20001  0156C2  0101               	movlb	1	; () banked
 20002  0156C4  511E               	movf	(___ftdiv@f2+1)& (0+255),w,b
 20003  0156C6  0101               	movlb	1	; () banked
 20004  0156C8  591B               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 20005  0156CA  0101               	movlb	1	; () banked
 20006  0156CC  511F               	movf	(___ftdiv@f2+2)& (0+255),w,b
 20007  0156CE  0101               	movlb	1	; () banked
 20008  0156D0  591C               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 20009  0156D2  A0D8               	btfss	status,0,c
 20010  0156D4  D00E               	goto	l2352
 20011                           
 20012                           ; BSR set to: 1
 20013  0156D6  0101               	movlb	1	; () banked
 20014  0156D8  511D               	movf	___ftdiv@f2& (0+255),w,b
 20015  0156DA  0101               	movlb	1	; () banked
 20016  0156DC  5F1A               	subwf	___ftdiv@f1& (0+255),f,b
 20017  0156DE  0101               	movlb	1	; () banked
 20018  0156E0  511E               	movf	(___ftdiv@f2+1)& (0+255),w,b
 20019  0156E2  0101               	movlb	1	; () banked
 20020  0156E4  5B1B               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 20021  0156E6  0101               	movlb	1	; () banked
 20022  0156E8  511F               	movf	(___ftdiv@f2+2)& (0+255),w,b
 20023  0156EA  0101               	movlb	1	; () banked
 20024  0156EC  5B1C               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 20025                           
 20026                           ; BSR set to: 1
 20027  0156EE  0101               	movlb	1	; () banked
 20028  0156F0  8124               	bsf	___ftdiv@f3& (0+255),0,b
 20029  0156F2                     l2352:
 20030                           
 20031                           ; BSR set to: 1
 20032  0156F2  0101               	movlb	1	; () banked
 20033  0156F4  90D8               	bcf	status,0,c
 20034  0156F6  371A               	rlcf	___ftdiv@f1& (0+255),f,b
 20035  0156F8  371B               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 20036  0156FA  371C               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 20037                           
 20038                           ; BSR set to: 1
 20039  0156FC  0101               	movlb	1	; () banked
 20040  0156FE  2F23               	decfsz	___ftdiv@cntr& (0+255),f,b
 20041  015700  D7D7               	goto	l13225
 20042  015702  D000               	goto	l13235
 20043  015704                     l13235:
 20044                           
 20045                           ; BSR set to: 1
 20046  015704  C124  F10E         	movff	___ftdiv@f3,___ftpack@arg
 20047  015708  C125  F10F         	movff	___ftdiv@f3+1,___ftpack@arg+1
 20048  01570C  C126  F110         	movff	___ftdiv@f3+2,___ftpack@arg+2
 20049  015710  C127  F111         	movff	___ftdiv@exp,___ftpack@exp
 20050  015714  C128  F112         	movff	___ftdiv@sign,___ftpack@sign
 20051  015718  EC53  F0AD         	call	___ftpack	;wreg free
 20052  01571C  C10E  F11A         	movff	?___ftpack,?___ftdiv
 20053  015720  C10F  F11B         	movff	?___ftpack+1,?___ftdiv+1
 20054  015724  C110  F11C         	movff	?___ftpack+2,?___ftdiv+2
 20055  015728  0012               	return	
 20056  01572A  0012               	return		;funcret
 20057  01572C                     __end_of___ftdiv:
 20058                           	opt stack 0
 20059                           tblptru	equ	0xFF8
 20060                           tblptrh	equ	0xFF7
 20061                           tblptrl	equ	0xFF6
 20062                           tablat	equ	0xFF5
 20063                           prodh	equ	0xFF4
 20064                           prodl	equ	0xFF3
 20065                           intcon	equ	0xFF2
 20066                           intcon2	equ	0xFF1
 20067                           postinc0	equ	0xFEE
 20068                           plusw0	equ	0xFEB
 20069                           wreg	equ	0xFE8
 20070                           indf1	equ	0xFE7
 20071                           postdec1	equ	0xFE5
 20072                           fsr1h	equ	0xFE2
 20073                           fsr1l	equ	0xFE1
 20074                           indf2	equ	0xFDF
 20075                           postinc2	equ	0xFDE
 20076                           postdec2	equ	0xFDD
 20077                           plusw2	equ	0xFDB
 20078                           fsr2h	equ	0xFDA
 20079                           fsr2l	equ	0xFD9
 20080                           status	equ	0xFD8
 20081                           
 20082 ;; *************** function ___ftpack *****************
 20083 ;; Defined at:
 20084 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 20085 ;; Parameters:    Size  Location     Type
 20086 ;;  arg             3   14[BANK1 ] unsigned um
 20087 ;;  exp             1   17[BANK1 ] unsigned char 
 20088 ;;  sign            1   18[BANK1 ] unsigned char 
 20089 ;; Auto vars:     Size  Location     Type
 20090 ;;		None
 20091 ;; Return value:  Size  Location     Type
 20092 ;;                  3   14[BANK1 ] float 
 20093 ;; Registers used:
 20094 ;;		wreg, status,2, status,0
 20095 ;; Tracked objects:
 20096 ;;		On entry : 0/0
 20097 ;;		On exit  : 0/0
 20098 ;;		Unchanged: 0/0
 20099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20100 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 20101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20102 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 20103 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 20104 ;;Total ram usage:        8 bytes
 20105 ;; Hardware stack levels used:    1
 20106 ;; Hardware stack levels required when called:    7
 20107 ;; This function calls:
 20108 ;;		Nothing
 20109 ;; This function is called by:
 20110 ;;		___ftdiv
 20111 ;;		___ftmul
 20112 ;;		___lbtoft
 20113 ;;		___lwtoft
 20114 ;; This function uses a non-reentrant model
 20115 ;;
 20116                           
 20117                           	psect	text43
 20118  015AA6                     __ptext43:
 20119                           	opt stack 0
 20120  015AA6                     ___ftpack:
 20121                           	opt stack 21
 20122                           
 20123                           ;incstack = 0
 20124  015AA6  0101               	movlb	1	; () banked
 20125  015AA8  5111               	movf	___ftpack@exp& (0+255),w,b
 20126  015AAA  0101               	movlb	1	; () banked
 20127  015AAC  B4D8               	btfsc	status,2,c
 20128  015AAE  D008               	goto	l12301
 20129                           
 20130                           ; BSR set to: 1
 20131  015AB0  0101               	movlb	1	; () banked
 20132  015AB2  510E               	movf	___ftpack@arg& (0+255),w,b
 20133  015AB4  0101               	movlb	1	; () banked
 20134  015AB6  110F               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 20135  015AB8  0101               	movlb	1	; () banked
 20136  015ABA  1110               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 20137  015ABC  A4D8               	btfss	status,2,c
 20138  015ABE  D013               	goto	l12307
 20139  015AC0                     l12301:
 20140                           
 20141                           ; BSR set to: 1
 20142  015AC0  0E00               	movlw	0
 20143  015AC2  0101               	movlb	1	; () banked
 20144  015AC4  6F0E               	movwf	?___ftpack& (0+255),b
 20145  015AC6  0E00               	movlw	0
 20146  015AC8  0101               	movlb	1	; () banked
 20147  015ACA  6F0F               	movwf	(?___ftpack+1)& (0+255),b
 20148  015ACC  0E00               	movlw	0
 20149  015ACE  0101               	movlb	1	; () banked
 20150  015AD0  6F10               	movwf	(?___ftpack+2)& (0+255),b
 20151                           
 20152                           ; BSR set to: 1
 20153  015AD2  0012               	return	
 20154                           
 20155                           ; BSR set to: 1
 20156  015AD4  D008               	goto	l12307
 20157  015AD6                     l12305:
 20158                           
 20159                           ; BSR set to: 1
 20160  015AD6  0101               	movlb	1	; () banked
 20161  015AD8  2B11               	incf	___ftpack@exp& (0+255),f,b
 20162  015ADA  0101               	movlb	1	; () banked
 20163  015ADC  90D8               	bcf	status,0,c
 20164  015ADE  3310               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 20165  015AE0  330F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 20166  015AE2  330E               	rrcf	___ftpack@arg& (0+255),f,b
 20167  015AE4  D000               	goto	l12307
 20168  015AE6                     l12307:
 20169                           
 20170                           ; BSR set to: 1
 20171  015AE6  0E00               	movlw	0
 20172  015AE8  0101               	movlb	1	; () banked
 20173  015AEA  150E               	andwf	___ftpack@arg& (0+255),w,b
 20174  015AEC  0101               	movlb	1	; () banked
 20175  015AEE  6F13               	movwf	??___ftpack& (0+255),b
 20176  015AF0  0E00               	movlw	0
 20177  015AF2  0101               	movlb	1	; () banked
 20178  015AF4  150F               	andwf	(___ftpack@arg+1)& (0+255),w,b
 20179  015AF6  0101               	movlb	1	; () banked
 20180  015AF8  6F14               	movwf	(??___ftpack+1)& (0+255),b
 20181  015AFA  0EFE               	movlw	254
 20182  015AFC  0101               	movlb	1	; () banked
 20183  015AFE  1510               	andwf	(___ftpack@arg+2)& (0+255),w,b
 20184  015B00  0101               	movlb	1	; () banked
 20185  015B02  6F15               	movwf	(??___ftpack+2)& (0+255),b
 20186  015B04  0101               	movlb	1	; () banked
 20187  015B06  5113               	movf	??___ftpack& (0+255),w,b
 20188  015B08  0101               	movlb	1	; () banked
 20189  015B0A  1114               	iorwf	(??___ftpack+1)& (0+255),w,b
 20190  015B0C  0101               	movlb	1	; () banked
 20191  015B0E  1115               	iorwf	(??___ftpack+2)& (0+255),w,b
 20192  015B10  B4D8               	btfsc	status,2,c
 20193  015B12  D013               	goto	l12313
 20194  015B14  D7E0               	goto	l12305
 20195                           
 20196                           ; BSR set to: 1
 20197  015B16  D011               	goto	l12313
 20198  015B18                     l12309:
 20199                           
 20200                           ; BSR set to: 1
 20201  015B18  0101               	movlb	1	; () banked
 20202  015B1A  2B11               	incf	___ftpack@exp& (0+255),f,b
 20203                           
 20204                           ; BSR set to: 1
 20205  015B1C  0E01               	movlw	1
 20206  015B1E  0101               	movlb	1	; () banked
 20207  015B20  270E               	addwf	___ftpack@arg& (0+255),f,b
 20208  015B22  0E00               	movlw	0
 20209  015B24  0101               	movlb	1	; () banked
 20210  015B26  230F               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 20211  015B28  0E00               	movlw	0
 20212  015B2A  0101               	movlb	1	; () banked
 20213  015B2C  2310               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 20214  015B2E  0101               	movlb	1	; () banked
 20215  015B30  90D8               	bcf	status,0,c
 20216  015B32  3310               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 20217  015B34  330F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 20218  015B36  330E               	rrcf	___ftpack@arg& (0+255),f,b
 20219  015B38  D000               	goto	l12313
 20220  015B3A                     l12313:
 20221                           
 20222                           ; BSR set to: 1
 20223  015B3A  0E00               	movlw	0
 20224  015B3C  0101               	movlb	1	; () banked
 20225  015B3E  150E               	andwf	___ftpack@arg& (0+255),w,b
 20226  015B40  0101               	movlb	1	; () banked
 20227  015B42  6F13               	movwf	??___ftpack& (0+255),b
 20228  015B44  0E00               	movlw	0
 20229  015B46  0101               	movlb	1	; () banked
 20230  015B48  150F               	andwf	(___ftpack@arg+1)& (0+255),w,b
 20231  015B4A  0101               	movlb	1	; () banked
 20232  015B4C  6F14               	movwf	(??___ftpack+1)& (0+255),b
 20233  015B4E  0EFF               	movlw	255
 20234  015B50  0101               	movlb	1	; () banked
 20235  015B52  1510               	andwf	(___ftpack@arg+2)& (0+255),w,b
 20236  015B54  0101               	movlb	1	; () banked
 20237  015B56  6F15               	movwf	(??___ftpack+2)& (0+255),b
 20238  015B58  0101               	movlb	1	; () banked
 20239  015B5A  5113               	movf	??___ftpack& (0+255),w,b
 20240  015B5C  0101               	movlb	1	; () banked
 20241  015B5E  1114               	iorwf	(??___ftpack+1)& (0+255),w,b
 20242  015B60  0101               	movlb	1	; () banked
 20243  015B62  1115               	iorwf	(??___ftpack+2)& (0+255),w,b
 20244  015B64  B4D8               	btfsc	status,2,c
 20245  015B66  D00A               	goto	l12317
 20246  015B68  D7D7               	goto	l12309
 20247                           
 20248                           ; BSR set to: 1
 20249  015B6A  D008               	goto	l12317
 20250  015B6C                     l12315:
 20251                           
 20252                           ; BSR set to: 1
 20253  015B6C  0101               	movlb	1	; () banked
 20254  015B6E  0711               	decf	___ftpack@exp& (0+255),f,b
 20255  015B70  0101               	movlb	1	; () banked
 20256  015B72  90D8               	bcf	status,0,c
 20257  015B74  370E               	rlcf	___ftpack@arg& (0+255),f,b
 20258  015B76  370F               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 20259  015B78  3710               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 20260  015B7A  D000               	goto	l12317
 20261  015B7C                     l12317:
 20262                           
 20263                           ; BSR set to: 1
 20264  015B7C  0101               	movlb	1	; () banked
 20265  015B7E  BF0F               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 20266  015B80  D005               	goto	l2288
 20267                           
 20268                           ; BSR set to: 1
 20269  015B82  0E02               	movlw	2
 20270  015B84  0101               	movlb	1	; () banked
 20271  015B86  6111               	cpfslt	___ftpack@exp& (0+255),b
 20272  015B88  D7F1               	goto	l12315
 20273  015B8A  D000               	goto	l2288
 20274  015B8C                     l2288:
 20275                           
 20276                           ; BSR set to: 1
 20277  015B8C  0101               	movlb	1	; () banked
 20278  015B8E  B111               	btfsc	___ftpack@exp& (0+255),0,b
 20279  015B90  D003               	goto	l12323
 20280                           
 20281                           ; BSR set to: 1
 20282  015B92  0101               	movlb	1	; () banked
 20283  015B94  9F0F               	bcf	(___ftpack@arg+1)& (0+255),7,b
 20284  015B96  D000               	goto	l12323
 20285  015B98                     l12323:
 20286                           
 20287                           ; BSR set to: 1
 20288  015B98  0101               	movlb	1	; () banked
 20289  015B9A  90D8               	bcf	status,0,c
 20290  015B9C  3311               	rrcf	___ftpack@exp& (0+255),f,b
 20291  015B9E  0101               	movlb	1	; () banked
 20292  015BA0  5111               	movf	___ftpack@exp& (0+255),w,b
 20293  015BA2  0101               	movlb	1	; () banked
 20294  015BA4  1310               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 20295                           
 20296                           ; BSR set to: 1
 20297  015BA6  0101               	movlb	1	; () banked
 20298  015BA8  5112               	movf	___ftpack@sign& (0+255),w,b
 20299  015BAA  0101               	movlb	1	; () banked
 20300  015BAC  B4D8               	btfsc	status,2,c
 20301  015BAE  D003               	goto	l12329
 20302                           
 20303                           ; BSR set to: 1
 20304  015BB0  0101               	movlb	1	; () banked
 20305  015BB2  8F10               	bsf	(___ftpack@arg+2)& (0+255),7,b
 20306  015BB4  D000               	goto	l12329
 20307  015BB6                     l12329:
 20308                           
 20309                           ; BSR set to: 1
 20310  015BB6  C10E  F10E         	movff	___ftpack@arg,?___ftpack
 20311  015BBA  C10F  F10F         	movff	___ftpack@arg+1,?___ftpack+1
 20312  015BBE  C110  F110         	movff	___ftpack@arg+2,?___ftpack+2
 20313  015BC2  0012               	return	
 20314                           
 20315                           ; BSR set to: 1
 20316                           
 20317                           ; BSR set to: 1
 20318  015BC4  0012               	return		;funcret
 20319  015BC6                     __end_of___ftpack:
 20320                           	opt stack 0
 20321                           tblptru	equ	0xFF8
 20322                           tblptrh	equ	0xFF7
 20323                           tblptrl	equ	0xFF6
 20324                           tablat	equ	0xFF5
 20325                           prodh	equ	0xFF4
 20326                           prodl	equ	0xFF3
 20327                           intcon	equ	0xFF2
 20328                           intcon2	equ	0xFF1
 20329                           postinc0	equ	0xFEE
 20330                           plusw0	equ	0xFEB
 20331                           wreg	equ	0xFE8
 20332                           indf1	equ	0xFE7
 20333                           postdec1	equ	0xFE5
 20334                           fsr1h	equ	0xFE2
 20335                           fsr1l	equ	0xFE1
 20336                           indf2	equ	0xFDF
 20337                           postinc2	equ	0xFDE
 20338                           postdec2	equ	0xFDD
 20339                           plusw2	equ	0xFDB
 20340                           fsr2h	equ	0xFDA
 20341                           fsr2l	equ	0xFD9
 20342                           status	equ	0xFD8
 20343                           
 20344 ;; *************** function _SetBaud *****************
 20345 ;; Defined at:
 20346 ;;		line 312 in file "UART.c"
 20347 ;; Parameters:    Size  Location     Type
 20348 ;;  Baud            4   80[BANK1 ] unsigned long 
 20349 ;;  Parity          1   84[BANK1 ] unsigned char 
 20350 ;; Auto vars:     Size  Location     Type
 20351 ;;  buf            50   85[BANK1 ] unsigned char [50]
 20352 ;;  status          1  135[BANK1 ] unsigned char 
 20353 ;; Return value:  Size  Location     Type
 20354 ;;		None               void
 20355 ;; Registers used:
 20356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20357 ;; Tracked objects:
 20358 ;;		On entry : 0/0
 20359 ;;		On exit  : 0/0
 20360 ;;		Unchanged: 0/0
 20361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20362 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 20363 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0
 20364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20365 ;;      Totals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0
 20366 ;;Total ram usage:       56 bytes
 20367 ;; Hardware stack levels used:    1
 20368 ;; Hardware stack levels required when called:   10
 20369 ;; This function calls:
 20370 ;;		_InitUART
 20371 ;;		_SetMemoryBaud
 20372 ;;		_SetMemoryParity
 20373 ;;		_UARTstring
 20374 ;;		_UARTstringWAIT
 20375 ;;		_delayUS
 20376 ;;		_sprintf
 20377 ;; This function is called by:
 20378 ;;		_Command
 20379 ;; This function uses a non-reentrant model
 20380 ;;
 20381                           
 20382                           	psect	text44
 20383  0146F2                     __ptext44:
 20384                           	opt stack 0
 20385  0146F2                     _SetBaud:
 20386                           	opt stack 19
 20387                           
 20388                           ;UART.c: 314: unsigned char buf[50];
 20389                           ;UART.c: 315: unsigned char status=0;
 20390                           
 20391                           ; BSR set to: 1
 20392                           ;incstack = 0
 20393  0146F2  0E00               	movlw	0
 20394  0146F4  0101               	movlb	1	; () banked
 20395  0146F6  6F87               	movwf	SetBaud@status& (0+255),b
 20396                           
 20397                           ;UART.c: 317: if(Parity)
 20398  0146F8  0101               	movlb	1	; () banked
 20399  0146FA  5154               	movf	SetBaud@Parity& (0+255),w,b
 20400  0146FC  0101               	movlb	1	; () banked
 20401  0146FE  A4D8               	btfss	status,2,c
 20402  014700  D05E               	goto	l13741
 20403  014702  D06A               	goto	l13743
 20404                           
 20405                           ; BSR set to: 1
 20406                           ;UART.c: 318: {
 20407                           ;UART.c: 319: switch (Parity)
 20408  014704  D05C               	goto	l13741
 20409  014706                     l13731:
 20410                           
 20411                           ; BSR set to: 1
 20412                           ;UART.c: 322: sprintf(buf,"System Baud will be set to %lu with Odd parity bit\r\n",Baud)
      +                          ;
 20413  014706  0E55               	movlw	low SetBaud@buf
 20414  014708  0101               	movlb	1	; () banked
 20415  01470A  6F24               	movwf	sprintf@sp& (0+255),b
 20416  01470C  0E01               	movlw	high SetBaud@buf
 20417  01470E  0101               	movlb	1	; () banked
 20418  014710  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 20419  014712  0E58               	movlw	low STR_23
 20420  014714  0101               	movlb	1	; () banked
 20421  014716  6F26               	movwf	sprintf@f& (0+255),b
 20422  014718  0EF0               	movlw	high STR_23
 20423  01471A  0101               	movlb	1	; () banked
 20424  01471C  6F27               	movwf	(sprintf@f+1)& (0+255),b
 20425  01471E  C150  F128         	movff	SetBaud@Baud,?_sprintf+4
 20426  014722  C151  F129         	movff	SetBaud@Baud+1,?_sprintf+5
 20427  014726  C152  F12A         	movff	SetBaud@Baud+2,?_sprintf+6
 20428  01472A  C153  F12B         	movff	SetBaud@Baud+3,?_sprintf+7
 20429  01472E  EC86  F093         	call	_sprintf	;wreg free
 20430                           
 20431                           ;UART.c: 323: break;
 20432  014732  D069               	goto	l13745
 20433  014734                     l13733:
 20434                           
 20435                           ;UART.c: 325: sprintf(buf,"System Baud will be set to %lu with Even parity bit\r\n",Baud
      +                          );
 20436  014734  0E55               	movlw	low SetBaud@buf
 20437  014736  0101               	movlb	1	; () banked
 20438  014738  6F24               	movwf	sprintf@sp& (0+255),b
 20439  01473A  0E01               	movlw	high SetBaud@buf
 20440  01473C  0101               	movlb	1	; () banked
 20441  01473E  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 20442  014740  0EEC               	movlw	low STR_24
 20443  014742  0101               	movlb	1	; () banked
 20444  014744  6F26               	movwf	sprintf@f& (0+255),b
 20445  014746  0EEF               	movlw	high STR_24
 20446  014748  0101               	movlb	1	; () banked
 20447  01474A  6F27               	movwf	(sprintf@f+1)& (0+255),b
 20448  01474C  C150  F128         	movff	SetBaud@Baud,?_sprintf+4
 20449  014750  C151  F129         	movff	SetBaud@Baud+1,?_sprintf+5
 20450  014754  C152  F12A         	movff	SetBaud@Baud+2,?_sprintf+6
 20451  014758  C153  F12B         	movff	SetBaud@Baud+3,?_sprintf+7
 20452  01475C  EC86  F093         	call	_sprintf	;wreg free
 20453                           
 20454                           ;UART.c: 326: break;
 20455  014760  D052               	goto	l13745
 20456  014762                     l13735:
 20457                           
 20458                           ;UART.c: 328: sprintf(buf,"System Baud will be set to %lu with Mark bit\r\n",Baud);
 20459  014762  0E55               	movlw	low SetBaud@buf
 20460  014764  0101               	movlb	1	; () banked
 20461  014766  6F24               	movwf	sprintf@sp& (0+255),b
 20462  014768  0E01               	movlw	high SetBaud@buf
 20463  01476A  0101               	movlb	1	; () banked
 20464  01476C  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 20465  01476E  0E84               	movlw	low STR_25
 20466  014770  0101               	movlb	1	; () banked
 20467  014772  6F26               	movwf	sprintf@f& (0+255),b
 20468  014774  0EF1               	movlw	high STR_25
 20469  014776  0101               	movlb	1	; () banked
 20470  014778  6F27               	movwf	(sprintf@f+1)& (0+255),b
 20471  01477A  C150  F128         	movff	SetBaud@Baud,?_sprintf+4
 20472  01477E  C151  F129         	movff	SetBaud@Baud+1,?_sprintf+5
 20473  014782  C152  F12A         	movff	SetBaud@Baud+2,?_sprintf+6
 20474  014786  C153  F12B         	movff	SetBaud@Baud+3,?_sprintf+7
 20475  01478A  EC86  F093         	call	_sprintf	;wreg free
 20476                           
 20477                           ;UART.c: 329: break;
 20478  01478E  D03B               	goto	l13745
 20479  014790                     l13737:
 20480                           
 20481                           ;UART.c: 331: sprintf(buf,"System Baud will be set to %lu with Space bit\r\n",Baud);
 20482  014790  0E55               	movlw	low SetBaud@buf
 20483  014792  0101               	movlb	1	; () banked
 20484  014794  6F24               	movwf	sprintf@sp& (0+255),b
 20485  014796  0E01               	movlw	high SetBaud@buf
 20486  014798  0101               	movlb	1	; () banked
 20487  01479A  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 20488  01479C  0E54               	movlw	low STR_26
 20489  01479E  0101               	movlb	1	; () banked
 20490  0147A0  6F26               	movwf	sprintf@f& (0+255),b
 20491  0147A2  0EF1               	movlw	high STR_26
 20492  0147A4  0101               	movlb	1	; () banked
 20493  0147A6  6F27               	movwf	(sprintf@f+1)& (0+255),b
 20494  0147A8  C150  F128         	movff	SetBaud@Baud,?_sprintf+4
 20495  0147AC  C151  F129         	movff	SetBaud@Baud+1,?_sprintf+5
 20496  0147B0  C152  F12A         	movff	SetBaud@Baud+2,?_sprintf+6
 20497  0147B4  C153  F12B         	movff	SetBaud@Baud+3,?_sprintf+7
 20498  0147B8  EC86  F093         	call	_sprintf	;wreg free
 20499                           
 20500                           ;UART.c: 333: }
 20501                           
 20502                           ;UART.c: 332: break;
 20503  0147BC  D024               	goto	l13745
 20504  0147BE                     l13741:
 20505  0147BE  0101               	movlb	1	; () banked
 20506  0147C0  5154               	movf	SetBaud@Parity& (0+255),w,b
 20507                           
 20508                           ; Switch size 1, requested type "space"
 20509                           ; Number of cases is 3, Range of values is 1 to 3
 20510                           ; switch strategies available:
 20511                           ; Name         Instructions Cycles
 20512                           ; simple_byte           10     6 (average)
 20513                           ;	Chosen strategy is simple_byte
 20514  0147C2  0A01               	xorlw	1	; case 1
 20515  0147C4  B4D8               	btfsc	status,2,c
 20516  0147C6  D79F               	goto	l13731
 20517  0147C8  0A03               	xorlw	3	; case 2
 20518  0147CA  B4D8               	btfsc	status,2,c
 20519  0147CC  D7B3               	goto	l13733
 20520  0147CE  0A01               	xorlw	1	; case 3
 20521  0147D0  B4D8               	btfsc	status,2,c
 20522  0147D2  D7C7               	goto	l13735
 20523  0147D4  D7DD               	goto	l13737
 20524                           
 20525                           ; BSR set to: 1
 20526                           ;UART.c: 334: }
 20527  0147D6  D017               	goto	l13745
 20528  0147D8                     l13743:
 20529                           
 20530                           ; BSR set to: 1
 20531                           ;UART.c: 335: else
 20532                           ;UART.c: 336: {
 20533                           ;UART.c: 337: sprintf(buf,"System Baud will be set to %lu with no parity bit\r\n",Baud);
 20534  0147D8  0E55               	movlw	low SetBaud@buf
 20535  0147DA  0101               	movlb	1	; () banked
 20536  0147DC  6F24               	movwf	sprintf@sp& (0+255),b
 20537  0147DE  0E01               	movlw	high SetBaud@buf
 20538  0147E0  0101               	movlb	1	; () banked
 20539  0147E2  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 20540  0147E4  0E8D               	movlw	low STR_27
 20541  0147E6  0101               	movlb	1	; () banked
 20542  0147E8  6F26               	movwf	sprintf@f& (0+255),b
 20543  0147EA  0EF0               	movlw	high STR_27
 20544  0147EC  0101               	movlb	1	; () banked
 20545  0147EE  6F27               	movwf	(sprintf@f+1)& (0+255),b
 20546  0147F0  C150  F128         	movff	SetBaud@Baud,?_sprintf+4
 20547  0147F4  C151  F129         	movff	SetBaud@Baud+1,?_sprintf+5
 20548  0147F8  C152  F12A         	movff	SetBaud@Baud+2,?_sprintf+6
 20549  0147FC  C153  F12B         	movff	SetBaud@Baud+3,?_sprintf+7
 20550  014800  EC86  F093         	call	_sprintf	;wreg free
 20551  014804  D000               	goto	l13745
 20552  014806                     l13745:
 20553                           
 20554                           ;UART.c: 338: }
 20555                           ;UART.c: 340: status = SetMemoryBaud(Baud);
 20556  014806  C150  F131         	movff	SetBaud@Baud,SetMemoryBaud@Baud
 20557  01480A  C151  F132         	movff	SetBaud@Baud+1,SetMemoryBaud@Baud+1
 20558  01480E  C152  F133         	movff	SetBaud@Baud+2,SetMemoryBaud@Baud+2
 20559  014812  C153  F134         	movff	SetBaud@Baud+3,SetMemoryBaud@Baud+3
 20560  014816  ECBD  F0B1         	call	_SetMemoryBaud	;wreg free
 20561  01481A  0101               	movlb	1	; () banked
 20562  01481C  6F87               	movwf	SetBaud@status& (0+255),b
 20563                           
 20564                           ; BSR set to: 1
 20565                           ;UART.c: 341: if(status)
 20566  01481E  0101               	movlb	1	; () banked
 20567  014820  5187               	movf	SetBaud@status& (0+255),w,b
 20568  014822  0101               	movlb	1	; () banked
 20569  014824  B4D8               	btfsc	status,2,c
 20570  014826  D006               	goto	l555
 20571                           
 20572                           ; BSR set to: 1
 20573                           ;UART.c: 342: {
 20574                           ;UART.c: 344: status = SetMemoryParity(Parity);
 20575  014828  0101               	movlb	1	; () banked
 20576  01482A  5154               	movf	SetBaud@Parity& (0+255),w,b
 20577  01482C  EC6D  F005         	call	_SetMemoryParity
 20578  014830  0101               	movlb	1	; () banked
 20579  014832  6F87               	movwf	SetBaud@status& (0+255),b
 20580  014834                     l555:
 20581                           
 20582                           ; BSR set to: 1
 20583                           ;UART.c: 345: }
 20584                           ;UART.c: 346: InitUART(Baud, Parity);
 20585  014834  C150  F11B         	movff	SetBaud@Baud,InitUART@Baud
 20586  014838  C151  F11C         	movff	SetBaud@Baud+1,InitUART@Baud+1
 20587  01483C  C152  F11D         	movff	SetBaud@Baud+2,InitUART@Baud+2
 20588  014840  C153  F11E         	movff	SetBaud@Baud+3,InitUART@Baud+3
 20589  014844  C154  F11F         	movff	SetBaud@Parity,InitUART@parity
 20590  014848  ECE4  F0A8         	call	_InitUART	;wreg free
 20591                           
 20592                           ;UART.c: 347: UARTstring("\r\n");
 20593  01484C  0ECE               	movlw	low (STR_282+19)
 20594  01484E  0101               	movlb	1	; () banked
 20595  014850  6F19               	movwf	UARTstring@data& (0+255),b
 20596  014852  0EF6               	movlw	high (STR_282+19)
 20597  014854  0101               	movlb	1	; () banked
 20598  014856  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 20599  014858  EC03  F0B8         	call	_UARTstring	;wreg free
 20600                           
 20601                           ;UART.c: 348: delayUS(10000);
 20602  01485C  0E10               	movlw	16
 20603  01485E  0101               	movlb	1	; () banked
 20604  014860  6F0E               	movwf	delayUS@US& (0+255),b
 20605  014862  0E27               	movlw	39
 20606  014864  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 20607  014866  0E00               	movlw	0
 20608  014868  6F10               	movwf	(delayUS@US+2)& (0+255),b
 20609  01486A  0E00               	movlw	0
 20610  01486C  6F11               	movwf	(delayUS@US+3)& (0+255),b
 20611  01486E  EC58  F0BD         	call	_delayUS	;wreg free
 20612                           
 20613                           ;UART.c: 349: if(!status)
 20614  014872  0101               	movlb	1	; () banked
 20615  014874  5187               	movf	SetBaud@status& (0+255),w,b
 20616  014876  0101               	movlb	1	; () banked
 20617  014878  A4D8               	btfss	status,2,c
 20618  01487A  D014               	goto	l13761
 20619                           
 20620                           ; BSR set to: 1
 20621                           ;UART.c: 350: {
 20622                           ;UART.c: 351: UARTstring("System Program Fail\r\n");
 20623  01487C  0EFD               	movlw	low STR_29
 20624  01487E  0101               	movlb	1	; () banked
 20625  014880  6F19               	movwf	UARTstring@data& (0+255),b
 20626  014882  0EF6               	movlw	high STR_29
 20627  014884  0101               	movlb	1	; () banked
 20628  014886  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 20629  014888  EC03  F0B8         	call	_UARTstring	;wreg free
 20630                           
 20631                           ;UART.c: 352: delayUS(10000);
 20632  01488C  0E10               	movlw	16
 20633  01488E  0101               	movlb	1	; () banked
 20634  014890  6F0E               	movwf	delayUS@US& (0+255),b
 20635  014892  0E27               	movlw	39
 20636  014894  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 20637  014896  0E00               	movlw	0
 20638  014898  6F10               	movwf	(delayUS@US+2)& (0+255),b
 20639  01489A  0E00               	movlw	0
 20640  01489C  6F11               	movwf	(delayUS@US+3)& (0+255),b
 20641  01489E  EC58  F0BD         	call	_delayUS	;wreg free
 20642  0148A2  D000               	goto	l13761
 20643  0148A4                     l13761:
 20644                           
 20645                           ;UART.c: 353: }
 20646                           ;UART.c: 354: sprintf(buf,"System Baud is %lu",Baud);
 20647  0148A4  0E55               	movlw	low SetBaud@buf
 20648  0148A6  0101               	movlb	1	; () banked
 20649  0148A8  6F24               	movwf	sprintf@sp& (0+255),b
 20650  0148AA  0E01               	movlw	high SetBaud@buf
 20651  0148AC  0101               	movlb	1	; () banked
 20652  0148AE  6F25               	movwf	(sprintf@sp+1)& (0+255),b
 20653  0148B0  0E00               	movlw	low STR_30
 20654  0148B2  0101               	movlb	1	; () banked
 20655  0148B4  6F26               	movwf	sprintf@f& (0+255),b
 20656  0148B6  0EF8               	movlw	high STR_30
 20657  0148B8  0101               	movlb	1	; () banked
 20658  0148BA  6F27               	movwf	(sprintf@f+1)& (0+255),b
 20659  0148BC  C150  F128         	movff	SetBaud@Baud,?_sprintf+4
 20660  0148C0  C151  F129         	movff	SetBaud@Baud+1,?_sprintf+5
 20661  0148C4  C152  F12A         	movff	SetBaud@Baud+2,?_sprintf+6
 20662  0148C8  C153  F12B         	movff	SetBaud@Baud+3,?_sprintf+7
 20663  0148CC  EC86  F093         	call	_sprintf	;wreg free
 20664                           
 20665                           ;UART.c: 355: UARTstring(buf);
 20666  0148D0  0E55               	movlw	low SetBaud@buf
 20667  0148D2  0101               	movlb	1	; () banked
 20668  0148D4  6F19               	movwf	UARTstring@data& (0+255),b
 20669  0148D6  0E01               	movlw	high SetBaud@buf
 20670  0148D8  0101               	movlb	1	; () banked
 20671  0148DA  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 20672  0148DC  EC03  F0B8         	call	_UARTstring	;wreg free
 20673                           
 20674                           ;UART.c: 356: if(Parity)
 20675  0148E0  0101               	movlb	1	; () banked
 20676  0148E2  5154               	movf	SetBaud@Parity& (0+255),w,b
 20677  0148E4  0101               	movlb	1	; () banked
 20678  0148E6  A4D8               	btfss	status,2,c
 20679  0148E8  D026               	goto	l13779
 20680  0148EA  D032               	goto	l13781
 20681                           
 20682                           ; BSR set to: 1
 20683                           ;UART.c: 357: {
 20684                           ;UART.c: 358: switch (Parity)
 20685  0148EC  D024               	goto	l13779
 20686  0148EE                     l13769:
 20687                           
 20688                           ; BSR set to: 1
 20689                           ;UART.c: 361: UARTstringWAIT(" with Odd parity bit\r\n");
 20690  0148EE  0E76               	movlw	low (STR_23+30)
 20691  0148F0  0101               	movlb	1	; () banked
 20692  0148F2  6F19               	movwf	UARTstringWAIT@data& (0+255),b
 20693  0148F4  0EF0               	movlw	high (STR_23+30)
 20694  0148F6  0101               	movlb	1	; () banked
 20695  0148F8  6F1A               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 20696  0148FA  EC7A  F0BC         	call	_UARTstringWAIT	;wreg free
 20697                           
 20698                           ;UART.c: 362: break;
 20699  0148FE  D031               	goto	l13783
 20700  014900                     l13771:
 20701                           
 20702                           ;UART.c: 364: UARTstringWAIT(" with Even parity bit\r\n");
 20703  014900  0E0A               	movlw	low (STR_24+30)
 20704  014902  0101               	movlb	1	; () banked
 20705  014904  6F19               	movwf	UARTstringWAIT@data& (0+255),b
 20706  014906  0EF0               	movlw	high (STR_24+30)
 20707  014908  0101               	movlb	1	; () banked
 20708  01490A  6F1A               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 20709  01490C  EC7A  F0BC         	call	_UARTstringWAIT	;wreg free
 20710                           
 20711                           ;UART.c: 365: break;
 20712  014910  D028               	goto	l13783
 20713  014912                     l13773:
 20714                           
 20715                           ;UART.c: 367: UARTstringWAIT(" with Mark bit\r\n");
 20716  014912  0EA2               	movlw	low (STR_25+30)
 20717  014914  0101               	movlb	1	; () banked
 20718  014916  6F19               	movwf	UARTstringWAIT@data& (0+255),b
 20719  014918  0EF1               	movlw	high (STR_25+30)
 20720  01491A  0101               	movlb	1	; () banked
 20721  01491C  6F1A               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 20722  01491E  EC7A  F0BC         	call	_UARTstringWAIT	;wreg free
 20723                           
 20724                           ;UART.c: 368: break;
 20725  014922  D01F               	goto	l13783
 20726  014924                     l13775:
 20727                           
 20728                           ;UART.c: 370: UARTstringWAIT(" with Space bit\r\n");
 20729  014924  0E72               	movlw	low (STR_26+30)
 20730  014926  0101               	movlb	1	; () banked
 20731  014928  6F19               	movwf	UARTstringWAIT@data& (0+255),b
 20732  01492A  0EF1               	movlw	high (STR_26+30)
 20733  01492C  0101               	movlb	1	; () banked
 20734  01492E  6F1A               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 20735  014930  EC7A  F0BC         	call	_UARTstringWAIT	;wreg free
 20736                           
 20737                           ;UART.c: 372: }
 20738                           
 20739                           ;UART.c: 371: break;
 20740  014934  D016               	goto	l13783
 20741  014936                     l13779:
 20742  014936  0101               	movlb	1	; () banked
 20743  014938  5154               	movf	SetBaud@Parity& (0+255),w,b
 20744                           
 20745                           ; Switch size 1, requested type "space"
 20746                           ; Number of cases is 3, Range of values is 1 to 3
 20747                           ; switch strategies available:
 20748                           ; Name         Instructions Cycles
 20749                           ; simple_byte           10     6 (average)
 20750                           ;	Chosen strategy is simple_byte
 20751  01493A  0A01               	xorlw	1	; case 1
 20752  01493C  B4D8               	btfsc	status,2,c
 20753  01493E  D7D7               	goto	l13769
 20754  014940  0A03               	xorlw	3	; case 2
 20755  014942  B4D8               	btfsc	status,2,c
 20756  014944  D7DD               	goto	l13771
 20757  014946  0A01               	xorlw	1	; case 3
 20758  014948  B4D8               	btfsc	status,2,c
 20759  01494A  D7E3               	goto	l13773
 20760  01494C  D7EB               	goto	l13775
 20761                           
 20762                           ; BSR set to: 1
 20763                           ;UART.c: 373: }
 20764  01494E  D009               	goto	l13783
 20765  014950                     l13781:
 20766                           
 20767                           ; BSR set to: 1
 20768                           ;UART.c: 374: else
 20769                           ;UART.c: 375: {
 20770                           ;UART.c: 376: UARTstring(" with no parity bit\r\n");
 20771  014950  0EAB               	movlw	low (STR_27+30)
 20772  014952  0101               	movlb	1	; () banked
 20773  014954  6F19               	movwf	UARTstring@data& (0+255),b
 20774  014956  0EF0               	movlw	high (STR_27+30)
 20775  014958  0101               	movlb	1	; () banked
 20776  01495A  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 20777  01495C  EC03  F0B8         	call	_UARTstring	;wreg free
 20778  014960  D000               	goto	l13783
 20779  014962                     l13783:
 20780                           
 20781                           ;UART.c: 377: }
 20782                           ;UART.c: 379: delayUS(10000);
 20783  014962  0E10               	movlw	16
 20784  014964  0101               	movlb	1	; () banked
 20785  014966  6F0E               	movwf	delayUS@US& (0+255),b
 20786  014968  0E27               	movlw	39
 20787  01496A  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 20788  01496C  0E00               	movlw	0
 20789  01496E  6F10               	movwf	(delayUS@US+2)& (0+255),b
 20790  014970  0E00               	movlw	0
 20791  014972  6F11               	movwf	(delayUS@US+3)& (0+255),b
 20792  014974  EC58  F0BD         	call	_delayUS	;wreg free
 20793  014978  0012               	return		;funcret
 20794  01497A                     __end_of_SetBaud:
 20795                           	opt stack 0
 20796                           tblptru	equ	0xFF8
 20797                           tblptrh	equ	0xFF7
 20798                           tblptrl	equ	0xFF6
 20799                           tablat	equ	0xFF5
 20800                           prodh	equ	0xFF4
 20801                           prodl	equ	0xFF3
 20802                           intcon	equ	0xFF2
 20803                           intcon2	equ	0xFF1
 20804                           postinc0	equ	0xFEE
 20805                           plusw0	equ	0xFEB
 20806                           wreg	equ	0xFE8
 20807                           indf1	equ	0xFE7
 20808                           postdec1	equ	0xFE5
 20809                           fsr1h	equ	0xFE2
 20810                           fsr1l	equ	0xFE1
 20811                           indf2	equ	0xFDF
 20812                           postinc2	equ	0xFDE
 20813                           postdec2	equ	0xFDD
 20814                           plusw2	equ	0xFDB
 20815                           fsr2h	equ	0xFDA
 20816                           fsr2l	equ	0xFD9
 20817                           status	equ	0xFD8
 20818                           
 20819 ;; *************** function _sprintf *****************
 20820 ;; Defined at:
 20821 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 20822 ;; Parameters:    Size  Location     Type
 20823 ;;  sp              2   36[BANK1 ] PTR unsigned char 
 20824 ;;		 -> Command@buf(200), SetBaud@buf(50), 
 20825 ;;  f               2   38[BANK1 ] PTR const unsigned char 
 20826 ;;		 -> STR_323(32), STR_322(35), STR_321(35), STR_300(10), 
 20827 ;;		 -> STR_287(23), STR_286(23), STR_227(23), STR_226(23), 
 20828 ;;		 -> STR_222(16), STR_221(36), STR_209(13), STR_208(20), 
 20829 ;;		 -> STR_207(17), STR_206(29), STR_190(15), STR_189(32), 
 20830 ;;		 -> STR_171(15), STR_170(22), STR_30(19), STR_27(52), 
 20831 ;;		 -> STR_26(48), STR_25(47), STR_24(54), STR_23(53), 
 20832 ;; Auto vars:     Size  Location     Type
 20833 ;;  idx             1   56[BANK1 ] unsigned char 
 20834 ;;  val             4   69[BANK1 ] unsigned long 
 20835 ;;  tmpval          4    0        struct .
 20836 ;;  flag            2   78[BANK1 ] unsigned short 
 20837 ;;  width           2   75[BANK1 ] int 
 20838 ;;  prec            2   73[BANK1 ] int 
 20839 ;;  ap              2   67[BANK1 ] PTR void [1]
 20840 ;;		 -> ?_sprintf(2), 
 20841 ;;  len             2   65[BANK1 ] unsigned int 
 20842 ;;  cp              2   57[BANK1 ] PTR const unsigned char 
 20843 ;;		 -> sprintf@c(1), 
 20844 ;;  c               1   77[BANK1 ] char 
 20845 ;; Return value:  Size  Location     Type
 20846 ;;                  2   36[BANK1 ] int 
 20847 ;; Registers used:
 20848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20849 ;; Tracked objects:
 20850 ;;		On entry : 0/0
 20851 ;;		On exit  : 0/0
 20852 ;;		Unchanged: 0/0
 20853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20854 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 20855 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
 20856 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 20857 ;;      Totals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0
 20858 ;;Total ram usage:       44 bytes
 20859 ;; Hardware stack levels used:    1
 20860 ;; Hardware stack levels required when called:    8
 20861 ;; This function calls:
 20862 ;;		___lldiv
 20863 ;;		___llmod
 20864 ;;		___wmul
 20865 ;;		_isdigit
 20866 ;; This function is called by:
 20867 ;;		_SetBaud
 20868 ;;		_Command
 20869 ;;		_SprintDate
 20870 ;; This function uses a non-reentrant model
 20871 ;;
 20872                           
 20873                           	psect	text45
 20874  01270C                     __ptext45:
 20875                           	opt stack 0
 20876  01270C                     _sprintf:
 20877                           	opt stack 21
 20878                           
 20879                           ;doprnt.c: 494: va_list ap;
 20880                           ;doprnt.c: 499: signed char c;
 20881                           ;doprnt.c: 501: int width;
 20882                           ;doprnt.c: 504: int prec;
 20883                           ;doprnt.c: 508: unsigned short flag;
 20884                           ;doprnt.c: 523: union {
 20885                           ;doprnt.c: 524: unsigned long vd;
 20886                           ;doprnt.c: 525: double integ;
 20887                           ;doprnt.c: 526: } tmpval;
 20888                           ;doprnt.c: 528: unsigned long val;
 20889                           ;doprnt.c: 529: unsigned len;
 20890                           ;doprnt.c: 530: const char * cp;
 20891                           ;doprnt.c: 533: *ap = __va_start();
 20892                           
 20893                           ;incstack = 0
 20894  01270C  0E28               	movlw	low (?_sprintf+4)
 20895  01270E  0101               	movlb	1	; () banked
 20896  012710  6F43               	movwf	sprintf@ap& (0+255),b
 20897  012712  0E01               	movlw	high (?_sprintf+4)
 20898  012714  0101               	movlb	1	; () banked
 20899  012716  6F44               	movwf	(sprintf@ap+1)& (0+255),b
 20900                           
 20901                           ;doprnt.c: 536: while(c = *f++) {
 20902  012718  EFBA  F099         	goto	l12837
 20903  01271C                     l12485:
 20904                           
 20905                           ; BSR set to: 1
 20906                           ;doprnt.c: 538: if(c != '%')
 20907  01271C  0E25               	movlw	37
 20908  01271E  0101               	movlb	1	; () banked
 20909  012720  194D               	xorwf	sprintf@c& (0+255),w,b
 20910  012722  B4D8               	btfsc	status,2,c
 20911  012724  D00B               	goto	l12491
 20912                           
 20913                           ; BSR set to: 1
 20914                           ;doprnt.c: 540: {
 20915                           ;doprnt.c: 541: ((*sp++ = (c)));
 20916  012726  C124  FFD9         	movff	sprintf@sp,fsr2l
 20917  01272A  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 20918  01272E  C14D  FFDF         	movff	sprintf@c,indf2
 20919                           
 20920                           ; BSR set to: 1
 20921  012732  0101               	movlb	1	; () banked
 20922  012734  4B24               	infsnz	sprintf@sp& (0+255),f,b
 20923  012736  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 20924                           
 20925                           ;doprnt.c: 542: continue;
 20926  012738  EFBA  F099         	goto	l12837
 20927  01273C                     l12491:
 20928                           
 20929                           ; BSR set to: 1
 20930                           ;doprnt.c: 543: }
 20931                           ;doprnt.c: 546: width = 0;
 20932  01273C  0E00               	movlw	0
 20933  01273E  0101               	movlb	1	; () banked
 20934  012740  6F4C               	movwf	(sprintf@width+1)& (0+255),b
 20935  012742  0E00               	movlw	0
 20936  012744  6F4B               	movwf	sprintf@width& (0+255),b
 20937                           
 20938                           ;doprnt.c: 548: flag = 0;
 20939  012746  0E00               	movlw	0
 20940  012748  0101               	movlb	1	; () banked
 20941  01274A  6F4F               	movwf	(sprintf@flag+1)& (0+255),b
 20942  01274C  0E00               	movlw	0
 20943  01274E  6F4E               	movwf	sprintf@flag& (0+255),b
 20944                           
 20945                           ; BSR set to: 1
 20946                           ;doprnt.c: 551: switch(*f) {
 20947                           
 20948                           ;doprnt.c: 550: for(;;) {
 20949  012750  D010               	goto	l12503
 20950  012752                     l12493:
 20951                           
 20952                           ;doprnt.c: 554: flag |= 0x08;
 20953  012752  0101               	movlb	1	; () banked
 20954  012754  874E               	bsf	sprintf@flag& (0+255),3,b
 20955  012756  D008               	goto	L16
 20956  012758                     l12495:
 20957                           
 20958                           ;doprnt.c: 561: flag |= 0x01;
 20959  012758  0101               	movlb	1	; () banked
 20960  01275A  814E               	bsf	sprintf@flag& (0+255),0,b
 20961  01275C  D005               	goto	L16
 20962  01275E                     l12497:
 20963                           
 20964                           ;doprnt.c: 574: flag |= 0x800;
 20965  01275E  0101               	movlb	1	; () banked
 20966  012760  874F               	bsf	(sprintf@flag+1)& (0+255),3,b
 20967  012762  D002               	goto	L16
 20968  012764                     l12499:
 20969                           
 20970                           ;doprnt.c: 580: flag |= 0x04;
 20971  012764  0101               	movlb	1	; () banked
 20972  012766  854E               	bsf	sprintf@flag& (0+255),2,b
 20973  012768                     L16:
 20974                           
 20975                           ;doprnt.c: 581: f++;
 20976  012768  0101               	movlb	1	; () banked
 20977  01276A  4B26               	infsnz	sprintf@f& (0+255),f,b
 20978  01276C  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 20979                           
 20980                           ;doprnt.c: 582: continue;
 20981  01276E  D001               	goto	l12503
 20982                           
 20983                           ; BSR set to: 1
 20984                           ;doprnt.c: 584: }
 20985  012770  D016               	goto	l1839
 20986  012772                     l12503:
 20987  012772  C126  FFF6         	movff	sprintf@f,tblptrl
 20988  012776  C127  FFF7         	movff	sprintf@f+1,tblptrh
 20989  01277A                     	if	0	;tblptru may be non-zero
 20990  01277A                     	endif
 20991  01277A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20992  01277A  0E00               	movlw	low (__mediumconst shr (0+16))
 20993  01277C  6EF8               	movwf	tblptru,c
 20994  01277E                     	endif
 20995  01277E  0008               	tblrd		*
 20996  012780  50F5               	movf	tablat,w,c
 20997                           
 20998                           ; Switch size 1, requested type "space"
 20999                           ; Number of cases is 4, Range of values is 32 to 48
 21000                           ; switch strategies available:
 21001                           ; Name         Instructions Cycles
 21002                           ; simple_byte           13     7 (average)
 21003                           ;	Chosen strategy is simple_byte
 21004  012782  0A20               	xorlw	32	; case 32
 21005  012784  B4D8               	btfsc	status,2,c
 21006  012786  D7E8               	goto	l12495
 21007  012788  0A03               	xorlw	3	; case 35
 21008  01278A  B4D8               	btfsc	status,2,c
 21009  01278C  D7E8               	goto	l12497
 21010  01278E  0A0E               	xorlw	14	; case 45
 21011  012790  B4D8               	btfsc	status,2,c
 21012  012792  D7DF               	goto	l12493
 21013  012794  0A1D               	xorlw	29	; case 48
 21014  012796  B4D8               	btfsc	status,2,c
 21015  012798  D7E5               	goto	l12499
 21016                           
 21017                           ;doprnt.c: 585: break;
 21018  01279A  D001               	goto	l1839
 21019                           
 21020                           ;doprnt.c: 586: }
 21021  01279C  D7EA               	goto	l12503
 21022  01279E                     l1839:
 21023                           
 21024                           ;doprnt.c: 593: if(flag & 0x08)
 21025  01279E  0101               	movlb	1	; () banked
 21026  0127A0  A74E               	btfss	sprintf@flag& (0+255),3,b
 21027  0127A2  D003               	goto	l12507
 21028                           
 21029                           ; BSR set to: 1
 21030                           ;doprnt.c: 594: flag &= ~0x04;
 21031  0127A4  0101               	movlb	1	; () banked
 21032  0127A6  954E               	bcf	sprintf@flag& (0+255),2,b
 21033  0127A8  D000               	goto	l12507
 21034  0127AA                     l12507:
 21035                           
 21036                           ; BSR set to: 1
 21037                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 21038  0127AA  C126  FFF6         	movff	sprintf@f,tblptrl
 21039  0127AE  C127  FFF7         	movff	sprintf@f+1,tblptrh
 21040  0127B2                     	if	0	;tblptru may be non-zero
 21041  0127B2                     	endif
 21042  0127B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21043  0127B2  0E00               	movlw	low (__mediumconst shr (0+16))
 21044  0127B4  6EF8               	movwf	tblptru,c
 21045  0127B6                     	endif
 21046  0127B6  0008               	tblrd		*
 21047  0127B8  50F5               	movf	tablat,w,c
 21048  0127BA  EC1C  F006         	call	_isdigit
 21049  0127BE  A0D8               	btfss	status,0,c
 21050  0127C0  D047               	goto	l12519
 21051                           
 21052                           ;doprnt.c: 598: width = 0;
 21053  0127C2  0E00               	movlw	0
 21054  0127C4  0101               	movlb	1	; () banked
 21055  0127C6  6F4C               	movwf	(sprintf@width+1)& (0+255),b
 21056  0127C8  0E00               	movlw	0
 21057  0127CA  6F4B               	movwf	sprintf@width& (0+255),b
 21058  0127CC  D000               	goto	l12511
 21059  0127CE                     l12511:
 21060                           
 21061                           ;doprnt.c: 600: width *= 10;
 21062  0127CE  C14B  F10E         	movff	sprintf@width,___wmul@multiplier
 21063  0127D2  C14C  F10F         	movff	sprintf@width+1,___wmul@multiplier+1
 21064  0127D6  0E00               	movlw	0
 21065  0127D8  0101               	movlb	1	; () banked
 21066  0127DA  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21067  0127DC  0E0A               	movlw	10
 21068  0127DE  6F10               	movwf	___wmul@multiplicand& (0+255),b
 21069  0127E0  EC35  F005         	call	___wmul	;wreg free
 21070  0127E4  C10E  F14B         	movff	?___wmul,sprintf@width
 21071  0127E8  C10F  F14C         	movff	?___wmul+1,sprintf@width+1
 21072                           
 21073                           ;doprnt.c: 601: width += *f++ - '0';
 21074  0127EC  0ED0               	movlw	208
 21075  0127EE  0101               	movlb	1	; () banked
 21076  0127F0  6F34               	movwf	??_sprintf& (0+255),b
 21077  0127F2  0EFF               	movlw	255
 21078  0127F4  0101               	movlb	1	; () banked
 21079  0127F6  6F35               	movwf	(??_sprintf+1)& (0+255),b
 21080  0127F8  C126  FFF6         	movff	sprintf@f,tblptrl
 21081  0127FC  C127  FFF7         	movff	sprintf@f+1,tblptrh
 21082  012800                     	if	0	;tblptru may be non-zero
 21083  012800                     	endif
 21084  012800                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21085  012800  0E00               	movlw	low (__mediumconst shr (0+16))
 21086  012802  6EF8               	movwf	tblptru,c
 21087  012804                     	endif
 21088  012804  0008               	tblrd		*
 21089  012806  50F5               	movf	tablat,w,c
 21090  012808  0101               	movlb	1	; () banked
 21091  01280A  6F36               	movwf	(??_sprintf+2)& (0+255),b
 21092  01280C  6B37               	clrf	(??_sprintf+3)& (0+255),b
 21093  01280E  0101               	movlb	1	; () banked
 21094  012810  5134               	movf	??_sprintf& (0+255),w,b
 21095  012812  0101               	movlb	1	; () banked
 21096  012814  2736               	addwf	(??_sprintf+2)& (0+255),f,b
 21097  012816  0101               	movlb	1	; () banked
 21098  012818  5135               	movf	(??_sprintf+1)& (0+255),w,b
 21099  01281A  0101               	movlb	1	; () banked
 21100  01281C  2337               	addwfc	(??_sprintf+3)& (0+255),f,b
 21101  01281E  0101               	movlb	1	; () banked
 21102  012820  5136               	movf	(??_sprintf+2)& (0+255),w,b
 21103  012822  0101               	movlb	1	; () banked
 21104  012824  274B               	addwf	sprintf@width& (0+255),f,b
 21105  012826  0101               	movlb	1	; () banked
 21106  012828  5137               	movf	(??_sprintf+3)& (0+255),w,b
 21107  01282A  0101               	movlb	1	; () banked
 21108  01282C  234C               	addwfc	(sprintf@width+1)& (0+255),f,b
 21109                           
 21110                           ; BSR set to: 1
 21111  01282E  0101               	movlb	1	; () banked
 21112  012830  4B26               	infsnz	sprintf@f& (0+255),f,b
 21113  012832  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 21114                           
 21115                           ; BSR set to: 1
 21116                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 21117  012834  C126  FFF6         	movff	sprintf@f,tblptrl
 21118  012838  C127  FFF7         	movff	sprintf@f+1,tblptrh
 21119  01283C                     	if	0	;tblptru may be non-zero
 21120  01283C                     	endif
 21121  01283C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21122  01283C  0E00               	movlw	low (__mediumconst shr (0+16))
 21123  01283E  6EF8               	movwf	tblptru,c
 21124  012840                     	endif
 21125  012840  0008               	tblrd		*
 21126  012842  50F5               	movf	tablat,w,c
 21127  012844  EC1C  F006         	call	_isdigit
 21128  012848  A0D8               	btfss	status,0,c
 21129  01284A  D01E               	goto	l12527
 21130  01284C  D7C0               	goto	l12511
 21131                           
 21132                           ;doprnt.c: 604: } else if(*f == '*') {
 21133  01284E  D01C               	goto	l12527
 21134  012850                     l12519:
 21135  012850  C126  FFF6         	movff	sprintf@f,tblptrl
 21136  012854  C127  FFF7         	movff	sprintf@f+1,tblptrh
 21137  012858                     	if	0	;tblptru may be non-zero
 21138  012858                     	endif
 21139  012858                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21140  012858  0E00               	movlw	low (__mediumconst shr (0+16))
 21141  01285A  6EF8               	movwf	tblptru,c
 21142  01285C                     	endif
 21143  01285C  0008               	tblrd		*
 21144  01285E  50F5               	movf	tablat,w,c
 21145  012860  0A2A               	xorlw	42
 21146  012862  A4D8               	btfss	status,2,c
 21147  012864  D011               	goto	l12527
 21148                           
 21149                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 21150  012866  C143  FFD9         	movff	sprintf@ap,fsr2l
 21151  01286A  C144  FFDA         	movff	sprintf@ap+1,fsr2h
 21152  01286E  CFDE F14B          	movff	postinc2,sprintf@width
 21153  012872  CFDD F14C          	movff	postdec2,sprintf@width+1
 21154  012876  0E02               	movlw	2
 21155  012878  0101               	movlb	1	; () banked
 21156  01287A  2743               	addwf	sprintf@ap& (0+255),f,b
 21157  01287C  0E00               	movlw	0
 21158  01287E  2344               	addwfc	(sprintf@ap+1)& (0+255),f,b
 21159                           
 21160                           ; BSR set to: 1
 21161                           ;doprnt.c: 606: f++;
 21162  012880  0101               	movlb	1	; () banked
 21163  012882  4B26               	infsnz	sprintf@f& (0+255),f,b
 21164  012884  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 21165                           
 21166                           ; BSR set to: 1
 21167  012886  D000               	goto	l12527
 21168  012888                     l12527:
 21169                           
 21170                           ;doprnt.c: 608: }
 21171                           ;doprnt.c: 611: if(*f == '.') {
 21172  012888  C126  FFF6         	movff	sprintf@f,tblptrl
 21173  01288C  C127  FFF7         	movff	sprintf@f+1,tblptrh
 21174  012890                     	if	0	;tblptru may be non-zero
 21175  012890                     	endif
 21176  012890                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21177  012890  0E00               	movlw	low (__mediumconst shr (0+16))
 21178  012892  6EF8               	movwf	tblptru,c
 21179  012894                     	endif
 21180  012894  0008               	tblrd		*
 21181  012896  50F5               	movf	tablat,w,c
 21182  012898  0A2E               	xorlw	46
 21183  01289A  A4D8               	btfss	status,2,c
 21184  01289C  D05B               	goto	l12547
 21185                           
 21186                           ;doprnt.c: 612: flag |= 0x4000;
 21187  01289E  0101               	movlb	1	; () banked
 21188  0128A0  8D4F               	bsf	(sprintf@flag+1)& (0+255),6,b
 21189                           
 21190                           ;doprnt.c: 613: f++;
 21191  0128A2  0101               	movlb	1	; () banked
 21192  0128A4  4B26               	infsnz	sprintf@f& (0+255),f,b
 21193  0128A6  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 21194                           
 21195                           ; BSR set to: 1
 21196                           ;doprnt.c: 615: if(*f == '*') {
 21197  0128A8  C126  FFF6         	movff	sprintf@f,tblptrl
 21198  0128AC  C127  FFF7         	movff	sprintf@f+1,tblptrh
 21199  0128B0                     	if	0	;tblptru may be non-zero
 21200  0128B0                     	endif
 21201  0128B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21202  0128B0  0E00               	movlw	low (__mediumconst shr (0+16))
 21203  0128B2  6EF8               	movwf	tblptru,c
 21204  0128B4                     	endif
 21205  0128B4  0008               	tblrd		*
 21206  0128B6  50F5               	movf	tablat,w,c
 21207  0128B8  0A2A               	xorlw	42
 21208  0128BA  A4D8               	btfss	status,2,c
 21209  0128BC  D011               	goto	l12539
 21210                           
 21211                           ; BSR set to: 1
 21212                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 21213  0128BE  C143  FFD9         	movff	sprintf@ap,fsr2l
 21214  0128C2  C144  FFDA         	movff	sprintf@ap+1,fsr2h
 21215  0128C6  CFDE F149          	movff	postinc2,sprintf@prec
 21216  0128CA  CFDD F14A          	movff	postdec2,sprintf@prec+1
 21217                           
 21218                           ; BSR set to: 1
 21219  0128CE  0E02               	movlw	2
 21220  0128D0  0101               	movlb	1	; () banked
 21221  0128D2  2743               	addwf	sprintf@ap& (0+255),f,b
 21222  0128D4  0E00               	movlw	0
 21223  0128D6  2344               	addwfc	(sprintf@ap+1)& (0+255),f,b
 21224                           
 21225                           ; BSR set to: 1
 21226                           ;doprnt.c: 617: f++;
 21227  0128D8  0101               	movlb	1	; () banked
 21228  0128DA  4B26               	infsnz	sprintf@f& (0+255),f,b
 21229  0128DC  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 21230                           
 21231                           ;doprnt.c: 618: } else
 21232  0128DE  D0EF               	goto	l12605
 21233  0128E0                     l12539:
 21234                           
 21235                           ; BSR set to: 1
 21236                           ;doprnt.c: 620: {
 21237                           ;doprnt.c: 621: prec = 0;
 21238  0128E0  0E00               	movlw	0
 21239  0128E2  0101               	movlb	1	; () banked
 21240  0128E4  6F4A               	movwf	(sprintf@prec+1)& (0+255),b
 21241  0128E6  0E00               	movlw	0
 21242  0128E8  6F49               	movwf	sprintf@prec& (0+255),b
 21243                           
 21244                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 21245  0128EA  D026               	goto	l12545
 21246  0128EC                     l12541:
 21247                           
 21248                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 21249  0128EC  C149  F10E         	movff	sprintf@prec,___wmul@multiplier
 21250  0128F0  C14A  F10F         	movff	sprintf@prec+1,___wmul@multiplier+1
 21251  0128F4  0E00               	movlw	0
 21252  0128F6  0101               	movlb	1	; () banked
 21253  0128F8  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21254  0128FA  0E0A               	movlw	10
 21255  0128FC  6F10               	movwf	___wmul@multiplicand& (0+255),b
 21256  0128FE  EC35  F005         	call	___wmul	;wreg free
 21257  012902  C126  FFF6         	movff	sprintf@f,tblptrl
 21258  012906  C127  FFF7         	movff	sprintf@f+1,tblptrh
 21259  01290A                     	if	0	;tblptru may be non-zero
 21260  01290A                     	endif
 21261  01290A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21262  01290A  0E00               	movlw	low (__mediumconst shr (0+16))
 21263  01290C  6EF8               	movwf	tblptru,c
 21264  01290E                     	endif
 21265  01290E  0008               	tblrd		*
 21266  012910  50F5               	movf	tablat,w,c
 21267  012912  0101               	movlb	1	; () banked
 21268  012914  270E               	addwf	?___wmul& (0+255),f,b
 21269  012916  0E00               	movlw	0
 21270  012918  0101               	movlb	1	; () banked
 21271  01291A  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 21272  01291C  0ED0               	movlw	208
 21273  01291E  0101               	movlb	1	; () banked
 21274  012920  250E               	addwf	?___wmul& (0+255),w,b
 21275  012922  0101               	movlb	1	; () banked
 21276  012924  6F49               	movwf	sprintf@prec& (0+255),b
 21277  012926  0EFF               	movlw	255
 21278  012928  0101               	movlb	1	; () banked
 21279  01292A  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 21280  01292C  0101               	movlb	1	; () banked
 21281  01292E  6F4A               	movwf	(sprintf@prec+1)& (0+255),b
 21282                           
 21283                           ; BSR set to: 1
 21284  012930  0101               	movlb	1	; () banked
 21285  012932  4B26               	infsnz	sprintf@f& (0+255),f,b
 21286  012934  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 21287  012936  D000               	goto	l12545
 21288  012938                     l12545:
 21289                           
 21290                           ; BSR set to: 1
 21291  012938  C126  FFF6         	movff	sprintf@f,tblptrl
 21292  01293C  C127  FFF7         	movff	sprintf@f+1,tblptrh
 21293  012940                     	if	0	;tblptru may be non-zero
 21294  012940                     	endif
 21295  012940                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21296  012940  0E00               	movlw	low (__mediumconst shr (0+16))
 21297  012942  6EF8               	movwf	tblptru,c
 21298  012944                     	endif
 21299  012944  0008               	tblrd		*
 21300  012946  50F5               	movf	tablat,w,c
 21301  012948  EC1C  F006         	call	_isdigit
 21302  01294C  A0D8               	btfss	status,0,c
 21303  01294E  D0B7               	goto	l12605
 21304  012950  D7CD               	goto	l12541
 21305                           
 21306                           ;doprnt.c: 624: }
 21307                           ;doprnt.c: 625: } else {
 21308  012952  D0B5               	goto	l12605
 21309  012954                     l12547:
 21310                           
 21311                           ;doprnt.c: 626: prec = 0;
 21312  012954  0E00               	movlw	0
 21313  012956  0101               	movlb	1	; () banked
 21314  012958  6F4A               	movwf	(sprintf@prec+1)& (0+255),b
 21315  01295A  0E00               	movlw	0
 21316  01295C  6F49               	movwf	sprintf@prec& (0+255),b
 21317                           
 21318                           ; BSR set to: 1
 21319                           ;doprnt.c: 635: switch(c = *f++) {
 21320                           
 21321                           ;doprnt.c: 630: }
 21322                           ;doprnt.c: 633: loop:
 21323                           
 21324                           ; BSR set to: 1
 21325  01295E  D0AF               	goto	l12605
 21326                           
 21327                           ; BSR set to: 1
 21328                           ;doprnt.c: 638: goto alldone;
 21329                           
 21330                           ;doprnt.c: 637: case 0:
 21331  012960  EFCD  F099         	goto	l12839
 21332  012964                     l12549:
 21333                           
 21334                           ; BSR set to: 1
 21335                           ;doprnt.c: 643: flag |= 0x10;
 21336  012964  0101               	movlb	1	; () banked
 21337  012966  894E               	bsf	sprintf@flag& (0+255),4,b
 21338                           
 21339                           ;doprnt.c: 644: goto loop;
 21340  012968  D0AA               	goto	l12605
 21341  01296A                     l12551:
 21342                           
 21343                           ; BSR set to: 1
 21344                           ;doprnt.c: 691: flag |= 0x40;
 21345  01296A  0101               	movlb	1	; () banked
 21346  01296C  8D4E               	bsf	sprintf@flag& (0+255),6,b
 21347                           
 21348                           ; BSR set to: 1
 21349                           ;doprnt.c: 698: case 'i':
 21350                           ;doprnt.c: 699: break;
 21351                           
 21352                           ; BSR set to: 1
 21353                           
 21354                           ;doprnt.c: 697: case 'd':
 21355                           
 21356                           ;doprnt.c: 693: break;
 21357  01296E  D0D2               	goto	l12607
 21358  012970                     l12553:
 21359                           
 21360                           ; BSR set to: 1
 21361                           ;doprnt.c: 714: flag |= 0x20;
 21362  012970  0101               	movlb	1	; () banked
 21363  012972  8B4E               	bsf	sprintf@flag& (0+255),5,b
 21364  012974                     l1863:
 21365                           
 21366                           ; BSR set to: 1
 21367                           ;doprnt.c: 721: flag |= 0x80;
 21368  012974  0101               	movlb	1	; () banked
 21369  012976  8F4E               	bsf	sprintf@flag& (0+255),7,b
 21370                           
 21371                           ;doprnt.c: 723: break;
 21372  012978  D0CD               	goto	l12607
 21373  01297A                     l12555:
 21374                           
 21375                           ; BSR set to: 1
 21376                           ;doprnt.c: 753: if(prec && prec < len)
 21377  01297A  0101               	movlb	1	; () banked
 21378  01297C  5149               	movf	sprintf@prec& (0+255),w,b
 21379  01297E  0101               	movlb	1	; () banked
 21380  012980  114A               	iorwf	(sprintf@prec+1)& (0+255),w,b
 21381  012982  B4D8               	btfsc	status,2,c
 21382  012984  D00F               	goto	l12561
 21383                           
 21384                           ; BSR set to: 1
 21385  012986  0101               	movlb	1	; () banked
 21386  012988  5141               	movf	sprintf@len& (0+255),w,b
 21387  01298A  0101               	movlb	1	; () banked
 21388  01298C  5D49               	subwf	sprintf@prec& (0+255),w,b
 21389  01298E  0101               	movlb	1	; () banked
 21390  012990  5142               	movf	(sprintf@len+1)& (0+255),w,b
 21391  012992  0101               	movlb	1	; () banked
 21392  012994  594A               	subwfb	(sprintf@prec+1)& (0+255),w,b
 21393  012996  B0D8               	btfsc	status,0,c
 21394  012998  D005               	goto	l12561
 21395                           
 21396                           ; BSR set to: 1
 21397                           ;doprnt.c: 754: len = prec;
 21398  01299A  C149  F141         	movff	sprintf@prec,sprintf@len
 21399  01299E  C14A  F142         	movff	sprintf@prec+1,sprintf@len+1
 21400  0129A2  D000               	goto	l12561
 21401  0129A4                     l12561:
 21402                           
 21403                           ; BSR set to: 1
 21404                           ;doprnt.c: 757: if(width > len)
 21405  0129A4  0101               	movlb	1	; () banked
 21406  0129A6  514B               	movf	sprintf@width& (0+255),w,b
 21407  0129A8  0101               	movlb	1	; () banked
 21408  0129AA  5D41               	subwf	sprintf@len& (0+255),w,b
 21409  0129AC  0101               	movlb	1	; () banked
 21410  0129AE  514C               	movf	(sprintf@width+1)& (0+255),w,b
 21411  0129B0  0101               	movlb	1	; () banked
 21412  0129B2  5942               	subwfb	(sprintf@len+1)& (0+255),w,b
 21413  0129B4  B0D8               	btfsc	status,0,c
 21414  0129B6  D009               	goto	l12565
 21415                           
 21416                           ; BSR set to: 1
 21417                           ;doprnt.c: 758: width -= len;
 21418  0129B8  0101               	movlb	1	; () banked
 21419  0129BA  5141               	movf	sprintf@len& (0+255),w,b
 21420  0129BC  0101               	movlb	1	; () banked
 21421  0129BE  5F4B               	subwf	sprintf@width& (0+255),f,b
 21422  0129C0  0101               	movlb	1	; () banked
 21423  0129C2  5142               	movf	(sprintf@len+1)& (0+255),w,b
 21424  0129C4  0101               	movlb	1	; () banked
 21425  0129C6  5B4C               	subwfb	(sprintf@width+1)& (0+255),f,b
 21426  0129C8  D006               	goto	l12567
 21427  0129CA                     l12565:
 21428                           
 21429                           ; BSR set to: 1
 21430                           ;doprnt.c: 759: else
 21431                           ;doprnt.c: 760: width = 0;
 21432  0129CA  0E00               	movlw	0
 21433  0129CC  0101               	movlb	1	; () banked
 21434  0129CE  6F4C               	movwf	(sprintf@width+1)& (0+255),b
 21435  0129D0  0E00               	movlw	0
 21436  0129D2  6F4B               	movwf	sprintf@width& (0+255),b
 21437  0129D4  D000               	goto	l12567
 21438  0129D6                     l12567:
 21439                           
 21440                           ; BSR set to: 1
 21441                           ;doprnt.c: 762: if(!(flag & 0x08))
 21442  0129D6  0101               	movlb	1	; () banked
 21443  0129D8  A74E               	btfss	sprintf@flag& (0+255),3,b
 21444  0129DA  D00C               	goto	l12575
 21445  0129DC  D029               	goto	l12583
 21446                           
 21447                           ; BSR set to: 1
 21448                           ;doprnt.c: 764: while(width--)
 21449  0129DE  D00A               	goto	l12575
 21450  0129E0                     l12571:
 21451                           
 21452                           ; BSR set to: 1
 21453                           ;doprnt.c: 765: ((*sp++ = (' ')));
 21454  0129E0  C124  FFD9         	movff	sprintf@sp,fsr2l
 21455  0129E4  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21456  0129E8  0E20               	movlw	32
 21457  0129EA  6EDF               	movwf	indf2,c
 21458                           
 21459                           ; BSR set to: 1
 21460  0129EC  0101               	movlb	1	; () banked
 21461  0129EE  4B24               	infsnz	sprintf@sp& (0+255),f,b
 21462  0129F0  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 21463  0129F2  D000               	goto	l12575
 21464  0129F4                     l12575:
 21465                           
 21466                           ; BSR set to: 1
 21467  0129F4  0101               	movlb	1	; () banked
 21468  0129F6  074B               	decf	sprintf@width& (0+255),f,b
 21469  0129F8  A0D8               	btfss	status,0,c
 21470  0129FA  074C               	decf	(sprintf@width+1)& (0+255),f,b
 21471  0129FC  0101               	movlb	1	; () banked
 21472  0129FE  294B               	incf	sprintf@width& (0+255),w,b
 21473  012A00  E1EF               	bnz	l12571
 21474  012A02  0101               	movlb	1	; () banked
 21475  012A04  294C               	incf	(sprintf@width+1)& (0+255),w,b
 21476  012A06  B4D8               	btfsc	status,2,c
 21477  012A08  D013               	goto	l12583
 21478  012A0A  D7EA               	goto	l12571
 21479                           
 21480                           ; BSR set to: 1
 21481                           ;doprnt.c: 767: while(len--)
 21482                           
 21483                           ; BSR set to: 1
 21484  012A0C  D011               	goto	l12583
 21485  012A0E                     l12577:
 21486                           
 21487                           ; BSR set to: 1
 21488                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 21489  012A0E  C139  FFD9         	movff	sprintf@cp,fsr2l
 21490  012A12  C13A  FFDA         	movff	sprintf@cp+1,fsr2h
 21491  012A16  C124  FFE1         	movff	sprintf@sp,fsr1l
 21492  012A1A  C125  FFE2         	movff	sprintf@sp+1,fsr1h
 21493  012A1E  CFDF FFE7          	movff	indf2,indf1
 21494                           
 21495                           ; BSR set to: 1
 21496  012A22  0101               	movlb	1	; () banked
 21497  012A24  4B39               	infsnz	sprintf@cp& (0+255),f,b
 21498  012A26  2B3A               	incf	(sprintf@cp+1)& (0+255),f,b
 21499                           
 21500                           ; BSR set to: 1
 21501  012A28  0101               	movlb	1	; () banked
 21502  012A2A  4B24               	infsnz	sprintf@sp& (0+255),f,b
 21503  012A2C  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 21504  012A2E  D000               	goto	l12583
 21505  012A30                     l12583:
 21506                           
 21507                           ; BSR set to: 1
 21508  012A30  0101               	movlb	1	; () banked
 21509  012A32  0741               	decf	sprintf@len& (0+255),f,b
 21510  012A34  A0D8               	btfss	status,0,c
 21511  012A36  0742               	decf	(sprintf@len+1)& (0+255),f,b
 21512  012A38  0101               	movlb	1	; () banked
 21513  012A3A  2941               	incf	sprintf@len& (0+255),w,b
 21514  012A3C  E1E8               	bnz	l12577
 21515  012A3E  0101               	movlb	1	; () banked
 21516  012A40  2942               	incf	(sprintf@len+1)& (0+255),w,b
 21517  012A42  A4D8               	btfss	status,2,c
 21518  012A44  D7E4               	goto	l12577
 21519                           
 21520                           ; BSR set to: 1
 21521                           ;doprnt.c: 770: if(flag & 0x08)
 21522  012A46  0101               	movlb	1	; () banked
 21523  012A48  B74E               	btfsc	sprintf@flag& (0+255),3,b
 21524  012A4A  D00D               	goto	l12591
 21525  012A4C  EFBA  F099         	goto	l12837
 21526                           
 21527                           ; BSR set to: 1
 21528                           ;doprnt.c: 771: while(width--)
 21529  012A50  D00A               	goto	l12591
 21530  012A52                     l12587:
 21531                           
 21532                           ; BSR set to: 1
 21533                           ;doprnt.c: 772: ((*sp++ = (' ')));
 21534  012A52  C124  FFD9         	movff	sprintf@sp,fsr2l
 21535  012A56  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 21536  012A5A  0E20               	movlw	32
 21537  012A5C  6EDF               	movwf	indf2,c
 21538                           
 21539                           ; BSR set to: 1
 21540  012A5E  0101               	movlb	1	; () banked
 21541  012A60  4B24               	infsnz	sprintf@sp& (0+255),f,b
 21542  012A62  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 21543  012A64  D000               	goto	l12591
 21544  012A66                     l12591:
 21545                           
 21546                           ; BSR set to: 1
 21547  012A66  0101               	movlb	1	; () banked
 21548  012A68  074B               	decf	sprintf@width& (0+255),f,b
 21549  012A6A  A0D8               	btfss	status,0,c
 21550  012A6C  074C               	decf	(sprintf@width+1)& (0+255),f,b
 21551  012A6E  0101               	movlb	1	; () banked
 21552  012A70  294B               	incf	sprintf@width& (0+255),w,b
 21553  012A72  E1EF               	bnz	l12587
 21554  012A74  0101               	movlb	1	; () banked
 21555  012A76  294C               	incf	(sprintf@width+1)& (0+255),w,b
 21556  012A78  B4D8               	btfsc	status,2,c
 21557  012A7A  EFBA  F099         	goto	l12837
 21558  012A7E  D7E9               	goto	l12587
 21559                           
 21560                           ; BSR set to: 1
 21561                           ;doprnt.c: 774: continue;
 21562                           
 21563                           ; BSR set to: 1
 21564  012A80  EFBA  F099         	goto	l12837
 21565  012A84                     l12593:
 21566                           
 21567                           ; BSR set to: 1
 21568                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 21569  012A84  C143  FFD9         	movff	sprintf@ap,fsr2l
 21570  012A88  C144  FFDA         	movff	sprintf@ap+1,fsr2h
 21571  012A8C  50DF               	movf	indf2,w,c
 21572  012A8E  0101               	movlb	1	; () banked
 21573  012A90  6F4D               	movwf	sprintf@c& (0+255),b
 21574                           
 21575                           ; BSR set to: 1
 21576  012A92  0E02               	movlw	2
 21577  012A94  0101               	movlb	1	; () banked
 21578  012A96  2743               	addwf	sprintf@ap& (0+255),f,b
 21579  012A98  0E00               	movlw	0
 21580  012A9A  2344               	addwfc	(sprintf@ap+1)& (0+255),f,b
 21581  012A9C  D000               	goto	l12597
 21582  012A9E                     l12597:
 21583                           
 21584                           ; BSR set to: 1
 21585                           ;doprnt.c: 805: cp = (char *)&c;
 21586  012A9E  0E4D               	movlw	low sprintf@c
 21587  012AA0  0101               	movlb	1	; () banked
 21588  012AA2  6F39               	movwf	sprintf@cp& (0+255),b
 21589  012AA4  0E01               	movlw	high sprintf@c
 21590  012AA6  0101               	movlb	1	; () banked
 21591  012AA8  6F3A               	movwf	(sprintf@cp+1)& (0+255),b
 21592                           
 21593                           ; BSR set to: 1
 21594                           ;doprnt.c: 806: len = 1;
 21595  012AAA  0E00               	movlw	0
 21596  012AAC  0101               	movlb	1	; () banked
 21597  012AAE  6F42               	movwf	(sprintf@len+1)& (0+255),b
 21598  012AB0  0E01               	movlw	1
 21599  012AB2  6F41               	movwf	sprintf@len& (0+255),b
 21600                           
 21601                           ;doprnt.c: 807: goto dostring;
 21602  012AB4  D762               	goto	l12555
 21603  012AB6                     l12601:
 21604                           
 21605                           ; BSR set to: 1
 21606                           ;doprnt.c: 818: flag |= 0xC0;
 21607  012AB6  0EC0               	movlw	192
 21608  012AB8  0101               	movlb	1	; () banked
 21609  012ABA  134E               	iorwf	sprintf@flag& (0+255),f,b
 21610                           
 21611                           ; BSR set to: 1
 21612                           ;doprnt.c: 822: }
 21613                           
 21614                           ;doprnt.c: 819: break;
 21615  012ABC  D02B               	goto	l12607
 21616  012ABE                     l12605:
 21617  012ABE  C126  FFF6         	movff	sprintf@f,tblptrl
 21618  012AC2  C127  FFF7         	movff	sprintf@f+1,tblptrh
 21619  012AC6  0101               	movlb	1	; () banked
 21620  012AC8  4B26               	infsnz	sprintf@f& (0+255),f,b
 21621  012ACA  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 21622  012ACC                     	if	0	;tblptru may be non-zero
 21623  012ACC                     	endif
 21624  012ACC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21625  012ACC  0E00               	movlw	low (__mediumconst shr (0+16))
 21626  012ACE  6EF8               	movwf	tblptru,c
 21627  012AD0                     	endif
 21628  012AD0  0008               	tblrd		*
 21629  012AD2  CFF5 F14D          	movff	tablat,sprintf@c
 21630  012AD6  0101               	movlb	1	; () banked
 21631  012AD8  514D               	movf	sprintf@c& (0+255),w,b
 21632                           
 21633                           ; Switch size 1, requested type "space"
 21634                           ; Number of cases is 9, Range of values is 0 to 120
 21635                           ; switch strategies available:
 21636                           ; Name         Instructions Cycles
 21637                           ; simple_byte           28    15 (average)
 21638                           ;	Chosen strategy is simple_byte
 21639  012ADA  0A00               	xorlw	0	; case 0
 21640  012ADC  B4D8               	btfsc	status,2,c
 21641  012ADE  EFCD  F099         	goto	l12839
 21642  012AE2  0A58               	xorlw	88	; case 88
 21643  012AE4  B4D8               	btfsc	status,2,c
 21644  012AE6  D744               	goto	l12553
 21645  012AE8  0A3B               	xorlw	59	; case 99
 21646  012AEA  B4D8               	btfsc	status,2,c
 21647  012AEC  D7CB               	goto	l12593
 21648  012AEE  0A07               	xorlw	7	; case 100
 21649  012AF0  B4D8               	btfsc	status,2,c
 21650  012AF2  D010               	goto	l12607
 21651  012AF4  0A0D               	xorlw	13	; case 105
 21652  012AF6  B4D8               	btfsc	status,2,c
 21653  012AF8  D00D               	goto	l12607
 21654  012AFA  0A05               	xorlw	5	; case 108
 21655  012AFC  B4D8               	btfsc	status,2,c
 21656  012AFE  D732               	goto	l12549
 21657  012B00  0A03               	xorlw	3	; case 111
 21658  012B02  B4D8               	btfsc	status,2,c
 21659  012B04  D732               	goto	l12551
 21660  012B06  0A1A               	xorlw	26	; case 117
 21661  012B08  B4D8               	btfsc	status,2,c
 21662  012B0A  D7D5               	goto	l12601
 21663  012B0C  0A0D               	xorlw	13	; case 120
 21664  012B0E  B4D8               	btfsc	status,2,c
 21665  012B10  D731               	goto	l1863
 21666  012B12  D7C5               	goto	l12597
 21667  012B14                     l12607:
 21668                           
 21669                           ; BSR set to: 1
 21670                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 21671  012B14  0EC0               	movlw	192
 21672  012B16  0101               	movlb	1	; () banked
 21673  012B18  154E               	andwf	sprintf@flag& (0+255),w,b
 21674  012B1A  0101               	movlb	1	; () banked
 21675  012B1C  6F34               	movwf	??_sprintf& (0+255),b
 21676  012B1E  0E00               	movlw	0
 21677  012B20  0101               	movlb	1	; () banked
 21678  012B22  154F               	andwf	(sprintf@flag+1)& (0+255),w,b
 21679  012B24  0101               	movlb	1	; () banked
 21680  012B26  6F35               	movwf	(??_sprintf+1)& (0+255),b
 21681  012B28  0101               	movlb	1	; () banked
 21682  012B2A  5134               	movf	??_sprintf& (0+255),w,b
 21683  012B2C  0101               	movlb	1	; () banked
 21684  012B2E  1135               	iorwf	(??_sprintf+1)& (0+255),w,b
 21685  012B30  A4D8               	btfss	status,2,c
 21686  012B32  D035               	goto	l1882
 21687                           
 21688                           ; BSR set to: 1
 21689                           ;doprnt.c: 1253: {
 21690                           ;doprnt.c: 1255: if(flag & 0x10)
 21691  012B34  0101               	movlb	1	; () banked
 21692  012B36  A94E               	btfss	sprintf@flag& (0+255),4,b
 21693  012B38  D00E               	goto	l12615
 21694                           
 21695                           ; BSR set to: 1
 21696                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 21697  012B3A  C143  FFD9         	movff	sprintf@ap,fsr2l
 21698  012B3E  C144  FFDA         	movff	sprintf@ap+1,fsr2h
 21699  012B42  CFDE F145          	movff	postinc2,sprintf@val
 21700  012B46  CFDE F146          	movff	postinc2,sprintf@val+1
 21701  012B4A  CFDE F147          	movff	postinc2,sprintf@val+2
 21702  012B4E  CFDE F148          	movff	postinc2,sprintf@val+3
 21703                           
 21704                           ; BSR set to: 1
 21705  012B52  0E04               	movlw	4
 21706  012B54  D00F               	goto	L17
 21707  012B56                     l12615:
 21708                           
 21709                           ; BSR set to: 1
 21710                           ;doprnt.c: 1257: else
 21711                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 21712  012B56  C143  FFD9         	movff	sprintf@ap,fsr2l
 21713  012B5A  C144  FFDA         	movff	sprintf@ap+1,fsr2h
 21714  012B5E  CFDE F145          	movff	postinc2,sprintf@val
 21715  012B62  CFDD F146          	movff	postdec2,sprintf@val+1
 21716  012B66  0101               	movlb	1	; () banked
 21717  012B68  0E00               	movlw	0
 21718  012B6A  BF46               	btfsc	(sprintf@val+1)& (0+255),7,b
 21719  012B6C  0EFF               	movlw	-1
 21720  012B6E  6F47               	movwf	(sprintf@val+2)& (0+255),b
 21721  012B70  6F48               	movwf	(sprintf@val+3)& (0+255),b
 21722                           
 21723                           ; BSR set to: 1
 21724  012B72  0E02               	movlw	2
 21725  012B74                     L17:
 21726  012B74  0101               	movlb	1	; () banked
 21727  012B76  2743               	addwf	sprintf@ap& (0+255),f,b
 21728  012B78  0E00               	movlw	0
 21729  012B7A  2344               	addwfc	(sprintf@ap+1)& (0+255),f,b
 21730  012B7C  D000               	goto	l12619
 21731  012B7E                     l12619:
 21732                           
 21733                           ; BSR set to: 1
 21734                           ;doprnt.c: 1261: if((long)val < 0) {
 21735  012B7E  0101               	movlb	1	; () banked
 21736  012B80  AF48               	btfss	(sprintf@val+3)& (0+255),7,b
 21737  012B82  D033               	goto	l12633
 21738                           
 21739                           ; BSR set to: 1
 21740                           ;doprnt.c: 1262: flag |= 0x03;
 21741  012B84  0E03               	movlw	3
 21742  012B86  0101               	movlb	1	; () banked
 21743  012B88  134E               	iorwf	sprintf@flag& (0+255),f,b
 21744                           
 21745                           ; BSR set to: 1
 21746                           ;doprnt.c: 1263: val = -val;
 21747  012B8A  0101               	movlb	1	; () banked
 21748  012B8C  1F48               	comf	(sprintf@val+3)& (0+255),f,b
 21749  012B8E  1F47               	comf	(sprintf@val+2)& (0+255),f,b
 21750  012B90  1F46               	comf	(sprintf@val+1)& (0+255),f,b
 21751  012B92  6D45               	negf	sprintf@val& (0+255),b
 21752  012B94  0E00               	movlw	0
 21753  012B96  2346               	addwfc	(sprintf@val+1)& (0+255),f,b
 21754  012B98  2347               	addwfc	(sprintf@val+2)& (0+255),f,b
 21755  012B9A  2348               	addwfc	(sprintf@val+3)& (0+255),f,b
 21756                           
 21757                           ; BSR set to: 1
 21758                           ;doprnt.c: 1264: }
 21759                           ;doprnt.c: 1266: }
 21760  012B9C  D026               	goto	l12633
 21761  012B9E                     l1882:
 21762                           
 21763                           ; BSR set to: 1
 21764                           ;doprnt.c: 1268: else
 21765                           ;doprnt.c: 1273: {
 21766                           ;doprnt.c: 1281: if(flag & 0x10)
 21767  012B9E  0101               	movlb	1	; () banked
 21768  012BA0  A94E               	btfss	sprintf@flag& (0+255),4,b
 21769  012BA2  D00E               	goto	l12629
 21770                           
 21771                           ; BSR set to: 1
 21772                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 21773  012BA4  C143  FFD9         	movff	sprintf@ap,fsr2l
 21774  012BA8  C144  FFDA         	movff	sprintf@ap+1,fsr2h
 21775  012BAC  CFDE F145          	movff	postinc2,sprintf@val
 21776  012BB0  CFDE F146          	movff	postinc2,sprintf@val+1
 21777  012BB4  CFDE F147          	movff	postinc2,sprintf@val+2
 21778  012BB8  CFDE F148          	movff	postinc2,sprintf@val+3
 21779                           
 21780                           ; BSR set to: 1
 21781  012BBC  0E04               	movlw	4
 21782  012BBE  D010               	goto	L18
 21783  012BC0                     l12629:
 21784                           
 21785                           ; BSR set to: 1
 21786                           ;doprnt.c: 1283: else
 21787                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 21788  012BC0  C143  FFD9         	movff	sprintf@ap,fsr2l
 21789  012BC4  C144  FFDA         	movff	sprintf@ap+1,fsr2h
 21790  012BC8  CFDE F134          	movff	postinc2,??_sprintf
 21791  012BCC  CFDD F135          	movff	postdec2,??_sprintf+1
 21792  012BD0  C134  F145         	movff	??_sprintf,sprintf@val
 21793  012BD4  C135  F146         	movff	??_sprintf+1,sprintf@val+1
 21794  012BD8  0101               	movlb	1	; () banked
 21795  012BDA  6B47               	clrf	(sprintf@val+2)& (0+255),b
 21796  012BDC  6B48               	clrf	(sprintf@val+3)& (0+255),b
 21797                           
 21798                           ; BSR set to: 1
 21799  012BDE  0E02               	movlw	2
 21800  012BE0                     L18:
 21801  012BE0  0101               	movlb	1	; () banked
 21802  012BE2  2743               	addwf	sprintf@ap& (0+255),f,b
 21803  012BE4  0E00               	movlw	0
 21804  012BE6  2344               	addwfc	(sprintf@ap+1)& (0+255),f,b
 21805                           
 21806                           ; BSR set to: 1
 21807  012BE8  D000               	goto	l12633
 21808  012BEA                     l12633:
 21809                           
 21810                           ; BSR set to: 1
 21811                           ;doprnt.c: 1287: }
 21812                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 21813  012BEA  0101               	movlb	1	; () banked
 21814  012BEC  5149               	movf	sprintf@prec& (0+255),w,b
 21815  012BEE  0101               	movlb	1	; () banked
 21816  012BF0  114A               	iorwf	(sprintf@prec+1)& (0+255),w,b
 21817  012BF2  A4D8               	btfss	status,2,c
 21818  012BF4  D099               	goto	l12683
 21819                           
 21820                           ; BSR set to: 1
 21821  012BF6  0101               	movlb	1	; () banked
 21822  012BF8  5145               	movf	sprintf@val& (0+255),w,b
 21823  012BFA  0101               	movlb	1	; () banked
 21824  012BFC  1146               	iorwf	(sprintf@val+1)& (0+255),w,b
 21825  012BFE  0101               	movlb	1	; () banked
 21826  012C00  1147               	iorwf	(sprintf@val+2)& (0+255),w,b
 21827  012C02  0101               	movlb	1	; () banked
 21828  012C04  1148               	iorwf	(sprintf@val+3)& (0+255),w,b
 21829  012C06  A4D8               	btfss	status,2,c
 21830  012C08  D08F               	goto	l12683
 21831                           
 21832                           ; BSR set to: 1
 21833                           ;doprnt.c: 1291: prec++;
 21834  012C0A  0101               	movlb	1	; () banked
 21835  012C0C  4B49               	infsnz	sprintf@prec& (0+255),f,b
 21836  012C0E  2B4A               	incf	(sprintf@prec+1)& (0+255),f,b
 21837                           
 21838                           ; BSR set to: 1
 21839                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 21840  012C10  D08B               	goto	l12683
 21841                           
 21842                           ; BSR set to: 1
 21843                           
 21844                           ;doprnt.c: 1299: case 0x00:
 21845  012C12  D000               	goto	l12639
 21846  012C14                     l12639:
 21847                           
 21848                           ; BSR set to: 1
 21849                           ;doprnt.c: 1302: case 0xC0:
 21850                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 21851  012C14  0E01               	movlw	1
 21852  012C16  0101               	movlb	1	; () banked
 21853  012C18  6F4D               	movwf	sprintf@c& (0+255),b
 21854  012C1A                     l12641:
 21855                           
 21856                           ; BSR set to: 1
 21857  012C1A  0E0A               	movlw	10
 21858  012C1C  0101               	movlb	1	; () banked
 21859  012C1E  194D               	xorwf	sprintf@c& (0+255),w,b
 21860  012C20  B4D8               	btfsc	status,2,c
 21861  012C22  D092               	goto	l12685
 21862  012C24  D001               	goto	l12645
 21863                           
 21864                           ; BSR set to: 1
 21865  012C26  D090               	goto	l12685
 21866  012C28                     l12645:
 21867                           
 21868                           ; BSR set to: 1
 21869                           ;doprnt.c: 1306: if(val < dpowers[c])
 21870  012C28  0101               	movlb	1	; () banked
 21871  012C2A  514D               	movf	sprintf@c& (0+255),w,b
 21872  012C2C  0D04               	mullw	4
 21873  012C2E  0EF1               	movlw	low _dpowers
 21874  012C30  24F3               	addwf	prodl,w,c
 21875  012C32  6EF6               	movwf	tblptrl,c
 21876  012C34  0EEC               	movlw	high _dpowers
 21877  012C36  20F4               	addwfc	prodh,w,c
 21878  012C38  6EF7               	movwf	tblptrh,c
 21879  012C3A                     	if	1	;There are 3 active tblptr bytes
 21880  012C3A  6AF8               	clrf	tblptru,c
 21881  012C3C  0E00               	movlw	low (__mediumconst shr (0+16))
 21882  012C3E  22F8               	addwfc	tblptru,f,c
 21883  012C40                     	endif
 21884  012C40  0009               	tblrd		*+
 21885  012C42  50F5               	movf	tablat,w,c
 21886  012C44  0101               	movlb	1	; () banked
 21887  012C46  5D45               	subwf	sprintf@val& (0+255),w,b
 21888  012C48  0009               	tblrd		*+
 21889  012C4A  50F5               	movf	tablat,w,c
 21890  012C4C  0101               	movlb	1	; () banked
 21891  012C4E  5946               	subwfb	(sprintf@val+1)& (0+255),w,b
 21892  012C50  0009               	tblrd		*+
 21893  012C52  50F5               	movf	tablat,w,c
 21894  012C54  0101               	movlb	1	; () banked
 21895  012C56  5947               	subwfb	(sprintf@val+2)& (0+255),w,b
 21896  012C58  0009               	tblrd		*+
 21897  012C5A  50F5               	movf	tablat,w,c
 21898  012C5C  0101               	movlb	1	; () banked
 21899  012C5E  5948               	subwfb	(sprintf@val+3)& (0+255),w,b
 21900  012C60  A0D8               	btfss	status,0,c
 21901  012C62  D072               	goto	l12685
 21902  012C64  D001               	goto	l12649
 21903                           
 21904                           ; BSR set to: 1
 21905                           ;doprnt.c: 1307: break;
 21906  012C66  D070               	goto	l12685
 21907  012C68                     l12649:
 21908                           
 21909                           ; BSR set to: 1
 21910  012C68  0101               	movlb	1	; () banked
 21911  012C6A  2B4D               	incf	sprintf@c& (0+255),f,b
 21912  012C6C  D7D6               	goto	l12641
 21913                           
 21914                           ; BSR set to: 1
 21915                           ;doprnt.c: 1309: break;
 21916                           
 21917                           ; BSR set to: 1
 21918  012C6E  D06C               	goto	l12685
 21919  012C70                     l12653:
 21920                           
 21921                           ; BSR set to: 1
 21922                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 21923  012C70  0E01               	movlw	1
 21924  012C72  0101               	movlb	1	; () banked
 21925  012C74  6F4D               	movwf	sprintf@c& (0+255),b
 21926  012C76                     l12655:
 21927                           
 21928                           ; BSR set to: 1
 21929  012C76  0E08               	movlw	8
 21930  012C78  0101               	movlb	1	; () banked
 21931  012C7A  194D               	xorwf	sprintf@c& (0+255),w,b
 21932  012C7C  B4D8               	btfsc	status,2,c
 21933  012C7E  D064               	goto	l12685
 21934  012C80  D001               	goto	l12659
 21935                           
 21936                           ; BSR set to: 1
 21937  012C82  D062               	goto	l12685
 21938  012C84                     l12659:
 21939                           
 21940                           ; BSR set to: 1
 21941                           ;doprnt.c: 1317: if(val < hexpowers[c])
 21942  012C84  0101               	movlb	1	; () banked
 21943  012C86  514D               	movf	sprintf@c& (0+255),w,b
 21944  012C88  0D04               	mullw	4
 21945  012C8A  0E19               	movlw	low _hexpowers
 21946  012C8C  24F3               	addwf	prodl,w,c
 21947  012C8E  6EF6               	movwf	tblptrl,c
 21948  012C90  0EED               	movlw	high _hexpowers
 21949  012C92  20F4               	addwfc	prodh,w,c
 21950  012C94  6EF7               	movwf	tblptrh,c
 21951  012C96                     	if	1	;There are 3 active tblptr bytes
 21952  012C96  6AF8               	clrf	tblptru,c
 21953  012C98  0E00               	movlw	low (__mediumconst shr (0+16))
 21954  012C9A  22F8               	addwfc	tblptru,f,c
 21955  012C9C                     	endif
 21956  012C9C  0009               	tblrd		*+
 21957  012C9E  50F5               	movf	tablat,w,c
 21958  012CA0  0101               	movlb	1	; () banked
 21959  012CA2  5D45               	subwf	sprintf@val& (0+255),w,b
 21960  012CA4  0009               	tblrd		*+
 21961  012CA6  50F5               	movf	tablat,w,c
 21962  012CA8  0101               	movlb	1	; () banked
 21963  012CAA  5946               	subwfb	(sprintf@val+1)& (0+255),w,b
 21964  012CAC  0009               	tblrd		*+
 21965  012CAE  50F5               	movf	tablat,w,c
 21966  012CB0  0101               	movlb	1	; () banked
 21967  012CB2  5947               	subwfb	(sprintf@val+2)& (0+255),w,b
 21968  012CB4  0009               	tblrd		*+
 21969  012CB6  50F5               	movf	tablat,w,c
 21970  012CB8  0101               	movlb	1	; () banked
 21971  012CBA  5948               	subwfb	(sprintf@val+3)& (0+255),w,b
 21972  012CBC  A0D8               	btfss	status,0,c
 21973  012CBE  D044               	goto	l12685
 21974  012CC0  D001               	goto	l12663
 21975                           
 21976                           ; BSR set to: 1
 21977                           ;doprnt.c: 1318: break;
 21978  012CC2  D042               	goto	l12685
 21979  012CC4                     l12663:
 21980                           
 21981                           ; BSR set to: 1
 21982  012CC4  0101               	movlb	1	; () banked
 21983  012CC6  2B4D               	incf	sprintf@c& (0+255),f,b
 21984  012CC8  D7D6               	goto	l12655
 21985                           
 21986                           ; BSR set to: 1
 21987                           ;doprnt.c: 1320: break;
 21988                           
 21989                           ; BSR set to: 1
 21990  012CCA  D03E               	goto	l12685
 21991  012CCC                     l12667:
 21992                           
 21993                           ; BSR set to: 1
 21994                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 21995  012CCC  0E01               	movlw	1
 21996  012CCE  0101               	movlb	1	; () banked
 21997  012CD0  6F4D               	movwf	sprintf@c& (0+255),b
 21998  012CD2                     l12669:
 21999                           
 22000                           ; BSR set to: 1
 22001  012CD2  0E0C               	movlw	12
 22002  012CD4  0101               	movlb	1	; () banked
 22003  012CD6  194D               	xorwf	sprintf@c& (0+255),w,b
 22004  012CD8  B4D8               	btfsc	status,2,c
 22005  012CDA  D036               	goto	l12685
 22006  012CDC  D001               	goto	l12673
 22007                           
 22008                           ; BSR set to: 1
 22009  012CDE  D034               	goto	l12685
 22010  012CE0                     l12673:
 22011                           
 22012                           ; BSR set to: 1
 22013                           ;doprnt.c: 1329: if(val < octpowers[c])
 22014  012CE0  0101               	movlb	1	; () banked
 22015  012CE2  514D               	movf	sprintf@c& (0+255),w,b
 22016  012CE4  0D04               	mullw	4
 22017  012CE6  0EC1               	movlw	low _octpowers
 22018  012CE8  24F3               	addwf	prodl,w,c
 22019  012CEA  6EF6               	movwf	tblptrl,c
 22020  012CEC  0EEC               	movlw	high _octpowers
 22021  012CEE  20F4               	addwfc	prodh,w,c
 22022  012CF0  6EF7               	movwf	tblptrh,c
 22023  012CF2                     	if	1	;There are 3 active tblptr bytes
 22024  012CF2  6AF8               	clrf	tblptru,c
 22025  012CF4  0E00               	movlw	low (__mediumconst shr (0+16))
 22026  012CF6  22F8               	addwfc	tblptru,f,c
 22027  012CF8                     	endif
 22028  012CF8  0009               	tblrd		*+
 22029  012CFA  50F5               	movf	tablat,w,c
 22030  012CFC  0101               	movlb	1	; () banked
 22031  012CFE  5D45               	subwf	sprintf@val& (0+255),w,b
 22032  012D00  0009               	tblrd		*+
 22033  012D02  50F5               	movf	tablat,w,c
 22034  012D04  0101               	movlb	1	; () banked
 22035  012D06  5946               	subwfb	(sprintf@val+1)& (0+255),w,b
 22036  012D08  0009               	tblrd		*+
 22037  012D0A  50F5               	movf	tablat,w,c
 22038  012D0C  0101               	movlb	1	; () banked
 22039  012D0E  5947               	subwfb	(sprintf@val+2)& (0+255),w,b
 22040  012D10  0009               	tblrd		*+
 22041  012D12  50F5               	movf	tablat,w,c
 22042  012D14  0101               	movlb	1	; () banked
 22043  012D16  5948               	subwfb	(sprintf@val+3)& (0+255),w,b
 22044  012D18  A0D8               	btfss	status,0,c
 22045  012D1A  D016               	goto	l12685
 22046  012D1C  D001               	goto	l12677
 22047                           
 22048                           ; BSR set to: 1
 22049                           ;doprnt.c: 1330: break;
 22050  012D1E  D014               	goto	l12685
 22051  012D20                     l12677:
 22052                           
 22053                           ; BSR set to: 1
 22054  012D20  0101               	movlb	1	; () banked
 22055  012D22  2B4D               	incf	sprintf@c& (0+255),f,b
 22056  012D24  D7D6               	goto	l12669
 22057                           
 22058                           ; BSR set to: 1
 22059                           ;doprnt.c: 1336: }
 22060                           
 22061                           ; BSR set to: 1
 22062                           ;doprnt.c: 1332: break;
 22063                           
 22064                           ; BSR set to: 1
 22065  012D26  D010               	goto	l12685
 22066  012D28                     l12683:
 22067                           
 22068                           ; BSR set to: 1
 22069  012D28  0101               	movlb	1	; () banked
 22070  012D2A  514E               	movf	sprintf@flag& (0+255),w,b
 22071  012D2C  0BC0               	andlw	192
 22072                           
 22073                           ; Switch size 1, requested type "space"
 22074                           ; Number of cases is 4, Range of values is 0 to 192
 22075                           ; switch strategies available:
 22076                           ; Name         Instructions Cycles
 22077                           ; simple_byte           13     7 (average)
 22078                           ;	Chosen strategy is simple_byte
 22079  012D2E  0A00               	xorlw	0	; case 0
 22080  012D30  B4D8               	btfsc	status,2,c
 22081  012D32  D770               	goto	l12639
 22082  012D34  0A40               	xorlw	64	; case 64
 22083  012D36  B4D8               	btfsc	status,2,c
 22084  012D38  D7C9               	goto	l12667
 22085  012D3A  0AC0               	xorlw	192	; case 128
 22086  012D3C  B4D8               	btfsc	status,2,c
 22087  012D3E  D798               	goto	l12653
 22088  012D40  0A40               	xorlw	64	; case 192
 22089  012D42  B4D8               	btfsc	status,2,c
 22090  012D44  D767               	goto	l12639
 22091  012D46  D000               	goto	l12685
 22092  012D48                     l12685:
 22093                           
 22094                           ; BSR set to: 1
 22095                           ;doprnt.c: 1339: if(c < prec)
 22096  012D48  0E80               	movlw	128
 22097  012D4A  0101               	movlb	1	; () banked
 22098  012D4C  BF4D               	btfsc	sprintf@c& (0+255),7,b
 22099  012D4E  0E7F               	movlw	127
 22100  012D50  0101               	movlb	1	; () banked
 22101  012D52  6F34               	movwf	??_sprintf& (0+255),b
 22102  012D54  0101               	movlb	1	; () banked
 22103  012D56  5149               	movf	sprintf@prec& (0+255),w,b
 22104  012D58  0101               	movlb	1	; () banked
 22105  012D5A  5D4D               	subwf	sprintf@c& (0+255),w,b
 22106  012D5C  0101               	movlb	1	; () banked
 22107  012D5E  514A               	movf	(sprintf@prec+1)& (0+255),w,b
 22108  012D60  0A80               	xorlw	128
 22109  012D62  0101               	movlb	1	; () banked
 22110  012D64  5934               	subwfb	??_sprintf& (0+255),w,b
 22111  012D66  B0D8               	btfsc	status,0,c
 22112  012D68  D003               	goto	l12689
 22113                           
 22114                           ; BSR set to: 1
 22115                           ;doprnt.c: 1340: c = prec;
 22116  012D6A  C149  F14D         	movff	sprintf@prec,sprintf@c
 22117  012D6E  D019               	goto	l12693
 22118  012D70                     l12689:
 22119                           
 22120                           ; BSR set to: 1
 22121                           ;doprnt.c: 1341: else if(prec < c)
 22122  012D70  0101               	movlb	1	; () banked
 22123  012D72  514A               	movf	(sprintf@prec+1)& (0+255),w,b
 22124  012D74  0A80               	xorlw	128
 22125  012D76  0101               	movlb	1	; () banked
 22126  012D78  6F34               	movwf	??_sprintf& (0+255),b
 22127  012D7A  0101               	movlb	1	; () banked
 22128  012D7C  514D               	movf	sprintf@c& (0+255),w,b
 22129  012D7E  0101               	movlb	1	; () banked
 22130  012D80  5D49               	subwf	sprintf@prec& (0+255),w,b
 22131  012D82  0E80               	movlw	128
 22132  012D84  0101               	movlb	1	; () banked
 22133  012D86  BF4D               	btfsc	sprintf@c& (0+255),7,b
 22134  012D88  0E7F               	movlw	127
 22135  012D8A  0101               	movlb	1	; () banked
 22136  012D8C  5934               	subwfb	??_sprintf& (0+255),w,b
 22137  012D8E  B0D8               	btfsc	status,0,c
 22138  012D90  D008               	goto	l12693
 22139                           
 22140                           ; BSR set to: 1
 22141                           ;doprnt.c: 1342: prec = c;
 22142  012D92  0101               	movlb	1	; () banked
 22143  012D94  514D               	movf	sprintf@c& (0+255),w,b
 22144  012D96  0101               	movlb	1	; () banked
 22145  012D98  6F49               	movwf	sprintf@prec& (0+255),b
 22146  012D9A  6B4A               	clrf	(sprintf@prec+1)& (0+255),b
 22147  012D9C  BF49               	btfsc	sprintf@prec& (0+255),7,b
 22148  012D9E  074A               	decf	(sprintf@prec+1)& (0+255),f,b
 22149                           
 22150                           ; BSR set to: 1
 22151  012DA0  D000               	goto	l12693
 22152  012DA2                     l12693:
 22153                           
 22154                           ; BSR set to: 1
 22155                           ;doprnt.c: 1345: if(width && flag & 0x03)
 22156  012DA2  0101               	movlb	1	; () banked
 22157  012DA4  514B               	movf	sprintf@width& (0+255),w,b
 22158  012DA6  0101               	movlb	1	; () banked
 22159  012DA8  114C               	iorwf	(sprintf@width+1)& (0+255),w,b
 22160  012DAA  B4D8               	btfsc	status,2,c
 22161  012DAC  D015               	goto	l12699
 22162                           
 22163                           ; BSR set to: 1
 22164  012DAE  0E03               	movlw	3
 22165  012DB0  0101               	movlb	1	; () banked
 22166  012DB2  154E               	andwf	sprintf@flag& (0+255),w,b
 22167  012DB4  0101               	movlb	1	; () banked
 22168  012DB6  6F34               	movwf	??_sprintf& (0+255),b
 22169  012DB8  0E00               	movlw	0
 22170  012DBA  0101               	movlb	1	; () banked
 22171  012DBC  154F               	andwf	(sprintf@flag+1)& (0+255),w,b
 22172  012DBE  0101               	movlb	1	; () banked
 22173  012DC0  6F35               	movwf	(??_sprintf+1)& (0+255),b
 22174  012DC2  0101               	movlb	1	; () banked
 22175  012DC4  5134               	movf	??_sprintf& (0+255),w,b
 22176  012DC6  0101               	movlb	1	; () banked
 22177  012DC8  1135               	iorwf	(??_sprintf+1)& (0+255),w,b
 22178  012DCA  B4D8               	btfsc	status,2,c
 22179  012DCC  D005               	goto	l12699
 22180                           
 22181                           ; BSR set to: 1
 22182                           ;doprnt.c: 1346: width--;
 22183  012DCE  0101               	movlb	1	; () banked
 22184  012DD0  074B               	decf	sprintf@width& (0+255),f,b
 22185  012DD2  A0D8               	btfss	status,0,c
 22186  012DD4  074C               	decf	(sprintf@width+1)& (0+255),f,b
 22187  012DD6  D000               	goto	l12699
 22188  012DD8                     l12699:
 22189                           
 22190                           ; BSR set to: 1
 22191                           ;doprnt.c: 1348: if(flag & 0x4000) {
 22192  012DD8  0101               	movlb	1	; () banked
 22193  012DDA  AD4F               	btfss	(sprintf@flag+1)& (0+255),6,b
 22194  012DDC  D01F               	goto	l12707
 22195                           
 22196                           ; BSR set to: 1
 22197                           ;doprnt.c: 1349: if(width > prec)
 22198  012DDE  0101               	movlb	1	; () banked
 22199  012DE0  514B               	movf	sprintf@width& (0+255),w,b
 22200  012DE2  0101               	movlb	1	; () banked
 22201  012DE4  5D49               	subwf	sprintf@prec& (0+255),w,b
 22202  012DE6  0101               	movlb	1	; () banked
 22203  012DE8  514A               	movf	(sprintf@prec+1)& (0+255),w,b
 22204  012DEA  0A80               	xorlw	128
 22205  012DEC  0101               	movlb	1	; () banked
 22206  012DEE  6F34               	movwf	??_sprintf& (0+255),b
 22207  012DF0  0101               	movlb	1	; () banked
 22208  012DF2  514C               	movf	(sprintf@width+1)& (0+255),w,b
 22209  012DF4  0A80               	xorlw	128
 22210  012DF6  0101               	movlb	1	; () banked
 22211  012DF8  5934               	subwfb	??_sprintf& (0+255),w,b
 22212  012DFA  B0D8               	btfsc	status,0,c
 22213  012DFC  D009               	goto	l12705
 22214                           
 22215                           ; BSR set to: 1
 22216                           ;doprnt.c: 1350: width -= prec;
 22217  012DFE  0101               	movlb	1	; () banked
 22218  012E00  5149               	movf	sprintf@prec& (0+255),w,b
 22219  012E02  0101               	movlb	1	; () banked
 22220  012E04  5F4B               	subwf	sprintf@width& (0+255),f,b
 22221  012E06  0101               	movlb	1	; () banked
 22222  012E08  514A               	movf	(sprintf@prec+1)& (0+255),w,b
 22223  012E0A  0101               	movlb	1	; () banked
 22224  012E0C  5B4C               	subwfb	(sprintf@width+1)& (0+255),f,b
 22225  012E0E  D006               	goto	l12707
 22226  012E10                     l12705:
 22227                           
 22228                           ; BSR set to: 1
 22229                           ;doprnt.c: 1351: else
 22230                           ;doprnt.c: 1352: width = 0;
 22231  012E10  0E00               	movlw	0
 22232  012E12  0101               	movlb	1	; () banked
 22233  012E14  6F4C               	movwf	(sprintf@width+1)& (0+255),b
 22234  012E16  0E00               	movlw	0
 22235  012E18  6F4B               	movwf	sprintf@width& (0+255),b
 22236                           
 22237                           ; BSR set to: 1
 22238  012E1A  D000               	goto	l12707
 22239  012E1C                     l12707:
 22240                           
 22241                           ; BSR set to: 1
 22242                           ;doprnt.c: 1353: }
 22243                           ;doprnt.c: 1357: if((flag & (
 22244                           ;doprnt.c: 1359: 0x04|
 22245                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 22246  012E1C  0EC4               	movlw	196
 22247  012E1E  0101               	movlb	1	; () banked
 22248  012E20  6F34               	movwf	??_sprintf& (0+255),b
 22249  012E22  0E08               	movlw	8
 22250  012E24  0101               	movlb	1	; () banked
 22251  012E26  6F35               	movwf	(??_sprintf+1)& (0+255),b
 22252  012E28  C14E  F136         	movff	sprintf@flag,??_sprintf+2
 22253  012E2C  C14F  F137         	movff	sprintf@flag+1,??_sprintf+3
 22254  012E30  0101               	movlb	1	; () banked
 22255  012E32  5134               	movf	??_sprintf& (0+255),w,b
 22256  012E34  0101               	movlb	1	; () banked
 22257  012E36  1736               	andwf	(??_sprintf+2)& (0+255),f,b
 22258  012E38  0101               	movlb	1	; () banked
 22259  012E3A  5135               	movf	(??_sprintf+1)& (0+255),w,b
 22260  012E3C  0101               	movlb	1	; () banked
 22261  012E3E  1737               	andwf	(??_sprintf+3)& (0+255),f,b
 22262  012E40  0E40               	movlw	64
 22263  012E42  0101               	movlb	1	; () banked
 22264  012E44  1936               	xorwf	(??_sprintf+2)& (0+255),w,b
 22265  012E46  E110               	bnz	l12713
 22266  012E48  0E08               	movlw	8
 22267  012E4A  0101               	movlb	1	; () banked
 22268  012E4C  1937               	xorwf	(??_sprintf+3)& (0+255),w,b
 22269  012E4E  A4D8               	btfss	status,2,c
 22270  012E50  D00B               	goto	l12713
 22271                           
 22272                           ; BSR set to: 1
 22273                           ;doprnt.c: 1362: if(width)
 22274  012E52  0101               	movlb	1	; () banked
 22275  012E54  514B               	movf	sprintf@width& (0+255),w,b
 22276  012E56  0101               	movlb	1	; () banked
 22277  012E58  114C               	iorwf	(sprintf@width+1)& (0+255),w,b
 22278  012E5A  B4D8               	btfsc	status,2,c
 22279  012E5C  D037               	goto	l12721
 22280                           
 22281                           ; BSR set to: 1
 22282                           ;doprnt.c: 1363: width--;
 22283  012E5E  0101               	movlb	1	; () banked
 22284  012E60  074B               	decf	sprintf@width& (0+255),f,b
 22285  012E62  A0D8               	btfss	status,0,c
 22286  012E64  074C               	decf	(sprintf@width+1)& (0+255),f,b
 22287                           
 22288                           ; BSR set to: 1
 22289                           ;doprnt.c: 1364: } else
 22290  012E66  D032               	goto	l12721
 22291  012E68                     l12713:
 22292                           
 22293                           ; BSR set to: 1
 22294                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 22295  012E68  0EC0               	movlw	192
 22296  012E6A  0101               	movlb	1	; () banked
 22297  012E6C  6F34               	movwf	??_sprintf& (0+255),b
 22298  012E6E  0E08               	movlw	8
 22299  012E70  0101               	movlb	1	; () banked
 22300  012E72  6F35               	movwf	(??_sprintf+1)& (0+255),b
 22301  012E74  C14E  F136         	movff	sprintf@flag,??_sprintf+2
 22302  012E78  C14F  F137         	movff	sprintf@flag+1,??_sprintf+3
 22303  012E7C  0101               	movlb	1	; () banked
 22304  012E7E  5134               	movf	??_sprintf& (0+255),w,b
 22305  012E80  0101               	movlb	1	; () banked
 22306  012E82  1736               	andwf	(??_sprintf+2)& (0+255),f,b
 22307  012E84  0101               	movlb	1	; () banked
 22308  012E86  5135               	movf	(??_sprintf+1)& (0+255),w,b
 22309  012E88  0101               	movlb	1	; () banked
 22310  012E8A  1737               	andwf	(??_sprintf+3)& (0+255),f,b
 22311  012E8C  0E80               	movlw	128
 22312  012E8E  0101               	movlb	1	; () banked
 22313  012E90  1936               	xorwf	(??_sprintf+2)& (0+255),w,b
 22314  012E92  E11C               	bnz	l12721
 22315  012E94  0E08               	movlw	8
 22316  012E96  0101               	movlb	1	; () banked
 22317  012E98  1937               	xorwf	(??_sprintf+3)& (0+255),w,b
 22318  012E9A  A4D8               	btfss	status,2,c
 22319  012E9C  D017               	goto	l12721
 22320                           
 22321                           ; BSR set to: 1
 22322                           ;doprnt.c: 1372: if(width > 2)
 22323  012E9E  0101               	movlb	1	; () banked
 22324  012EA0  BF4C               	btfsc	(sprintf@width+1)& (0+255),7,b
 22325  012EA2  D00E               	goto	l12719
 22326  012EA4  0101               	movlb	1	; () banked
 22327  012EA6  514C               	movf	(sprintf@width+1)& (0+255),w,b
 22328  012EA8  E105               	bnz	u15760
 22329  012EAA  0E03               	movlw	3
 22330  012EAC  0101               	movlb	1	; () banked
 22331  012EAE  5D4B               	subwf	sprintf@width& (0+255),w,b
 22332  012EB0  A0D8               	btfss	status,0,c
 22333  012EB2  D006               	goto	l12719
 22334  012EB4                     u15760:
 22335                           
 22336                           ; BSR set to: 1
 22337                           ;doprnt.c: 1373: width -= 2;
 22338  012EB4  0101               	movlb	1	; () banked
 22339  012EB6  0EFE               	movlw	254
 22340  012EB8  274B               	addwf	sprintf@width& (0+255),f,b
 22341  012EBA  0EFF               	movlw	255
 22342  012EBC  234C               	addwfc	(sprintf@width+1)& (0+255),f,b
 22343  012EBE  D006               	goto	l12721
 22344  012EC0                     l12719:
 22345                           
 22346                           ; BSR set to: 1
 22347                           ;doprnt.c: 1374: else
 22348                           ;doprnt.c: 1375: width = 0;
 22349  012EC0  0E00               	movlw	0
 22350  012EC2  0101               	movlb	1	; () banked
 22351  012EC4  6F4C               	movwf	(sprintf@width+1)& (0+255),b
 22352  012EC6  0E00               	movlw	0
 22353  012EC8  6F4B               	movwf	sprintf@width& (0+255),b
 22354                           
 22355                           ; BSR set to: 1
 22356                           
 22357                           ; BSR set to: 1
 22358  012ECA  D000               	goto	l12721
 22359  012ECC                     l12721:
 22360                           
 22361                           ; BSR set to: 1
 22362                           ;doprnt.c: 1376: }
 22363                           ;doprnt.c: 1381: if(width > c)
 22364  012ECC  0E80               	movlw	128
 22365  012ECE  0101               	movlb	1	; () banked
 22366  012ED0  BF4D               	btfsc	sprintf@c& (0+255),7,b
 22367  012ED2  0E7F               	movlw	127
 22368  012ED4  0101               	movlb	1	; () banked
 22369  012ED6  6F34               	movwf	??_sprintf& (0+255),b
 22370  012ED8  0101               	movlb	1	; () banked
 22371  012EDA  514B               	movf	sprintf@width& (0+255),w,b
 22372  012EDC  0101               	movlb	1	; () banked
 22373  012EDE  5D4D               	subwf	sprintf@c& (0+255),w,b
 22374  012EE0  0101               	movlb	1	; () banked
 22375  012EE2  514C               	movf	(sprintf@width+1)& (0+255),w,b
 22376  012EE4  0A80               	xorlw	128
 22377  012EE6  0101               	movlb	1	; () banked
 22378  012EE8  5934               	subwfb	??_sprintf& (0+255),w,b
 22379  012EEA  B0D8               	btfsc	status,0,c
 22380  012EEC  D00B               	goto	l12725
 22381                           
 22382                           ; BSR set to: 1
 22383                           ;doprnt.c: 1382: width -= c;
 22384  012EEE  0101               	movlb	1	; () banked
 22385  012EF0  514D               	movf	sprintf@c& (0+255),w,b
 22386  012EF2  0101               	movlb	1	; () banked
 22387  012EF4  5F4B               	subwf	sprintf@width& (0+255),f,b
 22388  012EF6  0E00               	movlw	0
 22389  012EF8  0101               	movlb	1	; () banked
 22390  012EFA  BF4D               	btfsc	sprintf@c& (0+255),7,b
 22391  012EFC  0EFF               	movlw	255
 22392  012EFE  0101               	movlb	1	; () banked
 22393  012F00  5B4C               	subwfb	(sprintf@width+1)& (0+255),f,b
 22394  012F02  D006               	goto	l12727
 22395  012F04                     l12725:
 22396                           
 22397                           ; BSR set to: 1
 22398                           ;doprnt.c: 1383: else
 22399                           ;doprnt.c: 1384: width = 0;
 22400  012F04  0E00               	movlw	0
 22401  012F06  0101               	movlb	1	; () banked
 22402  012F08  6F4C               	movwf	(sprintf@width+1)& (0+255),b
 22403  012F0A  0E00               	movlw	0
 22404  012F0C  6F4B               	movwf	sprintf@width& (0+255),b
 22405  012F0E  D000               	goto	l12727
 22406  012F10                     l12727:
 22407                           
 22408                           ; BSR set to: 1
 22409                           ;doprnt.c: 1387: if(flag & 0x04) {
 22410  012F10  0101               	movlb	1	; () banked
 22411  012F12  A54E               	btfss	sprintf@flag& (0+255),2,b
 22412  012F14  D079               	goto	l12763
 22413                           
 22414                           ; BSR set to: 1
 22415                           ;doprnt.c: 1392: if(flag & 0x03)
 22416  012F16  0E03               	movlw	3
 22417  012F18  0101               	movlb	1	; () banked
 22418  012F1A  154E               	andwf	sprintf@flag& (0+255),w,b
 22419  012F1C  0101               	movlb	1	; () banked
 22420  012F1E  6F34               	movwf	??_sprintf& (0+255),b
 22421  012F20  0E00               	movlw	0
 22422  012F22  0101               	movlb	1	; () banked
 22423  012F24  154F               	andwf	(sprintf@flag+1)& (0+255),w,b
 22424  012F26  0101               	movlb	1	; () banked
 22425  012F28  6F35               	movwf	(??_sprintf+1)& (0+255),b
 22426  012F2A  0101               	movlb	1	; () banked
 22427  012F2C  5134               	movf	??_sprintf& (0+255),w,b
 22428  012F2E  0101               	movlb	1	; () banked
 22429  012F30  1135               	iorwf	(??_sprintf+1)& (0+255),w,b
 22430  012F32  B4D8               	btfsc	status,2,c
 22431  012F34  D00A               	goto	l1921
 22432                           
 22433                           ; BSR set to: 1
 22434                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 22435  012F36  C124  FFD9         	movff	sprintf@sp,fsr2l
 22436  012F3A  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 22437  012F3E  0E2D               	movlw	45
 22438  012F40  D00C               	goto	L19
 22439  012F42                     l12733:
 22440                           
 22441                           ; BSR set to: 1
 22442  012F42  0101               	movlb	1	; () banked
 22443  012F44  4B24               	infsnz	sprintf@sp& (0+255),f,b
 22444  012F46  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 22445  012F48  D044               	goto	l12755
 22446  012F4A                     l1921:
 22447                           
 22448                           ; BSR set to: 1
 22449                           ;doprnt.c: 1396: else
 22450                           ;doprnt.c: 1399: if(flag & 0x01)
 22451  012F4A  0101               	movlb	1	; () banked
 22452  012F4C  A14E               	btfss	sprintf@flag& (0+255),0,b
 22453  012F4E  D007               	goto	l12739
 22454                           
 22455                           ; BSR set to: 1
 22456                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 22457  012F50  C124  FFD9         	movff	sprintf@sp,fsr2l
 22458  012F54  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 22459  012F58  0E20               	movlw	32
 22460  012F5A                     L19:
 22461  012F5A  6EDF               	movwf	indf2,c
 22462  012F5C  D7F2               	goto	l12733
 22463  012F5E                     l12739:
 22464                           
 22465                           ; BSR set to: 1
 22466                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 22467  012F5E  0EC0               	movlw	192
 22468  012F60  0101               	movlb	1	; () banked
 22469  012F62  6F34               	movwf	??_sprintf& (0+255),b
 22470  012F64  0E08               	movlw	8
 22471  012F66  0101               	movlb	1	; () banked
 22472  012F68  6F35               	movwf	(??_sprintf+1)& (0+255),b
 22473  012F6A  C14E  F136         	movff	sprintf@flag,??_sprintf+2
 22474  012F6E  C14F  F137         	movff	sprintf@flag+1,??_sprintf+3
 22475  012F72  0101               	movlb	1	; () banked
 22476  012F74  5134               	movf	??_sprintf& (0+255),w,b
 22477  012F76  0101               	movlb	1	; () banked
 22478  012F78  1736               	andwf	(??_sprintf+2)& (0+255),f,b
 22479  012F7A  0101               	movlb	1	; () banked
 22480  012F7C  5135               	movf	(??_sprintf+1)& (0+255),w,b
 22481  012F7E  0101               	movlb	1	; () banked
 22482  012F80  1737               	andwf	(??_sprintf+3)& (0+255),f,b
 22483  012F82  0E80               	movlw	128
 22484  012F84  0101               	movlb	1	; () banked
 22485  012F86  1936               	xorwf	(??_sprintf+2)& (0+255),w,b
 22486  012F88  E124               	bnz	l12755
 22487  012F8A  0E08               	movlw	8
 22488  012F8C  0101               	movlb	1	; () banked
 22489  012F8E  1937               	xorwf	(??_sprintf+3)& (0+255),w,b
 22490  012F90  A4D8               	btfss	status,2,c
 22491  012F92  D01F               	goto	l12755
 22492                           
 22493                           ; BSR set to: 1
 22494                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 22495  012F94  C124  FFD9         	movff	sprintf@sp,fsr2l
 22496  012F98  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 22497  012F9C  0E30               	movlw	48
 22498  012F9E  6EDF               	movwf	indf2,c
 22499                           
 22500                           ; BSR set to: 1
 22501  012FA0  0101               	movlb	1	; () banked
 22502  012FA2  4B24               	infsnz	sprintf@sp& (0+255),f,b
 22503  012FA4  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 22504                           
 22505                           ; BSR set to: 1
 22506                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 22507  012FA6  0101               	movlb	1	; () banked
 22508  012FA8  BB4E               	btfsc	sprintf@flag& (0+255),5,b
 22509  012FAA  D005               	goto	l12749
 22510                           
 22511                           ; BSR set to: 1
 22512  012FAC  0E00               	movlw	0
 22513  012FAE  0101               	movlb	1	; () banked
 22514  012FB0  6F3C               	movwf	(_sprintf$3080+1)& (0+255),b
 22515  012FB2  0E78               	movlw	120
 22516  012FB4  D004               	goto	L20
 22517  012FB6                     l12749:
 22518                           
 22519                           ; BSR set to: 1
 22520  012FB6  0E00               	movlw	0
 22521  012FB8  0101               	movlb	1	; () banked
 22522  012FBA  6F3C               	movwf	(_sprintf$3080+1)& (0+255),b
 22523  012FBC  0E58               	movlw	88
 22524  012FBE                     L20:
 22525  012FBE  6F3B               	movwf	_sprintf$3080& (0+255),b
 22526  012FC0  D000               	goto	l12751
 22527  012FC2                     l12751:
 22528                           
 22529                           ; BSR set to: 1
 22530  012FC2  C124  FFD9         	movff	sprintf@sp,fsr2l
 22531  012FC6  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 22532  012FCA  C13B  FFDF         	movff	_sprintf$3080,indf2
 22533  012FCE  D7B9               	goto	l12733
 22534                           
 22535                           ; BSR set to: 1
 22536                           
 22537                           ; BSR set to: 1
 22538                           
 22539                           ; BSR set to: 1
 22540  012FD0  D000               	goto	l12755
 22541  012FD2                     l12755:
 22542                           
 22543                           ; BSR set to: 1
 22544                           ;doprnt.c: 1412: }
 22545                           ;doprnt.c: 1415: if(width)
 22546  012FD2  0101               	movlb	1	; () banked
 22547  012FD4  514B               	movf	sprintf@width& (0+255),w,b
 22548  012FD6  0101               	movlb	1	; () banked
 22549  012FD8  114C               	iorwf	(sprintf@width+1)& (0+255),w,b
 22550  012FDA  B4D8               	btfsc	status,2,c
 22551  012FDC  D19C               	goto	l12827
 22552  012FDE                     l12757:
 22553                           
 22554                           ; BSR set to: 1
 22555                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 22556  012FDE  C124  FFD9         	movff	sprintf@sp,fsr2l
 22557  012FE2  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 22558  012FE6  0E30               	movlw	48
 22559  012FE8  6EDF               	movwf	indf2,c
 22560                           
 22561                           ; BSR set to: 1
 22562  012FEA  0101               	movlb	1	; () banked
 22563  012FEC  4B24               	infsnz	sprintf@sp& (0+255),f,b
 22564  012FEE  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 22565                           
 22566                           ; BSR set to: 1
 22567                           ;doprnt.c: 1418: while(--width);
 22568  012FF0  0101               	movlb	1	; () banked
 22569  012FF2  074B               	decf	sprintf@width& (0+255),f,b
 22570  012FF4  A0D8               	btfss	status,0,c
 22571  012FF6  074C               	decf	(sprintf@width+1)& (0+255),f,b
 22572  012FF8  0101               	movlb	1	; () banked
 22573  012FFA  514B               	movf	sprintf@width& (0+255),w,b
 22574  012FFC  0101               	movlb	1	; () banked
 22575  012FFE  114C               	iorwf	(sprintf@width+1)& (0+255),w,b
 22576  013000  B4D8               	btfsc	status,2,c
 22577  013002  D189               	goto	l12827
 22578  013004  D7EC               	goto	l12757
 22579                           
 22580                           ; BSR set to: 1
 22581                           ;doprnt.c: 1420: } else
 22582                           
 22583                           ; BSR set to: 1
 22584  013006  D187               	goto	l12827
 22585  013008                     l12763:
 22586                           
 22587                           ; BSR set to: 1
 22588                           ;doprnt.c: 1422: {
 22589                           ;doprnt.c: 1424: if(width
 22590                           ;doprnt.c: 1426: && !(flag & 0x08)
 22591                           ;doprnt.c: 1428: )
 22592  013008  0101               	movlb	1	; () banked
 22593  01300A  514B               	movf	sprintf@width& (0+255),w,b
 22594  01300C  0101               	movlb	1	; () banked
 22595  01300E  114C               	iorwf	(sprintf@width+1)& (0+255),w,b
 22596  013010  B4D8               	btfsc	status,2,c
 22597  013012  D018               	goto	l12773
 22598                           
 22599                           ; BSR set to: 1
 22600  013014  0101               	movlb	1	; () banked
 22601  013016  B74E               	btfsc	sprintf@flag& (0+255),3,b
 22602  013018  D015               	goto	l12773
 22603  01301A                     l12767:
 22604                           
 22605                           ; BSR set to: 1
 22606                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 22607  01301A  C124  FFD9         	movff	sprintf@sp,fsr2l
 22608  01301E  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 22609  013022  0E20               	movlw	32
 22610  013024  6EDF               	movwf	indf2,c
 22611                           
 22612                           ; BSR set to: 1
 22613  013026  0101               	movlb	1	; () banked
 22614  013028  4B24               	infsnz	sprintf@sp& (0+255),f,b
 22615  01302A  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 22616                           
 22617                           ; BSR set to: 1
 22618                           ;doprnt.c: 1431: while(--width);
 22619  01302C  0101               	movlb	1	; () banked
 22620  01302E  074B               	decf	sprintf@width& (0+255),f,b
 22621  013030  A0D8               	btfss	status,0,c
 22622  013032  074C               	decf	(sprintf@width+1)& (0+255),f,b
 22623  013034  0101               	movlb	1	; () banked
 22624  013036  514B               	movf	sprintf@width& (0+255),w,b
 22625  013038  0101               	movlb	1	; () banked
 22626  01303A  114C               	iorwf	(sprintf@width+1)& (0+255),w,b
 22627  01303C  B4D8               	btfsc	status,2,c
 22628  01303E  D002               	goto	l12773
 22629  013040  D7EC               	goto	l12767
 22630                           
 22631                           ; BSR set to: 1
 22632  013042  D000               	goto	l12773
 22633  013044                     l12773:
 22634                           
 22635                           ; BSR set to: 1
 22636                           ;doprnt.c: 1438: if(flag & 0x03)
 22637  013044  0E03               	movlw	3
 22638  013046  0101               	movlb	1	; () banked
 22639  013048  154E               	andwf	sprintf@flag& (0+255),w,b
 22640  01304A  0101               	movlb	1	; () banked
 22641  01304C  6F34               	movwf	??_sprintf& (0+255),b
 22642  01304E  0E00               	movlw	0
 22643  013050  0101               	movlb	1	; () banked
 22644  013052  154F               	andwf	(sprintf@flag+1)& (0+255),w,b
 22645  013054  0101               	movlb	1	; () banked
 22646  013056  6F35               	movwf	(??_sprintf+1)& (0+255),b
 22647  013058  0101               	movlb	1	; () banked
 22648  01305A  5134               	movf	??_sprintf& (0+255),w,b
 22649  01305C  0101               	movlb	1	; () banked
 22650  01305E  1135               	iorwf	(??_sprintf+1)& (0+255),w,b
 22651  013060  B4D8               	btfsc	status,2,c
 22652  013062  D00A               	goto	l1937
 22653                           
 22654                           ; BSR set to: 1
 22655                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 22656  013064  C124  FFD9         	movff	sprintf@sp,fsr2l
 22657  013068  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 22658  01306C  0E2D               	movlw	45
 22659  01306E  D00C               	goto	L21
 22660  013070                     l12777:
 22661                           
 22662                           ; BSR set to: 1
 22663  013070  0101               	movlb	1	; () banked
 22664  013072  4B24               	infsnz	sprintf@sp& (0+255),f,b
 22665  013074  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 22666  013076  D00B               	goto	l12783
 22667  013078                     l1937:
 22668                           
 22669                           ; BSR set to: 1
 22670                           ;doprnt.c: 1443: else if(flag & 0x01)
 22671  013078  0101               	movlb	1	; () banked
 22672  01307A  A14E               	btfss	sprintf@flag& (0+255),0,b
 22673  01307C  D008               	goto	l12783
 22674                           
 22675                           ; BSR set to: 1
 22676                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 22677  01307E  C124  FFD9         	movff	sprintf@sp,fsr2l
 22678  013082  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 22679  013086  0E20               	movlw	32
 22680  013088                     L21:
 22681  013088  6EDF               	movwf	indf2,c
 22682  01308A  D7F2               	goto	l12777
 22683                           
 22684                           ; BSR set to: 1
 22685                           
 22686                           ; BSR set to: 1
 22687  01308C  D000               	goto	l12783
 22688  01308E                     l12783:
 22689                           
 22690                           ; BSR set to: 1
 22691                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 22692  01308E  0EC0               	movlw	192
 22693  013090  0101               	movlb	1	; () banked
 22694  013092  6F34               	movwf	??_sprintf& (0+255),b
 22695  013094  0E08               	movlw	8
 22696  013096  0101               	movlb	1	; () banked
 22697  013098  6F35               	movwf	(??_sprintf+1)& (0+255),b
 22698  01309A  C14E  F136         	movff	sprintf@flag,??_sprintf+2
 22699  01309E  C14F  F137         	movff	sprintf@flag+1,??_sprintf+3
 22700  0130A2  0101               	movlb	1	; () banked
 22701  0130A4  5134               	movf	??_sprintf& (0+255),w,b
 22702  0130A6  0101               	movlb	1	; () banked
 22703  0130A8  1736               	andwf	(??_sprintf+2)& (0+255),f,b
 22704  0130AA  0101               	movlb	1	; () banked
 22705  0130AC  5135               	movf	(??_sprintf+1)& (0+255),w,b
 22706  0130AE  0101               	movlb	1	; () banked
 22707  0130B0  1737               	andwf	(??_sprintf+3)& (0+255),f,b
 22708  0130B2  0E40               	movlw	64
 22709  0130B4  0101               	movlb	1	; () banked
 22710  0130B6  1936               	xorwf	(??_sprintf+2)& (0+255),w,b
 22711  0130B8  E10C               	bnz	l12789
 22712  0130BA  0E08               	movlw	8
 22713  0130BC  0101               	movlb	1	; () banked
 22714  0130BE  1937               	xorwf	(??_sprintf+3)& (0+255),w,b
 22715  0130C0  A4D8               	btfss	status,2,c
 22716  0130C2  D007               	goto	l12789
 22717                           
 22718                           ; BSR set to: 1
 22719                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 22720  0130C4  C124  FFD9         	movff	sprintf@sp,fsr2l
 22721  0130C8  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 22722  0130CC  0E30               	movlw	48
 22723  0130CE  6EDF               	movwf	indf2,c
 22724  0130D0  D11E               	goto	l12825
 22725  0130D2                     l12789:
 22726                           
 22727                           ; BSR set to: 1
 22728                           ;doprnt.c: 1450: else
 22729                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 22730  0130D2  0EC0               	movlw	192
 22731  0130D4  0101               	movlb	1	; () banked
 22732  0130D6  6F34               	movwf	??_sprintf& (0+255),b
 22733  0130D8  0E08               	movlw	8
 22734  0130DA  0101               	movlb	1	; () banked
 22735  0130DC  6F35               	movwf	(??_sprintf+1)& (0+255),b
 22736  0130DE  C14E  F136         	movff	sprintf@flag,??_sprintf+2
 22737  0130E2  C14F  F137         	movff	sprintf@flag+1,??_sprintf+3
 22738  0130E6  0101               	movlb	1	; () banked
 22739  0130E8  5134               	movf	??_sprintf& (0+255),w,b
 22740  0130EA  0101               	movlb	1	; () banked
 22741  0130EC  1736               	andwf	(??_sprintf+2)& (0+255),f,b
 22742  0130EE  0101               	movlb	1	; () banked
 22743  0130F0  5135               	movf	(??_sprintf+1)& (0+255),w,b
 22744  0130F2  0101               	movlb	1	; () banked
 22745  0130F4  1737               	andwf	(??_sprintf+3)& (0+255),f,b
 22746  0130F6  0E80               	movlw	128
 22747  0130F8  0101               	movlb	1	; () banked
 22748  0130FA  1936               	xorwf	(??_sprintf+2)& (0+255),w,b
 22749  0130FC  E104               	bnz	u15911
 22750  0130FE  0E08               	movlw	8
 22751  013100  0101               	movlb	1	; () banked
 22752  013102  1937               	xorwf	(??_sprintf+3)& (0+255),w,b
 22753  013104  A4D8               	btfss	status,2,c
 22754  013106                     u15911:
 22755  013106  D107               	goto	l12827
 22756                           
 22757                           ; BSR set to: 1
 22758                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 22759  013108  C124  FFD9         	movff	sprintf@sp,fsr2l
 22760  01310C  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 22761  013110  0E30               	movlw	48
 22762  013112  6EDF               	movwf	indf2,c
 22763                           
 22764                           ; BSR set to: 1
 22765  013114  0101               	movlb	1	; () banked
 22766  013116  4B24               	infsnz	sprintf@sp& (0+255),f,b
 22767  013118  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 22768                           
 22769                           ; BSR set to: 1
 22770                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 22771  01311A  0101               	movlb	1	; () banked
 22772  01311C  BB4E               	btfsc	sprintf@flag& (0+255),5,b
 22773  01311E  D005               	goto	l12799
 22774                           
 22775                           ; BSR set to: 1
 22776  013120  0E00               	movlw	0
 22777  013122  0101               	movlb	1	; () banked
 22778  013124  6F3E               	movwf	(_sprintf$3081+1)& (0+255),b
 22779  013126  0E78               	movlw	120
 22780  013128  D004               	goto	L22
 22781  01312A                     l12799:
 22782                           
 22783                           ; BSR set to: 1
 22784  01312A  0E00               	movlw	0
 22785  01312C  0101               	movlb	1	; () banked
 22786  01312E  6F3E               	movwf	(_sprintf$3081+1)& (0+255),b
 22787  013130  0E58               	movlw	88
 22788  013132                     L22:
 22789  013132  6F3D               	movwf	_sprintf$3081& (0+255),b
 22790  013134  D000               	goto	l12801
 22791  013136                     l12801:
 22792                           
 22793                           ; BSR set to: 1
 22794  013136  C124  FFD9         	movff	sprintf@sp,fsr2l
 22795  01313A  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 22796  01313E  C13D  FFDF         	movff	_sprintf$3081,indf2
 22797  013142  D0E5               	goto	l12825
 22798                           
 22799                           ; BSR set to: 1
 22800                           ;doprnt.c: 1466: }
 22801                           ;doprnt.c: 1469: }
 22802                           ;doprnt.c: 1474: while(prec--) {
 22803                           
 22804                           ; BSR set to: 1
 22805                           
 22806                           ; BSR set to: 1
 22807                           
 22808                           ; BSR set to: 1
 22809  013144  D0E8               	goto	l12827
 22810                           
 22811                           ; BSR set to: 1
 22812                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
 22813  013146  D0CD               	goto	l12821
 22814                           
 22815                           ; BSR set to: 1
 22816                           
 22817                           ;doprnt.c: 1478: {
 22818                           ;doprnt.c: 1483: case 0x00:
 22819  013148  D000               	goto	l12805
 22820  01314A                     l12805:
 22821                           
 22822                           ; BSR set to: 1
 22823                           ;doprnt.c: 1486: case 0xC0:
 22824                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 22825  01314A  C149  F134         	movff	sprintf@prec,??_sprintf
 22826  01314E  C14A  F135         	movff	sprintf@prec+1,??_sprintf+1
 22827  013152  0101               	movlb	1	; () banked
 22828  013154  90D8               	bcf	status,0,c
 22829  013156  3734               	rlcf	??_sprintf& (0+255),f,b
 22830  013158  3735               	rlcf	(??_sprintf+1)& (0+255),f,b
 22831  01315A  0101               	movlb	1	; () banked
 22832  01315C  90D8               	bcf	status,0,c
 22833  01315E  3734               	rlcf	??_sprintf& (0+255),f,b
 22834  013160  3735               	rlcf	(??_sprintf+1)& (0+255),f,b
 22835  013162  0EF1               	movlw	low _dpowers
 22836  013164  0101               	movlb	1	; () banked
 22837  013166  2534               	addwf	??_sprintf& (0+255),w,b
 22838  013168  6EF6               	movwf	tblptrl,c
 22839  01316A  0EEC               	movlw	high _dpowers
 22840  01316C  2135               	addwfc	(??_sprintf+1)& (0+255),w,b
 22841  01316E  6EF7               	movwf	tblptrh,c
 22842  013170                     	if	1	;There are 3 active tblptr bytes
 22843  013170  6AF8               	clrf	tblptru,c
 22844  013172  0E00               	movlw	low (__mediumconst shr (0+16))
 22845  013174  22F8               	addwfc	tblptru,f,c
 22846  013176                     	endif
 22847  013176  0009               	tblrd		*+
 22848  013178  CFF5 F112          	movff	tablat,___lldiv@divisor
 22849  01317C  0009               	tblrd		*+
 22850  01317E  CFF5 F113          	movff	tablat,___lldiv@divisor+1
 22851  013182  0009               	tblrd		*+
 22852  013184  CFF5 F114          	movff	tablat,___lldiv@divisor+2
 22853  013188  000A               	tblrd		*-
 22854  01318A  CFF5 F115          	movff	tablat,___lldiv@divisor+3
 22855  01318E  C145  F10E         	movff	sprintf@val,___lldiv@dividend
 22856  013192  C146  F10F         	movff	sprintf@val+1,___lldiv@dividend+1
 22857  013196  C147  F110         	movff	sprintf@val+2,___lldiv@dividend+2
 22858  01319A  C148  F111         	movff	sprintf@val+3,___lldiv@dividend+3
 22859  01319E  EC31  F0B4         	call	___lldiv	;wreg free
 22860  0131A2  C10E  F11B         	movff	?___lldiv,___llmod@dividend
 22861  0131A6  C10F  F11C         	movff	?___lldiv+1,___llmod@dividend+1
 22862  0131AA  C110  F11D         	movff	?___lldiv+2,___llmod@dividend+2
 22863  0131AE  C111  F11E         	movff	?___lldiv+3,___llmod@dividend+3
 22864  0131B2  0E0A               	movlw	10
 22865  0131B4  0101               	movlb	1	; () banked
 22866  0131B6  6F1F               	movwf	___llmod@divisor& (0+255),b
 22867  0131B8  0E00               	movlw	0
 22868  0131BA  6F20               	movwf	(___llmod@divisor+1)& (0+255),b
 22869  0131BC  0E00               	movlw	0
 22870  0131BE  6F21               	movwf	(___llmod@divisor+2)& (0+255),b
 22871  0131C0  0E00               	movlw	0
 22872  0131C2  6F22               	movwf	(___llmod@divisor+3)& (0+255),b
 22873  0131C4  ECB1  F0B7         	call	___llmod	;wreg free
 22874  0131C8  0101               	movlb	1	; () banked
 22875  0131CA  511B               	movf	?___llmod& (0+255),w,b
 22876  0131CC  D086               	goto	L23
 22877  0131CE                     l12807:
 22878                           
 22879                           ; BSR set to: 1
 22880                           ;doprnt.c: 1499: {
 22881                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 22882  0131CE  C145  F10E         	movff	sprintf@val,___lldiv@dividend
 22883  0131D2  C146  F10F         	movff	sprintf@val+1,___lldiv@dividend+1
 22884  0131D6  C147  F110         	movff	sprintf@val+2,___lldiv@dividend+2
 22885  0131DA  C148  F111         	movff	sprintf@val+3,___lldiv@dividend+3
 22886  0131DE  C149  F134         	movff	sprintf@prec,??_sprintf
 22887  0131E2  C14A  F135         	movff	sprintf@prec+1,??_sprintf+1
 22888  0131E6  0101               	movlb	1	; () banked
 22889  0131E8  90D8               	bcf	status,0,c
 22890  0131EA  3734               	rlcf	??_sprintf& (0+255),f,b
 22891  0131EC  3735               	rlcf	(??_sprintf+1)& (0+255),f,b
 22892  0131EE  0101               	movlb	1	; () banked
 22893  0131F0  90D8               	bcf	status,0,c
 22894  0131F2  3734               	rlcf	??_sprintf& (0+255),f,b
 22895  0131F4  3735               	rlcf	(??_sprintf+1)& (0+255),f,b
 22896  0131F6  0E19               	movlw	low _hexpowers
 22897  0131F8  0101               	movlb	1	; () banked
 22898  0131FA  2534               	addwf	??_sprintf& (0+255),w,b
 22899  0131FC  6EF6               	movwf	tblptrl,c
 22900  0131FE  0EED               	movlw	high _hexpowers
 22901  013200  2135               	addwfc	(??_sprintf+1)& (0+255),w,b
 22902  013202  6EF7               	movwf	tblptrh,c
 22903  013204                     	if	1	;There are 3 active tblptr bytes
 22904  013204  6AF8               	clrf	tblptru,c
 22905  013206  0E00               	movlw	low (__mediumconst shr (0+16))
 22906  013208  22F8               	addwfc	tblptru,f,c
 22907  01320A                     	endif
 22908  01320A  0009               	tblrd		*+
 22909  01320C  CFF5 F112          	movff	tablat,___lldiv@divisor
 22910  013210  0009               	tblrd		*+
 22911  013212  CFF5 F113          	movff	tablat,___lldiv@divisor+1
 22912  013216  0009               	tblrd		*+
 22913  013218  CFF5 F114          	movff	tablat,___lldiv@divisor+2
 22914  01321C  000A               	tblrd		*-
 22915  01321E  CFF5 F115          	movff	tablat,___lldiv@divisor+3
 22916  013222  EC31  F0B4         	call	___lldiv	;wreg free
 22917  013226  0101               	movlb	1	; () banked
 22918  013228  510E               	movf	?___lldiv& (0+255),w,b
 22919  01322A  0B0F               	andlw	15
 22920  01322C  0101               	movlb	1	; () banked
 22921  01322E  6F38               	movwf	sprintf@idx& (0+255),b
 22922                           
 22923                           ; BSR set to: 1
 22924                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 22925  013230  0101               	movlb	1	; () banked
 22926  013232  BB4E               	btfsc	sprintf@flag& (0+255),5,b
 22927  013234  D005               	goto	l12813
 22928                           
 22929                           ; BSR set to: 1
 22930  013236  0ED9               	movlw	low STR_326
 22931  013238  0101               	movlb	1	; () banked
 22932  01323A  6F3F               	movwf	_sprintf$3087& (0+255),b
 22933  01323C  0EF8               	movlw	high STR_326
 22934  01323E  D004               	goto	L24
 22935  013240                     l12813:
 22936                           
 22937                           ; BSR set to: 1
 22938  013240  0EC8               	movlw	low STR_325
 22939  013242  0101               	movlb	1	; () banked
 22940  013244  6F3F               	movwf	_sprintf$3087& (0+255),b
 22941  013246  0EF8               	movlw	high STR_325
 22942  013248                     L24:
 22943  013248  0101               	movlb	1	; () banked
 22944  01324A  6F40               	movwf	(_sprintf$3087+1)& (0+255),b
 22945  01324C  D000               	goto	l12815
 22946  01324E                     l12815:
 22947                           
 22948                           ; BSR set to: 1
 22949  01324E  0101               	movlb	1	; () banked
 22950  013250  5138               	movf	sprintf@idx& (0+255),w,b
 22951  013252  0D01               	mullw	1
 22952  013254  C13F  F134         	movff	_sprintf$3087,??_sprintf
 22953  013258  C140  F135         	movff	_sprintf$3087+1,??_sprintf+1
 22954  01325C  50F3               	movf	prodl,w,c
 22955  01325E  0101               	movlb	1	; () banked
 22956  013260  2734               	addwf	??_sprintf& (0+255),f,b
 22957  013262  50F4               	movf	prodh,w,c
 22958  013264  0101               	movlb	1	; () banked
 22959  013266  2335               	addwfc	(??_sprintf+1)& (0+255),f,b
 22960  013268  C134  FFF6         	movff	??_sprintf,tblptrl
 22961  01326C  C135  FFF7         	movff	??_sprintf+1,tblptrh
 22962  013270                     	if	0	;tblptru may be non-zero
 22963  013270                     	endif
 22964  013270                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22965  013270  0E00               	movlw	low (__mediumconst shr (0+16))
 22966  013272  6EF8               	movwf	tblptru,c
 22967  013274                     	endif
 22968  013274  0008               	tblrd		*
 22969  013276  CFF5 F14D          	movff	tablat,sprintf@c
 22970                           
 22971                           ;doprnt.c: 1508: }
 22972                           ;doprnt.c: 1510: break;
 22973  01327A  D043               	goto	l12823
 22974  01327C                     l12817:
 22975                           
 22976                           ; BSR set to: 1
 22977                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 22978  01327C  C145  F10E         	movff	sprintf@val,___lldiv@dividend
 22979  013280  C146  F10F         	movff	sprintf@val+1,___lldiv@dividend+1
 22980  013284  C147  F110         	movff	sprintf@val+2,___lldiv@dividend+2
 22981  013288  C148  F111         	movff	sprintf@val+3,___lldiv@dividend+3
 22982  01328C  C149  F134         	movff	sprintf@prec,??_sprintf
 22983  013290  C14A  F135         	movff	sprintf@prec+1,??_sprintf+1
 22984  013294  0101               	movlb	1	; () banked
 22985  013296  90D8               	bcf	status,0,c
 22986  013298  3734               	rlcf	??_sprintf& (0+255),f,b
 22987  01329A  3735               	rlcf	(??_sprintf+1)& (0+255),f,b
 22988  01329C  0101               	movlb	1	; () banked
 22989  01329E  90D8               	bcf	status,0,c
 22990  0132A0  3734               	rlcf	??_sprintf& (0+255),f,b
 22991  0132A2  3735               	rlcf	(??_sprintf+1)& (0+255),f,b
 22992  0132A4  0EC1               	movlw	low _octpowers
 22993  0132A6  0101               	movlb	1	; () banked
 22994  0132A8  2534               	addwf	??_sprintf& (0+255),w,b
 22995  0132AA  6EF6               	movwf	tblptrl,c
 22996  0132AC  0EEC               	movlw	high _octpowers
 22997  0132AE  2135               	addwfc	(??_sprintf+1)& (0+255),w,b
 22998  0132B0  6EF7               	movwf	tblptrh,c
 22999  0132B2                     	if	1	;There are 3 active tblptr bytes
 23000  0132B2  6AF8               	clrf	tblptru,c
 23001  0132B4  0E00               	movlw	low (__mediumconst shr (0+16))
 23002  0132B6  22F8               	addwfc	tblptru,f,c
 23003  0132B8                     	endif
 23004  0132B8  0009               	tblrd		*+
 23005  0132BA  CFF5 F112          	movff	tablat,___lldiv@divisor
 23006  0132BE  0009               	tblrd		*+
 23007  0132C0  CFF5 F113          	movff	tablat,___lldiv@divisor+1
 23008  0132C4  0009               	tblrd		*+
 23009  0132C6  CFF5 F114          	movff	tablat,___lldiv@divisor+2
 23010  0132CA  000A               	tblrd		*-
 23011  0132CC  CFF5 F115          	movff	tablat,___lldiv@divisor+3
 23012  0132D0  EC31  F0B4         	call	___lldiv	;wreg free
 23013  0132D4  0101               	movlb	1	; () banked
 23014  0132D6  510E               	movf	?___lldiv& (0+255),w,b
 23015  0132D8  0B07               	andlw	7
 23016  0132DA                     L23:
 23017  0132DA  0F30               	addlw	48
 23018  0132DC  0101               	movlb	1	; () banked
 23019  0132DE  6F4D               	movwf	sprintf@c& (0+255),b
 23020                           
 23021                           ; BSR set to: 1
 23022                           ;doprnt.c: 1523: }
 23023                           
 23024                           ;doprnt.c: 1520: break;
 23025  0132E0  D010               	goto	l12823
 23026  0132E2                     l12821:
 23027                           
 23028                           ; BSR set to: 1
 23029  0132E2  0101               	movlb	1	; () banked
 23030  0132E4  514E               	movf	sprintf@flag& (0+255),w,b
 23031  0132E6  0BC0               	andlw	192
 23032                           
 23033                           ; Switch size 1, requested type "space"
 23034                           ; Number of cases is 4, Range of values is 0 to 192
 23035                           ; switch strategies available:
 23036                           ; Name         Instructions Cycles
 23037                           ; simple_byte           13     7 (average)
 23038                           ;	Chosen strategy is simple_byte
 23039  0132E8  0A00               	xorlw	0	; case 0
 23040  0132EA  B4D8               	btfsc	status,2,c
 23041  0132EC  D72E               	goto	l12805
 23042  0132EE  0A40               	xorlw	64	; case 64
 23043  0132F0  B4D8               	btfsc	status,2,c
 23044  0132F2  D7C4               	goto	l12817
 23045  0132F4  0AC0               	xorlw	192	; case 128
 23046  0132F6  B4D8               	btfsc	status,2,c
 23047  0132F8  D76A               	goto	l12807
 23048  0132FA  0A40               	xorlw	64	; case 192
 23049  0132FC  B4D8               	btfsc	status,2,c
 23050  0132FE  D725               	goto	l12805
 23051  013300  D000               	goto	l12823
 23052  013302                     l12823:
 23053                           
 23054                           ; BSR set to: 1
 23055                           ;doprnt.c: 1524: ((*sp++ = (c)));
 23056  013302  C124  FFD9         	movff	sprintf@sp,fsr2l
 23057  013306  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 23058  01330A  C14D  FFDF         	movff	sprintf@c,indf2
 23059  01330E                     l12825:
 23060                           
 23061                           ; BSR set to: 1
 23062  01330E  0101               	movlb	1	; () banked
 23063  013310  4B24               	infsnz	sprintf@sp& (0+255),f,b
 23064  013312  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 23065  013314  D000               	goto	l12827
 23066  013316                     l12827:
 23067                           
 23068                           ; BSR set to: 1
 23069  013316  0101               	movlb	1	; () banked
 23070  013318  0749               	decf	sprintf@prec& (0+255),f,b
 23071  01331A  A0D8               	btfss	status,0,c
 23072  01331C  074A               	decf	(sprintf@prec+1)& (0+255),f,b
 23073  01331E  0101               	movlb	1	; () banked
 23074  013320  2949               	incf	sprintf@prec& (0+255),w,b
 23075  013322  E1DF               	bnz	l12821
 23076  013324  0101               	movlb	1	; () banked
 23077  013326  294A               	incf	(sprintf@prec+1)& (0+255),w,b
 23078  013328  A4D8               	btfss	status,2,c
 23079  01332A  D7DB               	goto	l12821
 23080                           
 23081                           ; BSR set to: 1
 23082                           ;doprnt.c: 1525: }
 23083                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 23084  01332C  0101               	movlb	1	; () banked
 23085  01332E  A74E               	btfss	sprintf@flag& (0+255),3,b
 23086  013330  D021               	goto	l12837
 23087                           
 23088                           ; BSR set to: 1
 23089  013332  0101               	movlb	1	; () banked
 23090  013334  BF4C               	btfsc	(sprintf@width+1)& (0+255),7,b
 23091  013336  D01E               	goto	l12837
 23092  013338  0101               	movlb	1	; () banked
 23093  01333A  514C               	movf	(sprintf@width+1)& (0+255),w,b
 23094  01333C  E106               	bnz	l12831
 23095  01333E  0101               	movlb	1	; () banked
 23096  013340  054B               	decf	sprintf@width& (0+255),w,b
 23097  013342  B0D8               	btfsc	status,0,c
 23098  013344  D002               	goto	l12831
 23099  013346  D016               	goto	l12837
 23100  013348  D000               	goto	l12831
 23101  01334A                     l12831:
 23102                           
 23103                           ; BSR set to: 1
 23104                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 23105  01334A  C124  FFD9         	movff	sprintf@sp,fsr2l
 23106  01334E  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 23107  013352  0E20               	movlw	32
 23108  013354  6EDF               	movwf	indf2,c
 23109                           
 23110                           ; BSR set to: 1
 23111  013356  0101               	movlb	1	; () banked
 23112  013358  4B24               	infsnz	sprintf@sp& (0+255),f,b
 23113  01335A  2B25               	incf	(sprintf@sp+1)& (0+255),f,b
 23114                           
 23115                           ; BSR set to: 1
 23116                           ;doprnt.c: 1531: while(--width);
 23117  01335C  0101               	movlb	1	; () banked
 23118  01335E  074B               	decf	sprintf@width& (0+255),f,b
 23119  013360  A0D8               	btfss	status,0,c
 23120  013362  074C               	decf	(sprintf@width+1)& (0+255),f,b
 23121  013364  0101               	movlb	1	; () banked
 23122  013366  514B               	movf	sprintf@width& (0+255),w,b
 23123  013368  0101               	movlb	1	; () banked
 23124  01336A  114C               	iorwf	(sprintf@width+1)& (0+255),w,b
 23125  01336C  B4D8               	btfsc	status,2,c
 23126  01336E  D002               	goto	l12837
 23127  013370  D7EC               	goto	l12831
 23128                           
 23129                           ; BSR set to: 1
 23130                           
 23131                           ; BSR set to: 1
 23132  013372  D000               	goto	l12837
 23133  013374                     l12837:
 23134                           
 23135                           ; BSR set to: 1
 23136  013374  C126  FFF6         	movff	sprintf@f,tblptrl
 23137  013378  C127  FFF7         	movff	sprintf@f+1,tblptrh
 23138  01337C  0101               	movlb	1	; () banked
 23139  01337E  4B26               	infsnz	sprintf@f& (0+255),f,b
 23140  013380  2B27               	incf	(sprintf@f+1)& (0+255),f,b
 23141  013382                     	if	0	;tblptru may be non-zero
 23142  013382                     	endif
 23143  013382                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23144  013382  0E00               	movlw	low (__mediumconst shr (0+16))
 23145  013384  6EF8               	movwf	tblptru,c
 23146  013386                     	endif
 23147  013386  0008               	tblrd		*
 23148  013388  CFF5 F14D          	movff	tablat,sprintf@c
 23149  01338C  0101               	movlb	1	; () banked
 23150  01338E  514D               	movf	sprintf@c& (0+255),w,b
 23151  013390  B4D8               	btfsc	status,2,c
 23152  013392  D003               	goto	l12839
 23153  013394  EF8E  F093         	goto	l12485
 23154                           
 23155                           ; BSR set to: 1
 23156  013398  D000               	goto	l12839
 23157  01339A                     l12839:
 23158                           
 23159                           ; BSR set to: 1
 23160                           ;doprnt.c: 1538: *sp = 0;
 23161  01339A  C124  FFD9         	movff	sprintf@sp,fsr2l
 23162  01339E  C125  FFDA         	movff	sprintf@sp+1,fsr2h
 23163  0133A2  0E00               	movlw	0
 23164  0133A4  6EDF               	movwf	indf2,c
 23165  0133A6  0012               	return	
 23166                           
 23167                           ; BSR set to: 1
 23168                           
 23169                           ; BSR set to: 1
 23170                           ;doprnt.c: 1540: return 0;
 23171                           ;	Return value of _sprintf is never used
 23172  0133A8  0012               	return		;funcret
 23173  0133AA                     __end_of_sprintf:
 23174                           	opt stack 0
 23175                           tblptru	equ	0xFF8
 23176                           tblptrh	equ	0xFF7
 23177                           tblptrl	equ	0xFF6
 23178                           tablat	equ	0xFF5
 23179                           prodh	equ	0xFF4
 23180                           prodl	equ	0xFF3
 23181                           intcon	equ	0xFF2
 23182                           intcon2	equ	0xFF1
 23183                           postinc0	equ	0xFEE
 23184                           plusw0	equ	0xFEB
 23185                           wreg	equ	0xFE8
 23186                           indf1	equ	0xFE7
 23187                           postdec1	equ	0xFE5
 23188                           fsr1h	equ	0xFE2
 23189                           fsr1l	equ	0xFE1
 23190                           indf2	equ	0xFDF
 23191                           postinc2	equ	0xFDE
 23192                           postdec2	equ	0xFDD
 23193                           plusw2	equ	0xFDB
 23194                           fsr2h	equ	0xFDA
 23195                           fsr2l	equ	0xFD9
 23196                           status	equ	0xFD8
 23197                           
 23198 ;; *************** function _isdigit *****************
 23199 ;; Defined at:
 23200 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 23201 ;; Parameters:    Size  Location     Type
 23202 ;;  c               1    wreg     unsigned char 
 23203 ;; Auto vars:     Size  Location     Type
 23204 ;;  c               1   16[BANK1 ] unsigned char 
 23205 ;; Return value:  Size  Location     Type
 23206 ;;		None               void
 23207 ;; Registers used:
 23208 ;;		wreg, status,2, status,0
 23209 ;; Tracked objects:
 23210 ;;		On entry : 0/0
 23211 ;;		On exit  : 0/0
 23212 ;;		Unchanged: 0/0
 23213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23215 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23216 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23217 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 23218 ;;Total ram usage:        3 bytes
 23219 ;; Hardware stack levels used:    1
 23220 ;; Hardware stack levels required when called:    7
 23221 ;; This function calls:
 23222 ;;		Nothing
 23223 ;; This function is called by:
 23224 ;;		_sprintf
 23225 ;; This function uses a non-reentrant model
 23226 ;;
 23227                           
 23228                           	psect	text46
 23229  000C38                     __ptext46:
 23230                           	opt stack 0
 23231  000C38                     _isdigit:
 23232                           	opt stack 21
 23233                           
 23234                           ; BSR set to: 1
 23235                           ;incstack = 0
 23236                           ;isdigit@c stored from wreg
 23237  000C38  0101               	movlb	1	; () banked
 23238  000C3A  6F10               	movwf	isdigit@c& (0+255),b
 23239                           
 23240                           ; BSR set to: 1
 23241  000C3C  0E00               	movlw	0
 23242  000C3E  0101               	movlb	1	; () banked
 23243  000C40  6F0F               	movwf	_isdigit$3366& (0+255),b
 23244                           
 23245                           ; BSR set to: 1
 23246  000C42  0E3A               	movlw	58
 23247  000C44  0101               	movlb	1	; () banked
 23248  000C46  6110               	cpfslt	isdigit@c& (0+255),b
 23249  000C48  D008               	goto	l12287
 23250                           
 23251                           ; BSR set to: 1
 23252  000C4A  0E2F               	movlw	47
 23253  000C4C  0101               	movlb	1	; () banked
 23254  000C4E  6510               	cpfsgt	isdigit@c& (0+255),b
 23255  000C50  D004               	goto	l12287
 23256                           
 23257                           ; BSR set to: 1
 23258  000C52  0E01               	movlw	1
 23259  000C54  0101               	movlb	1	; () banked
 23260  000C56  6F0F               	movwf	_isdigit$3366& (0+255),b
 23261  000C58  D000               	goto	l12287
 23262  000C5A                     l12287:
 23263                           
 23264                           ; BSR set to: 1
 23265  000C5A  C10F  F10E         	movff	_isdigit$3366,??_isdigit
 23266  000C5E  0101               	movlb	1	; () banked
 23267  000C60  310E               	rrcf	??_isdigit& (0+255),w,b
 23268  000C62  0012               	return	
 23269                           
 23270                           ; BSR set to: 1
 23271                           
 23272                           ; BSR set to: 1
 23273  000C64  0012               	return		;funcret
 23274  000C66                     __end_of_isdigit:
 23275                           	opt stack 0
 23276                           tblptru	equ	0xFF8
 23277                           tblptrh	equ	0xFF7
 23278                           tblptrl	equ	0xFF6
 23279                           tablat	equ	0xFF5
 23280                           prodh	equ	0xFF4
 23281                           prodl	equ	0xFF3
 23282                           intcon	equ	0xFF2
 23283                           intcon2	equ	0xFF1
 23284                           postinc0	equ	0xFEE
 23285                           plusw0	equ	0xFEB
 23286                           wreg	equ	0xFE8
 23287                           indf1	equ	0xFE7
 23288                           postdec1	equ	0xFE5
 23289                           fsr1h	equ	0xFE2
 23290                           fsr1l	equ	0xFE1
 23291                           indf2	equ	0xFDF
 23292                           postinc2	equ	0xFDE
 23293                           postdec2	equ	0xFDD
 23294                           plusw2	equ	0xFDB
 23295                           fsr2h	equ	0xFDA
 23296                           fsr2l	equ	0xFD9
 23297                           status	equ	0xFD8
 23298                           
 23299 ;; *************** function ___wmul *****************
 23300 ;; Defined at:
 23301 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 23302 ;; Parameters:    Size  Location     Type
 23303 ;;  multiplier      2   14[BANK1 ] unsigned int 
 23304 ;;  multiplicand    2   16[BANK1 ] unsigned int 
 23305 ;; Auto vars:     Size  Location     Type
 23306 ;;  product         2   18[BANK1 ] unsigned int 
 23307 ;; Return value:  Size  Location     Type
 23308 ;;                  2   14[BANK1 ] unsigned int 
 23309 ;; Registers used:
 23310 ;;		wreg, status,2, status,0, prodl, prodh
 23311 ;; Tracked objects:
 23312 ;;		On entry : 0/0
 23313 ;;		On exit  : 0/0
 23314 ;;		Unchanged: 0/0
 23315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23316 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23317 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23319 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 23320 ;;Total ram usage:        6 bytes
 23321 ;; Hardware stack levels used:    1
 23322 ;; Hardware stack levels required when called:    7
 23323 ;; This function calls:
 23324 ;;		Nothing
 23325 ;; This function is called by:
 23326 ;;		_SetFreq
 23327 ;;		_sprintf
 23328 ;; This function uses a non-reentrant model
 23329 ;;
 23330                           
 23331                           	psect	text47
 23332  000A6A                     __ptext47:
 23333                           	opt stack 0
 23334  000A6A                     ___wmul:
 23335                           	opt stack 21
 23336                           
 23337                           ; BSR set to: 1
 23338                           ;incstack = 0
 23339  000A6A  0101               	movlb	1	; () banked
 23340  000A6C  510E               	movf	___wmul@multiplier& (0+255),w,b
 23341  000A6E  0101               	movlb	1	; () banked
 23342  000A70  0310               	mulwf	___wmul@multiplicand& (0+255),b
 23343  000A72  CFF3 F112          	movff	prodl,___wmul@product
 23344  000A76  CFF4 F113          	movff	prodh,___wmul@product+1
 23345  000A7A  0101               	movlb	1	; () banked
 23346  000A7C  510E               	movf	___wmul@multiplier& (0+255),w,b
 23347  000A7E  0101               	movlb	1	; () banked
 23348  000A80  0311               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 23349  000A82  50F3               	movf	prodl,w,c
 23350  000A84  0101               	movlb	1	; () banked
 23351  000A86  2713               	addwf	(___wmul@product+1)& (0+255),f,b
 23352  000A88  0101               	movlb	1	; () banked
 23353  000A8A  510F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 23354  000A8C  0101               	movlb	1	; () banked
 23355  000A8E  0310               	mulwf	___wmul@multiplicand& (0+255),b
 23356  000A90  50F3               	movf	prodl,w,c
 23357  000A92  0101               	movlb	1	; () banked
 23358  000A94  2713               	addwf	(___wmul@product+1)& (0+255),f,b
 23359                           
 23360                           ; BSR set to: 1
 23361  000A96  C112  F10E         	movff	___wmul@product,?___wmul
 23362  000A9A  C113  F10F         	movff	___wmul@product+1,?___wmul+1
 23363  000A9E  0012               	return	
 23364                           
 23365                           ; BSR set to: 1
 23366                           
 23367                           ; BSR set to: 1
 23368  000AA0  0012               	return		;funcret
 23369  000AA2                     __end_of___wmul:
 23370                           	opt stack 0
 23371                           tblptru	equ	0xFF8
 23372                           tblptrh	equ	0xFF7
 23373                           tblptrl	equ	0xFF6
 23374                           tablat	equ	0xFF5
 23375                           prodh	equ	0xFF4
 23376                           prodl	equ	0xFF3
 23377                           intcon	equ	0xFF2
 23378                           intcon2	equ	0xFF1
 23379                           postinc0	equ	0xFEE
 23380                           plusw0	equ	0xFEB
 23381                           wreg	equ	0xFE8
 23382                           indf1	equ	0xFE7
 23383                           postdec1	equ	0xFE5
 23384                           fsr1h	equ	0xFE2
 23385                           fsr1l	equ	0xFE1
 23386                           indf2	equ	0xFDF
 23387                           postinc2	equ	0xFDE
 23388                           postdec2	equ	0xFDD
 23389                           plusw2	equ	0xFDB
 23390                           fsr2h	equ	0xFDA
 23391                           fsr2l	equ	0xFD9
 23392                           status	equ	0xFD8
 23393                           
 23394 ;; *************** function ___llmod *****************
 23395 ;; Defined at:
 23396 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 23397 ;; Parameters:    Size  Location     Type
 23398 ;;  dividend        4   27[BANK1 ] unsigned long 
 23399 ;;  divisor         4   31[BANK1 ] unsigned long 
 23400 ;; Auto vars:     Size  Location     Type
 23401 ;;  counter         1   35[BANK1 ] unsigned char 
 23402 ;; Return value:  Size  Location     Type
 23403 ;;                  4   27[BANK1 ] unsigned long 
 23404 ;; Registers used:
 23405 ;;		wreg, status,2, status,0
 23406 ;; Tracked objects:
 23407 ;;		On entry : 0/0
 23408 ;;		On exit  : 0/0
 23409 ;;		Unchanged: 0/0
 23410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23411 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 23412 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23414 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 23415 ;;Total ram usage:        9 bytes
 23416 ;; Hardware stack levels used:    1
 23417 ;; Hardware stack levels required when called:    7
 23418 ;; This function calls:
 23419 ;;		Nothing
 23420 ;; This function is called by:
 23421 ;;		_sprintf
 23422 ;; This function uses a non-reentrant model
 23423 ;;
 23424                           
 23425                           	psect	text48
 23426  016F62                     __ptext48:
 23427                           	opt stack 0
 23428  016F62                     ___llmod:
 23429                           	opt stack 21
 23430                           
 23431                           ; BSR set to: 1
 23432                           ;incstack = 0
 23433  016F62  0101               	movlb	1	; () banked
 23434  016F64  511F               	movf	___llmod@divisor& (0+255),w,b
 23435  016F66  0101               	movlb	1	; () banked
 23436  016F68  1120               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 23437  016F6A  0101               	movlb	1	; () banked
 23438  016F6C  1121               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 23439  016F6E  0101               	movlb	1	; () banked
 23440  016F70  1122               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 23441  016F72  B4D8               	btfsc	status,2,c
 23442  016F74  D03F               	goto	l2439
 23443                           
 23444                           ; BSR set to: 1
 23445  016F76  0E01               	movlw	1
 23446  016F78  0101               	movlb	1	; () banked
 23447  016F7A  6F23               	movwf	___llmod@counter& (0+255),b
 23448  016F7C  D009               	goto	l12361
 23449  016F7E                     l12359:
 23450                           
 23451                           ; BSR set to: 1
 23452  016F7E  0101               	movlb	1	; () banked
 23453  016F80  90D8               	bcf	status,0,c
 23454  016F82  371F               	rlcf	___llmod@divisor& (0+255),f,b
 23455  016F84  3720               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 23456  016F86  3721               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 23457  016F88  3722               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 23458  016F8A  0101               	movlb	1	; () banked
 23459  016F8C  2B23               	incf	___llmod@counter& (0+255),f,b
 23460  016F8E  D000               	goto	l12361
 23461  016F90                     l12361:
 23462                           
 23463                           ; BSR set to: 1
 23464  016F90  0101               	movlb	1	; () banked
 23465  016F92  BF22               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 23466  016F94  D002               	goto	l12363
 23467  016F96  D7F3               	goto	l12359
 23468                           
 23469                           ; BSR set to: 1
 23470  016F98  D000               	goto	l12363
 23471  016F9A                     l12363:
 23472                           
 23473                           ; BSR set to: 1
 23474  016F9A  0101               	movlb	1	; () banked
 23475  016F9C  511F               	movf	___llmod@divisor& (0+255),w,b
 23476  016F9E  0101               	movlb	1	; () banked
 23477  016FA0  5D1B               	subwf	___llmod@dividend& (0+255),w,b
 23478  016FA2  0101               	movlb	1	; () banked
 23479  016FA4  5120               	movf	(___llmod@divisor+1)& (0+255),w,b
 23480  016FA6  0101               	movlb	1	; () banked
 23481  016FA8  591C               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 23482  016FAA  0101               	movlb	1	; () banked
 23483  016FAC  5121               	movf	(___llmod@divisor+2)& (0+255),w,b
 23484  016FAE  0101               	movlb	1	; () banked
 23485  016FB0  591D               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 23486  016FB2  0101               	movlb	1	; () banked
 23487  016FB4  5122               	movf	(___llmod@divisor+3)& (0+255),w,b
 23488  016FB6  0101               	movlb	1	; () banked
 23489  016FB8  591E               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 23490  016FBA  A0D8               	btfss	status,0,c
 23491  016FBC  D011               	goto	l12367
 23492                           
 23493                           ; BSR set to: 1
 23494  016FBE  0101               	movlb	1	; () banked
 23495  016FC0  511F               	movf	___llmod@divisor& (0+255),w,b
 23496  016FC2  0101               	movlb	1	; () banked
 23497  016FC4  5F1B               	subwf	___llmod@dividend& (0+255),f,b
 23498  016FC6  0101               	movlb	1	; () banked
 23499  016FC8  5120               	movf	(___llmod@divisor+1)& (0+255),w,b
 23500  016FCA  0101               	movlb	1	; () banked
 23501  016FCC  5B1C               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 23502  016FCE  0101               	movlb	1	; () banked
 23503  016FD0  5121               	movf	(___llmod@divisor+2)& (0+255),w,b
 23504  016FD2  0101               	movlb	1	; () banked
 23505  016FD4  5B1D               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 23506  016FD6  0101               	movlb	1	; () banked
 23507  016FD8  5122               	movf	(___llmod@divisor+3)& (0+255),w,b
 23508  016FDA  0101               	movlb	1	; () banked
 23509  016FDC  5B1E               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 23510  016FDE  D000               	goto	l12367
 23511  016FE0                     l12367:
 23512                           
 23513                           ; BSR set to: 1
 23514  016FE0  0101               	movlb	1	; () banked
 23515  016FE2  90D8               	bcf	status,0,c
 23516  016FE4  3322               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 23517  016FE6  3321               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 23518  016FE8  3320               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 23519  016FEA  331F               	rrcf	___llmod@divisor& (0+255),f,b
 23520                           
 23521                           ; BSR set to: 1
 23522  016FEC  0101               	movlb	1	; () banked
 23523  016FEE  2F23               	decfsz	___llmod@counter& (0+255),f,b
 23524  016FF0  D7D4               	goto	l12363
 23525  016FF2  D000               	goto	l2439
 23526  016FF4                     l2439:
 23527                           
 23528                           ; BSR set to: 1
 23529  016FF4  C11B  F11B         	movff	___llmod@dividend,?___llmod
 23530  016FF8  C11C  F11C         	movff	___llmod@dividend+1,?___llmod+1
 23531  016FFC  C11D  F11D         	movff	___llmod@dividend+2,?___llmod+2
 23532  017000  C11E  F11E         	movff	___llmod@dividend+3,?___llmod+3
 23533                           
 23534                           ; BSR set to: 1
 23535  017004  0012               	return		;funcret
 23536  017006                     __end_of___llmod:
 23537                           	opt stack 0
 23538                           tblptru	equ	0xFF8
 23539                           tblptrh	equ	0xFF7
 23540                           tblptrl	equ	0xFF6
 23541                           tablat	equ	0xFF5
 23542                           prodh	equ	0xFF4
 23543                           prodl	equ	0xFF3
 23544                           intcon	equ	0xFF2
 23545                           intcon2	equ	0xFF1
 23546                           postinc0	equ	0xFEE
 23547                           plusw0	equ	0xFEB
 23548                           wreg	equ	0xFE8
 23549                           indf1	equ	0xFE7
 23550                           postdec1	equ	0xFE5
 23551                           fsr1h	equ	0xFE2
 23552                           fsr1l	equ	0xFE1
 23553                           indf2	equ	0xFDF
 23554                           postinc2	equ	0xFDE
 23555                           postdec2	equ	0xFDD
 23556                           plusw2	equ	0xFDB
 23557                           fsr2h	equ	0xFDA
 23558                           fsr2l	equ	0xFD9
 23559                           status	equ	0xFD8
 23560                           
 23561 ;; *************** function _UARTstringWAIT *****************
 23562 ;; Defined at:
 23563 ;;		line 292 in file "UART.c"
 23564 ;; Parameters:    Size  Location     Type
 23565 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 23566 ;;		 -> STR_34(18), STR_33(17), STR_32(24), STR_31(23), 
 23567 ;; Auto vars:     Size  Location     Type
 23568 ;;		None
 23569 ;; Return value:  Size  Location     Type
 23570 ;;		None               void
 23571 ;; Registers used:
 23572 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23573 ;; Tracked objects:
 23574 ;;		On entry : 0/0
 23575 ;;		On exit  : 0/0
 23576 ;;		Unchanged: 0/0
 23577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23578 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23581 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23582 ;;Total ram usage:        2 bytes
 23583 ;; Hardware stack levels used:    1
 23584 ;; Hardware stack levels required when called:    9
 23585 ;; This function calls:
 23586 ;;		_UARTchar
 23587 ;;		_delayUS
 23588 ;; This function is called by:
 23589 ;;		_SetBaud
 23590 ;; This function uses a non-reentrant model
 23591 ;;
 23592                           
 23593                           	psect	text49
 23594  0178F4                     __ptext49:
 23595                           	opt stack 0
 23596  0178F4                     _UARTstringWAIT:
 23597                           	opt stack 19
 23598  0178F4                     
 23599                           ;UART.c: 295: {
 23600                           ;UART.c: 296: delayUS(5000);
 23601  0178F4  0E88               	movlw	136
 23602  0178F6  0101               	movlb	1	; () banked
 23603  0178F8  6F0E               	movwf	delayUS@US& (0+255),b
 23604  0178FA  0E13               	movlw	19
 23605  0178FC  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 23606  0178FE  0E00               	movlw	0
 23607  017900  6F10               	movwf	(delayUS@US+2)& (0+255),b
 23608  017902  0E00               	movlw	0
 23609  017904  6F11               	movwf	(delayUS@US+3)& (0+255),b
 23610  017906  EC58  F0BD         	call	_delayUS	;wreg free
 23611                           
 23612                           ;UART.c: 297: if(*data != 0)
 23613  01790A  C119  FFF6         	movff	UARTstringWAIT@data,tblptrl
 23614  01790E  C11A  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 23615  017912                     	if	0	;tblptru may be non-zero
 23616  017912                     	endif
 23617  017912                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23618  017912  0E00               	movlw	low (__mediumconst shr (0+16))
 23619  017914  6EF8               	movwf	tblptru,c
 23620  017916                     	endif
 23621  017916  0008               	tblrd		*
 23622  017918  50F5               	movf	tablat,w,c
 23623  01791A  0900               	iorlw	0
 23624  01791C  B4D8               	btfsc	status,2,c
 23625  01791E  D015               	goto	l12481
 23626                           
 23627                           ;UART.c: 298: {
 23628                           ;UART.c: 299: UARTchar((unsigned char) *data, 0, 0);
 23629  017920  0E00               	movlw	0
 23630  017922  0101               	movlb	1	; () banked
 23631  017924  6F15               	movwf	UARTchar@NinethBit_override& (0+255),b
 23632  017926  0E00               	movlw	0
 23633  017928  0101               	movlb	1	; () banked
 23634  01792A  6F16               	movwf	UARTchar@NinethBit_override_data& (0+255),b
 23635  01792C  C119  FFF6         	movff	UARTstringWAIT@data,tblptrl
 23636  017930  C11A  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 23637  017934                     	if	0	;tblptru may be non-zero
 23638  017934                     	endif
 23639  017934                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23640  017934  0E00               	movlw	low (__mediumconst shr (0+16))
 23641  017936  6EF8               	movwf	tblptru,c
 23642  017938                     	endif
 23643  017938  0008               	tblrd		*
 23644  01793A  50F5               	movf	tablat,w,c
 23645  01793C  ECCC  F0B9         	call	_UARTchar
 23646                           
 23647                           ;UART.c: 300: while((!TXSTAbits.TRMT));
 23648  017940  D000               	goto	l540
 23649  017942                     l540:
 23650  017942  B2AC               	btfsc	4012,1,c	;volatile
 23651  017944  D002               	goto	l12481
 23652  017946  D7FD               	goto	l540
 23653  017948  D000               	goto	l12481
 23654  01794A                     l12481:
 23655                           
 23656                           ;UART.c: 301: }
 23657                           ;UART.c: 302: } while( *data++);
 23658  01794A  C119  FFF6         	movff	UARTstringWAIT@data,tblptrl
 23659  01794E  C11A  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 23660  017952  0101               	movlb	1	; () banked
 23661  017954  4B19               	infsnz	UARTstringWAIT@data& (0+255),f,b
 23662  017956  2B1A               	incf	(UARTstringWAIT@data+1)& (0+255),f,b
 23663  017958                     	if	0	;tblptru may be non-zero
 23664  017958                     	endif
 23665  017958                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23666  017958  0E00               	movlw	low (__mediumconst shr (0+16))
 23667  01795A  6EF8               	movwf	tblptru,c
 23668  01795C                     	endif
 23669  01795C  0008               	tblrd		*
 23670  01795E  50F5               	movf	tablat,w,c
 23671  017960  0900               	iorlw	0
 23672  017962  A4D8               	btfss	status,2,c
 23673  017964  D7C7               	goto	l12475
 23674                           
 23675                           ; BSR set to: 1
 23676                           
 23677                           ; BSR set to: 1
 23678  017966  0012               	return		;funcret
 23679  017968                     __end_of_UARTstringWAIT:
 23680                           	opt stack 0
 23681                           tblptru	equ	0xFF8
 23682                           tblptrh	equ	0xFF7
 23683                           tblptrl	equ	0xFF6
 23684                           tablat	equ	0xFF5
 23685                           prodh	equ	0xFF4
 23686                           prodl	equ	0xFF3
 23687                           intcon	equ	0xFF2
 23688                           intcon2	equ	0xFF1
 23689                           postinc0	equ	0xFEE
 23690                           plusw0	equ	0xFEB
 23691                           wreg	equ	0xFE8
 23692                           indf1	equ	0xFE7
 23693                           postdec1	equ	0xFE5
 23694                           fsr1h	equ	0xFE2
 23695                           fsr1l	equ	0xFE1
 23696                           indf2	equ	0xFDF
 23697                           postinc2	equ	0xFDE
 23698                           postdec2	equ	0xFDD
 23699                           plusw2	equ	0xFDB
 23700                           fsr2h	equ	0xFDA
 23701                           fsr2l	equ	0xFD9
 23702                           status	equ	0xFD8
 23703                           
 23704 ;; *************** function _SetMemoryParity *****************
 23705 ;; Defined at:
 23706 ;;		line 190 in file "EEPROM.c"
 23707 ;; Parameters:    Size  Location     Type
 23708 ;;  Parity          1    wreg     unsigned char 
 23709 ;; Auto vars:     Size  Location     Type
 23710 ;;  Parity          1   19[BANK1 ] unsigned char 
 23711 ;;  Test            1   18[BANK1 ] unsigned char 
 23712 ;; Return value:  Size  Location     Type
 23713 ;;                  1    wreg      unsigned char 
 23714 ;; Registers used:
 23715 ;;		wreg, status,2, status,0, cstack
 23716 ;; Tracked objects:
 23717 ;;		On entry : 0/0
 23718 ;;		On exit  : 0/0
 23719 ;;		Unchanged: 0/0
 23720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23722 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23724 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23725 ;;Total ram usage:        2 bytes
 23726 ;; Hardware stack levels used:    1
 23727 ;; Hardware stack levels required when called:    9
 23728 ;; This function calls:
 23729 ;;		_GetMemoryParity
 23730 ;;		_WriteEEPROM_1Byte
 23731 ;; This function is called by:
 23732 ;;		_SetBaud
 23733 ;;		_SetEEPROM
 23734 ;; This function uses a non-reentrant model
 23735 ;;
 23736                           
 23737                           	psect	text50
 23738  000ADA                     __ptext50:
 23739                           	opt stack 0
 23740  000ADA                     _SetMemoryParity:
 23741                           	opt stack 20
 23742                           
 23743                           ; BSR set to: 1
 23744                           ;incstack = 0
 23745                           ;SetMemoryParity@Parity stored from wreg
 23746  000ADA  0101               	movlb	1	; () banked
 23747  000ADC  6F13               	movwf	SetMemoryParity@Parity& (0+255),b
 23748                           
 23749                           ; BSR set to: 1
 23750                           ;EEPROM.c: 192: unsigned char Test;
 23751                           ;EEPROM.c: 194: WriteEEPROM_1Byte(4, Parity);
 23752  000ADE  0E00               	movlw	0
 23753  000AE0  0101               	movlb	1	; () banked
 23754  000AE2  6F0F               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 23755  000AE4  0E04               	movlw	4
 23756  000AE6  6F0E               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 23757  000AE8  C113  F110         	movff	SetMemoryParity@Parity,WriteEEPROM_1Byte@data
 23758  000AEC  EC3F  F004         	call	_WriteEEPROM_1Byte	;wreg free
 23759                           
 23760                           ;EEPROM.c: 197: Test = GetMemoryParity();
 23761  000AF0  ECD6  F006         	call	_GetMemoryParity	;wreg free
 23762  000AF4  0101               	movlb	1	; () banked
 23763  000AF6  6F12               	movwf	SetMemoryParity@Test& (0+255),b
 23764                           
 23765                           ; BSR set to: 1
 23766                           ;EEPROM.c: 199: if(Test == Parity)
 23767  000AF8  0101               	movlb	1	; () banked
 23768  000AFA  5113               	movf	SetMemoryParity@Parity& (0+255),w,b
 23769  000AFC  0101               	movlb	1	; () banked
 23770  000AFE  1912               	xorwf	SetMemoryParity@Test& (0+255),w,b
 23771  000B00  A4D8               	btfss	status,2,c
 23772  000B02  D002               	goto	l12879
 23773                           
 23774                           ; BSR set to: 1
 23775                           ;EEPROM.c: 200: {
 23776                           ;EEPROM.c: 201: return 1;
 23777  000B04  0E01               	movlw	1
 23778                           
 23779                           ; BSR set to: 1
 23780  000B06  0012               	return	
 23781  000B08                     l12879:
 23782                           
 23783                           ; BSR set to: 1
 23784                           ;EEPROM.c: 202: }
 23785                           ;EEPROM.c: 203: return 0;
 23786  000B08  0E00               	movlw	0
 23787  000B0A  0012               	return	
 23788                           
 23789                           ; BSR set to: 1
 23790                           
 23791                           ; BSR set to: 1
 23792  000B0C  0012               	return		;funcret
 23793  000B0E                     __end_of_SetMemoryParity:
 23794                           	opt stack 0
 23795                           tblptru	equ	0xFF8
 23796                           tblptrh	equ	0xFF7
 23797                           tblptrl	equ	0xFF6
 23798                           tablat	equ	0xFF5
 23799                           prodh	equ	0xFF4
 23800                           prodl	equ	0xFF3
 23801                           intcon	equ	0xFF2
 23802                           intcon2	equ	0xFF1
 23803                           postinc0	equ	0xFEE
 23804                           plusw0	equ	0xFEB
 23805                           wreg	equ	0xFE8
 23806                           indf1	equ	0xFE7
 23807                           postdec1	equ	0xFE5
 23808                           fsr1h	equ	0xFE2
 23809                           fsr1l	equ	0xFE1
 23810                           indf2	equ	0xFDF
 23811                           postinc2	equ	0xFDE
 23812                           postdec2	equ	0xFDD
 23813                           plusw2	equ	0xFDB
 23814                           fsr2h	equ	0xFDA
 23815                           fsr2l	equ	0xFD9
 23816                           status	equ	0xFD8
 23817                           
 23818 ;; *************** function _GetMemoryParity *****************
 23819 ;; Defined at:
 23820 ;;		line 176 in file "EEPROM.c"
 23821 ;; Parameters:    Size  Location     Type
 23822 ;;		None
 23823 ;; Auto vars:     Size  Location     Type
 23824 ;;  Parity          1   17[BANK1 ] unsigned char 
 23825 ;; Return value:  Size  Location     Type
 23826 ;;                  1    wreg      unsigned char 
 23827 ;; Registers used:
 23828 ;;		wreg, status,2, status,0, cstack
 23829 ;; Tracked objects:
 23830 ;;		On entry : 0/0
 23831 ;;		On exit  : 0/0
 23832 ;;		Unchanged: 0/0
 23833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23835 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23837 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23838 ;;Total ram usage:        1 bytes
 23839 ;; Hardware stack levels used:    1
 23840 ;; Hardware stack levels required when called:    8
 23841 ;; This function calls:
 23842 ;;		_ReadEEPROM_1Byte
 23843 ;; This function is called by:
 23844 ;;		_SetMemoryParity
 23845 ;; This function uses a non-reentrant model
 23846 ;;
 23847                           
 23848                           	psect	text51
 23849  000DAC                     __ptext51:
 23850                           	opt stack 0
 23851  000DAC                     _GetMemoryParity:
 23852                           	opt stack 20
 23853                           
 23854                           ;EEPROM.c: 178: unsigned char Parity;
 23855                           ;EEPROM.c: 180: Parity = ReadEEPROM_1Byte(4);
 23856                           
 23857                           ; BSR set to: 1
 23858                           ;incstack = 0
 23859  000DAC  0E00               	movlw	0
 23860  000DAE  0101               	movlb	1	; () banked
 23861  000DB0  6F0F               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 23862  000DB2  0E04               	movlw	4
 23863  000DB4  6F0E               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 23864  000DB6  ECDD  F004         	call	_ReadEEPROM_1Byte	;wreg free
 23865  000DBA  0101               	movlb	1	; () banked
 23866  000DBC  510E               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 23867  000DBE  0101               	movlb	1	; () banked
 23868  000DC0  6F11               	movwf	GetMemoryParity@Parity& (0+255),b
 23869                           
 23870                           ; BSR set to: 1
 23871                           ;EEPROM.c: 182: return (Parity);
 23872  000DC2  0101               	movlb	1	; () banked
 23873  000DC4  5111               	movf	GetMemoryParity@Parity& (0+255),w,b
 23874  000DC6  0012               	return	
 23875                           
 23876                           ; BSR set to: 1
 23877                           
 23878                           ; BSR set to: 1
 23879  000DC8  0012               	return		;funcret
 23880  000DCA                     __end_of_GetMemoryParity:
 23881                           	opt stack 0
 23882                           tblptru	equ	0xFF8
 23883                           tblptrh	equ	0xFF7
 23884                           tblptrl	equ	0xFF6
 23885                           tablat	equ	0xFF5
 23886                           prodh	equ	0xFF4
 23887                           prodl	equ	0xFF3
 23888                           intcon	equ	0xFF2
 23889                           intcon2	equ	0xFF1
 23890                           postinc0	equ	0xFEE
 23891                           plusw0	equ	0xFEB
 23892                           wreg	equ	0xFE8
 23893                           indf1	equ	0xFE7
 23894                           postdec1	equ	0xFE5
 23895                           fsr1h	equ	0xFE2
 23896                           fsr1l	equ	0xFE1
 23897                           indf2	equ	0xFDF
 23898                           postinc2	equ	0xFDE
 23899                           postdec2	equ	0xFDD
 23900                           plusw2	equ	0xFDB
 23901                           fsr2h	equ	0xFDA
 23902                           fsr2l	equ	0xFD9
 23903                           status	equ	0xFD8
 23904                           
 23905 ;; *************** function _SetMemoryBaud *****************
 23906 ;; Defined at:
 23907 ;;		line 142 in file "EEPROM.c"
 23908 ;; Parameters:    Size  Location     Type
 23909 ;;  Baud            4   49[BANK1 ] unsigned long 
 23910 ;; Auto vars:     Size  Location     Type
 23911 ;;  Test            4   57[BANK1 ] unsigned long 
 23912 ;;  BaudTempL       1   64[BANK1 ] unsigned char 
 23913 ;;  BaudTempML      1   63[BANK1 ] unsigned char 
 23914 ;;  BaudTempMH      1   62[BANK1 ] unsigned char 
 23915 ;;  BaudTempH       1   61[BANK1 ] unsigned char 
 23916 ;; Return value:  Size  Location     Type
 23917 ;;                  1    wreg      unsigned char 
 23918 ;; Registers used:
 23919 ;;		wreg, status,2, status,0, cstack
 23920 ;; Tracked objects:
 23921 ;;		On entry : 0/0
 23922 ;;		On exit  : 0/0
 23923 ;;		Unchanged: 0/0
 23924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23925 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23926 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 23927 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23928 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 23929 ;;Total ram usage:       16 bytes
 23930 ;; Hardware stack levels used:    1
 23931 ;; Hardware stack levels required when called:    9
 23932 ;; This function calls:
 23933 ;;		_GetMemoryBaud
 23934 ;;		_WriteEEPROM_1Byte
 23935 ;; This function is called by:
 23936 ;;		_SetBaud
 23937 ;;		_SetEEPROM
 23938 ;; This function uses a non-reentrant model
 23939 ;;
 23940                           
 23941                           	psect	text52
 23942  01637A                     __ptext52:
 23943                           	opt stack 0
 23944  01637A                     _SetMemoryBaud:
 23945                           	opt stack 20
 23946                           
 23947                           ;EEPROM.c: 144: unsigned char BaudTempH;
 23948                           ;EEPROM.c: 145: unsigned char BaudTempMH;
 23949                           ;EEPROM.c: 146: unsigned char BaudTempML;
 23950                           ;EEPROM.c: 147: unsigned char BaudTempL;
 23951                           ;EEPROM.c: 148: unsigned long Test;
 23952                           ;EEPROM.c: 150: BaudTempH = (unsigned char) ((Baud & 0XFF000000) >> 24);
 23953                           
 23954                           ; BSR set to: 1
 23955                           ;incstack = 0
 23956  01637A  0E00               	movlw	0
 23957  01637C  0101               	movlb	1	; () banked
 23958  01637E  1531               	andwf	SetMemoryBaud@Baud& (0+255),w,b
 23959  016380  0101               	movlb	1	; () banked
 23960  016382  6F35               	movwf	??_SetMemoryBaud& (0+255),b
 23961  016384  0E00               	movlw	0
 23962  016386  0101               	movlb	1	; () banked
 23963  016388  1532               	andwf	(SetMemoryBaud@Baud+1)& (0+255),w,b
 23964  01638A  0101               	movlb	1	; () banked
 23965  01638C  6F36               	movwf	(??_SetMemoryBaud+1)& (0+255),b
 23966  01638E  0E00               	movlw	0
 23967  016390  0101               	movlb	1	; () banked
 23968  016392  1533               	andwf	(SetMemoryBaud@Baud+2)& (0+255),w,b
 23969  016394  0101               	movlb	1	; () banked
 23970  016396  6F37               	movwf	(??_SetMemoryBaud+2)& (0+255),b
 23971  016398  0EFF               	movlw	255
 23972  01639A  0101               	movlb	1	; () banked
 23973  01639C  1534               	andwf	(SetMemoryBaud@Baud+3)& (0+255),w,b
 23974  01639E  0101               	movlb	1	; () banked
 23975  0163A0  6F38               	movwf	(??_SetMemoryBaud+3)& (0+255),b
 23976  0163A2  0E19               	movlw	25
 23977  0163A4  D006               	goto	u15990
 23978  0163A6                     u15995:
 23979  0163A6  0101               	movlb	1	; () banked
 23980  0163A8  90D8               	bcf	status,0,c
 23981  0163AA  3338               	rrcf	(??_SetMemoryBaud+3)& (0+255),f,b
 23982  0163AC  3337               	rrcf	(??_SetMemoryBaud+2)& (0+255),f,b
 23983  0163AE  3336               	rrcf	(??_SetMemoryBaud+1)& (0+255),f,b
 23984  0163B0  3335               	rrcf	??_SetMemoryBaud& (0+255),f,b
 23985  0163B2                     u15990:
 23986  0163B2  2EE8               	decfsz	wreg,f,c
 23987  0163B4  D7F8               	goto	u15995
 23988  0163B6  0101               	movlb	1	; () banked
 23989  0163B8  5135               	movf	??_SetMemoryBaud& (0+255),w,b
 23990  0163BA  0101               	movlb	1	; () banked
 23991  0163BC  6F3D               	movwf	SetMemoryBaud@BaudTempH& (0+255),b
 23992                           
 23993                           ; BSR set to: 1
 23994                           ;EEPROM.c: 151: BaudTempMH = (unsigned char) ((Baud & 0X00FF0000) >> 16);
 23995  0163BE  C133  F13E         	movff	SetMemoryBaud@Baud+2,SetMemoryBaud@BaudTempMH
 23996                           
 23997                           ; BSR set to: 1
 23998                           ;EEPROM.c: 152: BaudTempML = (unsigned char) ((Baud & 0X0000FF00) >> 8);
 23999  0163C2  C132  F13F         	movff	SetMemoryBaud@Baud+1,SetMemoryBaud@BaudTempML
 24000                           
 24001                           ; BSR set to: 1
 24002                           ;EEPROM.c: 153: BaudTempL = (unsigned char) (Baud & 0X000000FF);
 24003  0163C6  C131  F140         	movff	SetMemoryBaud@Baud,SetMemoryBaud@BaudTempL
 24004                           
 24005                           ; BSR set to: 1
 24006                           ;EEPROM.c: 156: WriteEEPROM_1Byte(0, BaudTempH);
 24007  0163CA  0E00               	movlw	0
 24008  0163CC  0101               	movlb	1	; () banked
 24009  0163CE  6F0F               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 24010  0163D0  0E00               	movlw	0
 24011  0163D2  6F0E               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 24012  0163D4  C13D  F110         	movff	SetMemoryBaud@BaudTempH,WriteEEPROM_1Byte@data
 24013  0163D8  EC3F  F004         	call	_WriteEEPROM_1Byte	;wreg free
 24014                           
 24015                           ;EEPROM.c: 157: WriteEEPROM_1Byte(1, BaudTempMH);
 24016  0163DC  0E00               	movlw	0
 24017  0163DE  0101               	movlb	1	; () banked
 24018  0163E0  6F0F               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 24019  0163E2  0E01               	movlw	1
 24020  0163E4  6F0E               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 24021  0163E6  C13E  F110         	movff	SetMemoryBaud@BaudTempMH,WriteEEPROM_1Byte@data
 24022  0163EA  EC3F  F004         	call	_WriteEEPROM_1Byte	;wreg free
 24023                           
 24024                           ;EEPROM.c: 158: WriteEEPROM_1Byte(2, BaudTempML);
 24025  0163EE  0E00               	movlw	0
 24026  0163F0  0101               	movlb	1	; () banked
 24027  0163F2  6F0F               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 24028  0163F4  0E02               	movlw	2
 24029  0163F6  6F0E               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 24030  0163F8  C13F  F110         	movff	SetMemoryBaud@BaudTempML,WriteEEPROM_1Byte@data
 24031  0163FC  EC3F  F004         	call	_WriteEEPROM_1Byte	;wreg free
 24032                           
 24033                           ;EEPROM.c: 159: WriteEEPROM_1Byte(3, BaudTempL);
 24034  016400  0E00               	movlw	0
 24035  016402  0101               	movlb	1	; () banked
 24036  016404  6F0F               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 24037  016406  0E03               	movlw	3
 24038  016408  6F0E               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 24039  01640A  C140  F110         	movff	SetMemoryBaud@BaudTempL,WriteEEPROM_1Byte@data
 24040  01640E  EC3F  F004         	call	_WriteEEPROM_1Byte	;wreg free
 24041                           
 24042                           ;EEPROM.c: 162: Test = GetMemoryBaud();
 24043  016412  EC99  F0A9         	call	_GetMemoryBaud	;wreg free
 24044  016416  C111  F139         	movff	?_GetMemoryBaud,SetMemoryBaud@Test
 24045  01641A  C112  F13A         	movff	?_GetMemoryBaud+1,SetMemoryBaud@Test+1
 24046  01641E  C113  F13B         	movff	?_GetMemoryBaud+2,SetMemoryBaud@Test+2
 24047  016422  C114  F13C         	movff	?_GetMemoryBaud+3,SetMemoryBaud@Test+3
 24048                           
 24049                           ;EEPROM.c: 164: if(Test == Baud)
 24050  016426  0101               	movlb	1	; () banked
 24051  016428  5131               	movf	SetMemoryBaud@Baud& (0+255),w,b
 24052  01642A  0101               	movlb	1	; () banked
 24053  01642C  1939               	xorwf	SetMemoryBaud@Test& (0+255),w,b
 24054  01642E  E112               	bnz	l12867
 24055  016430  0101               	movlb	1	; () banked
 24056  016432  5132               	movf	(SetMemoryBaud@Baud+1)& (0+255),w,b
 24057  016434  0101               	movlb	1	; () banked
 24058  016436  193A               	xorwf	(SetMemoryBaud@Test+1)& (0+255),w,b
 24059  016438  E10D               	bnz	l12867
 24060  01643A  0101               	movlb	1	; () banked
 24061  01643C  5133               	movf	(SetMemoryBaud@Baud+2)& (0+255),w,b
 24062  01643E  0101               	movlb	1	; () banked
 24063  016440  193B               	xorwf	(SetMemoryBaud@Test+2)& (0+255),w,b
 24064  016442  E108               	bnz	l12867
 24065  016444  0101               	movlb	1	; () banked
 24066  016446  5134               	movf	(SetMemoryBaud@Baud+3)& (0+255),w,b
 24067  016448  0101               	movlb	1	; () banked
 24068  01644A  193C               	xorwf	(SetMemoryBaud@Test+3)& (0+255),w,b
 24069  01644C  A4D8               	btfss	status,2,c
 24070  01644E  D002               	goto	l12867
 24071                           
 24072                           ; BSR set to: 1
 24073                           ;EEPROM.c: 165: {
 24074                           ;EEPROM.c: 166: return 1;
 24075  016450  0E01               	movlw	1
 24076                           
 24077                           ; BSR set to: 1
 24078  016452  0012               	return	
 24079  016454                     l12867:
 24080                           
 24081                           ; BSR set to: 1
 24082                           ;EEPROM.c: 167: }
 24083                           ;EEPROM.c: 168: return 0;
 24084  016454  0E00               	movlw	0
 24085  016456  0012               	return	
 24086                           
 24087                           ; BSR set to: 1
 24088                           
 24089                           ; BSR set to: 1
 24090  016458  0012               	return		;funcret
 24091  01645A                     __end_of_SetMemoryBaud:
 24092                           	opt stack 0
 24093                           tblptru	equ	0xFF8
 24094                           tblptrh	equ	0xFF7
 24095                           tblptrl	equ	0xFF6
 24096                           tablat	equ	0xFF5
 24097                           prodh	equ	0xFF4
 24098                           prodl	equ	0xFF3
 24099                           intcon	equ	0xFF2
 24100                           intcon2	equ	0xFF1
 24101                           postinc0	equ	0xFEE
 24102                           plusw0	equ	0xFEB
 24103                           wreg	equ	0xFE8
 24104                           indf1	equ	0xFE7
 24105                           postdec1	equ	0xFE5
 24106                           fsr1h	equ	0xFE2
 24107                           fsr1l	equ	0xFE1
 24108                           indf2	equ	0xFDF
 24109                           postinc2	equ	0xFDE
 24110                           postdec2	equ	0xFDD
 24111                           plusw2	equ	0xFDB
 24112                           fsr2h	equ	0xFDA
 24113                           fsr2l	equ	0xFD9
 24114                           status	equ	0xFD8
 24115                           
 24116 ;; *************** function _WriteEEPROM_1Byte *****************
 24117 ;; Defined at:
 24118 ;;		line 94 in file "EEPROM.c"
 24119 ;; Parameters:    Size  Location     Type
 24120 ;;  address         2   14[BANK1 ] unsigned int 
 24121 ;;  data            1   16[BANK1 ] unsigned char 
 24122 ;; Auto vars:     Size  Location     Type
 24123 ;;  GIEstatus       1   17[BANK1 ] unsigned char 
 24124 ;; Return value:  Size  Location     Type
 24125 ;;		None               void
 24126 ;; Registers used:
 24127 ;;		wreg, status,2, status,0, cstack
 24128 ;; Tracked objects:
 24129 ;;		On entry : 0/0
 24130 ;;		On exit  : 0/0
 24131 ;;		Unchanged: 0/0
 24132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24133 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 24134 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24136 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 24137 ;;Total ram usage:        4 bytes
 24138 ;; Hardware stack levels used:    1
 24139 ;; Hardware stack levels required when called:    8
 24140 ;; This function calls:
 24141 ;;		_EEPROM_UNLOCK
 24142 ;; This function is called by:
 24143 ;;		_SetMemoryBaud
 24144 ;;		_SetMemoryParity
 24145 ;;		_SetMemoryLong
 24146 ;;		_SetMemoryInt
 24147 ;;		_SetMemoryChar
 24148 ;; This function uses a non-reentrant model
 24149 ;;
 24150                           
 24151                           	psect	text53
 24152  00087E                     __ptext53:
 24153                           	opt stack 0
 24154  00087E                     _WriteEEPROM_1Byte:
 24155                           	opt stack 20
 24156                           
 24157                           ;EEPROM.c: 96: unsigned char GIEstatus = INTCONbits.GIE;
 24158                           
 24159                           ; BSR set to: 1
 24160                           ;incstack = 0
 24161  00087E  0E00               	movlw	0
 24162  000880  BEF2               	btfsc	intcon,7,c	;volatile
 24163  000882  0E01               	movlw	1
 24164  000884  0101               	movlb	1	; () banked
 24165  000886  6F11               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 24166                           
 24167                           ; BSR set to: 1
 24168                           ;EEPROM.c: 97: EEADRH = (unsigned char)((address & 0x300) >> 8);
 24169  000888  0101               	movlb	1	; () banked
 24170  00088A  510F               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 24171  00088C  0B03               	andlw	3
 24172  00088E  6EAA               	movwf	4010,c	;volatile
 24173                           
 24174                           ; BSR set to: 1
 24175                           ;EEPROM.c: 98: EEADR = (unsigned char)(address & 0xFF);
 24176  000890  C10E  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 24177                           
 24178                           ; BSR set to: 1
 24179                           ;EEPROM.c: 99: EEDATA = data;
 24180  000894  C110  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 24181                           
 24182                           ; BSR set to: 1
 24183                           ;EEPROM.c: 100: EECON1bits.EEPGD = 0;
 24184  000898  9EA6               	bcf	4006,7,c	;volatile
 24185                           
 24186                           ; BSR set to: 1
 24187                           ;EEPROM.c: 101: EECON1bits.CFGS = 0;
 24188  00089A  9CA6               	bcf	4006,6,c	;volatile
 24189                           
 24190                           ; BSR set to: 1
 24191                           ;EEPROM.c: 102: EECON1bits.WREN =1;
 24192  00089C  84A6               	bsf	4006,2,c	;volatile
 24193                           
 24194                           ; BSR set to: 1
 24195                           ;EEPROM.c: 103: INTCONbits.GIE =0;
 24196  00089E  9EF2               	bcf	intcon,7,c	;volatile
 24197                           
 24198                           ; BSR set to: 1
 24199                           ;EEPROM.c: 104: EEPROM_UNLOCK();
 24200  0008A0  EC18  F007         	call	_EEPROM_UNLOCK	;wreg free
 24201                           
 24202                           ;EEPROM.c: 105: EECON1bits.WR =1;
 24203  0008A4  82A6               	bsf	4006,1,c	;volatile
 24204                           
 24205                           ;EEPROM.c: 106: while(EECON1bits.WR);
 24206  0008A6  D000               	goto	l1586
 24207  0008A8                     l1586:
 24208  0008A8  B2A6               	btfsc	4006,1,c	;volatile
 24209  0008AA  D7FE               	goto	l1586
 24210                           
 24211                           ;EEPROM.c: 107: EECON1bits.WREN =0;
 24212  0008AC  94A6               	bcf	4006,2,c	;volatile
 24213                           
 24214                           ;EEPROM.c: 108: if(GIEstatus)
 24215  0008AE  0101               	movlb	1	; () banked
 24216  0008B0  5111               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 24217  0008B2  0101               	movlb	1	; () banked
 24218  0008B4  B4D8               	btfsc	status,2,c
 24219  0008B6  0012               	return	
 24220                           
 24221                           ; BSR set to: 1
 24222                           ;EEPROM.c: 109: {
 24223                           ;EEPROM.c: 110: INTCONbits.GIE =1;
 24224  0008B8  8EF2               	bsf	intcon,7,c	;volatile
 24225  0008BA  0012               	return	
 24226                           
 24227                           ; BSR set to: 1
 24228                           
 24229                           ; BSR set to: 1
 24230  0008BC  0012               	return		;funcret
 24231  0008BE                     __end_of_WriteEEPROM_1Byte:
 24232                           	opt stack 0
 24233                           tblptru	equ	0xFF8
 24234                           tblptrh	equ	0xFF7
 24235                           tblptrl	equ	0xFF6
 24236                           tablat	equ	0xFF5
 24237                           prodh	equ	0xFF4
 24238                           prodl	equ	0xFF3
 24239                           intcon	equ	0xFF2
 24240                           intcon2	equ	0xFF1
 24241                           postinc0	equ	0xFEE
 24242                           plusw0	equ	0xFEB
 24243                           wreg	equ	0xFE8
 24244                           indf1	equ	0xFE7
 24245                           postdec1	equ	0xFE5
 24246                           fsr1h	equ	0xFE2
 24247                           fsr1l	equ	0xFE1
 24248                           indf2	equ	0xFDF
 24249                           postinc2	equ	0xFDE
 24250                           postdec2	equ	0xFDD
 24251                           plusw2	equ	0xFDB
 24252                           fsr2h	equ	0xFDA
 24253                           fsr2l	equ	0xFD9
 24254                           status	equ	0xFD8
 24255                           
 24256 ;; *************** function _EEPROM_UNLOCK *****************
 24257 ;; Defined at:
 24258 ;;		line 79 in file "EEPROM.c"
 24259 ;; Parameters:    Size  Location     Type
 24260 ;;		None
 24261 ;; Auto vars:     Size  Location     Type
 24262 ;;		None
 24263 ;; Return value:  Size  Location     Type
 24264 ;;		None               void
 24265 ;; Registers used:
 24266 ;;		wreg, status,2
 24267 ;; Tracked objects:
 24268 ;;		On entry : 0/0
 24269 ;;		On exit  : 0/0
 24270 ;;		Unchanged: 0/0
 24271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24276 ;;Total ram usage:        0 bytes
 24277 ;; Hardware stack levels used:    1
 24278 ;; Hardware stack levels required when called:    7
 24279 ;; This function calls:
 24280 ;;		Nothing
 24281 ;; This function is called by:
 24282 ;;		_WriteEEPROM_1Byte
 24283 ;; This function uses a non-reentrant model
 24284 ;;
 24285                           
 24286                           	psect	text54
 24287  000E30                     __ptext54:
 24288                           	opt stack 0
 24289  000E30                     _EEPROM_UNLOCK:
 24290                           	opt stack 20
 24291                           
 24292                           ;EEPROM.c: 81: EECON2 = 0x55;
 24293                           
 24294                           ; BSR set to: 1
 24295                           ;incstack = 0
 24296  000E30  0E55               	movlw	85
 24297  000E32  6EA7               	movwf	4007,c	;volatile
 24298                           
 24299                           ;EEPROM.c: 82: EECON2 = 0xAA;
 24300  000E34  0EAA               	movlw	170
 24301  000E36  6EA7               	movwf	4007,c	;volatile
 24302                           
 24303                           ;EEPROM.c: 83: EECON1bits.WR =1;
 24304  000E38  82A6               	bsf	4006,1,c	;volatile
 24305                           
 24306                           ;EEPROM.c: 84: while(EECON1bits.WR);
 24307  000E3A  D000               	goto	l1580
 24308  000E3C                     l1580:
 24309  000E3C  B2A6               	btfsc	4006,1,c	;volatile
 24310  000E3E  D7FE               	goto	l1580
 24311                           
 24312                           ;EEPROM.c: 85: __nop();
 24313  000E40  F000               	nop	
 24314                           
 24315                           ;EEPROM.c: 86: __nop();
 24316  000E42  F000               	nop	
 24317  000E44  0012               	return		;funcret
 24318  000E46                     __end_of_EEPROM_UNLOCK:
 24319                           	opt stack 0
 24320                           tblptru	equ	0xFF8
 24321                           tblptrh	equ	0xFF7
 24322                           tblptrl	equ	0xFF6
 24323                           tablat	equ	0xFF5
 24324                           prodh	equ	0xFF4
 24325                           prodl	equ	0xFF3
 24326                           intcon	equ	0xFF2
 24327                           intcon2	equ	0xFF1
 24328                           postinc0	equ	0xFEE
 24329                           plusw0	equ	0xFEB
 24330                           wreg	equ	0xFE8
 24331                           indf1	equ	0xFE7
 24332                           postdec1	equ	0xFE5
 24333                           fsr1h	equ	0xFE2
 24334                           fsr1l	equ	0xFE1
 24335                           indf2	equ	0xFDF
 24336                           postinc2	equ	0xFDE
 24337                           postdec2	equ	0xFDD
 24338                           plusw2	equ	0xFDB
 24339                           fsr2h	equ	0xFDA
 24340                           fsr2l	equ	0xFD9
 24341                           status	equ	0xFD8
 24342                           
 24343 ;; *************** function _GetMemoryBaud *****************
 24344 ;; Defined at:
 24345 ;;		line 119 in file "EEPROM.c"
 24346 ;; Parameters:    Size  Location     Type
 24347 ;;		None
 24348 ;; Auto vars:     Size  Location     Type
 24349 ;;  baud            4   41[BANK1 ] unsigned long 
 24350 ;;  BaudTempL       1   48[BANK1 ] unsigned char 
 24351 ;;  BaudTempML      1   47[BANK1 ] unsigned char 
 24352 ;;  BaudTempMH      1   46[BANK1 ] unsigned char 
 24353 ;;  BaudTempH       1   45[BANK1 ] unsigned char 
 24354 ;; Return value:  Size  Location     Type
 24355 ;;                  4   17[BANK1 ] unsigned long 
 24356 ;; Registers used:
 24357 ;;		wreg, status,2, status,0, cstack
 24358 ;; Tracked objects:
 24359 ;;		On entry : 0/0
 24360 ;;		On exit  : 0/0
 24361 ;;		Unchanged: 0/0
 24362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24363 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 24364 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 24365 ;;      Temps:          0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 24366 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
 24367 ;;Total ram usage:       32 bytes
 24368 ;; Hardware stack levels used:    1
 24369 ;; Hardware stack levels required when called:    8
 24370 ;; This function calls:
 24371 ;;		_ReadEEPROM_1Byte
 24372 ;; This function is called by:
 24373 ;;		_SetMemoryBaud
 24374 ;;		_GetEEPROM
 24375 ;; This function uses a non-reentrant model
 24376 ;;
 24377                           
 24378                           	psect	text55
 24379  015332                     __ptext55:
 24380                           	opt stack 0
 24381  015332                     _GetMemoryBaud:
 24382                           	opt stack 20
 24383                           
 24384                           ;EEPROM.c: 121: unsigned char BaudTempH;
 24385                           ;EEPROM.c: 122: unsigned char BaudTempMH;
 24386                           ;EEPROM.c: 123: unsigned char BaudTempML;
 24387                           ;EEPROM.c: 124: unsigned char BaudTempL;
 24388                           ;EEPROM.c: 125: unsigned long baud =0;
 24389                           
 24390                           ;incstack = 0
 24391  015332  0E00               	movlw	0
 24392  015334  0101               	movlb	1	; () banked
 24393  015336  6F29               	movwf	GetMemoryBaud@baud& (0+255),b
 24394  015338  0E00               	movlw	0
 24395  01533A  6F2A               	movwf	(GetMemoryBaud@baud+1)& (0+255),b
 24396  01533C  0E00               	movlw	0
 24397  01533E  6F2B               	movwf	(GetMemoryBaud@baud+2)& (0+255),b
 24398  015340  0E00               	movlw	0
 24399  015342  6F2C               	movwf	(GetMemoryBaud@baud+3)& (0+255),b
 24400                           
 24401                           ; BSR set to: 1
 24402                           ;EEPROM.c: 127: BaudTempH = ReadEEPROM_1Byte(0);
 24403  015344  0E00               	movlw	0
 24404  015346  0101               	movlb	1	; () banked
 24405  015348  6F0F               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 24406  01534A  0E00               	movlw	0
 24407  01534C  6F0E               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 24408  01534E  ECDD  F004         	call	_ReadEEPROM_1Byte	;wreg free
 24409  015352  0101               	movlb	1	; () banked
 24410  015354  510E               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 24411  015356  0101               	movlb	1	; () banked
 24412  015358  6F2D               	movwf	GetMemoryBaud@BaudTempH& (0+255),b
 24413                           
 24414                           ; BSR set to: 1
 24415                           ;EEPROM.c: 128: BaudTempMH = ReadEEPROM_1Byte(1);
 24416  01535A  0E00               	movlw	0
 24417  01535C  0101               	movlb	1	; () banked
 24418  01535E  6F0F               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 24419  015360  0E01               	movlw	1
 24420  015362  6F0E               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 24421  015364  ECDD  F004         	call	_ReadEEPROM_1Byte	;wreg free
 24422  015368  0101               	movlb	1	; () banked
 24423  01536A  510E               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 24424  01536C  0101               	movlb	1	; () banked
 24425  01536E  6F2E               	movwf	GetMemoryBaud@BaudTempMH& (0+255),b
 24426                           
 24427                           ; BSR set to: 1
 24428                           ;EEPROM.c: 129: BaudTempML = ReadEEPROM_1Byte(2);
 24429  015370  0E00               	movlw	0
 24430  015372  0101               	movlb	1	; () banked
 24431  015374  6F0F               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 24432  015376  0E02               	movlw	2
 24433  015378  6F0E               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 24434  01537A  ECDD  F004         	call	_ReadEEPROM_1Byte	;wreg free
 24435  01537E  0101               	movlb	1	; () banked
 24436  015380  510E               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 24437  015382  0101               	movlb	1	; () banked
 24438  015384  6F2F               	movwf	GetMemoryBaud@BaudTempML& (0+255),b
 24439                           
 24440                           ; BSR set to: 1
 24441                           ;EEPROM.c: 130: BaudTempL = ReadEEPROM_1Byte(3);
 24442  015386  0E00               	movlw	0
 24443  015388  0101               	movlb	1	; () banked
 24444  01538A  6F0F               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 24445  01538C  0E03               	movlw	3
 24446  01538E  6F0E               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 24447  015390  ECDD  F004         	call	_ReadEEPROM_1Byte	;wreg free
 24448  015394  0101               	movlb	1	; () banked
 24449  015396  510E               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 24450  015398  0101               	movlb	1	; () banked
 24451  01539A  6F30               	movwf	GetMemoryBaud@BaudTempL& (0+255),b
 24452                           
 24453                           ; BSR set to: 1
 24454                           ;EEPROM.c: 132: baud = (((unsigned long) BaudTempH << 24) + ((unsigned long)BaudTempMH <
      +                          < 16)
 24455                           ;EEPROM.c: 133: + ((unsigned long)BaudTempML << 8) + (unsigned long)BaudTempL);
 24456  01539C  C12F  F115         	movff	GetMemoryBaud@BaudTempML,??_GetMemoryBaud
 24457  0153A0  0101               	movlb	1	; () banked
 24458  0153A2  6B16               	clrf	(??_GetMemoryBaud+1)& (0+255),b
 24459  0153A4  6B17               	clrf	(??_GetMemoryBaud+2)& (0+255),b
 24460  0153A6  6B18               	clrf	(??_GetMemoryBaud+3)& (0+255),b
 24461  0153A8  C117  F118         	movff	??_GetMemoryBaud+2,??_GetMemoryBaud+3
 24462  0153AC  C116  F117         	movff	??_GetMemoryBaud+1,??_GetMemoryBaud+2
 24463  0153B0  C115  F116         	movff	??_GetMemoryBaud,??_GetMemoryBaud+1
 24464  0153B4  0101               	movlb	1	; () banked
 24465  0153B6  6B15               	clrf	??_GetMemoryBaud& (0+255),b
 24466  0153B8  C12E  F119         	movff	GetMemoryBaud@BaudTempMH,??_GetMemoryBaud+4
 24467  0153BC  0101               	movlb	1	; () banked
 24468  0153BE  6B1A               	clrf	(??_GetMemoryBaud+5)& (0+255),b
 24469  0153C0  6B1B               	clrf	(??_GetMemoryBaud+6)& (0+255),b
 24470  0153C2  6B1C               	clrf	(??_GetMemoryBaud+7)& (0+255),b
 24471  0153C4  C11A  F11C         	movff	??_GetMemoryBaud+5,??_GetMemoryBaud+7
 24472  0153C8  C119  F11B         	movff	??_GetMemoryBaud+4,??_GetMemoryBaud+6
 24473  0153CC  0101               	movlb	1	; () banked
 24474  0153CE  6B1A               	clrf	(??_GetMemoryBaud+5)& (0+255),b
 24475  0153D0  6B19               	clrf	(??_GetMemoryBaud+4)& (0+255),b
 24476  0153D2  C12D  F11D         	movff	GetMemoryBaud@BaudTempH,??_GetMemoryBaud+8
 24477  0153D6  0101               	movlb	1	; () banked
 24478  0153D8  6B1E               	clrf	(??_GetMemoryBaud+9)& (0+255),b
 24479  0153DA  6B1F               	clrf	(??_GetMemoryBaud+10)& (0+255),b
 24480  0153DC  6B20               	clrf	(??_GetMemoryBaud+11)& (0+255),b
 24481  0153DE  C11D  F120         	movff	??_GetMemoryBaud+8,??_GetMemoryBaud+11
 24482  0153E2  0101               	movlb	1	; () banked
 24483  0153E4  6B1F               	clrf	(??_GetMemoryBaud+10)& (0+255),b
 24484  0153E6  6B1E               	clrf	(??_GetMemoryBaud+9)& (0+255),b
 24485  0153E8  6B1D               	clrf	(??_GetMemoryBaud+8)& (0+255),b
 24486  0153EA  0101               	movlb	1	; () banked
 24487  0153EC  5119               	movf	(??_GetMemoryBaud+4)& (0+255),w,b
 24488  0153EE  0101               	movlb	1	; () banked
 24489  0153F0  251D               	addwf	(??_GetMemoryBaud+8)& (0+255),w,b
 24490  0153F2  0101               	movlb	1	; () banked
 24491  0153F4  6F21               	movwf	(??_GetMemoryBaud+12)& (0+255),b
 24492  0153F6  0101               	movlb	1	; () banked
 24493  0153F8  511A               	movf	(??_GetMemoryBaud+5)& (0+255),w,b
 24494  0153FA  0101               	movlb	1	; () banked
 24495  0153FC  211E               	addwfc	(??_GetMemoryBaud+9)& (0+255),w,b
 24496  0153FE  0101               	movlb	1	; () banked
 24497  015400  6F22               	movwf	(??_GetMemoryBaud+13)& (0+255),b
 24498  015402  0101               	movlb	1	; () banked
 24499  015404  511B               	movf	(??_GetMemoryBaud+6)& (0+255),w,b
 24500  015406  0101               	movlb	1	; () banked
 24501  015408  211F               	addwfc	(??_GetMemoryBaud+10)& (0+255),w,b
 24502  01540A  0101               	movlb	1	; () banked
 24503  01540C  6F23               	movwf	(??_GetMemoryBaud+14)& (0+255),b
 24504  01540E  0101               	movlb	1	; () banked
 24505  015410  511C               	movf	(??_GetMemoryBaud+7)& (0+255),w,b
 24506  015412  0101               	movlb	1	; () banked
 24507  015414  2120               	addwfc	(??_GetMemoryBaud+11)& (0+255),w,b
 24508  015416  0101               	movlb	1	; () banked
 24509  015418  6F24               	movwf	(??_GetMemoryBaud+15)& (0+255),b
 24510  01541A  0101               	movlb	1	; () banked
 24511  01541C  5115               	movf	??_GetMemoryBaud& (0+255),w,b
 24512  01541E  0101               	movlb	1	; () banked
 24513  015420  2521               	addwf	(??_GetMemoryBaud+12)& (0+255),w,b
 24514  015422  0101               	movlb	1	; () banked
 24515  015424  6F25               	movwf	(??_GetMemoryBaud+16)& (0+255),b
 24516  015426  0101               	movlb	1	; () banked
 24517  015428  5116               	movf	(??_GetMemoryBaud+1)& (0+255),w,b
 24518  01542A  0101               	movlb	1	; () banked
 24519  01542C  2122               	addwfc	(??_GetMemoryBaud+13)& (0+255),w,b
 24520  01542E  0101               	movlb	1	; () banked
 24521  015430  6F26               	movwf	(??_GetMemoryBaud+17)& (0+255),b
 24522  015432  0101               	movlb	1	; () banked
 24523  015434  5117               	movf	(??_GetMemoryBaud+2)& (0+255),w,b
 24524  015436  0101               	movlb	1	; () banked
 24525  015438  2123               	addwfc	(??_GetMemoryBaud+14)& (0+255),w,b
 24526  01543A  0101               	movlb	1	; () banked
 24527  01543C  6F27               	movwf	(??_GetMemoryBaud+18)& (0+255),b
 24528  01543E  0101               	movlb	1	; () banked
 24529  015440  5118               	movf	(??_GetMemoryBaud+3)& (0+255),w,b
 24530  015442  0101               	movlb	1	; () banked
 24531  015444  2124               	addwfc	(??_GetMemoryBaud+15)& (0+255),w,b
 24532  015446  0101               	movlb	1	; () banked
 24533  015448  6F28               	movwf	(??_GetMemoryBaud+19)& (0+255),b
 24534  01544A  0101               	movlb	1	; () banked
 24535  01544C  5130               	movf	GetMemoryBaud@BaudTempL& (0+255),w,b
 24536  01544E  0101               	movlb	1	; () banked
 24537  015450  2525               	addwf	(??_GetMemoryBaud+16)& (0+255),w,b
 24538  015452  0101               	movlb	1	; () banked
 24539  015454  6F29               	movwf	GetMemoryBaud@baud& (0+255),b
 24540  015456  0E00               	movlw	0
 24541  015458  0101               	movlb	1	; () banked
 24542  01545A  2126               	addwfc	(??_GetMemoryBaud+17)& (0+255),w,b
 24543  01545C  0101               	movlb	1	; () banked
 24544  01545E  6F2A               	movwf	(GetMemoryBaud@baud+1)& (0+255),b
 24545  015460  0E00               	movlw	0
 24546  015462  0101               	movlb	1	; () banked
 24547  015464  2127               	addwfc	(??_GetMemoryBaud+18)& (0+255),w,b
 24548  015466  0101               	movlb	1	; () banked
 24549  015468  6F2B               	movwf	(GetMemoryBaud@baud+2)& (0+255),b
 24550  01546A  0E00               	movlw	0
 24551  01546C  0101               	movlb	1	; () banked
 24552  01546E  2128               	addwfc	(??_GetMemoryBaud+19)& (0+255),w,b
 24553  015470  0101               	movlb	1	; () banked
 24554  015472  6F2C               	movwf	(GetMemoryBaud@baud+3)& (0+255),b
 24555                           
 24556                           ; BSR set to: 1
 24557                           ;EEPROM.c: 134: return baud;
 24558  015474  C129  F111         	movff	GetMemoryBaud@baud,?_GetMemoryBaud
 24559  015478  C12A  F112         	movff	GetMemoryBaud@baud+1,?_GetMemoryBaud+1
 24560  01547C  C12B  F113         	movff	GetMemoryBaud@baud+2,?_GetMemoryBaud+2
 24561  015480  C12C  F114         	movff	GetMemoryBaud@baud+3,?_GetMemoryBaud+3
 24562  015484  0012               	return	
 24563                           
 24564                           ; BSR set to: 1
 24565                           
 24566                           ; BSR set to: 1
 24567  015486  0012               	return		;funcret
 24568  015488                     __end_of_GetMemoryBaud:
 24569                           	opt stack 0
 24570                           tblptru	equ	0xFF8
 24571                           tblptrh	equ	0xFF7
 24572                           tblptrl	equ	0xFF6
 24573                           tablat	equ	0xFF5
 24574                           prodh	equ	0xFF4
 24575                           prodl	equ	0xFF3
 24576                           intcon	equ	0xFF2
 24577                           intcon2	equ	0xFF1
 24578                           postinc0	equ	0xFEE
 24579                           plusw0	equ	0xFEB
 24580                           wreg	equ	0xFE8
 24581                           indf1	equ	0xFE7
 24582                           postdec1	equ	0xFE5
 24583                           fsr1h	equ	0xFE2
 24584                           fsr1l	equ	0xFE1
 24585                           indf2	equ	0xFDF
 24586                           postinc2	equ	0xFDE
 24587                           postdec2	equ	0xFDD
 24588                           plusw2	equ	0xFDB
 24589                           fsr2h	equ	0xFDA
 24590                           fsr2l	equ	0xFD9
 24591                           status	equ	0xFD8
 24592                           
 24593 ;; *************** function _ReadEEPROM_1Byte *****************
 24594 ;; Defined at:
 24595 ;;		line 54 in file "EEPROM.c"
 24596 ;; Parameters:    Size  Location     Type
 24597 ;;  address         2   14[BANK1 ] unsigned int 
 24598 ;; Auto vars:     Size  Location     Type
 24599 ;;  GIEstatus       1   16[BANK1 ] unsigned char 
 24600 ;; Return value:  Size  Location     Type
 24601 ;;                  2   14[BANK1 ] unsigned int 
 24602 ;; Registers used:
 24603 ;;		wreg, status,2, status,0
 24604 ;; Tracked objects:
 24605 ;;		On entry : 0/0
 24606 ;;		On exit  : 0/0
 24607 ;;		Unchanged: 0/0
 24608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24609 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24610 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24612 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 24613 ;;Total ram usage:        3 bytes
 24614 ;; Hardware stack levels used:    1
 24615 ;; Hardware stack levels required when called:    7
 24616 ;; This function calls:
 24617 ;;		Nothing
 24618 ;; This function is called by:
 24619 ;;		_GetMemoryBaud
 24620 ;;		_GetMemoryParity
 24621 ;;		_GetMemoryLong
 24622 ;;		_GetMemoryChar
 24623 ;;		_GetMemoryInt
 24624 ;; This function uses a non-reentrant model
 24625 ;;
 24626                           
 24627                           	psect	text56
 24628  0009BA                     __ptext56:
 24629                           	opt stack 0
 24630  0009BA                     _ReadEEPROM_1Byte:
 24631                           	opt stack 20
 24632                           
 24633                           ;EEPROM.c: 56: unsigned char GIEstatus = INTCONbits.GIE;
 24634                           
 24635                           ; BSR set to: 1
 24636                           ;incstack = 0
 24637  0009BA  0E00               	movlw	0
 24638  0009BC  BEF2               	btfsc	intcon,7,c	;volatile
 24639  0009BE  0E01               	movlw	1
 24640  0009C0  0101               	movlb	1	; () banked
 24641  0009C2  6F10               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 24642                           
 24643                           ; BSR set to: 1
 24644                           ;EEPROM.c: 57: EECON1bits.EEPGD = 0;
 24645  0009C4  9EA6               	bcf	4006,7,c	;volatile
 24646                           
 24647                           ; BSR set to: 1
 24648                           ;EEPROM.c: 58: EECON1bits.CFGS = 0;
 24649  0009C6  9CA6               	bcf	4006,6,c	;volatile
 24650                           
 24651                           ; BSR set to: 1
 24652                           ;EEPROM.c: 59: EEADRH = (unsigned char)((address & 0x300) >> 8);
 24653  0009C8  0101               	movlb	1	; () banked
 24654  0009CA  510F               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 24655  0009CC  0B03               	andlw	3
 24656  0009CE  6EAA               	movwf	4010,c	;volatile
 24657                           
 24658                           ; BSR set to: 1
 24659                           ;EEPROM.c: 60: EEADR = (unsigned char)(address & 0xFF);
 24660  0009D0  C10E  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 24661                           
 24662                           ; BSR set to: 1
 24663                           ;EEPROM.c: 61: INTCONbits.GIE =0;
 24664  0009D4  9EF2               	bcf	intcon,7,c	;volatile
 24665                           
 24666                           ; BSR set to: 1
 24667                           ;EEPROM.c: 62: EECON1bits.RD = 1;
 24668  0009D6  80A6               	bsf	4006,0,c	;volatile
 24669                           
 24670                           ;EEPROM.c: 63: while(EECON1bits.RD);
 24671  0009D8  D000               	goto	l1573
 24672  0009DA                     l1573:
 24673  0009DA  B0A6               	btfsc	4006,0,c	;volatile
 24674  0009DC  D7FE               	goto	l1573
 24675                           
 24676                           ;EEPROM.c: 64: __nop();
 24677  0009DE  F000               	nop	
 24678                           
 24679                           ;EEPROM.c: 65: __nop();
 24680  0009E0  F000               	nop	
 24681                           
 24682                           ;EEPROM.c: 66: if(GIEstatus)
 24683  0009E2  0101               	movlb	1	; () banked
 24684  0009E4  5110               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 24685  0009E6  0101               	movlb	1	; () banked
 24686  0009E8  A4D8               	btfss	status,2,c
 24687                           
 24688                           ; BSR set to: 1
 24689                           ;EEPROM.c: 67: {
 24690                           ;EEPROM.c: 68: INTCONbits.GIE =1;
 24691  0009EA  8EF2               	bsf	intcon,7,c	;volatile
 24692                           
 24693                           ; BSR set to: 1
 24694                           ;EEPROM.c: 69: }
 24695                           ;EEPROM.c: 70: return (EEDATA);
 24696  0009EC  CFA8 F10E          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 24697  0009F0  0101               	movlb	1	; () banked
 24698  0009F2  6B0F               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 24699                           
 24700                           ; BSR set to: 1
 24701  0009F4  0012               	return		;funcret
 24702  0009F6                     __end_of_ReadEEPROM_1Byte:
 24703                           	opt stack 0
 24704                           tblptru	equ	0xFF8
 24705                           tblptrh	equ	0xFF7
 24706                           tblptrl	equ	0xFF6
 24707                           tablat	equ	0xFF5
 24708                           prodh	equ	0xFF4
 24709                           prodl	equ	0xFF3
 24710                           intcon	equ	0xFF2
 24711                           intcon2	equ	0xFF1
 24712                           postinc0	equ	0xFEE
 24713                           plusw0	equ	0xFEB
 24714                           wreg	equ	0xFE8
 24715                           indf1	equ	0xFE7
 24716                           postdec1	equ	0xFE5
 24717                           fsr1h	equ	0xFE2
 24718                           fsr1l	equ	0xFE1
 24719                           indf2	equ	0xFDF
 24720                           postinc2	equ	0xFDE
 24721                           postdec2	equ	0xFDD
 24722                           plusw2	equ	0xFDB
 24723                           fsr2h	equ	0xFDA
 24724                           fsr2l	equ	0xFD9
 24725                           status	equ	0xFD8
 24726                           
 24727 ;; *************** function _InitUART *****************
 24728 ;; Defined at:
 24729 ;;		line 67 in file "UART.c"
 24730 ;; Parameters:    Size  Location     Type
 24731 ;;  Baud            4   27[BANK1 ] unsigned long 
 24732 ;;  parity          1   31[BANK1 ] unsigned char 
 24733 ;; Auto vars:     Size  Location     Type
 24734 ;;  temp            4   40[BANK1 ] unsigned long 
 24735 ;;  spbrg           2   36[BANK1 ] unsigned int 
 24736 ;;  config          1   39[BANK1 ] unsigned char 
 24737 ;;  baudconfig      1   38[BANK1 ] unsigned char 
 24738 ;; Return value:  Size  Location     Type
 24739 ;;		None               void
 24740 ;; Registers used:
 24741 ;;		wreg, status,2, status,0, cstack
 24742 ;; Tracked objects:
 24743 ;;		On entry : 0/0
 24744 ;;		On exit  : 0/0
 24745 ;;		Unchanged: 0/0
 24746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24747 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 24748 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 24749 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 24750 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
 24751 ;;Total ram usage:       17 bytes
 24752 ;; Hardware stack levels used:    1
 24753 ;; Hardware stack levels required when called:    8
 24754 ;; This function calls:
 24755 ;;		_OpenUSART
 24756 ;;		_ReadUSART
 24757 ;;		___lldiv
 24758 ;;		_baudUSART
 24759 ;; This function is called by:
 24760 ;;		_main
 24761 ;;		_SetBaud
 24762 ;; This function uses a non-reentrant model
 24763 ;;
 24764                           
 24765                           	psect	text57
 24766  0151C8                     __ptext57:
 24767                           	opt stack 0
 24768  0151C8                     _InitUART:
 24769                           	opt stack 22
 24770                           
 24771                           ;UART.c: 69: unsigned long temp;
 24772                           ;UART.c: 70: unsigned char config;
 24773                           ;UART.c: 71: unsigned int spbrg;
 24774                           ;UART.c: 72: unsigned char baudconfig;
 24775                           ;UART.c: 82: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
 24776                           
 24777                           ; BSR set to: 1
 24778                           ;incstack = 0
 24779  0151C8  0E4F               	movlw	79
 24780  0151CA  16AB               	andwf	4011,f,c	;volatile
 24781  0151CC  9AAC               	bcf	4012,5,c	;volatile
 24782  0151CE  0ECF               	movlw	207
 24783  0151D0  169D               	andwf	3997,f,c	;volatile
 24784                           
 24785                           ;UART.c: 83: config =0;
 24786  0151D2  0E00               	movlw	0
 24787  0151D4  0101               	movlb	1	; () banked
 24788  0151D6  6F27               	movwf	InitUART@config& (0+255),b
 24789                           
 24790                           ; BSR set to: 1
 24791                           ;UART.c: 84: baudconfig =0;
 24792  0151D8  0E00               	movlw	0
 24793  0151DA  0101               	movlb	1	; () banked
 24794  0151DC  6F26               	movwf	InitUART@baudconfig& (0+255),b
 24795                           
 24796                           ; BSR set to: 1
 24797                           ;UART.c: 85: BAUDCON =0;
 24798  0151DE  0E00               	movlw	0
 24799  0151E0  6EB8               	movwf	4024,c	;volatile
 24800                           
 24801                           ; BSR set to: 1
 24802                           ;UART.c: 89: config |= 0b01000000;
 24803  0151E2  0101               	movlb	1	; () banked
 24804  0151E4  8D27               	bsf	InitUART@config& (0+255),6,b
 24805                           
 24806                           ; BSR set to: 1
 24807                           ;UART.c: 90: config |= 0b00001000;
 24808  0151E6  0101               	movlb	1	; () banked
 24809  0151E8  8727               	bsf	InitUART@config& (0+255),3,b
 24810                           
 24811                           ; BSR set to: 1
 24812                           ;UART.c: 92: config |= 0b00010000;
 24813  0151EA  0101               	movlb	1	; () banked
 24814  0151EC  8927               	bsf	InitUART@config& (0+255),4,b
 24815                           
 24816                           ; BSR set to: 1
 24817                           ;UART.c: 94: if(parity)
 24818  0151EE  0101               	movlb	1	; () banked
 24819  0151F0  511F               	movf	InitUART@parity& (0+255),w,b
 24820  0151F2  0101               	movlb	1	; () banked
 24821  0151F4  B4D8               	btfsc	status,2,c
 24822  0151F6  D003               	goto	l12451
 24823                           
 24824                           ; BSR set to: 1
 24825                           ;UART.c: 95: {
 24826                           ;UART.c: 96: config |= 0b00000010;
 24827  0151F8  0101               	movlb	1	; () banked
 24828  0151FA  8327               	bsf	InitUART@config& (0+255),1,b
 24829                           
 24830                           ;UART.c: 97: }
 24831  0151FC  D002               	goto	l483
 24832  0151FE                     l12451:
 24833                           
 24834                           ; BSR set to: 1
 24835                           ;UART.c: 98: else
 24836                           ;UART.c: 99: {
 24837                           ;UART.c: 100: config &= ~0b00000010;
 24838  0151FE  0101               	movlb	1	; () banked
 24839  015200  9327               	bcf	InitUART@config& (0+255),1,b
 24840  015202                     l483:
 24841                           
 24842                           ; BSR set to: 1
 24843                           ;UART.c: 101: }
 24844                           ;UART.c: 102: baudconfig |= 0b00001000;
 24845  015202  0101               	movlb	1	; () banked
 24846  015204  8726               	bsf	InitUART@baudconfig& (0+255),3,b
 24847                           
 24848                           ; BSR set to: 1
 24849                           ;UART.c: 105: temp = (40960000L / Baud) - 1;
 24850  015206  0E00               	movlw	0
 24851  015208  0101               	movlb	1	; () banked
 24852  01520A  6F0E               	movwf	___lldiv@dividend& (0+255),b
 24853  01520C  0E00               	movlw	0
 24854  01520E  6F0F               	movwf	(___lldiv@dividend+1)& (0+255),b
 24855  015210  0E71               	movlw	113
 24856  015212  6F10               	movwf	(___lldiv@dividend+2)& (0+255),b
 24857  015214  0E02               	movlw	2
 24858  015216  6F11               	movwf	(___lldiv@dividend+3)& (0+255),b
 24859  015218  C11B  F112         	movff	InitUART@Baud,___lldiv@divisor
 24860  01521C  C11C  F113         	movff	InitUART@Baud+1,___lldiv@divisor+1
 24861  015220  C11D  F114         	movff	InitUART@Baud+2,___lldiv@divisor+2
 24862  015224  C11E  F115         	movff	InitUART@Baud+3,___lldiv@divisor+3
 24863  015228  EC31  F0B4         	call	___lldiv	;wreg free
 24864  01522C  0EFF               	movlw	255
 24865  01522E  0101               	movlb	1	; () banked
 24866  015230  250E               	addwf	?___lldiv& (0+255),w,b
 24867  015232  0101               	movlb	1	; () banked
 24868  015234  6F28               	movwf	InitUART@temp& (0+255),b
 24869  015236  0EFF               	movlw	255
 24870  015238  0101               	movlb	1	; () banked
 24871  01523A  210F               	addwfc	(?___lldiv+1)& (0+255),w,b
 24872  01523C  0101               	movlb	1	; () banked
 24873  01523E  6F29               	movwf	(InitUART@temp+1)& (0+255),b
 24874  015240  0EFF               	movlw	255
 24875  015242  0101               	movlb	1	; () banked
 24876  015244  2110               	addwfc	(?___lldiv+2)& (0+255),w,b
 24877  015246  0101               	movlb	1	; () banked
 24878  015248  6F2A               	movwf	(InitUART@temp+2)& (0+255),b
 24879  01524A  0EFF               	movlw	255
 24880  01524C  0101               	movlb	1	; () banked
 24881  01524E  2111               	addwfc	(?___lldiv+3)& (0+255),w,b
 24882  015250  0101               	movlb	1	; () banked
 24883  015252  6F2B               	movwf	(InitUART@temp+3)& (0+255),b
 24884                           
 24885                           ; BSR set to: 1
 24886                           ;UART.c: 106: temp = (temp >> 2) - 1;
 24887  015254  C128  F120         	movff	InitUART@temp,??_InitUART
 24888  015258  C129  F121         	movff	InitUART@temp+1,??_InitUART+1
 24889  01525C  C12A  F122         	movff	InitUART@temp+2,??_InitUART+2
 24890  015260  C12B  F123         	movff	InitUART@temp+3,??_InitUART+3
 24891  015264  0E03               	movlw	3
 24892  015266  D006               	goto	u15320
 24893  015268                     u15325:
 24894  015268  0101               	movlb	1	; () banked
 24895  01526A  90D8               	bcf	status,0,c
 24896  01526C  3323               	rrcf	(??_InitUART+3)& (0+255),f,b
 24897  01526E  3322               	rrcf	(??_InitUART+2)& (0+255),f,b
 24898  015270  3321               	rrcf	(??_InitUART+1)& (0+255),f,b
 24899  015272  3320               	rrcf	??_InitUART& (0+255),f,b
 24900  015274                     u15320:
 24901  015274  2EE8               	decfsz	wreg,f,c
 24902  015276  D7F8               	goto	u15325
 24903  015278  0EFF               	movlw	255
 24904  01527A  0101               	movlb	1	; () banked
 24905  01527C  2520               	addwf	??_InitUART& (0+255),w,b
 24906  01527E  0101               	movlb	1	; () banked
 24907  015280  6F28               	movwf	InitUART@temp& (0+255),b
 24908  015282  0EFF               	movlw	255
 24909  015284  0101               	movlb	1	; () banked
 24910  015286  2121               	addwfc	(??_InitUART+1)& (0+255),w,b
 24911  015288  0101               	movlb	1	; () banked
 24912  01528A  6F29               	movwf	(InitUART@temp+1)& (0+255),b
 24913  01528C  0EFF               	movlw	255
 24914  01528E  0101               	movlb	1	; () banked
 24915  015290  2122               	addwfc	(??_InitUART+2)& (0+255),w,b
 24916  015292  0101               	movlb	1	; () banked
 24917  015294  6F2A               	movwf	(InitUART@temp+2)& (0+255),b
 24918  015296  0EFF               	movlw	255
 24919  015298  0101               	movlb	1	; () banked
 24920  01529A  2123               	addwfc	(??_InitUART+3)& (0+255),w,b
 24921  01529C  0101               	movlb	1	; () banked
 24922  01529E  6F2B               	movwf	(InitUART@temp+3)& (0+255),b
 24923                           
 24924                           ; BSR set to: 1
 24925                           ;UART.c: 107: spbrg = (unsigned int)temp;
 24926  0152A0  C128  F124         	movff	InitUART@temp,InitUART@spbrg
 24927  0152A4  C129  F125         	movff	InitUART@temp+1,InitUART@spbrg+1
 24928                           
 24929                           ; BSR set to: 1
 24930                           ;UART.c: 109: OpenUSART(config, spbrg);
 24931  0152A8  C124  F10E         	movff	InitUART@spbrg,OpenUSART@spbrg
 24932  0152AC  C125  F10F         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 24933  0152B0  0101               	movlb	1	; () banked
 24934  0152B2  5127               	movf	InitUART@config& (0+255),w,b
 24935  0152B4  EC3F  F0BC         	call	_OpenUSART
 24936                           
 24937                           ;UART.c: 110: baudUSART(baudconfig);
 24938  0152B8  0101               	movlb	1	; () banked
 24939  0152BA  5126               	movf	InitUART@baudconfig& (0+255),w,b
 24940  0152BC  EC82  F007         	call	_baudUSART
 24941                           
 24942                           ;UART.c: 111: temp = ReadUSART();
 24943  0152C0  EC87  F005         	call	_ReadUSART	;wreg free
 24944  0152C4  0101               	movlb	1	; () banked
 24945  0152C6  6F20               	movwf	??_InitUART& (0+255),b
 24946  0152C8  0101               	movlb	1	; () banked
 24947  0152CA  5120               	movf	??_InitUART& (0+255),w,b
 24948  0152CC  0101               	movlb	1	; () banked
 24949  0152CE  6F28               	movwf	InitUART@temp& (0+255),b
 24950  0152D0  6B29               	clrf	(InitUART@temp+1)& (0+255),b
 24951  0152D2  6B2A               	clrf	(InitUART@temp+2)& (0+255),b
 24952  0152D4  6B2B               	clrf	(InitUART@temp+3)& (0+255),b
 24953                           
 24954                           ; BSR set to: 1
 24955                           ;UART.c: 112: temp = ReadUSART();
 24956  0152D6  EC87  F005         	call	_ReadUSART	;wreg free
 24957  0152DA  0101               	movlb	1	; () banked
 24958  0152DC  6F20               	movwf	??_InitUART& (0+255),b
 24959  0152DE  0101               	movlb	1	; () banked
 24960  0152E0  5120               	movf	??_InitUART& (0+255),w,b
 24961  0152E2  0101               	movlb	1	; () banked
 24962  0152E4  6F28               	movwf	InitUART@temp& (0+255),b
 24963  0152E6  6B29               	clrf	(InitUART@temp+1)& (0+255),b
 24964  0152E8  6B2A               	clrf	(InitUART@temp+2)& (0+255),b
 24965  0152EA  6B2B               	clrf	(InitUART@temp+3)& (0+255),b
 24966                           
 24967                           ; BSR set to: 1
 24968                           ;UART.c: 113: temp = ReadUSART();
 24969  0152EC  EC87  F005         	call	_ReadUSART	;wreg free
 24970  0152F0  0101               	movlb	1	; () banked
 24971  0152F2  6F20               	movwf	??_InitUART& (0+255),b
 24972  0152F4  0101               	movlb	1	; () banked
 24973  0152F6  5120               	movf	??_InitUART& (0+255),w,b
 24974  0152F8  0101               	movlb	1	; () banked
 24975  0152FA  6F28               	movwf	InitUART@temp& (0+255),b
 24976  0152FC  6B29               	clrf	(InitUART@temp+1)& (0+255),b
 24977  0152FE  6B2A               	clrf	(InitUART@temp+2)& (0+255),b
 24978  015300  6B2B               	clrf	(InitUART@temp+3)& (0+255),b
 24979                           
 24980                           ; BSR set to: 1
 24981                           ;UART.c: 114: temp = ReadUSART();
 24982  015302  EC87  F005         	call	_ReadUSART	;wreg free
 24983  015306  0101               	movlb	1	; () banked
 24984  015308  6F20               	movwf	??_InitUART& (0+255),b
 24985  01530A  0101               	movlb	1	; () banked
 24986  01530C  5120               	movf	??_InitUART& (0+255),w,b
 24987  01530E  0101               	movlb	1	; () banked
 24988  015310  6F28               	movwf	InitUART@temp& (0+255),b
 24989  015312  6B29               	clrf	(InitUART@temp+1)& (0+255),b
 24990  015314  6B2A               	clrf	(InitUART@temp+2)& (0+255),b
 24991  015316  6B2B               	clrf	(InitUART@temp+3)& (0+255),b
 24992                           
 24993                           ; BSR set to: 1
 24994                           ;UART.c: 115: temp = ReadUSART();
 24995  015318  EC87  F005         	call	_ReadUSART	;wreg free
 24996  01531C  0101               	movlb	1	; () banked
 24997  01531E  6F20               	movwf	??_InitUART& (0+255),b
 24998  015320  0101               	movlb	1	; () banked
 24999  015322  5120               	movf	??_InitUART& (0+255),w,b
 25000  015324  0101               	movlb	1	; () banked
 25001  015326  6F28               	movwf	InitUART@temp& (0+255),b
 25002  015328  6B29               	clrf	(InitUART@temp+1)& (0+255),b
 25003  01532A  6B2A               	clrf	(InitUART@temp+2)& (0+255),b
 25004  01532C  6B2B               	clrf	(InitUART@temp+3)& (0+255),b
 25005                           
 25006                           ; BSR set to: 1
 25007                           ;UART.c: 117: IPR1bits.RCIP = 0;
 25008  01532E  9A9F               	bcf	3999,5,c	;volatile
 25009                           
 25010                           ; BSR set to: 1
 25011  015330  0012               	return		;funcret
 25012  015332                     __end_of_InitUART:
 25013                           	opt stack 0
 25014                           tblptru	equ	0xFF8
 25015                           tblptrh	equ	0xFF7
 25016                           tblptrl	equ	0xFF6
 25017                           tablat	equ	0xFF5
 25018                           prodh	equ	0xFF4
 25019                           prodl	equ	0xFF3
 25020                           intcon	equ	0xFF2
 25021                           intcon2	equ	0xFF1
 25022                           postinc0	equ	0xFEE
 25023                           plusw0	equ	0xFEB
 25024                           wreg	equ	0xFE8
 25025                           indf1	equ	0xFE7
 25026                           postdec1	equ	0xFE5
 25027                           fsr1h	equ	0xFE2
 25028                           fsr1l	equ	0xFE1
 25029                           indf2	equ	0xFDF
 25030                           postinc2	equ	0xFDE
 25031                           postdec2	equ	0xFDD
 25032                           plusw2	equ	0xFDB
 25033                           fsr2h	equ	0xFDA
 25034                           fsr2l	equ	0xFD9
 25035                           status	equ	0xFD8
 25036                           
 25037 ;; *************** function _baudUSART *****************
 25038 ;; Defined at:
 25039 ;;		line 125 in file "UART.c"
 25040 ;; Parameters:    Size  Location     Type
 25041 ;;  baudconfig      1    wreg     unsigned char 
 25042 ;; Auto vars:     Size  Location     Type
 25043 ;;  baudconfig      1   14[BANK1 ] unsigned char 
 25044 ;; Return value:  Size  Location     Type
 25045 ;;		None               void
 25046 ;; Registers used:
 25047 ;;		wreg, status,2
 25048 ;; Tracked objects:
 25049 ;;		On entry : 0/0
 25050 ;;		On exit  : 0/0
 25051 ;;		Unchanged: 0/0
 25052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25054 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25056 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25057 ;;Total ram usage:        1 bytes
 25058 ;; Hardware stack levels used:    1
 25059 ;; Hardware stack levels required when called:    7
 25060 ;; This function calls:
 25061 ;;		Nothing
 25062 ;; This function is called by:
 25063 ;;		_InitUART
 25064 ;; This function uses a non-reentrant model
 25065 ;;
 25066                           
 25067                           	psect	text58
 25068  000F04                     __ptext58:
 25069                           	opt stack 0
 25070  000F04                     _baudUSART:
 25071                           	opt stack 22
 25072                           
 25073                           ; BSR set to: 1
 25074                           ;incstack = 0
 25075                           ;baudUSART@baudconfig stored from wreg
 25076  000F04  0101               	movlb	1	; () banked
 25077  000F06  6F0E               	movwf	baudUSART@baudconfig& (0+255),b
 25078                           
 25079                           ; BSR set to: 1
 25080                           ;UART.c: 127: BAUDCON =0;
 25081  000F08  0E00               	movlw	0
 25082  000F0A  6EB8               	movwf	4024,c	;volatile
 25083                           
 25084                           ; BSR set to: 1
 25085                           ;UART.c: 128: BAUDCON = baudconfig;
 25086  000F0C  C10E  FFB8         	movff	baudUSART@baudconfig,4024	;volatile
 25087                           
 25088                           ; BSR set to: 1
 25089  000F10  0012               	return		;funcret
 25090  000F12                     __end_of_baudUSART:
 25091                           	opt stack 0
 25092                           tblptru	equ	0xFF8
 25093                           tblptrh	equ	0xFF7
 25094                           tblptrl	equ	0xFF6
 25095                           tablat	equ	0xFF5
 25096                           prodh	equ	0xFF4
 25097                           prodl	equ	0xFF3
 25098                           intcon	equ	0xFF2
 25099                           intcon2	equ	0xFF1
 25100                           postinc0	equ	0xFEE
 25101                           plusw0	equ	0xFEB
 25102                           wreg	equ	0xFE8
 25103                           indf1	equ	0xFE7
 25104                           postdec1	equ	0xFE5
 25105                           fsr1h	equ	0xFE2
 25106                           fsr1l	equ	0xFE1
 25107                           indf2	equ	0xFDF
 25108                           postinc2	equ	0xFDE
 25109                           postdec2	equ	0xFDD
 25110                           plusw2	equ	0xFDB
 25111                           fsr2h	equ	0xFDA
 25112                           fsr2l	equ	0xFD9
 25113                           status	equ	0xFD8
 25114                           
 25115 ;; *************** function ___lldiv *****************
 25116 ;; Defined at:
 25117 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 25118 ;; Parameters:    Size  Location     Type
 25119 ;;  dividend        4   14[BANK1 ] unsigned long 
 25120 ;;  divisor         4   18[BANK1 ] unsigned long 
 25121 ;; Auto vars:     Size  Location     Type
 25122 ;;  quotient        4   22[BANK1 ] unsigned long 
 25123 ;;  counter         1   26[BANK1 ] unsigned char 
 25124 ;; Return value:  Size  Location     Type
 25125 ;;                  4   14[BANK1 ] unsigned long 
 25126 ;; Registers used:
 25127 ;;		wreg, status,2, status,0
 25128 ;; Tracked objects:
 25129 ;;		On entry : 0/0
 25130 ;;		On exit  : 0/0
 25131 ;;		Unchanged: 0/0
 25132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25133 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 25134 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 25135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25136 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 25137 ;;Total ram usage:       13 bytes
 25138 ;; Hardware stack levels used:    1
 25139 ;; Hardware stack levels required when called:    7
 25140 ;; This function calls:
 25141 ;;		Nothing
 25142 ;; This function is called by:
 25143 ;;		_InitUART
 25144 ;;		_sprintf
 25145 ;; This function uses a non-reentrant model
 25146 ;;
 25147                           
 25148                           	psect	text59
 25149  016862                     __ptext59:
 25150                           	opt stack 0
 25151  016862                     ___lldiv:
 25152                           	opt stack 22
 25153                           
 25154                           ; BSR set to: 1
 25155                           ;incstack = 0
 25156  016862  0E00               	movlw	0
 25157  016864  0101               	movlb	1	; () banked
 25158  016866  6F16               	movwf	___lldiv@quotient& (0+255),b
 25159  016868  0E00               	movlw	0
 25160  01686A  6F17               	movwf	(___lldiv@quotient+1)& (0+255),b
 25161  01686C  0E00               	movlw	0
 25162  01686E  6F18               	movwf	(___lldiv@quotient+2)& (0+255),b
 25163  016870  0E00               	movlw	0
 25164  016872  6F19               	movwf	(___lldiv@quotient+3)& (0+255),b
 25165                           
 25166                           ; BSR set to: 1
 25167  016874  0101               	movlb	1	; () banked
 25168  016876  5112               	movf	___lldiv@divisor& (0+255),w,b
 25169  016878  0101               	movlb	1	; () banked
 25170  01687A  1113               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 25171  01687C  0101               	movlb	1	; () banked
 25172  01687E  1114               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 25173  016880  0101               	movlb	1	; () banked
 25174  016882  1115               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 25175  016884  B4D8               	btfsc	status,2,c
 25176  016886  D047               	goto	l2429
 25177                           
 25178                           ; BSR set to: 1
 25179  016888  0E01               	movlw	1
 25180  01688A  0101               	movlb	1	; () banked
 25181  01688C  6F1A               	movwf	___lldiv@counter& (0+255),b
 25182  01688E  D009               	goto	l12341
 25183  016890                     l12339:
 25184                           
 25185                           ; BSR set to: 1
 25186  016890  0101               	movlb	1	; () banked
 25187  016892  90D8               	bcf	status,0,c
 25188  016894  3712               	rlcf	___lldiv@divisor& (0+255),f,b
 25189  016896  3713               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 25190  016898  3714               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 25191  01689A  3715               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 25192  01689C  0101               	movlb	1	; () banked
 25193  01689E  2B1A               	incf	___lldiv@counter& (0+255),f,b
 25194  0168A0  D000               	goto	l12341
 25195  0168A2                     l12341:
 25196                           
 25197                           ; BSR set to: 1
 25198  0168A2  0101               	movlb	1	; () banked
 25199  0168A4  BF15               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 25200  0168A6  D002               	goto	l12343
 25201  0168A8  D7F3               	goto	l12339
 25202                           
 25203                           ; BSR set to: 1
 25204  0168AA  D000               	goto	l12343
 25205  0168AC                     l12343:
 25206                           
 25207                           ; BSR set to: 1
 25208  0168AC  0101               	movlb	1	; () banked
 25209  0168AE  90D8               	bcf	status,0,c
 25210  0168B0  3716               	rlcf	___lldiv@quotient& (0+255),f,b
 25211  0168B2  3717               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 25212  0168B4  3718               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 25213  0168B6  3719               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 25214                           
 25215                           ; BSR set to: 1
 25216  0168B8  0101               	movlb	1	; () banked
 25217  0168BA  5112               	movf	___lldiv@divisor& (0+255),w,b
 25218  0168BC  0101               	movlb	1	; () banked
 25219  0168BE  5D0E               	subwf	___lldiv@dividend& (0+255),w,b
 25220  0168C0  0101               	movlb	1	; () banked
 25221  0168C2  5113               	movf	(___lldiv@divisor+1)& (0+255),w,b
 25222  0168C4  0101               	movlb	1	; () banked
 25223  0168C6  590F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 25224  0168C8  0101               	movlb	1	; () banked
 25225  0168CA  5114               	movf	(___lldiv@divisor+2)& (0+255),w,b
 25226  0168CC  0101               	movlb	1	; () banked
 25227  0168CE  5910               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 25228  0168D0  0101               	movlb	1	; () banked
 25229  0168D2  5115               	movf	(___lldiv@divisor+3)& (0+255),w,b
 25230  0168D4  0101               	movlb	1	; () banked
 25231  0168D6  5911               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 25232  0168D8  A0D8               	btfss	status,0,c
 25233  0168DA  D013               	goto	l12351
 25234                           
 25235                           ; BSR set to: 1
 25236  0168DC  0101               	movlb	1	; () banked
 25237  0168DE  5112               	movf	___lldiv@divisor& (0+255),w,b
 25238  0168E0  0101               	movlb	1	; () banked
 25239  0168E2  5F0E               	subwf	___lldiv@dividend& (0+255),f,b
 25240  0168E4  0101               	movlb	1	; () banked
 25241  0168E6  5113               	movf	(___lldiv@divisor+1)& (0+255),w,b
 25242  0168E8  0101               	movlb	1	; () banked
 25243  0168EA  5B0F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 25244  0168EC  0101               	movlb	1	; () banked
 25245  0168EE  5114               	movf	(___lldiv@divisor+2)& (0+255),w,b
 25246  0168F0  0101               	movlb	1	; () banked
 25247  0168F2  5B10               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 25248  0168F4  0101               	movlb	1	; () banked
 25249  0168F6  5115               	movf	(___lldiv@divisor+3)& (0+255),w,b
 25250  0168F8  0101               	movlb	1	; () banked
 25251  0168FA  5B11               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 25252                           
 25253                           ; BSR set to: 1
 25254  0168FC  0101               	movlb	1	; () banked
 25255  0168FE  8116               	bsf	___lldiv@quotient& (0+255),0,b
 25256  016900  D000               	goto	l12351
 25257  016902                     l12351:
 25258                           
 25259                           ; BSR set to: 1
 25260  016902  0101               	movlb	1	; () banked
 25261  016904  90D8               	bcf	status,0,c
 25262  016906  3315               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 25263  016908  3314               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 25264  01690A  3313               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 25265  01690C  3312               	rrcf	___lldiv@divisor& (0+255),f,b
 25266                           
 25267                           ; BSR set to: 1
 25268  01690E  0101               	movlb	1	; () banked
 25269  016910  2F1A               	decfsz	___lldiv@counter& (0+255),f,b
 25270  016912  D7CC               	goto	l12343
 25271  016914  D000               	goto	l2429
 25272  016916                     l2429:
 25273                           
 25274                           ; BSR set to: 1
 25275  016916  C116  F10E         	movff	___lldiv@quotient,?___lldiv
 25276  01691A  C117  F10F         	movff	___lldiv@quotient+1,?___lldiv+1
 25277  01691E  C118  F110         	movff	___lldiv@quotient+2,?___lldiv+2
 25278  016922  C119  F111         	movff	___lldiv@quotient+3,?___lldiv+3
 25279                           
 25280                           ; BSR set to: 1
 25281  016926  0012               	return		;funcret
 25282  016928                     __end_of___lldiv:
 25283                           	opt stack 0
 25284                           tblptru	equ	0xFF8
 25285                           tblptrh	equ	0xFF7
 25286                           tblptrl	equ	0xFF6
 25287                           tablat	equ	0xFF5
 25288                           prodh	equ	0xFF4
 25289                           prodl	equ	0xFF3
 25290                           intcon	equ	0xFF2
 25291                           intcon2	equ	0xFF1
 25292                           postinc0	equ	0xFEE
 25293                           plusw0	equ	0xFEB
 25294                           wreg	equ	0xFE8
 25295                           indf1	equ	0xFE7
 25296                           postdec1	equ	0xFE5
 25297                           fsr1h	equ	0xFE2
 25298                           fsr1l	equ	0xFE1
 25299                           indf2	equ	0xFDF
 25300                           postinc2	equ	0xFDE
 25301                           postdec2	equ	0xFDD
 25302                           plusw2	equ	0xFDB
 25303                           fsr2h	equ	0xFDA
 25304                           fsr2l	equ	0xFD9
 25305                           status	equ	0xFD8
 25306                           
 25307 ;; *************** function _ReadUSART *****************
 25308 ;; Defined at:
 25309 ;;		line 250 in file "UART.c"
 25310 ;; Parameters:    Size  Location     Type
 25311 ;;		None
 25312 ;; Auto vars:     Size  Location     Type
 25313 ;;  data            1   14[BANK1 ] unsigned char 
 25314 ;; Return value:  Size  Location     Type
 25315 ;;                  1    wreg      unsigned char 
 25316 ;; Registers used:
 25317 ;;		wreg, status,2, status,0
 25318 ;; Tracked objects:
 25319 ;;		On entry : 0/0
 25320 ;;		On exit  : 0/0
 25321 ;;		Unchanged: 0/0
 25322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25324 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25326 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25327 ;;Total ram usage:        1 bytes
 25328 ;; Hardware stack levels used:    1
 25329 ;; Hardware stack levels required when called:    7
 25330 ;; This function calls:
 25331 ;;		Nothing
 25332 ;; This function is called by:
 25333 ;;		_main
 25334 ;;		_InitUART
 25335 ;; This function uses a non-reentrant model
 25336 ;;
 25337                           
 25338                           	psect	text60
 25339  000B0E                     __ptext60:
 25340                           	opt stack 0
 25341  000B0E                     _ReadUSART:
 25342                           	opt stack 23
 25343                           
 25344                           ;UART.c: 252: char data;
 25345                           ;UART.c: 254: USART_Status.val &= 0xf2;
 25346                           
 25347                           ; BSR set to: 1
 25348                           ;incstack = 0
 25349  000B0E  0EF2               	movlw	242
 25350  000B10  0101               	movlb	1	; () banked
 25351  000B12  179D               	andwf	_USART_Status& (0+255),f,b
 25352                           
 25353                           ; BSR set to: 1
 25354                           ;UART.c: 256: if(RCSTAbits.RX9)
 25355  000B14  ACAB               	btfss	4011,6,c	;volatile
 25356  000B16  D007               	goto	l528
 25357                           
 25358                           ; BSR set to: 1
 25359                           ;UART.c: 257: {
 25360                           ;UART.c: 258: USART_Status.RX_NINE = 0;
 25361  000B18  0101               	movlb	1	; () banked
 25362  000B1A  919D               	bcf	_USART_Status& (0+255),0,b
 25363                           
 25364                           ;UART.c: 259: if(RCSTAbits.RX9D)
 25365  000B1C  A0AB               	btfss	4011,0,c	;volatile
 25366  000B1E  D003               	goto	l528
 25367                           
 25368                           ; BSR set to: 1
 25369                           ;UART.c: 260: USART_Status.RX_NINE = 1;
 25370  000B20  0101               	movlb	1	; () banked
 25371  000B22  819D               	bsf	_USART_Status& (0+255),0,b
 25372  000B24  D000               	goto	l528
 25373  000B26                     l528:
 25374                           
 25375                           ; BSR set to: 1
 25376                           ;UART.c: 261: }
 25377                           ;UART.c: 263: if(RCSTAbits.FERR)
 25378  000B26  A4AB               	btfss	4011,2,c	;volatile
 25379  000B28  D002               	goto	l530
 25380                           
 25381                           ; BSR set to: 1
 25382                           ;UART.c: 264: USART_Status.FRAME_ERROR = 1;
 25383  000B2A  0101               	movlb	1	; () banked
 25384  000B2C  859D               	bsf	_USART_Status& (0+255),2,b
 25385  000B2E                     l530:
 25386                           
 25387                           ; BSR set to: 1
 25388                           ;UART.c: 266: if(RCSTAbits.OERR)
 25389  000B2E  A2AB               	btfss	4011,1,c	;volatile
 25390  000B30  D002               	goto	l531
 25391                           
 25392                           ; BSR set to: 1
 25393                           ;UART.c: 267: USART_Status.OVERRUN_ERROR = 1;
 25394  000B32  0101               	movlb	1	; () banked
 25395  000B34  879D               	bsf	_USART_Status& (0+255),3,b
 25396  000B36                     l531:
 25397                           
 25398                           ; BSR set to: 1
 25399                           ;UART.c: 269: data = RCREG;
 25400  000B36  CFAE F10E          	movff	4014,ReadUSART@data	;volatile
 25401                           
 25402                           ; BSR set to: 1
 25403                           ;UART.c: 271: return (data);
 25404  000B3A  0101               	movlb	1	; () banked
 25405  000B3C  510E               	movf	ReadUSART@data& (0+255),w,b
 25406  000B3E  0012               	return	
 25407                           
 25408                           ; BSR set to: 1
 25409                           
 25410                           ; BSR set to: 1
 25411  000B40  0012               	return		;funcret
 25412  000B42                     __end_of_ReadUSART:
 25413                           	opt stack 0
 25414                           tblptru	equ	0xFF8
 25415                           tblptrh	equ	0xFF7
 25416                           tblptrl	equ	0xFF6
 25417                           tablat	equ	0xFF5
 25418                           prodh	equ	0xFF4
 25419                           prodl	equ	0xFF3
 25420                           intcon	equ	0xFF2
 25421                           intcon2	equ	0xFF1
 25422                           postinc0	equ	0xFEE
 25423                           plusw0	equ	0xFEB
 25424                           wreg	equ	0xFE8
 25425                           indf1	equ	0xFE7
 25426                           postdec1	equ	0xFE5
 25427                           fsr1h	equ	0xFE2
 25428                           fsr1l	equ	0xFE1
 25429                           indf2	equ	0xFDF
 25430                           postinc2	equ	0xFDE
 25431                           postdec2	equ	0xFDD
 25432                           plusw2	equ	0xFDB
 25433                           fsr2h	equ	0xFDA
 25434                           fsr2l	equ	0xFD9
 25435                           status	equ	0xFD8
 25436                           
 25437 ;; *************** function _OpenUSART *****************
 25438 ;; Defined at:
 25439 ;;		line 136 in file "UART.c"
 25440 ;; Parameters:    Size  Location     Type
 25441 ;;  config          1    wreg     unsigned char 
 25442 ;;  spbrg           2   14[BANK1 ] unsigned int 
 25443 ;; Auto vars:     Size  Location     Type
 25444 ;;  config          1   16[BANK1 ] unsigned char 
 25445 ;; Return value:  Size  Location     Type
 25446 ;;		None               void
 25447 ;; Registers used:
 25448 ;;		wreg, status,2
 25449 ;; Tracked objects:
 25450 ;;		On entry : 0/0
 25451 ;;		On exit  : 0/0
 25452 ;;		Unchanged: 0/0
 25453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25454 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25455 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25457 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 25458 ;;Total ram usage:        3 bytes
 25459 ;; Hardware stack levels used:    1
 25460 ;; Hardware stack levels required when called:    7
 25461 ;; This function calls:
 25462 ;;		Nothing
 25463 ;; This function is called by:
 25464 ;;		_InitUART
 25465 ;; This function uses a non-reentrant model
 25466 ;;
 25467                           
 25468                           	psect	text61
 25469  01787E                     __ptext61:
 25470                           	opt stack 0
 25471  01787E                     _OpenUSART:
 25472                           	opt stack 22
 25473                           
 25474                           ; BSR set to: 1
 25475                           ;incstack = 0
 25476                           ;OpenUSART@config stored from wreg
 25477  01787E  0101               	movlb	1	; () banked
 25478  017880  6F10               	movwf	OpenUSART@config& (0+255),b
 25479                           
 25480                           ; BSR set to: 1
 25481                           ;UART.c: 138: TXSTA = 0;
 25482  017882  0E00               	movlw	0
 25483  017884  6EAC               	movwf	4012,c	;volatile
 25484                           
 25485                           ;UART.c: 139: RCSTA = 0;
 25486  017886  0E00               	movlw	0
 25487  017888  6EAB               	movwf	4011,c	;volatile
 25488                           
 25489                           ; BSR set to: 1
 25490                           ;UART.c: 141: if(config&0x01)
 25491  01788A  0101               	movlb	1	; () banked
 25492  01788C  A110               	btfss	OpenUSART@config& (0+255),0,b
 25493  01788E  D002               	goto	l12053
 25494                           
 25495                           ; BSR set to: 1
 25496                           ;UART.c: 142: TXSTAbits.SYNC = 1;
 25497  017890  88AC               	bsf	4012,4,c	;volatile
 25498  017892  D000               	goto	l12053
 25499  017894                     l12053:
 25500                           
 25501                           ; BSR set to: 1
 25502                           ;UART.c: 144: if(config&0x02)
 25503  017894  0101               	movlb	1	; () banked
 25504  017896  A310               	btfss	OpenUSART@config& (0+255),1,b
 25505  017898  D003               	goto	l12057
 25506                           
 25507                           ; BSR set to: 1
 25508                           ;UART.c: 145: {
 25509                           ;UART.c: 146: TXSTAbits.TX9 = 1;
 25510  01789A  8CAC               	bsf	4012,6,c	;volatile
 25511                           
 25512                           ;UART.c: 147: RCSTAbits.RX9 = 1;
 25513  01789C  8CAB               	bsf	4011,6,c	;volatile
 25514  01789E  D000               	goto	l12057
 25515  0178A0                     l12057:
 25516                           
 25517                           ; BSR set to: 1
 25518                           ;UART.c: 148: }
 25519                           ;UART.c: 150: if(config&0x04)
 25520  0178A0  0101               	movlb	1	; () banked
 25521  0178A2  A510               	btfss	OpenUSART@config& (0+255),2,b
 25522  0178A4  D002               	goto	l12061
 25523                           
 25524                           ; BSR set to: 1
 25525                           ;UART.c: 151: TXSTAbits.CSRC = 1;
 25526  0178A6  8EAC               	bsf	4012,7,c	;volatile
 25527  0178A8  D000               	goto	l12061
 25528  0178AA                     l12061:
 25529                           
 25530                           ; BSR set to: 1
 25531                           ;UART.c: 153: if(config&0x08)
 25532  0178AA  0101               	movlb	1	; () banked
 25533  0178AC  A710               	btfss	OpenUSART@config& (0+255),3,b
 25534  0178AE  D002               	goto	l493
 25535                           
 25536                           ; BSR set to: 1
 25537                           ;UART.c: 154: RCSTAbits.CREN = 1;
 25538  0178B0  88AB               	bsf	4011,4,c	;volatile
 25539  0178B2  D002               	goto	l12065
 25540  0178B4                     l493:
 25541                           
 25542                           ; BSR set to: 1
 25543                           ;UART.c: 155: else
 25544                           ;UART.c: 156: RCSTAbits.SREN = 1;
 25545  0178B4  8AAB               	bsf	4011,5,c	;volatile
 25546  0178B6  D000               	goto	l12065
 25547  0178B8                     l12065:
 25548                           
 25549                           ; BSR set to: 1
 25550                           ;UART.c: 158: if(config&0x10)
 25551  0178B8  0101               	movlb	1	; () banked
 25552  0178BA  B910               	btfsc	OpenUSART@config& (0+255),4,b
 25553                           
 25554                           ; BSR set to: 1
 25555                           ;UART.c: 159: TXSTAbits.BRGH = 1;
 25556  0178BC  84AC               	bsf	4012,2,c	;volatile
 25557                           
 25558                           ; BSR set to: 1
 25559                           ;UART.c: 161: PIR1bits.TXIF = 0;
 25560  0178BE  989E               	bcf	3998,4,c	;volatile
 25561                           
 25562                           ; BSR set to: 1
 25563                           ;UART.c: 163: if(config&0x20)
 25564  0178C0  0101               	movlb	1	; () banked
 25565  0178C2  AB10               	btfss	OpenUSART@config& (0+255),5,b
 25566  0178C4  D002               	goto	l12073
 25567                           
 25568                           ; BSR set to: 1
 25569                           ;UART.c: 164: RCSTAbits.ADEN = 1;
 25570  0178C6  86AB               	bsf	4011,3,c	;volatile
 25571  0178C8  D000               	goto	l12073
 25572  0178CA                     l12073:
 25573                           
 25574                           ; BSR set to: 1
 25575                           ;UART.c: 166: if(config&0x40)
 25576  0178CA  0101               	movlb	1	; () banked
 25577  0178CC  AD10               	btfss	OpenUSART@config& (0+255),6,b
 25578  0178CE  D002               	goto	l497
 25579                           
 25580                           ; BSR set to: 1
 25581                           ;UART.c: 167: {
 25582                           ;UART.c: 168: PIE1bits.RCIE = 1;
 25583  0178D0  8A9D               	bsf	3997,5,c	;volatile
 25584                           
 25585                           ;UART.c: 169: }
 25586  0178D2  D001               	goto	l498
 25587  0178D4                     l497:
 25588                           
 25589                           ; BSR set to: 1
 25590                           ;UART.c: 170: else
 25591                           ;UART.c: 171: {
 25592                           ;UART.c: 172: PIE1bits.RCIE = 0;
 25593  0178D4  9A9D               	bcf	3997,5,c	;volatile
 25594  0178D6                     l498:
 25595                           
 25596                           ; BSR set to: 1
 25597                           ;UART.c: 173: }
 25598                           ;UART.c: 175: PIR1bits.RCIF = 0;
 25599  0178D6  9A9E               	bcf	3998,5,c	;volatile
 25600                           
 25601                           ; BSR set to: 1
 25602                           ;UART.c: 177: if(config&0x80)
 25603  0178D8  0101               	movlb	1	; () banked
 25604  0178DA  AF10               	btfss	OpenUSART@config& (0+255),7,b
 25605  0178DC  D002               	goto	l499
 25606                           
 25607                           ; BSR set to: 1
 25608                           ;UART.c: 178: PIE1bits.TXIE = 1;
 25609  0178DE  889D               	bsf	3997,4,c	;volatile
 25610  0178E0  D001               	goto	l500
 25611  0178E2                     l499:
 25612                           
 25613                           ; BSR set to: 1
 25614                           ;UART.c: 179: else
 25615                           ;UART.c: 180: PIE1bits.TXIE = 0;
 25616  0178E2  989D               	bcf	3997,4,c	;volatile
 25617  0178E4                     l500:
 25618                           
 25619                           ; BSR set to: 1
 25620                           ;UART.c: 182: SPBRG = spbrg;
 25621  0178E4  C10E  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 25622                           
 25623                           ; BSR set to: 1
 25624                           ;UART.c: 183: SPBRGH = spbrg >> 8;
 25625  0178E8  0101               	movlb	1	; () banked
 25626  0178EA  510F               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 25627  0178EC  6EB0               	movwf	4016,c	;volatile
 25628                           
 25629                           ; BSR set to: 1
 25630                           ;UART.c: 185: TXSTAbits.TXEN = 1;
 25631  0178EE  8AAC               	bsf	4012,5,c	;volatile
 25632                           
 25633                           ; BSR set to: 1
 25634                           ;UART.c: 186: RCSTAbits.SPEN = 1;
 25635  0178F0  8EAB               	bsf	4011,7,c	;volatile
 25636                           
 25637                           ; BSR set to: 1
 25638  0178F2  0012               	return		;funcret
 25639  0178F4                     __end_of_OpenUSART:
 25640                           	opt stack 0
 25641                           tblptru	equ	0xFF8
 25642                           tblptrh	equ	0xFF7
 25643                           tblptrl	equ	0xFF6
 25644                           tablat	equ	0xFF5
 25645                           prodh	equ	0xFF4
 25646                           prodl	equ	0xFF3
 25647                           intcon	equ	0xFF2
 25648                           intcon2	equ	0xFF1
 25649                           postinc0	equ	0xFEE
 25650                           plusw0	equ	0xFEB
 25651                           wreg	equ	0xFE8
 25652                           indf1	equ	0xFE7
 25653                           postdec1	equ	0xFE5
 25654                           fsr1h	equ	0xFE2
 25655                           fsr1l	equ	0xFE1
 25656                           indf2	equ	0xFDF
 25657                           postinc2	equ	0xFDE
 25658                           postdec2	equ	0xFDD
 25659                           plusw2	equ	0xFDB
 25660                           fsr2h	equ	0xFDA
 25661                           fsr2l	equ	0xFD9
 25662                           status	equ	0xFD8
 25663                           
 25664 ;; *************** function _Send_Config2 *****************
 25665 ;; Defined at:
 25666 ;;		line 137 in file "RF.c"
 25667 ;; Parameters:    Size  Location     Type
 25668 ;;  pin             1    wreg     unsigned char 
 25669 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 25670 ;;		 -> SubLightOFF(16), SubLightON(16), Aux2OFF(16), Aux2ON(16), 
 25671 ;;		 -> BedOFF(16), BedON(16), AuxOFF(16), AuxON(16), 
 25672 ;;		 -> fanOFF(16), fanON(16), 
 25673 ;; Auto vars:     Size  Location     Type
 25674 ;;  pin             1   29[BANK1 ] unsigned char 
 25675 ;;  i               1   30[BANK1 ] unsigned char 
 25676 ;; Return value:  Size  Location     Type
 25677 ;;		None               void
 25678 ;; Registers used:
 25679 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25680 ;; Tracked objects:
 25681 ;;		On entry : 0/0
 25682 ;;		On exit  : 0/0
 25683 ;;		Unchanged: 0/0
 25684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25685 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25686 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25687 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25688 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 25689 ;;Total ram usage:        6 bytes
 25690 ;; Hardware stack levels used:    1
 25691 ;; Hardware stack levels required when called:    9
 25692 ;; This function calls:
 25693 ;;		_One_Config2
 25694 ;;		_Zero_Config2
 25695 ;;		_delayUS
 25696 ;; This function is called by:
 25697 ;;		_Command
 25698 ;; This function uses a non-reentrant model
 25699 ;;
 25700                           
 25701                           	psect	text62
 25702  017424                     __ptext62:
 25703                           	opt stack 0
 25704  017424                     _Send_Config2:
 25705                           	opt stack 20
 25706                           
 25707                           ; BSR set to: 1
 25708                           ;incstack = 0
 25709                           ;Send_Config2@pin stored from wreg
 25710  017424  0101               	movlb	1	; () banked
 25711  017426  6F1D               	movwf	Send_Config2@pin& (0+255),b
 25712                           
 25713                           ; BSR set to: 1
 25714                           ;RF.c: 139: unsigned char i=0;
 25715  017428  0E00               	movlw	0
 25716  01742A  0101               	movlb	1	; () banked
 25717  01742C  6F1E               	movwf	Send_Config2@i& (0+255),b
 25718                           
 25719                           ;RF.c: 141: for(i=0;i<16;i++)
 25720  01742E  0E00               	movlw	0
 25721  017430  0101               	movlb	1	; () banked
 25722  017432  6F1E               	movwf	Send_Config2@i& (0+255),b
 25723  017434                     l13875:
 25724                           
 25725                           ; BSR set to: 1
 25726  017434  0E0F               	movlw	15
 25727  017436  0101               	movlb	1	; () banked
 25728  017438  651E               	cpfsgt	Send_Config2@i& (0+255),b
 25729  01743A  D001               	goto	l13879
 25730                           
 25731                           ; BSR set to: 1
 25732  01743C  D025               	goto	l13889
 25733  01743E                     l13879:
 25734                           
 25735                           ; BSR set to: 1
 25736                           ;RF.c: 142: {
 25737                           ;RF.c: 143: if(data[i] == 0)
 25738  01743E  0101               	movlb	1	; () banked
 25739  017440  511E               	movf	Send_Config2@i& (0+255),w,b
 25740  017442  0D01               	mullw	1
 25741  017444  C119  F11B         	movff	Send_Config2@data,??_Send_Config2
 25742  017448  C11A  F11C         	movff	Send_Config2@data+1,??_Send_Config2+1
 25743  01744C  50F3               	movf	prodl,w,c
 25744  01744E  0101               	movlb	1	; () banked
 25745  017450  271B               	addwf	??_Send_Config2& (0+255),f,b
 25746  017452  50F4               	movf	prodh,w,c
 25747  017454  0101               	movlb	1	; () banked
 25748  017456  231C               	addwfc	(??_Send_Config2+1)& (0+255),f,b
 25749  017458  C11B  FFF6         	movff	??_Send_Config2,tblptrl
 25750  01745C  C11C  FFF7         	movff	??_Send_Config2+1,tblptrh
 25751  017460                     	if	0	;tblptru may be non-zero
 25752  017460                     	endif
 25753  017460                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25754  017460  0E00               	movlw	low (__mediumconst shr (0+16))
 25755  017462  6EF8               	movwf	tblptru,c
 25756  017464                     	endif
 25757  017464  0008               	tblrd		*
 25758  017466  50F5               	movf	tablat,w,c
 25759  017468  0900               	iorlw	0
 25760  01746A  A4D8               	btfss	status,2,c
 25761  01746C  D005               	goto	l13883
 25762                           
 25763                           ; BSR set to: 1
 25764                           ;RF.c: 144: {
 25765                           ;RF.c: 145: Zero_Config2(pin);
 25766  01746E  0101               	movlb	1	; () banked
 25767  017470  511D               	movf	Send_Config2@pin& (0+255),w,b
 25768  017472  EC5F  F004         	call	_Zero_Config2
 25769                           
 25770                           ;RF.c: 146: }
 25771  017476  D005               	goto	l13885
 25772  017478                     l13883:
 25773                           
 25774                           ;RF.c: 147: else
 25775                           ;RF.c: 148: {
 25776                           ;RF.c: 149: One_Config2(pin);
 25777  017478  0101               	movlb	1	; () banked
 25778  01747A  511D               	movf	Send_Config2@pin& (0+255),w,b
 25779  01747C  EC7F  F004         	call	_One_Config2
 25780  017480  D000               	goto	l13885
 25781  017482                     l13885:
 25782  017482  0101               	movlb	1	; () banked
 25783  017484  2B1E               	incf	Send_Config2@i& (0+255),f,b
 25784  017486  D7D6               	goto	l13875
 25785  017488                     l13889:
 25786                           
 25787                           ; BSR set to: 1
 25788                           ;RF.c: 150: }
 25789                           ;RF.c: 151: }
 25790                           ;RF.c: 153: LATD &= ~pin;
 25791  017488  0101               	movlb	1	; () banked
 25792  01748A  511D               	movf	Send_Config2@pin& (0+255),w,b
 25793  01748C  0AFF               	xorlw	255
 25794  01748E  168C               	andwf	3980,f,c	;volatile
 25795                           
 25796                           ; BSR set to: 1
 25797                           ;RF.c: 154: delayUS(11700);
 25798  017490  0EB4               	movlw	180
 25799  017492  0101               	movlb	1	; () banked
 25800  017494  6F0E               	movwf	delayUS@US& (0+255),b
 25801  017496  0E2D               	movlw	45
 25802  017498  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 25803  01749A  0E00               	movlw	0
 25804  01749C  6F10               	movwf	(delayUS@US+2)& (0+255),b
 25805  01749E  0E00               	movlw	0
 25806  0174A0  6F11               	movwf	(delayUS@US+3)& (0+255),b
 25807  0174A2  EC58  F0BD         	call	_delayUS	;wreg free
 25808  0174A6  0012               	return		;funcret
 25809  0174A8                     __end_of_Send_Config2:
 25810                           	opt stack 0
 25811                           tblptru	equ	0xFF8
 25812                           tblptrh	equ	0xFF7
 25813                           tblptrl	equ	0xFF6
 25814                           tablat	equ	0xFF5
 25815                           prodh	equ	0xFF4
 25816                           prodl	equ	0xFF3
 25817                           intcon	equ	0xFF2
 25818                           intcon2	equ	0xFF1
 25819                           postinc0	equ	0xFEE
 25820                           plusw0	equ	0xFEB
 25821                           wreg	equ	0xFE8
 25822                           indf1	equ	0xFE7
 25823                           postdec1	equ	0xFE5
 25824                           fsr1h	equ	0xFE2
 25825                           fsr1l	equ	0xFE1
 25826                           indf2	equ	0xFDF
 25827                           postinc2	equ	0xFDE
 25828                           postdec2	equ	0xFDD
 25829                           plusw2	equ	0xFDB
 25830                           fsr2h	equ	0xFDA
 25831                           fsr2l	equ	0xFD9
 25832                           status	equ	0xFD8
 25833                           
 25834 ;; *************** function _Zero_Config2 *****************
 25835 ;; Defined at:
 25836 ;;		line 163 in file "RF.c"
 25837 ;; Parameters:    Size  Location     Type
 25838 ;;  pin             1    wreg     unsigned char 
 25839 ;; Auto vars:     Size  Location     Type
 25840 ;;  pin             1   24[BANK1 ] unsigned char 
 25841 ;; Return value:  Size  Location     Type
 25842 ;;		None               void
 25843 ;; Registers used:
 25844 ;;		wreg, status,2, status,0, cstack
 25845 ;; Tracked objects:
 25846 ;;		On entry : 0/0
 25847 ;;		On exit  : 0/0
 25848 ;;		Unchanged: 0/0
 25849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25851 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25853 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25854 ;;Total ram usage:        1 bytes
 25855 ;; Hardware stack levels used:    1
 25856 ;; Hardware stack levels required when called:    8
 25857 ;; This function calls:
 25858 ;;		_delayUS
 25859 ;; This function is called by:
 25860 ;;		_Send_Config2
 25861 ;; This function uses a non-reentrant model
 25862 ;;
 25863                           
 25864                           	psect	text63
 25865  0008BE                     __ptext63:
 25866                           	opt stack 0
 25867  0008BE                     _Zero_Config2:
 25868                           	opt stack 20
 25869                           
 25870                           ;incstack = 0
 25871                           ;Zero_Config2@pin stored from wreg
 25872  0008BE  0101               	movlb	1	; () banked
 25873  0008C0  6F18               	movwf	Zero_Config2@pin& (0+255),b
 25874                           
 25875                           ; BSR set to: 1
 25876                           ;RF.c: 165: LATD |= pin;
 25877  0008C2  0101               	movlb	1	; () banked
 25878  0008C4  5118               	movf	Zero_Config2@pin& (0+255),w,b
 25879  0008C6  128C               	iorwf	3980,f,c	;volatile
 25880                           
 25881                           ; BSR set to: 1
 25882                           ;RF.c: 166: delayUS(705);
 25883  0008C8  0EC1               	movlw	193
 25884  0008CA  0101               	movlb	1	; () banked
 25885  0008CC  6F0E               	movwf	delayUS@US& (0+255),b
 25886  0008CE  0E02               	movlw	2
 25887  0008D0  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 25888  0008D2  0E00               	movlw	0
 25889  0008D4  6F10               	movwf	(delayUS@US+2)& (0+255),b
 25890  0008D6  0E00               	movlw	0
 25891  0008D8  6F11               	movwf	(delayUS@US+3)& (0+255),b
 25892  0008DA  EC58  F0BD         	call	_delayUS	;wreg free
 25893                           
 25894                           ;RF.c: 167: LATD &= ~pin;
 25895  0008DE  0101               	movlb	1	; () banked
 25896  0008E0  5118               	movf	Zero_Config2@pin& (0+255),w,b
 25897  0008E2  0AFF               	xorlw	255
 25898  0008E4  168C               	andwf	3980,f,c	;volatile
 25899                           
 25900                           ;RF.c: 168: delayUS(1910);
 25901  0008E6  0E76               	movlw	118
 25902  0008E8  0101               	movlb	1	; () banked
 25903  0008EA  6F0E               	movwf	delayUS@US& (0+255),b
 25904  0008EC  0E07               	movlw	7
 25905  0008EE  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 25906  0008F0  0E00               	movlw	0
 25907  0008F2  6F10               	movwf	(delayUS@US+2)& (0+255),b
 25908  0008F4  0E00               	movlw	0
 25909  0008F6  6F11               	movwf	(delayUS@US+3)& (0+255),b
 25910  0008F8  EC58  F0BD         	call	_delayUS	;wreg free
 25911  0008FC  0012               	return		;funcret
 25912  0008FE                     __end_of_Zero_Config2:
 25913                           	opt stack 0
 25914                           tblptru	equ	0xFF8
 25915                           tblptrh	equ	0xFF7
 25916                           tblptrl	equ	0xFF6
 25917                           tablat	equ	0xFF5
 25918                           prodh	equ	0xFF4
 25919                           prodl	equ	0xFF3
 25920                           intcon	equ	0xFF2
 25921                           intcon2	equ	0xFF1
 25922                           postinc0	equ	0xFEE
 25923                           plusw0	equ	0xFEB
 25924                           wreg	equ	0xFE8
 25925                           indf1	equ	0xFE7
 25926                           postdec1	equ	0xFE5
 25927                           fsr1h	equ	0xFE2
 25928                           fsr1l	equ	0xFE1
 25929                           indf2	equ	0xFDF
 25930                           postinc2	equ	0xFDE
 25931                           postdec2	equ	0xFDD
 25932                           plusw2	equ	0xFDB
 25933                           fsr2h	equ	0xFDA
 25934                           fsr2l	equ	0xFD9
 25935                           status	equ	0xFD8
 25936                           
 25937 ;; *************** function _One_Config2 *****************
 25938 ;; Defined at:
 25939 ;;		line 176 in file "RF.c"
 25940 ;; Parameters:    Size  Location     Type
 25941 ;;  pin             1    wreg     unsigned char 
 25942 ;; Auto vars:     Size  Location     Type
 25943 ;;  pin             1   24[BANK1 ] unsigned char 
 25944 ;; Return value:  Size  Location     Type
 25945 ;;		None               void
 25946 ;; Registers used:
 25947 ;;		wreg, status,2, status,0, cstack
 25948 ;; Tracked objects:
 25949 ;;		On entry : 0/0
 25950 ;;		On exit  : 0/0
 25951 ;;		Unchanged: 0/0
 25952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25954 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25956 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25957 ;;Total ram usage:        1 bytes
 25958 ;; Hardware stack levels used:    1
 25959 ;; Hardware stack levels required when called:    8
 25960 ;; This function calls:
 25961 ;;		_delayUS
 25962 ;; This function is called by:
 25963 ;;		_Send_Config2
 25964 ;; This function uses a non-reentrant model
 25965 ;;
 25966                           
 25967                           	psect	text64
 25968  0008FE                     __ptext64:
 25969                           	opt stack 0
 25970  0008FE                     _One_Config2:
 25971                           	opt stack 20
 25972                           
 25973                           ;incstack = 0
 25974                           ;One_Config2@pin stored from wreg
 25975  0008FE  0101               	movlb	1	; () banked
 25976  000900  6F18               	movwf	One_Config2@pin& (0+255),b
 25977                           
 25978                           ; BSR set to: 1
 25979                           ;RF.c: 178: LATD |= pin;
 25980  000902  0101               	movlb	1	; () banked
 25981  000904  5118               	movf	One_Config2@pin& (0+255),w,b
 25982  000906  128C               	iorwf	3980,f,c	;volatile
 25983                           
 25984                           ; BSR set to: 1
 25985                           ;RF.c: 179: delayUS(1955);
 25986  000908  0EA3               	movlw	163
 25987  00090A  0101               	movlb	1	; () banked
 25988  00090C  6F0E               	movwf	delayUS@US& (0+255),b
 25989  00090E  0E07               	movlw	7
 25990  000910  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 25991  000912  0E00               	movlw	0
 25992  000914  6F10               	movwf	(delayUS@US+2)& (0+255),b
 25993  000916  0E00               	movlw	0
 25994  000918  6F11               	movwf	(delayUS@US+3)& (0+255),b
 25995  00091A  EC58  F0BD         	call	_delayUS	;wreg free
 25996                           
 25997                           ;RF.c: 180: LATD &= ~pin;
 25998  00091E  0101               	movlb	1	; () banked
 25999  000920  5118               	movf	One_Config2@pin& (0+255),w,b
 26000  000922  0AFF               	xorlw	255
 26001  000924  168C               	andwf	3980,f,c	;volatile
 26002                           
 26003                           ;RF.c: 181: delayUS(705);
 26004  000926  0EC1               	movlw	193
 26005  000928  0101               	movlb	1	; () banked
 26006  00092A  6F0E               	movwf	delayUS@US& (0+255),b
 26007  00092C  0E02               	movlw	2
 26008  00092E  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26009  000930  0E00               	movlw	0
 26010  000932  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26011  000934  0E00               	movlw	0
 26012  000936  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26013  000938  EC58  F0BD         	call	_delayUS	;wreg free
 26014  00093C  0012               	return		;funcret
 26015  00093E                     __end_of_One_Config2:
 26016                           	opt stack 0
 26017                           tblptru	equ	0xFF8
 26018                           tblptrh	equ	0xFF7
 26019                           tblptrl	equ	0xFF6
 26020                           tablat	equ	0xFF5
 26021                           prodh	equ	0xFF4
 26022                           prodl	equ	0xFF3
 26023                           intcon	equ	0xFF2
 26024                           intcon2	equ	0xFF1
 26025                           postinc0	equ	0xFEE
 26026                           plusw0	equ	0xFEB
 26027                           wreg	equ	0xFE8
 26028                           indf1	equ	0xFE7
 26029                           postdec1	equ	0xFE5
 26030                           fsr1h	equ	0xFE2
 26031                           fsr1l	equ	0xFE1
 26032                           indf2	equ	0xFDF
 26033                           postinc2	equ	0xFDE
 26034                           postdec2	equ	0xFDD
 26035                           plusw2	equ	0xFDB
 26036                           fsr2h	equ	0xFDA
 26037                           fsr2l	equ	0xFD9
 26038                           status	equ	0xFD8
 26039                           
 26040 ;; *************** function _Send_Config1 *****************
 26041 ;; Defined at:
 26042 ;;		line 54 in file "RF.c"
 26043 ;; Parameters:    Size  Location     Type
 26044 ;;  pin             1    wreg     unsigned char 
 26045 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 26046 ;;		 -> TXdataF(12), TXdataE(12), TXdataD(12), 
 26047 ;; Auto vars:     Size  Location     Type
 26048 ;;  pin             1   30[BANK1 ] unsigned char 
 26049 ;;  i               1   29[BANK1 ] unsigned char 
 26050 ;; Return value:  Size  Location     Type
 26051 ;;		None               void
 26052 ;; Registers used:
 26053 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26054 ;; Tracked objects:
 26055 ;;		On entry : 0/0
 26056 ;;		On exit  : 0/0
 26057 ;;		Unchanged: 0/0
 26058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26059 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26060 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26061 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26062 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 26063 ;;Total ram usage:        6 bytes
 26064 ;; Hardware stack levels used:    1
 26065 ;; Hardware stack levels required when called:    9
 26066 ;; This function calls:
 26067 ;;		_One_Config1
 26068 ;;		_Zero_Config1
 26069 ;;		_delayUS
 26070 ;;		_f_Config1
 26071 ;; This function is called by:
 26072 ;;		_Command
 26073 ;; This function uses a non-reentrant model
 26074 ;;
 26075                           
 26076                           	psect	text65
 26077  01645A                     __ptext65:
 26078                           	opt stack 0
 26079  01645A                     _Send_Config1:
 26080                           	opt stack 20
 26081                           
 26082                           ;incstack = 0
 26083                           ;Send_Config1@pin stored from wreg
 26084  01645A  0101               	movlb	1	; () banked
 26085  01645C  6F1E               	movwf	Send_Config1@pin& (0+255),b
 26086                           
 26087                           ; BSR set to: 1
 26088                           ;RF.c: 56: unsigned char i=0;
 26089  01645E  0E00               	movlw	0
 26090  016460  0101               	movlb	1	; () banked
 26091  016462  6F1D               	movwf	Send_Config1@i& (0+255),b
 26092                           
 26093                           ;RF.c: 58: for(i=0;i<12;i++)
 26094  016464  0E00               	movlw	0
 26095  016466  0101               	movlb	1	; () banked
 26096  016468  6F1D               	movwf	Send_Config1@i& (0+255),b
 26097  01646A                     l13849:
 26098                           
 26099                           ; BSR set to: 1
 26100  01646A  0E0B               	movlw	11
 26101  01646C  0101               	movlb	1	; () banked
 26102  01646E  651D               	cpfsgt	Send_Config1@i& (0+255),b
 26103  016470  D001               	goto	l13853
 26104                           
 26105                           ; BSR set to: 1
 26106  016472  D042               	goto	l13867
 26107  016474                     l13853:
 26108                           
 26109                           ; BSR set to: 1
 26110                           ;RF.c: 59: {
 26111                           ;RF.c: 60: if(data[i] == 0)
 26112  016474  0101               	movlb	1	; () banked
 26113  016476  511D               	movf	Send_Config1@i& (0+255),w,b
 26114  016478  0D01               	mullw	1
 26115  01647A  C119  F11B         	movff	Send_Config1@data,??_Send_Config1
 26116  01647E  C11A  F11C         	movff	Send_Config1@data+1,??_Send_Config1+1
 26117  016482  50F3               	movf	prodl,w,c
 26118  016484  0101               	movlb	1	; () banked
 26119  016486  271B               	addwf	??_Send_Config1& (0+255),f,b
 26120  016488  50F4               	movf	prodh,w,c
 26121  01648A  0101               	movlb	1	; () banked
 26122  01648C  231C               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 26123  01648E  C11B  FFF6         	movff	??_Send_Config1,tblptrl
 26124  016492  C11C  FFF7         	movff	??_Send_Config1+1,tblptrh
 26125  016496                     	if	0	;tblptru may be non-zero
 26126  016496                     	endif
 26127  016496                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26128  016496  0E00               	movlw	low (__mediumconst shr (0+16))
 26129  016498  6EF8               	movwf	tblptru,c
 26130  01649A                     	endif
 26131  01649A  0008               	tblrd		*
 26132  01649C  50F5               	movf	tablat,w,c
 26133  01649E  0900               	iorlw	0
 26134  0164A0  A4D8               	btfss	status,2,c
 26135  0164A2  D005               	goto	l13857
 26136                           
 26137                           ; BSR set to: 1
 26138                           ;RF.c: 61: {
 26139                           ;RF.c: 62: Zero_Config1(pin);
 26140  0164A4  0101               	movlb	1	; () banked
 26141  0164A6  511E               	movf	Send_Config1@pin& (0+255),w,b
 26142  0164A8  EC10  F0BB         	call	_Zero_Config1
 26143                           
 26144                           ;RF.c: 63: }
 26145  0164AC  D022               	goto	l13863
 26146  0164AE                     l13857:
 26147                           
 26148                           ;RF.c: 64: else if(data[i] ==1)
 26149  0164AE  0101               	movlb	1	; () banked
 26150  0164B0  511D               	movf	Send_Config1@i& (0+255),w,b
 26151  0164B2  0D01               	mullw	1
 26152  0164B4  C119  F11B         	movff	Send_Config1@data,??_Send_Config1
 26153  0164B8  C11A  F11C         	movff	Send_Config1@data+1,??_Send_Config1+1
 26154  0164BC  50F3               	movf	prodl,w,c
 26155  0164BE  0101               	movlb	1	; () banked
 26156  0164C0  271B               	addwf	??_Send_Config1& (0+255),f,b
 26157  0164C2  50F4               	movf	prodh,w,c
 26158  0164C4  0101               	movlb	1	; () banked
 26159  0164C6  231C               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 26160  0164C8  C11B  FFF6         	movff	??_Send_Config1,tblptrl
 26161  0164CC  C11C  FFF7         	movff	??_Send_Config1+1,tblptrh
 26162  0164D0                     	if	0	;tblptru may be non-zero
 26163  0164D0                     	endif
 26164  0164D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26165  0164D0  0E00               	movlw	low (__mediumconst shr (0+16))
 26166  0164D2  6EF8               	movwf	tblptru,c
 26167  0164D4                     	endif
 26168  0164D4  0008               	tblrd		*
 26169  0164D6  50F5               	movf	tablat,w,c
 26170  0164D8  06E8               	decf	wreg,f,c
 26171  0164DA  A4D8               	btfss	status,2,c
 26172  0164DC  D005               	goto	l13861
 26173                           
 26174                           ; BSR set to: 1
 26175                           ;RF.c: 65: {
 26176                           ;RF.c: 66: One_Config1(pin);
 26177  0164DE  0101               	movlb	1	; () banked
 26178  0164E0  511E               	movf	Send_Config1@pin& (0+255),w,b
 26179  0164E2  EC4D  F0BB         	call	_One_Config1
 26180                           
 26181                           ;RF.c: 67: }
 26182  0164E6  D005               	goto	l13863
 26183  0164E8                     l13861:
 26184                           
 26185                           ;RF.c: 68: else
 26186                           ;RF.c: 69: {
 26187                           ;RF.c: 70: f_Config1(pin);
 26188  0164E8  0101               	movlb	1	; () banked
 26189  0164EA  511E               	movf	Send_Config1@pin& (0+255),w,b
 26190  0164EC  ECD3  F0BA         	call	_f_Config1
 26191  0164F0  D000               	goto	l13863
 26192  0164F2                     l13863:
 26193  0164F2  0101               	movlb	1	; () banked
 26194  0164F4  2B1D               	incf	Send_Config1@i& (0+255),f,b
 26195  0164F6  D7B9               	goto	l13849
 26196  0164F8                     l13867:
 26197                           
 26198                           ; BSR set to: 1
 26199                           ;RF.c: 71: }
 26200                           ;RF.c: 72: }
 26201                           ;RF.c: 74: LATD |= pin;
 26202  0164F8  0101               	movlb	1	; () banked
 26203  0164FA  511E               	movf	Send_Config1@pin& (0+255),w,b
 26204  0164FC  128C               	iorwf	3980,f,c	;volatile
 26205                           
 26206                           ; BSR set to: 1
 26207                           ;RF.c: 75: delayUS(222);
 26208  0164FE  0EDE               	movlw	222
 26209  016500  0101               	movlb	1	; () banked
 26210  016502  6F0E               	movwf	delayUS@US& (0+255),b
 26211  016504  0E00               	movlw	0
 26212  016506  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26213  016508  0E00               	movlw	0
 26214  01650A  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26215  01650C  0E00               	movlw	0
 26216  01650E  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26217  016510  EC58  F0BD         	call	_delayUS	;wreg free
 26218                           
 26219                           ;RF.c: 76: LATD &= ~pin;
 26220  016514  0101               	movlb	1	; () banked
 26221  016516  511E               	movf	Send_Config1@pin& (0+255),w,b
 26222  016518  0AFF               	xorlw	255
 26223  01651A  168C               	andwf	3980,f,c	;volatile
 26224                           
 26225                           ;RF.c: 77: delayUS(7330);
 26226  01651C  0EA2               	movlw	162
 26227  01651E  0101               	movlb	1	; () banked
 26228  016520  6F0E               	movwf	delayUS@US& (0+255),b
 26229  016522  0E1C               	movlw	28
 26230  016524  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26231  016526  0E00               	movlw	0
 26232  016528  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26233  01652A  0E00               	movlw	0
 26234  01652C  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26235  01652E  EC58  F0BD         	call	_delayUS	;wreg free
 26236  016532  0012               	return		;funcret
 26237  016534                     __end_of_Send_Config1:
 26238                           	opt stack 0
 26239                           tblptru	equ	0xFF8
 26240                           tblptrh	equ	0xFF7
 26241                           tblptrl	equ	0xFF6
 26242                           tablat	equ	0xFF5
 26243                           prodh	equ	0xFF4
 26244                           prodl	equ	0xFF3
 26245                           intcon	equ	0xFF2
 26246                           intcon2	equ	0xFF1
 26247                           postinc0	equ	0xFEE
 26248                           plusw0	equ	0xFEB
 26249                           wreg	equ	0xFE8
 26250                           indf1	equ	0xFE7
 26251                           postdec1	equ	0xFE5
 26252                           fsr1h	equ	0xFE2
 26253                           fsr1l	equ	0xFE1
 26254                           indf2	equ	0xFDF
 26255                           postinc2	equ	0xFDE
 26256                           postdec2	equ	0xFDD
 26257                           plusw2	equ	0xFDB
 26258                           fsr2h	equ	0xFDA
 26259                           fsr2l	equ	0xFD9
 26260                           status	equ	0xFD8
 26261                           
 26262 ;; *************** function _f_Config1 *****************
 26263 ;; Defined at:
 26264 ;;		line 120 in file "RF.c"
 26265 ;; Parameters:    Size  Location     Type
 26266 ;;  pin             1    wreg     unsigned char 
 26267 ;; Auto vars:     Size  Location     Type
 26268 ;;  pin             1   24[BANK1 ] unsigned char 
 26269 ;; Return value:  Size  Location     Type
 26270 ;;		None               void
 26271 ;; Registers used:
 26272 ;;		wreg, status,2, status,0, cstack
 26273 ;; Tracked objects:
 26274 ;;		On entry : 0/0
 26275 ;;		On exit  : 0/0
 26276 ;;		Unchanged: 0/0
 26277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26279 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26281 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26282 ;;Total ram usage:        1 bytes
 26283 ;; Hardware stack levels used:    1
 26284 ;; Hardware stack levels required when called:    8
 26285 ;; This function calls:
 26286 ;;		_delayUS
 26287 ;; This function is called by:
 26288 ;;		_Send_Config1
 26289 ;; This function uses a non-reentrant model
 26290 ;;
 26291                           
 26292                           	psect	text66
 26293  0175A6                     __ptext66:
 26294                           	opt stack 0
 26295  0175A6                     _f_Config1:
 26296                           	opt stack 20
 26297                           
 26298                           ;incstack = 0
 26299                           ;f_Config1@pin stored from wreg
 26300  0175A6  0101               	movlb	1	; () banked
 26301  0175A8  6F18               	movwf	f_Config1@pin& (0+255),b
 26302                           
 26303                           ; BSR set to: 1
 26304                           ;RF.c: 122: LATD |= pin;
 26305  0175AA  0101               	movlb	1	; () banked
 26306  0175AC  5118               	movf	f_Config1@pin& (0+255),w,b
 26307  0175AE  128C               	iorwf	3980,f,c	;volatile
 26308                           
 26309                           ; BSR set to: 1
 26310                           ;RF.c: 123: delayUS(216);
 26311  0175B0  0ED8               	movlw	216
 26312  0175B2  0101               	movlb	1	; () banked
 26313  0175B4  6F0E               	movwf	delayUS@US& (0+255),b
 26314  0175B6  0E00               	movlw	0
 26315  0175B8  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26316  0175BA  0E00               	movlw	0
 26317  0175BC  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26318  0175BE  0E00               	movlw	0
 26319  0175C0  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26320  0175C2  EC58  F0BD         	call	_delayUS	;wreg free
 26321                           
 26322                           ;RF.c: 124: LATD &= ~pin;
 26323  0175C6  0101               	movlb	1	; () banked
 26324  0175C8  5118               	movf	f_Config1@pin& (0+255),w,b
 26325  0175CA  0AFF               	xorlw	255
 26326  0175CC  168C               	andwf	3980,f,c	;volatile
 26327                           
 26328                           ;RF.c: 125: delayUS(614);
 26329  0175CE  0E66               	movlw	102
 26330  0175D0  0101               	movlb	1	; () banked
 26331  0175D2  6F0E               	movwf	delayUS@US& (0+255),b
 26332  0175D4  0E02               	movlw	2
 26333  0175D6  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26334  0175D8  0E00               	movlw	0
 26335  0175DA  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26336  0175DC  0E00               	movlw	0
 26337  0175DE  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26338  0175E0  EC58  F0BD         	call	_delayUS	;wreg free
 26339                           
 26340                           ;RF.c: 126: LATD |= pin;
 26341  0175E4  0101               	movlb	1	; () banked
 26342  0175E6  5118               	movf	f_Config1@pin& (0+255),w,b
 26343  0175E8  128C               	iorwf	3980,f,c	;volatile
 26344                           
 26345                           ; BSR set to: 1
 26346                           ;RF.c: 127: delayUS(614);
 26347  0175EA  0E66               	movlw	102
 26348  0175EC  0101               	movlb	1	; () banked
 26349  0175EE  6F0E               	movwf	delayUS@US& (0+255),b
 26350  0175F0  0E02               	movlw	2
 26351  0175F2  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26352  0175F4  0E00               	movlw	0
 26353  0175F6  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26354  0175F8  0E00               	movlw	0
 26355  0175FA  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26356  0175FC  EC58  F0BD         	call	_delayUS	;wreg free
 26357                           
 26358                           ;RF.c: 128: LATD &= ~pin;
 26359  017600  0101               	movlb	1	; () banked
 26360  017602  5118               	movf	f_Config1@pin& (0+255),w,b
 26361  017604  0AFF               	xorlw	255
 26362  017606  168C               	andwf	3980,f,c	;volatile
 26363                           
 26364                           ; BSR set to: 1
 26365                           ;RF.c: 129: delayUS(216);
 26366  017608  0ED8               	movlw	216
 26367  01760A  0101               	movlb	1	; () banked
 26368  01760C  6F0E               	movwf	delayUS@US& (0+255),b
 26369  01760E  0E00               	movlw	0
 26370  017610  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26371  017612  0E00               	movlw	0
 26372  017614  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26373  017616  0E00               	movlw	0
 26374  017618  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26375  01761A  EC58  F0BD         	call	_delayUS	;wreg free
 26376  01761E  0012               	return		;funcret
 26377  017620                     __end_of_f_Config1:
 26378                           	opt stack 0
 26379                           tblptru	equ	0xFF8
 26380                           tblptrh	equ	0xFF7
 26381                           tblptrl	equ	0xFF6
 26382                           tablat	equ	0xFF5
 26383                           prodh	equ	0xFF4
 26384                           prodl	equ	0xFF3
 26385                           intcon	equ	0xFF2
 26386                           intcon2	equ	0xFF1
 26387                           postinc0	equ	0xFEE
 26388                           plusw0	equ	0xFEB
 26389                           wreg	equ	0xFE8
 26390                           indf1	equ	0xFE7
 26391                           postdec1	equ	0xFE5
 26392                           fsr1h	equ	0xFE2
 26393                           fsr1l	equ	0xFE1
 26394                           indf2	equ	0xFDF
 26395                           postinc2	equ	0xFDE
 26396                           postdec2	equ	0xFDD
 26397                           plusw2	equ	0xFDB
 26398                           fsr2h	equ	0xFDA
 26399                           fsr2l	equ	0xFD9
 26400                           status	equ	0xFD8
 26401                           
 26402 ;; *************** function _Zero_Config1 *****************
 26403 ;; Defined at:
 26404 ;;		line 86 in file "RF.c"
 26405 ;; Parameters:    Size  Location     Type
 26406 ;;  pin             1    wreg     unsigned char 
 26407 ;; Auto vars:     Size  Location     Type
 26408 ;;  pin             1   24[BANK1 ] unsigned char 
 26409 ;; Return value:  Size  Location     Type
 26410 ;;		None               void
 26411 ;; Registers used:
 26412 ;;		wreg, status,2, status,0, cstack
 26413 ;; Tracked objects:
 26414 ;;		On entry : 0/0
 26415 ;;		On exit  : 0/0
 26416 ;;		Unchanged: 0/0
 26417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26419 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26421 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26422 ;;Total ram usage:        1 bytes
 26423 ;; Hardware stack levels used:    1
 26424 ;; Hardware stack levels required when called:    8
 26425 ;; This function calls:
 26426 ;;		_delayUS
 26427 ;; This function is called by:
 26428 ;;		_Send_Config1
 26429 ;; This function uses a non-reentrant model
 26430 ;;
 26431                           
 26432                           	psect	text67
 26433  017620                     __ptext67:
 26434                           	opt stack 0
 26435  017620                     _Zero_Config1:
 26436                           	opt stack 20
 26437                           
 26438                           ;incstack = 0
 26439                           ;Zero_Config1@pin stored from wreg
 26440  017620  0101               	movlb	1	; () banked
 26441  017622  6F18               	movwf	Zero_Config1@pin& (0+255),b
 26442                           
 26443                           ; BSR set to: 1
 26444                           ;RF.c: 88: LATD |= pin;
 26445  017624  0101               	movlb	1	; () banked
 26446  017626  5118               	movf	Zero_Config1@pin& (0+255),w,b
 26447  017628  128C               	iorwf	3980,f,c	;volatile
 26448                           
 26449                           ; BSR set to: 1
 26450                           ;RF.c: 89: delayUS(216 );
 26451  01762A  0ED8               	movlw	216
 26452  01762C  0101               	movlb	1	; () banked
 26453  01762E  6F0E               	movwf	delayUS@US& (0+255),b
 26454  017630  0E00               	movlw	0
 26455  017632  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26456  017634  0E00               	movlw	0
 26457  017636  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26458  017638  0E00               	movlw	0
 26459  01763A  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26460  01763C  EC58  F0BD         	call	_delayUS	;wreg free
 26461                           
 26462                           ;RF.c: 90: LATD &= ~pin;
 26463  017640  0101               	movlb	1	; () banked
 26464  017642  5118               	movf	Zero_Config1@pin& (0+255),w,b
 26465  017644  0AFF               	xorlw	255
 26466  017646  168C               	andwf	3980,f,c	;volatile
 26467                           
 26468                           ;RF.c: 91: delayUS(614 );
 26469  017648  0E66               	movlw	102
 26470  01764A  0101               	movlb	1	; () banked
 26471  01764C  6F0E               	movwf	delayUS@US& (0+255),b
 26472  01764E  0E02               	movlw	2
 26473  017650  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26474  017652  0E00               	movlw	0
 26475  017654  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26476  017656  0E00               	movlw	0
 26477  017658  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26478  01765A  EC58  F0BD         	call	_delayUS	;wreg free
 26479                           
 26480                           ;RF.c: 92: LATD |= pin;
 26481  01765E  0101               	movlb	1	; () banked
 26482  017660  5118               	movf	Zero_Config1@pin& (0+255),w,b
 26483  017662  128C               	iorwf	3980,f,c	;volatile
 26484                           
 26485                           ; BSR set to: 1
 26486                           ;RF.c: 93: delayUS(216 );
 26487  017664  0ED8               	movlw	216
 26488  017666  0101               	movlb	1	; () banked
 26489  017668  6F0E               	movwf	delayUS@US& (0+255),b
 26490  01766A  0E00               	movlw	0
 26491  01766C  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26492  01766E  0E00               	movlw	0
 26493  017670  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26494  017672  0E00               	movlw	0
 26495  017674  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26496  017676  EC58  F0BD         	call	_delayUS	;wreg free
 26497                           
 26498                           ;RF.c: 94: LATD &= ~pin;
 26499  01767A  0101               	movlb	1	; () banked
 26500  01767C  5118               	movf	Zero_Config1@pin& (0+255),w,b
 26501  01767E  0AFF               	xorlw	255
 26502  017680  168C               	andwf	3980,f,c	;volatile
 26503                           
 26504                           ; BSR set to: 1
 26505                           ;RF.c: 95: delayUS(614 );
 26506  017682  0E66               	movlw	102
 26507  017684  0101               	movlb	1	; () banked
 26508  017686  6F0E               	movwf	delayUS@US& (0+255),b
 26509  017688  0E02               	movlw	2
 26510  01768A  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26511  01768C  0E00               	movlw	0
 26512  01768E  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26513  017690  0E00               	movlw	0
 26514  017692  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26515  017694  EC58  F0BD         	call	_delayUS	;wreg free
 26516  017698  0012               	return		;funcret
 26517  01769A                     __end_of_Zero_Config1:
 26518                           	opt stack 0
 26519                           tblptru	equ	0xFF8
 26520                           tblptrh	equ	0xFF7
 26521                           tblptrl	equ	0xFF6
 26522                           tablat	equ	0xFF5
 26523                           prodh	equ	0xFF4
 26524                           prodl	equ	0xFF3
 26525                           intcon	equ	0xFF2
 26526                           intcon2	equ	0xFF1
 26527                           postinc0	equ	0xFEE
 26528                           plusw0	equ	0xFEB
 26529                           wreg	equ	0xFE8
 26530                           indf1	equ	0xFE7
 26531                           postdec1	equ	0xFE5
 26532                           fsr1h	equ	0xFE2
 26533                           fsr1l	equ	0xFE1
 26534                           indf2	equ	0xFDF
 26535                           postinc2	equ	0xFDE
 26536                           postdec2	equ	0xFDD
 26537                           plusw2	equ	0xFDB
 26538                           fsr2h	equ	0xFDA
 26539                           fsr2l	equ	0xFD9
 26540                           status	equ	0xFD8
 26541                           
 26542 ;; *************** function _One_Config1 *****************
 26543 ;; Defined at:
 26544 ;;		line 103 in file "RF.c"
 26545 ;; Parameters:    Size  Location     Type
 26546 ;;  pin             1    wreg     unsigned char 
 26547 ;; Auto vars:     Size  Location     Type
 26548 ;;  pin             1   24[BANK1 ] unsigned char 
 26549 ;; Return value:  Size  Location     Type
 26550 ;;		None               void
 26551 ;; Registers used:
 26552 ;;		wreg, status,2, status,0, cstack
 26553 ;; Tracked objects:
 26554 ;;		On entry : 0/0
 26555 ;;		On exit  : 0/0
 26556 ;;		Unchanged: 0/0
 26557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26559 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26561 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26562 ;;Total ram usage:        1 bytes
 26563 ;; Hardware stack levels used:    1
 26564 ;; Hardware stack levels required when called:    8
 26565 ;; This function calls:
 26566 ;;		_delayUS
 26567 ;; This function is called by:
 26568 ;;		_Send_Config1
 26569 ;; This function uses a non-reentrant model
 26570 ;;
 26571                           
 26572                           	psect	text68
 26573  01769A                     __ptext68:
 26574                           	opt stack 0
 26575  01769A                     _One_Config1:
 26576                           	opt stack 20
 26577                           
 26578                           ;incstack = 0
 26579                           ;One_Config1@pin stored from wreg
 26580  01769A  0101               	movlb	1	; () banked
 26581  01769C  6F18               	movwf	One_Config1@pin& (0+255),b
 26582                           
 26583                           ; BSR set to: 1
 26584                           ;RF.c: 105: LATD |= pin;
 26585  01769E  0101               	movlb	1	; () banked
 26586  0176A0  5118               	movf	One_Config1@pin& (0+255),w,b
 26587  0176A2  128C               	iorwf	3980,f,c	;volatile
 26588                           
 26589                           ; BSR set to: 1
 26590                           ;RF.c: 106: delayUS(614);
 26591  0176A4  0E66               	movlw	102
 26592  0176A6  0101               	movlb	1	; () banked
 26593  0176A8  6F0E               	movwf	delayUS@US& (0+255),b
 26594  0176AA  0E02               	movlw	2
 26595  0176AC  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26596  0176AE  0E00               	movlw	0
 26597  0176B0  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26598  0176B2  0E00               	movlw	0
 26599  0176B4  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26600  0176B6  EC58  F0BD         	call	_delayUS	;wreg free
 26601                           
 26602                           ;RF.c: 107: LATD &= ~pin;
 26603  0176BA  0101               	movlb	1	; () banked
 26604  0176BC  5118               	movf	One_Config1@pin& (0+255),w,b
 26605  0176BE  0AFF               	xorlw	255
 26606  0176C0  168C               	andwf	3980,f,c	;volatile
 26607                           
 26608                           ;RF.c: 108: delayUS(216);
 26609  0176C2  0ED8               	movlw	216
 26610  0176C4  0101               	movlb	1	; () banked
 26611  0176C6  6F0E               	movwf	delayUS@US& (0+255),b
 26612  0176C8  0E00               	movlw	0
 26613  0176CA  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26614  0176CC  0E00               	movlw	0
 26615  0176CE  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26616  0176D0  0E00               	movlw	0
 26617  0176D2  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26618  0176D4  EC58  F0BD         	call	_delayUS	;wreg free
 26619                           
 26620                           ;RF.c: 109: LATD |= pin;
 26621  0176D8  0101               	movlb	1	; () banked
 26622  0176DA  5118               	movf	One_Config1@pin& (0+255),w,b
 26623  0176DC  128C               	iorwf	3980,f,c	;volatile
 26624                           
 26625                           ; BSR set to: 1
 26626                           ;RF.c: 110: delayUS(614);
 26627  0176DE  0E66               	movlw	102
 26628  0176E0  0101               	movlb	1	; () banked
 26629  0176E2  6F0E               	movwf	delayUS@US& (0+255),b
 26630  0176E4  0E02               	movlw	2
 26631  0176E6  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26632  0176E8  0E00               	movlw	0
 26633  0176EA  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26634  0176EC  0E00               	movlw	0
 26635  0176EE  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26636  0176F0  EC58  F0BD         	call	_delayUS	;wreg free
 26637                           
 26638                           ;RF.c: 111: LATD &= ~pin;
 26639  0176F4  0101               	movlb	1	; () banked
 26640  0176F6  5118               	movf	One_Config1@pin& (0+255),w,b
 26641  0176F8  0AFF               	xorlw	255
 26642  0176FA  168C               	andwf	3980,f,c	;volatile
 26643                           
 26644                           ; BSR set to: 1
 26645                           ;RF.c: 112: delayUS(216);
 26646  0176FC  0ED8               	movlw	216
 26647  0176FE  0101               	movlb	1	; () banked
 26648  017700  6F0E               	movwf	delayUS@US& (0+255),b
 26649  017702  0E00               	movlw	0
 26650  017704  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 26651  017706  0E00               	movlw	0
 26652  017708  6F10               	movwf	(delayUS@US+2)& (0+255),b
 26653  01770A  0E00               	movlw	0
 26654  01770C  6F11               	movwf	(delayUS@US+3)& (0+255),b
 26655  01770E  EC58  F0BD         	call	_delayUS	;wreg free
 26656  017712  0012               	return		;funcret
 26657  017714                     __end_of_One_Config1:
 26658                           	opt stack 0
 26659                           tblptru	equ	0xFF8
 26660                           tblptrh	equ	0xFF7
 26661                           tblptrl	equ	0xFF6
 26662                           tablat	equ	0xFF5
 26663                           prodh	equ	0xFF4
 26664                           prodl	equ	0xFF3
 26665                           intcon	equ	0xFF2
 26666                           intcon2	equ	0xFF1
 26667                           postinc0	equ	0xFEE
 26668                           plusw0	equ	0xFEB
 26669                           wreg	equ	0xFE8
 26670                           indf1	equ	0xFE7
 26671                           postdec1	equ	0xFE5
 26672                           fsr1h	equ	0xFE2
 26673                           fsr1l	equ	0xFE1
 26674                           indf2	equ	0xFDF
 26675                           postinc2	equ	0xFDE
 26676                           postdec2	equ	0xFDD
 26677                           plusw2	equ	0xFDB
 26678                           fsr2h	equ	0xFDA
 26679                           fsr2l	equ	0xFD9
 26680                           status	equ	0xFD8
 26681                           
 26682 ;; *************** function _SET_RTC_TIME *****************
 26683 ;; Defined at:
 26684 ;;		line 170 in file "RTC.c"
 26685 ;; Parameters:    Size  Location     Type
 26686 ;;  SetTime         9   22[BANK1 ] struct TIME
 26687 ;; Auto vars:     Size  Location     Type
 26688 ;;  temp            7   35[BANK1 ] unsigned char [7]
 26689 ;;  Error           1   42[BANK1 ] char 
 26690 ;; Return value:  Size  Location     Type
 26691 ;;                  1    wreg      unsigned char 
 26692 ;; Registers used:
 26693 ;;		wreg, status,2, status,0, cstack
 26694 ;; Tracked objects:
 26695 ;;		On entry : 0/0
 26696 ;;		On exit  : 0/0
 26697 ;;		Unchanged: 0/0
 26698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26699 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 26700 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 26701 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26702 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
 26703 ;;Total ram usage:       21 bytes
 26704 ;; Hardware stack levels used:    1
 26705 ;; Hardware stack levels required when called:   10
 26706 ;; This function calls:
 26707 ;;		_I2C_Write_At_Address
 26708 ;;		___awdiv
 26709 ;;		___awmod
 26710 ;; This function is called by:
 26711 ;;		_Command
 26712 ;; This function uses a non-reentrant model
 26713 ;;
 26714                           
 26715                           	psect	text69
 26716  01444E                     __ptext69:
 26717                           	opt stack 0
 26718  01444E                     _SET_RTC_TIME:
 26719                           	opt stack 19
 26720                           
 26721                           ;RTC.c: 172: signed char Error =0;
 26722                           
 26723                           ;incstack = 0
 26724  01444E  0E00               	movlw	0
 26725  014450  0101               	movlb	1	; () banked
 26726  014452  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 26727                           
 26728                           ; BSR set to: 1
 26729                           ;RTC.c: 173: unsigned char temp[7];
 26730                           ;RTC.c: 175: temp[0] = ((SetTime.Seconds /10) << 4) + (SetTime.Seconds % 10);
 26731  014454  C116  F10E         	movff	SET_RTC_TIME@SetTime,___awmod@dividend
 26732  014458  0101               	movlb	1	; () banked
 26733  01445A  6B0F               	clrf	(___awmod@dividend+1)& (0+255),b
 26734  01445C  0E00               	movlw	0
 26735  01445E  0101               	movlb	1	; () banked
 26736  014460  6F11               	movwf	(___awmod@divisor+1)& (0+255),b
 26737  014462  0E0A               	movlw	10
 26738  014464  6F10               	movwf	___awmod@divisor& (0+255),b
 26739  014466  EC51  F0B5         	call	___awmod	;wreg free
 26740  01446A  C10E  F11F         	movff	?___awmod,??_SET_RTC_TIME
 26741  01446E  C10F  F120         	movff	?___awmod+1,??_SET_RTC_TIME+1
 26742  014472  C116  F10E         	movff	SET_RTC_TIME@SetTime,___awdiv@dividend
 26743  014476  0101               	movlb	1	; () banked
 26744  014478  6B0F               	clrf	(___awdiv@dividend+1)& (0+255),b
 26745  01447A  0E00               	movlw	0
 26746  01447C  0101               	movlb	1	; () banked
 26747  01447E  6F11               	movwf	(___awdiv@divisor+1)& (0+255),b
 26748  014480  0E0A               	movlw	10
 26749  014482  6F10               	movwf	___awdiv@divisor& (0+255),b
 26750  014484  EC9A  F0B2         	call	___awdiv	;wreg free
 26751  014488  0101               	movlb	1	; () banked
 26752  01448A  390E               	swapf	?___awdiv& (0+255),w,b
 26753  01448C  0BF0               	andlw	240
 26754  01448E  0101               	movlb	1	; () banked
 26755  014490  251F               	addwf	??_SET_RTC_TIME& (0+255),w,b
 26756  014492  0101               	movlb	1	; () banked
 26757  014494  6F23               	movwf	SET_RTC_TIME@temp& (0+255),b
 26758                           
 26759                           ; BSR set to: 1
 26760                           ;RTC.c: 176: Error = I2C_Write_At_Address( 0b1101000, 0x00, temp[0] );
 26761  014496  0E00               	movlw	0
 26762  014498  0101               	movlb	1	; () banked
 26763  01449A  6F10               	movwf	I2C_Write_At_Address@Register& (0+255),b
 26764  01449C  C123  F111         	movff	SET_RTC_TIME@temp,I2C_Write_At_Address@data
 26765  0144A0  0E68               	movlw	104
 26766  0144A2  EC02  F0B3         	call	_I2C_Write_At_Address
 26767  0144A6  0101               	movlb	1	; () banked
 26768  0144A8  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 26769                           
 26770                           ;RTC.c: 177: if(Error)
 26771  0144AA  0101               	movlb	1	; () banked
 26772  0144AC  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 26773  0144AE  0101               	movlb	1	; () banked
 26774  0144B0  B4D8               	btfsc	status,2,c
 26775  0144B2  D002               	goto	l14229
 26776                           
 26777                           ; BSR set to: 1
 26778                           ;RTC.c: 178: {
 26779                           ;RTC.c: 179: return 1;
 26780  0144B4  0E01               	movlw	1
 26781                           
 26782                           ; BSR set to: 1
 26783  0144B6  0012               	return	
 26784  0144B8                     l14229:
 26785                           
 26786                           ; BSR set to: 1
 26787                           ;RTC.c: 180: }
 26788                           ;RTC.c: 182: temp[1] = ((SetTime.Minutes /10) << 4) + (SetTime.Minutes % 10);
 26789  0144B8  C117  F10E         	movff	SET_RTC_TIME@SetTime+1,___awmod@dividend
 26790  0144BC  0101               	movlb	1	; () banked
 26791  0144BE  6B0F               	clrf	(___awmod@dividend+1)& (0+255),b
 26792  0144C0  0E00               	movlw	0
 26793  0144C2  0101               	movlb	1	; () banked
 26794  0144C4  6F11               	movwf	(___awmod@divisor+1)& (0+255),b
 26795  0144C6  0E0A               	movlw	10
 26796  0144C8  6F10               	movwf	___awmod@divisor& (0+255),b
 26797  0144CA  EC51  F0B5         	call	___awmod	;wreg free
 26798  0144CE  C10E  F11F         	movff	?___awmod,??_SET_RTC_TIME
 26799  0144D2  C10F  F120         	movff	?___awmod+1,??_SET_RTC_TIME+1
 26800  0144D6  C117  F10E         	movff	SET_RTC_TIME@SetTime+1,___awdiv@dividend
 26801  0144DA  0101               	movlb	1	; () banked
 26802  0144DC  6B0F               	clrf	(___awdiv@dividend+1)& (0+255),b
 26803  0144DE  0E00               	movlw	0
 26804  0144E0  0101               	movlb	1	; () banked
 26805  0144E2  6F11               	movwf	(___awdiv@divisor+1)& (0+255),b
 26806  0144E4  0E0A               	movlw	10
 26807  0144E6  6F10               	movwf	___awdiv@divisor& (0+255),b
 26808  0144E8  EC9A  F0B2         	call	___awdiv	;wreg free
 26809  0144EC  0101               	movlb	1	; () banked
 26810  0144EE  390E               	swapf	?___awdiv& (0+255),w,b
 26811  0144F0  0BF0               	andlw	240
 26812  0144F2  0101               	movlb	1	; () banked
 26813  0144F4  251F               	addwf	??_SET_RTC_TIME& (0+255),w,b
 26814  0144F6  0101               	movlb	1	; () banked
 26815  0144F8  6F24               	movwf	(SET_RTC_TIME@temp+1)& (0+255),b
 26816                           
 26817                           ;RTC.c: 183: Error = I2C_Write_At_Address( 0b1101000, 0x01, temp[1] );
 26818  0144FA  0E01               	movlw	1
 26819  0144FC  0101               	movlb	1	; () banked
 26820  0144FE  6F10               	movwf	I2C_Write_At_Address@Register& (0+255),b
 26821  014500  C124  F111         	movff	SET_RTC_TIME@temp+1,I2C_Write_At_Address@data
 26822  014504  0E68               	movlw	104
 26823  014506  EC02  F0B3         	call	_I2C_Write_At_Address
 26824  01450A  0101               	movlb	1	; () banked
 26825  01450C  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 26826                           
 26827                           ; BSR set to: 1
 26828                           ;RTC.c: 184: if(Error)
 26829  01450E  0101               	movlb	1	; () banked
 26830  014510  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 26831  014512  0101               	movlb	1	; () banked
 26832  014514  B4D8               	btfsc	status,2,c
 26833  014516  D002               	goto	l14237
 26834                           
 26835                           ; BSR set to: 1
 26836                           ;RTC.c: 185: {
 26837                           ;RTC.c: 186: return 2;
 26838  014518  0E02               	movlw	2
 26839                           
 26840                           ; BSR set to: 1
 26841  01451A  0012               	return	
 26842  01451C                     l14237:
 26843                           
 26844                           ; BSR set to: 1
 26845                           ;RTC.c: 187: }
 26846                           ;RTC.c: 189: temp[2] = ((SetTime.Hours /10) << 4) + (SetTime.Hours % 10) + (SetTime.Hour
      +                          sAM_PM << 5);
 26847  01451C  C11A  F11F         	movff	SET_RTC_TIME@SetTime+4,??_SET_RTC_TIME
 26848  014520  0E05               	movlw	5
 26849  014522  0101               	movlb	1	; () banked
 26850  014524  6F20               	movwf	(??_SET_RTC_TIME+1)& (0+255),b
 26851  014526                     u18225:
 26852  014526  0101               	movlb	1	; () banked
 26853  014528  90D8               	bcf	status,0,c
 26854  01452A  371F               	rlcf	??_SET_RTC_TIME& (0+255),f,b
 26855  01452C  0101               	movlb	1	; () banked
 26856  01452E  2F20               	decfsz	(??_SET_RTC_TIME+1)& (0+255),f,b
 26857  014530  D7FA               	goto	u18225
 26858  014532  C118  F10E         	movff	SET_RTC_TIME@SetTime+2,___awmod@dividend
 26859  014536  0101               	movlb	1	; () banked
 26860  014538  6B0F               	clrf	(___awmod@dividend+1)& (0+255),b
 26861  01453A  0E00               	movlw	0
 26862  01453C  0101               	movlb	1	; () banked
 26863  01453E  6F11               	movwf	(___awmod@divisor+1)& (0+255),b
 26864  014540  0E0A               	movlw	10
 26865  014542  6F10               	movwf	___awmod@divisor& (0+255),b
 26866  014544  EC51  F0B5         	call	___awmod	;wreg free
 26867  014548  C10E  F121         	movff	?___awmod,??_SET_RTC_TIME+2
 26868  01454C  C10F  F122         	movff	?___awmod+1,??_SET_RTC_TIME+3
 26869  014550  C118  F10E         	movff	SET_RTC_TIME@SetTime+2,___awdiv@dividend
 26870  014554  0101               	movlb	1	; () banked
 26871  014556  6B0F               	clrf	(___awdiv@dividend+1)& (0+255),b
 26872  014558  0E00               	movlw	0
 26873  01455A  0101               	movlb	1	; () banked
 26874  01455C  6F11               	movwf	(___awdiv@divisor+1)& (0+255),b
 26875  01455E  0E0A               	movlw	10
 26876  014560  6F10               	movwf	___awdiv@divisor& (0+255),b
 26877  014562  EC9A  F0B2         	call	___awdiv	;wreg free
 26878  014566  0101               	movlb	1	; () banked
 26879  014568  390E               	swapf	?___awdiv& (0+255),w,b
 26880  01456A  0BF0               	andlw	240
 26881  01456C  0101               	movlb	1	; () banked
 26882  01456E  2521               	addwf	(??_SET_RTC_TIME+2)& (0+255),w,b
 26883  014570  0101               	movlb	1	; () banked
 26884  014572  251F               	addwf	??_SET_RTC_TIME& (0+255),w,b
 26885  014574  0101               	movlb	1	; () banked
 26886  014576  6F25               	movwf	(SET_RTC_TIME@temp+2)& (0+255),b
 26887                           
 26888                           ;RTC.c: 190: Error = I2C_Write_At_Address( 0b1101000, 0x02, temp[2] );
 26889  014578  0E02               	movlw	2
 26890  01457A  0101               	movlb	1	; () banked
 26891  01457C  6F10               	movwf	I2C_Write_At_Address@Register& (0+255),b
 26892  01457E  C125  F111         	movff	SET_RTC_TIME@temp+2,I2C_Write_At_Address@data
 26893  014582  0E68               	movlw	104
 26894  014584  EC02  F0B3         	call	_I2C_Write_At_Address
 26895  014588  0101               	movlb	1	; () banked
 26896  01458A  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 26897                           
 26898                           ; BSR set to: 1
 26899                           ;RTC.c: 191: if(Error)
 26900  01458C  0101               	movlb	1	; () banked
 26901  01458E  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 26902  014590  0101               	movlb	1	; () banked
 26903  014592  B4D8               	btfsc	status,2,c
 26904  014594  D002               	goto	l1218
 26905                           
 26906                           ; BSR set to: 1
 26907                           ;RTC.c: 192: {
 26908                           ;RTC.c: 193: return 3;
 26909  014596  0E03               	movlw	3
 26910                           
 26911                           ; BSR set to: 1
 26912  014598  0012               	return	
 26913  01459A                     l1218:
 26914                           
 26915                           ; BSR set to: 1
 26916                           ;RTC.c: 194: }
 26917                           ;RTC.c: 196: temp[3] = (SetTime.Day);
 26918  01459A  C11B  F126         	movff	SET_RTC_TIME@SetTime+5,SET_RTC_TIME@temp+3
 26919                           
 26920                           ; BSR set to: 1
 26921                           ;RTC.c: 197: Error = I2C_Write_At_Address( 0b1101000, 0x03, temp[3] );
 26922  01459E  0E03               	movlw	3
 26923  0145A0  0101               	movlb	1	; () banked
 26924  0145A2  6F10               	movwf	I2C_Write_At_Address@Register& (0+255),b
 26925  0145A4  C126  F111         	movff	SET_RTC_TIME@temp+3,I2C_Write_At_Address@data
 26926  0145A8  0E68               	movlw	104
 26927  0145AA  EC02  F0B3         	call	_I2C_Write_At_Address
 26928  0145AE  0101               	movlb	1	; () banked
 26929  0145B0  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 26930                           
 26931                           ; BSR set to: 1
 26932                           ;RTC.c: 198: if(Error)
 26933  0145B2  0101               	movlb	1	; () banked
 26934  0145B4  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 26935  0145B6  0101               	movlb	1	; () banked
 26936  0145B8  B4D8               	btfsc	status,2,c
 26937  0145BA  D002               	goto	l14253
 26938                           
 26939                           ; BSR set to: 1
 26940                           ;RTC.c: 199: {
 26941                           ;RTC.c: 200: return 4;
 26942  0145BC  0E04               	movlw	4
 26943                           
 26944                           ; BSR set to: 1
 26945  0145BE  0012               	return	
 26946  0145C0                     l14253:
 26947                           
 26948                           ; BSR set to: 1
 26949                           ;RTC.c: 201: }
 26950                           ;RTC.c: 203: temp[4] = ((SetTime.Date /10) << 4) + (SetTime.Date % 10);
 26951  0145C0  C11C  F10E         	movff	SET_RTC_TIME@SetTime+6,___awmod@dividend
 26952  0145C4  0101               	movlb	1	; () banked
 26953  0145C6  6B0F               	clrf	(___awmod@dividend+1)& (0+255),b
 26954  0145C8  0E00               	movlw	0
 26955  0145CA  0101               	movlb	1	; () banked
 26956  0145CC  6F11               	movwf	(___awmod@divisor+1)& (0+255),b
 26957  0145CE  0E0A               	movlw	10
 26958  0145D0  6F10               	movwf	___awmod@divisor& (0+255),b
 26959  0145D2  EC51  F0B5         	call	___awmod	;wreg free
 26960  0145D6  C10E  F11F         	movff	?___awmod,??_SET_RTC_TIME
 26961  0145DA  C10F  F120         	movff	?___awmod+1,??_SET_RTC_TIME+1
 26962  0145DE  C11C  F10E         	movff	SET_RTC_TIME@SetTime+6,___awdiv@dividend
 26963  0145E2  0101               	movlb	1	; () banked
 26964  0145E4  6B0F               	clrf	(___awdiv@dividend+1)& (0+255),b
 26965  0145E6  0E00               	movlw	0
 26966  0145E8  0101               	movlb	1	; () banked
 26967  0145EA  6F11               	movwf	(___awdiv@divisor+1)& (0+255),b
 26968  0145EC  0E0A               	movlw	10
 26969  0145EE  6F10               	movwf	___awdiv@divisor& (0+255),b
 26970  0145F0  EC9A  F0B2         	call	___awdiv	;wreg free
 26971  0145F4  0101               	movlb	1	; () banked
 26972  0145F6  390E               	swapf	?___awdiv& (0+255),w,b
 26973  0145F8  0BF0               	andlw	240
 26974  0145FA  0101               	movlb	1	; () banked
 26975  0145FC  251F               	addwf	??_SET_RTC_TIME& (0+255),w,b
 26976  0145FE  0101               	movlb	1	; () banked
 26977  014600  6F27               	movwf	(SET_RTC_TIME@temp+4)& (0+255),b
 26978                           
 26979                           ;RTC.c: 204: Error = I2C_Write_At_Address( 0b1101000, 0x04, temp[4] );
 26980  014602  0E04               	movlw	4
 26981  014604  0101               	movlb	1	; () banked
 26982  014606  6F10               	movwf	I2C_Write_At_Address@Register& (0+255),b
 26983  014608  C127  F111         	movff	SET_RTC_TIME@temp+4,I2C_Write_At_Address@data
 26984  01460C  0E68               	movlw	104
 26985  01460E  EC02  F0B3         	call	_I2C_Write_At_Address
 26986  014612  0101               	movlb	1	; () banked
 26987  014614  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 26988                           
 26989                           ; BSR set to: 1
 26990                           ;RTC.c: 205: if(Error)
 26991  014616  0101               	movlb	1	; () banked
 26992  014618  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 26993  01461A  0101               	movlb	1	; () banked
 26994  01461C  B4D8               	btfsc	status,2,c
 26995  01461E  D002               	goto	l14261
 26996                           
 26997                           ; BSR set to: 1
 26998                           ;RTC.c: 206: {
 26999                           ;RTC.c: 207: return 5;
 27000  014620  0E05               	movlw	5
 27001                           
 27002                           ; BSR set to: 1
 27003  014622  0012               	return	
 27004  014624                     l14261:
 27005                           
 27006                           ; BSR set to: 1
 27007                           ;RTC.c: 208: }
 27008                           ;RTC.c: 210: temp[5] = ((SetTime.Month /10) << 4) + (SetTime.Month % 10);
 27009  014624  C11D  F10E         	movff	SET_RTC_TIME@SetTime+7,___awmod@dividend
 27010  014628  0101               	movlb	1	; () banked
 27011  01462A  6B0F               	clrf	(___awmod@dividend+1)& (0+255),b
 27012  01462C  0E00               	movlw	0
 27013  01462E  0101               	movlb	1	; () banked
 27014  014630  6F11               	movwf	(___awmod@divisor+1)& (0+255),b
 27015  014632  0E0A               	movlw	10
 27016  014634  6F10               	movwf	___awmod@divisor& (0+255),b
 27017  014636  EC51  F0B5         	call	___awmod	;wreg free
 27018  01463A  C10E  F11F         	movff	?___awmod,??_SET_RTC_TIME
 27019  01463E  C10F  F120         	movff	?___awmod+1,??_SET_RTC_TIME+1
 27020  014642  C11D  F10E         	movff	SET_RTC_TIME@SetTime+7,___awdiv@dividend
 27021  014646  0101               	movlb	1	; () banked
 27022  014648  6B0F               	clrf	(___awdiv@dividend+1)& (0+255),b
 27023  01464A  0E00               	movlw	0
 27024  01464C  0101               	movlb	1	; () banked
 27025  01464E  6F11               	movwf	(___awdiv@divisor+1)& (0+255),b
 27026  014650  0E0A               	movlw	10
 27027  014652  6F10               	movwf	___awdiv@divisor& (0+255),b
 27028  014654  EC9A  F0B2         	call	___awdiv	;wreg free
 27029  014658  0101               	movlb	1	; () banked
 27030  01465A  390E               	swapf	?___awdiv& (0+255),w,b
 27031  01465C  0BF0               	andlw	240
 27032  01465E  0101               	movlb	1	; () banked
 27033  014660  251F               	addwf	??_SET_RTC_TIME& (0+255),w,b
 27034  014662  0101               	movlb	1	; () banked
 27035  014664  6F28               	movwf	(SET_RTC_TIME@temp+5)& (0+255),b
 27036                           
 27037                           ;RTC.c: 211: Error = I2C_Write_At_Address( 0b1101000, 0x05, temp[5] );
 27038  014666  0E05               	movlw	5
 27039  014668  0101               	movlb	1	; () banked
 27040  01466A  6F10               	movwf	I2C_Write_At_Address@Register& (0+255),b
 27041  01466C  C128  F111         	movff	SET_RTC_TIME@temp+5,I2C_Write_At_Address@data
 27042  014670  0E68               	movlw	104
 27043  014672  EC02  F0B3         	call	_I2C_Write_At_Address
 27044  014676  0101               	movlb	1	; () banked
 27045  014678  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 27046                           
 27047                           ; BSR set to: 1
 27048                           ;RTC.c: 212: if(Error)
 27049  01467A  0101               	movlb	1	; () banked
 27050  01467C  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 27051  01467E  0101               	movlb	1	; () banked
 27052  014680  B4D8               	btfsc	status,2,c
 27053  014682  D002               	goto	l14269
 27054                           
 27055                           ; BSR set to: 1
 27056                           ;RTC.c: 213: {
 27057                           ;RTC.c: 214: return 6;
 27058  014684  0E06               	movlw	6
 27059                           
 27060                           ; BSR set to: 1
 27061  014686  0012               	return	
 27062  014688                     l14269:
 27063                           
 27064                           ; BSR set to: 1
 27065                           ;RTC.c: 215: }
 27066                           ;RTC.c: 217: temp[6] = ((SetTime.Year /10) << 4) + (SetTime.Year % 10);
 27067  014688  C11E  F10E         	movff	SET_RTC_TIME@SetTime+8,___awmod@dividend
 27068  01468C  0101               	movlb	1	; () banked
 27069  01468E  6B0F               	clrf	(___awmod@dividend+1)& (0+255),b
 27070  014690  0E00               	movlw	0
 27071  014692  0101               	movlb	1	; () banked
 27072  014694  6F11               	movwf	(___awmod@divisor+1)& (0+255),b
 27073  014696  0E0A               	movlw	10
 27074  014698  6F10               	movwf	___awmod@divisor& (0+255),b
 27075  01469A  EC51  F0B5         	call	___awmod	;wreg free
 27076  01469E  C10E  F11F         	movff	?___awmod,??_SET_RTC_TIME
 27077  0146A2  C10F  F120         	movff	?___awmod+1,??_SET_RTC_TIME+1
 27078  0146A6  C11E  F10E         	movff	SET_RTC_TIME@SetTime+8,___awdiv@dividend
 27079  0146AA  0101               	movlb	1	; () banked
 27080  0146AC  6B0F               	clrf	(___awdiv@dividend+1)& (0+255),b
 27081  0146AE  0E00               	movlw	0
 27082  0146B0  0101               	movlb	1	; () banked
 27083  0146B2  6F11               	movwf	(___awdiv@divisor+1)& (0+255),b
 27084  0146B4  0E0A               	movlw	10
 27085  0146B6  6F10               	movwf	___awdiv@divisor& (0+255),b
 27086  0146B8  EC9A  F0B2         	call	___awdiv	;wreg free
 27087  0146BC  0101               	movlb	1	; () banked
 27088  0146BE  390E               	swapf	?___awdiv& (0+255),w,b
 27089  0146C0  0BF0               	andlw	240
 27090  0146C2  0101               	movlb	1	; () banked
 27091  0146C4  251F               	addwf	??_SET_RTC_TIME& (0+255),w,b
 27092  0146C6  0101               	movlb	1	; () banked
 27093  0146C8  6F29               	movwf	(SET_RTC_TIME@temp+6)& (0+255),b
 27094                           
 27095                           ;RTC.c: 218: Error = I2C_Write_At_Address( 0b1101000, 0x06, temp[6] );
 27096  0146CA  0E06               	movlw	6
 27097  0146CC  0101               	movlb	1	; () banked
 27098  0146CE  6F10               	movwf	I2C_Write_At_Address@Register& (0+255),b
 27099  0146D0  C129  F111         	movff	SET_RTC_TIME@temp+6,I2C_Write_At_Address@data
 27100  0146D4  0E68               	movlw	104
 27101  0146D6  EC02  F0B3         	call	_I2C_Write_At_Address
 27102  0146DA  0101               	movlb	1	; () banked
 27103  0146DC  6F2A               	movwf	SET_RTC_TIME@Error& (0+255),b
 27104                           
 27105                           ; BSR set to: 1
 27106                           ;RTC.c: 219: if(Error)
 27107  0146DE  0101               	movlb	1	; () banked
 27108  0146E0  512A               	movf	SET_RTC_TIME@Error& (0+255),w,b
 27109  0146E2  0101               	movlb	1	; () banked
 27110  0146E4  B4D8               	btfsc	status,2,c
 27111  0146E6  D002               	goto	l14277
 27112                           
 27113                           ; BSR set to: 1
 27114                           ;RTC.c: 220: {
 27115                           ;RTC.c: 221: return 7;
 27116  0146E8  0E07               	movlw	7
 27117                           
 27118                           ; BSR set to: 1
 27119  0146EA  0012               	return	
 27120  0146EC                     l14277:
 27121                           
 27122                           ; BSR set to: 1
 27123                           ;RTC.c: 222: }
 27124                           ;RTC.c: 224: return 0;
 27125  0146EC  0E00               	movlw	0
 27126  0146EE  0012               	return	
 27127                           
 27128                           ; BSR set to: 1
 27129                           
 27130                           ; BSR set to: 1
 27131  0146F0  0012               	return		;funcret
 27132  0146F2                     __end_of_SET_RTC_TIME:
 27133                           	opt stack 0
 27134                           tblptru	equ	0xFF8
 27135                           tblptrh	equ	0xFF7
 27136                           tblptrl	equ	0xFF6
 27137                           tablat	equ	0xFF5
 27138                           prodh	equ	0xFF4
 27139                           prodl	equ	0xFF3
 27140                           intcon	equ	0xFF2
 27141                           intcon2	equ	0xFF1
 27142                           postinc0	equ	0xFEE
 27143                           plusw0	equ	0xFEB
 27144                           wreg	equ	0xFE8
 27145                           indf1	equ	0xFE7
 27146                           postdec1	equ	0xFE5
 27147                           fsr1h	equ	0xFE2
 27148                           fsr1l	equ	0xFE1
 27149                           indf2	equ	0xFDF
 27150                           postinc2	equ	0xFDE
 27151                           postdec2	equ	0xFDD
 27152                           plusw2	equ	0xFDB
 27153                           fsr2h	equ	0xFDA
 27154                           fsr2l	equ	0xFD9
 27155                           status	equ	0xFD8
 27156                           
 27157 ;; *************** function ___awmod *****************
 27158 ;; Defined at:
 27159 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 27160 ;; Parameters:    Size  Location     Type
 27161 ;;  dividend        2   14[BANK1 ] int 
 27162 ;;  divisor         2   16[BANK1 ] int 
 27163 ;; Auto vars:     Size  Location     Type
 27164 ;;  sign            1   19[BANK1 ] unsigned char 
 27165 ;;  counter         1   18[BANK1 ] unsigned char 
 27166 ;; Return value:  Size  Location     Type
 27167 ;;                  2   14[BANK1 ] int 
 27168 ;; Registers used:
 27169 ;;		wreg, status,2, status,0
 27170 ;; Tracked objects:
 27171 ;;		On entry : 0/0
 27172 ;;		On exit  : 0/0
 27173 ;;		Unchanged: 0/0
 27174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27175 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27176 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27178 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 27179 ;;Total ram usage:        6 bytes
 27180 ;; Hardware stack levels used:    1
 27181 ;; Hardware stack levels required when called:    7
 27182 ;; This function calls:
 27183 ;;		Nothing
 27184 ;; This function is called by:
 27185 ;;		_SET_RTC_TIME
 27186 ;; This function uses a non-reentrant model
 27187 ;;
 27188                           
 27189                           	psect	text70
 27190  016AA2                     __ptext70:
 27191                           	opt stack 0
 27192  016AA2                     ___awmod:
 27193                           	opt stack 21
 27194                           
 27195                           ; BSR set to: 1
 27196                           ;incstack = 0
 27197  016AA2  0E00               	movlw	0
 27198  016AA4  0101               	movlb	1	; () banked
 27199  016AA6  6F13               	movwf	___awmod@sign& (0+255),b
 27200                           
 27201                           ; BSR set to: 1
 27202  016AA8  0101               	movlb	1	; () banked
 27203  016AAA  AF0F               	btfss	(___awmod@dividend+1)& (0+255),7,b
 27204  016AAC  D009               	goto	l13339
 27205                           
 27206                           ; BSR set to: 1
 27207  016AAE  0101               	movlb	1	; () banked
 27208  016AB0  6D0E               	negf	___awmod@dividend& (0+255),b
 27209  016AB2  1F0F               	comf	(___awmod@dividend+1)& (0+255),f,b
 27210  016AB4  B0D8               	btfsc	status,0,c
 27211  016AB6  2B0F               	incf	(___awmod@dividend+1)& (0+255),f,b
 27212                           
 27213                           ; BSR set to: 1
 27214  016AB8  0E01               	movlw	1
 27215  016ABA  0101               	movlb	1	; () banked
 27216  016ABC  6F13               	movwf	___awmod@sign& (0+255),b
 27217  016ABE  D000               	goto	l13339
 27218  016AC0                     l13339:
 27219                           
 27220                           ; BSR set to: 1
 27221  016AC0  0101               	movlb	1	; () banked
 27222  016AC2  AF11               	btfss	(___awmod@divisor+1)& (0+255),7,b
 27223  016AC4  D006               	goto	l13343
 27224                           
 27225                           ; BSR set to: 1
 27226  016AC6  0101               	movlb	1	; () banked
 27227  016AC8  6D10               	negf	___awmod@divisor& (0+255),b
 27228  016ACA  1F11               	comf	(___awmod@divisor+1)& (0+255),f,b
 27229  016ACC  B0D8               	btfsc	status,0,c
 27230  016ACE  2B11               	incf	(___awmod@divisor+1)& (0+255),f,b
 27231  016AD0  D000               	goto	l13343
 27232  016AD2                     l13343:
 27233                           
 27234                           ; BSR set to: 1
 27235  016AD2  0101               	movlb	1	; () banked
 27236  016AD4  5110               	movf	___awmod@divisor& (0+255),w,b
 27237  016AD6  0101               	movlb	1	; () banked
 27238  016AD8  1111               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 27239  016ADA  B4D8               	btfsc	status,2,c
 27240  016ADC  D02B               	goto	l13359
 27241                           
 27242                           ; BSR set to: 1
 27243  016ADE  0E01               	movlw	1
 27244  016AE0  0101               	movlb	1	; () banked
 27245  016AE2  6F12               	movwf	___awmod@counter& (0+255),b
 27246  016AE4  D007               	goto	l13349
 27247  016AE6                     l13347:
 27248                           
 27249                           ; BSR set to: 1
 27250  016AE6  0101               	movlb	1	; () banked
 27251  016AE8  90D8               	bcf	status,0,c
 27252  016AEA  3710               	rlcf	___awmod@divisor& (0+255),f,b
 27253  016AEC  3711               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 27254  016AEE  0101               	movlb	1	; () banked
 27255  016AF0  2B12               	incf	___awmod@counter& (0+255),f,b
 27256  016AF2  D000               	goto	l13349
 27257  016AF4                     l13349:
 27258                           
 27259                           ; BSR set to: 1
 27260  016AF4  0101               	movlb	1	; () banked
 27261  016AF6  BF11               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 27262  016AF8  D002               	goto	l13351
 27263  016AFA  D7F5               	goto	l13347
 27264                           
 27265                           ; BSR set to: 1
 27266  016AFC  D000               	goto	l13351
 27267  016AFE                     l13351:
 27268                           
 27269                           ; BSR set to: 1
 27270  016AFE  0101               	movlb	1	; () banked
 27271  016B00  5110               	movf	___awmod@divisor& (0+255),w,b
 27272  016B02  0101               	movlb	1	; () banked
 27273  016B04  5D0E               	subwf	___awmod@dividend& (0+255),w,b
 27274  016B06  0101               	movlb	1	; () banked
 27275  016B08  5111               	movf	(___awmod@divisor+1)& (0+255),w,b
 27276  016B0A  0101               	movlb	1	; () banked
 27277  016B0C  590F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 27278  016B0E  A0D8               	btfss	status,0,c
 27279  016B10  D009               	goto	l13355
 27280                           
 27281                           ; BSR set to: 1
 27282  016B12  0101               	movlb	1	; () banked
 27283  016B14  5110               	movf	___awmod@divisor& (0+255),w,b
 27284  016B16  0101               	movlb	1	; () banked
 27285  016B18  5F0E               	subwf	___awmod@dividend& (0+255),f,b
 27286  016B1A  0101               	movlb	1	; () banked
 27287  016B1C  5111               	movf	(___awmod@divisor+1)& (0+255),w,b
 27288  016B1E  0101               	movlb	1	; () banked
 27289  016B20  5B0F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 27290  016B22  D000               	goto	l13355
 27291  016B24                     l13355:
 27292                           
 27293                           ; BSR set to: 1
 27294  016B24  0101               	movlb	1	; () banked
 27295  016B26  90D8               	bcf	status,0,c
 27296  016B28  3311               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 27297  016B2A  3310               	rrcf	___awmod@divisor& (0+255),f,b
 27298                           
 27299                           ; BSR set to: 1
 27300  016B2C  0101               	movlb	1	; () banked
 27301  016B2E  2F12               	decfsz	___awmod@counter& (0+255),f,b
 27302  016B30  D7E6               	goto	l13351
 27303                           
 27304                           ; BSR set to: 1
 27305  016B32  D000               	goto	l13359
 27306  016B34                     l13359:
 27307                           
 27308                           ; BSR set to: 1
 27309  016B34  0101               	movlb	1	; () banked
 27310  016B36  5113               	movf	___awmod@sign& (0+255),w,b
 27311  016B38  0101               	movlb	1	; () banked
 27312  016B3A  B4D8               	btfsc	status,2,c
 27313  016B3C  D006               	goto	l13363
 27314                           
 27315                           ; BSR set to: 1
 27316  016B3E  0101               	movlb	1	; () banked
 27317  016B40  6D0E               	negf	___awmod@dividend& (0+255),b
 27318  016B42  1F0F               	comf	(___awmod@dividend+1)& (0+255),f,b
 27319  016B44  B0D8               	btfsc	status,0,c
 27320  016B46  2B0F               	incf	(___awmod@dividend+1)& (0+255),f,b
 27321  016B48  D000               	goto	l13363
 27322  016B4A                     l13363:
 27323                           
 27324                           ; BSR set to: 1
 27325  016B4A  C10E  F10E         	movff	___awmod@dividend,?___awmod
 27326  016B4E  C10F  F10F         	movff	___awmod@dividend+1,?___awmod+1
 27327  016B52  0012               	return	
 27328                           
 27329                           ; BSR set to: 1
 27330                           
 27331                           ; BSR set to: 1
 27332  016B54  0012               	return		;funcret
 27333  016B56                     __end_of___awmod:
 27334                           	opt stack 0
 27335                           tblptru	equ	0xFF8
 27336                           tblptrh	equ	0xFF7
 27337                           tblptrl	equ	0xFF6
 27338                           tablat	equ	0xFF5
 27339                           prodh	equ	0xFF4
 27340                           prodl	equ	0xFF3
 27341                           intcon	equ	0xFF2
 27342                           intcon2	equ	0xFF1
 27343                           postinc0	equ	0xFEE
 27344                           plusw0	equ	0xFEB
 27345                           wreg	equ	0xFE8
 27346                           indf1	equ	0xFE7
 27347                           postdec1	equ	0xFE5
 27348                           fsr1h	equ	0xFE2
 27349                           fsr1l	equ	0xFE1
 27350                           indf2	equ	0xFDF
 27351                           postinc2	equ	0xFDE
 27352                           postdec2	equ	0xFDD
 27353                           plusw2	equ	0xFDB
 27354                           fsr2h	equ	0xFDA
 27355                           fsr2l	equ	0xFD9
 27356                           status	equ	0xFD8
 27357                           
 27358 ;; *************** function ___awdiv *****************
 27359 ;; Defined at:
 27360 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 27361 ;; Parameters:    Size  Location     Type
 27362 ;;  dividend        2   14[BANK1 ] int 
 27363 ;;  divisor         2   16[BANK1 ] int 
 27364 ;; Auto vars:     Size  Location     Type
 27365 ;;  quotient        2   20[BANK1 ] int 
 27366 ;;  sign            1   19[BANK1 ] unsigned char 
 27367 ;;  counter         1   18[BANK1 ] unsigned char 
 27368 ;; Return value:  Size  Location     Type
 27369 ;;                  2   14[BANK1 ] int 
 27370 ;; Registers used:
 27371 ;;		wreg, status,2, status,0
 27372 ;; Tracked objects:
 27373 ;;		On entry : 0/0
 27374 ;;		On exit  : 0/0
 27375 ;;		Unchanged: 0/0
 27376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27377 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27378 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27380 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 27381 ;;Total ram usage:        8 bytes
 27382 ;; Hardware stack levels used:    1
 27383 ;; Hardware stack levels required when called:    7
 27384 ;; This function calls:
 27385 ;;		Nothing
 27386 ;; This function is called by:
 27387 ;;		_SET_RTC_TIME
 27388 ;; This function uses a non-reentrant model
 27389 ;;
 27390                           
 27391                           	psect	text71
 27392  016534                     __ptext71:
 27393                           	opt stack 0
 27394  016534                     ___awdiv:
 27395                           	opt stack 21
 27396                           
 27397                           ; BSR set to: 1
 27398                           ;incstack = 0
 27399  016534  0E00               	movlw	0
 27400  016536  0101               	movlb	1	; () banked
 27401  016538  6F13               	movwf	___awdiv@sign& (0+255),b
 27402                           
 27403                           ; BSR set to: 1
 27404  01653A  0101               	movlb	1	; () banked
 27405  01653C  AF11               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 27406  01653E  D009               	goto	l13295
 27407                           
 27408                           ; BSR set to: 1
 27409  016540  0101               	movlb	1	; () banked
 27410  016542  6D10               	negf	___awdiv@divisor& (0+255),b
 27411  016544  1F11               	comf	(___awdiv@divisor+1)& (0+255),f,b
 27412  016546  B0D8               	btfsc	status,0,c
 27413  016548  2B11               	incf	(___awdiv@divisor+1)& (0+255),f,b
 27414                           
 27415                           ; BSR set to: 1
 27416  01654A  0E01               	movlw	1
 27417  01654C  0101               	movlb	1	; () banked
 27418  01654E  6F13               	movwf	___awdiv@sign& (0+255),b
 27419  016550  D000               	goto	l13295
 27420  016552                     l13295:
 27421                           
 27422                           ; BSR set to: 1
 27423  016552  0101               	movlb	1	; () banked
 27424  016554  AF0F               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 27425  016556  D009               	goto	l13301
 27426                           
 27427                           ; BSR set to: 1
 27428  016558  0101               	movlb	1	; () banked
 27429  01655A  6D0E               	negf	___awdiv@dividend& (0+255),b
 27430  01655C  1F0F               	comf	(___awdiv@dividend+1)& (0+255),f,b
 27431  01655E  B0D8               	btfsc	status,0,c
 27432  016560  2B0F               	incf	(___awdiv@dividend+1)& (0+255),f,b
 27433                           
 27434                           ; BSR set to: 1
 27435  016562  0E01               	movlw	1
 27436  016564  0101               	movlb	1	; () banked
 27437  016566  1B13               	xorwf	___awdiv@sign& (0+255),f,b
 27438  016568  D000               	goto	l13301
 27439  01656A                     l13301:
 27440                           
 27441                           ; BSR set to: 1
 27442  01656A  0E00               	movlw	0
 27443  01656C  0101               	movlb	1	; () banked
 27444  01656E  6F15               	movwf	(___awdiv@quotient+1)& (0+255),b
 27445  016570  0E00               	movlw	0
 27446  016572  6F14               	movwf	___awdiv@quotient& (0+255),b
 27447                           
 27448                           ; BSR set to: 1
 27449  016574  0101               	movlb	1	; () banked
 27450  016576  5110               	movf	___awdiv@divisor& (0+255),w,b
 27451  016578  0101               	movlb	1	; () banked
 27452  01657A  1111               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 27453  01657C  B4D8               	btfsc	status,2,c
 27454  01657E  D031               	goto	l13323
 27455                           
 27456                           ; BSR set to: 1
 27457  016580  0E01               	movlw	1
 27458  016582  0101               	movlb	1	; () banked
 27459  016584  6F12               	movwf	___awdiv@counter& (0+255),b
 27460  016586  D007               	goto	l13309
 27461  016588                     l13307:
 27462                           
 27463                           ; BSR set to: 1
 27464  016588  0101               	movlb	1	; () banked
 27465  01658A  90D8               	bcf	status,0,c
 27466  01658C  3710               	rlcf	___awdiv@divisor& (0+255),f,b
 27467  01658E  3711               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 27468  016590  0101               	movlb	1	; () banked
 27469  016592  2B12               	incf	___awdiv@counter& (0+255),f,b
 27470  016594  D000               	goto	l13309
 27471  016596                     l13309:
 27472                           
 27473                           ; BSR set to: 1
 27474  016596  0101               	movlb	1	; () banked
 27475  016598  BF11               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 27476  01659A  D002               	goto	l13311
 27477  01659C  D7F5               	goto	l13307
 27478                           
 27479                           ; BSR set to: 1
 27480  01659E  D000               	goto	l13311
 27481  0165A0                     l13311:
 27482                           
 27483                           ; BSR set to: 1
 27484  0165A0  0101               	movlb	1	; () banked
 27485  0165A2  90D8               	bcf	status,0,c
 27486  0165A4  3714               	rlcf	___awdiv@quotient& (0+255),f,b
 27487  0165A6  3715               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 27488                           
 27489                           ; BSR set to: 1
 27490  0165A8  0101               	movlb	1	; () banked
 27491  0165AA  5110               	movf	___awdiv@divisor& (0+255),w,b
 27492  0165AC  0101               	movlb	1	; () banked
 27493  0165AE  5D0E               	subwf	___awdiv@dividend& (0+255),w,b
 27494  0165B0  0101               	movlb	1	; () banked
 27495  0165B2  5111               	movf	(___awdiv@divisor+1)& (0+255),w,b
 27496  0165B4  0101               	movlb	1	; () banked
 27497  0165B6  590F               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 27498  0165B8  A0D8               	btfss	status,0,c
 27499  0165BA  D00B               	goto	l13319
 27500                           
 27501                           ; BSR set to: 1
 27502  0165BC  0101               	movlb	1	; () banked
 27503  0165BE  5110               	movf	___awdiv@divisor& (0+255),w,b
 27504  0165C0  0101               	movlb	1	; () banked
 27505  0165C2  5F0E               	subwf	___awdiv@dividend& (0+255),f,b
 27506  0165C4  0101               	movlb	1	; () banked
 27507  0165C6  5111               	movf	(___awdiv@divisor+1)& (0+255),w,b
 27508  0165C8  0101               	movlb	1	; () banked
 27509  0165CA  5B0F               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 27510                           
 27511                           ; BSR set to: 1
 27512  0165CC  0101               	movlb	1	; () banked
 27513  0165CE  8114               	bsf	___awdiv@quotient& (0+255),0,b
 27514  0165D0  D000               	goto	l13319
 27515  0165D2                     l13319:
 27516                           
 27517                           ; BSR set to: 1
 27518  0165D2  0101               	movlb	1	; () banked
 27519  0165D4  90D8               	bcf	status,0,c
 27520  0165D6  3311               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 27521  0165D8  3310               	rrcf	___awdiv@divisor& (0+255),f,b
 27522                           
 27523                           ; BSR set to: 1
 27524  0165DA  0101               	movlb	1	; () banked
 27525  0165DC  2F12               	decfsz	___awdiv@counter& (0+255),f,b
 27526  0165DE  D7E0               	goto	l13311
 27527                           
 27528                           ; BSR set to: 1
 27529  0165E0  D000               	goto	l13323
 27530  0165E2                     l13323:
 27531                           
 27532                           ; BSR set to: 1
 27533  0165E2  0101               	movlb	1	; () banked
 27534  0165E4  5113               	movf	___awdiv@sign& (0+255),w,b
 27535  0165E6  0101               	movlb	1	; () banked
 27536  0165E8  B4D8               	btfsc	status,2,c
 27537  0165EA  D006               	goto	l13327
 27538                           
 27539                           ; BSR set to: 1
 27540  0165EC  0101               	movlb	1	; () banked
 27541  0165EE  6D14               	negf	___awdiv@quotient& (0+255),b
 27542  0165F0  1F15               	comf	(___awdiv@quotient+1)& (0+255),f,b
 27543  0165F2  B0D8               	btfsc	status,0,c
 27544  0165F4  2B15               	incf	(___awdiv@quotient+1)& (0+255),f,b
 27545  0165F6  D000               	goto	l13327
 27546  0165F8                     l13327:
 27547                           
 27548                           ; BSR set to: 1
 27549  0165F8  C114  F10E         	movff	___awdiv@quotient,?___awdiv
 27550  0165FC  C115  F10F         	movff	___awdiv@quotient+1,?___awdiv+1
 27551  016600  0012               	return	
 27552                           
 27553                           ; BSR set to: 1
 27554                           
 27555                           ; BSR set to: 1
 27556  016602  0012               	return		;funcret
 27557  016604                     __end_of___awdiv:
 27558                           	opt stack 0
 27559                           tblptru	equ	0xFF8
 27560                           tblptrh	equ	0xFF7
 27561                           tblptrl	equ	0xFF6
 27562                           tablat	equ	0xFF5
 27563                           prodh	equ	0xFF4
 27564                           prodl	equ	0xFF3
 27565                           intcon	equ	0xFF2
 27566                           intcon2	equ	0xFF1
 27567                           postinc0	equ	0xFEE
 27568                           plusw0	equ	0xFEB
 27569                           wreg	equ	0xFE8
 27570                           indf1	equ	0xFE7
 27571                           postdec1	equ	0xFE5
 27572                           fsr1h	equ	0xFE2
 27573                           fsr1l	equ	0xFE1
 27574                           indf2	equ	0xFDF
 27575                           postinc2	equ	0xFDE
 27576                           postdec2	equ	0xFDD
 27577                           plusw2	equ	0xFDB
 27578                           fsr2h	equ	0xFDA
 27579                           fsr2l	equ	0xFD9
 27580                           status	equ	0xFD8
 27581                           
 27582 ;; *************** function _I2C_Write_At_Address *****************
 27583 ;; Defined at:
 27584 ;;		line 161 in file "I2C.c"
 27585 ;; Parameters:    Size  Location     Type
 27586 ;;  I2Caddress      1    wreg     unsigned char 
 27587 ;;  Register        1   16[BANK1 ] unsigned char 
 27588 ;;  data            1   17[BANK1 ] unsigned char 
 27589 ;; Auto vars:     Size  Location     Type
 27590 ;;  I2Caddress      1   20[BANK1 ] unsigned char 
 27591 ;; Return value:  Size  Location     Type
 27592 ;;                  1    wreg      unsigned char 
 27593 ;; Registers used:
 27594 ;;		wreg, status,2, status,0, cstack
 27595 ;; Tracked objects:
 27596 ;;		On entry : 0/0
 27597 ;;		On exit  : 0/0
 27598 ;;		Unchanged: 0/0
 27599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27600 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27601 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27602 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27603 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 27604 ;;Total ram usage:        5 bytes
 27605 ;; Hardware stack levels used:    1
 27606 ;; Hardware stack levels required when called:    9
 27607 ;; This function calls:
 27608 ;;		_IdleI2C
 27609 ;;		_WriteI2C
 27610 ;; This function is called by:
 27611 ;;		_RTC_Clock_Enable
 27612 ;;		_RTC_TIME_NONMilitary
 27613 ;;		_SET_RTC_TIME
 27614 ;;		_RTC_Clock_Disable
 27615 ;; This function uses a non-reentrant model
 27616 ;;
 27617                           
 27618                           	psect	text72
 27619  016604                     __ptext72:
 27620                           	opt stack 0
 27621  016604                     _I2C_Write_At_Address:
 27622                           	opt stack 19
 27623                           
 27624                           ; BSR set to: 1
 27625                           ;incstack = 0
 27626                           ;I2C_Write_At_Address@I2Caddress stored from wreg
 27627  016604  0101               	movlb	1	; () banked
 27628  016606  6F14               	movwf	I2C_Write_At_Address@I2Caddress& (0+255),b
 27629                           
 27630                           ; BSR set to: 1
 27631                           ;I2C.c: 163: IdleI2C();
 27632  016608  EC58  F007         	call	_IdleI2C	;wreg free
 27633                           
 27634                           ;I2C.c: 164: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 27635  01660C  80C5               	bsf	4037,0,c	;volatile
 27636  01660E  D000               	goto	l1366
 27637  016610                     l1366:
 27638  016610  A0C5               	btfss	4037,0,c	;volatile
 27639  016612  D002               	goto	l1369
 27640  016614  D7FD               	goto	l1366
 27641                           
 27642                           ;I2C.c: 165: while ( SSPCON2bits.SEN );
 27643  016616  D000               	goto	l1369
 27644  016618                     l1369:
 27645  016618  B0C5               	btfsc	4037,0,c	;volatile
 27646  01661A  D7FE               	goto	l1369
 27647                           
 27648                           ;I2C.c: 166: if ( PIR2bits.BCLIF )
 27649  01661C  A6A1               	btfss	4001,3,c	;volatile
 27650  01661E  D003               	goto	l13003
 27651                           
 27652                           ;I2C.c: 167: {
 27653                           ;I2C.c: 168: return ( -1 );
 27654  016620  0EFF               	movlw	255
 27655  016622  0012               	return	
 27656                           
 27657                           ;I2C.c: 169: }
 27658  016624  D047               	goto	l1374
 27659  016626                     l13003:
 27660                           
 27661                           ;I2C.c: 170: else
 27662                           ;I2C.c: 171: {
 27663                           ;I2C.c: 172: if ( WriteI2C( I2Caddress << 1) & 0xFE )
 27664  016626  0101               	movlb	1	; () banked
 27665  016628  5114               	movf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 27666  01662A  2514               	addwf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 27667  01662C  EC22  F0BD         	call	_WriteI2C
 27668  016630  0101               	movlb	1	; () banked
 27669  016632  6F12               	movwf	??_I2C_Write_At_Address& (0+255),b
 27670  016634  6B13               	clrf	(??_I2C_Write_At_Address+1)& (0+255),b
 27671  016636  BF12               	btfsc	??_I2C_Write_At_Address& (0+255),7,b
 27672  016638  0713               	decf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 27673  01663A  0EFE               	movlw	254
 27674  01663C  0101               	movlb	1	; () banked
 27675  01663E  1712               	andwf	??_I2C_Write_At_Address& (0+255),f,b
 27676  016640  0E00               	movlw	0
 27677  016642  1713               	andwf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 27678  016644  0101               	movlb	1	; () banked
 27679  016646  5112               	movf	??_I2C_Write_At_Address& (0+255),w,b
 27680  016648  0101               	movlb	1	; () banked
 27681  01664A  1113               	iorwf	(??_I2C_Write_At_Address+1)& (0+255),w,b
 27682  01664C  B4D8               	btfsc	status,2,c
 27683  01664E  D006               	goto	l1375
 27684                           
 27685                           ; BSR set to: 1
 27686                           ;I2C.c: 173: {
 27687                           ;I2C.c: 174: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27688  016650  84C5               	bsf	4037,2,c	;volatile
 27689  016652  D000               	goto	l1376
 27690  016654                     l1376:
 27691                           
 27692                           ; BSR set to: 1
 27693  016654  B4C5               	btfsc	4037,2,c	;volatile
 27694  016656  D7FE               	goto	l1376
 27695                           
 27696                           ; BSR set to: 1
 27697                           ;I2C.c: 175: return ( -3 );
 27698                           
 27699                           ; BSR set to: 1
 27700  016658  0EFD               	movlw	253
 27701                           
 27702                           ; BSR set to: 1
 27703  01665A  0012               	return	
 27704  01665C                     l1375:
 27705                           
 27706                           ; BSR set to: 1
 27707                           ;I2C.c: 176: }
 27708                           ;I2C.c: 179: if ( !SSPCON2bits.ACKSTAT )
 27709  01665C  BCC5               	btfsc	4037,6,c	;volatile
 27710  01665E  D024               	goto	l1379
 27711                           
 27712                           ; BSR set to: 1
 27713                           ;I2C.c: 180: {
 27714                           ;I2C.c: 181: if ( WriteI2C( Register ) )
 27715  016660  0101               	movlb	1	; () banked
 27716  016662  5110               	movf	I2C_Write_At_Address@Register& (0+255),w,b
 27717  016664  EC22  F0BD         	call	_WriteI2C
 27718  016668  0900               	iorlw	0
 27719  01666A  B4D8               	btfsc	status,2,c
 27720  01666C  D006               	goto	l1380
 27721                           
 27722                           ;I2C.c: 182: {
 27723                           ;I2C.c: 183: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27724  01666E  84C5               	bsf	4037,2,c	;volatile
 27725  016670  D000               	goto	l1381
 27726  016672                     l1381:
 27727  016672  B4C5               	btfsc	4037,2,c	;volatile
 27728  016674  D7FE               	goto	l1381
 27729                           
 27730                           ;I2C.c: 184: return ( -3 );
 27731  016676  0EFD               	movlw	253
 27732  016678  0012               	return	
 27733  01667A                     l1380:
 27734                           
 27735                           ;I2C.c: 185: }
 27736                           ;I2C.c: 188: if ( !SSPCON2bits.ACKSTAT )
 27737  01667A  BCC5               	btfsc	4037,6,c	;volatile
 27738  01667C  D00E               	goto	l1384
 27739                           
 27740                           ;I2C.c: 189: {
 27741                           ;I2C.c: 190: if ( WriteI2C ( data ) )
 27742  01667E  0101               	movlb	1	; () banked
 27743  016680  5111               	movf	I2C_Write_At_Address@data& (0+255),w,b
 27744  016682  EC22  F0BD         	call	_WriteI2C
 27745  016686  0900               	iorlw	0
 27746  016688  B4D8               	btfsc	status,2,c
 27747  01668A  D014               	goto	l1374
 27748                           
 27749                           ;I2C.c: 191: {
 27750                           ;I2C.c: 192: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27751  01668C  84C5               	bsf	4037,2,c	;volatile
 27752  01668E  D000               	goto	l1386
 27753  016690                     l1386:
 27754  016690  B4C5               	btfsc	4037,2,c	;volatile
 27755  016692  D7FE               	goto	l1386
 27756                           
 27757                           ;I2C.c: 193: return( -4 );
 27758  016694  0EFC               	movlw	252
 27759  016696  0012               	return	
 27760                           
 27761                           ;I2C.c: 194: }
 27762                           ;I2C.c: 195: }
 27763  016698  D00D               	goto	l1374
 27764  01669A                     l1384:
 27765                           
 27766                           ;I2C.c: 196: else
 27767                           ;I2C.c: 197: {
 27768                           ;I2C.c: 198: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27769  01669A  84C5               	bsf	4037,2,c	;volatile
 27770  01669C  D000               	goto	l1390
 27771  01669E                     l1390:
 27772  01669E  B4C5               	btfsc	4037,2,c	;volatile
 27773  0166A0  D7FE               	goto	l1390
 27774                           
 27775                           ;I2C.c: 199: return ( -2 );
 27776  0166A2  0EFE               	movlw	254
 27777  0166A4  0012               	return	
 27778                           
 27779                           ;I2C.c: 200: }
 27780                           ;I2C.c: 201: }
 27781  0166A6  D006               	goto	l1374
 27782  0166A8                     l1379:
 27783                           
 27784                           ; BSR set to: 1
 27785                           ;I2C.c: 202: else
 27786                           ;I2C.c: 203: {
 27787                           ;I2C.c: 204: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27788  0166A8  84C5               	bsf	4037,2,c	;volatile
 27789  0166AA  D000               	goto	l1394
 27790  0166AC                     l1394:
 27791                           
 27792                           ; BSR set to: 1
 27793  0166AC  B4C5               	btfsc	4037,2,c	;volatile
 27794  0166AE  D7FE               	goto	l1394
 27795                           
 27796                           ; BSR set to: 1
 27797                           ;I2C.c: 205: return ( -2 );
 27798                           
 27799                           ; BSR set to: 1
 27800  0166B0  0EFE               	movlw	254
 27801                           
 27802                           ; BSR set to: 1
 27803  0166B2  0012               	return	
 27804  0166B4                     l1374:
 27805                           
 27806                           ;I2C.c: 206: }
 27807                           ;I2C.c: 207: }
 27808                           ;I2C.c: 210: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27809  0166B4  84C5               	bsf	4037,2,c	;volatile
 27810  0166B6  D000               	goto	l1397
 27811  0166B8                     l1397:
 27812  0166B8  A4C5               	btfss	4037,2,c	;volatile
 27813  0166BA  D002               	goto	l1400
 27814  0166BC  D7FD               	goto	l1397
 27815                           
 27816                           ;I2C.c: 211: while ( SSPCON2bits.PEN );
 27817  0166BE  D000               	goto	l1400
 27818  0166C0                     l1400:
 27819  0166C0  B4C5               	btfsc	4037,2,c	;volatile
 27820  0166C2  D7FE               	goto	l1400
 27821                           
 27822                           ;I2C.c: 212: if ( PIR2bits.BCLIF )
 27823  0166C4  A6A1               	btfss	4001,3,c	;volatile
 27824  0166C6  D002               	goto	l13039
 27825                           
 27826                           ;I2C.c: 213: {
 27827                           ;I2C.c: 214: return ( -1 );
 27828  0166C8  0EFF               	movlw	255
 27829  0166CA  0012               	return	
 27830  0166CC                     l13039:
 27831                           
 27832                           ;I2C.c: 215: }
 27833                           ;I2C.c: 216: return ( 0 );
 27834  0166CC  0E00               	movlw	0
 27835  0166CE  0012               	return	
 27836  0166D0  0012               	return		;funcret
 27837  0166D2                     __end_of_I2C_Write_At_Address:
 27838                           	opt stack 0
 27839                           tblptru	equ	0xFF8
 27840                           tblptrh	equ	0xFF7
 27841                           tblptrl	equ	0xFF6
 27842                           tablat	equ	0xFF5
 27843                           prodh	equ	0xFF4
 27844                           prodl	equ	0xFF3
 27845                           intcon	equ	0xFF2
 27846                           intcon2	equ	0xFF1
 27847                           postinc0	equ	0xFEE
 27848                           plusw0	equ	0xFEB
 27849                           wreg	equ	0xFE8
 27850                           indf1	equ	0xFE7
 27851                           postdec1	equ	0xFE5
 27852                           fsr1h	equ	0xFE2
 27853                           fsr1l	equ	0xFE1
 27854                           indf2	equ	0xFDF
 27855                           postinc2	equ	0xFDE
 27856                           postdec2	equ	0xFDD
 27857                           plusw2	equ	0xFDB
 27858                           fsr2h	equ	0xFDA
 27859                           fsr2l	equ	0xFD9
 27860                           status	equ	0xFD8
 27861                           
 27862 ;; *************** function _RemoveSpaces *****************
 27863 ;; Defined at:
 27864 ;;		line 273 in file "MISC.c"
 27865 ;; Parameters:    Size  Location     Type
 27866 ;;  This            2   29[BANK1 ] PTR unsigned char 
 27867 ;;		 -> Rxdata(100), 
 27868 ;; Auto vars:     Size  Location     Type
 27869 ;;  That          100   32[BANK1 ] unsigned char [100]
 27870 ;;  address         2  132[BANK1 ] PTR unsigned char 
 27871 ;;		 -> Rxdata(100), 
 27872 ;;  i               1  134[BANK1 ] unsigned char 
 27873 ;; Return value:  Size  Location     Type
 27874 ;;		None               void
 27875 ;; Registers used:
 27876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27877 ;; Tracked objects:
 27878 ;;		On entry : 0/0
 27879 ;;		On exit  : 0/0
 27880 ;;		Unchanged: 0/0
 27881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27882 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27883 ;;      Locals:         0       0     103       0       0       0       0       0       0       0       0       0       
      +0       0
 27884 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27885 ;;      Totals:         0       0     106       0       0       0       0       0       0       0       0       0       
      +0       0
 27886 ;;Total ram usage:      106 bytes
 27887 ;; Hardware stack levels used:    1
 27888 ;; Hardware stack levels required when called:    9
 27889 ;; This function calls:
 27890 ;;		_BufferCopy
 27891 ;;		_cleanBuffer
 27892 ;; This function is called by:
 27893 ;;		_Command
 27894 ;; This function uses a non-reentrant model
 27895 ;;
 27896                           
 27897                           	psect	text73
 27898  017148                     __ptext73:
 27899                           	opt stack 0
 27900  017148                     _RemoveSpaces:
 27901                           	opt stack 20
 27902                           
 27903                           ;MISC.c: 276: unsigned char i =0;
 27904                           
 27905                           ;incstack = 0
 27906  017148  0E00               	movlw	0
 27907  01714A  0101               	movlb	1	; () banked
 27908  01714C  6F86               	movwf	RemoveSpaces@i& (0+255),b
 27909                           
 27910                           ; BSR set to: 1
 27911                           ;MISC.c: 277: unsigned char* address = This;
 27912  01714E  C11D  F184         	movff	RemoveSpaces@This,RemoveSpaces@address
 27913  017152  C11E  F185         	movff	RemoveSpaces@This+1,RemoveSpaces@address+1
 27914                           
 27915                           ; BSR set to: 1
 27916                           ;MISC.c: 278: unsigned char That[100];
 27917                           ;MISC.c: 279: cleanBuffer(That,100);
 27918  017156  0E20               	movlw	low RemoveSpaces@That
 27919  017158  0101               	movlb	1	; () banked
 27920  01715A  6F0E               	movwf	cleanBuffer@data& (0+255),b
 27921  01715C  0E01               	movlw	high RemoveSpaces@That
 27922  01715E  0101               	movlb	1	; () banked
 27923  017160  6F0F               	movwf	(cleanBuffer@data+1)& (0+255),b
 27924  017162  0E00               	movlw	0
 27925  017164  0101               	movlb	1	; () banked
 27926  017166  6F11               	movwf	(cleanBuffer@count+1)& (0+255),b
 27927  017168  0E64               	movlw	100
 27928  01716A  6F10               	movwf	cleanBuffer@count& (0+255),b
 27929  01716C  EC04  F003         	call	_cleanBuffer	;wreg free
 27930                           
 27931                           ;MISC.c: 280: while(*This != 0)
 27932  017170  D01E               	goto	l13647
 27933  017172                     l13639:
 27934                           
 27935                           ;MISC.c: 281: {
 27936                           ;MISC.c: 282: if(*This != ' ')
 27937  017172  C11D  FFD9         	movff	RemoveSpaces@This,fsr2l
 27938  017176  C11E  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 27939  01717A  0E20               	movlw	32
 27940  01717C  18DE               	xorwf	postinc2,w,c
 27941  01717E  B4D8               	btfsc	status,2,c
 27942  017180  D012               	goto	l13645
 27943                           
 27944                           ;MISC.c: 283: {
 27945                           ;MISC.c: 284: That[i] = *This;
 27946  017182  C11D  FFD9         	movff	RemoveSpaces@This,fsr2l
 27947  017186  C11E  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 27948  01718A  0101               	movlb	1	; () banked
 27949  01718C  5186               	movf	RemoveSpaces@i& (0+255),w,b
 27950  01718E  0D01               	mullw	1
 27951  017190  0E20               	movlw	low RemoveSpaces@That
 27952  017192  24F3               	addwf	prodl,w,c
 27953  017194  6EE1               	movwf	fsr1l,c
 27954  017196  0E01               	movlw	high RemoveSpaces@That
 27955  017198  20F4               	addwfc	prodh,w,c
 27956  01719A  6EE2               	movwf	fsr1h,c
 27957  01719C  CFDF FFE7          	movff	indf2,indf1
 27958                           
 27959                           ; BSR set to: 1
 27960                           ;MISC.c: 285: i++;
 27961  0171A0  0101               	movlb	1	; () banked
 27962  0171A2  2B86               	incf	RemoveSpaces@i& (0+255),f,b
 27963  0171A4  D000               	goto	l13645
 27964  0171A6                     l13645:
 27965                           
 27966                           ;MISC.c: 286: }
 27967                           ;MISC.c: 287: This++;
 27968  0171A6  0101               	movlb	1	; () banked
 27969  0171A8  4B1D               	infsnz	RemoveSpaces@This& (0+255),f,b
 27970  0171AA  2B1E               	incf	(RemoveSpaces@This+1)& (0+255),f,b
 27971  0171AC  D000               	goto	l13647
 27972  0171AE                     l13647:
 27973  0171AE  C11D  FFD9         	movff	RemoveSpaces@This,fsr2l
 27974  0171B2  C11E  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 27975  0171B6  50DF               	movf	indf2,w,c
 27976  0171B8  A4D8               	btfss	status,2,c
 27977  0171BA  D7DB               	goto	l13639
 27978                           
 27979                           ;MISC.c: 288: }
 27980                           ;MISC.c: 289: BufferCopy(That,address, 100, 0);
 27981  0171BC  0E20               	movlw	low RemoveSpaces@That
 27982  0171BE  0101               	movlb	1	; () banked
 27983  0171C0  6F16               	movwf	BufferCopy@from& (0+255),b
 27984  0171C2  0E01               	movlw	high RemoveSpaces@That
 27985  0171C4  0101               	movlb	1	; () banked
 27986  0171C6  6F17               	movwf	(BufferCopy@from+1)& (0+255),b
 27987  0171C8  C184  F118         	movff	RemoveSpaces@address,BufferCopy@to
 27988  0171CC  C185  F119         	movff	RemoveSpaces@address+1,BufferCopy@to+1
 27989  0171D0  0E64               	movlw	100
 27990  0171D2  0101               	movlb	1	; () banked
 27991  0171D4  6F1A               	movwf	BufferCopy@count& (0+255),b
 27992  0171D6  0E00               	movlw	0
 27993  0171D8  0101               	movlb	1	; () banked
 27994  0171DA  6F1B               	movwf	BufferCopy@shift& (0+255),b
 27995  0171DC  ECF3  F0B4         	call	_BufferCopy	;wreg free
 27996  0171E0  0012               	return		;funcret
 27997  0171E2                     __end_of_RemoveSpaces:
 27998                           	opt stack 0
 27999                           tblptru	equ	0xFF8
 28000                           tblptrh	equ	0xFF7
 28001                           tblptrl	equ	0xFF6
 28002                           tablat	equ	0xFF5
 28003                           prodh	equ	0xFF4
 28004                           prodl	equ	0xFF3
 28005                           intcon	equ	0xFF2
 28006                           intcon2	equ	0xFF1
 28007                           postinc0	equ	0xFEE
 28008                           plusw0	equ	0xFEB
 28009                           wreg	equ	0xFE8
 28010                           indf1	equ	0xFE7
 28011                           postdec1	equ	0xFE5
 28012                           fsr1h	equ	0xFE2
 28013                           fsr1l	equ	0xFE1
 28014                           indf2	equ	0xFDF
 28015                           postinc2	equ	0xFDE
 28016                           postdec2	equ	0xFDD
 28017                           plusw2	equ	0xFDB
 28018                           fsr2h	equ	0xFDA
 28019                           fsr2l	equ	0xFD9
 28020                           status	equ	0xFD8
 28021                           
 28022 ;; *************** function _READ_RTC_TIME *****************
 28023 ;; Defined at:
 28024 ;;		line 139 in file "RTC.c"
 28025 ;; Parameters:    Size  Location     Type
 28026 ;;		None
 28027 ;; Auto vars:     Size  Location     Type
 28028 ;;  temp            7   24[BANK1 ] unsigned char [7]
 28029 ;;  Error           1   31[BANK1 ] char 
 28030 ;; Return value:  Size  Location     Type
 28031 ;;                  1    wreg      unsigned char 
 28032 ;; Registers used:
 28033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28034 ;; Tracked objects:
 28035 ;;		On entry : 0/0
 28036 ;;		On exit  : 0/0
 28037 ;;		Unchanged: 0/0
 28038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28040 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 28041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28042 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 28043 ;;Total ram usage:        8 bytes
 28044 ;; Hardware stack levels used:    1
 28045 ;; Hardware stack levels required when called:   10
 28046 ;; This function calls:
 28047 ;;		_I2C_Read_Sequential
 28048 ;;		_ResetI2C
 28049 ;; This function is called by:
 28050 ;;		_Command
 28051 ;; This function uses a non-reentrant model
 28052 ;;
 28053                           
 28054                           	psect	text74
 28055  016290                     __ptext74:
 28056                           	opt stack 0
 28057  016290                     _READ_RTC_TIME:
 28058                           	opt stack 19
 28059                           
 28060                           ;RTC.c: 141: signed char Error =0;
 28061                           
 28062                           ;incstack = 0
 28063  016290  0E00               	movlw	0
 28064  016292  0101               	movlb	1	; () banked
 28065  016294  6F1F               	movwf	READ_RTC_TIME@Error& (0+255),b
 28066                           
 28067                           ; BSR set to: 1
 28068                           ;RTC.c: 142: unsigned char temp[7];
 28069                           ;RTC.c: 144: Error = I2C_Read_Sequential( 0b1101000, 0x00, temp, 7 );
 28070  016296  0E00               	movlw	0
 28071  016298  0101               	movlb	1	; () banked
 28072  01629A  6F11               	movwf	I2C_Read_Sequential@Register& (0+255),b
 28073  01629C  0E18               	movlw	low READ_RTC_TIME@temp
 28074  01629E  0101               	movlb	1	; () banked
 28075  0162A0  6F12               	movwf	I2C_Read_Sequential@rdptr& (0+255),b
 28076  0162A2  0E01               	movlw	high READ_RTC_TIME@temp
 28077  0162A4  0101               	movlb	1	; () banked
 28078  0162A6  6F13               	movwf	(I2C_Read_Sequential@rdptr+1)& (0+255),b
 28079  0162A8  0E07               	movlw	7
 28080  0162AA  0101               	movlb	1	; () banked
 28081  0162AC  6F14               	movwf	I2C_Read_Sequential@length& (0+255),b
 28082  0162AE  0E68               	movlw	104
 28083  0162B0  ECE3  F0AD         	call	_I2C_Read_Sequential
 28084  0162B4  0101               	movlb	1	; () banked
 28085  0162B6  6F1F               	movwf	READ_RTC_TIME@Error& (0+255),b
 28086                           
 28087                           ; BSR set to: 1
 28088                           ;RTC.c: 146: if(Error == 0 )
 28089  0162B8  0101               	movlb	1	; () banked
 28090  0162BA  511F               	movf	READ_RTC_TIME@Error& (0+255),w,b
 28091  0162BC  0101               	movlb	1	; () banked
 28092  0162BE  A4D8               	btfss	status,2,c
 28093  0162C0  D055               	goto	l13933
 28094                           
 28095                           ; BSR set to: 1
 28096                           ;RTC.c: 147: {
 28097                           ;RTC.c: 148: NowTime.Seconds = (temp[0] & 0x0F) + (((temp[0] & 0x70)>> 4) * 10);
 28098  0162C2  0101               	movlb	1	; () banked
 28099  0162C4  3918               	swapf	READ_RTC_TIME@temp& (0+255),w,b
 28100  0162C6  0B0F               	andlw	15
 28101  0162C8  0B07               	andlw	7
 28102  0162CA  0D0A               	mullw	10
 28103  0162CC  0101               	movlb	1	; () banked
 28104  0162CE  5118               	movf	READ_RTC_TIME@temp& (0+255),w,b
 28105  0162D0  0B0F               	andlw	15
 28106  0162D2  24F3               	addwf	prodl,w,c
 28107  0162D4  0101               	movlb	1	; () banked
 28108  0162D6  6F93               	movwf	_NowTime& (0+255),b
 28109                           
 28110                           ;RTC.c: 149: NowTime.Minutes = (temp[1] & 0x0F) + (((temp[1] & 0x70) >> 4) * 10);
 28111  0162D8  0101               	movlb	1	; () banked
 28112  0162DA  3919               	swapf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 28113  0162DC  0B0F               	andlw	15
 28114  0162DE  0B07               	andlw	7
 28115  0162E0  0D0A               	mullw	10
 28116  0162E2  0101               	movlb	1	; () banked
 28117  0162E4  5119               	movf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 28118  0162E6  0B0F               	andlw	15
 28119  0162E8  24F3               	addwf	prodl,w,c
 28120  0162EA  0101               	movlb	1	; () banked
 28121  0162EC  6F94               	movwf	(_NowTime+1)& (0+255),b
 28122                           
 28123                           ;RTC.c: 150: NowTime.Hours = (temp[2] & 0x0F) + (((temp[2] & 0x10) >> 4) * 10);
 28124  0162EE  0101               	movlb	1	; () banked
 28125  0162F0  391A               	swapf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 28126  0162F2  0B0F               	andlw	15
 28127  0162F4  0B01               	andlw	1
 28128  0162F6  0D0A               	mullw	10
 28129  0162F8  0101               	movlb	1	; () banked
 28130  0162FA  511A               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 28131  0162FC  0B0F               	andlw	15
 28132  0162FE  24F3               	addwf	prodl,w,c
 28133  016300  0101               	movlb	1	; () banked
 28134  016302  6F95               	movwf	(_NowTime+2)& (0+255),b
 28135                           
 28136                           ; BSR set to: 1
 28137                           ;RTC.c: 151: NowTime.HoursAM_PM = temp[2] & 0x20;
 28138  016304  0101               	movlb	1	; () banked
 28139  016306  511A               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 28140  016308  0B20               	andlw	32
 28141  01630A  0101               	movlb	1	; () banked
 28142  01630C  6F97               	movwf	(_NowTime+4)& (0+255),b
 28143                           
 28144                           ; BSR set to: 1
 28145                           ;RTC.c: 152: NowTime.HoursMilitary = NowTime.Hours + 12 * NowTime.HoursAM_PM;
 28146  01630E  0101               	movlb	1	; () banked
 28147  016310  5197               	movf	(_NowTime+4)& (0+255),w,b
 28148  016312  0D0C               	mullw	12
 28149  016314  50F3               	movf	prodl,w,c
 28150  016316  0101               	movlb	1	; () banked
 28151  016318  2595               	addwf	(_NowTime+2)& (0+255),w,b
 28152  01631A  0101               	movlb	1	; () banked
 28153  01631C  6F96               	movwf	(_NowTime+3)& (0+255),b
 28154                           
 28155                           ;RTC.c: 153: NowTime.Day = temp[3] & 0x07;
 28156  01631E  0101               	movlb	1	; () banked
 28157  016320  511B               	movf	(READ_RTC_TIME@temp+3)& (0+255),w,b
 28158  016322  0B07               	andlw	7
 28159  016324  0101               	movlb	1	; () banked
 28160  016326  6F98               	movwf	(_NowTime+5)& (0+255),b
 28161                           
 28162                           ; BSR set to: 1
 28163                           ;RTC.c: 154: NowTime.Date = (temp[4] & 0x0F) + (((temp[4] & 0x30)>> 4) * 10);
 28164  016328  0101               	movlb	1	; () banked
 28165  01632A  391C               	swapf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 28166  01632C  0B0F               	andlw	15
 28167  01632E  0B03               	andlw	3
 28168  016330  0D0A               	mullw	10
 28169  016332  0101               	movlb	1	; () banked
 28170  016334  511C               	movf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 28171  016336  0B0F               	andlw	15
 28172  016338  24F3               	addwf	prodl,w,c
 28173  01633A  0101               	movlb	1	; () banked
 28174  01633C  6F99               	movwf	(_NowTime+6)& (0+255),b
 28175                           
 28176                           ; BSR set to: 1
 28177                           ;RTC.c: 155: NowTime.Month = (temp[5] & 0x0F) + (((temp[5] & 0x10) >> 4) * 10);
 28178  01633E  0101               	movlb	1	; () banked
 28179  016340  391D               	swapf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 28180  016342  0B0F               	andlw	15
 28181  016344  0B01               	andlw	1
 28182  016346  0D0A               	mullw	10
 28183  016348  0101               	movlb	1	; () banked
 28184  01634A  511D               	movf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 28185  01634C  0B0F               	andlw	15
 28186  01634E  24F3               	addwf	prodl,w,c
 28187  016350  0101               	movlb	1	; () banked
 28188  016352  6F9A               	movwf	(_NowTime+7)& (0+255),b
 28189                           
 28190                           ; BSR set to: 1
 28191                           ;RTC.c: 156: NowTime.Year = (temp[6] & 0x0F) + (((temp[6] & 0xF0) >> 4) * 10);
 28192  016354  0101               	movlb	1	; () banked
 28193  016356  391E               	swapf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 28194  016358  0B0F               	andlw	15
 28195  01635A  0B0F               	andlw	15
 28196  01635C  0D0A               	mullw	10
 28197  01635E  0101               	movlb	1	; () banked
 28198  016360  511E               	movf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 28199  016362  0B0F               	andlw	15
 28200  016364  24F3               	addwf	prodl,w,c
 28201  016366  0101               	movlb	1	; () banked
 28202  016368  6F9B               	movwf	(_NowTime+8)& (0+255),b
 28203                           
 28204                           ;RTC.c: 157: }
 28205  01636A  D003               	goto	l13935
 28206  01636C                     l13933:
 28207                           
 28208                           ; BSR set to: 1
 28209                           ;RTC.c: 158: else
 28210                           ;RTC.c: 159: {
 28211                           ;RTC.c: 160: ResetI2C();
 28212  01636C  ECA1  F006         	call	_ResetI2C	;wreg free
 28213  016370  D000               	goto	l13935
 28214  016372                     l13935:
 28215                           
 28216                           ;RTC.c: 161: }
 28217                           ;RTC.c: 162: return Error;
 28218  016372  0101               	movlb	1	; () banked
 28219  016374  511F               	movf	READ_RTC_TIME@Error& (0+255),w,b
 28220  016376  0012               	return	
 28221                           
 28222                           ; BSR set to: 1
 28223                           
 28224                           ; BSR set to: 1
 28225  016378  0012               	return		;funcret
 28226  01637A                     __end_of_READ_RTC_TIME:
 28227                           	opt stack 0
 28228                           tblptru	equ	0xFF8
 28229                           tblptrh	equ	0xFF7
 28230                           tblptrl	equ	0xFF6
 28231                           tablat	equ	0xFF5
 28232                           prodh	equ	0xFF4
 28233                           prodl	equ	0xFF3
 28234                           intcon	equ	0xFF2
 28235                           intcon2	equ	0xFF1
 28236                           postinc0	equ	0xFEE
 28237                           plusw0	equ	0xFEB
 28238                           wreg	equ	0xFE8
 28239                           indf1	equ	0xFE7
 28240                           postdec1	equ	0xFE5
 28241                           fsr1h	equ	0xFE2
 28242                           fsr1l	equ	0xFE1
 28243                           indf2	equ	0xFDF
 28244                           postinc2	equ	0xFDE
 28245                           postdec2	equ	0xFDD
 28246                           plusw2	equ	0xFDB
 28247                           fsr2h	equ	0xFDA
 28248                           fsr2l	equ	0xFD9
 28249                           status	equ	0xFD8
 28250                           
 28251 ;; *************** function _ResetI2C *****************
 28252 ;; Defined at:
 28253 ;;		line 93 in file "I2C.c"
 28254 ;; Parameters:    Size  Location     Type
 28255 ;;		None
 28256 ;; Auto vars:     Size  Location     Type
 28257 ;;		None
 28258 ;; Return value:  Size  Location     Type
 28259 ;;		None               void
 28260 ;; Registers used:
 28261 ;;		wreg, status,2, status,0, cstack
 28262 ;; Tracked objects:
 28263 ;;		On entry : 0/0
 28264 ;;		On exit  : 0/0
 28265 ;;		Unchanged: 0/0
 28266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28271 ;;Total ram usage:        0 bytes
 28272 ;; Hardware stack levels used:    1
 28273 ;; Hardware stack levels required when called:    9
 28274 ;; This function calls:
 28275 ;;		_Init_I2C_Master
 28276 ;;		_delayUS
 28277 ;; This function is called by:
 28278 ;;		_RTC_Clock_Enable
 28279 ;;		_RTC_TIME_NONMilitary
 28280 ;;		_READ_RTC_TIME
 28281 ;;		_RTC_Clock_Disable
 28282 ;;		_READ_RTC_SECONDS
 28283 ;; This function uses a non-reentrant model
 28284 ;;
 28285                           
 28286                           	psect	text75
 28287  000D42                     __ptext75:
 28288                           	opt stack 0
 28289  000D42                     _ResetI2C:
 28290                           	opt stack 19
 28291                           
 28292                           ;I2C.c: 95: SSPCON1 &= 0xDF;
 28293                           
 28294                           ; BSR set to: 1
 28295                           ;incstack = 0
 28296  000D42  9AC6               	bcf	4038,5,c	;volatile
 28297                           
 28298                           ;I2C.c: 96: TRISCbits.TRISC3 = 0;
 28299  000D44  9694               	bcf	3988,3,c	;volatile
 28300                           
 28301                           ;I2C.c: 97: LATC &= ~0b00001000;
 28302  000D46  968B               	bcf	3979,3,c	;volatile
 28303                           
 28304                           ;I2C.c: 98: delayUS(200);
 28305  000D48  0EC8               	movlw	200
 28306  000D4A  0101               	movlb	1	; () banked
 28307  000D4C  6F0E               	movwf	delayUS@US& (0+255),b
 28308  000D4E  0E00               	movlw	0
 28309  000D50  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 28310  000D52  0E00               	movlw	0
 28311  000D54  6F10               	movwf	(delayUS@US+2)& (0+255),b
 28312  000D56  0E00               	movlw	0
 28313  000D58  6F11               	movwf	(delayUS@US+3)& (0+255),b
 28314  000D5A  EC58  F0BD         	call	_delayUS	;wreg free
 28315                           
 28316                           ;I2C.c: 99: TRISCbits.TRISC3 = 1;
 28317  000D5E  8694               	bsf	3988,3,c	;volatile
 28318                           
 28319                           ;I2C.c: 100: Init_I2C_Master();
 28320  000D60  EC81  F003         	call	_Init_I2C_Master	;wreg free
 28321  000D64  0012               	return		;funcret
 28322  000D66                     __end_of_ResetI2C:
 28323                           	opt stack 0
 28324                           tblptru	equ	0xFF8
 28325                           tblptrh	equ	0xFF7
 28326                           tblptrl	equ	0xFF6
 28327                           tablat	equ	0xFF5
 28328                           prodh	equ	0xFF4
 28329                           prodl	equ	0xFF3
 28330                           intcon	equ	0xFF2
 28331                           intcon2	equ	0xFF1
 28332                           postinc0	equ	0xFEE
 28333                           plusw0	equ	0xFEB
 28334                           wreg	equ	0xFE8
 28335                           indf1	equ	0xFE7
 28336                           postdec1	equ	0xFE5
 28337                           fsr1h	equ	0xFE2
 28338                           fsr1l	equ	0xFE1
 28339                           indf2	equ	0xFDF
 28340                           postinc2	equ	0xFDE
 28341                           postdec2	equ	0xFDD
 28342                           plusw2	equ	0xFDB
 28343                           fsr2h	equ	0xFDA
 28344                           fsr2l	equ	0xFD9
 28345                           status	equ	0xFD8
 28346                           
 28347 ;; *************** function _Init_I2C_Master *****************
 28348 ;; Defined at:
 28349 ;;		line 55 in file "I2C.c"
 28350 ;; Parameters:    Size  Location     Type
 28351 ;;		None
 28352 ;; Auto vars:     Size  Location     Type
 28353 ;;  baud            2   16[BANK1 ] unsigned int 
 28354 ;; Return value:  Size  Location     Type
 28355 ;;		None               void
 28356 ;; Registers used:
 28357 ;;		wreg, status,2, status,0, cstack
 28358 ;; Tracked objects:
 28359 ;;		On entry : 0/0
 28360 ;;		On exit  : 0/0
 28361 ;;		Unchanged: 0/0
 28362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28364 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28366 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28367 ;;Total ram usage:        2 bytes
 28368 ;; Hardware stack levels used:    1
 28369 ;; Hardware stack levels required when called:    8
 28370 ;; This function calls:
 28371 ;;		_OpenI2C
 28372 ;; This function is called by:
 28373 ;;		_main
 28374 ;;		_ResetI2C
 28375 ;; This function uses a non-reentrant model
 28376 ;;
 28377                           
 28378                           	psect	text76
 28379  000702                     __ptext76:
 28380                           	opt stack 0
 28381  000702                     _Init_I2C_Master:
 28382                           	opt stack 19
 28383                           
 28384                           ;I2C.c: 57: unsigned int baud = 0;
 28385                           
 28386                           ;incstack = 0
 28387  000702  0E00               	movlw	0
 28388  000704  0101               	movlb	1	; () banked
 28389  000706  6F11               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 28390  000708  0E00               	movlw	0
 28391  00070A  6F10               	movwf	Init_I2C_Master@baud& (0+255),b
 28392                           
 28393                           ;I2C.c: 60: baud = (unsigned char)(40960000L/4 /((4* (long)5 * 1000L) - 1));
 28394  00070C  0E00               	movlw	0
 28395  00070E  0101               	movlb	1	; () banked
 28396  000710  6F11               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 28397  000712  0E00               	movlw	0
 28398  000714  6F10               	movwf	Init_I2C_Master@baud& (0+255),b
 28399                           
 28400                           ; BSR set to: 1
 28401                           ;I2C.c: 61: if(baud > 127 || baud == 0)
 28402  000716  0101               	movlb	1	; () banked
 28403  000718  5111               	movf	(Init_I2C_Master@baud+1)& (0+255),w,b
 28404  00071A  E10B               	bnz	l12041
 28405  00071C  0E80               	movlw	128
 28406  00071E  0101               	movlb	1	; () banked
 28407  000720  5D10               	subwf	Init_I2C_Master@baud& (0+255),w,b
 28408  000722  B0D8               	btfsc	status,0,c
 28409  000724  D006               	goto	l12041
 28410                           
 28411                           ; BSR set to: 1
 28412  000726  0101               	movlb	1	; () banked
 28413  000728  5110               	movf	Init_I2C_Master@baud& (0+255),w,b
 28414  00072A  0101               	movlb	1	; () banked
 28415  00072C  1111               	iorwf	(Init_I2C_Master@baud+1)& (0+255),w,b
 28416  00072E  A4D8               	btfss	status,2,c
 28417  000730  D006               	goto	l12043
 28418  000732                     l12041:
 28419                           
 28420                           ; BSR set to: 1
 28421                           ;I2C.c: 62: {
 28422                           ;I2C.c: 63: baud = 127;
 28423  000732  0E00               	movlw	0
 28424  000734  0101               	movlb	1	; () banked
 28425  000736  6F11               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 28426  000738  0E7F               	movlw	127
 28427  00073A  6F10               	movwf	Init_I2C_Master@baud& (0+255),b
 28428  00073C  D000               	goto	l12043
 28429  00073E                     l12043:
 28430                           
 28431                           ; BSR set to: 1
 28432                           ;I2C.c: 64: }
 28433                           ;I2C.c: 65: SSPADD = baud;
 28434  00073E  C110  FFC8         	movff	Init_I2C_Master@baud,4040	;volatile
 28435                           
 28436                           ; BSR set to: 1
 28437                           ;I2C.c: 66: OpenI2C(0b00001000, 0b10000000);
 28438  000742  0E80               	movlw	128
 28439  000744  0101               	movlb	1	; () banked
 28440  000746  6F0E               	movwf	OpenI2C@slew& (0+255),b
 28441  000748  0E08               	movlw	8
 28442  00074A  ECB3  F006         	call	_OpenI2C
 28443  00074E  0012               	return		;funcret
 28444  000750                     __end_of_Init_I2C_Master:
 28445                           	opt stack 0
 28446                           tblptru	equ	0xFF8
 28447                           tblptrh	equ	0xFF7
 28448                           tblptrl	equ	0xFF6
 28449                           tablat	equ	0xFF5
 28450                           prodh	equ	0xFF4
 28451                           prodl	equ	0xFF3
 28452                           intcon	equ	0xFF2
 28453                           intcon2	equ	0xFF1
 28454                           postinc0	equ	0xFEE
 28455                           plusw0	equ	0xFEB
 28456                           wreg	equ	0xFE8
 28457                           indf1	equ	0xFE7
 28458                           postdec1	equ	0xFE5
 28459                           fsr1h	equ	0xFE2
 28460                           fsr1l	equ	0xFE1
 28461                           indf2	equ	0xFDF
 28462                           postinc2	equ	0xFDE
 28463                           postdec2	equ	0xFDD
 28464                           plusw2	equ	0xFDB
 28465                           fsr2h	equ	0xFDA
 28466                           fsr2l	equ	0xFD9
 28467                           status	equ	0xFD8
 28468                           
 28469 ;; *************** function _OpenI2C *****************
 28470 ;; Defined at:
 28471 ;;		line 74 in file "I2C.c"
 28472 ;; Parameters:    Size  Location     Type
 28473 ;;  sync_mode       1    wreg     unsigned char 
 28474 ;;  slew            1   14[BANK1 ] unsigned char 
 28475 ;; Auto vars:     Size  Location     Type
 28476 ;;  sync_mode       1   15[BANK1 ] unsigned char 
 28477 ;; Return value:  Size  Location     Type
 28478 ;;		None               void
 28479 ;; Registers used:
 28480 ;;		wreg, status,2, status,0
 28481 ;; Tracked objects:
 28482 ;;		On entry : 0/0
 28483 ;;		On exit  : 0/0
 28484 ;;		Unchanged: 0/0
 28485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28486 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28487 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28489 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28490 ;;Total ram usage:        2 bytes
 28491 ;; Hardware stack levels used:    1
 28492 ;; Hardware stack levels required when called:    7
 28493 ;; This function calls:
 28494 ;;		Nothing
 28495 ;; This function is called by:
 28496 ;;		_Init_I2C_Master
 28497 ;; This function uses a non-reentrant model
 28498 ;;
 28499                           
 28500                           	psect	text77
 28501  000D66                     __ptext77:
 28502                           	opt stack 0
 28503  000D66                     _OpenI2C:
 28504                           	opt stack 19
 28505                           
 28506                           ;incstack = 0
 28507                           ;OpenI2C@sync_mode stored from wreg
 28508  000D66  0101               	movlb	1	; () banked
 28509  000D68  6F0F               	movwf	OpenI2C@sync_mode& (0+255),b
 28510                           
 28511                           ; BSR set to: 1
 28512                           ;I2C.c: 76: SSPSTAT &= 0x3F;
 28513  000D6A  0E3F               	movlw	63
 28514  000D6C  16C7               	andwf	4039,f,c	;volatile
 28515                           
 28516                           ; BSR set to: 1
 28517                           ;I2C.c: 77: SSPCON1 = 0x00;
 28518  000D6E  0E00               	movlw	0
 28519  000D70  6EC6               	movwf	4038,c	;volatile
 28520                           
 28521                           ; BSR set to: 1
 28522                           ;I2C.c: 78: SSPCON2 = 0x00;
 28523  000D72  0E00               	movlw	0
 28524  000D74  6EC5               	movwf	4037,c	;volatile
 28525                           
 28526                           ;I2C.c: 79: SSPCON1 |= sync_mode;
 28527  000D76  0101               	movlb	1	; () banked
 28528  000D78  510F               	movf	OpenI2C@sync_mode& (0+255),w,b
 28529  000D7A  12C6               	iorwf	4038,f,c	;volatile
 28530                           
 28531                           ;I2C.c: 80: SSPSTAT |= slew;
 28532  000D7C  0101               	movlb	1	; () banked
 28533  000D7E  510E               	movf	OpenI2C@slew& (0+255),w,b
 28534  000D80  12C7               	iorwf	4039,f,c	;volatile
 28535                           
 28536                           ; BSR set to: 1
 28537                           ;I2C.c: 82: TRISCbits.TRISC3 = 1;
 28538  000D82  8694               	bsf	3988,3,c	;volatile
 28539                           
 28540                           ; BSR set to: 1
 28541                           ;I2C.c: 83: TRISCbits.TRISC4 = 1;
 28542  000D84  8894               	bsf	3988,4,c	;volatile
 28543                           
 28544                           ; BSR set to: 1
 28545                           ;I2C.c: 84: SSPCON1 |= 0b00100000;
 28546  000D86  8AC6               	bsf	4038,5,c	;volatile
 28547                           
 28548                           ; BSR set to: 1
 28549  000D88  0012               	return		;funcret
 28550  000D8A                     __end_of_OpenI2C:
 28551                           	opt stack 0
 28552                           tblptru	equ	0xFF8
 28553                           tblptrh	equ	0xFF7
 28554                           tblptrl	equ	0xFF6
 28555                           tablat	equ	0xFF5
 28556                           prodh	equ	0xFF4
 28557                           prodl	equ	0xFF3
 28558                           intcon	equ	0xFF2
 28559                           intcon2	equ	0xFF1
 28560                           postinc0	equ	0xFEE
 28561                           plusw0	equ	0xFEB
 28562                           wreg	equ	0xFE8
 28563                           indf1	equ	0xFE7
 28564                           postdec1	equ	0xFE5
 28565                           fsr1h	equ	0xFE2
 28566                           fsr1l	equ	0xFE1
 28567                           indf2	equ	0xFDF
 28568                           postinc2	equ	0xFDE
 28569                           postdec2	equ	0xFDD
 28570                           plusw2	equ	0xFDB
 28571                           fsr2h	equ	0xFDA
 28572                           fsr2l	equ	0xFD9
 28573                           status	equ	0xFD8
 28574                           
 28575 ;; *************** function _I2C_Read_Sequential *****************
 28576 ;; Defined at:
 28577 ;;		line 307 in file "I2C.c"
 28578 ;; Parameters:    Size  Location     Type
 28579 ;;  I2Caddress      1    wreg     unsigned char 
 28580 ;;  Register        1   17[BANK1 ] unsigned char 
 28581 ;;  rdptr           2   18[BANK1 ] PTR unsigned char 
 28582 ;;		 -> READ_RTC_TIME@temp(7), 
 28583 ;;  length          1   20[BANK1 ] unsigned char 
 28584 ;; Auto vars:     Size  Location     Type
 28585 ;;  I2Caddress      1   21[BANK1 ] unsigned char 
 28586 ;; Return value:  Size  Location     Type
 28587 ;;                  1    wreg      unsigned char 
 28588 ;; Registers used:
 28589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28590 ;; Tracked objects:
 28591 ;;		On entry : 0/0
 28592 ;;		On exit  : 0/0
 28593 ;;		Unchanged: 0/0
 28594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28595 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 28596 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28598 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 28599 ;;Total ram usage:        5 bytes
 28600 ;; Hardware stack levels used:    1
 28601 ;; Hardware stack levels required when called:    9
 28602 ;; This function calls:
 28603 ;;		_IdleI2C
 28604 ;;		_Multiple_I2C_Read
 28605 ;;		_WriteI2C
 28606 ;; This function is called by:
 28607 ;;		_READ_RTC_TIME
 28608 ;; This function uses a non-reentrant model
 28609 ;;
 28610                           
 28611                           	psect	text78
 28612  015BC6                     __ptext78:
 28613                           	opt stack 0
 28614  015BC6                     _I2C_Read_Sequential:
 28615                           	opt stack 19
 28616                           
 28617                           ; BSR set to: 1
 28618                           ;incstack = 0
 28619                           ;I2C_Read_Sequential@I2Caddress stored from wreg
 28620  015BC6  0101               	movlb	1	; () banked
 28621  015BC8  6F15               	movwf	I2C_Read_Sequential@I2Caddress& (0+255),b
 28622                           
 28623                           ; BSR set to: 1
 28624                           ;I2C.c: 309: IdleI2C();
 28625  015BCA  EC58  F007         	call	_IdleI2C	;wreg free
 28626                           
 28627                           ;I2C.c: 310: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 28628  015BCE  80C5               	bsf	4037,0,c	;volatile
 28629  015BD0  D000               	goto	l1467
 28630  015BD2                     l1467:
 28631  015BD2  A0C5               	btfss	4037,0,c	;volatile
 28632  015BD4  D002               	goto	l1470
 28633  015BD6  D7FD               	goto	l1467
 28634                           
 28635                           ;I2C.c: 311: while ( SSPCON2bits.SEN );
 28636  015BD8  D000               	goto	l1470
 28637  015BDA                     l1470:
 28638  015BDA  B0C5               	btfsc	4037,0,c	;volatile
 28639  015BDC  D7FE               	goto	l1470
 28640                           
 28641                           ;I2C.c: 312: if ( PIR2bits.BCLIF )
 28642  015BDE  A6A1               	btfss	4001,3,c	;volatile
 28643  015BE0  D003               	goto	l13063
 28644  015BE2                     l13057:
 28645                           
 28646                           ;I2C.c: 313: {
 28647                           ;I2C.c: 314: return ( -1 );
 28648  015BE2  0EFF               	movlw	255
 28649  015BE4  0012               	return	
 28650                           
 28651                           ;I2C.c: 315: }
 28652  015BE6  D070               	goto	l13111
 28653  015BE8                     l13063:
 28654                           
 28655                           ;I2C.c: 316: else
 28656                           ;I2C.c: 317: {
 28657                           ;I2C.c: 318: if ( WriteI2C( (I2Caddress << 1) & 0xFE ) )
 28658  015BE8  0101               	movlb	1	; () banked
 28659  015BEA  5115               	movf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 28660  015BEC  2515               	addwf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 28661  015BEE  0BFE               	andlw	254
 28662  015BF0  EC22  F0BD         	call	_WriteI2C
 28663  015BF4  0900               	iorlw	0
 28664  015BF6  B4D8               	btfsc	status,2,c
 28665  015BF8  D006               	goto	l1476
 28666                           
 28667                           ;I2C.c: 319: {
 28668                           ;I2C.c: 320: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28669  015BFA  84C5               	bsf	4037,2,c	;volatile
 28670  015BFC  D000               	goto	l1477
 28671  015BFE                     l1477:
 28672  015BFE  B4C5               	btfsc	4037,2,c	;volatile
 28673  015C00  D7FE               	goto	l1477
 28674                           
 28675                           ;I2C.c: 321: return ( -3 );
 28676  015C02  0EFD               	movlw	253
 28677  015C04  0012               	return	
 28678  015C06                     l1476:
 28679                           
 28680                           ;I2C.c: 322: }
 28681                           ;I2C.c: 325: if ( !SSPCON2bits.ACKSTAT )
 28682  015C06  BCC5               	btfsc	4037,6,c	;volatile
 28683  015C08  D058               	goto	l1480
 28684                           
 28685                           ;I2C.c: 326: {
 28686                           ;I2C.c: 327: if ( WriteI2C( Register ) )
 28687  015C0A  0101               	movlb	1	; () banked
 28688  015C0C  5111               	movf	I2C_Read_Sequential@Register& (0+255),w,b
 28689  015C0E  EC22  F0BD         	call	_WriteI2C
 28690  015C12  0900               	iorlw	0
 28691  015C14  B4D8               	btfsc	status,2,c
 28692  015C16  D006               	goto	l1481
 28693                           
 28694                           ;I2C.c: 328: {
 28695                           ;I2C.c: 329: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28696  015C18  84C5               	bsf	4037,2,c	;volatile
 28697  015C1A  D000               	goto	l1482
 28698  015C1C                     l1482:
 28699  015C1C  B4C5               	btfsc	4037,2,c	;volatile
 28700  015C1E  D7FE               	goto	l1482
 28701                           
 28702                           ;I2C.c: 330: return ( -3 );
 28703  015C20  0EFD               	movlw	253
 28704  015C22  0012               	return	
 28705  015C24                     l1481:
 28706                           
 28707                           ;I2C.c: 331: }
 28708                           ;I2C.c: 334: if ( !SSPCON2bits.ACKSTAT )
 28709  015C24  BCC5               	btfsc	4037,6,c	;volatile
 28710  015C26  D042               	goto	l1485
 28711                           
 28712                           ;I2C.c: 335: {
 28713                           ;I2C.c: 336: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
 28714  015C28  82C5               	bsf	4037,1,c	;volatile
 28715  015C2A  D000               	goto	l1486
 28716  015C2C                     l1486:
 28717  015C2C  A2C5               	btfss	4037,1,c	;volatile
 28718  015C2E  D002               	goto	l1489
 28719  015C30  D7FD               	goto	l1486
 28720                           
 28721                           ;I2C.c: 337: while ( SSPCON2bits.RSEN );
 28722  015C32  D000               	goto	l1489
 28723  015C34                     l1489:
 28724  015C34  B2C5               	btfsc	4037,1,c	;volatile
 28725  015C36  D7FE               	goto	l1489
 28726                           
 28727                           ;I2C.c: 338: if ( WriteI2C( (I2Caddress << 1) +1 ) )
 28728  015C38  80D8               	bsf	status,0,c
 28729  015C3A  0101               	movlb	1	; () banked
 28730  015C3C  3515               	rlcf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 28731  015C3E  EC22  F0BD         	call	_WriteI2C
 28732  015C42  0900               	iorlw	0
 28733  015C44  B4D8               	btfsc	status,2,c
 28734  015C46  D006               	goto	l1492
 28735                           
 28736                           ;I2C.c: 339: {
 28737                           ;I2C.c: 340: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28738  015C48  84C5               	bsf	4037,2,c	;volatile
 28739  015C4A  D000               	goto	l1493
 28740  015C4C                     l1493:
 28741  015C4C  B4C5               	btfsc	4037,2,c	;volatile
 28742  015C4E  D7FE               	goto	l1493
 28743                           
 28744                           ;I2C.c: 341: return ( -3 );
 28745  015C50  0EFD               	movlw	253
 28746  015C52  0012               	return	
 28747  015C54                     l1492:
 28748                           
 28749                           ;I2C.c: 342: }
 28750                           ;I2C.c: 345: if ( !SSPCON2bits.ACKSTAT )
 28751  015C54  BCC5               	btfsc	4037,6,c	;volatile
 28752  015C56  D023               	goto	l1496
 28753                           
 28754                           ;I2C.c: 346: {
 28755                           ;I2C.c: 347: if ( Multiple_I2C_Read( rdptr, length ) )
 28756  015C58  C112  F10E         	movff	I2C_Read_Sequential@rdptr,Multiple_I2C_Read@rdptr
 28757  015C5C  C113  F10F         	movff	I2C_Read_Sequential@rdptr+1,Multiple_I2C_Read@rdptr+1
 28758  015C60  C114  F110         	movff	I2C_Read_Sequential@length,Multiple_I2C_Read@length
 28759  015C64  EC76  F002         	call	_Multiple_I2C_Read	;wreg free
 28760  015C68  0900               	iorlw	0
 28761  015C6A  B4D8               	btfsc	status,2,c
 28762  015C6C  D002               	goto	l1497
 28763                           
 28764                           ;I2C.c: 348: {
 28765                           ;I2C.c: 349: return ( -1 );
 28766  015C6E  0EFF               	movlw	255
 28767  015C70  0012               	return	
 28768  015C72                     l1497:
 28769                           
 28770                           ;I2C.c: 350: }
 28771                           ;I2C.c: 352: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
 28772  015C72  8AC5               	bsf	4037,5,c	;volatile
 28773  015C74  88C5               	bsf	4037,4,c	;volatile
 28774  015C76  D000               	goto	l1498
 28775  015C78                     l1498:
 28776  015C78  A8C5               	btfss	4037,4,c	;volatile
 28777  015C7A  D002               	goto	l1501
 28778  015C7C  D7FD               	goto	l1498
 28779                           
 28780                           ;I2C.c: 353: while ( SSPCON2bits.ACKEN );
 28781  015C7E  D000               	goto	l1501
 28782  015C80                     l1501:
 28783  015C80  B8C5               	btfsc	4037,4,c	;volatile
 28784  015C82  D7FE               	goto	l1501
 28785                           
 28786                           ;I2C.c: 354: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28787  015C84  84C5               	bsf	4037,2,c	;volatile
 28788  015C86  D000               	goto	l1504
 28789  015C88                     l1504:
 28790  015C88  A4C5               	btfss	4037,2,c	;volatile
 28791  015C8A  D002               	goto	l1507
 28792  015C8C  D7FD               	goto	l1504
 28793                           
 28794                           ;I2C.c: 355: while ( SSPCON2bits.PEN );
 28795  015C8E  D000               	goto	l1507
 28796  015C90                     l1507:
 28797  015C90  B4C5               	btfsc	4037,2,c	;volatile
 28798  015C92  D7FE               	goto	l1507
 28799                           
 28800                           ;I2C.c: 356: if ( PIR2bits.BCLIF )
 28801  015C94  A6A1               	btfss	4001,3,c	;volatile
 28802  015C96  D018               	goto	l13111
 28803  015C98  D7A4               	goto	l13057
 28804                           
 28805                           ;I2C.c: 357: {
 28806                           ;I2C.c: 358: return ( -1 );
 28807  015C9A  0012               	return	
 28808                           
 28809                           ;I2C.c: 359: }
 28810                           ;I2C.c: 360: }
 28811  015C9C  D015               	goto	l13111
 28812  015C9E                     l1496:
 28813                           
 28814                           ;I2C.c: 361: else
 28815                           ;I2C.c: 362: {
 28816                           ;I2C.c: 363: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28817  015C9E  84C5               	bsf	4037,2,c	;volatile
 28818  015CA0  D000               	goto	l1512
 28819  015CA2                     l1512:
 28820  015CA2  B4C5               	btfsc	4037,2,c	;volatile
 28821  015CA4  D7FE               	goto	l1512
 28822  015CA6                     l13099:
 28823                           
 28824                           ;I2C.c: 364: return ( -2 );
 28825  015CA6  0EFE               	movlw	254
 28826  015CA8  0012               	return	
 28827                           
 28828                           ;I2C.c: 365: }
 28829                           ;I2C.c: 366: }
 28830  015CAA  D00E               	goto	l13111
 28831  015CAC                     l1485:
 28832                           
 28833                           ;I2C.c: 367: else
 28834                           ;I2C.c: 368: {
 28835                           ;I2C.c: 369: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28836  015CAC  84C5               	bsf	4037,2,c	;volatile
 28837  015CAE  D000               	goto	l1516
 28838  015CB0                     l1516:
 28839  015CB0  B4C5               	btfsc	4037,2,c	;volatile
 28840  015CB2  D7FE               	goto	l1516
 28841  015CB4  D7F8               	goto	l13099
 28842                           
 28843                           ;I2C.c: 370: return ( -2 );
 28844  015CB6  0012               	return	
 28845                           
 28846                           ;I2C.c: 371: }
 28847                           ;I2C.c: 372: }
 28848  015CB8  D007               	goto	l13111
 28849  015CBA                     l1480:
 28850                           
 28851                           ;I2C.c: 373: else
 28852                           ;I2C.c: 374: {
 28853                           ;I2C.c: 375: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28854  015CBA  84C5               	bsf	4037,2,c	;volatile
 28855  015CBC  D000               	goto	l1520
 28856  015CBE                     l1520:
 28857  015CBE  B4C5               	btfsc	4037,2,c	;volatile
 28858  015CC0  D7FE               	goto	l1520
 28859  015CC2  D7F1               	goto	l13099
 28860                           
 28861                           ;I2C.c: 376: return ( -2 );
 28862  015CC4  0012               	return	
 28863  015CC6  D000               	goto	l13111
 28864  015CC8                     l13111:
 28865                           
 28866                           ;I2C.c: 377: }
 28867                           ;I2C.c: 378: }
 28868                           ;I2C.c: 379: return ( 0 );
 28869  015CC8  0E00               	movlw	0
 28870  015CCA  0012               	return	
 28871  015CCC  0012               	return		;funcret
 28872  015CCE                     __end_of_I2C_Read_Sequential:
 28873                           	opt stack 0
 28874                           tblptru	equ	0xFF8
 28875                           tblptrh	equ	0xFF7
 28876                           tblptrl	equ	0xFF6
 28877                           tablat	equ	0xFF5
 28878                           prodh	equ	0xFF4
 28879                           prodl	equ	0xFF3
 28880                           intcon	equ	0xFF2
 28881                           intcon2	equ	0xFF1
 28882                           postinc0	equ	0xFEE
 28883                           plusw0	equ	0xFEB
 28884                           wreg	equ	0xFE8
 28885                           indf1	equ	0xFE7
 28886                           postdec1	equ	0xFE5
 28887                           fsr1h	equ	0xFE2
 28888                           fsr1l	equ	0xFE1
 28889                           indf2	equ	0xFDF
 28890                           postinc2	equ	0xFDE
 28891                           postdec2	equ	0xFDD
 28892                           plusw2	equ	0xFDB
 28893                           fsr2h	equ	0xFDA
 28894                           fsr2l	equ	0xFD9
 28895                           status	equ	0xFD8
 28896                           
 28897 ;; *************** function _WriteI2C *****************
 28898 ;; Defined at:
 28899 ;;		line 119 in file "I2C.c"
 28900 ;; Parameters:    Size  Location     Type
 28901 ;;  data_out        1    wreg     unsigned char 
 28902 ;; Auto vars:     Size  Location     Type
 28903 ;;  data_out        1   15[BANK1 ] unsigned char 
 28904 ;; Return value:  Size  Location     Type
 28905 ;;                  1    wreg      char 
 28906 ;; Registers used:
 28907 ;;		wreg, status,2, status,0, cstack
 28908 ;; Tracked objects:
 28909 ;;		On entry : 0/0
 28910 ;;		On exit  : 0/0
 28911 ;;		Unchanged: 0/0
 28912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28914 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28916 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28917 ;;Total ram usage:        1 bytes
 28918 ;; Hardware stack levels used:    1
 28919 ;; Hardware stack levels required when called:    8
 28920 ;; This function calls:
 28921 ;;		_IdleI2C
 28922 ;; This function is called by:
 28923 ;;		_I2C_Write_At_Address
 28924 ;;		_I2C_Read_At_Address
 28925 ;;		_I2C_Read_Sequential
 28926 ;; This function uses a non-reentrant model
 28927 ;;
 28928                           
 28929                           	psect	text79
 28930  017A44                     __ptext79:
 28931                           	opt stack 0
 28932  017A44                     _WriteI2C:
 28933                           	opt stack 19
 28934                           
 28935                           ;incstack = 0
 28936                           ;WriteI2C@data_out stored from wreg
 28937  017A44  0101               	movlb	1	; () banked
 28938  017A46  6F0F               	movwf	WriteI2C@data_out& (0+255),b
 28939                           
 28940                           ; BSR set to: 1
 28941                           ;I2C.c: 121: SSPBUF = data_out;
 28942  017A48  C10F  FFC9         	movff	WriteI2C@data_out,4041	;volatile
 28943                           
 28944                           ; BSR set to: 1
 28945                           ;I2C.c: 122: if ( SSPCON1bits.WCOL )
 28946  017A4C  AEC6               	btfss	4038,7,c	;volatile
 28947  017A4E  D002               	goto	l12169
 28948                           
 28949                           ; BSR set to: 1
 28950                           ;I2C.c: 123: return ( -1 );
 28951  017A50  0EFF               	movlw	255
 28952                           
 28953                           ; BSR set to: 1
 28954                           
 28955                           ; BSR set to: 1
 28956  017A52  0012               	return	
 28957  017A54                     l12169:
 28958                           
 28959                           ; BSR set to: 1
 28960                           ;I2C.c: 124: else
 28961                           ;I2C.c: 125: {
 28962                           ;I2C.c: 126: if( ((SSPCON1&0x0F)!=0x08) && ((SSPCON1&0x0F)!=0x0B) )
 28963  017A54  50C6               	movf	4038,w,c	;volatile
 28964  017A56  0B0F               	andlw	15
 28965  017A58  0A08               	xorlw	8
 28966  017A5A  B4D8               	btfsc	status,2,c
 28967  017A5C  D010               	goto	l12187
 28968                           
 28969                           ; BSR set to: 1
 28970  017A5E  50C6               	movf	4038,w,c	;volatile
 28971  017A60  0B0F               	andlw	15
 28972  017A62  0A0B               	xorlw	11
 28973  017A64  B4D8               	btfsc	status,2,c
 28974  017A66  D00B               	goto	l12187
 28975                           
 28976                           ; BSR set to: 1
 28977                           ;I2C.c: 127: {
 28978                           ;I2C.c: 128: SSPCON1bits.CKP = 1;
 28979  017A68  88C6               	bsf	4038,4,c	;volatile
 28980                           
 28981                           ;I2C.c: 129: while ( !PIR1bits.SSPIF );
 28982  017A6A  D000               	goto	l1349
 28983  017A6C                     l1349:
 28984  017A6C  A69E               	btfss	3998,3,c	;volatile
 28985  017A6E  D7FE               	goto	l1349
 28986                           
 28987                           ;I2C.c: 131: if ( ( !SSPSTATbits.R_W ) && ( !SSPSTATbits.BF ) )
 28988  017A70  A4C7               	btfss	4039,2,c	;volatile
 28989  017A72  B0C7               	btfsc	4039,0,c	;volatile
 28990  017A74  D002               	goto	l12183
 28991                           
 28992                           ;I2C.c: 132: {
 28993                           ;I2C.c: 133: return ( -2 );
 28994  017A76  0EFE               	movlw	254
 28995                           
 28996                           ;I2C.c: 134: }
 28997  017A78  0012               	return	
 28998  017A7A                     l12183:
 28999                           
 29000                           ;I2C.c: 135: else
 29001                           ;I2C.c: 136: {
 29002                           ;I2C.c: 137: return ( 0 );
 29003  017A7A  0E00               	movlw	0
 29004                           
 29005                           ;I2C.c: 138: }
 29006                           ;I2C.c: 139: }
 29007  017A7C  0012               	return	
 29008  017A7E                     l12187:
 29009                           
 29010                           ;I2C.c: 140: else if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 29011  017A7E  50C6               	movf	4038,w,c	;volatile
 29012  017A80  0B0F               	andlw	15
 29013  017A82  0A08               	xorlw	8
 29014  017A84  B4D8               	btfsc	status,2,c
 29015  017A86  D007               	goto	l1358
 29016  017A88  50C6               	movf	4038,w,c	;volatile
 29017  017A8A  0B0F               	andlw	15
 29018  017A8C  0A0B               	xorlw	11
 29019  017A8E  B4D8               	btfsc	status,2,c
 29020  017A90  D002               	goto	l1358
 29021  017A92  D00B               	goto	l12205
 29022                           
 29023                           ;I2C.c: 141: {
 29024                           ;I2C.c: 142: while( SSPSTATbits.BF );
 29025  017A94  D000               	goto	l1358
 29026  017A96                     l1358:
 29027  017A96  B0C7               	btfsc	4039,0,c	;volatile
 29028  017A98  D7FE               	goto	l1358
 29029                           
 29030                           ;I2C.c: 143: IdleI2C();
 29031  017A9A  EC58  F007         	call	_IdleI2C	;wreg free
 29032                           
 29033                           ;I2C.c: 144: if ( SSPCON2bits.ACKSTAT )
 29034  017A9E  ACC5               	btfss	4037,6,c	;volatile
 29035  017AA0  D002               	goto	l12201
 29036                           
 29037                           ;I2C.c: 145: return ( -2 );
 29038  017AA2  0EFE               	movlw	254
 29039  017AA4  0012               	return	
 29040  017AA6                     l12201:
 29041                           
 29042                           ;I2C.c: 146: else return ( 0 );
 29043  017AA6  0E00               	movlw	0
 29044                           
 29045                           ;I2C.c: 147: }
 29046  017AA8  0012               	return	
 29047  017AAA                     l12205:
 29048                           
 29049                           ;I2C.c: 148: else
 29050                           ;I2C.c: 149: {
 29051                           ;I2C.c: 150: return (-4);
 29052  017AAA  0EFC               	movlw	252
 29053  017AAC  0012               	return	
 29054  017AAE  0012               	return		;funcret
 29055  017AB0                     __end_of_WriteI2C:
 29056                           	opt stack 0
 29057                           tblptru	equ	0xFF8
 29058                           tblptrh	equ	0xFF7
 29059                           tblptrl	equ	0xFF6
 29060                           tablat	equ	0xFF5
 29061                           prodh	equ	0xFF4
 29062                           prodl	equ	0xFF3
 29063                           intcon	equ	0xFF2
 29064                           intcon2	equ	0xFF1
 29065                           postinc0	equ	0xFEE
 29066                           plusw0	equ	0xFEB
 29067                           wreg	equ	0xFE8
 29068                           indf1	equ	0xFE7
 29069                           postdec1	equ	0xFE5
 29070                           fsr1h	equ	0xFE2
 29071                           fsr1l	equ	0xFE1
 29072                           indf2	equ	0xFDF
 29073                           postinc2	equ	0xFDE
 29074                           postdec2	equ	0xFDD
 29075                           plusw2	equ	0xFDB
 29076                           fsr2h	equ	0xFDA
 29077                           fsr2l	equ	0xFD9
 29078                           status	equ	0xFD8
 29079                           
 29080 ;; *************** function _IdleI2C *****************
 29081 ;; Defined at:
 29082 ;;		line 108 in file "I2C.c"
 29083 ;; Parameters:    Size  Location     Type
 29084 ;;		None
 29085 ;; Auto vars:     Size  Location     Type
 29086 ;;		None
 29087 ;; Return value:  Size  Location     Type
 29088 ;;		None               void
 29089 ;; Registers used:
 29090 ;;		wreg, status,2, status,0
 29091 ;; Tracked objects:
 29092 ;;		On entry : 0/0
 29093 ;;		On exit  : 0/0
 29094 ;;		Unchanged: 0/0
 29095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29098 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 29099 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 29100 ;;Total ram usage:        1 bytes
 29101 ;; Hardware stack levels used:    1
 29102 ;; Hardware stack levels required when called:    7
 29103 ;; This function calls:
 29104 ;;		Nothing
 29105 ;; This function is called by:
 29106 ;;		_WriteI2C
 29107 ;;		_I2C_Write_At_Address
 29108 ;;		_I2C_Read_At_Address
 29109 ;;		_I2C_Read_Sequential
 29110 ;; This function uses a non-reentrant model
 29111 ;;
 29112                           
 29113                           	psect	text80
 29114  000EB0                     __ptext80:
 29115                           	opt stack 0
 29116  000EB0                     _IdleI2C:
 29117                           	opt stack 19
 29118                           
 29119                           ;I2C.c: 111: continue;
 29120                           
 29121                           ;I2C.c: 110: while ( ( SSPCON2 & 0x1F ) || ( SSPSTATbits.R_W ) )
 29122                           
 29123                           ;incstack = 0
 29124  000EB0  D000               	goto	l11957
 29125  000EB2                     l11957:
 29126  000EB2  CFC5 F10E          	movff	4037,??_IdleI2C	;volatile
 29127  000EB6  0E1F               	movlw	31
 29128  000EB8  0101               	movlb	1	; () banked
 29129  000EBA  170E               	andwf	??_IdleI2C& (0+255),f,b
 29130  000EBC  B4D8               	btfsc	status,2,c
 29131                           
 29132                           ; BSR set to: 1
 29133  000EBE  B4C7               	btfsc	4039,2,c	;volatile
 29134  000EC0  D7F8               	goto	l11957
 29135                           
 29136                           ; BSR set to: 1
 29137                           
 29138                           ; BSR set to: 1
 29139  000EC2  0012               	return		;funcret
 29140  000EC4                     __end_of_IdleI2C:
 29141                           	opt stack 0
 29142                           tblptru	equ	0xFF8
 29143                           tblptrh	equ	0xFF7
 29144                           tblptrl	equ	0xFF6
 29145                           tablat	equ	0xFF5
 29146                           prodh	equ	0xFF4
 29147                           prodl	equ	0xFF3
 29148                           intcon	equ	0xFF2
 29149                           intcon2	equ	0xFF1
 29150                           postinc0	equ	0xFEE
 29151                           plusw0	equ	0xFEB
 29152                           wreg	equ	0xFE8
 29153                           indf1	equ	0xFE7
 29154                           postdec1	equ	0xFE5
 29155                           fsr1h	equ	0xFE2
 29156                           fsr1l	equ	0xFE1
 29157                           indf2	equ	0xFDF
 29158                           postinc2	equ	0xFDE
 29159                           postdec2	equ	0xFDD
 29160                           plusw2	equ	0xFDB
 29161                           fsr2h	equ	0xFDA
 29162                           fsr2l	equ	0xFD9
 29163                           status	equ	0xFD8
 29164                           
 29165 ;; *************** function _Multiple_I2C_Read *****************
 29166 ;; Defined at:
 29167 ;;		line 387 in file "I2C.c"
 29168 ;; Parameters:    Size  Location     Type
 29169 ;;  rdptr           2   14[BANK1 ] PTR unsigned char 
 29170 ;;		 -> READ_RTC_TIME@temp(7), 
 29171 ;;  length          1   16[BANK1 ] unsigned char 
 29172 ;; Auto vars:     Size  Location     Type
 29173 ;;		None
 29174 ;; Return value:  Size  Location     Type
 29175 ;;                  1    wreg      unsigned char 
 29176 ;; Registers used:
 29177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29178 ;; Tracked objects:
 29179 ;;		On entry : 0/0
 29180 ;;		On exit  : 0/0
 29181 ;;		Unchanged: 0/0
 29182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29183 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 29184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29186 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 29187 ;;Total ram usage:        3 bytes
 29188 ;; Hardware stack levels used:    1
 29189 ;; Hardware stack levels required when called:    8
 29190 ;; This function calls:
 29191 ;;		_readI2C
 29192 ;; This function is called by:
 29193 ;;		_I2C_Read_Sequential
 29194 ;; This function uses a non-reentrant model
 29195 ;;
 29196                           
 29197                           	psect	text81
 29198  0004EC                     __ptext81:
 29199                           	opt stack 0
 29200  0004EC                     _Multiple_I2C_Read:
 29201                           	opt stack 19
 29202                           
 29203                           ;I2C.c: 389: while ( length-- )
 29204                           
 29205                           ; BSR set to: 1
 29206                           ;incstack = 0
 29207  0004EC  D027               	goto	l12227
 29208  0004EE                     l12211:
 29209                           
 29210                           ;I2C.c: 390: {
 29211                           ;I2C.c: 391: *rdptr++ = readI2C();
 29212  0004EE  ECC5  F006         	call	_readI2C	;wreg free
 29213  0004F2  C10E  FFD9         	movff	Multiple_I2C_Read@rdptr,fsr2l
 29214  0004F6  C10F  FFDA         	movff	Multiple_I2C_Read@rdptr+1,fsr2h
 29215  0004FA  6EDF               	movwf	indf2,c
 29216  0004FC  0101               	movlb	1	; () banked
 29217  0004FE  4B0E               	infsnz	Multiple_I2C_Read@rdptr& (0+255),f,b
 29218  000500  2B0F               	incf	(Multiple_I2C_Read@rdptr+1)& (0+255),f,b
 29219                           
 29220                           ;I2C.c: 392: while ( SSPCON2bits.RCEN );
 29221  000502  D000               	goto	l1527
 29222  000504                     l1527:
 29223  000504  B6C5               	btfsc	4037,3,c	;volatile
 29224  000506  D7FE               	goto	l1527
 29225                           
 29226                           ;I2C.c: 394: if ( PIR2bits.BCLIF )
 29227  000508  A6A1               	btfss	4001,3,c	;volatile
 29228  00050A  D002               	goto	l12219
 29229                           
 29230                           ;I2C.c: 395: {
 29231                           ;I2C.c: 396: return ( -1 );
 29232  00050C  0EFF               	movlw	255
 29233  00050E  0012               	return	
 29234  000510                     l12219:
 29235                           
 29236                           ;I2C.c: 397: }
 29237                           ;I2C.c: 399: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 29238  000510  50C6               	movf	4038,w,c	;volatile
 29239  000512  0B0F               	andlw	15
 29240  000514  0A08               	xorlw	8
 29241  000516  B4D8               	btfsc	status,2,c
 29242  000518  D005               	goto	l12223
 29243  00051A  50C6               	movf	4038,w,c	;volatile
 29244  00051C  0B0F               	andlw	15
 29245  00051E  0A0B               	xorlw	11
 29246  000520  A4D8               	btfss	status,2,c
 29247  000522  D00C               	goto	l12227
 29248  000524                     l12223:
 29249                           
 29250                           ;I2C.c: 400: {
 29251                           ;I2C.c: 401: if ( length )
 29252  000524  0101               	movlb	1	; () banked
 29253  000526  5110               	movf	Multiple_I2C_Read@length& (0+255),w,b
 29254  000528  0101               	movlb	1	; () banked
 29255  00052A  B4D8               	btfsc	status,2,c
 29256  00052C  D007               	goto	l12227
 29257                           
 29258                           ; BSR set to: 1
 29259                           ;I2C.c: 402: {
 29260                           ;I2C.c: 403: SSPCON2bits.ACKDT = 0;
 29261  00052E  9AC5               	bcf	4037,5,c	;volatile
 29262                           
 29263                           ;I2C.c: 404: SSPCON2bits.ACKEN = 1;
 29264  000530  88C5               	bsf	4037,4,c	;volatile
 29265                           
 29266                           ;I2C.c: 405: while ( SSPCON2bits.ACKEN );
 29267  000532  D000               	goto	l1536
 29268  000534                     l1536:
 29269  000534  A8C5               	btfss	4037,4,c	;volatile
 29270  000536  D002               	goto	l12227
 29271  000538  D7FD               	goto	l1536
 29272  00053A  D000               	goto	l12227
 29273  00053C                     l12227:
 29274  00053C  0101               	movlb	1	; () banked
 29275  00053E  0710               	decf	Multiple_I2C_Read@length& (0+255),f,b
 29276  000540  0101               	movlb	1	; () banked
 29277  000542  2910               	incf	Multiple_I2C_Read@length& (0+255),w,b
 29278  000544  A4D8               	btfss	status,2,c
 29279  000546  D7D3               	goto	l12211
 29280                           
 29281                           ; BSR set to: 1
 29282                           ;I2C.c: 406: }
 29283                           ;I2C.c: 407: }
 29284                           ;I2C.c: 409: }
 29285                           ;I2C.c: 410: return ( 0 );
 29286                           
 29287                           ; BSR set to: 1
 29288  000548  0E00               	movlw	0
 29289  00054A  0012               	return	
 29290                           
 29291                           ; BSR set to: 1
 29292  00054C  0012               	return		;funcret
 29293  00054E                     __end_of_Multiple_I2C_Read:
 29294                           	opt stack 0
 29295                           tblptru	equ	0xFF8
 29296                           tblptrh	equ	0xFF7
 29297                           tblptrl	equ	0xFF6
 29298                           tablat	equ	0xFF5
 29299                           prodh	equ	0xFF4
 29300                           prodl	equ	0xFF3
 29301                           intcon	equ	0xFF2
 29302                           intcon2	equ	0xFF1
 29303                           postinc0	equ	0xFEE
 29304                           plusw0	equ	0xFEB
 29305                           wreg	equ	0xFE8
 29306                           indf1	equ	0xFE7
 29307                           postdec1	equ	0xFE5
 29308                           fsr1h	equ	0xFE2
 29309                           fsr1l	equ	0xFE1
 29310                           indf2	equ	0xFDF
 29311                           postinc2	equ	0xFDE
 29312                           postdec2	equ	0xFDD
 29313                           plusw2	equ	0xFDB
 29314                           fsr2h	equ	0xFDA
 29315                           fsr2l	equ	0xFD9
 29316                           status	equ	0xFD8
 29317                           
 29318 ;; *************** function _readI2C *****************
 29319 ;; Defined at:
 29320 ;;		line 418 in file "I2C.c"
 29321 ;; Parameters:    Size  Location     Type
 29322 ;;		None
 29323 ;; Auto vars:     Size  Location     Type
 29324 ;;		None
 29325 ;; Return value:  Size  Location     Type
 29326 ;;                  1    wreg      unsigned char 
 29327 ;; Registers used:
 29328 ;;		wreg, status,2, status,0
 29329 ;; Tracked objects:
 29330 ;;		On entry : 0/0
 29331 ;;		On exit  : 0/0
 29332 ;;		Unchanged: 0/0
 29333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29338 ;;Total ram usage:        0 bytes
 29339 ;; Hardware stack levels used:    1
 29340 ;; Hardware stack levels required when called:    7
 29341 ;; This function calls:
 29342 ;;		Nothing
 29343 ;; This function is called by:
 29344 ;;		_Multiple_I2C_Read
 29345 ;; This function uses a non-reentrant model
 29346 ;;
 29347                           
 29348                           	psect	text82
 29349  000D8A                     __ptext82:
 29350                           	opt stack 0
 29351  000D8A                     _readI2C:
 29352                           	opt stack 19
 29353                           
 29354                           ;I2C.c: 420: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 29355                           
 29356                           ;incstack = 0
 29357  000D8A  50C6               	movf	4038,w,c	;volatile
 29358  000D8C  0B0F               	andlw	15
 29359  000D8E  0A08               	xorlw	8
 29360  000D90  B4D8               	btfsc	status,2,c
 29361  000D92  D005               	goto	l1544
 29362  000D94  50C6               	movf	4038,w,c	;volatile
 29363  000D96  0B0F               	andlw	15
 29364  000D98  0A0B               	xorlw	11
 29365  000D9A  A4D8               	btfss	status,2,c
 29366  000D9C  D002               	goto	l1545
 29367  000D9E                     l1544:
 29368                           
 29369                           ;I2C.c: 421: SSPCON2bits.RCEN = 1;
 29370  000D9E  86C5               	bsf	4037,3,c	;volatile
 29371                           
 29372                           ;I2C.c: 422: while ( !SSPSTATbits.BF );
 29373  000DA0  D000               	goto	l1545
 29374  000DA2                     l1545:
 29375  000DA2  A0C7               	btfss	4039,0,c	;volatile
 29376  000DA4  D7FE               	goto	l1545
 29377                           
 29378                           ;I2C.c: 423: return ( SSPBUF );
 29379  000DA6  50C9               	movf	4041,w,c	;volatile
 29380  000DA8  0012               	return	
 29381  000DAA  0012               	return		;funcret
 29382  000DAC                     __end_of_readI2C:
 29383                           	opt stack 0
 29384                           tblptru	equ	0xFF8
 29385                           tblptrh	equ	0xFF7
 29386                           tblptrl	equ	0xFF6
 29387                           tablat	equ	0xFF5
 29388                           prodh	equ	0xFF4
 29389                           prodl	equ	0xFF3
 29390                           intcon	equ	0xFF2
 29391                           intcon2	equ	0xFF1
 29392                           postinc0	equ	0xFEE
 29393                           plusw0	equ	0xFEB
 29394                           wreg	equ	0xFE8
 29395                           indf1	equ	0xFE7
 29396                           postdec1	equ	0xFE5
 29397                           fsr1h	equ	0xFE2
 29398                           fsr1l	equ	0xFE1
 29399                           indf2	equ	0xFDF
 29400                           postinc2	equ	0xFDE
 29401                           postdec2	equ	0xFDD
 29402                           plusw2	equ	0xFDB
 29403                           fsr2h	equ	0xFDA
 29404                           fsr2l	equ	0xFD9
 29405                           status	equ	0xFD8
 29406                           
 29407 ;; *************** function _Parse_Time *****************
 29408 ;; Defined at:
 29409 ;;		line 279 in file "RTC.c"
 29410 ;; Parameters:    Size  Location     Type
 29411 ;;  This            2   14[BANK1 ] PTR unsigned char 
 29412 ;;		 -> Rxdata(100), 
 29413 ;; Auto vars:     Size  Location     Type
 29414 ;;  TempTime        9   18[BANK1 ] struct TIME
 29415 ;;  temp            1   17[BANK1 ] unsigned char 
 29416 ;; Return value:  Size  Location     Type
 29417 ;;                  1    wreg      unsigned char 
 29418 ;; Registers used:
 29419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29420 ;; Tracked objects:
 29421 ;;		On entry : 0/0
 29422 ;;		On exit  : 0/0
 29423 ;;		Unchanged: 0/0
 29424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29425 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 29426 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 29427 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 29428 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 29429 ;;Total ram usage:       13 bytes
 29430 ;; Hardware stack levels used:    1
 29431 ;; Hardware stack levels required when called:    7
 29432 ;; This function calls:
 29433 ;;		Nothing
 29434 ;; This function is called by:
 29435 ;;		_Command
 29436 ;; This function uses a non-reentrant model
 29437 ;;
 29438                           
 29439                           	psect	text83
 29440  0133AA                     __ptext83:
 29441                           	opt stack 0
 29442  0133AA                     _Parse_Time:
 29443                           	opt stack 22
 29444                           
 29445                           ;RTC.c: 281: TIME TempTime;
 29446                           ;RTC.c: 282: unsigned char temp = 0;
 29447                           
 29448                           ;incstack = 0
 29449  0133AA  0E00               	movlw	0
 29450  0133AC  0101               	movlb	1	; () banked
 29451  0133AE  6F11               	movwf	Parse_Time@temp& (0+255),b
 29452                           
 29453                           ; BSR set to: 1
 29454                           ;RTC.c: 284: if(*This != 0 && *This == ' ')
 29455  0133B0  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29456  0133B4  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29457  0133B8  50DF               	movf	indf2,w,c
 29458  0133BA  B4D8               	btfsc	status,2,c
 29459  0133BC  D00C               	goto	l13957
 29460                           
 29461                           ; BSR set to: 1
 29462  0133BE  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29463  0133C2  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29464  0133C6  0E20               	movlw	32
 29465  0133C8  18DE               	xorwf	postinc2,w,c
 29466  0133CA  A4D8               	btfss	status,2,c
 29467  0133CC  D004               	goto	l13957
 29468                           
 29469                           ; BSR set to: 1
 29470                           ;RTC.c: 285: {
 29471                           ;RTC.c: 286: This++;
 29472  0133CE  0101               	movlb	1	; () banked
 29473  0133D0  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 29474  0133D2  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 29475  0133D4  D000               	goto	l13957
 29476  0133D6                     l13957:
 29477                           
 29478                           ; BSR set to: 1
 29479                           ;RTC.c: 287: }
 29480                           ;RTC.c: 290: if (*This >= 48 && *This <= 57)
 29481  0133D6  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29482  0133DA  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29483  0133DE  0E2F               	movlw	47
 29484  0133E0  64DF               	cpfsgt	indf2,c
 29485  0133E2  D013               	goto	l13965
 29486                           
 29487                           ; BSR set to: 1
 29488  0133E4  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29489  0133E8  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29490  0133EC  0E3A               	movlw	58
 29491  0133EE  60DF               	cpfslt	indf2,c
 29492  0133F0  D00C               	goto	l13965
 29493                           
 29494                           ; BSR set to: 1
 29495                           ;RTC.c: 291: {
 29496                           ;RTC.c: 292: temp = *This - 48;
 29497  0133F2  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29498  0133F6  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29499  0133FA  50DF               	movf	indf2,w,c
 29500  0133FC  0FD0               	addlw	208
 29501  0133FE  0101               	movlb	1	; () banked
 29502  013400  6F11               	movwf	Parse_Time@temp& (0+255),b
 29503                           
 29504                           ; BSR set to: 1
 29505                           ;RTC.c: 293: This++;
 29506  013402  0101               	movlb	1	; () banked
 29507  013404  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 29508  013406  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 29509                           
 29510                           ;RTC.c: 294: }
 29511  013408  D002               	goto	l13969
 29512  01340A                     l13965:
 29513                           
 29514                           ; BSR set to: 1
 29515                           ;RTC.c: 295: else
 29516                           ;RTC.c: 296: {
 29517                           ;RTC.c: 297: return 0;
 29518  01340A  0E00               	movlw	0
 29519                           
 29520                           ; BSR set to: 1
 29521  01340C  0012               	return	
 29522  01340E                     l13969:
 29523                           
 29524                           ; BSR set to: 1
 29525                           ;RTC.c: 298: }
 29526                           ;RTC.c: 300: if(*This >= 48 && *This <= 57)
 29527  01340E  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29528  013412  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29529  013416  0E2F               	movlw	47
 29530  013418  64DF               	cpfsgt	indf2,c
 29531  01341A  D018               	goto	l13979
 29532                           
 29533                           ; BSR set to: 1
 29534  01341C  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29535  013420  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29536  013424  0E3A               	movlw	58
 29537  013426  60DF               	cpfslt	indf2,c
 29538  013428  D011               	goto	l13979
 29539                           
 29540                           ; BSR set to: 1
 29541                           ;RTC.c: 301: {
 29542                           ;RTC.c: 302: temp *= 10;
 29543  01342A  0E0A               	movlw	10
 29544  01342C  0101               	movlb	1	; () banked
 29545  01342E  0311               	mulwf	Parse_Time@temp& (0+255),b
 29546  013430  50F3               	movf	prodl,w,c
 29547  013432  6F11               	movwf	Parse_Time@temp& (0+255),b
 29548                           
 29549                           ; BSR set to: 1
 29550                           ;RTC.c: 303: temp += *This - 48;
 29551  013434  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29552  013438  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29553  01343C  50DF               	movf	indf2,w,c
 29554  01343E  0FD0               	addlw	208
 29555  013440  0101               	movlb	1	; () banked
 29556  013442  2711               	addwf	Parse_Time@temp& (0+255),f,b
 29557                           
 29558                           ; BSR set to: 1
 29559                           ;RTC.c: 304: This++;
 29560  013444  0101               	movlb	1	; () banked
 29561  013446  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 29562  013448  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 29563                           
 29564                           ;RTC.c: 305: }
 29565  01344A  D00C               	goto	l1242
 29566  01344C                     l13979:
 29567                           
 29568                           ; BSR set to: 1
 29569                           ;RTC.c: 306: else if(*This == '/')
 29570  01344C  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29571  013450  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29572  013454  0E2F               	movlw	47
 29573  013456  18DE               	xorwf	postinc2,w,c
 29574  013458  B4D8               	btfsc	status,2,c
 29575  01345A  D004               	goto	l1242
 29576  01345C  D001               	goto	l13983
 29577                           
 29578                           ; BSR set to: 1
 29579                           ;RTC.c: 307: {
 29580                           ;RTC.c: 309: }
 29581  01345E  D002               	goto	l1242
 29582  013460                     l13983:
 29583                           
 29584                           ; BSR set to: 1
 29585                           ;RTC.c: 310: else
 29586                           ;RTC.c: 311: {
 29587                           ;RTC.c: 312: return 0;
 29588  013460  0E00               	movlw	0
 29589                           
 29590                           ; BSR set to: 1
 29591  013462  0012               	return	
 29592  013464                     l1242:
 29593                           
 29594                           ; BSR set to: 1
 29595                           ;RTC.c: 313: }
 29596                           ;RTC.c: 314: TempTime.Month = temp;
 29597  013464  C111  F119         	movff	Parse_Time@temp,Parse_Time@TempTime+7
 29598                           
 29599                           ; BSR set to: 1
 29600                           ;RTC.c: 316: if(*This == '/')
 29601  013468  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29602  01346C  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29603  013470  0E2F               	movlw	47
 29604  013472  18DE               	xorwf	postinc2,w,c
 29605  013474  A4D8               	btfss	status,2,c
 29606  013476  D004               	goto	l13991
 29607                           
 29608                           ; BSR set to: 1
 29609                           ;RTC.c: 317: {
 29610                           ;RTC.c: 318: This++;
 29611  013478  0101               	movlb	1	; () banked
 29612  01347A  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 29613  01347C  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 29614                           
 29615                           ;RTC.c: 319: }
 29616  01347E  D002               	goto	l13995
 29617  013480                     l13991:
 29618                           
 29619                           ; BSR set to: 1
 29620                           ;RTC.c: 320: else
 29621                           ;RTC.c: 321: {
 29622                           ;RTC.c: 322: return 0;
 29623  013480  0E00               	movlw	0
 29624                           
 29625                           ; BSR set to: 1
 29626  013482  0012               	return	
 29627  013484                     l13995:
 29628                           
 29629                           ; BSR set to: 1
 29630                           ;RTC.c: 323: }
 29631                           ;RTC.c: 326: if (*This >= 48 && *This <= 57)
 29632  013484  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29633  013488  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29634  01348C  0E2F               	movlw	47
 29635  01348E  64DF               	cpfsgt	indf2,c
 29636  013490  D013               	goto	l14003
 29637                           
 29638                           ; BSR set to: 1
 29639  013492  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29640  013496  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29641  01349A  0E3A               	movlw	58
 29642  01349C  60DF               	cpfslt	indf2,c
 29643  01349E  D00C               	goto	l14003
 29644                           
 29645                           ; BSR set to: 1
 29646                           ;RTC.c: 327: {
 29647                           ;RTC.c: 328: temp = *This - 48;
 29648  0134A0  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29649  0134A4  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29650  0134A8  50DF               	movf	indf2,w,c
 29651  0134AA  0FD0               	addlw	208
 29652  0134AC  0101               	movlb	1	; () banked
 29653  0134AE  6F11               	movwf	Parse_Time@temp& (0+255),b
 29654                           
 29655                           ; BSR set to: 1
 29656                           ;RTC.c: 329: This++;
 29657  0134B0  0101               	movlb	1	; () banked
 29658  0134B2  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 29659  0134B4  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 29660                           
 29661                           ;RTC.c: 330: }
 29662  0134B6  D002               	goto	l14007
 29663  0134B8                     l14003:
 29664                           
 29665                           ; BSR set to: 1
 29666                           ;RTC.c: 331: else
 29667                           ;RTC.c: 332: {
 29668                           ;RTC.c: 333: return 0;
 29669  0134B8  0E00               	movlw	0
 29670                           
 29671                           ; BSR set to: 1
 29672  0134BA  0012               	return	
 29673  0134BC                     l14007:
 29674                           
 29675                           ; BSR set to: 1
 29676                           ;RTC.c: 334: }
 29677                           ;RTC.c: 336: if(*This >= 48 && *This <= 57)
 29678  0134BC  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29679  0134C0  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29680  0134C4  0E2F               	movlw	47
 29681  0134C6  64DF               	cpfsgt	indf2,c
 29682  0134C8  D018               	goto	l14017
 29683                           
 29684                           ; BSR set to: 1
 29685  0134CA  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29686  0134CE  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29687  0134D2  0E3A               	movlw	58
 29688  0134D4  60DF               	cpfslt	indf2,c
 29689  0134D6  D011               	goto	l14017
 29690                           
 29691                           ; BSR set to: 1
 29692                           ;RTC.c: 337: {
 29693                           ;RTC.c: 338: temp *= 10;
 29694  0134D8  0E0A               	movlw	10
 29695  0134DA  0101               	movlb	1	; () banked
 29696  0134DC  0311               	mulwf	Parse_Time@temp& (0+255),b
 29697  0134DE  50F3               	movf	prodl,w,c
 29698  0134E0  6F11               	movwf	Parse_Time@temp& (0+255),b
 29699                           
 29700                           ; BSR set to: 1
 29701                           ;RTC.c: 339: temp += *This - 48;
 29702  0134E2  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29703  0134E6  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29704  0134EA  50DF               	movf	indf2,w,c
 29705  0134EC  0FD0               	addlw	208
 29706  0134EE  0101               	movlb	1	; () banked
 29707  0134F0  2711               	addwf	Parse_Time@temp& (0+255),f,b
 29708                           
 29709                           ; BSR set to: 1
 29710                           ;RTC.c: 340: This++;
 29711  0134F2  0101               	movlb	1	; () banked
 29712  0134F4  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 29713  0134F6  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 29714                           
 29715                           ;RTC.c: 341: }
 29716  0134F8  D00C               	goto	l1250
 29717  0134FA                     l14017:
 29718                           
 29719                           ; BSR set to: 1
 29720                           ;RTC.c: 342: else if(*This == '/')
 29721  0134FA  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29722  0134FE  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29723  013502  0E2F               	movlw	47
 29724  013504  18DE               	xorwf	postinc2,w,c
 29725  013506  B4D8               	btfsc	status,2,c
 29726  013508  D004               	goto	l1250
 29727  01350A  D001               	goto	l14021
 29728                           
 29729                           ; BSR set to: 1
 29730                           ;RTC.c: 343: {
 29731                           ;RTC.c: 345: }
 29732  01350C  D002               	goto	l1250
 29733  01350E                     l14021:
 29734                           
 29735                           ; BSR set to: 1
 29736                           ;RTC.c: 346: else
 29737                           ;RTC.c: 347: {
 29738                           ;RTC.c: 348: return 0;
 29739  01350E  0E00               	movlw	0
 29740                           
 29741                           ; BSR set to: 1
 29742  013510  0012               	return	
 29743  013512                     l1250:
 29744                           
 29745                           ; BSR set to: 1
 29746                           ;RTC.c: 349: }
 29747                           ;RTC.c: 350: TempTime.Date = temp;
 29748  013512  C111  F118         	movff	Parse_Time@temp,Parse_Time@TempTime+6
 29749                           
 29750                           ; BSR set to: 1
 29751                           ;RTC.c: 352: if(*This == '/')
 29752  013516  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29753  01351A  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29754  01351E  0E2F               	movlw	47
 29755  013520  18DE               	xorwf	postinc2,w,c
 29756  013522  A4D8               	btfss	status,2,c
 29757  013524  D004               	goto	l14029
 29758                           
 29759                           ; BSR set to: 1
 29760                           ;RTC.c: 353: {
 29761                           ;RTC.c: 354: This++;
 29762  013526  0101               	movlb	1	; () banked
 29763  013528  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 29764  01352A  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 29765                           
 29766                           ;RTC.c: 355: }
 29767  01352C  D002               	goto	l14033
 29768  01352E                     l14029:
 29769                           
 29770                           ; BSR set to: 1
 29771                           ;RTC.c: 356: else
 29772                           ;RTC.c: 357: {
 29773                           ;RTC.c: 358: return 0;
 29774  01352E  0E00               	movlw	0
 29775                           
 29776                           ; BSR set to: 1
 29777  013530  0012               	return	
 29778  013532                     l14033:
 29779                           
 29780                           ; BSR set to: 1
 29781                           ;RTC.c: 359: }
 29782                           ;RTC.c: 362: if (*This >= 48 && *This <= 57)
 29783  013532  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29784  013536  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29785  01353A  0E2F               	movlw	47
 29786  01353C  64DF               	cpfsgt	indf2,c
 29787  01353E  D013               	goto	l14041
 29788                           
 29789                           ; BSR set to: 1
 29790  013540  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29791  013544  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29792  013548  0E3A               	movlw	58
 29793  01354A  60DF               	cpfslt	indf2,c
 29794  01354C  D00C               	goto	l14041
 29795                           
 29796                           ; BSR set to: 1
 29797                           ;RTC.c: 363: {
 29798                           ;RTC.c: 364: temp = *This - 48;
 29799  01354E  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29800  013552  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29801  013556  50DF               	movf	indf2,w,c
 29802  013558  0FD0               	addlw	208
 29803  01355A  0101               	movlb	1	; () banked
 29804  01355C  6F11               	movwf	Parse_Time@temp& (0+255),b
 29805                           
 29806                           ; BSR set to: 1
 29807                           ;RTC.c: 365: This++;
 29808  01355E  0101               	movlb	1	; () banked
 29809  013560  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 29810  013562  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 29811                           
 29812                           ;RTC.c: 366: }
 29813  013564  D002               	goto	l14045
 29814  013566                     l14041:
 29815                           
 29816                           ; BSR set to: 1
 29817                           ;RTC.c: 367: else
 29818                           ;RTC.c: 368: {
 29819                           ;RTC.c: 369: return 0;
 29820  013566  0E00               	movlw	0
 29821                           
 29822                           ; BSR set to: 1
 29823  013568  0012               	return	
 29824  01356A                     l14045:
 29825                           
 29826                           ; BSR set to: 1
 29827                           ;RTC.c: 370: }
 29828                           ;RTC.c: 371: if (*This >= 48 && *This <= 57)
 29829  01356A  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29830  01356E  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29831  013572  0E2F               	movlw	47
 29832  013574  64DF               	cpfsgt	indf2,c
 29833  013576  D018               	goto	l14055
 29834                           
 29835                           ; BSR set to: 1
 29836  013578  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29837  01357C  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29838  013580  0E3A               	movlw	58
 29839  013582  60DF               	cpfslt	indf2,c
 29840  013584  D011               	goto	l14055
 29841                           
 29842                           ; BSR set to: 1
 29843                           ;RTC.c: 372: {
 29844                           ;RTC.c: 373: temp *= 10;
 29845  013586  0E0A               	movlw	10
 29846  013588  0101               	movlb	1	; () banked
 29847  01358A  0311               	mulwf	Parse_Time@temp& (0+255),b
 29848  01358C  50F3               	movf	prodl,w,c
 29849  01358E  6F11               	movwf	Parse_Time@temp& (0+255),b
 29850                           
 29851                           ; BSR set to: 1
 29852                           ;RTC.c: 374: temp += *This - 48;
 29853  013590  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29854  013594  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29855  013598  50DF               	movf	indf2,w,c
 29856  01359A  0FD0               	addlw	208
 29857  01359C  0101               	movlb	1	; () banked
 29858  01359E  2711               	addwf	Parse_Time@temp& (0+255),f,b
 29859                           
 29860                           ; BSR set to: 1
 29861                           ;RTC.c: 375: This++;
 29862  0135A0  0101               	movlb	1	; () banked
 29863  0135A2  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 29864  0135A4  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 29865                           
 29866                           ;RTC.c: 376: }
 29867  0135A6  D002               	goto	l1258
 29868  0135A8                     l14055:
 29869                           
 29870                           ; BSR set to: 1
 29871                           ;RTC.c: 377: else
 29872                           ;RTC.c: 378: {
 29873                           ;RTC.c: 379: return 0;
 29874  0135A8  0E00               	movlw	0
 29875                           
 29876                           ; BSR set to: 1
 29877  0135AA  0012               	return	
 29878  0135AC                     l1258:
 29879                           
 29880                           ; BSR set to: 1
 29881                           ;RTC.c: 380: }
 29882                           ;RTC.c: 381: TempTime.Year = temp;
 29883  0135AC  C111  F11A         	movff	Parse_Time@temp,Parse_Time@TempTime+8
 29884                           
 29885                           ; BSR set to: 1
 29886                           ;RTC.c: 383: if(*This == ' ')
 29887  0135B0  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29888  0135B4  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29889  0135B8  0E20               	movlw	32
 29890  0135BA  18DE               	xorwf	postinc2,w,c
 29891  0135BC  A4D8               	btfss	status,2,c
 29892  0135BE  D004               	goto	l14063
 29893                           
 29894                           ; BSR set to: 1
 29895                           ;RTC.c: 384: {
 29896                           ;RTC.c: 385: This++;
 29897  0135C0  0101               	movlb	1	; () banked
 29898  0135C2  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 29899  0135C4  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 29900  0135C6  D000               	goto	l14063
 29901  0135C8                     l14063:
 29902                           
 29903                           ; BSR set to: 1
 29904                           ;RTC.c: 386: }
 29905                           ;RTC.c: 389: if (*This >= 48 && *This <= 57)
 29906  0135C8  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29907  0135CC  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29908  0135D0  0E2F               	movlw	47
 29909  0135D2  64DF               	cpfsgt	indf2,c
 29910  0135D4  D013               	goto	l14071
 29911                           
 29912                           ; BSR set to: 1
 29913  0135D6  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29914  0135DA  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29915  0135DE  0E3A               	movlw	58
 29916  0135E0  60DF               	cpfslt	indf2,c
 29917  0135E2  D00C               	goto	l14071
 29918                           
 29919                           ; BSR set to: 1
 29920                           ;RTC.c: 390: {
 29921                           ;RTC.c: 391: temp = *This - 48;
 29922  0135E4  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29923  0135E8  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29924  0135EC  50DF               	movf	indf2,w,c
 29925  0135EE  0FD0               	addlw	208
 29926  0135F0  0101               	movlb	1	; () banked
 29927  0135F2  6F11               	movwf	Parse_Time@temp& (0+255),b
 29928                           
 29929                           ; BSR set to: 1
 29930                           ;RTC.c: 392: This++;
 29931  0135F4  0101               	movlb	1	; () banked
 29932  0135F6  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 29933  0135F8  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 29934                           
 29935                           ;RTC.c: 393: }
 29936  0135FA  D002               	goto	l14075
 29937  0135FC                     l14071:
 29938                           
 29939                           ; BSR set to: 1
 29940                           ;RTC.c: 394: else
 29941                           ;RTC.c: 395: {
 29942                           ;RTC.c: 396: return 0;
 29943  0135FC  0E00               	movlw	0
 29944                           
 29945                           ; BSR set to: 1
 29946  0135FE  0012               	return	
 29947  013600                     l14075:
 29948                           
 29949                           ; BSR set to: 1
 29950                           ;RTC.c: 397: }
 29951                           ;RTC.c: 399: if(*This >= 48 && *This <= 57)
 29952  013600  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29953  013604  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29954  013608  0E2F               	movlw	47
 29955  01360A  64DF               	cpfsgt	indf2,c
 29956  01360C  D018               	goto	l14085
 29957                           
 29958                           ; BSR set to: 1
 29959  01360E  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29960  013612  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29961  013616  0E3A               	movlw	58
 29962  013618  60DF               	cpfslt	indf2,c
 29963  01361A  D011               	goto	l14085
 29964                           
 29965                           ; BSR set to: 1
 29966                           ;RTC.c: 400: {
 29967                           ;RTC.c: 401: temp *= 10;
 29968  01361C  0E0A               	movlw	10
 29969  01361E  0101               	movlb	1	; () banked
 29970  013620  0311               	mulwf	Parse_Time@temp& (0+255),b
 29971  013622  50F3               	movf	prodl,w,c
 29972  013624  6F11               	movwf	Parse_Time@temp& (0+255),b
 29973                           
 29974                           ; BSR set to: 1
 29975                           ;RTC.c: 402: temp += *This - 48;
 29976  013626  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29977  01362A  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29978  01362E  50DF               	movf	indf2,w,c
 29979  013630  0FD0               	addlw	208
 29980  013632  0101               	movlb	1	; () banked
 29981  013634  2711               	addwf	Parse_Time@temp& (0+255),f,b
 29982                           
 29983                           ; BSR set to: 1
 29984                           ;RTC.c: 403: This++;
 29985  013636  0101               	movlb	1	; () banked
 29986  013638  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 29987  01363A  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 29988                           
 29989                           ;RTC.c: 404: }
 29990  01363C  D00C               	goto	l1263
 29991  01363E                     l14085:
 29992                           
 29993                           ; BSR set to: 1
 29994                           ;RTC.c: 405: else if(*This == ':')
 29995  01363E  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 29996  013642  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 29997  013646  0E3A               	movlw	58
 29998  013648  18DE               	xorwf	postinc2,w,c
 29999  01364A  B4D8               	btfsc	status,2,c
 30000  01364C  D004               	goto	l1263
 30001  01364E  D001               	goto	l14089
 30002                           
 30003                           ; BSR set to: 1
 30004                           ;RTC.c: 406: {
 30005                           ;RTC.c: 408: }
 30006  013650  D002               	goto	l1263
 30007  013652                     l14089:
 30008                           
 30009                           ; BSR set to: 1
 30010                           ;RTC.c: 409: else
 30011                           ;RTC.c: 410: {
 30012                           ;RTC.c: 411: return 0;
 30013  013652  0E00               	movlw	0
 30014                           
 30015                           ; BSR set to: 1
 30016  013654  0012               	return	
 30017  013656                     l1263:
 30018                           
 30019                           ; BSR set to: 1
 30020                           ;RTC.c: 412: }
 30021                           ;RTC.c: 413: TempTime.Hours = temp;
 30022  013656  C111  F114         	movff	Parse_Time@temp,Parse_Time@TempTime+2
 30023                           
 30024                           ; BSR set to: 1
 30025                           ;RTC.c: 415: if(*This == ':')
 30026  01365A  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30027  01365E  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30028  013662  0E3A               	movlw	58
 30029  013664  18DE               	xorwf	postinc2,w,c
 30030  013666  A4D8               	btfss	status,2,c
 30031  013668  D004               	goto	l14097
 30032                           
 30033                           ; BSR set to: 1
 30034                           ;RTC.c: 416: {
 30035                           ;RTC.c: 417: This++;
 30036  01366A  0101               	movlb	1	; () banked
 30037  01366C  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 30038  01366E  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 30039                           
 30040                           ;RTC.c: 418: }
 30041  013670  D002               	goto	l14101
 30042  013672                     l14097:
 30043                           
 30044                           ; BSR set to: 1
 30045                           ;RTC.c: 419: else
 30046                           ;RTC.c: 420: {
 30047                           ;RTC.c: 421: return 0;
 30048  013672  0E00               	movlw	0
 30049                           
 30050                           ; BSR set to: 1
 30051  013674  0012               	return	
 30052  013676                     l14101:
 30053                           
 30054                           ; BSR set to: 1
 30055                           ;RTC.c: 422: }
 30056                           ;RTC.c: 425: if (*This >= 48 && *This <= 57)
 30057  013676  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30058  01367A  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30059  01367E  0E2F               	movlw	47
 30060  013680  64DF               	cpfsgt	indf2,c
 30061  013682  D013               	goto	l14109
 30062                           
 30063                           ; BSR set to: 1
 30064  013684  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30065  013688  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30066  01368C  0E3A               	movlw	58
 30067  01368E  60DF               	cpfslt	indf2,c
 30068  013690  D00C               	goto	l14109
 30069                           
 30070                           ; BSR set to: 1
 30071                           ;RTC.c: 426: {
 30072                           ;RTC.c: 427: temp = *This - 48;
 30073  013692  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30074  013696  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30075  01369A  50DF               	movf	indf2,w,c
 30076  01369C  0FD0               	addlw	208
 30077  01369E  0101               	movlb	1	; () banked
 30078  0136A0  6F11               	movwf	Parse_Time@temp& (0+255),b
 30079                           
 30080                           ; BSR set to: 1
 30081                           ;RTC.c: 428: This++;
 30082  0136A2  0101               	movlb	1	; () banked
 30083  0136A4  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 30084  0136A6  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 30085                           
 30086                           ;RTC.c: 429: }
 30087  0136A8  D002               	goto	l14113
 30088  0136AA                     l14109:
 30089                           
 30090                           ; BSR set to: 1
 30091                           ;RTC.c: 430: else
 30092                           ;RTC.c: 431: {
 30093                           ;RTC.c: 432: return 0;
 30094  0136AA  0E00               	movlw	0
 30095                           
 30096                           ; BSR set to: 1
 30097  0136AC  0012               	return	
 30098  0136AE                     l14113:
 30099                           
 30100                           ; BSR set to: 1
 30101                           ;RTC.c: 433: }
 30102                           ;RTC.c: 435: if(*This >= 48 && *This <= 57)
 30103  0136AE  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30104  0136B2  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30105  0136B6  0E2F               	movlw	47
 30106  0136B8  64DF               	cpfsgt	indf2,c
 30107  0136BA  D018               	goto	l14123
 30108                           
 30109                           ; BSR set to: 1
 30110  0136BC  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30111  0136C0  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30112  0136C4  0E3A               	movlw	58
 30113  0136C6  60DF               	cpfslt	indf2,c
 30114  0136C8  D011               	goto	l14123
 30115                           
 30116                           ; BSR set to: 1
 30117                           ;RTC.c: 436: {
 30118                           ;RTC.c: 437: temp *= 10;
 30119  0136CA  0E0A               	movlw	10
 30120  0136CC  0101               	movlb	1	; () banked
 30121  0136CE  0311               	mulwf	Parse_Time@temp& (0+255),b
 30122  0136D0  50F3               	movf	prodl,w,c
 30123  0136D2  6F11               	movwf	Parse_Time@temp& (0+255),b
 30124                           
 30125                           ; BSR set to: 1
 30126                           ;RTC.c: 438: temp += *This - 48;
 30127  0136D4  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30128  0136D8  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30129  0136DC  50DF               	movf	indf2,w,c
 30130  0136DE  0FD0               	addlw	208
 30131  0136E0  0101               	movlb	1	; () banked
 30132  0136E2  2711               	addwf	Parse_Time@temp& (0+255),f,b
 30133                           
 30134                           ; BSR set to: 1
 30135                           ;RTC.c: 439: This++;
 30136  0136E4  0101               	movlb	1	; () banked
 30137  0136E6  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 30138  0136E8  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 30139                           
 30140                           ;RTC.c: 440: }
 30141  0136EA  D00C               	goto	l1271
 30142  0136EC                     l14123:
 30143                           
 30144                           ; BSR set to: 1
 30145                           ;RTC.c: 441: else if(*This == ':')
 30146  0136EC  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30147  0136F0  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30148  0136F4  0E3A               	movlw	58
 30149  0136F6  18DE               	xorwf	postinc2,w,c
 30150  0136F8  B4D8               	btfsc	status,2,c
 30151  0136FA  D004               	goto	l1271
 30152  0136FC  D001               	goto	l14127
 30153                           
 30154                           ; BSR set to: 1
 30155                           ;RTC.c: 442: {
 30156                           ;RTC.c: 444: }
 30157  0136FE  D002               	goto	l1271
 30158  013700                     l14127:
 30159                           
 30160                           ; BSR set to: 1
 30161                           ;RTC.c: 445: else
 30162                           ;RTC.c: 446: {
 30163                           ;RTC.c: 447: return 0;
 30164  013700  0E00               	movlw	0
 30165                           
 30166                           ; BSR set to: 1
 30167  013702  0012               	return	
 30168  013704                     l1271:
 30169                           
 30170                           ; BSR set to: 1
 30171                           ;RTC.c: 448: }
 30172                           ;RTC.c: 449: TempTime.Minutes = temp;
 30173  013704  C111  F113         	movff	Parse_Time@temp,Parse_Time@TempTime+1
 30174                           
 30175                           ; BSR set to: 1
 30176                           ;RTC.c: 451: if(*This == ':')
 30177  013708  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30178  01370C  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30179  013710  0E3A               	movlw	58
 30180  013712  18DE               	xorwf	postinc2,w,c
 30181  013714  A4D8               	btfss	status,2,c
 30182  013716  D004               	goto	l14135
 30183                           
 30184                           ; BSR set to: 1
 30185                           ;RTC.c: 452: {
 30186                           ;RTC.c: 453: This++;
 30187  013718  0101               	movlb	1	; () banked
 30188  01371A  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 30189  01371C  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 30190                           
 30191                           ;RTC.c: 454: }
 30192  01371E  D002               	goto	l14139
 30193  013720                     l14135:
 30194                           
 30195                           ; BSR set to: 1
 30196                           ;RTC.c: 455: else
 30197                           ;RTC.c: 456: {
 30198                           ;RTC.c: 457: return 0;
 30199  013720  0E00               	movlw	0
 30200                           
 30201                           ; BSR set to: 1
 30202  013722  0012               	return	
 30203  013724                     l14139:
 30204                           
 30205                           ; BSR set to: 1
 30206                           ;RTC.c: 458: }
 30207                           ;RTC.c: 461: if (*This >= 48 && *This <= 57)
 30208  013724  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30209  013728  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30210  01372C  0E2F               	movlw	47
 30211  01372E  64DF               	cpfsgt	indf2,c
 30212  013730  D013               	goto	l14147
 30213                           
 30214                           ; BSR set to: 1
 30215  013732  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30216  013736  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30217  01373A  0E3A               	movlw	58
 30218  01373C  60DF               	cpfslt	indf2,c
 30219  01373E  D00C               	goto	l14147
 30220                           
 30221                           ; BSR set to: 1
 30222                           ;RTC.c: 462: {
 30223                           ;RTC.c: 463: temp = *This - 48;
 30224  013740  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30225  013744  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30226  013748  50DF               	movf	indf2,w,c
 30227  01374A  0FD0               	addlw	208
 30228  01374C  0101               	movlb	1	; () banked
 30229  01374E  6F11               	movwf	Parse_Time@temp& (0+255),b
 30230                           
 30231                           ; BSR set to: 1
 30232                           ;RTC.c: 464: This++;
 30233  013750  0101               	movlb	1	; () banked
 30234  013752  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 30235  013754  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 30236                           
 30237                           ;RTC.c: 465: }
 30238  013756  D002               	goto	l14151
 30239  013758                     l14147:
 30240                           
 30241                           ; BSR set to: 1
 30242                           ;RTC.c: 466: else
 30243                           ;RTC.c: 467: {
 30244                           ;RTC.c: 468: return 0;
 30245  013758  0E00               	movlw	0
 30246                           
 30247                           ; BSR set to: 1
 30248  01375A  0012               	return	
 30249  01375C                     l14151:
 30250                           
 30251                           ; BSR set to: 1
 30252                           ;RTC.c: 469: }
 30253                           ;RTC.c: 470: if (*This >= 48 && *This <= 57)
 30254  01375C  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30255  013760  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30256  013764  0E2F               	movlw	47
 30257  013766  64DF               	cpfsgt	indf2,c
 30258  013768  D018               	goto	l14161
 30259                           
 30260                           ; BSR set to: 1
 30261  01376A  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30262  01376E  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30263  013772  0E3A               	movlw	58
 30264  013774  60DF               	cpfslt	indf2,c
 30265  013776  D011               	goto	l14161
 30266                           
 30267                           ; BSR set to: 1
 30268                           ;RTC.c: 471: {
 30269                           ;RTC.c: 472: temp *= 10;
 30270  013778  0E0A               	movlw	10
 30271  01377A  0101               	movlb	1	; () banked
 30272  01377C  0311               	mulwf	Parse_Time@temp& (0+255),b
 30273  01377E  50F3               	movf	prodl,w,c
 30274  013780  6F11               	movwf	Parse_Time@temp& (0+255),b
 30275                           
 30276                           ; BSR set to: 1
 30277                           ;RTC.c: 473: temp += *This - 48;
 30278  013782  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30279  013786  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30280  01378A  50DF               	movf	indf2,w,c
 30281  01378C  0FD0               	addlw	208
 30282  01378E  0101               	movlb	1	; () banked
 30283  013790  2711               	addwf	Parse_Time@temp& (0+255),f,b
 30284                           
 30285                           ; BSR set to: 1
 30286                           ;RTC.c: 474: This++;
 30287  013792  0101               	movlb	1	; () banked
 30288  013794  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 30289  013796  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 30290                           
 30291                           ;RTC.c: 475: }
 30292  013798  D002               	goto	l1279
 30293  01379A                     l14161:
 30294                           
 30295                           ; BSR set to: 1
 30296                           ;RTC.c: 476: else
 30297                           ;RTC.c: 477: {
 30298                           ;RTC.c: 478: return 0;
 30299  01379A  0E00               	movlw	0
 30300                           
 30301                           ; BSR set to: 1
 30302  01379C  0012               	return	
 30303  01379E                     l1279:
 30304                           
 30305                           ; BSR set to: 1
 30306                           ;RTC.c: 479: }
 30307                           ;RTC.c: 480: TempTime.Seconds = temp;
 30308  01379E  C111  F112         	movff	Parse_Time@temp,Parse_Time@TempTime
 30309                           
 30310                           ; BSR set to: 1
 30311                           ;RTC.c: 482: if(*This == ' ')
 30312  0137A2  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30313  0137A6  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30314  0137AA  0E20               	movlw	32
 30315  0137AC  18DE               	xorwf	postinc2,w,c
 30316  0137AE  A4D8               	btfss	status,2,c
 30317  0137B0  D004               	goto	l14169
 30318                           
 30319                           ; BSR set to: 1
 30320                           ;RTC.c: 483: {
 30321                           ;RTC.c: 484: This++;
 30322  0137B2  0101               	movlb	1	; () banked
 30323  0137B4  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 30324  0137B6  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 30325  0137B8  D000               	goto	l14169
 30326  0137BA                     l14169:
 30327                           
 30328                           ; BSR set to: 1
 30329                           ;RTC.c: 485: }
 30330                           ;RTC.c: 486: if(*This == 'a')
 30331  0137BA  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30332  0137BE  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30333  0137C2  0E61               	movlw	97
 30334  0137C4  18DE               	xorwf	postinc2,w,c
 30335  0137C6  A4D8               	btfss	status,2,c
 30336  0137C8  D010               	goto	l14181
 30337                           
 30338                           ; BSR set to: 1
 30339                           ;RTC.c: 487: {
 30340                           ;RTC.c: 488: This++;
 30341  0137CA  0101               	movlb	1	; () banked
 30342  0137CC  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 30343  0137CE  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 30344                           
 30345                           ; BSR set to: 1
 30346                           ;RTC.c: 489: if(*This == 'm')
 30347  0137D0  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30348  0137D4  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30349  0137D8  0E6D               	movlw	109
 30350  0137DA  18DE               	xorwf	postinc2,w,c
 30351  0137DC  A4D8               	btfss	status,2,c
 30352  0137DE  D002               	goto	l14177
 30353                           
 30354                           ; BSR set to: 1
 30355                           ;RTC.c: 490: {
 30356                           ;RTC.c: 491: TempTime.HoursAM_PM = 0;
 30357  0137E0  0E00               	movlw	0
 30358  0137E2  D017               	goto	L25
 30359  0137E4                     l14177:
 30360                           
 30361                           ; BSR set to: 1
 30362                           ;RTC.c: 493: else
 30363                           ;RTC.c: 494: {
 30364                           ;RTC.c: 495: return 0;
 30365  0137E4  0E00               	movlw	0
 30366                           
 30367                           ; BSR set to: 1
 30368  0137E6  0012               	return	
 30369                           
 30370                           ; BSR set to: 1
 30371                           ;RTC.c: 496: }
 30372                           ;RTC.c: 497: }
 30373  0137E8  D01D               	goto	l14197
 30374  0137EA                     l14181:
 30375                           
 30376                           ; BSR set to: 1
 30377                           ;RTC.c: 498: else if(*This == 'p')
 30378  0137EA  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30379  0137EE  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30380  0137F2  0E70               	movlw	112
 30381  0137F4  18DE               	xorwf	postinc2,w,c
 30382  0137F6  A4D8               	btfss	status,2,c
 30383  0137F8  D7F5               	goto	l14177
 30384                           
 30385                           ; BSR set to: 1
 30386                           ;RTC.c: 499: {
 30387                           ;RTC.c: 500: This++;
 30388  0137FA  0101               	movlb	1	; () banked
 30389  0137FC  4B0E               	infsnz	Parse_Time@This& (0+255),f,b
 30390  0137FE  2B0F               	incf	(Parse_Time@This+1)& (0+255),f,b
 30391                           
 30392                           ; BSR set to: 1
 30393                           ;RTC.c: 501: if(*This == 'm')
 30394  013800  C10E  FFD9         	movff	Parse_Time@This,fsr2l
 30395  013804  C10F  FFDA         	movff	Parse_Time@This+1,fsr2h
 30396  013808  0E6D               	movlw	109
 30397  01380A  18DE               	xorwf	postinc2,w,c
 30398  01380C  A4D8               	btfss	status,2,c
 30399  01380E  D7EA               	goto	l14177
 30400                           
 30401                           ; BSR set to: 1
 30402                           ;RTC.c: 502: {
 30403                           ;RTC.c: 503: TempTime.HoursAM_PM = 1;
 30404  013810  0E01               	movlw	1
 30405  013812                     L25:
 30406  013812  0101               	movlb	1	; () banked
 30407  013814  6F16               	movwf	(Parse_Time@TempTime+4)& (0+255),b
 30408                           
 30409                           ;RTC.c: 504: }
 30410  013816  D006               	goto	l14197
 30411                           
 30412                           ; BSR set to: 1
 30413  013818  D7E5               	goto	l14177
 30414                           
 30415                           ; BSR set to: 1
 30416                           
 30417                           ; BSR set to: 1
 30418                           ;RTC.c: 505: else
 30419                           ;RTC.c: 506: {
 30420                           ;RTC.c: 507: return 0;
 30421  01381A  0012               	return	
 30422                           
 30423                           ; BSR set to: 1
 30424                           ;RTC.c: 508: }
 30425                           ;RTC.c: 509: }
 30426  01381C  D003               	goto	l14197
 30427                           
 30428                           ; BSR set to: 1
 30429  01381E  D7E2               	goto	l14177
 30430                           
 30431                           ; BSR set to: 1
 30432                           
 30433                           ; BSR set to: 1
 30434                           ;RTC.c: 510: else
 30435                           ;RTC.c: 511: {
 30436                           ;RTC.c: 512: return 0;
 30437  013820  0012               	return	
 30438                           
 30439                           ; BSR set to: 1
 30440  013822  D000               	goto	l14197
 30441  013824                     l14197:
 30442                           
 30443                           ; BSR set to: 1
 30444                           ;RTC.c: 513: }
 30445                           ;RTC.c: 514: if(TempTime.Month > 12 || TempTime.Date > 31 || TempTime.Year > 99 || TempT
      +                          ime.Hours > 12 || TempTime.Minutes > 59 || TempTime.Seconds > 59)
 30446  013824  0E0D               	movlw	13
 30447  013826  0101               	movlb	1	; () banked
 30448  013828  6119               	cpfslt	(Parse_Time@TempTime+7)& (0+255),b
 30449  01382A  D015               	goto	l14209
 30450                           
 30451                           ; BSR set to: 1
 30452  01382C  0E20               	movlw	32
 30453  01382E  0101               	movlb	1	; () banked
 30454  013830  6118               	cpfslt	(Parse_Time@TempTime+6)& (0+255),b
 30455  013832  D011               	goto	l14209
 30456                           
 30457                           ; BSR set to: 1
 30458  013834  0E64               	movlw	100
 30459  013836  0101               	movlb	1	; () banked
 30460  013838  611A               	cpfslt	(Parse_Time@TempTime+8)& (0+255),b
 30461  01383A  D00D               	goto	l14209
 30462                           
 30463                           ; BSR set to: 1
 30464  01383C  0E0D               	movlw	13
 30465  01383E  0101               	movlb	1	; () banked
 30466  013840  6114               	cpfslt	(Parse_Time@TempTime+2)& (0+255),b
 30467  013842  D009               	goto	l14209
 30468                           
 30469                           ; BSR set to: 1
 30470  013844  0E3C               	movlw	60
 30471  013846  0101               	movlb	1	; () banked
 30472  013848  6113               	cpfslt	(Parse_Time@TempTime+1)& (0+255),b
 30473  01384A  D005               	goto	l14209
 30474                           
 30475                           ; BSR set to: 1
 30476  01384C  0E3B               	movlw	59
 30477  01384E  0101               	movlb	1	; () banked
 30478  013850  6512               	cpfsgt	Parse_Time@TempTime& (0+255),b
 30479  013852  D003               	goto	l1289
 30480  013854  D000               	goto	l14209
 30481  013856                     l14209:
 30482                           
 30483                           ; BSR set to: 1
 30484                           ;RTC.c: 515: {
 30485                           ;RTC.c: 516: return 0;
 30486  013856  0E00               	movlw	0
 30487                           
 30488                           ; BSR set to: 1
 30489                           ;RTC.c: 517: }
 30490                           
 30491                           ; BSR set to: 1
 30492  013858  0012               	return	
 30493  01385A                     l1289:
 30494                           
 30495                           ; BSR set to: 1
 30496                           ;RTC.c: 518: else
 30497                           ;RTC.c: 519: {
 30498                           ;RTC.c: 520: NowTime.Month = TempTime.Month;
 30499  01385A  C119  F19A         	movff	Parse_Time@TempTime+7,_NowTime+7
 30500                           
 30501                           ;RTC.c: 521: NowTime.Date = TempTime.Date;
 30502  01385E  C118  F199         	movff	Parse_Time@TempTime+6,_NowTime+6
 30503                           
 30504                           ;RTC.c: 522: NowTime.Year= TempTime.Year;
 30505  013862  C11A  F19B         	movff	Parse_Time@TempTime+8,_NowTime+8
 30506                           
 30507                           ;RTC.c: 523: NowTime.Hours = TempTime.Hours;
 30508  013866  C114  F195         	movff	Parse_Time@TempTime+2,_NowTime+2
 30509                           
 30510                           ;RTC.c: 524: NowTime.Minutes = TempTime.Minutes;
 30511  01386A  C113  F194         	movff	Parse_Time@TempTime+1,_NowTime+1
 30512                           
 30513                           ;RTC.c: 525: NowTime.Seconds= TempTime.Seconds;
 30514  01386E  C112  F193         	movff	Parse_Time@TempTime,_NowTime
 30515                           
 30516                           ;RTC.c: 526: NowTime.HoursAM_PM = TempTime.HoursAM_PM;
 30517  013872  C116  F197         	movff	Parse_Time@TempTime+4,_NowTime+4
 30518                           
 30519                           ; BSR set to: 1
 30520                           ;RTC.c: 527: return 1;
 30521  013876  0E01               	movlw	1
 30522                           
 30523                           ; BSR set to: 1
 30524  013878  0012               	return	
 30525                           
 30526                           ; BSR set to: 1
 30527                           
 30528                           ; BSR set to: 1
 30529  01387A  0012               	return		;funcret
 30530  01387C                     __end_of_Parse_Time:
 30531                           	opt stack 0
 30532                           tblptru	equ	0xFF8
 30533                           tblptrh	equ	0xFF7
 30534                           tblptrl	equ	0xFF6
 30535                           tablat	equ	0xFF5
 30536                           prodh	equ	0xFF4
 30537                           prodl	equ	0xFF3
 30538                           intcon	equ	0xFF2
 30539                           intcon2	equ	0xFF1
 30540                           postinc0	equ	0xFEE
 30541                           plusw0	equ	0xFEB
 30542                           wreg	equ	0xFE8
 30543                           indf1	equ	0xFE7
 30544                           postdec1	equ	0xFE5
 30545                           fsr1h	equ	0xFE2
 30546                           fsr1l	equ	0xFE1
 30547                           indf2	equ	0xFDF
 30548                           postinc2	equ	0xFDE
 30549                           postdec2	equ	0xFDD
 30550                           plusw2	equ	0xFDB
 30551                           fsr2h	equ	0xFDA
 30552                           fsr2l	equ	0xFD9
 30553                           status	equ	0xFD8
 30554                           
 30555 ;; *************** function _LCDdisplayFeedback *****************
 30556 ;; Defined at:
 30557 ;;		line 255 in file "LCD.c"
 30558 ;; Parameters:    Size  Location     Type
 30559 ;;  Text            2   32[BANK1 ] PTR const unsigned char 
 30560 ;;		 -> STR_318(16), STR_316(16), STR_262(16), STR_260(16), 
 30561 ;;		 -> STR_257(15), STR_205(16), STR_203(16), STR_201(13), 
 30562 ;;		 -> STR_188(14), STR_186(16), STR_184(15), STR_173(16), 
 30563 ;;		 -> Command@buf(200), STR_169(14), STR_167(16), STR_165(15), 
 30564 ;;		 -> STR_147(13), STR_145(15), STR_141(14), STR_137(16), 
 30565 ;;		 -> STR_124(16), STR_116(16), STR_114(16), STR_111(15), 
 30566 ;;		 -> STR_108(15), STR_105(14), STR_102(16), STR_90(16), 
 30567 ;;		 -> STR_83(16), STR_81(15), STR_78(14), STR_75(16), 
 30568 ;;		 -> STR_59(12), STR_57(9), STR_54(8), STR_51(13), 
 30569 ;;		 -> STR_48(9), STR_45(8), STR_42(13), 
 30570 ;; Auto vars:     Size  Location     Type
 30571 ;;		None
 30572 ;; Return value:  Size  Location     Type
 30573 ;;		None               void
 30574 ;; Registers used:
 30575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30576 ;; Tracked objects:
 30577 ;;		On entry : 0/0
 30578 ;;		On exit  : 0/0
 30579 ;;		Unchanged: 0/0
 30580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30581 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30584 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30585 ;;Total ram usage:        2 bytes
 30586 ;; Hardware stack levels used:    1
 30587 ;; Hardware stack levels required when called:   11
 30588 ;; This function calls:
 30589 ;;		_ClearLCD
 30590 ;;		_LCDPrintString
 30591 ;;		_Reset_Timer1
 30592 ;;		_SetLCDcursor
 30593 ;;		_Start_Timer1
 30594 ;; This function is called by:
 30595 ;;		_Command
 30596 ;; This function uses a non-reentrant model
 30597 ;;
 30598                           
 30599                           	psect	text84
 30600  0009F6                     __ptext84:
 30601                           	opt stack 0
 30602  0009F6                     _LCDdisplayFeedback:
 30603                           	opt stack 18
 30604                           
 30605                           ;LCD.c: 257: ClearLCD();
 30606                           
 30607                           ; BSR set to: 1
 30608                           ;incstack = 0
 30609  0009F6  ECF4  F006         	call	_ClearLCD	;wreg free
 30610                           
 30611                           ;LCD.c: 258: SetLCDcursor(1, 0);
 30612  0009FA  0E00               	movlw	0
 30613  0009FC  0101               	movlb	1	; () banked
 30614  0009FE  6F1C               	movwf	SetLCDcursor@Col& (0+255),b
 30615  000A00  0E01               	movlw	1
 30616  000A02  EC9F  F004         	call	_SetLCDcursor
 30617                           
 30618                           ;LCD.c: 259: LCDPrintString(Text);
 30619  000A06  C120  F11C         	movff	LCDdisplayFeedback@Text,LCDPrintString@Text
 30620  000A0A  C121  F11D         	movff	LCDdisplayFeedback@Text+1,LCDPrintString@Text+1
 30621  000A0E  ECC7  F0BB         	call	_LCDPrintString	;wreg free
 30622                           
 30623                           ;LCD.c: 260: LCDwait = 1;
 30624  000A12  0E01               	movlw	1
 30625  000A14  0101               	movlb	1	; () banked
 30626  000A16  6F9C               	movwf	_LCDwait& (0+255),b
 30627                           
 30628                           ; BSR set to: 1
 30629                           ;LCD.c: 261: Reset_Timer1();
 30630  000A18  ECAA  F007         	call	_Reset_Timer1	;wreg free
 30631                           
 30632                           ;LCD.c: 262: Start_Timer1();
 30633  000A1C  ECA4  F007         	call	_Start_Timer1	;wreg free
 30634                           
 30635                           ;LCD.c: 263: LCDclearCount =0;
 30636  000A20  0E00               	movlw	0
 30637  000A22  6E4F               	movwf	_LCDclearCount,c
 30638  000A24  0E00               	movlw	0
 30639  000A26  6E50               	movwf	_LCDclearCount+1,c
 30640  000A28  0E00               	movlw	0
 30641  000A2A  6E51               	movwf	_LCDclearCount+2,c
 30642  000A2C  0E00               	movlw	0
 30643  000A2E  6E52               	movwf	_LCDclearCount+3,c
 30644  000A30  0012               	return		;funcret
 30645  000A32                     __end_of_LCDdisplayFeedback:
 30646                           	opt stack 0
 30647                           tblptru	equ	0xFF8
 30648                           tblptrh	equ	0xFF7
 30649                           tblptrl	equ	0xFF6
 30650                           tablat	equ	0xFF5
 30651                           prodh	equ	0xFF4
 30652                           prodl	equ	0xFF3
 30653                           intcon	equ	0xFF2
 30654                           intcon2	equ	0xFF1
 30655                           postinc0	equ	0xFEE
 30656                           plusw0	equ	0xFEB
 30657                           wreg	equ	0xFE8
 30658                           indf1	equ	0xFE7
 30659                           postdec1	equ	0xFE5
 30660                           fsr1h	equ	0xFE2
 30661                           fsr1l	equ	0xFE1
 30662                           indf2	equ	0xFDF
 30663                           postinc2	equ	0xFDE
 30664                           postdec2	equ	0xFDD
 30665                           plusw2	equ	0xFDB
 30666                           fsr2h	equ	0xFDA
 30667                           fsr2l	equ	0xFD9
 30668                           status	equ	0xFD8
 30669                           
 30670 ;; *************** function _SetLCDcursor *****************
 30671 ;; Defined at:
 30672 ;;		line 195 in file "LCD.c"
 30673 ;; Parameters:    Size  Location     Type
 30674 ;;  Row             1    wreg     unsigned char 
 30675 ;;  Col             1   28[BANK1 ] unsigned char 
 30676 ;; Auto vars:     Size  Location     Type
 30677 ;;  Row             1   29[BANK1 ] unsigned char 
 30678 ;;  address         1   30[BANK1 ] unsigned char 
 30679 ;; Return value:  Size  Location     Type
 30680 ;;		None               void
 30681 ;; Registers used:
 30682 ;;		wreg, status,2, status,0, cstack
 30683 ;; Tracked objects:
 30684 ;;		On entry : 0/0
 30685 ;;		On exit  : 0/0
 30686 ;;		Unchanged: 0/0
 30687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30688 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 30689 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30691 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 30692 ;;Total ram usage:        3 bytes
 30693 ;; Hardware stack levels used:    1
 30694 ;; Hardware stack levels required when called:   10
 30695 ;; This function calls:
 30696 ;;		_SendLCDbyte
 30697 ;; This function is called by:
 30698 ;;		_main
 30699 ;;		_Command
 30700 ;;		_LCDdisplayFeedback
 30701 ;; This function uses a non-reentrant model
 30702 ;;
 30703                           
 30704                           	psect	text85
 30705  00093E                     __ptext85:
 30706                           	opt stack 0
 30707  00093E                     _SetLCDcursor:
 30708                           	opt stack 20
 30709                           
 30710                           ;incstack = 0
 30711                           ;SetLCDcursor@Row stored from wreg
 30712  00093E  0101               	movlb	1	; () banked
 30713  000940  6F1D               	movwf	SetLCDcursor@Row& (0+255),b
 30714                           
 30715                           ; BSR set to: 1
 30716                           ;LCD.c: 197: char address;
 30717                           ;LCD.c: 200: if (Row == 0)
 30718  000942  0101               	movlb	1	; () banked
 30719  000944  511D               	movf	SetLCDcursor@Row& (0+255),w,b
 30720  000946  0101               	movlb	1	; () banked
 30721  000948  A4D8               	btfss	status,2,c
 30722  00094A  D002               	goto	l12383
 30723                           
 30724                           ; BSR set to: 1
 30725                           ;LCD.c: 201: {
 30726                           ;LCD.c: 202: address = 0;
 30727  00094C  0E00               	movlw	0
 30728  00094E  D001               	goto	L26
 30729  000950                     l12383:
 30730                           
 30731                           ; BSR set to: 1
 30732                           ;LCD.c: 204: else
 30733                           ;LCD.c: 205: {
 30734                           ;LCD.c: 206: address = 0x40;
 30735  000950  0E40               	movlw	64
 30736  000952                     L26:
 30737  000952  0101               	movlb	1	; () banked
 30738  000954  6F1E               	movwf	SetLCDcursor@address& (0+255),b
 30739  000956  D000               	goto	l12385
 30740  000958                     l12385:
 30741                           
 30742                           ; BSR set to: 1
 30743                           ;LCD.c: 207: }
 30744                           ;LCD.c: 209: address |= Col;
 30745  000958  0101               	movlb	1	; () banked
 30746  00095A  511C               	movf	SetLCDcursor@Col& (0+255),w,b
 30747  00095C  0101               	movlb	1	; () banked
 30748  00095E  131E               	iorwf	SetLCDcursor@address& (0+255),f,b
 30749                           
 30750                           ; BSR set to: 1
 30751                           ;LCD.c: 210: if(!LCDwait)
 30752  000960  0101               	movlb	1	; () banked
 30753  000962  519C               	movf	_LCDwait& (0+255),w,b
 30754  000964  A4D8               	btfss	status,2,c
 30755  000966  0012               	return	
 30756                           
 30757                           ; BSR set to: 1
 30758                           ;LCD.c: 211: {
 30759                           ;LCD.c: 212: SendLCDbyte(0x80 | address, 0);
 30760  000968  0E00               	movlw	0
 30761  00096A  0101               	movlb	1	; () banked
 30762  00096C  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
 30763  00096E  0101               	movlb	1	; () banked
 30764  000970  511E               	movf	SetLCDcursor@address& (0+255),w,b
 30765  000972  0980               	iorlw	128
 30766  000974  EC59  F0B0         	call	_SendLCDbyte
 30767  000978  0012               	return	
 30768  00097A  0012               	return		;funcret
 30769  00097C                     __end_of_SetLCDcursor:
 30770                           	opt stack 0
 30771                           tblptru	equ	0xFF8
 30772                           tblptrh	equ	0xFF7
 30773                           tblptrl	equ	0xFF6
 30774                           tablat	equ	0xFF5
 30775                           prodh	equ	0xFF4
 30776                           prodl	equ	0xFF3
 30777                           intcon	equ	0xFF2
 30778                           intcon2	equ	0xFF1
 30779                           postinc0	equ	0xFEE
 30780                           plusw0	equ	0xFEB
 30781                           wreg	equ	0xFE8
 30782                           indf1	equ	0xFE7
 30783                           postdec1	equ	0xFE5
 30784                           fsr1h	equ	0xFE2
 30785                           fsr1l	equ	0xFE1
 30786                           indf2	equ	0xFDF
 30787                           postinc2	equ	0xFDE
 30788                           postdec2	equ	0xFDD
 30789                           plusw2	equ	0xFDB
 30790                           fsr2h	equ	0xFDA
 30791                           fsr2l	equ	0xFD9
 30792                           status	equ	0xFD8
 30793                           
 30794 ;; *************** function _LCDPrintString *****************
 30795 ;; Defined at:
 30796 ;;		line 236 in file "LCD.c"
 30797 ;; Parameters:    Size  Location     Type
 30798 ;;  Text            2   28[BANK1 ] PTR const unsigned char 
 30799 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 30800 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 30801 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 30802 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 30803 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 30804 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 30805 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 30806 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 30807 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 30808 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 30809 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 30810 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 30811 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 30812 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 30813 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 30814 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 30815 ;;		 -> low_isr@LCD_TEMP(16), 
 30816 ;; Auto vars:     Size  Location     Type
 30817 ;;  c               2   30[BANK1 ] PTR unsigned char 
 30818 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 30819 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 30820 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 30821 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 30822 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 30823 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 30824 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 30825 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 30826 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 30827 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 30828 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 30829 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 30830 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 30831 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 30832 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 30833 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 30834 ;;		 -> low_isr@LCD_TEMP(16), 
 30835 ;; Return value:  Size  Location     Type
 30836 ;;		None               void
 30837 ;; Registers used:
 30838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30839 ;; Tracked objects:
 30840 ;;		On entry : 0/0
 30841 ;;		On exit  : 0/0
 30842 ;;		Unchanged: 0/0
 30843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30844 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30845 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30847 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 30848 ;;Total ram usage:        4 bytes
 30849 ;; Hardware stack levels used:    1
 30850 ;; Hardware stack levels required when called:   10
 30851 ;; This function calls:
 30852 ;;		_SendLCDbyte
 30853 ;; This function is called by:
 30854 ;;		_main
 30855 ;;		_Command
 30856 ;;		_LCDdisplayFeedback
 30857 ;; This function uses a non-reentrant model
 30858 ;;
 30859                           
 30860                           	psect	text86
 30861  01778E                     __ptext86:
 30862                           	opt stack 0
 30863  01778E                     _LCDPrintString:
 30864                           	opt stack 20
 30865                           
 30866                           ;LCD.c: 238: unsigned char *c;
 30867                           ;LCD.c: 240: c = (unsigned char*)Text;
 30868                           
 30869                           ;incstack = 0
 30870  01778E  C11C  F11E         	movff	LCDPrintString@Text,LCDPrintString@c
 30871  017792  C11D  F11F         	movff	LCDPrintString@Text+1,LCDPrintString@c+1
 30872                           
 30873                           ;LCD.c: 242: while ((c != 0) && (*c != 0))
 30874  017796  D01A               	goto	l12397
 30875  017798                     l12393:
 30876                           
 30877                           ;LCD.c: 243: {
 30878                           ;LCD.c: 244: SendLCDbyte(*c, 1);
 30879  017798  0E01               	movlw	1
 30880  01779A  0101               	movlb	1	; () banked
 30881  01779C  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
 30882  01779E  C11E  FFF6         	movff	LCDPrintString@c,tblptrl
 30883  0177A2  C11F  FFF7         	movff	LCDPrintString@c+1,tblptrh
 30884  0177A6  0E00               	movlw	low (__mediumconst shr (0+16))
 30885  0177A8  6EF8               	movwf	tblptru,c
 30886  0177AA  0E0C               	movlw	(high __ramtop+-1)
 30887  0177AC  64F7               	cpfsgt	tblptrh,c
 30888  0177AE  D003               	bra	u15217
 30889  0177B0  0008               	tblrd		*
 30890  0177B2  50F5               	movf	tablat,w,c
 30891  0177B4  D005               	bra	u15210
 30892  0177B6                     u15217:
 30893  0177B6  CFF6 FFE9          	movff	tblptrl,fsr0l
 30894  0177BA  CFF7 FFEA          	movff	tblptrh,fsr0h
 30895  0177BE  50EF               	movf	indf0,w,c
 30896  0177C0                     u15210:
 30897  0177C0  EC59  F0B0         	call	_SendLCDbyte
 30898                           
 30899                           ;LCD.c: 245: c++;
 30900  0177C4  0101               	movlb	1	; () banked
 30901  0177C6  4B1E               	infsnz	LCDPrintString@c& (0+255),f,b
 30902  0177C8  2B1F               	incf	(LCDPrintString@c+1)& (0+255),f,b
 30903  0177CA  D000               	goto	l12397
 30904  0177CC                     l12397:
 30905  0177CC  0101               	movlb	1	; () banked
 30906  0177CE  511E               	movf	LCDPrintString@c& (0+255),w,b
 30907  0177D0  0101               	movlb	1	; () banked
 30908  0177D2  111F               	iorwf	(LCDPrintString@c+1)& (0+255),w,b
 30909  0177D4  B4D8               	btfsc	status,2,c
 30910  0177D6  0012               	return	
 30911                           
 30912                           ; BSR set to: 1
 30913  0177D8  C11E  FFF6         	movff	LCDPrintString@c,tblptrl
 30914  0177DC  C11F  FFF7         	movff	LCDPrintString@c+1,tblptrh
 30915  0177E0  0E00               	movlw	low (__mediumconst shr (0+16))
 30916  0177E2  6EF8               	movwf	tblptru,c
 30917  0177E4  0E0C               	movlw	(high __ramtop+-1)
 30918  0177E6  64F7               	cpfsgt	tblptrh,c
 30919  0177E8  D003               	bra	u15237
 30920  0177EA  0008               	tblrd		*
 30921  0177EC  50F5               	movf	tablat,w,c
 30922  0177EE  D005               	bra	u15230
 30923  0177F0                     u15237:
 30924  0177F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 30925  0177F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 30926  0177F8  50EF               	movf	indf0,w,c
 30927  0177FA                     u15230:
 30928  0177FA  0900               	iorlw	0
 30929  0177FC  B4D8               	btfsc	status,2,c
 30930  0177FE  0012               	return	
 30931  017800  D7CB               	goto	l12393
 30932  017802  0012               	return	
 30933  017804  0012               	return		;funcret
 30934  017806                     __end_of_LCDPrintString:
 30935                           	opt stack 0
 30936                           tblptru	equ	0xFF8
 30937                           tblptrh	equ	0xFF7
 30938                           tblptrl	equ	0xFF6
 30939                           tablat	equ	0xFF5
 30940                           prodh	equ	0xFF4
 30941                           prodl	equ	0xFF3
 30942                           intcon	equ	0xFF2
 30943                           intcon2	equ	0xFF1
 30944                           indf0	equ	0xFEF
 30945                           postinc0	equ	0xFEE
 30946                           plusw0	equ	0xFEB
 30947                           fsr0h	equ	0xFEA
 30948                           fsr0l	equ	0xFE9
 30949                           wreg	equ	0xFE8
 30950                           indf1	equ	0xFE7
 30951                           postdec1	equ	0xFE5
 30952                           fsr1h	equ	0xFE2
 30953                           fsr1l	equ	0xFE1
 30954                           indf2	equ	0xFDF
 30955                           postinc2	equ	0xFDE
 30956                           postdec2	equ	0xFDD
 30957                           plusw2	equ	0xFDB
 30958                           fsr2h	equ	0xFDA
 30959                           fsr2l	equ	0xFD9
 30960                           status	equ	0xFD8
 30961                           
 30962 ;; *************** function _ClearLCD *****************
 30963 ;; Defined at:
 30964 ;;		line 222 in file "LCD.c"
 30965 ;; Parameters:    Size  Location     Type
 30966 ;;		None
 30967 ;; Auto vars:     Size  Location     Type
 30968 ;;		None
 30969 ;; Return value:  Size  Location     Type
 30970 ;;		None               void
 30971 ;; Registers used:
 30972 ;;		wreg, status,2, status,0, cstack
 30973 ;; Tracked objects:
 30974 ;;		On entry : 0/0
 30975 ;;		On exit  : 0/0
 30976 ;;		Unchanged: 0/0
 30977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30982 ;;Total ram usage:        0 bytes
 30983 ;; Hardware stack levels used:    1
 30984 ;; Hardware stack levels required when called:   10
 30985 ;; This function calls:
 30986 ;;		_SendLCDbyte
 30987 ;; This function is called by:
 30988 ;;		_main
 30989 ;;		_init_LCD
 30990 ;;		_LCDdisplayFeedback
 30991 ;; This function uses a non-reentrant model
 30992 ;;
 30993                           
 30994                           	psect	text87
 30995  000DE8                     __ptext87:
 30996                           	opt stack 0
 30997  000DE8                     _ClearLCD:
 30998                           	opt stack 19
 30999                           
 31000                           ;LCD.c: 227: SendLCDbyte(0x01, 0);
 31001                           
 31002                           ;incstack = 0
 31003  000DE8  0E00               	movlw	0
 31004  000DEA  0101               	movlb	1	; () banked
 31005  000DEC  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
 31006  000DEE  0E01               	movlw	1
 31007  000DF0  EC59  F0B0         	call	_SendLCDbyte
 31008                           
 31009                           ;LCD.c: 228: SendLCDbyte(0x02, 0);
 31010  000DF4  0E00               	movlw	0
 31011  000DF6  0101               	movlb	1	; () banked
 31012  000DF8  6F18               	movwf	SendLCDbyte@isCommand& (0+255),b
 31013  000DFA  0E02               	movlw	2
 31014  000DFC  EC59  F0B0         	call	_SendLCDbyte
 31015  000E00  0012               	return		;funcret
 31016  000E02                     __end_of_ClearLCD:
 31017                           	opt stack 0
 31018                           tblptru	equ	0xFF8
 31019                           tblptrh	equ	0xFF7
 31020                           tblptrl	equ	0xFF6
 31021                           tablat	equ	0xFF5
 31022                           prodh	equ	0xFF4
 31023                           prodl	equ	0xFF3
 31024                           intcon	equ	0xFF2
 31025                           intcon2	equ	0xFF1
 31026                           indf0	equ	0xFEF
 31027                           postinc0	equ	0xFEE
 31028                           plusw0	equ	0xFEB
 31029                           fsr0h	equ	0xFEA
 31030                           fsr0l	equ	0xFE9
 31031                           wreg	equ	0xFE8
 31032                           indf1	equ	0xFE7
 31033                           postdec1	equ	0xFE5
 31034                           fsr1h	equ	0xFE2
 31035                           fsr1l	equ	0xFE1
 31036                           indf2	equ	0xFDF
 31037                           postinc2	equ	0xFDE
 31038                           postdec2	equ	0xFDD
 31039                           plusw2	equ	0xFDB
 31040                           fsr2h	equ	0xFDA
 31041                           fsr2l	equ	0xFD9
 31042                           status	equ	0xFD8
 31043                           
 31044 ;; *************** function _SendLCDbyte *****************
 31045 ;; Defined at:
 31046 ;;		line 109 in file "LCD.c"
 31047 ;; Parameters:    Size  Location     Type
 31048 ;;  data            1    wreg     unsigned char 
 31049 ;;  isCommand       1   24[BANK1 ] unsigned char 
 31050 ;; Auto vars:     Size  Location     Type
 31051 ;;  data            1   25[BANK1 ] unsigned char 
 31052 ;;  LSB_nibble      1   27[BANK1 ] unsigned char 
 31053 ;;  MSB_nibble      1   26[BANK1 ] unsigned char 
 31054 ;; Return value:  Size  Location     Type
 31055 ;;		None               void
 31056 ;; Registers used:
 31057 ;;		wreg, status,2, status,0, cstack
 31058 ;; Tracked objects:
 31059 ;;		On entry : 0/0
 31060 ;;		On exit  : 0/0
 31061 ;;		Unchanged: 0/0
 31062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31063 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 31064 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 31065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31066 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 31067 ;;Total ram usage:        4 bytes
 31068 ;; Hardware stack levels used:    1
 31069 ;; Hardware stack levels required when called:    9
 31070 ;; This function calls:
 31071 ;;		_PulseEnablePin
 31072 ;;		_delayUS
 31073 ;; This function is called by:
 31074 ;;		_init_LCD
 31075 ;;		_SetLCDcursor
 31076 ;;		_ClearLCD
 31077 ;;		_LCDPrintString
 31078 ;;		_LCDPrintChar
 31079 ;; This function uses a non-reentrant model
 31080 ;;
 31081                           
 31082                           	psect	text88
 31083  0160B2                     __ptext88:
 31084                           	opt stack 0
 31085  0160B2                     _SendLCDbyte:
 31086                           	opt stack 20
 31087                           
 31088                           ;incstack = 0
 31089                           ;SendLCDbyte@data stored from wreg
 31090  0160B2  0101               	movlb	1	; () banked
 31091  0160B4  6F19               	movwf	SendLCDbyte@data& (0+255),b
 31092                           
 31093                           ; BSR set to: 1
 31094                           ;LCD.c: 111: unsigned char MSB_nibble=0;
 31095  0160B6  0E00               	movlw	0
 31096  0160B8  0101               	movlb	1	; () banked
 31097  0160BA  6F1A               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 31098                           
 31099                           ;LCD.c: 112: unsigned char LSB_nibble=0;
 31100  0160BC  0E00               	movlw	0
 31101  0160BE  0101               	movlb	1	; () banked
 31102  0160C0  6F1B               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 31103                           
 31104                           ; BSR set to: 1
 31105                           ;LCD.c: 114: LATA &= ~(0b00001000+0b00010000+0b00100000);
 31106  0160C2  0EC7               	movlw	199
 31107  0160C4  1689               	andwf	3977,f,c	;volatile
 31108                           
 31109                           ; BSR set to: 1
 31110                           ;LCD.c: 115: LATE &= ~0b00000001;
 31111  0160C6  908D               	bcf	3981,0,c	;volatile
 31112                           
 31113                           ; BSR set to: 1
 31114                           ;LCD.c: 116: LATD &= ~(0b10000000 + 0b00100000);
 31115  0160C8  0E5F               	movlw	95
 31116  0160CA  168C               	andwf	3980,f,c	;volatile
 31117                           
 31118                           ; BSR set to: 1
 31119                           ;LCD.c: 117: delayUS(10);
 31120  0160CC  0E0A               	movlw	10
 31121  0160CE  0101               	movlb	1	; () banked
 31122  0160D0  6F0E               	movwf	delayUS@US& (0+255),b
 31123  0160D2  0E00               	movlw	0
 31124  0160D4  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 31125  0160D6  0E00               	movlw	0
 31126  0160D8  6F10               	movwf	(delayUS@US+2)& (0+255),b
 31127  0160DA  0E00               	movlw	0
 31128  0160DC  6F11               	movwf	(delayUS@US+3)& (0+255),b
 31129  0160DE  EC58  F0BD         	call	_delayUS	;wreg free
 31130                           
 31131                           ;LCD.c: 118: MSB_nibble = (data & 0xF0)>>4;
 31132  0160E2  0101               	movlb	1	; () banked
 31133  0160E4  3919               	swapf	SendLCDbyte@data& (0+255),w,b
 31134  0160E6  0B0F               	andlw	15
 31135  0160E8  0B0F               	andlw	15
 31136  0160EA  0101               	movlb	1	; () banked
 31137  0160EC  6F1A               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 31138                           
 31139                           ; BSR set to: 1
 31140                           ;LCD.c: 119: LSB_nibble = (data & 0x0F);
 31141  0160EE  0101               	movlb	1	; () banked
 31142  0160F0  5119               	movf	SendLCDbyte@data& (0+255),w,b
 31143  0160F2  0B0F               	andlw	15
 31144  0160F4  0101               	movlb	1	; () banked
 31145  0160F6  6F1B               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 31146                           
 31147                           ; BSR set to: 1
 31148                           ;LCD.c: 120: if(!LCDwait)
 31149  0160F8  0101               	movlb	1	; () banked
 31150  0160FA  519C               	movf	_LCDwait& (0+255),w,b
 31151  0160FC  A4D8               	btfss	status,2,c
 31152  0160FE  D044               	goto	l12155
 31153                           
 31154                           ; BSR set to: 1
 31155                           ;LCD.c: 121: {
 31156                           ;LCD.c: 122: if(isCommand)
 31157  016100  0101               	movlb	1	; () banked
 31158  016102  5118               	movf	SendLCDbyte@isCommand& (0+255),w,b
 31159  016104  0101               	movlb	1	; () banked
 31160  016106  B4D8               	btfsc	status,2,c
 31161  016108  D002               	goto	l12111
 31162                           
 31163                           ; BSR set to: 1
 31164                           ;LCD.c: 123: {
 31165                           ;LCD.c: 124: LATD |= (0b00100000);
 31166  01610A  8A8C               	bsf	3980,5,c	;volatile
 31167                           
 31168                           ;LCD.c: 125: }
 31169  01610C  D002               	goto	l12113
 31170  01610E                     l12111:
 31171                           
 31172                           ; BSR set to: 1
 31173                           ;LCD.c: 126: else
 31174                           ;LCD.c: 127: {
 31175                           ;LCD.c: 128: LATD &= ~(0b00100000);
 31176  01610E  9A8C               	bcf	3980,5,c	;volatile
 31177  016110  D000               	goto	l12113
 31178  016112                     l12113:
 31179                           
 31180                           ; BSR set to: 1
 31181                           ;LCD.c: 129: }
 31182                           ;LCD.c: 130: if(MSB_nibble&0b1000)
 31183  016112  0101               	movlb	1	; () banked
 31184  016114  A71A               	btfss	SendLCDbyte@MSB_nibble& (0+255),3,b
 31185  016116  D002               	goto	l12117
 31186                           
 31187                           ; BSR set to: 1
 31188                           ;LCD.c: 131: {
 31189                           ;LCD.c: 132: LATA |= 0b00001000;
 31190  016118  8689               	bsf	3977,3,c	;volatile
 31191  01611A  D000               	goto	l12117
 31192  01611C                     l12117:
 31193                           
 31194                           ; BSR set to: 1
 31195                           ;LCD.c: 133: }
 31196                           ;LCD.c: 134: if(MSB_nibble&0b0100)
 31197  01611C  0101               	movlb	1	; () banked
 31198  01611E  A51A               	btfss	SendLCDbyte@MSB_nibble& (0+255),2,b
 31199  016120  D002               	goto	l12121
 31200                           
 31201                           ; BSR set to: 1
 31202                           ;LCD.c: 135: {
 31203                           ;LCD.c: 136: LATA |= 0b00010000;
 31204  016122  8889               	bsf	3977,4,c	;volatile
 31205  016124  D000               	goto	l12121
 31206  016126                     l12121:
 31207                           
 31208                           ; BSR set to: 1
 31209                           ;LCD.c: 137: }
 31210                           ;LCD.c: 138: if(MSB_nibble&0b0010)
 31211  016126  0101               	movlb	1	; () banked
 31212  016128  A31A               	btfss	SendLCDbyte@MSB_nibble& (0+255),1,b
 31213  01612A  D002               	goto	l12125
 31214                           
 31215                           ; BSR set to: 1
 31216                           ;LCD.c: 139: {
 31217                           ;LCD.c: 140: LATA |= 0b00100000;
 31218  01612C  8A89               	bsf	3977,5,c	;volatile
 31219  01612E  D000               	goto	l12125
 31220  016130                     l12125:
 31221                           
 31222                           ; BSR set to: 1
 31223                           ;LCD.c: 141: }
 31224                           ;LCD.c: 142: if(MSB_nibble&0b0001)
 31225  016130  0101               	movlb	1	; () banked
 31226  016132  A11A               	btfss	SendLCDbyte@MSB_nibble& (0+255),0,b
 31227  016134  D002               	goto	l12129
 31228                           
 31229                           ; BSR set to: 1
 31230                           ;LCD.c: 143: {
 31231                           ;LCD.c: 144: LATE |= 0b00000001;
 31232  016136  808D               	bsf	3981,0,c	;volatile
 31233  016138  D000               	goto	l12129
 31234  01613A                     l12129:
 31235                           
 31236                           ; BSR set to: 1
 31237                           ;LCD.c: 145: }
 31238                           ;LCD.c: 146: PulseEnablePin();
 31239  01613A  ECA1  F005         	call	_PulseEnablePin	;wreg free
 31240                           
 31241                           ;LCD.c: 147: LATA &= ~(0b00001000+0b00010000+0b00100000);
 31242  01613E  0EC7               	movlw	199
 31243  016140  1689               	andwf	3977,f,c	;volatile
 31244                           
 31245                           ;LCD.c: 148: LATE &= ~0b00000001;
 31246  016142  908D               	bcf	3981,0,c	;volatile
 31247                           
 31248                           ;LCD.c: 149: delayUS(10);
 31249  016144  0E0A               	movlw	10
 31250  016146  0101               	movlb	1	; () banked
 31251  016148  6F0E               	movwf	delayUS@US& (0+255),b
 31252  01614A  0E00               	movlw	0
 31253  01614C  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 31254  01614E  0E00               	movlw	0
 31255  016150  6F10               	movwf	(delayUS@US+2)& (0+255),b
 31256  016152  0E00               	movlw	0
 31257  016154  6F11               	movwf	(delayUS@US+3)& (0+255),b
 31258  016156  EC58  F0BD         	call	_delayUS	;wreg free
 31259                           
 31260                           ;LCD.c: 150: if(LSB_nibble&0b1000)
 31261  01615A  0101               	movlb	1	; () banked
 31262  01615C  A71B               	btfss	SendLCDbyte@LSB_nibble& (0+255),3,b
 31263  01615E  D002               	goto	l12141
 31264                           
 31265                           ; BSR set to: 1
 31266                           ;LCD.c: 151: {
 31267                           ;LCD.c: 152: LATA |= 0b00001000;
 31268  016160  8689               	bsf	3977,3,c	;volatile
 31269  016162  D000               	goto	l12141
 31270  016164                     l12141:
 31271                           
 31272                           ; BSR set to: 1
 31273                           ;LCD.c: 153: }
 31274                           ;LCD.c: 154: if(LSB_nibble&0b0100)
 31275  016164  0101               	movlb	1	; () banked
 31276  016166  A51B               	btfss	SendLCDbyte@LSB_nibble& (0+255),2,b
 31277  016168  D002               	goto	l12145
 31278                           
 31279                           ; BSR set to: 1
 31280                           ;LCD.c: 155: {
 31281                           ;LCD.c: 156: LATA |= 0b00010000;
 31282  01616A  8889               	bsf	3977,4,c	;volatile
 31283  01616C  D000               	goto	l12145
 31284  01616E                     l12145:
 31285                           
 31286                           ; BSR set to: 1
 31287                           ;LCD.c: 157: }
 31288                           ;LCD.c: 158: if(LSB_nibble&0b0010)
 31289  01616E  0101               	movlb	1	; () banked
 31290  016170  A31B               	btfss	SendLCDbyte@LSB_nibble& (0+255),1,b
 31291  016172  D002               	goto	l12149
 31292                           
 31293                           ; BSR set to: 1
 31294                           ;LCD.c: 159: {
 31295                           ;LCD.c: 160: LATA |= 0b00100000;
 31296  016174  8A89               	bsf	3977,5,c	;volatile
 31297  016176  D000               	goto	l12149
 31298  016178                     l12149:
 31299                           
 31300                           ; BSR set to: 1
 31301                           ;LCD.c: 161: }
 31302                           ;LCD.c: 162: if(LSB_nibble&0b0001)
 31303  016178  0101               	movlb	1	; () banked
 31304  01617A  A11B               	btfss	SendLCDbyte@LSB_nibble& (0+255),0,b
 31305  01617C  D002               	goto	l12153
 31306                           
 31307                           ; BSR set to: 1
 31308                           ;LCD.c: 163: {
 31309                           ;LCD.c: 164: LATE |= 0b00000001;
 31310  01617E  808D               	bsf	3981,0,c	;volatile
 31311  016180  D000               	goto	l12153
 31312  016182                     l12153:
 31313                           
 31314                           ; BSR set to: 1
 31315                           ;LCD.c: 165: }
 31316                           ;LCD.c: 166: PulseEnablePin();
 31317  016182  ECA1  F005         	call	_PulseEnablePin	;wreg free
 31318                           
 31319                           ;LCD.c: 167: }
 31320  016186  0012               	return	
 31321  016188                     l12155:
 31322                           
 31323                           ;LCD.c: 168: else
 31324                           ;LCD.c: 169: {
 31325                           ;LCD.c: 170: delayUS(20);
 31326  016188  0E14               	movlw	20
 31327  01618A  0101               	movlb	1	; () banked
 31328  01618C  6F0E               	movwf	delayUS@US& (0+255),b
 31329  01618E  0E00               	movlw	0
 31330  016190  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 31331  016192  0E00               	movlw	0
 31332  016194  6F10               	movwf	(delayUS@US+2)& (0+255),b
 31333  016196  0E00               	movlw	0
 31334  016198  6F11               	movwf	(delayUS@US+3)& (0+255),b
 31335  01619A  EC58  F0BD         	call	_delayUS	;wreg free
 31336  01619E  0012               	return	
 31337  0161A0  0012               	return		;funcret
 31338  0161A2                     __end_of_SendLCDbyte:
 31339                           	opt stack 0
 31340                           tblptru	equ	0xFF8
 31341                           tblptrh	equ	0xFF7
 31342                           tblptrl	equ	0xFF6
 31343                           tablat	equ	0xFF5
 31344                           prodh	equ	0xFF4
 31345                           prodl	equ	0xFF3
 31346                           intcon	equ	0xFF2
 31347                           intcon2	equ	0xFF1
 31348                           indf0	equ	0xFEF
 31349                           postinc0	equ	0xFEE
 31350                           plusw0	equ	0xFEB
 31351                           fsr0h	equ	0xFEA
 31352                           fsr0l	equ	0xFE9
 31353                           wreg	equ	0xFE8
 31354                           indf1	equ	0xFE7
 31355                           postdec1	equ	0xFE5
 31356                           fsr1h	equ	0xFE2
 31357                           fsr1l	equ	0xFE1
 31358                           indf2	equ	0xFDF
 31359                           postinc2	equ	0xFDE
 31360                           postdec2	equ	0xFDD
 31361                           plusw2	equ	0xFDB
 31362                           fsr2h	equ	0xFDA
 31363                           fsr2l	equ	0xFD9
 31364                           status	equ	0xFD8
 31365                           
 31366 ;; *************** function _PulseEnablePin *****************
 31367 ;; Defined at:
 31368 ;;		line 180 in file "LCD.c"
 31369 ;; Parameters:    Size  Location     Type
 31370 ;;		None
 31371 ;; Auto vars:     Size  Location     Type
 31372 ;;		None
 31373 ;; Return value:  Size  Location     Type
 31374 ;;		None               void
 31375 ;; Registers used:
 31376 ;;		wreg, status,2, status,0, cstack
 31377 ;; Tracked objects:
 31378 ;;		On entry : 0/0
 31379 ;;		On exit  : 0/0
 31380 ;;		Unchanged: 0/0
 31381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31386 ;;Total ram usage:        0 bytes
 31387 ;; Hardware stack levels used:    1
 31388 ;; Hardware stack levels required when called:    8
 31389 ;; This function calls:
 31390 ;;		_delayUS
 31391 ;; This function is called by:
 31392 ;;		_init_LCD
 31393 ;;		_SendLCDbyte
 31394 ;; This function uses a non-reentrant model
 31395 ;;
 31396                           
 31397                           	psect	text89
 31398  000B42                     __ptext89:
 31399                           	opt stack 0
 31400  000B42                     _PulseEnablePin:
 31401                           	opt stack 20
 31402                           
 31403                           ;LCD.c: 183: LATD |= (0b10000000);
 31404                           
 31405                           ;incstack = 0
 31406  000B42  8E8C               	bsf	3980,7,c	;volatile
 31407                           
 31408                           ;LCD.c: 184: delayUS(2500);
 31409  000B44  0EC4               	movlw	196
 31410  000B46  0101               	movlb	1	; () banked
 31411  000B48  6F0E               	movwf	delayUS@US& (0+255),b
 31412  000B4A  0E09               	movlw	9
 31413  000B4C  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 31414  000B4E  0E00               	movlw	0
 31415  000B50  6F10               	movwf	(delayUS@US+2)& (0+255),b
 31416  000B52  0E00               	movlw	0
 31417  000B54  6F11               	movwf	(delayUS@US+3)& (0+255),b
 31418  000B56  EC58  F0BD         	call	_delayUS	;wreg free
 31419                           
 31420                           ;LCD.c: 186: LATD &= ~(0b10000000);
 31421  000B5A  9E8C               	bcf	3980,7,c	;volatile
 31422                           
 31423                           ;LCD.c: 187: delayUS(2500);
 31424  000B5C  0EC4               	movlw	196
 31425  000B5E  0101               	movlb	1	; () banked
 31426  000B60  6F0E               	movwf	delayUS@US& (0+255),b
 31427  000B62  0E09               	movlw	9
 31428  000B64  6F0F               	movwf	(delayUS@US+1)& (0+255),b
 31429  000B66  0E00               	movlw	0
 31430  000B68  6F10               	movwf	(delayUS@US+2)& (0+255),b
 31431  000B6A  0E00               	movlw	0
 31432  000B6C  6F11               	movwf	(delayUS@US+3)& (0+255),b
 31433  000B6E  EC58  F0BD         	call	_delayUS	;wreg free
 31434  000B72  0012               	return		;funcret
 31435  000B74                     __end_of_PulseEnablePin:
 31436                           	opt stack 0
 31437                           tblptru	equ	0xFF8
 31438                           tblptrh	equ	0xFF7
 31439                           tblptrl	equ	0xFF6
 31440                           tablat	equ	0xFF5
 31441                           prodh	equ	0xFF4
 31442                           prodl	equ	0xFF3
 31443                           intcon	equ	0xFF2
 31444                           intcon2	equ	0xFF1
 31445                           indf0	equ	0xFEF
 31446                           postinc0	equ	0xFEE
 31447                           plusw0	equ	0xFEB
 31448                           fsr0h	equ	0xFEA
 31449                           fsr0l	equ	0xFE9
 31450                           wreg	equ	0xFE8
 31451                           indf1	equ	0xFE7
 31452                           postdec1	equ	0xFE5
 31453                           fsr1h	equ	0xFE2
 31454                           fsr1l	equ	0xFE1
 31455                           indf2	equ	0xFDF
 31456                           postinc2	equ	0xFDE
 31457                           postdec2	equ	0xFDD
 31458                           plusw2	equ	0xFDB
 31459                           fsr2h	equ	0xFDA
 31460                           fsr2l	equ	0xFD9
 31461                           status	equ	0xFD8
 31462                           
 31463 ;; *************** function _delayUS *****************
 31464 ;; Defined at:
 31465 ;;		line 57 in file "MISC.c"
 31466 ;; Parameters:    Size  Location     Type
 31467 ;;  US              4   14[BANK1 ] long 
 31468 ;; Auto vars:     Size  Location     Type
 31469 ;;  i               4   19[BANK1 ] long 
 31470 ;;  j               1   23[BANK1 ] unsigned char 
 31471 ;; Return value:  Size  Location     Type
 31472 ;;		None               void
 31473 ;; Registers used:
 31474 ;;		wreg, status,2, status,0
 31475 ;; Tracked objects:
 31476 ;;		On entry : 0/0
 31477 ;;		On exit  : 0/0
 31478 ;;		Unchanged: 0/0
 31479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31480 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 31481 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 31482 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 31483 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 31484 ;;Total ram usage:       10 bytes
 31485 ;; Hardware stack levels used:    1
 31486 ;; Hardware stack levels required when called:    7
 31487 ;; This function calls:
 31488 ;;		Nothing
 31489 ;; This function is called by:
 31490 ;;		_main
 31491 ;;		_InitApp
 31492 ;;		_UARTstringWAIT
 31493 ;;		_SetBaud
 31494 ;;		_Command
 31495 ;;		_Send_Config1
 31496 ;;		_Zero_Config1
 31497 ;;		_One_Config1
 31498 ;;		_f_Config1
 31499 ;;		_Send_Config2
 31500 ;;		_Zero_Config2
 31501 ;;		_One_Config2
 31502 ;;		_init_LCD
 31503 ;;		_SendLCDbyte
 31504 ;;		_PulseEnablePin
 31505 ;;		_ResetI2C
 31506 ;; This function uses a non-reentrant model
 31507 ;;
 31508                           
 31509                           	psect	text90
 31510  017AB0                     __ptext90:
 31511                           	opt stack 0
 31512  017AB0                     _delayUS:
 31513                           	opt stack 22
 31514                           
 31515                           ;MISC.c: 59: long i;
 31516                           ;MISC.c: 60: unsigned char j;
 31517                           ;MISC.c: 61: for(i=0;i<US;i+=31)
 31518                           
 31519                           ;incstack = 0
 31520  017AB0  0E00               	movlw	0
 31521  017AB2  0101               	movlb	1	; () banked
 31522  017AB4  6F13               	movwf	delayUS@i& (0+255),b
 31523  017AB6  0E00               	movlw	0
 31524  017AB8  6F14               	movwf	(delayUS@i+1)& (0+255),b
 31525  017ABA  0E00               	movlw	0
 31526  017ABC  6F15               	movwf	(delayUS@i+2)& (0+255),b
 31527  017ABE  0E00               	movlw	0
 31528  017AC0  6F16               	movwf	(delayUS@i+3)& (0+255),b
 31529  017AC2  D013               	goto	l282
 31530  017AC4                     l11891:
 31531                           
 31532                           ; BSR set to: 1
 31533                           ;MISC.c: 62: {
 31534                           ;MISC.c: 63: for(j=0;j<41;j++)
 31535  017AC4  0E00               	movlw	0
 31536  017AC6  0101               	movlb	1	; () banked
 31537  017AC8  6F17               	movwf	delayUS@j& (0+255),b
 31538  017ACA                     l11893:
 31539                           
 31540                           ; BSR set to: 1
 31541  017ACA  0E28               	movlw	40
 31542  017ACC  0101               	movlb	1	; () banked
 31543  017ACE  6517               	cpfsgt	delayUS@j& (0+255),b
 31544  017AD0  D001               	goto	l284
 31545                           
 31546                           ; BSR set to: 1
 31547  017AD2  D004               	goto	l11901
 31548  017AD4                     l284:
 31549                           
 31550                           ; BSR set to: 1
 31551                           ;MISC.c: 64: {
 31552                           ;MISC.c: 65: __nop();
 31553  017AD4  F000               	nop	
 31554  017AD6  0101               	movlb	1	; () banked
 31555  017AD8  2B17               	incf	delayUS@j& (0+255),f,b
 31556  017ADA  D7F7               	goto	l11893
 31557  017ADC                     l11901:
 31558                           
 31559                           ; BSR set to: 1
 31560  017ADC  0E1F               	movlw	31
 31561  017ADE  0101               	movlb	1	; () banked
 31562  017AE0  2713               	addwf	delayUS@i& (0+255),f,b
 31563  017AE2  0E00               	movlw	0
 31564  017AE4  2314               	addwfc	(delayUS@i+1)& (0+255),f,b
 31565  017AE6  2315               	addwfc	(delayUS@i+2)& (0+255),f,b
 31566  017AE8  2316               	addwfc	(delayUS@i+3)& (0+255),f,b
 31567  017AEA                     l282:
 31568                           
 31569                           ; BSR set to: 1
 31570  017AEA  0101               	movlb	1	; () banked
 31571  017AEC  510E               	movf	delayUS@US& (0+255),w,b
 31572  017AEE  0101               	movlb	1	; () banked
 31573  017AF0  5D13               	subwf	delayUS@i& (0+255),w,b
 31574  017AF2  0101               	movlb	1	; () banked
 31575  017AF4  510F               	movf	(delayUS@US+1)& (0+255),w,b
 31576  017AF6  0101               	movlb	1	; () banked
 31577  017AF8  5914               	subwfb	(delayUS@i+1)& (0+255),w,b
 31578  017AFA  0101               	movlb	1	; () banked
 31579  017AFC  5110               	movf	(delayUS@US+2)& (0+255),w,b
 31580  017AFE  0101               	movlb	1	; () banked
 31581  017B00  5915               	subwfb	(delayUS@i+2)& (0+255),w,b
 31582  017B02  0101               	movlb	1	; () banked
 31583  017B04  5116               	movf	(delayUS@i+3)& (0+255),w,b
 31584  017B06  0A80               	xorlw	128
 31585  017B08  0101               	movlb	1	; () banked
 31586  017B0A  6F12               	movwf	??_delayUS& (0+255),b
 31587  017B0C  0101               	movlb	1	; () banked
 31588  017B0E  5111               	movf	(delayUS@US+3)& (0+255),w,b
 31589  017B10  0A80               	xorlw	128
 31590  017B12  0101               	movlb	1	; () banked
 31591  017B14  5912               	subwfb	??_delayUS& (0+255),w,b
 31592  017B16  A0D8               	btfss	status,0,c
 31593  017B18  D7D5               	goto	l11891
 31594                           
 31595                           ; BSR set to: 1
 31596                           
 31597                           ; BSR set to: 1
 31598  017B1A  0012               	return		;funcret
 31599  017B1C                     __end_of_delayUS:
 31600                           	opt stack 0
 31601                           tblptru	equ	0xFF8
 31602                           tblptrh	equ	0xFF7
 31603                           tblptrl	equ	0xFF6
 31604                           tablat	equ	0xFF5
 31605                           prodh	equ	0xFF4
 31606                           prodl	equ	0xFF3
 31607                           intcon	equ	0xFF2
 31608                           intcon2	equ	0xFF1
 31609                           indf0	equ	0xFEF
 31610                           postinc0	equ	0xFEE
 31611                           plusw0	equ	0xFEB
 31612                           fsr0h	equ	0xFEA
 31613                           fsr0l	equ	0xFE9
 31614                           wreg	equ	0xFE8
 31615                           indf1	equ	0xFE7
 31616                           postdec1	equ	0xFE5
 31617                           fsr1h	equ	0xFE2
 31618                           fsr1l	equ	0xFE1
 31619                           indf2	equ	0xFDF
 31620                           postinc2	equ	0xFDE
 31621                           postdec2	equ	0xFDD
 31622                           plusw2	equ	0xFDB
 31623                           fsr2h	equ	0xFDA
 31624                           fsr2l	equ	0xFD9
 31625                           status	equ	0xFD8
 31626                           
 31627 ;; *************** function _LCD_Scroll *****************
 31628 ;; Defined at:
 31629 ;;		line 414 in file "LCD.c"
 31630 ;; Parameters:    Size  Location     Type
 31631 ;;  This            2   29[BANK1 ] PTR const unsigned char 
 31632 ;;		 -> STR_298(6), STR_297(5), STR_296(5), STR_295(10), 
 31633 ;;		 -> STR_294(16), STR_293(11), STR_292(12), STR_291(9), 
 31634 ;;		 -> STR_290(14), STR_270(6), STR_269(9), STR_268(14), 
 31635 ;;		 -> STR_252(4), STR_251(5), STR_250(8), STR_249(10), 
 31636 ;;		 -> STR_248(9), STR_217(2), STR_216(10), STR_215(9), 
 31637 ;;		 -> STR_196(10), STR_195(10), STR_194(13), STR_179(10), 
 31638 ;;		 -> STR_178(10), STR_177(17), STR_157(6), STR_156(6), 
 31639 ;;		 -> STR_155(9), STR_154(10), STR_129(7), STR_128(4), 
 31640 ;;		 -> STR_127(6), STR_126(9), STR_125(13), STR_94(4), 
 31641 ;;		 -> STR_93(6), STR_92(9), STR_91(14), STR_69(5), 
 31642 ;;		 -> STR_68(5), STR_67(9), STR_66(9), 
 31643 ;; Auto vars:     Size  Location     Type
 31644 ;;		None
 31645 ;; Return value:  Size  Location     Type
 31646 ;;		None               void
 31647 ;; Registers used:
 31648 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31649 ;; Tracked objects:
 31650 ;;		On entry : 0/0
 31651 ;;		On exit  : 0/0
 31652 ;;		Unchanged: 0/0
 31653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31654 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31657 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31658 ;;Total ram usage:        2 bytes
 31659 ;; Hardware stack levels used:    1
 31660 ;; Hardware stack levels required when called:    9
 31661 ;; This function calls:
 31662 ;;		_BufferCopy
 31663 ;;		_Start_Timer1
 31664 ;; This function is called by:
 31665 ;;		_Command
 31666 ;; This function uses a non-reentrant model
 31667 ;;
 31668                           
 31669                           	psect	text91
 31670  01497A                     __ptext91:
 31671                           	opt stack 0
 31672  01497A                     _LCD_Scroll:
 31673                           	opt stack 20
 31674                           
 31675                           ;LCD.c: 416: Start_Timer1();
 31676                           
 31677                           ; BSR set to: 1
 31678                           ;incstack = 0
 31679  01497A  ECA4  F007         	call	_Start_Timer1	;wreg free
 31680                           
 31681                           ;LCD.c: 417: if(!LCDwait)
 31682  01497E  0101               	movlb	1	; () banked
 31683  014980  519C               	movf	_LCDwait& (0+255),w,b
 31684  014982  A4D8               	btfss	status,2,c
 31685  014984  0012               	return	
 31686                           
 31687                           ; BSR set to: 1
 31688                           ;LCD.c: 418: {
 31689                           ;LCD.c: 419: LCDclearCount = 0;
 31690  014986  0E00               	movlw	0
 31691  014988  6E4F               	movwf	_LCDclearCount,c
 31692  01498A  0E00               	movlw	0
 31693  01498C  6E50               	movwf	_LCDclearCount+1,c
 31694  01498E  0E00               	movlw	0
 31695  014990  6E51               	movwf	_LCDclearCount+2,c
 31696  014992  0E00               	movlw	0
 31697  014994  6E52               	movwf	_LCDclearCount+3,c
 31698                           
 31699                           ; BSR set to: 1
 31700                           ;LCD.c: 420: ScrollFIFOCount++;
 31701  014996  2A55               	incf	_ScrollFIFOCount,f,c
 31702                           
 31703                           ; BSR set to: 1
 31704                           ;LCD.c: 421: if(ScrollFIFOCount == 1)
 31705  014998  0455               	decf	_ScrollFIFOCount,w,c
 31706  01499A  A4D8               	btfss	status,2,c
 31707  01499C  D013               	goto	l13811
 31708                           
 31709                           ; BSR set to: 1
 31710                           ;LCD.c: 422: {
 31711                           ;LCD.c: 423: BufferCopy((unsigned char*) This,Scroll_1, 16, 0);
 31712  01499E  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 31713  0149A2  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31714  0149A6  0E9E               	movlw	low _Scroll_1
 31715  0149A8  0101               	movlb	1	; () banked
 31716  0149AA  6F18               	movwf	BufferCopy@to& (0+255),b
 31717  0149AC  0E01               	movlw	high _Scroll_1
 31718  0149AE  0101               	movlb	1	; () banked
 31719  0149B0  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 31720  0149B2  0E10               	movlw	16
 31721  0149B4  0101               	movlb	1	; () banked
 31722  0149B6  6F1A               	movwf	BufferCopy@count& (0+255),b
 31723  0149B8  0E00               	movlw	0
 31724  0149BA  0101               	movlb	1	; () banked
 31725  0149BC  6F1B               	movwf	BufferCopy@shift& (0+255),b
 31726  0149BE  ECF3  F0B4         	call	_BufferCopy	;wreg free
 31727                           
 31728                           ;LCD.c: 424: }
 31729  0149C2  0012               	return	
 31730  0149C4                     l13811:
 31731                           
 31732                           ;LCD.c: 425: else if(ScrollFIFOCount == 2)
 31733  0149C4  0E02               	movlw	2
 31734  0149C6  1855               	xorwf	_ScrollFIFOCount,w,c
 31735  0149C8  A4D8               	btfss	status,2,c
 31736  0149CA  D013               	goto	l13815
 31737                           
 31738                           ;LCD.c: 426: {
 31739                           ;LCD.c: 427: BufferCopy((unsigned char*) This,Scroll_2, 16, 0);
 31740  0149CC  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 31741  0149D0  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31742  0149D4  0EAE               	movlw	low _Scroll_2
 31743  0149D6  0101               	movlb	1	; () banked
 31744  0149D8  6F18               	movwf	BufferCopy@to& (0+255),b
 31745  0149DA  0E01               	movlw	high _Scroll_2
 31746  0149DC  0101               	movlb	1	; () banked
 31747  0149DE  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 31748  0149E0  0E10               	movlw	16
 31749  0149E2  0101               	movlb	1	; () banked
 31750  0149E4  6F1A               	movwf	BufferCopy@count& (0+255),b
 31751  0149E6  0E00               	movlw	0
 31752  0149E8  0101               	movlb	1	; () banked
 31753  0149EA  6F1B               	movwf	BufferCopy@shift& (0+255),b
 31754  0149EC  ECF3  F0B4         	call	_BufferCopy	;wreg free
 31755                           
 31756                           ;LCD.c: 428: }
 31757  0149F0  0012               	return	
 31758  0149F2                     l13815:
 31759                           
 31760                           ;LCD.c: 429: else if(ScrollFIFOCount == 3)
 31761  0149F2  0E03               	movlw	3
 31762  0149F4  1855               	xorwf	_ScrollFIFOCount,w,c
 31763  0149F6  A4D8               	btfss	status,2,c
 31764  0149F8  D013               	goto	l13819
 31765                           
 31766                           ;LCD.c: 430: {
 31767                           ;LCD.c: 431: BufferCopy((unsigned char*) This,Scroll_3, 16, 0);
 31768  0149FA  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 31769  0149FE  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31770  014A02  0EBE               	movlw	low _Scroll_3
 31771  014A04  0101               	movlb	1	; () banked
 31772  014A06  6F18               	movwf	BufferCopy@to& (0+255),b
 31773  014A08  0E01               	movlw	high _Scroll_3
 31774  014A0A  0101               	movlb	1	; () banked
 31775  014A0C  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 31776  014A0E  0E10               	movlw	16
 31777  014A10  0101               	movlb	1	; () banked
 31778  014A12  6F1A               	movwf	BufferCopy@count& (0+255),b
 31779  014A14  0E00               	movlw	0
 31780  014A16  0101               	movlb	1	; () banked
 31781  014A18  6F1B               	movwf	BufferCopy@shift& (0+255),b
 31782  014A1A  ECF3  F0B4         	call	_BufferCopy	;wreg free
 31783                           
 31784                           ;LCD.c: 432: }
 31785  014A1E  0012               	return	
 31786  014A20                     l13819:
 31787                           
 31788                           ;LCD.c: 433: else if(ScrollFIFOCount == 4)
 31789  014A20  0E04               	movlw	4
 31790  014A22  1855               	xorwf	_ScrollFIFOCount,w,c
 31791  014A24  A4D8               	btfss	status,2,c
 31792  014A26  D013               	goto	l13823
 31793                           
 31794                           ;LCD.c: 434: {
 31795                           ;LCD.c: 435: BufferCopy((unsigned char*) This,Scroll_4, 16, 0);
 31796  014A28  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 31797  014A2C  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31798  014A30  0ECE               	movlw	low _Scroll_4
 31799  014A32  0101               	movlb	1	; () banked
 31800  014A34  6F18               	movwf	BufferCopy@to& (0+255),b
 31801  014A36  0E01               	movlw	high _Scroll_4
 31802  014A38  0101               	movlb	1	; () banked
 31803  014A3A  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 31804  014A3C  0E10               	movlw	16
 31805  014A3E  0101               	movlb	1	; () banked
 31806  014A40  6F1A               	movwf	BufferCopy@count& (0+255),b
 31807  014A42  0E00               	movlw	0
 31808  014A44  0101               	movlb	1	; () banked
 31809  014A46  6F1B               	movwf	BufferCopy@shift& (0+255),b
 31810  014A48  ECF3  F0B4         	call	_BufferCopy	;wreg free
 31811                           
 31812                           ;LCD.c: 436: }
 31813  014A4C  0012               	return	
 31814  014A4E                     l13823:
 31815                           
 31816                           ;LCD.c: 437: else if(ScrollFIFOCount == 5)
 31817  014A4E  0E05               	movlw	5
 31818  014A50  1855               	xorwf	_ScrollFIFOCount,w,c
 31819  014A52  A4D8               	btfss	status,2,c
 31820  014A54  D013               	goto	l13827
 31821                           
 31822                           ;LCD.c: 438: {
 31823                           ;LCD.c: 439: BufferCopy((unsigned char*) This,Scroll_5, 16, 0);
 31824  014A56  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 31825  014A5A  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31826  014A5E  0EDE               	movlw	low _Scroll_5
 31827  014A60  0101               	movlb	1	; () banked
 31828  014A62  6F18               	movwf	BufferCopy@to& (0+255),b
 31829  014A64  0E01               	movlw	high _Scroll_5
 31830  014A66  0101               	movlb	1	; () banked
 31831  014A68  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 31832  014A6A  0E10               	movlw	16
 31833  014A6C  0101               	movlb	1	; () banked
 31834  014A6E  6F1A               	movwf	BufferCopy@count& (0+255),b
 31835  014A70  0E00               	movlw	0
 31836  014A72  0101               	movlb	1	; () banked
 31837  014A74  6F1B               	movwf	BufferCopy@shift& (0+255),b
 31838  014A76  ECF3  F0B4         	call	_BufferCopy	;wreg free
 31839                           
 31840                           ;LCD.c: 440: }
 31841  014A7A  0012               	return	
 31842  014A7C                     l13827:
 31843                           
 31844                           ;LCD.c: 441: else if(ScrollFIFOCount == 6)
 31845  014A7C  0E06               	movlw	6
 31846  014A7E  1855               	xorwf	_ScrollFIFOCount,w,c
 31847  014A80  A4D8               	btfss	status,2,c
 31848  014A82  D013               	goto	l13831
 31849                           
 31850                           ;LCD.c: 442: {
 31851                           ;LCD.c: 443: BufferCopy((unsigned char*) This,Scroll_6, 16, 0);
 31852  014A84  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 31853  014A88  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31854  014A8C  0EE5               	movlw	low _Scroll_6
 31855  014A8E  0101               	movlb	1	; () banked
 31856  014A90  6F18               	movwf	BufferCopy@to& (0+255),b
 31857  014A92  0E02               	movlw	high _Scroll_6
 31858  014A94  0101               	movlb	1	; () banked
 31859  014A96  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 31860  014A98  0E10               	movlw	16
 31861  014A9A  0101               	movlb	1	; () banked
 31862  014A9C  6F1A               	movwf	BufferCopy@count& (0+255),b
 31863  014A9E  0E00               	movlw	0
 31864  014AA0  0101               	movlb	1	; () banked
 31865  014AA2  6F1B               	movwf	BufferCopy@shift& (0+255),b
 31866  014AA4  ECF3  F0B4         	call	_BufferCopy	;wreg free
 31867                           
 31868                           ;LCD.c: 444: }
 31869  014AA8  0012               	return	
 31870  014AAA                     l13831:
 31871                           
 31872                           ;LCD.c: 445: else if(ScrollFIFOCount == 7)
 31873  014AAA  0E07               	movlw	7
 31874  014AAC  1855               	xorwf	_ScrollFIFOCount,w,c
 31875  014AAE  A4D8               	btfss	status,2,c
 31876  014AB0  D013               	goto	l13835
 31877                           
 31878                           ;LCD.c: 446: {
 31879                           ;LCD.c: 447: BufferCopy((unsigned char*) This,Scroll_7, 16, 0);
 31880  014AB2  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 31881  014AB6  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31882  014ABA  0E74               	movlw	low _Scroll_7
 31883  014ABC  0101               	movlb	1	; () banked
 31884  014ABE  6F18               	movwf	BufferCopy@to& (0+255),b
 31885  014AC0  0E03               	movlw	high _Scroll_7
 31886  014AC2  0101               	movlb	1	; () banked
 31887  014AC4  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 31888  014AC6  0E10               	movlw	16
 31889  014AC8  0101               	movlb	1	; () banked
 31890  014ACA  6F1A               	movwf	BufferCopy@count& (0+255),b
 31891  014ACC  0E00               	movlw	0
 31892  014ACE  0101               	movlb	1	; () banked
 31893  014AD0  6F1B               	movwf	BufferCopy@shift& (0+255),b
 31894  014AD2  ECF3  F0B4         	call	_BufferCopy	;wreg free
 31895                           
 31896                           ;LCD.c: 448: }
 31897  014AD6  0012               	return	
 31898  014AD8                     l13835:
 31899                           
 31900                           ;LCD.c: 449: else if(ScrollFIFOCount == 8)
 31901  014AD8  0E08               	movlw	8
 31902  014ADA  1855               	xorwf	_ScrollFIFOCount,w,c
 31903  014ADC  A4D8               	btfss	status,2,c
 31904  014ADE  D013               	goto	l13839
 31905                           
 31906                           ;LCD.c: 450: {
 31907                           ;LCD.c: 451: BufferCopy((unsigned char*) This,Scroll_8, 16, 0);
 31908  014AE0  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 31909  014AE4  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31910  014AE8  0E84               	movlw	low _Scroll_8
 31911  014AEA  0101               	movlb	1	; () banked
 31912  014AEC  6F18               	movwf	BufferCopy@to& (0+255),b
 31913  014AEE  0E03               	movlw	high _Scroll_8
 31914  014AF0  0101               	movlb	1	; () banked
 31915  014AF2  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 31916  014AF4  0E10               	movlw	16
 31917  014AF6  0101               	movlb	1	; () banked
 31918  014AF8  6F1A               	movwf	BufferCopy@count& (0+255),b
 31919  014AFA  0E00               	movlw	0
 31920  014AFC  0101               	movlb	1	; () banked
 31921  014AFE  6F1B               	movwf	BufferCopy@shift& (0+255),b
 31922  014B00  ECF3  F0B4         	call	_BufferCopy	;wreg free
 31923                           
 31924                           ;LCD.c: 452: }
 31925  014B04  0012               	return	
 31926  014B06                     l13839:
 31927                           
 31928                           ;LCD.c: 453: else if(ScrollFIFOCount == 9)
 31929  014B06  0E09               	movlw	9
 31930  014B08  1855               	xorwf	_ScrollFIFOCount,w,c
 31931  014B0A  A4D8               	btfss	status,2,c
 31932  014B0C  D013               	goto	l13843
 31933                           
 31934                           ;LCD.c: 454: {
 31935                           ;LCD.c: 455: BufferCopy((unsigned char*) This,Scroll_9, 16, 0);
 31936  014B0E  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 31937  014B12  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31938  014B16  0E94               	movlw	low _Scroll_9
 31939  014B18  0101               	movlb	1	; () banked
 31940  014B1A  6F18               	movwf	BufferCopy@to& (0+255),b
 31941  014B1C  0E03               	movlw	high _Scroll_9
 31942  014B1E  0101               	movlb	1	; () banked
 31943  014B20  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 31944  014B22  0E10               	movlw	16
 31945  014B24  0101               	movlb	1	; () banked
 31946  014B26  6F1A               	movwf	BufferCopy@count& (0+255),b
 31947  014B28  0E00               	movlw	0
 31948  014B2A  0101               	movlb	1	; () banked
 31949  014B2C  6F1B               	movwf	BufferCopy@shift& (0+255),b
 31950  014B2E  ECF3  F0B4         	call	_BufferCopy	;wreg free
 31951                           
 31952                           ;LCD.c: 456: }
 31953  014B32  0012               	return	
 31954  014B34                     l13843:
 31955                           
 31956                           ;LCD.c: 457: else if(ScrollFIFOCount == 10)
 31957  014B34  0E0A               	movlw	10
 31958  014B36  1855               	xorwf	_ScrollFIFOCount,w,c
 31959  014B38  A4D8               	btfss	status,2,c
 31960  014B3A  0012               	return	
 31961                           
 31962                           ;LCD.c: 458: {
 31963                           ;LCD.c: 459: BufferCopy((unsigned char*) This,Scroll_10, 16, 0);
 31964  014B3C  C11D  F116         	movff	LCD_Scroll@This,BufferCopy@from
 31965  014B40  C11E  F117         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31966  014B44  0E64               	movlw	low _Scroll_10
 31967  014B46  0101               	movlb	1	; () banked
 31968  014B48  6F18               	movwf	BufferCopy@to& (0+255),b
 31969  014B4A  0E03               	movlw	high _Scroll_10
 31970  014B4C  0101               	movlb	1	; () banked
 31971  014B4E  6F19               	movwf	(BufferCopy@to+1)& (0+255),b
 31972  014B50  0E10               	movlw	16
 31973  014B52  0101               	movlb	1	; () banked
 31974  014B54  6F1A               	movwf	BufferCopy@count& (0+255),b
 31975  014B56  0E00               	movlw	0
 31976  014B58  0101               	movlb	1	; () banked
 31977  014B5A  6F1B               	movwf	BufferCopy@shift& (0+255),b
 31978  014B5C  ECF3  F0B4         	call	_BufferCopy	;wreg free
 31979  014B60  0012               	return	
 31980  014B62  0012               	return		;funcret
 31981  014B64                     __end_of_LCD_Scroll:
 31982                           	opt stack 0
 31983                           tblptru	equ	0xFF8
 31984                           tblptrh	equ	0xFF7
 31985                           tblptrl	equ	0xFF6
 31986                           tablat	equ	0xFF5
 31987                           prodh	equ	0xFF4
 31988                           prodl	equ	0xFF3
 31989                           intcon	equ	0xFF2
 31990                           intcon2	equ	0xFF1
 31991                           indf0	equ	0xFEF
 31992                           postinc0	equ	0xFEE
 31993                           plusw0	equ	0xFEB
 31994                           fsr0h	equ	0xFEA
 31995                           fsr0l	equ	0xFE9
 31996                           wreg	equ	0xFE8
 31997                           indf1	equ	0xFE7
 31998                           postdec1	equ	0xFE5
 31999                           fsr1h	equ	0xFE2
 32000                           fsr1l	equ	0xFE1
 32001                           indf2	equ	0xFDF
 32002                           postinc2	equ	0xFDE
 32003                           postdec2	equ	0xFDD
 32004                           plusw2	equ	0xFDB
 32005                           fsr2h	equ	0xFDA
 32006                           fsr2l	equ	0xFD9
 32007                           status	equ	0xFD8
 32008                           
 32009 ;; *************** function _Start_Timer1 *****************
 32010 ;; Defined at:
 32011 ;;		line 151 in file "Timer.c"
 32012 ;; Parameters:    Size  Location     Type
 32013 ;;		None
 32014 ;; Auto vars:     Size  Location     Type
 32015 ;;		None
 32016 ;; Return value:  Size  Location     Type
 32017 ;;		None               void
 32018 ;; Registers used:
 32019 ;;		wreg, status,2, cstack
 32020 ;; Tracked objects:
 32021 ;;		On entry : 0/0
 32022 ;;		On exit  : 0/0
 32023 ;;		Unchanged: 0/0
 32024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32029 ;;Total ram usage:        0 bytes
 32030 ;; Hardware stack levels used:    1
 32031 ;; Hardware stack levels required when called:    8
 32032 ;; This function calls:
 32033 ;;		_Reset_Timer1
 32034 ;; This function is called by:
 32035 ;;		_LCDdisplayFeedback
 32036 ;;		_LCD_Scroll
 32037 ;; This function uses a non-reentrant model
 32038 ;;
 32039                           
 32040                           	psect	text92
 32041  000F48                     __ptext92:
 32042                           	opt stack 0
 32043  000F48                     _Start_Timer1:
 32044                           	opt stack 20
 32045                           
 32046                           ;Timer.c: 154: T1CONbits.TMR1ON =1;
 32047                           
 32048                           ;incstack = 0
 32049  000F48  80CD               	bsf	4045,0,c	;volatile
 32050                           
 32051                           ;Timer.c: 156: Reset_Timer1();
 32052  000F4A  ECAA  F007         	call	_Reset_Timer1	;wreg free
 32053                           
 32054                           ;Timer.c: 158: PIR1bits.TMR1IF = 0;
 32055  000F4E  909E               	bcf	3998,0,c	;volatile
 32056                           
 32057                           ;Timer.c: 159: PIE1bits.TMR1IE = 1;
 32058  000F50  809D               	bsf	3997,0,c	;volatile
 32059  000F52  0012               	return		;funcret
 32060  000F54                     __end_of_Start_Timer1:
 32061                           	opt stack 0
 32062                           tblptru	equ	0xFF8
 32063                           tblptrh	equ	0xFF7
 32064                           tblptrl	equ	0xFF6
 32065                           tablat	equ	0xFF5
 32066                           prodh	equ	0xFF4
 32067                           prodl	equ	0xFF3
 32068                           intcon	equ	0xFF2
 32069                           intcon2	equ	0xFF1
 32070                           indf0	equ	0xFEF
 32071                           postinc0	equ	0xFEE
 32072                           plusw0	equ	0xFEB
 32073                           fsr0h	equ	0xFEA
 32074                           fsr0l	equ	0xFE9
 32075                           wreg	equ	0xFE8
 32076                           indf1	equ	0xFE7
 32077                           postdec1	equ	0xFE5
 32078                           fsr1h	equ	0xFE2
 32079                           fsr1l	equ	0xFE1
 32080                           indf2	equ	0xFDF
 32081                           postinc2	equ	0xFDE
 32082                           postdec2	equ	0xFDD
 32083                           plusw2	equ	0xFDB
 32084                           fsr2h	equ	0xFDA
 32085                           fsr2l	equ	0xFD9
 32086                           status	equ	0xFD8
 32087                           
 32088 ;; *************** function _Reset_Timer1 *****************
 32089 ;; Defined at:
 32090 ;;		line 167 in file "Timer.c"
 32091 ;; Parameters:    Size  Location     Type
 32092 ;;		None
 32093 ;; Auto vars:     Size  Location     Type
 32094 ;;		None
 32095 ;; Return value:  Size  Location     Type
 32096 ;;		None               void
 32097 ;; Registers used:
 32098 ;;		wreg, status,2
 32099 ;; Tracked objects:
 32100 ;;		On entry : 0/0
 32101 ;;		On exit  : 0/0
 32102 ;;		Unchanged: 0/0
 32103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32108 ;;Total ram usage:        0 bytes
 32109 ;; Hardware stack levels used:    1
 32110 ;; Hardware stack levels required when called:    7
 32111 ;; This function calls:
 32112 ;;		Nothing
 32113 ;; This function is called by:
 32114 ;;		_LCDdisplayFeedback
 32115 ;;		_Start_Timer1
 32116 ;; This function uses a non-reentrant model
 32117 ;;
 32118                           
 32119                           	psect	text93
 32120  000F54                     __ptext93:
 32121                           	opt stack 0
 32122  000F54                     _Reset_Timer1:
 32123                           	opt stack 20
 32124                           
 32125                           ;Timer.c: 173: TMR1H = 0;
 32126                           
 32127                           ;incstack = 0
 32128  000F54  0E00               	movlw	0
 32129  000F56  6ECF               	movwf	4047,c	;volatile
 32130                           
 32131                           ;Timer.c: 174: TMR1L = 2;
 32132  000F58  0E02               	movlw	2
 32133  000F5A  6ECE               	movwf	4046,c	;volatile
 32134  000F5C  0012               	return		;funcret
 32135  000F5E                     __end_of_Reset_Timer1:
 32136                           	opt stack 0
 32137                           tblptru	equ	0xFF8
 32138                           tblptrh	equ	0xFF7
 32139                           tblptrl	equ	0xFF6
 32140                           tablat	equ	0xFF5
 32141                           prodh	equ	0xFF4
 32142                           prodl	equ	0xFF3
 32143                           intcon	equ	0xFF2
 32144                           intcon2	equ	0xFF1
 32145                           indf0	equ	0xFEF
 32146                           postinc0	equ	0xFEE
 32147                           plusw0	equ	0xFEB
 32148                           fsr0h	equ	0xFEA
 32149                           fsr0l	equ	0xFE9
 32150                           wreg	equ	0xFE8
 32151                           indf1	equ	0xFE7
 32152                           postdec1	equ	0xFE5
 32153                           fsr1h	equ	0xFE2
 32154                           fsr1l	equ	0xFE1
 32155                           indf2	equ	0xFDF
 32156                           postinc2	equ	0xFDE
 32157                           postdec2	equ	0xFDD
 32158                           plusw2	equ	0xFDB
 32159                           fsr2h	equ	0xFDA
 32160                           fsr2l	equ	0xFD9
 32161                           status	equ	0xFD8
 32162                           
 32163 ;; *************** function _BufferCopy *****************
 32164 ;; Defined at:
 32165 ;;		line 103 in file "MISC.c"
 32166 ;; Parameters:    Size  Location     Type
 32167 ;;  from            2   22[BANK1 ] PTR unsigned char 
 32168 ;;		 -> STR_298(6), STR_297(5), STR_296(5), STR_295(10), 
 32169 ;;		 -> STR_294(16), STR_293(11), STR_292(12), STR_291(9), 
 32170 ;;		 -> STR_290(14), STR_270(6), STR_269(9), STR_268(14), 
 32171 ;;		 -> STR_252(4), STR_251(5), STR_250(8), STR_249(10), 
 32172 ;;		 -> STR_248(9), STR_217(2), STR_216(10), STR_215(9), 
 32173 ;;		 -> STR_196(10), STR_195(10), STR_194(13), STR_179(10), 
 32174 ;;		 -> STR_178(10), STR_177(17), STR_157(6), STR_156(6), 
 32175 ;;		 -> STR_155(9), STR_154(10), STR_129(7), STR_128(4), 
 32176 ;;		 -> STR_127(6), STR_126(9), STR_125(13), STR_94(4), 
 32177 ;;		 -> STR_93(6), STR_92(9), STR_91(14), STR_69(5), 
 32178 ;;		 -> STR_68(5), STR_67(9), STR_66(9), StringAddEqual@temp(100), 
 32179 ;;		 -> RemoveSpaces@That(100), low_isr@TEMP_Rxdata(100), 
 32180 ;;  to              2   24[BANK1 ] PTR unsigned char 
 32181 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 32182 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 32183 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 32184 ;;  count           1   26[BANK1 ] unsigned char 
 32185 ;;  shift           1   27[BANK1 ] unsigned char 
 32186 ;; Auto vars:     Size  Location     Type
 32187 ;;  i               1   28[BANK1 ] unsigned char 
 32188 ;; Return value:  Size  Location     Type
 32189 ;;		None               void
 32190 ;; Registers used:
 32191 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32192 ;; Tracked objects:
 32193 ;;		On entry : 0/0
 32194 ;;		On exit  : 0/0
 32195 ;;		Unchanged: 0/0
 32196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32197 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 32198 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 32199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32200 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 32201 ;;Total ram usage:        7 bytes
 32202 ;; Hardware stack levels used:    1
 32203 ;; Hardware stack levels required when called:    8
 32204 ;; This function calls:
 32205 ;;		_cleanBuffer
 32206 ;; This function is called by:
 32207 ;;		_RemoveSpaces
 32208 ;;		_StringAddEqual
 32209 ;;		_LCD_Scroll
 32210 ;; This function uses a non-reentrant model
 32211 ;;
 32212                           
 32213                           	psect	text94
 32214  0169E6                     __ptext94:
 32215                           	opt stack 0
 32216  0169E6                     _BufferCopy:
 32217                           	opt stack 20
 32218                           
 32219                           ;MISC.c: 105: unsigned char i=0;
 32220                           
 32221                           ;incstack = 0
 32222  0169E6  0E00               	movlw	0
 32223  0169E8  0101               	movlb	1	; () banked
 32224  0169EA  6F1C               	movwf	BufferCopy@i& (0+255),b
 32225                           
 32226                           ; BSR set to: 1
 32227                           ;MISC.c: 106: cleanBuffer(to,count);
 32228  0169EC  C118  F10E         	movff	BufferCopy@to,cleanBuffer@data
 32229  0169F0  C119  F10F         	movff	BufferCopy@to+1,cleanBuffer@data+1
 32230  0169F4  C11A  F110         	movff	BufferCopy@count,cleanBuffer@count
 32231  0169F8  0101               	movlb	1	; () banked
 32232  0169FA  6B11               	clrf	(cleanBuffer@count+1)& (0+255),b
 32233  0169FC  EC04  F003         	call	_cleanBuffer	;wreg free
 32234                           
 32235                           ;MISC.c: 107: for(i = shift; i>0;i--)
 32236  016A00  C11B  F11C         	movff	BufferCopy@shift,BufferCopy@i
 32237  016A04                     l12407:
 32238  016A04  0101               	movlb	1	; () banked
 32239  016A06  511C               	movf	BufferCopy@i& (0+255),w,b
 32240  016A08  0101               	movlb	1	; () banked
 32241  016A0A  B4D8               	btfsc	status,2,c
 32242  016A0C  D02E               	goto	l12427
 32243  016A0E  D001               	goto	l12411
 32244                           
 32245                           ; BSR set to: 1
 32246  016A10  D02C               	goto	l12427
 32247  016A12                     l12411:
 32248                           
 32249                           ; BSR set to: 1
 32250                           ;MISC.c: 108: {
 32251                           ;MISC.c: 109: *to = ' ';
 32252  016A12  C118  FFD9         	movff	BufferCopy@to,fsr2l
 32253  016A16  C119  FFDA         	movff	BufferCopy@to+1,fsr2h
 32254  016A1A  0E20               	movlw	32
 32255  016A1C  6EDF               	movwf	indf2,c
 32256                           
 32257                           ; BSR set to: 1
 32258                           ;MISC.c: 110: to++;
 32259  016A1E  0101               	movlb	1	; () banked
 32260  016A20  4B18               	infsnz	BufferCopy@to& (0+255),f,b
 32261  016A22  2B19               	incf	(BufferCopy@to+1)& (0+255),f,b
 32262                           
 32263                           ; BSR set to: 1
 32264  016A24  0101               	movlb	1	; () banked
 32265  016A26  071C               	decf	BufferCopy@i& (0+255),f,b
 32266  016A28  D7ED               	goto	l12407
 32267                           
 32268                           ; BSR set to: 1
 32269                           ;MISC.c: 111: }
 32270                           ;MISC.c: 112: while(*from != 0 && count >0)
 32271                           
 32272                           ; BSR set to: 1
 32273  016A2A  D01F               	goto	l12427
 32274  016A2C                     l12419:
 32275                           
 32276                           ; BSR set to: 1
 32277                           ;MISC.c: 113: {
 32278                           ;MISC.c: 114: *to = *from;
 32279  016A2C  C116  FFF6         	movff	BufferCopy@from,tblptrl
 32280  016A30  C117  FFF7         	movff	BufferCopy@from+1,tblptrh
 32281  016A34  0E00               	movlw	low (__mediumconst shr (0+16))
 32282  016A36  6EF8               	movwf	tblptru,c
 32283  016A38  C118  FFD9         	movff	BufferCopy@to,fsr2l
 32284  016A3C  C119  FFDA         	movff	BufferCopy@to+1,fsr2h
 32285  016A40  0E0C               	movlw	(high __ramtop+-1)
 32286  016A42  64F7               	cpfsgt	tblptrh,c
 32287  016A44  D003               	bra	u15277
 32288  016A46  0008               	tblrd		*
 32289  016A48  50F5               	movf	tablat,w,c
 32290  016A4A  D005               	bra	u15270
 32291  016A4C                     u15277:
 32292  016A4C  CFF6 FFE9          	movff	tblptrl,fsr0l
 32293  016A50  CFF7 FFEA          	movff	tblptrh,fsr0h
 32294  016A54  50EF               	movf	indf0,w,c
 32295  016A56                     u15270:
 32296  016A56  6EDF               	movwf	indf2,c
 32297                           
 32298                           ;MISC.c: 115: from++;
 32299  016A58  0101               	movlb	1	; () banked
 32300  016A5A  4B16               	infsnz	BufferCopy@from& (0+255),f,b
 32301  016A5C  2B17               	incf	(BufferCopy@from+1)& (0+255),f,b
 32302                           
 32303                           ; BSR set to: 1
 32304                           ;MISC.c: 116: to++;
 32305  016A5E  0101               	movlb	1	; () banked
 32306  016A60  4B18               	infsnz	BufferCopy@to& (0+255),f,b
 32307  016A62  2B19               	incf	(BufferCopy@to+1)& (0+255),f,b
 32308                           
 32309                           ; BSR set to: 1
 32310                           ;MISC.c: 117: count--;
 32311  016A64  0101               	movlb	1	; () banked
 32312  016A66  071A               	decf	BufferCopy@count& (0+255),f,b
 32313  016A68  D000               	goto	l12427
 32314  016A6A                     l12427:
 32315                           
 32316                           ; BSR set to: 1
 32317  016A6A  C116  FFF6         	movff	BufferCopy@from,tblptrl
 32318  016A6E  C117  FFF7         	movff	BufferCopy@from+1,tblptrh
 32319  016A72  0E00               	movlw	low (__mediumconst shr (0+16))
 32320  016A74  6EF8               	movwf	tblptru,c
 32321  016A76  0E0C               	movlw	(high __ramtop+-1)
 32322  016A78  64F7               	cpfsgt	tblptrh,c
 32323  016A7A  D003               	bra	u15287
 32324  016A7C  0008               	tblrd		*
 32325  016A7E  50F5               	movf	tablat,w,c
 32326  016A80  D005               	bra	u15280
 32327  016A82                     u15287:
 32328  016A82  CFF6 FFE9          	movff	tblptrl,fsr0l
 32329  016A86  CFF7 FFEA          	movff	tblptrh,fsr0h
 32330  016A8A  50EF               	movf	indf0,w,c
 32331  016A8C                     u15280:
 32332  016A8C  0900               	iorlw	0
 32333  016A8E  B4D8               	btfsc	status,2,c
 32334  016A90  0012               	return	
 32335  016A92  0101               	movlb	1	; () banked
 32336  016A94  511A               	movf	BufferCopy@count& (0+255),w,b
 32337  016A96  0101               	movlb	1	; () banked
 32338  016A98  B4D8               	btfsc	status,2,c
 32339  016A9A  0012               	return	
 32340  016A9C  D7C7               	goto	l12419
 32341                           
 32342                           ; BSR set to: 1
 32343  016A9E  0012               	return	
 32344                           
 32345                           ; BSR set to: 1
 32346  016AA0  0012               	return		;funcret
 32347  016AA2                     __end_of_BufferCopy:
 32348                           	opt stack 0
 32349                           tblptru	equ	0xFF8
 32350                           tblptrh	equ	0xFF7
 32351                           tblptrl	equ	0xFF6
 32352                           tablat	equ	0xFF5
 32353                           prodh	equ	0xFF4
 32354                           prodl	equ	0xFF3
 32355                           intcon	equ	0xFF2
 32356                           intcon2	equ	0xFF1
 32357                           indf0	equ	0xFEF
 32358                           postinc0	equ	0xFEE
 32359                           plusw0	equ	0xFEB
 32360                           fsr0h	equ	0xFEA
 32361                           fsr0l	equ	0xFE9
 32362                           wreg	equ	0xFE8
 32363                           indf1	equ	0xFE7
 32364                           postdec1	equ	0xFE5
 32365                           fsr1h	equ	0xFE2
 32366                           fsr1l	equ	0xFE1
 32367                           indf2	equ	0xFDF
 32368                           postinc2	equ	0xFDE
 32369                           postdec2	equ	0xFDD
 32370                           plusw2	equ	0xFDB
 32371                           fsr2h	equ	0xFDA
 32372                           fsr2l	equ	0xFD9
 32373                           status	equ	0xFD8
 32374                           
 32375 ;; *************** function _cleanBuffer *****************
 32376 ;; Defined at:
 32377 ;;		line 75 in file "MISC.c"
 32378 ;; Parameters:    Size  Location     Type
 32379 ;;  data            2   14[BANK1 ] PTR unsigned char 
 32380 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 32381 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 32382 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 32383 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 32384 ;;  count           2   16[BANK1 ] int 
 32385 ;; Auto vars:     Size  Location     Type
 32386 ;;  i               1   21[BANK1 ] unsigned char 
 32387 ;; Return value:  Size  Location     Type
 32388 ;;		None               void
 32389 ;; Registers used:
 32390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32391 ;; Tracked objects:
 32392 ;;		On entry : 0/0
 32393 ;;		On exit  : 0/0
 32394 ;;		Unchanged: 0/0
 32395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32396 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 32397 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 32398 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 32399 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 32400 ;;Total ram usage:        8 bytes
 32401 ;; Hardware stack levels used:    1
 32402 ;; Hardware stack levels required when called:    7
 32403 ;; This function calls:
 32404 ;;		Nothing
 32405 ;; This function is called by:
 32406 ;;		_main
 32407 ;;		_BufferCopy
 32408 ;;		_RemoveSpaces
 32409 ;;		_StringAddEqual
 32410 ;;		_Command
 32411 ;; This function uses a non-reentrant model
 32412 ;;
 32413                           
 32414                           	psect	text95
 32415  000608                     __ptext95:
 32416                           	opt stack 0
 32417  000608                     _cleanBuffer:
 32418                           	opt stack 23
 32419                           
 32420                           ;MISC.c: 77: unsigned char i=0;
 32421                           
 32422                           ;incstack = 0
 32423  000608  0E00               	movlw	0
 32424  00060A  0101               	movlb	1	; () banked
 32425  00060C  6F15               	movwf	cleanBuffer@i& (0+255),b
 32426                           
 32427                           ;MISC.c: 78: for(i=0; i<count;i++)
 32428  00060E  0E00               	movlw	0
 32429  000610  0101               	movlb	1	; () banked
 32430  000612  6F15               	movwf	cleanBuffer@i& (0+255),b
 32431  000614  D010               	goto	l12033
 32432  000616                     l12029:
 32433                           
 32434                           ; BSR set to: 1
 32435                           ;MISC.c: 79: {
 32436                           ;MISC.c: 80: data[i]= 0;
 32437  000616  0101               	movlb	1	; () banked
 32438  000618  5115               	movf	cleanBuffer@i& (0+255),w,b
 32439  00061A  0D01               	mullw	1
 32440  00061C  50F3               	movf	prodl,w,c
 32441  00061E  0101               	movlb	1	; () banked
 32442  000620  250E               	addwf	cleanBuffer@data& (0+255),w,b
 32443  000622  6ED9               	movwf	fsr2l,c
 32444  000624  50F4               	movf	prodh,w,c
 32445  000626  0101               	movlb	1	; () banked
 32446  000628  210F               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 32447  00062A  6EDA               	movwf	fsr2h,c
 32448  00062C  0E00               	movlw	0
 32449  00062E  6EDF               	movwf	indf2,c
 32450                           
 32451                           ; BSR set to: 1
 32452  000630  0101               	movlb	1	; () banked
 32453  000632  2B15               	incf	cleanBuffer@i& (0+255),f,b
 32454  000634  D000               	goto	l12033
 32455  000636                     l12033:
 32456                           
 32457                           ; BSR set to: 1
 32458  000636  0101               	movlb	1	; () banked
 32459  000638  5115               	movf	cleanBuffer@i& (0+255),w,b
 32460  00063A  0101               	movlb	1	; () banked
 32461  00063C  6F12               	movwf	??_cleanBuffer& (0+255),b
 32462  00063E  6B13               	clrf	(??_cleanBuffer+1)& (0+255),b
 32463  000640  0101               	movlb	1	; () banked
 32464  000642  5110               	movf	cleanBuffer@count& (0+255),w,b
 32465  000644  0101               	movlb	1	; () banked
 32466  000646  5D12               	subwf	??_cleanBuffer& (0+255),w,b
 32467  000648  0101               	movlb	1	; () banked
 32468  00064A  5113               	movf	(??_cleanBuffer+1)& (0+255),w,b
 32469  00064C  0A80               	xorlw	128
 32470  00064E  0101               	movlb	1	; () banked
 32471  000650  6F14               	movwf	(??_cleanBuffer+2)& (0+255),b
 32472  000652  0101               	movlb	1	; () banked
 32473  000654  5111               	movf	(cleanBuffer@count+1)& (0+255),w,b
 32474  000656  0A80               	xorlw	128
 32475  000658  0101               	movlb	1	; () banked
 32476  00065A  5914               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 32477  00065C  A0D8               	btfss	status,0,c
 32478  00065E  D7DB               	goto	l12029
 32479                           
 32480                           ; BSR set to: 1
 32481                           
 32482                           ; BSR set to: 1
 32483  000660  0012               	return		;funcret
 32484  000662                     __end_of_cleanBuffer:
 32485                           	opt stack 0
 32486                           tblptru	equ	0xFF8
 32487                           tblptrh	equ	0xFF7
 32488                           tblptrl	equ	0xFF6
 32489                           tablat	equ	0xFF5
 32490                           prodh	equ	0xFF4
 32491                           prodl	equ	0xFF3
 32492                           intcon	equ	0xFF2
 32493                           intcon2	equ	0xFF1
 32494                           indf0	equ	0xFEF
 32495                           postinc0	equ	0xFEE
 32496                           plusw0	equ	0xFEB
 32497                           fsr0h	equ	0xFEA
 32498                           fsr0l	equ	0xFE9
 32499                           wreg	equ	0xFE8
 32500                           indf1	equ	0xFE7
 32501                           postdec1	equ	0xFE5
 32502                           fsr1h	equ	0xFE2
 32503                           fsr1l	equ	0xFE1
 32504                           indf2	equ	0xFDF
 32505                           postinc2	equ	0xFDE
 32506                           postdec2	equ	0xFDD
 32507                           plusw2	equ	0xFDB
 32508                           fsr2h	equ	0xFDA
 32509                           fsr2l	equ	0xFD9
 32510                           status	equ	0xFD8
 32511                           
 32512 ;; *************** function _InternalADC_Read *****************
 32513 ;; Defined at:
 32514 ;;		line 110 in file "ADC.c"
 32515 ;; Parameters:    Size  Location     Type
 32516 ;;  channel         1    wreg     unsigned char 
 32517 ;; Auto vars:     Size  Location     Type
 32518 ;;  channel         1   33[BANK1 ] unsigned char 
 32519 ;; Return value:  Size  Location     Type
 32520 ;;                  2   29[BANK1 ] int 
 32521 ;; Registers used:
 32522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32523 ;; Tracked objects:
 32524 ;;		On entry : 0/0
 32525 ;;		On exit  : 0/0
 32526 ;;		Unchanged: 0/0
 32527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32528 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 32529 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 32530 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 32531 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 32532 ;;Total ram usage:        5 bytes
 32533 ;; Hardware stack levels used:    1
 32534 ;; Hardware stack levels required when called:   10
 32535 ;; This function calls:
 32536 ;;		_UARTstring
 32537 ;; This function is called by:
 32538 ;;		_Command
 32539 ;;		_RTC_INIT
 32540 ;; This function uses a non-reentrant model
 32541 ;;
 32542                           
 32543                           	psect	text96
 32544  017B86                     __ptext96:
 32545                           	opt stack 0
 32546  017B86                     _InternalADC_Read:
 32547                           	opt stack 19
 32548                           
 32549                           ; BSR set to: 1
 32550                           ;incstack = 0
 32551                           ;InternalADC_Read@channel stored from wreg
 32552  017B86  0101               	movlb	1	; () banked
 32553  017B88  6F21               	movwf	InternalADC_Read@channel& (0+255),b
 32554                           
 32555                           ; BSR set to: 1
 32556                           ;ADC.c: 112: ADCON0 =0;
 32557  017B8A  0E00               	movlw	0
 32558  017B8C  6EC2               	movwf	4034,c	;volatile
 32559                           
 32560                           ; BSR set to: 1
 32561                           ;ADC.c: 113: if(channel > 10)
 32562  017B8E  0E0A               	movlw	10
 32563  017B90  0101               	movlb	1	; () banked
 32564  017B92  6521               	cpfsgt	InternalADC_Read@channel& (0+255),b
 32565  017B94  D00E               	goto	l13903
 32566                           
 32567                           ; BSR set to: 1
 32568                           ;ADC.c: 114: {
 32569                           ;ADC.c: 115: UARTstring("ADC Channel Out of Bounds");
 32570  017B96  0E95               	movlw	low STR_320
 32571  017B98  0101               	movlb	1	; () banked
 32572  017B9A  6F19               	movwf	UARTstring@data& (0+255),b
 32573  017B9C  0EF5               	movlw	high STR_320
 32574  017B9E  0101               	movlb	1	; () banked
 32575  017BA0  6F1A               	movwf	(UARTstring@data+1)& (0+255),b
 32576  017BA2  EC03  F0B8         	call	_UARTstring	;wreg free
 32577                           
 32578                           ;ADC.c: 116: return 0;
 32579  017BA6  0E00               	movlw	0
 32580  017BA8  0101               	movlb	1	; () banked
 32581  017BAA  6F1E               	movwf	(?_InternalADC_Read+1)& (0+255),b
 32582  017BAC  0E00               	movlw	0
 32583  017BAE  6F1D               	movwf	?_InternalADC_Read& (0+255),b
 32584                           
 32585                           ; BSR set to: 1
 32586  017BB0  0012               	return	
 32587  017BB2                     l13903:
 32588                           
 32589                           ; BSR set to: 1
 32590                           ;ADC.c: 117: }
 32591                           ;ADC.c: 118: ADCON0 |= (channel << 2);
 32592  017BB2  0101               	movlb	1	; () banked
 32593  017BB4  4521               	rlncf	InternalADC_Read@channel& (0+255),w,b
 32594  017BB6  46E8               	rlncf	wreg,f,c
 32595  017BB8  0BFC               	andlw	252
 32596  017BBA  12C2               	iorwf	4034,f,c	;volatile
 32597                           
 32598                           ;ADC.c: 119: ADCON2 |= 0b10100000;
 32599  017BBC  0EA0               	movlw	160
 32600  017BBE  12C0               	iorwf	4032,f,c	;volatile
 32601                           
 32602                           ;ADC.c: 120: ADCON2 |= 0b00000110;
 32603  017BC0  0E06               	movlw	6
 32604  017BC2  12C0               	iorwf	4032,f,c	;volatile
 32605                           
 32606                           ; BSR set to: 1
 32607                           ;ADC.c: 121: ADCON0 |= 0b00000001;
 32608  017BC4  80C2               	bsf	4034,0,c	;volatile
 32609                           
 32610                           ; BSR set to: 1
 32611                           ;ADC.c: 122: (PIE1bits.ADIE=0);
 32612  017BC6  9C9D               	bcf	3997,6,c	;volatile
 32613                           
 32614                           ; BSR set to: 1
 32615                           ;ADC.c: 123: ADCON0 |= 0b00000010;
 32616  017BC8  82C2               	bsf	4034,1,c	;volatile
 32617                           
 32618                           ;ADC.c: 124: while(ADCON0 & 0b00000010);
 32619  017BCA  D000               	goto	l978
 32620  017BCC                     l978:
 32621                           
 32622                           ; BSR set to: 1
 32623  017BCC  B2C2               	btfsc	4034,1,c	;volatile
 32624  017BCE  D7FE               	goto	l978
 32625                           
 32626                           ; BSR set to: 1
 32627                           ;ADC.c: 125: return ((ADRESH << 8) + ADRESL);
 32628                           
 32629                           ; BSR set to: 1
 32630  017BD0  50C4               	movf	4036,w,c	;volatile
 32631  017BD2  0101               	movlb	1	; () banked
 32632  017BD4  6F20               	movwf	(??_InternalADC_Read+1)& (0+255),b
 32633  017BD6  6B1F               	clrf	??_InternalADC_Read& (0+255),b
 32634  017BD8  50C3               	movf	4035,w,c	;volatile
 32635  017BDA  0101               	movlb	1	; () banked
 32636  017BDC  251F               	addwf	??_InternalADC_Read& (0+255),w,b
 32637  017BDE  0101               	movlb	1	; () banked
 32638  017BE0  6F1D               	movwf	?_InternalADC_Read& (0+255),b
 32639  017BE2  0E00               	movlw	0
 32640  017BE4  0101               	movlb	1	; () banked
 32641  017BE6  2120               	addwfc	(??_InternalADC_Read+1)& (0+255),w,b
 32642  017BE8  0101               	movlb	1	; () banked
 32643  017BEA  6F1E               	movwf	(?_InternalADC_Read+1)& (0+255),b
 32644  017BEC  0012               	return	
 32645                           
 32646                           ; BSR set to: 1
 32647                           
 32648                           ; BSR set to: 1
 32649  017BEE  0012               	return		;funcret
 32650  017BF0                     __end_of_InternalADC_Read:
 32651                           	opt stack 0
 32652                           tblptru	equ	0xFF8
 32653                           tblptrh	equ	0xFF7
 32654                           tblptrl	equ	0xFF6
 32655                           tablat	equ	0xFF5
 32656                           prodh	equ	0xFF4
 32657                           prodl	equ	0xFF3
 32658                           intcon	equ	0xFF2
 32659                           intcon2	equ	0xFF1
 32660                           indf0	equ	0xFEF
 32661                           postinc0	equ	0xFEE
 32662                           plusw0	equ	0xFEB
 32663                           fsr0h	equ	0xFEA
 32664                           fsr0l	equ	0xFE9
 32665                           wreg	equ	0xFE8
 32666                           indf1	equ	0xFE7
 32667                           postdec1	equ	0xFE5
 32668                           fsr1h	equ	0xFE2
 32669                           fsr1l	equ	0xFE1
 32670                           indf2	equ	0xFDF
 32671                           postinc2	equ	0xFDE
 32672                           postdec2	equ	0xFDD
 32673                           plusw2	equ	0xFDB
 32674                           fsr2h	equ	0xFDA
 32675                           fsr2l	equ	0xFD9
 32676                           status	equ	0xFD8
 32677                           
 32678 ;; *************** function _UARTstring *****************
 32679 ;; Defined at:
 32680 ;;		line 233 in file "UART.c"
 32681 ;; Parameters:    Size  Location     Type
 32682 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 32683 ;;		 -> STR_324(44), STR_320(26), STR_319(3), STR_317(18), 
 32684 ;;		 -> STR_315(18), STR_311(20), STR_288(24), STR_285(3), 
 32685 ;;		 -> STR_283(15), STR_282(22), STR_281(50), STR_280(8), 
 32686 ;;		 -> STR_279(6), STR_278(6), STR_277(11), STR_276(17), 
 32687 ;;		 -> STR_275(12), STR_274(13), STR_273(10), STR_272(12), 
 32688 ;;		 -> STR_267(28), STR_266(68), STR_265(9), STR_264(11), 
 32689 ;;		 -> STR_263(23), STR_261(19), STR_259(20), STR_256(20), 
 32690 ;;		 -> STR_247(21), STR_246(61), STR_245(69), STR_244(7), 
 32691 ;;		 -> STR_243(7), STR_242(10), STR_241(11), STR_240(29), 
 32692 ;;		 -> STR_239(13), STR_238(33), STR_237(25), STR_236(28), 
 32693 ;;		 -> STR_235(3), STR_234(26), STR_233(2), STR_232(34), 
 32694 ;;		 -> STR_231(37), STR_228(24), STR_224(3), STR_214(13), 
 32695 ;;		 -> STR_213(73), STR_212(5), STR_211(12), STR_210(17), 
 32696 ;;		 -> STR_204(28), STR_202(30), STR_200(33), STR_193(42), 
 32697 ;;		 -> STR_192(62), STR_191(26), STR_187(43), STR_185(48), 
 32698 ;;		 -> STR_183(27), STR_176(42), STR_175(66), STR_174(25), 
 32699 ;;		 -> STR_172(49), Command@buf(200), STR_168(33), STR_166(38), 
 32700 ;;		 -> STR_164(27), STR_163(28), STR_153(37), STR_152(68), 
 32701 ;;		 -> STR_151(18), STR_150(15), STR_149(11), STR_148(28), 
 32702 ;;		 -> STR_146(18), STR_144(32), STR_140(31), STR_136(38), 
 32703 ;;		 -> STR_123(24), STR_122(68), STR_121(10), STR_120(6), 
 32704 ;;		 -> STR_119(8), STR_118(11), STR_117(21), STR_115(16), 
 32705 ;;		 -> STR_113(19), STR_110(18), STR_107(16), STR_104(15), 
 32706 ;;		 -> STR_101(22), STR_89(27), STR_88(68), STR_87(7), 
 32707 ;;		 -> STR_86(8), STR_85(11), STR_84(24), STR_82(19), 
 32708 ;;		 -> STR_80(19), STR_77(18), STR_74(25), STR_65(17), 
 32709 ;;		 -> STR_64(68), STR_63(8), STR_62(7), STR_61(11), 
 32710 ;;		 -> STR_60(17), STR_58(12), STR_56(9), STR_53(8), 
 32711 ;;		 -> STR_50(13), STR_47(9), STR_44(8), STR_41(13), 
 32712 ;;		 -> STR_36(4), STR_35(22), STR_29(22), STR_28(3), 
 32713 ;;		 -> SetBaud@buf(50), STR_22(4), STR_21(29), STR_11(12), 
 32714 ;;		 -> STR_8(54), STR_7(3), Version(20), STR_6(19), 
 32715 ;;		 -> STR_5(38), low_isr@TEMP_Rxdata(100), STR_4(2), STR_3(2), 
 32716 ;;		 -> STR_2(2), STR_1(2), 
 32717 ;; Auto vars:     Size  Location     Type
 32718 ;;		None
 32719 ;; Return value:  Size  Location     Type
 32720 ;;		None               void
 32721 ;; Registers used:
 32722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32723 ;; Tracked objects:
 32724 ;;		On entry : 0/0
 32725 ;;		On exit  : 0/0
 32726 ;;		Unchanged: 0/0
 32727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32728 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 32729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32730 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 32731 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 32732 ;;Total ram usage:        4 bytes
 32733 ;; Hardware stack levels used:    1
 32734 ;; Hardware stack levels required when called:    9
 32735 ;; This function calls:
 32736 ;;		_UARTchar
 32737 ;; This function is called by:
 32738 ;;		_main
 32739 ;;		_SetBaud
 32740 ;;		_Command
 32741 ;;		_InternalADC_Read
 32742 ;; This function uses a non-reentrant model
 32743 ;;
 32744                           
 32745                           	psect	text97
 32746  017006                     __ptext97:
 32747                           	opt stack 0
 32748  017006                     _UARTstring:
 32749                           	opt stack 21
 32750  017006                     
 32751                           ;UART.c: 236: {
 32752                           ;UART.c: 237: if(*data != 0)
 32753  017006  C119  FFF6         	movff	UARTstring@data,tblptrl
 32754  01700A  C11A  FFF7         	movff	UARTstring@data+1,tblptrh
 32755  01700E  0E00               	movlw	low (__mediumconst shr (0+16))
 32756  017010  6EF8               	movwf	tblptru,c
 32757  017012  0E0C               	movlw	(high __ramtop+-1)
 32758  017014  64F7               	cpfsgt	tblptrh,c
 32759  017016  D003               	bra	u15137
 32760  017018  0008               	tblrd		*
 32761  01701A  50F5               	movf	tablat,w,c
 32762  01701C  D005               	bra	u15130
 32763  01701E                     u15137:
 32764  01701E  CFF6 FFE9          	movff	tblptrl,fsr0l
 32765  017022  CFF7 FFEA          	movff	tblptrh,fsr0h
 32766  017026  50EF               	movf	indf0,w,c
 32767  017028                     u15130:
 32768  017028  0900               	iorlw	0
 32769  01702A  B4D8               	btfsc	status,2,c
 32770  01702C  D01E               	goto	l12375
 32771                           
 32772                           ;UART.c: 238: {
 32773                           ;UART.c: 239: UARTchar((unsigned char) *data, 0, 0);
 32774  01702E  0E00               	movlw	0
 32775  017030  0101               	movlb	1	; () banked
 32776  017032  6F15               	movwf	UARTchar@NinethBit_override& (0+255),b
 32777  017034  0E00               	movlw	0
 32778  017036  0101               	movlb	1	; () banked
 32779  017038  6F16               	movwf	UARTchar@NinethBit_override_data& (0+255),b
 32780  01703A  C119  FFF6         	movff	UARTstring@data,tblptrl
 32781  01703E  C11A  FFF7         	movff	UARTstring@data+1,tblptrh
 32782  017042  0E00               	movlw	low (__mediumconst shr (0+16))
 32783  017044  6EF8               	movwf	tblptru,c
 32784  017046  0E0C               	movlw	(high __ramtop+-1)
 32785  017048  64F7               	cpfsgt	tblptrh,c
 32786  01704A  D003               	bra	u15157
 32787  01704C  0008               	tblrd		*
 32788  01704E  50F5               	movf	tablat,w,c
 32789  017050  D005               	bra	u15150
 32790  017052                     u15157:
 32791  017052  CFF6 FFE9          	movff	tblptrl,fsr0l
 32792  017056  CFF7 FFEA          	movff	tblptrh,fsr0h
 32793  01705A  50EF               	movf	indf0,w,c
 32794  01705C                     u15150:
 32795  01705C  ECCC  F0B9         	call	_UARTchar
 32796                           
 32797                           ;UART.c: 240: while((!TXSTAbits.TRMT));
 32798  017060  D000               	goto	l521
 32799  017062                     l521:
 32800  017062  B2AC               	btfsc	4012,1,c	;volatile
 32801  017064  D002               	goto	l12375
 32802  017066  D7FD               	goto	l521
 32803  017068  D000               	goto	l12375
 32804  01706A                     l12375:
 32805                           
 32806                           ;UART.c: 241: }
 32807                           ;UART.c: 242: } while( *data++);
 32808  01706A  0101               	movlb	1	; () banked
 32809  01706C  5119               	movf	UARTstring@data& (0+255),w,b
 32810  01706E  0101               	movlb	1	; () banked
 32811  017070  6F1B               	movwf	??_UARTstring& (0+255),b
 32812  017072  0101               	movlb	1	; () banked
 32813  017074  511A               	movf	(UARTstring@data+1)& (0+255),w,b
 32814  017076  0101               	movlb	1	; () banked
 32815  017078  6F1C               	movwf	(??_UARTstring+1)& (0+255),b
 32816  01707A  0101               	movlb	1	; () banked
 32817  01707C  4B19               	infsnz	UARTstring@data& (0+255),f,b
 32818  01707E  2B1A               	incf	(UARTstring@data+1)& (0+255),f,b
 32819  017080  C11B  FFF6         	movff	??_UARTstring,tblptrl
 32820  017084  C11C  FFF7         	movff	??_UARTstring+1,tblptrh
 32821  017088  0E00               	movlw	low (__mediumconst shr (0+16))
 32822  01708A  6EF8               	movwf	tblptru,c
 32823  01708C  0E0C               	movlw	(high __ramtop+-1)
 32824  01708E  64F7               	cpfsgt	tblptrh,c
 32825  017090  D003               	bra	u15177
 32826  017092  0008               	tblrd		*
 32827  017094  50F5               	movf	tablat,w,c
 32828  017096  D005               	bra	u15170
 32829  017098                     u15177:
 32830  017098  CFF6 FFE9          	movff	tblptrl,fsr0l
 32831  01709C  CFF7 FFEA          	movff	tblptrh,fsr0h
 32832  0170A0  50EF               	movf	indf0,w,c
 32833  0170A2                     u15170:
 32834  0170A2  0900               	iorlw	0
 32835  0170A4  A4D8               	btfss	status,2,c
 32836  0170A6  D7AF               	goto	l12371
 32837  0170A8  0012               	return		;funcret
 32838  0170AA                     __end_of_UARTstring:
 32839                           	opt stack 0
 32840                           tblptru	equ	0xFF8
 32841                           tblptrh	equ	0xFF7
 32842                           tblptrl	equ	0xFF6
 32843                           tablat	equ	0xFF5
 32844                           prodh	equ	0xFF4
 32845                           prodl	equ	0xFF3
 32846                           intcon	equ	0xFF2
 32847                           intcon2	equ	0xFF1
 32848                           indf0	equ	0xFEF
 32849                           postinc0	equ	0xFEE
 32850                           plusw0	equ	0xFEB
 32851                           fsr0h	equ	0xFEA
 32852                           fsr0l	equ	0xFE9
 32853                           wreg	equ	0xFE8
 32854                           indf1	equ	0xFE7
 32855                           postdec1	equ	0xFE5
 32856                           fsr1h	equ	0xFE2
 32857                           fsr1l	equ	0xFE1
 32858                           indf2	equ	0xFDF
 32859                           postinc2	equ	0xFDE
 32860                           postdec2	equ	0xFDD
 32861                           plusw2	equ	0xFDB
 32862                           fsr2h	equ	0xFDA
 32863                           fsr2l	equ	0xFD9
 32864                           status	equ	0xFD8
 32865                           
 32866 ;; *************** function _UARTchar *****************
 32867 ;; Defined at:
 32868 ;;		line 194 in file "UART.c"
 32869 ;; Parameters:    Size  Location     Type
 32870 ;;  data            1    wreg     unsigned char 
 32871 ;;  NinethBit_ov    1   21[BANK1 ] unsigned char 
 32872 ;;  NinethBit_ov    1   22[BANK1 ] unsigned char 
 32873 ;; Auto vars:     Size  Location     Type
 32874 ;;  data            1   24[BANK1 ] unsigned char 
 32875 ;; Return value:  Size  Location     Type
 32876 ;;		None               void
 32877 ;; Registers used:
 32878 ;;		wreg, status,2, status,0, cstack
 32879 ;; Tracked objects:
 32880 ;;		On entry : 0/0
 32881 ;;		On exit  : 0/0
 32882 ;;		Unchanged: 0/0
 32883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32884 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 32885 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 32886 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 32887 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 32888 ;;Total ram usage:        4 bytes
 32889 ;; Hardware stack levels used:    1
 32890 ;; Hardware stack levels required when called:    8
 32891 ;; This function calls:
 32892 ;;		_CheckSum_byte
 32893 ;; This function is called by:
 32894 ;;		_UARTstring
 32895 ;;		_UARTstringWAIT
 32896 ;; This function uses a non-reentrant model
 32897 ;;
 32898                           
 32899                           	psect	text98
 32900  017398                     __ptext98:
 32901                           	opt stack 0
 32902  017398                     _UARTchar:
 32903                           	opt stack 21
 32904                           
 32905                           ;incstack = 0
 32906                           ;UARTchar@data stored from wreg
 32907  017398  0101               	movlb	1	; () banked
 32908  01739A  6F18               	movwf	UARTchar@data& (0+255),b
 32909                           
 32910                           ; BSR set to: 1
 32911                           ;UART.c: 196: if(TXSTAbits.TX9)
 32912  01739C  ACAC               	btfss	4012,6,c	;volatile
 32913  01739E  D03A               	goto	l12023
 32914                           
 32915                           ; BSR set to: 1
 32916                           ;UART.c: 197: {
 32917                           ;UART.c: 199: if(!NinethBit_override)
 32918  0173A0  0101               	movlb	1	; () banked
 32919  0173A2  5115               	movf	UARTchar@NinethBit_override& (0+255),w,b
 32920  0173A4  0101               	movlb	1	; () banked
 32921  0173A6  B4D8               	btfsc	status,2,c
 32922  0173A8  D01C               	goto	l12019
 32923  0173AA  D028               	goto	l12021
 32924                           
 32925                           ; BSR set to: 1
 32926                           ;UART.c: 200: {
 32927                           ;UART.c: 202: switch (Global.Parity)
 32928  0173AC  D01A               	goto	l12019
 32929  0173AE                     l12013:
 32930                           
 32931                           ; BSR set to: 1
 32932                           ;UART.c: 205: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 3);
 32933  0173AE  C118  F10E         	movff	UARTchar@data,CheckSum_byte@This
 32934  0173B2  0101               	movlb	1	; () banked
 32935  0173B4  6B0F               	clrf	(CheckSum_byte@This+1)& (0+255),b
 32936  0173B6  0E03               	movlw	3
 32937  0173B8  0101               	movlb	1	; () banked
 32938  0173BA  6F10               	movwf	CheckSum_byte@Odd_Even& (0+255),b
 32939  0173BC  EC2B  F0BE         	call	_CheckSum_byte	;wreg free
 32940  0173C0  D009               	goto	L27
 32941  0173C2                     l12015:
 32942                           
 32943                           ; BSR set to: 1
 32944                           ;UART.c: 208: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 2);
 32945  0173C2  C118  F10E         	movff	UARTchar@data,CheckSum_byte@This
 32946  0173C6  0101               	movlb	1	; () banked
 32947  0173C8  6B0F               	clrf	(CheckSum_byte@This+1)& (0+255),b
 32948  0173CA  0E02               	movlw	2
 32949  0173CC  0101               	movlb	1	; () banked
 32950  0173CE  6F10               	movwf	CheckSum_byte@Odd_Even& (0+255),b
 32951  0173D0  EC2B  F0BE         	call	_CheckSum_byte	;wreg free
 32952  0173D4                     L27:
 32953  0173D4  0101               	movlb	1	; () banked
 32954  0173D6  6F17               	movwf	??_UARTchar& (0+255),b
 32955  0173D8  D016               	goto	L28
 32956  0173DA                     l510:
 32957                           
 32958                           ; BSR set to: 1
 32959                           ;UART.c: 211: TXSTAbits.TX9D = 1;
 32960  0173DA  80AC               	bsf	4012,0,c	;volatile
 32961                           
 32962                           ;UART.c: 212: break;
 32963  0173DC  D01B               	goto	l12023
 32964  0173DE                     l511:
 32965                           
 32966                           ; BSR set to: 1
 32967                           ;UART.c: 214: TXSTAbits.TX9D = 0;
 32968  0173DE  90AC               	bcf	4012,0,c	;volatile
 32969                           
 32970                           ; BSR set to: 1
 32971                           ;UART.c: 216: }
 32972                           
 32973                           ;UART.c: 215: break;
 32974  0173E0  D019               	goto	l12023
 32975  0173E2                     l12019:
 32976                           
 32977                           ; BSR set to: 1
 32978  0173E2  0101               	movlb	1	; () banked
 32979  0173E4  518E               	movf	(_Global+4)& (0+255),w,b
 32980                           
 32981                           ; Switch size 1, requested type "space"
 32982                           ; Number of cases is 3, Range of values is 1 to 3
 32983                           ; switch strategies available:
 32984                           ; Name         Instructions Cycles
 32985                           ; simple_byte           10     6 (average)
 32986                           ;	Chosen strategy is simple_byte
 32987  0173E6  0A01               	xorlw	1	; case 1
 32988  0173E8  B4D8               	btfsc	status,2,c
 32989  0173EA  D7E1               	goto	l12013
 32990  0173EC  0A03               	xorlw	3	; case 2
 32991  0173EE  B4D8               	btfsc	status,2,c
 32992  0173F0  D7E8               	goto	l12015
 32993  0173F2  0A01               	xorlw	1	; case 3
 32994  0173F4  B4D8               	btfsc	status,2,c
 32995  0173F6  D7F1               	goto	l510
 32996  0173F8  D7F2               	goto	l511
 32997                           
 32998                           ; BSR set to: 1
 32999                           ;UART.c: 217: }
 33000  0173FA  D00C               	goto	l12023
 33001  0173FC                     l12021:
 33002                           
 33003                           ; BSR set to: 1
 33004                           ;UART.c: 218: else
 33005                           ;UART.c: 219: {
 33006                           ;UART.c: 220: TXSTAbits.TX9D = (NinethBit_override_data & 0x01);
 33007  0173FC  C116  F117         	movff	UARTchar@NinethBit_override_data,??_UARTchar
 33008  017400  0E01               	movlw	1
 33009  017402  0101               	movlb	1	; () banked
 33010  017404  1717               	andwf	??_UARTchar& (0+255),f,b
 33011  017406                     L28:
 33012  017406  50AC               	movf	4012,w,c	;volatile
 33013  017408  0101               	movlb	1	; () banked
 33014  01740A  1917               	xorwf	??_UARTchar& (0+255),w,b
 33015  01740C  0BFE               	andlw	-2
 33016  01740E  1917               	xorwf	??_UARTchar& (0+255),w,b
 33017  017410  6EAC               	movwf	4012,c	;volatile
 33018                           
 33019                           ; BSR set to: 1
 33020  017412  D000               	goto	l12023
 33021  017414                     l12023:
 33022                           
 33023                           ; BSR set to: 1
 33024                           ;UART.c: 221: }
 33025                           ;UART.c: 222: }
 33026                           ;UART.c: 223: TX_OLD = data;
 33027  017414  C118  F0F2         	movff	UARTchar@data,_TX_OLD
 33028                           
 33029                           ; BSR set to: 1
 33030                           ;UART.c: 224: TXREG = data;
 33031  017418  C118  FFAD         	movff	UARTchar@data,4013	;volatile
 33032                           
 33033                           ;UART.c: 225: while(!TXSTAbits.TRMT);
 33034  01741C  D000               	goto	l513
 33035  01741E                     l513:
 33036  01741E  A2AC               	btfss	4012,1,c	;volatile
 33037  017420  D7FE               	goto	l513
 33038  017422  0012               	return		;funcret
 33039  017424                     __end_of_UARTchar:
 33040                           	opt stack 0
 33041                           tblptru	equ	0xFF8
 33042                           tblptrh	equ	0xFF7
 33043                           tblptrl	equ	0xFF6
 33044                           tablat	equ	0xFF5
 33045                           prodh	equ	0xFF4
 33046                           prodl	equ	0xFF3
 33047                           intcon	equ	0xFF2
 33048                           intcon2	equ	0xFF1
 33049                           indf0	equ	0xFEF
 33050                           postinc0	equ	0xFEE
 33051                           plusw0	equ	0xFEB
 33052                           fsr0h	equ	0xFEA
 33053                           fsr0l	equ	0xFE9
 33054                           wreg	equ	0xFE8
 33055                           indf1	equ	0xFE7
 33056                           postdec1	equ	0xFE5
 33057                           fsr1h	equ	0xFE2
 33058                           fsr1l	equ	0xFE1
 33059                           indf2	equ	0xFDF
 33060                           postinc2	equ	0xFDE
 33061                           postdec2	equ	0xFDD
 33062                           plusw2	equ	0xFDB
 33063                           fsr2h	equ	0xFDA
 33064                           fsr2l	equ	0xFD9
 33065                           status	equ	0xFD8
 33066                           
 33067 ;; *************** function _CheckSum_byte *****************
 33068 ;; Defined at:
 33069 ;;		line 359 in file "MISC.c"
 33070 ;; Parameters:    Size  Location     Type
 33071 ;;  This            2   14[BANK1 ] unsigned int 
 33072 ;;  Odd_Even        1   16[BANK1 ] unsigned char 
 33073 ;; Auto vars:     Size  Location     Type
 33074 ;;  ThisTemp        2   17[BANK1 ] unsigned int 
 33075 ;;  i               1   20[BANK1 ] unsigned char 
 33076 ;;  Parity          1   19[BANK1 ] unsigned char 
 33077 ;; Return value:  Size  Location     Type
 33078 ;;                  1    wreg      unsigned char 
 33079 ;; Registers used:
 33080 ;;		wreg, status,2, status,0
 33081 ;; Tracked objects:
 33082 ;;		On entry : 0/0
 33083 ;;		On exit  : 0/0
 33084 ;;		Unchanged: 0/0
 33085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33086 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 33087 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 33088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33089 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 33090 ;;Total ram usage:        7 bytes
 33091 ;; Hardware stack levels used:    1
 33092 ;; Hardware stack levels required when called:    7
 33093 ;; This function calls:
 33094 ;;		Nothing
 33095 ;; This function is called by:
 33096 ;;		_UARTchar
 33097 ;; This function uses a non-reentrant model
 33098 ;;
 33099                           
 33100                           	psect	text99
 33101  017C56                     __ptext99:
 33102                           	opt stack 0
 33103  017C56                     _CheckSum_byte:
 33104                           	opt stack 21
 33105                           
 33106                           ;MISC.c: 361: char i = 0;
 33107                           
 33108                           ;incstack = 0
 33109  017C56  0E00               	movlw	0
 33110  017C58  0101               	movlb	1	; () banked
 33111  017C5A  6F14               	movwf	CheckSum_byte@i& (0+255),b
 33112                           
 33113                           ;MISC.c: 362: unsigned char Parity = 0;
 33114  017C5C  0E00               	movlw	0
 33115  017C5E  0101               	movlb	1	; () banked
 33116  017C60  6F13               	movwf	CheckSum_byte@Parity& (0+255),b
 33117                           
 33118                           ; BSR set to: 1
 33119                           ;MISC.c: 363: unsigned int ThisTemp = This;
 33120  017C62  C10E  F111         	movff	CheckSum_byte@This,CheckSum_byte@ThisTemp
 33121  017C66  C10F  F112         	movff	CheckSum_byte@This+1,CheckSum_byte@ThisTemp+1
 33122                           
 33123                           ;MISC.c: 365: for (i =0; i<8; i++)
 33124  017C6A  0E00               	movlw	0
 33125  017C6C  0101               	movlb	1	; () banked
 33126  017C6E  6F14               	movwf	CheckSum_byte@i& (0+255),b
 33127  017C70                     l11907:
 33128                           
 33129                           ; BSR set to: 1
 33130  017C70  0E07               	movlw	7
 33131  017C72  0101               	movlb	1	; () banked
 33132  017C74  6514               	cpfsgt	CheckSum_byte@i& (0+255),b
 33133  017C76  D001               	goto	l402
 33134                           
 33135                           ; BSR set to: 1
 33136  017C78  D00C               	goto	l11915
 33137  017C7A                     l402:
 33138                           
 33139                           ; BSR set to: 1
 33140                           ;MISC.c: 366: {
 33141                           ;MISC.c: 367: if((ThisTemp & 0x01) == 1)
 33142  017C7A  0101               	movlb	1	; () banked
 33143  017C7C  A111               	btfss	CheckSum_byte@ThisTemp& (0+255),0,b
 33144  017C7E  D002               	goto	l404
 33145                           
 33146                           ; BSR set to: 1
 33147                           ;MISC.c: 368: {
 33148                           ;MISC.c: 369: Parity++;
 33149  017C80  0101               	movlb	1	; () banked
 33150  017C82  2B13               	incf	CheckSum_byte@Parity& (0+255),f,b
 33151  017C84                     l404:
 33152                           
 33153                           ; BSR set to: 1
 33154                           ;MISC.c: 370: }
 33155                           ;MISC.c: 371: ThisTemp >>= 1;
 33156  017C84  0101               	movlb	1	; () banked
 33157  017C86  90D8               	bcf	status,0,c
 33158  017C88  3312               	rrcf	(CheckSum_byte@ThisTemp+1)& (0+255),f,b
 33159  017C8A  3311               	rrcf	CheckSum_byte@ThisTemp& (0+255),f,b
 33160  017C8C  0101               	movlb	1	; () banked
 33161  017C8E  2B14               	incf	CheckSum_byte@i& (0+255),f,b
 33162  017C90  D7EF               	goto	l11907
 33163  017C92                     l11915:
 33164                           
 33165                           ; BSR set to: 1
 33166                           ;MISC.c: 372: }
 33167                           ;MISC.c: 373: if(Odd_Even == 3)
 33168  017C92  0E03               	movlw	3
 33169  017C94  0101               	movlb	1	; () banked
 33170  017C96  1910               	xorwf	CheckSum_byte@Odd_Even& (0+255),w,b
 33171  017C98  A4D8               	btfss	status,2,c
 33172  017C9A  D007               	goto	l405
 33173                           
 33174                           ; BSR set to: 1
 33175                           ;MISC.c: 374: {
 33176                           ;MISC.c: 375: if(Parity % 2 == 0)
 33177  017C9C  0101               	movlb	1	; () banked
 33178  017C9E  B113               	btfsc	CheckSum_byte@Parity& (0+255),0,b
 33179  017CA0  D002               	goto	l11923
 33180                           
 33181                           ; BSR set to: 1
 33182                           ;MISC.c: 376: {
 33183                           ;MISC.c: 377: return 1;
 33184  017CA2  0E01               	movlw	1
 33185                           
 33186                           ; BSR set to: 1
 33187  017CA4  0012               	return	
 33188  017CA6                     l11923:
 33189                           
 33190                           ; BSR set to: 1
 33191                           ;MISC.c: 378: }
 33192                           ;MISC.c: 379: return 0;
 33193  017CA6  0E00               	movlw	0
 33194                           
 33195                           ; BSR set to: 1
 33196                           ;MISC.c: 380: }
 33197                           
 33198                           ; BSR set to: 1
 33199  017CA8  0012               	return	
 33200  017CAA                     l405:
 33201                           
 33202                           ; BSR set to: 1
 33203                           ;MISC.c: 381: else
 33204                           ;MISC.c: 382: {
 33205                           ;MISC.c: 383: if(Parity % 2 == 1)
 33206  017CAA  0101               	movlb	1	; () banked
 33207  017CAC  A113               	btfss	CheckSum_byte@Parity& (0+255),0,b
 33208  017CAE  D002               	goto	l11933
 33209                           
 33210                           ; BSR set to: 1
 33211                           ;MISC.c: 384: {
 33212                           ;MISC.c: 385: return 1;
 33213  017CB0  0E01               	movlw	1
 33214                           
 33215                           ; BSR set to: 1
 33216  017CB2  0012               	return	
 33217  017CB4                     l11933:
 33218                           
 33219                           ; BSR set to: 1
 33220                           ;MISC.c: 386: }
 33221                           ;MISC.c: 387: return 0;
 33222  017CB4  0E00               	movlw	0
 33223                           
 33224                           ; BSR set to: 1
 33225  017CB6  0012               	return	
 33226                           
 33227                           ; BSR set to: 1
 33228                           
 33229                           ; BSR set to: 1
 33230  017CB8  0012               	return		;funcret
 33231  017CBA                     __end_of_CheckSum_byte:
 33232                           	opt stack 0
 33233                           tblptru	equ	0xFF8
 33234                           tblptrh	equ	0xFF7
 33235                           tblptrl	equ	0xFF6
 33236                           tablat	equ	0xFF5
 33237                           prodh	equ	0xFF4
 33238                           prodl	equ	0xFF3
 33239                           intcon	equ	0xFF2
 33240                           intcon2	equ	0xFF1
 33241                           indf0	equ	0xFEF
 33242                           postinc0	equ	0xFEE
 33243                           plusw0	equ	0xFEB
 33244                           fsr0h	equ	0xFEA
 33245                           fsr0l	equ	0xFE9
 33246                           wreg	equ	0xFE8
 33247                           indf1	equ	0xFE7
 33248                           postdec1	equ	0xFE5
 33249                           fsr1h	equ	0xFE2
 33250                           fsr1l	equ	0xFE1
 33251                           indf2	equ	0xFDF
 33252                           postinc2	equ	0xFDE
 33253                           postdec2	equ	0xFDD
 33254                           plusw2	equ	0xFDB
 33255                           fsr2h	equ	0xFDA
 33256                           fsr2l	equ	0xFD9
 33257                           status	equ	0xFD8
 33258                           
 33259 ;; *************** function _ISNUMBER *****************
 33260 ;; Defined at:
 33261 ;;		line 396 in file "MISC.c"
 33262 ;; Parameters:    Size  Location     Type
 33263 ;;  ascii           1    wreg     unsigned char 
 33264 ;; Auto vars:     Size  Location     Type
 33265 ;;  ascii           1   14[BANK1 ] unsigned char 
 33266 ;; Return value:  Size  Location     Type
 33267 ;;                  1    wreg      unsigned char 
 33268 ;; Registers used:
 33269 ;;		wreg, status,2, status,0
 33270 ;; Tracked objects:
 33271 ;;		On entry : 0/0
 33272 ;;		On exit  : 0/0
 33273 ;;		Unchanged: 0/0
 33274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33276 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 33277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33278 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 33279 ;;Total ram usage:        1 bytes
 33280 ;; Hardware stack levels used:    1
 33281 ;; Hardware stack levels required when called:    7
 33282 ;; This function calls:
 33283 ;;		Nothing
 33284 ;; This function is called by:
 33285 ;;		_Command
 33286 ;; This function uses a non-reentrant model
 33287 ;;
 33288                           
 33289                           	psect	text100
 33290  000DCA                     __ptext100:
 33291                           	opt stack 0
 33292  000DCA                     _ISNUMBER:
 33293                           	opt stack 22
 33294                           
 33295                           ; BSR set to: 1
 33296                           ;incstack = 0
 33297                           ;ISNUMBER@ascii stored from wreg
 33298  000DCA  0101               	movlb	1	; () banked
 33299  000DCC  6F0E               	movwf	ISNUMBER@ascii& (0+255),b
 33300                           
 33301                           ; BSR set to: 1
 33302                           ;MISC.c: 398: if(ascii >= '0' && ascii <='9')
 33303  000DCE  0E2F               	movlw	47
 33304  000DD0  0101               	movlb	1	; () banked
 33305  000DD2  650E               	cpfsgt	ISNUMBER@ascii& (0+255),b
 33306  000DD4  D006               	goto	l13723
 33307                           
 33308                           ; BSR set to: 1
 33309  000DD6  0E3A               	movlw	58
 33310  000DD8  0101               	movlb	1	; () banked
 33311  000DDA  610E               	cpfslt	ISNUMBER@ascii& (0+255),b
 33312  000DDC  D002               	goto	l13723
 33313                           
 33314                           ; BSR set to: 1
 33315                           ;MISC.c: 399: {
 33316                           ;MISC.c: 400: return 1;
 33317  000DDE  0E01               	movlw	1
 33318                           
 33319                           ; BSR set to: 1
 33320                           ;MISC.c: 401: }
 33321                           
 33322                           ; BSR set to: 1
 33323  000DE0  0012               	return	
 33324  000DE2                     l13723:
 33325                           
 33326                           ; BSR set to: 1
 33327                           ;MISC.c: 402: else
 33328                           ;MISC.c: 403: {
 33329                           ;MISC.c: 404: return 0;
 33330  000DE2  0E00               	movlw	0
 33331                           
 33332                           ; BSR set to: 1
 33333  000DE4  0012               	return	
 33334                           
 33335                           ; BSR set to: 1
 33336                           
 33337                           ; BSR set to: 1
 33338  000DE6  0012               	return		;funcret
 33339  000DE8                     __end_of_ISNUMBER:
 33340                           	opt stack 0
 33341                           tblptru	equ	0xFF8
 33342                           tblptrh	equ	0xFF7
 33343                           tblptrl	equ	0xFF6
 33344                           tablat	equ	0xFF5
 33345                           prodh	equ	0xFF4
 33346                           prodl	equ	0xFF3
 33347                           intcon	equ	0xFF2
 33348                           intcon2	equ	0xFF1
 33349                           indf0	equ	0xFEF
 33350                           postinc0	equ	0xFEE
 33351                           plusw0	equ	0xFEB
 33352                           fsr0h	equ	0xFEA
 33353                           fsr0l	equ	0xFE9
 33354                           wreg	equ	0xFE8
 33355                           indf1	equ	0xFE7
 33356                           postdec1	equ	0xFE5
 33357                           fsr1h	equ	0xFE2
 33358                           fsr1l	equ	0xFE1
 33359                           indf2	equ	0xFDF
 33360                           postinc2	equ	0xFDE
 33361                           postdec2	equ	0xFDD
 33362                           plusw2	equ	0xFDB
 33363                           fsr2h	equ	0xFDA
 33364                           fsr2l	equ	0xFD9
 33365                           status	equ	0xFD8
 33366                           
 33367 ;; *************** function _GetEnteredNumber *****************
 33368 ;; Defined at:
 33369 ;;		line 216 in file "MISC.c"
 33370 ;; Parameters:    Size  Location     Type
 33371 ;;  This            2   26[BANK1 ] PTR unsigned char 
 33372 ;;		 -> Rxdata(100), 
 33373 ;; Auto vars:     Size  Location     Type
 33374 ;;  temp            4   37[BANK1 ] long 
 33375 ;;  negative        1   36[BANK1 ] unsigned char 
 33376 ;;  i               1   35[BANK1 ] unsigned char 
 33377 ;; Return value:  Size  Location     Type
 33378 ;;                  4   26[BANK1 ] long 
 33379 ;; Registers used:
 33380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33381 ;; Tracked objects:
 33382 ;;		On entry : 0/0
 33383 ;;		On exit  : 0/0
 33384 ;;		Unchanged: 0/0
 33385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33386 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 33387 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 33388 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 33389 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 33390 ;;Total ram usage:       15 bytes
 33391 ;; Hardware stack levels used:    1
 33392 ;; Hardware stack levels required when called:    8
 33393 ;; This function calls:
 33394 ;;		___lmul
 33395 ;; This function is called by:
 33396 ;;		_Command
 33397 ;; This function uses a non-reentrant model
 33398 ;;
 33399                           
 33400                           	psect	text101
 33401  014B64                     __ptext101:
 33402                           	opt stack 0
 33403  014B64                     _GetEnteredNumber:
 33404                           	opt stack 21
 33405                           
 33406                           ;MISC.c: 218: unsigned char i =0;
 33407                           
 33408                           ; BSR set to: 1
 33409                           ;incstack = 0
 33410  014B64  0E00               	movlw	0
 33411  014B66  0101               	movlb	1	; () banked
 33412  014B68  6F23               	movwf	GetEnteredNumber@i& (0+255),b
 33413                           
 33414                           ;MISC.c: 219: long temp =0;
 33415  014B6A  0E00               	movlw	0
 33416  014B6C  0101               	movlb	1	; () banked
 33417  014B6E  6F25               	movwf	GetEnteredNumber@temp& (0+255),b
 33418  014B70  0E00               	movlw	0
 33419  014B72  6F26               	movwf	(GetEnteredNumber@temp+1)& (0+255),b
 33420  014B74  0E00               	movlw	0
 33421  014B76  6F27               	movwf	(GetEnteredNumber@temp+2)& (0+255),b
 33422  014B78  0E00               	movlw	0
 33423  014B7A  6F28               	movwf	(GetEnteredNumber@temp+3)& (0+255),b
 33424                           
 33425                           ;MISC.c: 220: unsigned char negative =0;
 33426  014B7C  0E00               	movlw	0
 33427  014B7E  0101               	movlb	1	; () banked
 33428  014B80  6F24               	movwf	GetEnteredNumber@negative& (0+255),b
 33429                           
 33430                           ;MISC.c: 221: while(*This != '=' && *This != 0)
 33431  014B82  D004               	goto	l13571
 33432  014B84                     l13569:
 33433                           
 33434                           ; BSR set to: 1
 33435                           ;MISC.c: 222: {
 33436                           ;MISC.c: 223: This++;
 33437  014B84  0101               	movlb	1	; () banked
 33438  014B86  4B1A               	infsnz	GetEnteredNumber@This& (0+255),f,b
 33439  014B88  2B1B               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 33440  014B8A  D000               	goto	l13571
 33441  014B8C                     l13571:
 33442                           
 33443                           ; BSR set to: 1
 33444  014B8C  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 33445  014B90  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 33446  014B94  0E3D               	movlw	61
 33447  014B96  18DE               	xorwf	postinc2,w,c
 33448  014B98  B4D8               	btfsc	status,2,c
 33449  014B9A  D009               	goto	l13575
 33450                           
 33451                           ; BSR set to: 1
 33452  014B9C  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 33453  014BA0  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 33454  014BA4  50DF               	movf	indf2,w,c
 33455  014BA6  B4D8               	btfsc	status,2,c
 33456  014BA8  D002               	goto	l13575
 33457  014BAA  D7EC               	goto	l13569
 33458                           
 33459                           ; BSR set to: 1
 33460  014BAC  D000               	goto	l13575
 33461  014BAE                     l13575:
 33462                           
 33463                           ; BSR set to: 1
 33464                           ;MISC.c: 225: }
 33465                           ;MISC.c: 226: if(*This == 0)
 33466  014BAE  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 33467  014BB2  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 33468  014BB6  50DF               	movf	indf2,w,c
 33469  014BB8  A4D8               	btfss	status,2,c
 33470  014BBA  D00A               	goto	l13581
 33471                           
 33472                           ; BSR set to: 1
 33473                           ;MISC.c: 227: {
 33474                           ;MISC.c: 228: return 2147483647L;
 33475  014BBC  0EFF               	movlw	255
 33476  014BBE  0101               	movlb	1	; () banked
 33477  014BC0  6F1A               	movwf	?_GetEnteredNumber& (0+255),b
 33478  014BC2  0EFF               	movlw	255
 33479  014BC4  6F1B               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 33480  014BC6  0EFF               	movlw	255
 33481  014BC8  6F1C               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 33482  014BCA  0E7F               	movlw	127
 33483  014BCC  6F1D               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 33484                           
 33485                           ; BSR set to: 1
 33486  014BCE  0012               	return	
 33487  014BD0                     l13581:
 33488                           
 33489                           ; BSR set to: 1
 33490                           ;MISC.c: 229: }
 33491                           ;MISC.c: 230: This++;
 33492  014BD0  0101               	movlb	1	; () banked
 33493  014BD2  4B1A               	infsnz	GetEnteredNumber@This& (0+255),f,b
 33494  014BD4  2B1B               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 33495                           
 33496                           ; BSR set to: 1
 33497                           ;MISC.c: 231: if(*This == ' ')
 33498  014BD6  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 33499  014BDA  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 33500  014BDE  0E20               	movlw	32
 33501  014BE0  18DE               	xorwf	postinc2,w,c
 33502  014BE2  B4D8               	btfsc	status,2,c
 33503  014BE4  D07E               	goto	l13619
 33504                           
 33505                           ; BSR set to: 1
 33506                           ;MISC.c: 236: else if (*This == '=')
 33507                           
 33508                           ; BSR set to: 1
 33509                           
 33510                           ;MISC.c: 235: }
 33511                           
 33512                           ; BSR set to: 1
 33513                           ;MISC.c: 232: {
 33514                           ;MISC.c: 233: This++;
 33515  014BE6  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 33516  014BEA  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 33517  014BEE  0E3D               	movlw	61
 33518  014BF0  18DE               	xorwf	postinc2,w,c
 33519  014BF2  A4D8               	btfss	status,2,c
 33520  014BF4  D00B               	goto	l13595
 33521                           
 33522                           ; BSR set to: 1
 33523                           ;MISC.c: 237: {
 33524                           ;MISC.c: 238: return 2147483646L;
 33525  014BF6  0EFE               	movlw	254
 33526  014BF8  0101               	movlb	1	; () banked
 33527  014BFA  6F1A               	movwf	?_GetEnteredNumber& (0+255),b
 33528  014BFC  0EFF               	movlw	255
 33529  014BFE  6F1B               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 33530  014C00  0EFF               	movlw	255
 33531  014C02  6F1C               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 33532  014C04  0E7F               	movlw	127
 33533  014C06  6F1D               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 33534                           
 33535                           ; BSR set to: 1
 33536  014C08  0012               	return	
 33537                           
 33538                           ; BSR set to: 1
 33539                           ;MISC.c: 239: }
 33540  014C0A  D06F               	goto	l13621
 33541  014C0C                     l13595:
 33542                           
 33543                           ; BSR set to: 1
 33544                           ;MISC.c: 240: else if(*This == '-')
 33545  014C0C  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 33546  014C10  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 33547  014C14  0E2D               	movlw	45
 33548  014C16  18DE               	xorwf	postinc2,w,c
 33549  014C18  A4D8               	btfss	status,2,c
 33550  014C1A  D004               	goto	l13601
 33551                           
 33552                           ; BSR set to: 1
 33553                           ;MISC.c: 241: {
 33554                           ;MISC.c: 242: negative = 1;
 33555  014C1C  0E01               	movlw	1
 33556  014C1E  0101               	movlb	1	; () banked
 33557  014C20  6F24               	movwf	GetEnteredNumber@negative& (0+255),b
 33558  014C22  D05F               	goto	l13619
 33559  014C24                     l13601:
 33560                           
 33561                           ; BSR set to: 1
 33562                           ;MISC.c: 246: else if(*This == 0)
 33563  014C24  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 33564  014C28  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 33565  014C2C  50DF               	movf	indf2,w,c
 33566  014C2E  A4D8               	btfss	status,2,c
 33567  014C30  D05C               	goto	l13621
 33568                           
 33569                           ; BSR set to: 1
 33570                           ;MISC.c: 247: {
 33571                           ;MISC.c: 248: return 2147483645L;
 33572  014C32  0EFD               	movlw	253
 33573  014C34  D7E1               	goto	L29
 33574                           
 33575                           ; BSR set to: 1
 33576  014C36  0012               	return	
 33577                           
 33578                           ; BSR set to: 1
 33579                           ;MISC.c: 249: }
 33580                           ;MISC.c: 250: while(*This >=48 && *This <= 57)
 33581                           
 33582                           ; BSR set to: 1
 33583                           
 33584                           ; BSR set to: 1
 33585                           
 33586                           ; BSR set to: 1
 33587  014C38  D058               	goto	l13621
 33588  014C3A                     l13607:
 33589                           
 33590                           ; BSR set to: 1
 33591                           ;MISC.c: 251: {
 33592                           ;MISC.c: 252: temp = temp * 10;
 33593  014C3A  C125  F10E         	movff	GetEnteredNumber@temp,___lmul@multiplier
 33594  014C3E  C126  F10F         	movff	GetEnteredNumber@temp+1,___lmul@multiplier+1
 33595  014C42  C127  F110         	movff	GetEnteredNumber@temp+2,___lmul@multiplier+2
 33596  014C46  C128  F111         	movff	GetEnteredNumber@temp+3,___lmul@multiplier+3
 33597  014C4A  0E0A               	movlw	10
 33598  014C4C  0101               	movlb	1	; () banked
 33599  014C4E  6F12               	movwf	___lmul@multiplicand& (0+255),b
 33600  014C50  0E00               	movlw	0
 33601  014C52  6F13               	movwf	(___lmul@multiplicand+1)& (0+255),b
 33602  014C54  0E00               	movlw	0
 33603  014C56  6F14               	movwf	(___lmul@multiplicand+2)& (0+255),b
 33604  014C58  0E00               	movlw	0
 33605  014C5A  6F15               	movwf	(___lmul@multiplicand+3)& (0+255),b
 33606  014C5C  EC8A  F0BB         	call	___lmul	;wreg free
 33607  014C60  C10E  F125         	movff	?___lmul,GetEnteredNumber@temp
 33608  014C64  C10F  F126         	movff	?___lmul+1,GetEnteredNumber@temp+1
 33609  014C68  C110  F127         	movff	?___lmul+2,GetEnteredNumber@temp+2
 33610  014C6C  C111  F128         	movff	?___lmul+3,GetEnteredNumber@temp+3
 33611                           
 33612                           ;MISC.c: 253: temp += *This - 48;
 33613  014C70  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 33614  014C74  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 33615  014C78  50DF               	movf	indf2,w,c
 33616  014C7A  0101               	movlb	1	; () banked
 33617  014C7C  6F1E               	movwf	??_GetEnteredNumber& (0+255),b
 33618  014C7E  0ED0               	movlw	208
 33619  014C80  0101               	movlb	1	; () banked
 33620  014C82  251E               	addwf	??_GetEnteredNumber& (0+255),w,b
 33621  014C84  0101               	movlb	1	; () banked
 33622  014C86  6F1F               	movwf	(??_GetEnteredNumber+1)& (0+255),b
 33623  014C88  0101               	movlb	1	; () banked
 33624  014C8A  6B20               	clrf	(??_GetEnteredNumber+2)& (0+255),b
 33625  014C8C  0EFF               	movlw	255
 33626  014C8E  2320               	addwfc	(??_GetEnteredNumber+2)& (0+255),f,b
 33627  014C90  0101               	movlb	1	; () banked
 33628  014C92  6B21               	clrf	(??_GetEnteredNumber+3)& (0+255),b
 33629  014C94  0101               	movlb	1	; () banked
 33630  014C96  BF20               	btfsc	(??_GetEnteredNumber+2)& (0+255),7,b
 33631  014C98  0721               	decf	(??_GetEnteredNumber+3)& (0+255),f,b
 33632  014C9A  0101               	movlb	1	; () banked
 33633  014C9C  5121               	movf	(??_GetEnteredNumber+3)& (0+255),w,b
 33634  014C9E  0101               	movlb	1	; () banked
 33635  014CA0  6F22               	movwf	(??_GetEnteredNumber+4)& (0+255),b
 33636  014CA2  0101               	movlb	1	; () banked
 33637  014CA4  511F               	movf	(??_GetEnteredNumber+1)& (0+255),w,b
 33638  014CA6  0101               	movlb	1	; () banked
 33639  014CA8  2725               	addwf	GetEnteredNumber@temp& (0+255),f,b
 33640  014CAA  0101               	movlb	1	; () banked
 33641  014CAC  5120               	movf	(??_GetEnteredNumber+2)& (0+255),w,b
 33642  014CAE  0101               	movlb	1	; () banked
 33643  014CB0  2326               	addwfc	(GetEnteredNumber@temp+1)& (0+255),f,b
 33644  014CB2  0101               	movlb	1	; () banked
 33645  014CB4  5121               	movf	(??_GetEnteredNumber+3)& (0+255),w,b
 33646  014CB6  0101               	movlb	1	; () banked
 33647  014CB8  2327               	addwfc	(GetEnteredNumber@temp+2)& (0+255),f,b
 33648  014CBA  0101               	movlb	1	; () banked
 33649  014CBC  5122               	movf	(??_GetEnteredNumber+4)& (0+255),w,b
 33650  014CBE  0101               	movlb	1	; () banked
 33651  014CC0  2328               	addwfc	(GetEnteredNumber@temp+3)& (0+255),f,b
 33652                           
 33653                           ; BSR set to: 1
 33654                           ;MISC.c: 254: i++;
 33655  014CC2  0101               	movlb	1	; () banked
 33656  014CC4  2B23               	incf	GetEnteredNumber@i& (0+255),f,b
 33657                           
 33658                           ; BSR set to: 1
 33659                           ;MISC.c: 255: if(i>32)
 33660  014CC6  0E20               	movlw	32
 33661  014CC8  0101               	movlb	1	; () banked
 33662  014CCA  6523               	cpfsgt	GetEnteredNumber@i& (0+255),b
 33663  014CCC  D00A               	goto	l13619
 33664                           
 33665                           ; BSR set to: 1
 33666                           ;MISC.c: 256: {
 33667                           ;MISC.c: 257: return 2147483644L;
 33668  014CCE  0EFC               	movlw	252
 33669  014CD0  0101               	movlb	1	; () banked
 33670  014CD2  6F1A               	movwf	?_GetEnteredNumber& (0+255),b
 33671  014CD4  0EFF               	movlw	255
 33672  014CD6  6F1B               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 33673  014CD8  0EFF               	movlw	255
 33674  014CDA  6F1C               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 33675  014CDC  0E7F               	movlw	127
 33676  014CDE  6F1D               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 33677                           
 33678                           ; BSR set to: 1
 33679  014CE0  0012               	return	
 33680  014CE2                     l13619:
 33681                           
 33682                           ; BSR set to: 1
 33683                           ;MISC.c: 258: }
 33684                           ;MISC.c: 259: This++;
 33685  014CE2  0101               	movlb	1	; () banked
 33686  014CE4  4B1A               	infsnz	GetEnteredNumber@This& (0+255),f,b
 33687  014CE6  2B1B               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 33688  014CE8  D000               	goto	l13621
 33689  014CEA                     l13621:
 33690                           
 33691                           ; BSR set to: 1
 33692  014CEA  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 33693  014CEE  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 33694  014CF2  0E2F               	movlw	47
 33695  014CF4  64DF               	cpfsgt	indf2,c
 33696  014CF6  D008               	goto	l13625
 33697                           
 33698                           ; BSR set to: 1
 33699  014CF8  C11A  FFD9         	movff	GetEnteredNumber@This,fsr2l
 33700  014CFC  C11B  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 33701  014D00  0E39               	movlw	57
 33702  014D02  64DF               	cpfsgt	indf2,c
 33703  014D04  D79A               	goto	l13607
 33704                           
 33705                           ; BSR set to: 1
 33706  014D06  D000               	goto	l13625
 33707  014D08                     l13625:
 33708                           
 33709                           ; BSR set to: 1
 33710                           ;MISC.c: 260: }
 33711                           ;MISC.c: 261: if(negative)
 33712  014D08  0101               	movlb	1	; () banked
 33713  014D0A  5124               	movf	GetEnteredNumber@negative& (0+255),w,b
 33714  014D0C  0101               	movlb	1	; () banked
 33715  014D0E  B4D8               	btfsc	status,2,c
 33716  014D10  D00A               	goto	l13629
 33717                           
 33718                           ; BSR set to: 1
 33719                           ;MISC.c: 262: {
 33720                           ;MISC.c: 263: temp = (temp * -1);
 33721  014D12  0101               	movlb	1	; () banked
 33722  014D14  1F28               	comf	(GetEnteredNumber@temp+3)& (0+255),f,b
 33723  014D16  1F27               	comf	(GetEnteredNumber@temp+2)& (0+255),f,b
 33724  014D18  1F26               	comf	(GetEnteredNumber@temp+1)& (0+255),f,b
 33725  014D1A  6D25               	negf	GetEnteredNumber@temp& (0+255),b
 33726  014D1C  0E00               	movlw	0
 33727  014D1E  2326               	addwfc	(GetEnteredNumber@temp+1)& (0+255),f,b
 33728  014D20  2327               	addwfc	(GetEnteredNumber@temp+2)& (0+255),f,b
 33729  014D22  2328               	addwfc	(GetEnteredNumber@temp+3)& (0+255),f,b
 33730  014D24  D000               	goto	l13629
 33731  014D26                     l13629:
 33732                           
 33733                           ; BSR set to: 1
 33734                           ;MISC.c: 264: }
 33735                           ;MISC.c: 265: return temp;
 33736  014D26  C125  F11A         	movff	GetEnteredNumber@temp,?_GetEnteredNumber
 33737  014D2A  C126  F11B         	movff	GetEnteredNumber@temp+1,?_GetEnteredNumber+1
 33738  014D2E  C127  F11C         	movff	GetEnteredNumber@temp+2,?_GetEnteredNumber+2
 33739  014D32  C128  F11D         	movff	GetEnteredNumber@temp+3,?_GetEnteredNumber+3
 33740  014D36  0012               	return	
 33741                           
 33742                           ; BSR set to: 1
 33743                           
 33744                           ; BSR set to: 1
 33745  014D38  0012               	return		;funcret
 33746  014D3A                     __end_of_GetEnteredNumber:
 33747                           	opt stack 0
 33748                           tblptru	equ	0xFF8
 33749                           tblptrh	equ	0xFF7
 33750                           tblptrl	equ	0xFF6
 33751                           tablat	equ	0xFF5
 33752                           prodh	equ	0xFF4
 33753                           prodl	equ	0xFF3
 33754                           intcon	equ	0xFF2
 33755                           intcon2	equ	0xFF1
 33756                           indf0	equ	0xFEF
 33757                           postinc0	equ	0xFEE
 33758                           plusw0	equ	0xFEB
 33759                           fsr0h	equ	0xFEA
 33760                           fsr0l	equ	0xFE9
 33761                           wreg	equ	0xFE8
 33762                           indf1	equ	0xFE7
 33763                           postdec1	equ	0xFE5
 33764                           fsr1h	equ	0xFE2
 33765                           fsr1l	equ	0xFE1
 33766                           indf2	equ	0xFDF
 33767                           postinc2	equ	0xFDE
 33768                           postdec2	equ	0xFDD
 33769                           plusw2	equ	0xFDB
 33770                           fsr2h	equ	0xFDA
 33771                           fsr2l	equ	0xFD9
 33772                           status	equ	0xFD8
 33773                           
 33774 ;; *************** function ___lmul *****************
 33775 ;; Defined at:
 33776 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 33777 ;; Parameters:    Size  Location     Type
 33778 ;;  multiplier      4   14[BANK1 ] unsigned long 
 33779 ;;  multiplicand    4   18[BANK1 ] unsigned long 
 33780 ;; Auto vars:     Size  Location     Type
 33781 ;;  product         4   22[BANK1 ] unsigned long 
 33782 ;; Return value:  Size  Location     Type
 33783 ;;                  4   14[BANK1 ] unsigned long 
 33784 ;; Registers used:
 33785 ;;		wreg, status,2, status,0
 33786 ;; Tracked objects:
 33787 ;;		On entry : 0/0
 33788 ;;		On exit  : 0/0
 33789 ;;		Unchanged: 0/0
 33790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33791 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 33792 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 33793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33794 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 33795 ;;Total ram usage:       12 bytes
 33796 ;; Hardware stack levels used:    1
 33797 ;; Hardware stack levels required when called:    7
 33798 ;; This function calls:
 33799 ;;		Nothing
 33800 ;; This function is called by:
 33801 ;;		_GetEnteredNumber
 33802 ;; This function uses a non-reentrant model
 33803 ;;
 33804                           
 33805                           	psect	text102
 33806  017714                     __ptext102:
 33807                           	opt stack 0
 33808  017714                     ___lmul:
 33809                           	opt stack 21
 33810                           
 33811                           ; BSR set to: 1
 33812                           ;incstack = 0
 33813  017714  0E00               	movlw	0
 33814  017716  0101               	movlb	1	; () banked
 33815  017718  6F16               	movwf	___lmul@product& (0+255),b
 33816  01771A  0E00               	movlw	0
 33817  01771C  6F17               	movwf	(___lmul@product+1)& (0+255),b
 33818  01771E  0E00               	movlw	0
 33819  017720  6F18               	movwf	(___lmul@product+2)& (0+255),b
 33820  017722  0E00               	movlw	0
 33821  017724  6F19               	movwf	(___lmul@product+3)& (0+255),b
 33822  017726  D000               	goto	l13141
 33823  017728                     l13141:
 33824                           
 33825                           ; BSR set to: 1
 33826  017728  0101               	movlb	1	; () banked
 33827  01772A  A10E               	btfss	___lmul@multiplier& (0+255),0,b
 33828  01772C  D011               	goto	l13145
 33829                           
 33830                           ; BSR set to: 1
 33831  01772E  0101               	movlb	1	; () banked
 33832  017730  5112               	movf	___lmul@multiplicand& (0+255),w,b
 33833  017732  0101               	movlb	1	; () banked
 33834  017734  2716               	addwf	___lmul@product& (0+255),f,b
 33835  017736  0101               	movlb	1	; () banked
 33836  017738  5113               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 33837  01773A  0101               	movlb	1	; () banked
 33838  01773C  2317               	addwfc	(___lmul@product+1)& (0+255),f,b
 33839  01773E  0101               	movlb	1	; () banked
 33840  017740  5114               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 33841  017742  0101               	movlb	1	; () banked
 33842  017744  2318               	addwfc	(___lmul@product+2)& (0+255),f,b
 33843  017746  0101               	movlb	1	; () banked
 33844  017748  5115               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 33845  01774A  0101               	movlb	1	; () banked
 33846  01774C  2319               	addwfc	(___lmul@product+3)& (0+255),f,b
 33847  01774E  D000               	goto	l13145
 33848  017750                     l13145:
 33849                           
 33850                           ; BSR set to: 1
 33851  017750  0101               	movlb	1	; () banked
 33852  017752  90D8               	bcf	status,0,c
 33853  017754  3712               	rlcf	___lmul@multiplicand& (0+255),f,b
 33854  017756  3713               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 33855  017758  3714               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 33856  01775A  3715               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 33857                           
 33858                           ; BSR set to: 1
 33859  01775C  0101               	movlb	1	; () banked
 33860  01775E  90D8               	bcf	status,0,c
 33861  017760  3311               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 33862  017762  3310               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 33863  017764  330F               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 33864  017766  330E               	rrcf	___lmul@multiplier& (0+255),f,b
 33865  017768  0101               	movlb	1	; () banked
 33866  01776A  510E               	movf	___lmul@multiplier& (0+255),w,b
 33867  01776C  0101               	movlb	1	; () banked
 33868  01776E  110F               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 33869  017770  0101               	movlb	1	; () banked
 33870  017772  1110               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 33871  017774  0101               	movlb	1	; () banked
 33872  017776  1111               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 33873  017778  A4D8               	btfss	status,2,c
 33874  01777A  D7D6               	goto	l13141
 33875                           
 33876                           ; BSR set to: 1
 33877  01777C  C116  F10E         	movff	___lmul@product,?___lmul
 33878  017780  C117  F10F         	movff	___lmul@product+1,?___lmul+1
 33879  017784  C118  F110         	movff	___lmul@product+2,?___lmul+2
 33880  017788  C119  F111         	movff	___lmul@product+3,?___lmul+3
 33881                           
 33882                           ; BSR set to: 1
 33883  01778C  0012               	return		;funcret
 33884  01778E                     __end_of___lmul:
 33885                           	opt stack 0
 33886                           tblptru	equ	0xFF8
 33887                           tblptrh	equ	0xFF7
 33888                           tblptrl	equ	0xFF6
 33889                           tablat	equ	0xFF5
 33890                           prodh	equ	0xFF4
 33891                           prodl	equ	0xFF3
 33892                           intcon	equ	0xFF2
 33893                           intcon2	equ	0xFF1
 33894                           indf0	equ	0xFEF
 33895                           postinc0	equ	0xFEE
 33896                           plusw0	equ	0xFEB
 33897                           fsr0h	equ	0xFEA
 33898                           fsr0l	equ	0xFE9
 33899                           wreg	equ	0xFE8
 33900                           indf1	equ	0xFE7
 33901                           postdec1	equ	0xFE5
 33902                           fsr1h	equ	0xFE2
 33903                           fsr1l	equ	0xFE1
 33904                           indf2	equ	0xFDF
 33905                           postinc2	equ	0xFDE
 33906                           postdec2	equ	0xFDD
 33907                           plusw2	equ	0xFDB
 33908                           fsr2h	equ	0xFDA
 33909                           fsr2l	equ	0xFD9
 33910                           status	equ	0xFD8
 33911                           
 33912 ;; *************** function _GetBaud *****************
 33913 ;; Defined at:
 33914 ;;		line 387 in file "UART.c"
 33915 ;; Parameters:    Size  Location     Type
 33916 ;;		None
 33917 ;; Auto vars:     Size  Location     Type
 33918 ;;		None
 33919 ;; Return value:  Size  Location     Type
 33920 ;;                  4   14[BANK1 ] unsigned long 
 33921 ;; Registers used:
 33922 ;;		None
 33923 ;; Tracked objects:
 33924 ;;		On entry : 0/0
 33925 ;;		On exit  : 0/0
 33926 ;;		Unchanged: 0/0
 33927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33928 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 33929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33931 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 33932 ;;Total ram usage:        4 bytes
 33933 ;; Hardware stack levels used:    1
 33934 ;; Hardware stack levels required when called:    7
 33935 ;; This function calls:
 33936 ;;		Nothing
 33937 ;; This function is called by:
 33938 ;;		_Command
 33939 ;; This function uses a non-reentrant model
 33940 ;;
 33941                           
 33942                           	psect	text103
 33943  000EC4                     __ptext103:
 33944                           	opt stack 0
 33945  000EC4                     _GetBaud:
 33946                           	opt stack 22
 33947                           
 33948                           ;UART.c: 389: return Global.Baud;
 33949                           
 33950                           ; BSR set to: 1
 33951                           ;incstack = 0
 33952  000EC4  C18A  F10E         	movff	_Global,?_GetBaud
 33953  000EC8  C18B  F10F         	movff	_Global+1,?_GetBaud+1
 33954  000ECC  C18C  F110         	movff	_Global+2,?_GetBaud+2
 33955  000ED0  C18D  F111         	movff	_Global+3,?_GetBaud+3
 33956  000ED4  0012               	return		;funcret
 33957  000ED6                     __end_of_GetBaud:
 33958                           	opt stack 0
 33959                           tblptru	equ	0xFF8
 33960                           tblptrh	equ	0xFF7
 33961                           tblptrl	equ	0xFF6
 33962                           tablat	equ	0xFF5
 33963                           prodh	equ	0xFF4
 33964                           prodl	equ	0xFF3
 33965                           intcon	equ	0xFF2
 33966                           intcon2	equ	0xFF1
 33967                           indf0	equ	0xFEF
 33968                           postinc0	equ	0xFEE
 33969                           plusw0	equ	0xFEB
 33970                           fsr0h	equ	0xFEA
 33971                           fsr0l	equ	0xFE9
 33972                           wreg	equ	0xFE8
 33973                           indf1	equ	0xFE7
 33974                           postdec1	equ	0xFE5
 33975                           fsr1h	equ	0xFE2
 33976                           fsr1l	equ	0xFE1
 33977                           indf2	equ	0xFDF
 33978                           postinc2	equ	0xFDE
 33979                           postdec2	equ	0xFDD
 33980                           plusw2	equ	0xFDB
 33981                           fsr2h	equ	0xFDA
 33982                           fsr2l	equ	0xFD9
 33983                           status	equ	0xFD8
 33984                           
 33985 ;; *************** function _low_isr *****************
 33986 ;; Defined at:
 33987 ;;		line 79 in file "interrupts.c"
 33988 ;; Parameters:    Size  Location     Type
 33989 ;;		None
 33990 ;; Auto vars:     Size  Location     Type
 33991 ;;  TEMP_Rxdata   100   21[BANK0 ] unsigned char [100]
 33992 ;;  LCD_TEMP       16  121[BANK0 ] unsigned char [16]
 33993 ;;  i               2  137[BANK0 ] int 
 33994 ;;  rx              1  141[BANK0 ] unsigned char 
 33995 ;;  j               1  140[BANK0 ] unsigned char 
 33996 ;;  IRpin           1  139[BANK0 ] unsigned char 
 33997 ;; Return value:  Size  Location     Type
 33998 ;;		None               void
 33999 ;; Registers used:
 34000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34001 ;; Tracked objects:
 34002 ;;		On entry : 0/0
 34003 ;;		On exit  : 0/0
 34004 ;;		Unchanged: 0/0
 34005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34007 ;;      Locals:         0     121       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34008 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34009 ;;      Totals:         0     142       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34010 ;;Total ram usage:      142 bytes
 34011 ;; Hardware stack levels used:    1
 34012 ;; Hardware stack levels required when called:    6
 34013 ;; This function calls:
 34014 ;;		_IRrawToNEC
 34015 ;;		_IsPrintableASCII
 34016 ;;		_LCDScreenUpdate
 34017 ;;		_Reset_Timer0
 34018 ;;		_UseIRCode
 34019 ;;		i1_BufferCopy
 34020 ;;		i1_ClearLCD
 34021 ;;		i1_LCDPrintChar
 34022 ;;		i1_LCDPrintString
 34023 ;;		i1_ReadIRpin
 34024 ;;		i1_ReadUSART
 34025 ;;		i1_SetLCDcursor
 34026 ;;		i1_UARTchar
 34027 ;;		i1_UARTstring
 34028 ;;		i1_cleanBuffer
 34029 ;;		i1_cleanBuffer16bit
 34030 ;; This function is called by:
 34031 ;;		Interrupt level 1
 34032 ;; This function uses a non-reentrant model
 34033 ;;
 34034                           
 34035                           	psect	intcodelo
 34036  000018                     __pintcodelo:
 34037                           	opt stack 0
 34038  000018                     _low_isr:
 34039                           	opt stack 18
 34040                           
 34041                           ;incstack = 0
 34042  000018  CFD8 F064          	movff	status,??_low_isr+4
 34043  00001C  CFE8 F065          	movff	wreg,??_low_isr+5
 34044  000020  CFE0 F066          	movff	bsr,??_low_isr+6
 34045  000024  CFFA F067          	movff	pclath,??_low_isr+7
 34046  000028  CFFB F068          	movff	pclatu,??_low_isr+8
 34047  00002C  CFE9 F069          	movff	fsr0l,??_low_isr+9
 34048  000030  CFEA F06A          	movff	fsr0h,??_low_isr+10
 34049  000034  CFE1 F06B          	movff	fsr1l,??_low_isr+11
 34050  000038  CFE2 F06C          	movff	fsr1h,??_low_isr+12
 34051  00003C  CFD9 F06D          	movff	fsr2l,??_low_isr+13
 34052  000040  CFDA F06E          	movff	fsr2h,??_low_isr+14
 34053  000044  CFF3 F06F          	movff	prodl,??_low_isr+15
 34054  000048  CFF4 F070          	movff	prodh,??_low_isr+16
 34055  00004C  CFF6 F071          	movff	tblptrl,??_low_isr+17
 34056  000050  CFF7 F072          	movff	tblptrh,??_low_isr+18
 34057  000054  CFF8 F073          	movff	tblptru,??_low_isr+19
 34058  000058  CFF5 F074          	movff	tablat,??_low_isr+20
 34059                           
 34060                           ;interrupts.c: 88: unsigned char rx;
 34061                           ;interrupts.c: 89: unsigned char TEMP_Rxdata[100];
 34062                           ;interrupts.c: 90: unsigned char LCD_TEMP [16];
 34063                           ;interrupts.c: 91: int i;
 34064                           ;interrupts.c: 92: unsigned char j;
 34065                           ;interrupts.c: 93: unsigned char IRpin;
 34066                           ;interrupts.c: 95: INTCONbits.PEIE = 0;
 34067  00005C  9CF2               	bcf	intcon,6,c	;volatile
 34068                           
 34069                           ;interrupts.c: 97: if(PIR1bits.RCIF)
 34070  00005E  AA9E               	btfss	3998,5,c	;volatile
 34071  000060  D150               	goto	i1l74
 34072                           
 34073                           ;interrupts.c: 98: {
 34074                           ;interrupts.c: 100: PIE1bits.RCIE = 0;
 34075  000062  9A9D               	bcf	3997,5,c	;volatile
 34076                           
 34077                           ;interrupts.c: 101: RCSTAbits.CREN = 0;
 34078  000064  98AB               	bcf	4011,4,c	;volatile
 34079                           
 34080                           ;interrupts.c: 102: i=0;
 34081  000066  0E00               	movlw	0
 34082  000068  0100               	movlb	0	; () banked
 34083  00006A  6FEA               	movwf	(low_isr@i+1)& (0+255),b
 34084  00006C  0E00               	movlw	0
 34085  00006E  6FE9               	movwf	low_isr@i& (0+255),b
 34086                           
 34087                           ;interrupts.c: 103: j=0;
 34088  000070  0E00               	movlw	0
 34089  000072  0100               	movlb	0	; () banked
 34090  000074  6FEC               	movwf	low_isr@j& (0+255),b
 34091                           
 34092                           ; BSR set to: 0
 34093                           ;interrupts.c: 104: rx = ReadUSART();
 34094  000076  ECBA  F005         	call	i1_ReadUSART	;wreg free
 34095  00007A  0100               	movlb	0	; () banked
 34096  00007C  6FED               	movwf	low_isr@rx& (0+255),b
 34097                           
 34098                           ; BSR set to: 0
 34099                           ;interrupts.c: 106: if(TX_OLD == '>' && rx == '>' && bufferCount == 0)
 34100  00007E  0E3E               	movlw	62
 34101  000080  0100               	movlb	0	; () banked
 34102  000082  19F2               	xorwf	_TX_OLD& (0+255),w,b
 34103  000084  A4D8               	btfss	status,2,c
 34104  000086  D00B               	goto	i1l11513
 34105                           
 34106                           ; BSR set to: 0
 34107  000088  0E3E               	movlw	62
 34108  00008A  0100               	movlb	0	; () banked
 34109  00008C  19ED               	xorwf	low_isr@rx& (0+255),w,b
 34110  00008E  A4D8               	btfss	status,2,c
 34111  000090  D006               	goto	i1l11513
 34112                           
 34113                           ; BSR set to: 0
 34114  000092  0100               	movlb	0	; () banked
 34115  000094  51F3               	movf	_bufferCount& (0+255),w,b
 34116  000096  A4D8               	btfss	status,2,c
 34117  000098  D002               	goto	i1l11513
 34118                           
 34119                           ; BSR set to: 0
 34120                           ;interrupts.c: 107: {
 34121                           ;interrupts.c: 109: __nop();
 34122  00009A  F000               	nop	
 34123                           
 34124                           ;interrupts.c: 110: }
 34125  00009C  D12E               	goto	i1l11605
 34126  00009E                     i1l11513:
 34127                           
 34128                           ;interrupts.c: 111: else
 34129                           ;interrupts.c: 112: {
 34130                           ;interrupts.c: 114: if(rx != '\n' && rx != '\r')
 34131  00009E  0E0A               	movlw	10
 34132  0000A0  0100               	movlb	0	; () banked
 34133  0000A2  19ED               	xorwf	low_isr@rx& (0+255),w,b
 34134  0000A4  B4D8               	btfsc	status,2,c
 34135  0000A6  D0D1               	goto	i1l11579
 34136                           
 34137                           ; BSR set to: 0
 34138  0000A8  0E0D               	movlw	13
 34139  0000AA  0100               	movlb	0	; () banked
 34140  0000AC  19ED               	xorwf	low_isr@rx& (0+255),w,b
 34141  0000AE  B4D8               	btfsc	status,2,c
 34142  0000B0  D0CC               	goto	i1l11579
 34143                           
 34144                           ; BSR set to: 0
 34145                           ;interrupts.c: 115: {
 34146                           ;interrupts.c: 117: if(rx == 0x7f || rx == 0x08)
 34147  0000B2  0E7F               	movlw	127
 34148  0000B4  0100               	movlb	0	; () banked
 34149  0000B6  19ED               	xorwf	low_isr@rx& (0+255),w,b
 34150  0000B8  B4D8               	btfsc	status,2,c
 34151  0000BA  D005               	goto	i1l11521
 34152                           
 34153                           ; BSR set to: 0
 34154  0000BC  0E08               	movlw	8
 34155  0000BE  0100               	movlb	0	; () banked
 34156  0000C0  19ED               	xorwf	low_isr@rx& (0+255),w,b
 34157  0000C2  A4D8               	btfss	status,2,c
 34158  0000C4  D087               	goto	i1l11559
 34159  0000C6                     i1l11521:
 34160                           
 34161                           ; BSR set to: 0
 34162                           ;interrupts.c: 118: {
 34163                           ;interrupts.c: 120: if(bufferCount !=0)
 34164  0000C6  0100               	movlb	0	; () banked
 34165  0000C8  51F3               	movf	_bufferCount& (0+255),w,b
 34166  0000CA  B4D8               	btfsc	status,2,c
 34167  0000CC  D116               	goto	i1l11605
 34168                           
 34169                           ; BSR set to: 0
 34170                           ;interrupts.c: 121: {
 34171                           ;interrupts.c: 123: UARTstring("\r");
 34172  0000CE  0EFC               	movlw	low STR_1
 34173  0000D0  6E0C               	movwf	i1UARTstring@data,c
 34174  0000D2  0EFF               	movlw	high STR_1
 34175  0000D4  6E0D               	movwf	i1UARTstring@data+1,c
 34176  0000D6  ECF1  F0B8         	call	i1_UARTstring	;wreg free
 34177                           
 34178                           ;interrupts.c: 125: for(i=0;i<=bufferCount;i++)
 34179  0000DA  0E00               	movlw	0
 34180  0000DC  0100               	movlb	0	; () banked
 34181  0000DE  6FEA               	movwf	(low_isr@i+1)& (0+255),b
 34182  0000E0  0E00               	movlw	0
 34183  0000E2  6FE9               	movwf	low_isr@i& (0+255),b
 34184  0000E4  D00A               	goto	i1l11531
 34185  0000E6                     i1l11527:
 34186                           
 34187                           ; BSR set to: 0
 34188                           ;interrupts.c: 126: {
 34189                           ;interrupts.c: 128: UARTstring(" ");
 34190  0000E6  0E4E               	movlw	low (STR_225+15)
 34191  0000E8  6E0C               	movwf	i1UARTstring@data,c
 34192  0000EA  0EF9               	movlw	high (STR_225+15)
 34193  0000EC  6E0D               	movwf	i1UARTstring@data+1,c
 34194  0000EE  ECF1  F0B8         	call	i1_UARTstring	;wreg free
 34195  0000F2  0100               	movlb	0	; () banked
 34196  0000F4  4BE9               	infsnz	low_isr@i& (0+255),f,b
 34197  0000F6  2BEA               	incf	(low_isr@i+1)& (0+255),f,b
 34198  0000F8  D000               	goto	i1l11531
 34199  0000FA                     i1l11531:
 34200                           
 34201                           ; BSR set to: 0
 34202  0000FA  0100               	movlb	0	; () banked
 34203  0000FC  51F3               	movf	_bufferCount& (0+255),w,b
 34204  0000FE  0100               	movlb	0	; () banked
 34205  000100  6F60               	movwf	??_low_isr& (0+255),b
 34206  000102  6B61               	clrf	(??_low_isr+1)& (0+255),b
 34207  000104  0100               	movlb	0	; () banked
 34208  000106  51E9               	movf	low_isr@i& (0+255),w,b
 34209  000108  0100               	movlb	0	; () banked
 34210  00010A  5D60               	subwf	??_low_isr& (0+255),w,b
 34211  00010C  0100               	movlb	0	; () banked
 34212  00010E  5161               	movf	(??_low_isr+1)& (0+255),w,b
 34213  000110  0A80               	xorlw	128
 34214  000112  0100               	movlb	0	; () banked
 34215  000114  6F62               	movwf	(??_low_isr+2)& (0+255),b
 34216  000116  0100               	movlb	0	; () banked
 34217  000118  51EA               	movf	(low_isr@i+1)& (0+255),w,b
 34218  00011A  0A80               	xorlw	128
 34219  00011C  0100               	movlb	0	; () banked
 34220  00011E  5962               	subwfb	(??_low_isr+2)& (0+255),w,b
 34221  000120  B0D8               	btfsc	status,0,c
 34222  000122  D7E1               	goto	i1l11527
 34223                           
 34224                           ; BSR set to: 0
 34225                           ;interrupts.c: 129: }
 34226                           ;interrupts.c: 131: UARTstring("\r");
 34227                           
 34228                           ; BSR set to: 0
 34229  000124  0EFC               	movlw	low STR_1
 34230  000126  6E0C               	movwf	i1UARTstring@data,c
 34231  000128  0EFF               	movlw	high STR_1
 34232  00012A  6E0D               	movwf	i1UARTstring@data+1,c
 34233  00012C  ECF1  F0B8         	call	i1_UARTstring	;wreg free
 34234                           
 34235                           ;interrupts.c: 132: UARTstring(">");
 34236  000130  0ED1               	movlw	low (STR_21+27)
 34237  000132  6E0C               	movwf	i1UARTstring@data,c
 34238  000134  0EF4               	movlw	high (STR_21+27)
 34239  000136  6E0D               	movwf	i1UARTstring@data+1,c
 34240  000138  ECF1  F0B8         	call	i1_UARTstring	;wreg free
 34241                           
 34242                           ;interrupts.c: 133: bufferCount--;
 34243  00013C  0100               	movlb	0	; () banked
 34244  00013E  07F3               	decf	_bufferCount& (0+255),f,b
 34245                           
 34246                           ; BSR set to: 0
 34247                           ;interrupts.c: 134: TEMP_Rxdata[bufferCount] = 0;
 34248  000140  0100               	movlb	0	; () banked
 34249  000142  51F3               	movf	_bufferCount& (0+255),w,b
 34250  000144  0D01               	mullw	1
 34251  000146  0E75               	movlw	low low_isr@TEMP_Rxdata
 34252  000148  24F3               	addwf	prodl,w,c
 34253  00014A  6ED9               	movwf	fsr2l,c
 34254  00014C  0E00               	movlw	high low_isr@TEMP_Rxdata
 34255  00014E  20F4               	addwfc	prodh,w,c
 34256  000150  6EDA               	movwf	fsr2h,c
 34257  000152  0E00               	movlw	0
 34258  000154  6EDF               	movwf	indf2,c
 34259                           
 34260                           ; BSR set to: 0
 34261                           ;interrupts.c: 135: UARTstring(TEMP_Rxdata);
 34262  000156  0E75               	movlw	low low_isr@TEMP_Rxdata
 34263  000158  6E0C               	movwf	i1UARTstring@data,c
 34264  00015A  0E00               	movlw	high low_isr@TEMP_Rxdata
 34265  00015C  6E0D               	movwf	i1UARTstring@data+1,c
 34266  00015E  ECF1  F0B8         	call	i1_UARTstring	;wreg free
 34267                           
 34268                           ;interrupts.c: 136: if(bufferCount < 15)
 34269  000162  0E0F               	movlw	15
 34270  000164  0100               	movlb	0	; () banked
 34271  000166  61F3               	cpfslt	_bufferCount& (0+255),b
 34272  000168  D0C8               	goto	i1l11605
 34273                           
 34274                           ; BSR set to: 0
 34275                           ;interrupts.c: 137: {
 34276                           ;interrupts.c: 139: for(j=0; j<15;j++)
 34277  00016A  0E00               	movlw	0
 34278  00016C  0100               	movlb	0	; () banked
 34279  00016E  6FEC               	movwf	low_isr@j& (0+255),b
 34280  000170                     i1l11545:
 34281                           
 34282                           ; BSR set to: 0
 34283  000170  0E0E               	movlw	14
 34284  000172  0100               	movlb	0	; () banked
 34285  000174  65EC               	cpfsgt	low_isr@j& (0+255),b
 34286  000176  D001               	goto	i1l11549
 34287                           
 34288                           ; BSR set to: 0
 34289  000178  D017               	goto	i1l11555
 34290  00017A                     i1l11549:
 34291                           
 34292                           ; BSR set to: 0
 34293                           ;interrupts.c: 140: {
 34294                           ;interrupts.c: 141: LCD_TEMP[j] = TEMP_Rxdata[j];
 34295  00017A  0100               	movlb	0	; () banked
 34296  00017C  51EC               	movf	low_isr@j& (0+255),w,b
 34297  00017E  0D01               	mullw	1
 34298  000180  0E75               	movlw	low low_isr@TEMP_Rxdata
 34299  000182  24F3               	addwf	prodl,w,c
 34300  000184  6ED9               	movwf	fsr2l,c
 34301  000186  0E00               	movlw	high low_isr@TEMP_Rxdata
 34302  000188  20F4               	addwfc	prodh,w,c
 34303  00018A  6EDA               	movwf	fsr2h,c
 34304  00018C  0100               	movlb	0	; () banked
 34305  00018E  51EC               	movf	low_isr@j& (0+255),w,b
 34306  000190  0D01               	mullw	1
 34307  000192  0ED9               	movlw	low low_isr@LCD_TEMP
 34308  000194  24F3               	addwf	prodl,w,c
 34309  000196  6EE1               	movwf	fsr1l,c
 34310  000198  0E00               	movlw	high low_isr@LCD_TEMP
 34311  00019A  20F4               	addwfc	prodh,w,c
 34312  00019C  6EE2               	movwf	fsr1h,c
 34313  00019E  CFDF FFE7          	movff	indf2,indf1
 34314                           
 34315                           ; BSR set to: 0
 34316  0001A2  0100               	movlb	0	; () banked
 34317  0001A4  2BEC               	incf	low_isr@j& (0+255),f,b
 34318  0001A6  D7E4               	goto	i1l11545
 34319  0001A8                     i1l11555:
 34320                           
 34321                           ; BSR set to: 0
 34322                           ;interrupts.c: 142: }
 34323                           ;interrupts.c: 143: ClearLCD();
 34324  0001A8  EC39  F007         	call	i1_ClearLCD	;wreg free
 34325                           
 34326                           ;interrupts.c: 144: SetLCDcursor(0, 0);
 34327  0001AC  0E00               	movlw	0
 34328  0001AE  6E0F               	movwf	i1SetLCDcursor@Col,c
 34329  0001B0  0E00               	movlw	0
 34330  0001B2  EC33  F006         	call	i1_SetLCDcursor
 34331                           
 34332                           ;interrupts.c: 145: LCDPrintChar('>');
 34333  0001B6  0E3E               	movlw	62
 34334  0001B8  EC97  F007         	call	i1_LCDPrintChar
 34335                           
 34336                           ;interrupts.c: 146: SetLCDcursor(0, 1);
 34337  0001BC  0E01               	movlw	1
 34338  0001BE  6E0F               	movwf	i1SetLCDcursor@Col,c
 34339  0001C0  0E00               	movlw	0
 34340  0001C2  EC33  F006         	call	i1_SetLCDcursor
 34341                           
 34342                           ;interrupts.c: 147: LCDPrintString(LCD_TEMP);
 34343  0001C6  0ED9               	movlw	low low_isr@LCD_TEMP
 34344  0001C8  6E0F               	movwf	i1LCDPrintString@Text,c
 34345  0001CA  0E00               	movlw	high low_isr@LCD_TEMP
 34346  0001CC  6E10               	movwf	i1LCDPrintString@Text+1,c
 34347  0001CE  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 34348                           
 34349                           ;interrupts.c: 148: }
 34350                           ;interrupts.c: 149: }
 34351                           ;interrupts.c: 150: }
 34352  0001D2  D093               	goto	i1l11605
 34353  0001D4                     i1l11559:
 34354                           
 34355                           ;interrupts.c: 151: else
 34356                           ;interrupts.c: 152: {
 34357                           ;interrupts.c: 155: if(IsPrintableASCII(rx))
 34358  0001D4  0100               	movlb	0	; () banked
 34359  0001D6  51ED               	movf	low_isr@rx& (0+255),w,b
 34360  0001D8  EC01  F007         	call	_IsPrintableASCII
 34361  0001DC  0900               	iorlw	0
 34362  0001DE  B4D8               	btfsc	status,2,c
 34363  0001E0  D08C               	goto	i1l11605
 34364                           
 34365                           ;interrupts.c: 156: {
 34366                           ;interrupts.c: 158: UARTchar(rx, 0, 0);
 34367  0001E2  0E00               	movlw	0
 34368  0001E4  6E08               	movwf	i1UARTchar@NinethBit_override,c
 34369  0001E6  0E00               	movlw	0
 34370  0001E8  6E09               	movwf	i1UARTchar@NinethBit_override_data,c
 34371  0001EA  0100               	movlb	0	; () banked
 34372  0001EC  51ED               	movf	low_isr@rx& (0+255),w,b
 34373  0001EE  EC03  F0BC         	call	i1_UARTchar
 34374                           
 34375                           ;interrupts.c: 159: if(bufferCount < 15)
 34376  0001F2  0E0F               	movlw	15
 34377  0001F4  0100               	movlb	0	; () banked
 34378  0001F6  61F3               	cpfslt	_bufferCount& (0+255),b
 34379  0001F8  D005               	goto	i1l11567
 34380                           
 34381                           ; BSR set to: 0
 34382                           ;interrupts.c: 160: {
 34383                           ;interrupts.c: 162: LCDPrintChar(rx);
 34384  0001FA  0100               	movlb	0	; () banked
 34385  0001FC  51ED               	movf	low_isr@rx& (0+255),w,b
 34386  0001FE  EC97  F007         	call	i1_LCDPrintChar
 34387  000202  D000               	goto	i1l11567
 34388  000204                     i1l11567:
 34389                           
 34390                           ;interrupts.c: 163: }
 34391                           ;interrupts.c: 164: TEMP_Rxdata[bufferCount] = rx;
 34392  000204  0100               	movlb	0	; () banked
 34393  000206  51F3               	movf	_bufferCount& (0+255),w,b
 34394  000208  0D01               	mullw	1
 34395  00020A  0E75               	movlw	low low_isr@TEMP_Rxdata
 34396  00020C  24F3               	addwf	prodl,w,c
 34397  00020E  6ED9               	movwf	fsr2l,c
 34398  000210  0E00               	movlw	high low_isr@TEMP_Rxdata
 34399  000212  20F4               	addwfc	prodh,w,c
 34400  000214  6EDA               	movwf	fsr2h,c
 34401  000216  C0ED  FFDF         	movff	low_isr@rx,indf2
 34402                           
 34403                           ; BSR set to: 0
 34404                           ;interrupts.c: 165: bufferCount++;
 34405  00021A  0100               	movlb	0	; () banked
 34406  00021C  2BF3               	incf	_bufferCount& (0+255),f,b
 34407                           
 34408                           ; BSR set to: 0
 34409                           ;interrupts.c: 166: if(bufferCount>=99)
 34410  00021E  0E62               	movlw	98
 34411  000220  0100               	movlb	0	; () banked
 34412  000222  65F3               	cpfsgt	_bufferCount& (0+255),b
 34413  000224  D06A               	goto	i1l11605
 34414                           
 34415                           ; BSR set to: 0
 34416                           ;interrupts.c: 167: {
 34417                           ;interrupts.c: 168: UARTstring("\r\nBuffer overflow! Deleting Buffer \r\n");
 34418  000226  0E80               	movlw	low STR_5
 34419  000228  6E0C               	movwf	i1UARTstring@data,c
 34420  00022A  0EF2               	movlw	high STR_5
 34421  00022C  6E0D               	movwf	i1UARTstring@data+1,c
 34422  00022E  ECF1  F0B8         	call	i1_UARTstring	;wreg free
 34423                           
 34424                           ;interrupts.c: 169: cleanBuffer(TEMP_Rxdata, 100);
 34425  000232  0E75               	movlw	low low_isr@TEMP_Rxdata
 34426  000234  6E01               	movwf	i1cleanBuffer@data,c
 34427  000236  0E00               	movlw	high low_isr@TEMP_Rxdata
 34428  000238  6E02               	movwf	i1cleanBuffer@data+1,c
 34429  00023A  0E00               	movlw	0
 34430  00023C  6E04               	movwf	i1cleanBuffer@count+1,c
 34431  00023E  0E64               	movlw	100
 34432  000240  6E03               	movwf	i1cleanBuffer@count,c
 34433  000242  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 34434  000246  D055               	goto	i1l11603
 34435                           
 34436                           ; BSR set to: 0
 34437                           ;interrupts.c: 176: }
 34438                           ;interrupts.c: 177: }
 34439                           ;interrupts.c: 178: }
 34440                           
 34441                           ; BSR set to: 0
 34442                           
 34443                           ;interrupts.c: 173: else
 34444                           ;interrupts.c: 174: {
 34445                           
 34446                           ; BSR set to: 0
 34447                           
 34448                           ; BSR set to: 0
 34449                           ;interrupts.c: 171: }
 34450                           ;interrupts.c: 172: }
 34451                           
 34452                           ;interrupts.c: 170: bufferCount=0;
 34453  000248  D058               	goto	i1l11605
 34454  00024A                     i1l11579:
 34455                           
 34456                           ; BSR set to: 0
 34457                           ;interrupts.c: 179: else if((rx == '\n' || rx == '\r') && bufferCount == 0)
 34458  00024A  0E0A               	movlw	10
 34459  00024C  0100               	movlb	0	; () banked
 34460  00024E  19ED               	xorwf	low_isr@rx& (0+255),w,b
 34461  000250  B4D8               	btfsc	status,2,c
 34462  000252  D005               	goto	i1l11583
 34463                           
 34464                           ; BSR set to: 0
 34465  000254  0E0D               	movlw	13
 34466  000256  0100               	movlb	0	; () banked
 34467  000258  19ED               	xorwf	low_isr@rx& (0+255),w,b
 34468  00025A  A4D8               	btfss	status,2,c
 34469  00025C  D00F               	goto	i1l11587
 34470  00025E                     i1l11583:
 34471                           
 34472                           ; BSR set to: 0
 34473  00025E  0100               	movlb	0	; () banked
 34474  000260  51F3               	movf	_bufferCount& (0+255),w,b
 34475  000262  A4D8               	btfss	status,2,c
 34476  000264  D00B               	goto	i1l11587
 34477                           
 34478                           ; BSR set to: 0
 34479                           ;interrupts.c: 180: {
 34480                           ;interrupts.c: 182: cleanBuffer(TEMP_Rxdata, 100);
 34481  000266  0E75               	movlw	low low_isr@TEMP_Rxdata
 34482  000268  6E01               	movwf	i1cleanBuffer@data,c
 34483  00026A  0E00               	movlw	high low_isr@TEMP_Rxdata
 34484  00026C  6E02               	movwf	i1cleanBuffer@data+1,c
 34485  00026E  0E00               	movlw	0
 34486  000270  6E04               	movwf	i1cleanBuffer@count+1,c
 34487  000272  0E64               	movlw	100
 34488  000274  6E03               	movwf	i1cleanBuffer@count,c
 34489  000276  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 34490                           
 34491                           ;interrupts.c: 183: }
 34492  00027A  D03F               	goto	i1l11605
 34493  00027C                     i1l11587:
 34494                           
 34495                           ;interrupts.c: 184: else
 34496                           ;interrupts.c: 185: {
 34497                           ;interrupts.c: 187: if(TEMP_Rxdata[0] == 0 && TEMP_Rxdata[1] != 0)
 34498  00027C  0100               	movlb	0	; () banked
 34499  00027E  5175               	movf	low_isr@TEMP_Rxdata& (0+255),w,b
 34500  000280  0100               	movlb	0	; () banked
 34501  000282  A4D8               	btfss	status,2,c
 34502  000284  D013               	goto	i1l11593
 34503                           
 34504                           ; BSR set to: 0
 34505  000286  0100               	movlb	0	; () banked
 34506  000288  5176               	movf	(low_isr@TEMP_Rxdata+1)& (0+255),w,b
 34507  00028A  B4D8               	btfsc	status,2,c
 34508  00028C  D00F               	goto	i1l11593
 34509                           
 34510                           ; BSR set to: 0
 34511                           ;interrupts.c: 188: {
 34512                           ;interrupts.c: 189: BufferCopy(TEMP_Rxdata, Rxdata, 100,1);
 34513  00028E  0E75               	movlw	low low_isr@TEMP_Rxdata
 34514  000290  6E09               	movwf	i1BufferCopy@from,c
 34515  000292  0E00               	movlw	high low_isr@TEMP_Rxdata
 34516  000294  6E0A               	movwf	i1BufferCopy@from+1,c
 34517  000296  0E00               	movlw	low _Rxdata
 34518  000298  6E0B               	movwf	i1BufferCopy@to,c
 34519  00029A  0E03               	movlw	high _Rxdata
 34520  00029C  6E0C               	movwf	i1BufferCopy@to+1,c
 34521  00029E  0E64               	movlw	100
 34522  0002A0  6E0D               	movwf	i1BufferCopy@count,c
 34523  0002A2  0E01               	movlw	1
 34524  0002A4  6E0E               	movwf	i1BufferCopy@shift,c
 34525  0002A6  EC5E  F0B7         	call	i1_BufferCopy	;wreg free
 34526                           
 34527                           ;interrupts.c: 190: }
 34528  0002AA  D00F               	goto	i1l11595
 34529  0002AC                     i1l11593:
 34530                           
 34531                           ;interrupts.c: 191: else
 34532                           ;interrupts.c: 192: {
 34533                           ;interrupts.c: 193: BufferCopy(TEMP_Rxdata, Rxdata, 100,0);
 34534  0002AC  0E75               	movlw	low low_isr@TEMP_Rxdata
 34535  0002AE  6E09               	movwf	i1BufferCopy@from,c
 34536  0002B0  0E00               	movlw	high low_isr@TEMP_Rxdata
 34537  0002B2  6E0A               	movwf	i1BufferCopy@from+1,c
 34538  0002B4  0E00               	movlw	low _Rxdata
 34539  0002B6  6E0B               	movwf	i1BufferCopy@to,c
 34540  0002B8  0E03               	movlw	high _Rxdata
 34541  0002BA  6E0C               	movwf	i1BufferCopy@to+1,c
 34542  0002BC  0E64               	movlw	100
 34543  0002BE  6E0D               	movwf	i1BufferCopy@count,c
 34544  0002C0  0E00               	movlw	0
 34545  0002C2  6E0E               	movwf	i1BufferCopy@shift,c
 34546  0002C4  EC5E  F0B7         	call	i1_BufferCopy	;wreg free
 34547  0002C8  D000               	goto	i1l11595
 34548  0002CA                     i1l11595:
 34549                           
 34550                           ;interrupts.c: 194: }
 34551                           ;interrupts.c: 195: ClearLCD();
 34552  0002CA  EC39  F007         	call	i1_ClearLCD	;wreg free
 34553                           
 34554                           ;interrupts.c: 196: SetLCDcursor(0, 0);
 34555  0002CE  0E00               	movlw	0
 34556  0002D0  6E0F               	movwf	i1SetLCDcursor@Col,c
 34557  0002D2  0E00               	movlw	0
 34558  0002D4  EC33  F006         	call	i1_SetLCDcursor
 34559                           
 34560                           ;interrupts.c: 197: LCDPrintChar('>');
 34561  0002D8  0E3E               	movlw	62
 34562  0002DA  EC97  F007         	call	i1_LCDPrintChar
 34563                           
 34564                           ;interrupts.c: 198: cleanBuffer(TEMP_Rxdata, 100);
 34565  0002DE  0E75               	movlw	low low_isr@TEMP_Rxdata
 34566  0002E0  6E01               	movwf	i1cleanBuffer@data,c
 34567  0002E2  0E00               	movlw	high low_isr@TEMP_Rxdata
 34568  0002E4  6E02               	movwf	i1cleanBuffer@data+1,c
 34569  0002E6  0E00               	movlw	0
 34570  0002E8  6E04               	movwf	i1cleanBuffer@count+1,c
 34571  0002EA  0E64               	movlw	100
 34572  0002EC  6E03               	movwf	i1cleanBuffer@count,c
 34573  0002EE  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 34574  0002F2                     i1l11603:
 34575                           
 34576                           ;interrupts.c: 199: bufferCount=0;
 34577  0002F2  0E00               	movlw	0
 34578  0002F4  0100               	movlb	0	; () banked
 34579  0002F6  6FF3               	movwf	_bufferCount& (0+255),b
 34580                           
 34581                           ; BSR set to: 0
 34582                           
 34583                           ; BSR set to: 0
 34584  0002F8  D000               	goto	i1l11605
 34585  0002FA                     i1l11605:
 34586                           
 34587                           ;interrupts.c: 200: }
 34588                           ;interrupts.c: 201: }
 34589                           ;interrupts.c: 202: PIR1bits.RCIF = 0;
 34590  0002FA  9A9E               	bcf	3998,5,c	;volatile
 34591                           
 34592                           ;interrupts.c: 203: PIE1bits.RCIE = 1;
 34593  0002FC  8A9D               	bsf	3997,5,c	;volatile
 34594                           
 34595                           ;interrupts.c: 204: RCSTAbits.CREN = 1;
 34596  0002FE  88AB               	bsf	4011,4,c	;volatile
 34597                           
 34598                           ;interrupts.c: 205: }
 34599  000300  D0CF               	goto	i1l100
 34600  000302                     i1l74:
 34601                           
 34602                           ;interrupts.c: 206: else if(INTCONbits.RBIF)
 34603  000302  A0F2               	btfss	intcon,0,c	;volatile
 34604  000304  D0AE               	goto	i1l101
 34605                           
 34606                           ;interrupts.c: 207: {
 34607                           ;interrupts.c: 211: INTCONbits.RBIE = 0;
 34608  000306  96F2               	bcf	intcon,3,c	;volatile
 34609                           
 34610                           ;interrupts.c: 212: __nop();
 34611  000308  F000               	nop	
 34612                           
 34613                           ;interrupts.c: 213: __nop();
 34614  00030A  F000               	nop	
 34615                           
 34616                           ;interrupts.c: 214: IRpin = ReadIRpin();
 34617  00030C  EC89  F007         	call	i1_ReadIRpin	;wreg free
 34618  000310  0100               	movlb	0	; () banked
 34619  000312  6FEB               	movwf	low_isr@IRpin& (0+255),b
 34620                           
 34621                           ; BSR set to: 0
 34622                           ;interrupts.c: 215: IRrawCount = 0;
 34623  000314  0E00               	movlw	0
 34624  000316  0100               	movlb	0	; () banked
 34625  000318  6FEF               	movwf	(_IRrawCount+1)& (0+255),b
 34626  00031A  0E00               	movlw	0
 34627  00031C  6FEE               	movwf	_IRrawCount& (0+255),b
 34628                           
 34629                           ; BSR set to: 0
 34630                           ;interrupts.c: 216: if(IRpin != IRpinOLD)
 34631  00031E  0100               	movlb	0	; () banked
 34632  000320  51F0               	movf	_IRpinOLD& (0+255),w,b
 34633  000322  0100               	movlb	0	; () banked
 34634  000324  19EB               	xorwf	low_isr@IRpin& (0+255),w,b
 34635  000326  B4D8               	btfsc	status,2,c
 34636  000328  D097               	goto	i1l11659
 34637                           
 34638                           ; BSR set to: 0
 34639                           ;interrupts.c: 217: {
 34640                           ;interrupts.c: 218: IRrawCount += TMR0L;
 34641  00032A  50D6               	movf	4054,w,c	;volatile
 34642  00032C  0100               	movlb	0	; () banked
 34643  00032E  27EE               	addwf	_IRrawCount& (0+255),f,b
 34644  000330  0E00               	movlw	0
 34645  000332  23EF               	addwfc	(_IRrawCount+1)& (0+255),f,b
 34646                           
 34647                           ; BSR set to: 0
 34648                           ;interrupts.c: 219: IRrawCount += ((unsigned int)TMR0H << 8);
 34649  000334  50D7               	movf	4055,w,c	;volatile
 34650  000336  0100               	movlb	0	; () banked
 34651  000338  27EF               	addwf	(_IRrawCount+1)& (0+255),f,b
 34652                           
 34653                           ; BSR set to: 0
 34654                           ;interrupts.c: 220: if(IRrawCodeNum < 72)
 34655  00033A  0E48               	movlw	72
 34656  00033C  0100               	movlb	0	; () banked
 34657  00033E  61F1               	cpfslt	_IRrawCodeNum& (0+255),b
 34658  000340  D05F               	goto	i1l11647
 34659                           
 34660                           ; BSR set to: 0
 34661                           ;interrupts.c: 221: {
 34662                           ;interrupts.c: 223: INTCONbits.TMR0IF = 0;
 34663  000342  94F2               	bcf	intcon,2,c	;volatile
 34664                           
 34665                           ;interrupts.c: 224: INTCONbits.TMR0IE = 1;
 34666  000344  8AF2               	bsf	intcon,5,c	;volatile
 34667                           
 34668                           ; BSR set to: 0
 34669                           ;interrupts.c: 225: Reset_Timer0();
 34670  000346  ECAF  F007         	call	_Reset_Timer0	;wreg free
 34671                           
 34672                           ;interrupts.c: 226: if(IRrawCodeNum != 0)
 34673  00034A  0100               	movlb	0	; () banked
 34674  00034C  51F1               	movf	_IRrawCodeNum& (0+255),w,b
 34675  00034E  B4D8               	btfsc	status,2,c
 34676  000350  D024               	goto	i1l11633
 34677                           
 34678                           ; BSR set to: 0
 34679                           ;interrupts.c: 227: {
 34680                           ;interrupts.c: 228: IRRawCode[IRrawCodeNum - 1] = IRrawCount;
 34681  000352  0EFE               	movlw	254
 34682  000354  0100               	movlb	0	; () banked
 34683  000356  6F60               	movwf	??_low_isr& (0+255),b
 34684  000358  0EFF               	movlw	255
 34685  00035A  0100               	movlb	0	; () banked
 34686  00035C  6F61               	movwf	(??_low_isr+1)& (0+255),b
 34687  00035E  0100               	movlb	0	; () banked
 34688  000360  51F1               	movf	_IRrawCodeNum& (0+255),w,b
 34689  000362  0100               	movlb	0	; () banked
 34690  000364  6F62               	movwf	(??_low_isr+2)& (0+255),b
 34691  000366  6B63               	clrf	(??_low_isr+3)& (0+255),b
 34692  000368  90D8               	bcf	status,0,c
 34693  00036A  0100               	movlb	0	; () banked
 34694  00036C  3762               	rlcf	(??_low_isr+2)& (0+255),f,b
 34695  00036E  3763               	rlcf	(??_low_isr+3)& (0+255),f,b
 34696  000370  0100               	movlb	0	; () banked
 34697  000372  5160               	movf	??_low_isr& (0+255),w,b
 34698  000374  0100               	movlb	0	; () banked
 34699  000376  2762               	addwf	(??_low_isr+2)& (0+255),f,b
 34700  000378  0100               	movlb	0	; () banked
 34701  00037A  5161               	movf	(??_low_isr+1)& (0+255),w,b
 34702  00037C  0100               	movlb	0	; () banked
 34703  00037E  2363               	addwfc	(??_low_isr+3)& (0+255),f,b
 34704  000380  0E64               	movlw	low _IRRawCode
 34705  000382  0100               	movlb	0	; () banked
 34706  000384  2562               	addwf	(??_low_isr+2)& (0+255),w,b
 34707  000386  6ED9               	movwf	fsr2l,c
 34708  000388  0E04               	movlw	high _IRRawCode
 34709  00038A  0100               	movlb	0	; () banked
 34710  00038C  2163               	addwfc	(??_low_isr+3)& (0+255),w,b
 34711  00038E  6EDA               	movwf	fsr2h,c
 34712  000390  C0EE  FFDE         	movff	_IRrawCount,postinc2
 34713  000394  C0EF  FFDD         	movff	_IRrawCount+1,postdec2
 34714  000398  D000               	goto	i1l11633
 34715  00039A                     i1l11633:
 34716                           
 34717                           ; BSR set to: 0
 34718                           ;interrupts.c: 229: }
 34719                           ;interrupts.c: 230: if(IRrawCount >= 28800L && IRrawCount <= 32000L )
 34720  00039A  0E80               	movlw	128
 34721  00039C  0100               	movlb	0	; () banked
 34722  00039E  5DEE               	subwf	_IRrawCount& (0+255),w,b
 34723  0003A0  0E70               	movlw	112
 34724  0003A2  0100               	movlb	0	; () banked
 34725  0003A4  59EF               	subwfb	(_IRrawCount+1)& (0+255),w,b
 34726  0003A6  A0D8               	btfss	status,0,c
 34727  0003A8  D028               	goto	i1l11645
 34728                           
 34729                           ; BSR set to: 0
 34730  0003AA  0100               	movlb	0	; () banked
 34731  0003AC  05EE               	decf	_IRrawCount& (0+255),w,b
 34732  0003AE  0E7D               	movlw	125
 34733  0003B0  0100               	movlb	0	; () banked
 34734  0003B2  59EF               	subwfb	(_IRrawCount+1)& (0+255),w,b
 34735  0003B4  B0D8               	btfsc	status,0,c
 34736  0003B6  D021               	goto	i1l11645
 34737                           
 34738                           ; BSR set to: 0
 34739                           ;interrupts.c: 231: {
 34740                           ;interrupts.c: 233: IR_New_Code = 2;
 34741  0003B8  0E02               	movlw	2
 34742  0003BA  0100               	movlb	0	; () banked
 34743  0003BC  6FF8               	movwf	_IR_New_Code& (0+255),b
 34744                           
 34745                           ; BSR set to: 0
 34746                           ;interrupts.c: 234: if(IR_NEC)
 34747  0003BE  0100               	movlb	0	; () banked
 34748  0003C0  51F4               	movf	_IR_NEC& (0+255),w,b
 34749  0003C2  0100               	movlb	0	; () banked
 34750  0003C4  11F5               	iorwf	(_IR_NEC+1)& (0+255),w,b
 34751  0003C6  0100               	movlb	0	; () banked
 34752  0003C8  11F6               	iorwf	(_IR_NEC+2)& (0+255),w,b
 34753  0003CA  0100               	movlb	0	; () banked
 34754  0003CC  11F7               	iorwf	(_IR_NEC+3)& (0+255),w,b
 34755  0003CE  B4D8               	btfsc	status,2,c
 34756  0003D0  D00F               	goto	i1l11643
 34757                           
 34758                           ; BSR set to: 0
 34759                           ;interrupts.c: 235: {
 34760                           ;interrupts.c: 236: UseIRCode(&IR_New_Code,IR_NEC);
 34761  0003D2  0EF8               	movlw	low _IR_New_Code
 34762  0003D4  6E47               	movwf	UseIRCode@Code,c
 34763  0003D6  0E00               	movlw	high _IR_New_Code
 34764  0003D8  6E48               	movwf	UseIRCode@Code+1,c
 34765  0003DA  C0F4  F049         	movff	_IR_NEC,UseIRCode@NEC
 34766  0003DE  C0F5  F04A         	movff	_IR_NEC+1,UseIRCode@NEC+1
 34767  0003E2  C0F6  F04B         	movff	_IR_NEC+2,UseIRCode@NEC+2
 34768  0003E6  C0F7  F04C         	movff	_IR_NEC+3,UseIRCode@NEC+3
 34769  0003EA  EC67  F0AE         	call	_UseIRCode	;wreg free
 34770  0003EE  D000               	goto	i1l11643
 34771  0003F0                     i1l11643:
 34772                           
 34773                           ;interrupts.c: 237: }
 34774                           ;interrupts.c: 238: IRRawCode[0] = IRrawCount;
 34775  0003F0  C0EE  F464         	movff	_IRrawCount,_IRRawCode
 34776  0003F4  C0EF  F465         	movff	_IRrawCount+1,_IRRawCode+1
 34777  0003F8  D000               	goto	i1l11645
 34778  0003FA                     i1l11645:
 34779                           
 34780                           ;interrupts.c: 239: }
 34781                           ;interrupts.c: 240: IRrawCodeNum++;
 34782  0003FA  0100               	movlb	0	; () banked
 34783  0003FC  2BF1               	incf	_IRrawCodeNum& (0+255),f,b
 34784  0003FE  D000               	goto	i1l11647
 34785  000400                     i1l11647:
 34786                           
 34787                           ; BSR set to: 0
 34788                           ;interrupts.c: 241: }
 34789                           ;interrupts.c: 242: if(IRrawCodeNum == 72)
 34790  000400  0E48               	movlw	72
 34791  000402  0100               	movlb	0	; () banked
 34792  000404  19F1               	xorwf	_IRrawCodeNum& (0+255),w,b
 34793  000406  A4D8               	btfss	status,2,c
 34794  000408  D027               	goto	i1l11659
 34795                           
 34796                           ; BSR set to: 0
 34797                           ;interrupts.c: 243: {
 34798                           ;interrupts.c: 244: INTCONbits.TMR0IF = 0;
 34799  00040A  94F2               	bcf	intcon,2,c	;volatile
 34800                           
 34801                           ;interrupts.c: 245: INTCONbits.TMR0IE = 0;
 34802  00040C  9AF2               	bcf	intcon,5,c	;volatile
 34803                           
 34804                           ; BSR set to: 0
 34805                           ;interrupts.c: 246: IR_New_Code = IRrawToNEC(IRRawCode, &IR_NEC, 1);
 34806  00040E  0E64               	movlw	low _IRRawCode
 34807  000410  6E01               	movwf	IRrawToNEC@Raw,c
 34808  000412  0E04               	movlw	high _IRRawCode
 34809  000414  6E02               	movwf	IRrawToNEC@Raw+1,c
 34810  000416  0EF4               	movlw	low _IR_NEC
 34811  000418  6E03               	movwf	IRrawToNEC@NEC,c
 34812  00041A  0E00               	movlw	high _IR_NEC
 34813  00041C  6E04               	movwf	IRrawToNEC@NEC+1,c
 34814  00041E  0E01               	movlw	1
 34815  000420  6E05               	movwf	IRrawToNEC@Invert,c
 34816  000422  EC78  F0A0         	call	_IRrawToNEC	;wreg free
 34817  000426  0100               	movlb	0	; () banked
 34818  000428  6FF8               	movwf	_IR_New_Code& (0+255),b
 34819                           
 34820                           ; BSR set to: 0
 34821                           ;interrupts.c: 247: if(IR_New_Code)
 34822  00042A  0100               	movlb	0	; () banked
 34823  00042C  51F8               	movf	_IR_New_Code& (0+255),w,b
 34824  00042E  B4D8               	btfsc	status,2,c
 34825  000430  D00F               	goto	i1l11657
 34826                           
 34827                           ; BSR set to: 0
 34828                           ;interrupts.c: 248: {
 34829                           ;interrupts.c: 249: UseIRCode(&IR_New_Code,IR_NEC);
 34830  000432  0EF8               	movlw	low _IR_New_Code
 34831  000434  6E47               	movwf	UseIRCode@Code,c
 34832  000436  0E00               	movlw	high _IR_New_Code
 34833  000438  6E48               	movwf	UseIRCode@Code+1,c
 34834  00043A  C0F4  F049         	movff	_IR_NEC,UseIRCode@NEC
 34835  00043E  C0F5  F04A         	movff	_IR_NEC+1,UseIRCode@NEC+1
 34836  000442  C0F6  F04B         	movff	_IR_NEC+2,UseIRCode@NEC+2
 34837  000446  C0F7  F04C         	movff	_IR_NEC+3,UseIRCode@NEC+3
 34838  00044A  EC67  F0AE         	call	_UseIRCode	;wreg free
 34839  00044E  D000               	goto	i1l11657
 34840  000450                     i1l11657:
 34841                           
 34842                           ;interrupts.c: 250: }
 34843                           ;interrupts.c: 251: IRrawCodeNum = 0;
 34844  000450  0E00               	movlw	0
 34845  000452  0100               	movlb	0	; () banked
 34846  000454  6FF1               	movwf	_IRrawCodeNum& (0+255),b
 34847                           
 34848                           ; BSR set to: 0
 34849  000456  D000               	goto	i1l11659
 34850  000458                     i1l11659:
 34851                           
 34852                           ; BSR set to: 0
 34853                           ;interrupts.c: 252: }
 34854                           ;interrupts.c: 253: }
 34855                           ;interrupts.c: 254: IRpinOLD = IRpin;
 34856  000458  C0EB  F0F0         	movff	low_isr@IRpin,_IRpinOLD
 34857                           
 34858                           ; BSR set to: 0
 34859                           ;interrupts.c: 256: INTCONbits.RBIF = 0;
 34860  00045C  90F2               	bcf	intcon,0,c	;volatile
 34861                           
 34862                           ; BSR set to: 0
 34863                           ;interrupts.c: 258: INTCONbits.RBIE = 1;
 34864  00045E  86F2               	bsf	intcon,3,c	;volatile
 34865                           
 34866                           ;interrupts.c: 259: }
 34867  000460  D01F               	goto	i1l100
 34868  000462                     i1l101:
 34869                           
 34870                           ;interrupts.c: 260: else if (INTCONbits.TMR0IF)
 34871  000462  A4F2               	btfss	intcon,2,c	;volatile
 34872  000464  D00F               	goto	i1l110
 34873                           
 34874                           ;interrupts.c: 261: {
 34875                           ;interrupts.c: 263: cleanBuffer16bit(IRRawCode, IRrawCodeNum);
 34876  000466  0E64               	movlw	low _IRRawCode
 34877  000468  6E01               	movwf	i1cleanBuffer16bit@data,c
 34878  00046A  0E04               	movlw	high _IRRawCode
 34879  00046C  6E02               	movwf	i1cleanBuffer16bit@data+1,c
 34880  00046E  C0F1  F003         	movff	_IRrawCodeNum,i1cleanBuffer16bit@count
 34881  000472  6A04               	clrf	i1cleanBuffer16bit@count+1,c
 34882  000474  EC5D  F0BE         	call	i1_cleanBuffer16bit	;wreg free
 34883                           
 34884                           ;interrupts.c: 264: IRrawCodeNum = 0;
 34885  000478  0E00               	movlw	0
 34886  00047A  0100               	movlb	0	; () banked
 34887  00047C  6FF1               	movwf	_IRrawCodeNum& (0+255),b
 34888                           
 34889                           ; BSR set to: 0
 34890                           ;interrupts.c: 265: INTCONbits.TMR0IF = 0;
 34891  00047E  94F2               	bcf	intcon,2,c	;volatile
 34892                           
 34893                           ; BSR set to: 0
 34894                           ;interrupts.c: 266: INTCONbits.TMR0IE = 0;
 34895  000480  9AF2               	bcf	intcon,5,c	;volatile
 34896                           
 34897                           ;interrupts.c: 267: }
 34898  000482  D00E               	goto	i1l100
 34899  000484                     i1l110:
 34900                           
 34901                           ;interrupts.c: 268: else if(INTCONbits.INT0IF)
 34902  000484  A2F2               	btfss	intcon,1,c	;volatile
 34903  000486  D003               	goto	i1l112
 34904                           
 34905                           ;interrupts.c: 269: {
 34906                           ;interrupts.c: 271: INTCONbits.INT0IF = 0;
 34907  000488  92F2               	bcf	intcon,1,c	;volatile
 34908                           
 34909                           ;interrupts.c: 272: INTCONbits.INT0IE = 0;
 34910  00048A  98F2               	bcf	intcon,4,c	;volatile
 34911                           
 34912                           ;interrupts.c: 274: }
 34913  00048C  D009               	goto	i1l100
 34914  00048E                     i1l112:
 34915                           
 34916                           ;interrupts.c: 275: else if(PIR1bits.TMR1IF)
 34917  00048E  A09E               	btfss	3998,0,c	;volatile
 34918  000490  D005               	goto	i1l114
 34919                           
 34920                           ;interrupts.c: 276: {
 34921                           ;interrupts.c: 278: LCDScreenUpdate();
 34922  000492  ECA5  F09E         	call	_LCDScreenUpdate	;wreg free
 34923                           
 34924                           ;interrupts.c: 279: PIR1bits.TMR1IF = 0;
 34925  000496  909E               	bcf	3998,0,c	;volatile
 34926                           
 34927                           ;interrupts.c: 280: PIE1bits.TMR1IE = 1;
 34928  000498  809D               	bsf	3997,0,c	;volatile
 34929                           
 34930                           ;interrupts.c: 281: }
 34931  00049A  D002               	goto	i1l100
 34932  00049C                     i1l114:
 34933                           
 34934                           ;interrupts.c: 282: else
 34935                           ;interrupts.c: 283: {
 34936                           ;interrupts.c: 285: __nop();
 34937  00049C  F000               	nop	
 34938  00049E  D000               	goto	i1l100
 34939  0004A0                     i1l100:
 34940                           
 34941                           ;interrupts.c: 286: }
 34942                           ;interrupts.c: 287: INTCONbits.PEIE = 1;
 34943  0004A0  8CF2               	bsf	intcon,6,c	;volatile
 34944  0004A2  C074  FFF5         	movff	??_low_isr+20,tablat
 34945  0004A6  C073  FFF8         	movff	??_low_isr+19,tblptru
 34946  0004AA  C072  FFF7         	movff	??_low_isr+18,tblptrh
 34947  0004AE  C071  FFF6         	movff	??_low_isr+17,tblptrl
 34948  0004B2  C070  FFF4         	movff	??_low_isr+16,prodh
 34949  0004B6  C06F  FFF3         	movff	??_low_isr+15,prodl
 34950  0004BA  C06E  FFDA         	movff	??_low_isr+14,fsr2h
 34951  0004BE  C06D  FFD9         	movff	??_low_isr+13,fsr2l
 34952  0004C2  C06C  FFE2         	movff	??_low_isr+12,fsr1h
 34953  0004C6  C06B  FFE1         	movff	??_low_isr+11,fsr1l
 34954  0004CA  C06A  FFEA         	movff	??_low_isr+10,fsr0h
 34955  0004CE  C069  FFE9         	movff	??_low_isr+9,fsr0l
 34956  0004D2  C068  FFFB         	movff	??_low_isr+8,pclatu
 34957  0004D6  C067  FFFA         	movff	??_low_isr+7,pclath
 34958  0004DA  C066  FFE0         	movff	??_low_isr+6,bsr
 34959  0004DE  C065  FFE8         	movff	??_low_isr+5,wreg
 34960  0004E2  C064  FFD8         	movff	??_low_isr+4,status
 34961  0004E6  0010               	retfie	
 34962  0004E8                     __end_of_low_isr:
 34963                           	opt stack 0
 34964                           pclatu	equ	0xFFB
 34965                           pclath	equ	0xFFA
 34966                           tblptru	equ	0xFF8
 34967                           tblptrh	equ	0xFF7
 34968                           tblptrl	equ	0xFF6
 34969                           tablat	equ	0xFF5
 34970                           prodh	equ	0xFF4
 34971                           prodl	equ	0xFF3
 34972                           intcon	equ	0xFF2
 34973                           intcon2	equ	0xFF1
 34974                           indf0	equ	0xFEF
 34975                           postinc0	equ	0xFEE
 34976                           plusw0	equ	0xFEB
 34977                           fsr0h	equ	0xFEA
 34978                           fsr0l	equ	0xFE9
 34979                           wreg	equ	0xFE8
 34980                           indf1	equ	0xFE7
 34981                           postdec1	equ	0xFE5
 34982                           fsr1h	equ	0xFE2
 34983                           fsr1l	equ	0xFE1
 34984                           bsr	equ	0xFE0
 34985                           indf2	equ	0xFDF
 34986                           postinc2	equ	0xFDE
 34987                           postdec2	equ	0xFDD
 34988                           plusw2	equ	0xFDB
 34989                           fsr2h	equ	0xFDA
 34990                           fsr2l	equ	0xFD9
 34991                           status	equ	0xFD8
 34992                           
 34993 ;; *************** function i1_cleanBuffer16bit *****************
 34994 ;; Defined at:
 34995 ;;		line 89 in file "MISC.c"
 34996 ;; Parameters:    Size  Location     Type
 34997 ;;  data            2    0[COMRAM] PTR unsigned int 
 34998 ;;		 -> IRRawCode(144), 
 34999 ;;  count           2    2[COMRAM] int 
 35000 ;; Auto vars:     Size  Location     Type
 35001 ;;  cleanBuffer1    1    7[COMRAM] unsigned char 
 35002 ;; Return value:  Size  Location     Type
 35003 ;;		None               void
 35004 ;; Registers used:
 35005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35006 ;; Tracked objects:
 35007 ;;		On entry : 0/0
 35008 ;;		On exit  : 0/0
 35009 ;;		Unchanged: 0/0
 35010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35013 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35014 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35015 ;;Total ram usage:        8 bytes
 35016 ;; Hardware stack levels used:    1
 35017 ;; Hardware stack levels required when called:    1
 35018 ;; This function calls:
 35019 ;;		Nothing
 35020 ;; This function is called by:
 35021 ;;		_low_isr
 35022 ;; This function uses a non-reentrant model
 35023 ;;
 35024                           
 35025                           	psect	text105
 35026  017CBA                     __ptext105:
 35027                           	opt stack 0
 35028  017CBA                     i1_cleanBuffer16bit:
 35029                           	opt stack 22
 35030                           
 35031                           ;MISC.c: 91: unsigned char i=0;
 35032                           
 35033                           ;incstack = 0
 35034  017CBA  0E00               	movlw	0
 35035  017CBC  6E08               	movwf	i1cleanBuffer16bit@i,c
 35036                           
 35037                           ;MISC.c: 92: for(i=0; i<count;i++)
 35038  017CBE  0E00               	movlw	0
 35039  017CC0  6E08               	movwf	i1cleanBuffer16bit@i,c
 35040  017CC2  D00E               	goto	i1l11437
 35041  017CC4                     i1l11433:
 35042                           
 35043                           ;MISC.c: 93: {
 35044                           ;MISC.c: 94: data[i]= 0;
 35045  017CC4  5008               	movf	i1cleanBuffer16bit@i,w,c
 35046  017CC6  0D02               	mullw	2
 35047  017CC8  50F3               	movf	prodl,w,c
 35048  017CCA  2401               	addwf	i1cleanBuffer16bit@data,w,c
 35049  017CCC  6ED9               	movwf	fsr2l,c
 35050  017CCE  50F4               	movf	prodh,w,c
 35051  017CD0  2002               	addwfc	i1cleanBuffer16bit@data+1,w,c
 35052  017CD2  6EDA               	movwf	fsr2h,c
 35053  017CD4  0E00               	movlw	0
 35054  017CD6  6EDE               	movwf	postinc2,c
 35055  017CD8  0E00               	movlw	0
 35056  017CDA  6EDD               	movwf	postdec2,c
 35057  017CDC  2A08               	incf	i1cleanBuffer16bit@i,f,c
 35058  017CDE  D000               	goto	i1l11437
 35059  017CE0                     i1l11437:
 35060  017CE0  5008               	movf	i1cleanBuffer16bit@i,w,c
 35061  017CE2  6E05               	movwf	??i1_cleanBuffer16bit& (0+255),c
 35062  017CE4  6A06               	clrf	(??i1_cleanBuffer16bit+1)& (0+255),c
 35063  017CE6  5003               	movf	i1cleanBuffer16bit@count,w,c
 35064  017CE8  5C05               	subwf	??i1_cleanBuffer16bit,w,c
 35065  017CEA  5006               	movf	??i1_cleanBuffer16bit+1,w,c
 35066  017CEC  0A80               	xorlw	128
 35067  017CEE  6E07               	movwf	(??i1_cleanBuffer16bit+2)& (0+255),c
 35068  017CF0  5004               	movf	i1cleanBuffer16bit@count+1,w,c
 35069  017CF2  0A80               	xorlw	128
 35070  017CF4  5807               	subwfb	(??i1_cleanBuffer16bit+2)& (0+255),w,c
 35071  017CF6  A0D8               	btfss	status,0,c
 35072  017CF8  D7E5               	goto	i1l11433
 35073  017CFA  0012               	return		;funcret
 35074  017CFC                     __end_ofi1_cleanBuffer16bit:
 35075                           	opt stack 0
 35076                           pclatu	equ	0xFFB
 35077                           pclath	equ	0xFFA
 35078                           tblptru	equ	0xFF8
 35079                           tblptrh	equ	0xFF7
 35080                           tblptrl	equ	0xFF6
 35081                           tablat	equ	0xFF5
 35082                           prodh	equ	0xFF4
 35083                           prodl	equ	0xFF3
 35084                           intcon	equ	0xFF2
 35085                           intcon2	equ	0xFF1
 35086                           indf0	equ	0xFEF
 35087                           postinc0	equ	0xFEE
 35088                           plusw0	equ	0xFEB
 35089                           fsr0h	equ	0xFEA
 35090                           fsr0l	equ	0xFE9
 35091                           wreg	equ	0xFE8
 35092                           indf1	equ	0xFE7
 35093                           postdec1	equ	0xFE5
 35094                           fsr1h	equ	0xFE2
 35095                           fsr1l	equ	0xFE1
 35096                           bsr	equ	0xFE0
 35097                           indf2	equ	0xFDF
 35098                           postinc2	equ	0xFDE
 35099                           postdec2	equ	0xFDD
 35100                           plusw2	equ	0xFDB
 35101                           fsr2h	equ	0xFDA
 35102                           fsr2l	equ	0xFD9
 35103                           status	equ	0xFD8
 35104                           
 35105 ;; *************** function i1_ReadUSART *****************
 35106 ;; Defined at:
 35107 ;;		line 250 in file "UART.c"
 35108 ;; Parameters:    Size  Location     Type
 35109 ;;		None
 35110 ;; Auto vars:     Size  Location     Type
 35111 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 35112 ;; Return value:  Size  Location     Type
 35113 ;;                  1    wreg      unsigned char 
 35114 ;; Registers used:
 35115 ;;		wreg, status,2, status,0
 35116 ;; Tracked objects:
 35117 ;;		On entry : 0/0
 35118 ;;		On exit  : 0/0
 35119 ;;		Unchanged: 0/0
 35120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35125 ;;Total ram usage:        1 bytes
 35126 ;; Hardware stack levels used:    1
 35127 ;; Hardware stack levels required when called:    1
 35128 ;; This function calls:
 35129 ;;		Nothing
 35130 ;; This function is called by:
 35131 ;;		_low_isr
 35132 ;; This function uses a non-reentrant model
 35133 ;;
 35134                           
 35135                           	psect	text106
 35136  000B74                     __ptext106:
 35137                           	opt stack 0
 35138  000B74                     i1_ReadUSART:
 35139                           	opt stack 22
 35140                           
 35141                           ;UART.c: 252: char data;
 35142                           ;UART.c: 254: USART_Status.val &= 0xf2;
 35143                           
 35144                           ;incstack = 0
 35145  000B74  0EF2               	movlw	242
 35146  000B76  0101               	movlb	1	; () banked
 35147  000B78  179D               	andwf	_USART_Status& (0+255),f,b
 35148                           
 35149                           ; BSR set to: 1
 35150                           ;UART.c: 256: if(RCSTAbits.RX9)
 35151  000B7A  ACAB               	btfss	4011,6,c	;volatile
 35152  000B7C  D007               	goto	i1l528
 35153                           
 35154                           ; BSR set to: 1
 35155                           ;UART.c: 257: {
 35156                           ;UART.c: 258: USART_Status.RX_NINE = 0;
 35157  000B7E  0101               	movlb	1	; () banked
 35158  000B80  919D               	bcf	_USART_Status& (0+255),0,b
 35159                           
 35160                           ;UART.c: 259: if(RCSTAbits.RX9D)
 35161  000B82  A0AB               	btfss	4011,0,c	;volatile
 35162  000B84  D003               	goto	i1l528
 35163                           
 35164                           ; BSR set to: 1
 35165                           ;UART.c: 260: USART_Status.RX_NINE = 1;
 35166  000B86  0101               	movlb	1	; () banked
 35167  000B88  819D               	bsf	_USART_Status& (0+255),0,b
 35168  000B8A  D000               	goto	i1l528
 35169  000B8C                     i1l528:
 35170                           
 35171                           ; BSR set to: 1
 35172                           ;UART.c: 261: }
 35173                           ;UART.c: 263: if(RCSTAbits.FERR)
 35174  000B8C  A4AB               	btfss	4011,2,c	;volatile
 35175  000B8E  D002               	goto	i1l530
 35176                           
 35177                           ; BSR set to: 1
 35178                           ;UART.c: 264: USART_Status.FRAME_ERROR = 1;
 35179  000B90  0101               	movlb	1	; () banked
 35180  000B92  859D               	bsf	_USART_Status& (0+255),2,b
 35181  000B94                     i1l530:
 35182                           
 35183                           ; BSR set to: 1
 35184                           ;UART.c: 266: if(RCSTAbits.OERR)
 35185  000B94  A2AB               	btfss	4011,1,c	;volatile
 35186  000B96  D002               	goto	i1l531
 35187                           
 35188                           ; BSR set to: 1
 35189                           ;UART.c: 267: USART_Status.OVERRUN_ERROR = 1;
 35190  000B98  0101               	movlb	1	; () banked
 35191  000B9A  879D               	bsf	_USART_Status& (0+255),3,b
 35192  000B9C                     i1l531:
 35193                           
 35194                           ; BSR set to: 1
 35195                           ;UART.c: 269: data = RCREG;
 35196  000B9C  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 35197                           
 35198                           ; BSR set to: 1
 35199                           ;UART.c: 271: return (data);
 35200  000BA0  5001               	movf	i1ReadUSART@data,w,c
 35201  000BA2  0012               	return	
 35202                           
 35203                           ; BSR set to: 1
 35204                           
 35205                           ; BSR set to: 1
 35206  000BA4  0012               	return		;funcret
 35207  000BA6                     __end_ofi1_ReadUSART:
 35208                           	opt stack 0
 35209                           pclatu	equ	0xFFB
 35210                           pclath	equ	0xFFA
 35211                           tblptru	equ	0xFF8
 35212                           tblptrh	equ	0xFF7
 35213                           tblptrl	equ	0xFF6
 35214                           tablat	equ	0xFF5
 35215                           prodh	equ	0xFF4
 35216                           prodl	equ	0xFF3
 35217                           intcon	equ	0xFF2
 35218                           intcon2	equ	0xFF1
 35219                           indf0	equ	0xFEF
 35220                           postinc0	equ	0xFEE
 35221                           plusw0	equ	0xFEB
 35222                           fsr0h	equ	0xFEA
 35223                           fsr0l	equ	0xFE9
 35224                           wreg	equ	0xFE8
 35225                           indf1	equ	0xFE7
 35226                           postdec1	equ	0xFE5
 35227                           fsr1h	equ	0xFE2
 35228                           fsr1l	equ	0xFE1
 35229                           bsr	equ	0xFE0
 35230                           indf2	equ	0xFDF
 35231                           postinc2	equ	0xFDE
 35232                           postdec2	equ	0xFDD
 35233                           plusw2	equ	0xFDB
 35234                           fsr2h	equ	0xFDA
 35235                           fsr2l	equ	0xFD9
 35236                           status	equ	0xFD8
 35237                           
 35238 ;; *************** function i1_ReadIRpin *****************
 35239 ;; Defined at:
 35240 ;;		line 95 in file "IR.c"
 35241 ;; Parameters:    Size  Location     Type
 35242 ;;		None
 35243 ;; Auto vars:     Size  Location     Type
 35244 ;;		None
 35245 ;; Return value:  Size  Location     Type
 35246 ;;                  1    wreg      unsigned char 
 35247 ;; Registers used:
 35248 ;;		wreg
 35249 ;; Tracked objects:
 35250 ;;		On entry : 0/0
 35251 ;;		On exit  : 0/0
 35252 ;;		Unchanged: 0/0
 35253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35258 ;;Total ram usage:        0 bytes
 35259 ;; Hardware stack levels used:    1
 35260 ;; Hardware stack levels required when called:    1
 35261 ;; This function calls:
 35262 ;;		Nothing
 35263 ;; This function is called by:
 35264 ;;		_low_isr
 35265 ;; This function uses a non-reentrant model
 35266 ;;
 35267                           
 35268                           	psect	text107
 35269  000F12                     __ptext107:
 35270                           	opt stack 0
 35271  000F12                     i1_ReadIRpin:
 35272                           	opt stack 22
 35273                           
 35274                           ;IR.c: 98: if((PORTB & 0b00010000) == 0b00010000)
 35275                           
 35276                           ; BSR set to: 1
 35277                           ;incstack = 0
 35278  000F12  A881               	btfss	3969,4,c	;volatile
 35279  000F14  D002               	goto	i1l11493
 35280                           
 35281                           ;IR.c: 99: {
 35282                           ;IR.c: 100: return (1);
 35283  000F16  0E01               	movlw	1
 35284                           
 35285                           ;IR.c: 101: }
 35286  000F18  0012               	return	
 35287  000F1A                     i1l11493:
 35288                           
 35289                           ;IR.c: 102: else
 35290                           ;IR.c: 103: {
 35291                           ;IR.c: 104: return 0;
 35292  000F1A  0E00               	movlw	0
 35293  000F1C  0012               	return	
 35294  000F1E  0012               	return		;funcret
 35295  000F20                     __end_ofi1_ReadIRpin:
 35296                           	opt stack 0
 35297                           pclatu	equ	0xFFB
 35298                           pclath	equ	0xFFA
 35299                           tblptru	equ	0xFF8
 35300                           tblptrh	equ	0xFF7
 35301                           tblptrl	equ	0xFF6
 35302                           tablat	equ	0xFF5
 35303                           prodh	equ	0xFF4
 35304                           prodl	equ	0xFF3
 35305                           intcon	equ	0xFF2
 35306                           intcon2	equ	0xFF1
 35307                           indf0	equ	0xFEF
 35308                           postinc0	equ	0xFEE
 35309                           plusw0	equ	0xFEB
 35310                           fsr0h	equ	0xFEA
 35311                           fsr0l	equ	0xFE9
 35312                           wreg	equ	0xFE8
 35313                           indf1	equ	0xFE7
 35314                           postdec1	equ	0xFE5
 35315                           fsr1h	equ	0xFE2
 35316                           fsr1l	equ	0xFE1
 35317                           bsr	equ	0xFE0
 35318                           indf2	equ	0xFDF
 35319                           postinc2	equ	0xFDE
 35320                           postdec2	equ	0xFDD
 35321                           plusw2	equ	0xFDB
 35322                           fsr2h	equ	0xFDA
 35323                           fsr2l	equ	0xFD9
 35324                           status	equ	0xFD8
 35325                           
 35326 ;; *************** function i1_BufferCopy *****************
 35327 ;; Defined at:
 35328 ;;		line 103 in file "MISC.c"
 35329 ;; Parameters:    Size  Location     Type
 35330 ;;  from            2    8[COMRAM] PTR unsigned char 
 35331 ;;		 -> STR_298(6), STR_297(5), STR_296(5), STR_295(10), 
 35332 ;;		 -> STR_294(16), STR_293(11), STR_292(12), STR_291(9), 
 35333 ;;		 -> STR_290(14), STR_270(6), STR_269(9), STR_268(14), 
 35334 ;;		 -> STR_252(4), STR_251(5), STR_250(8), STR_249(10), 
 35335 ;;		 -> STR_248(9), STR_217(2), STR_216(10), STR_215(9), 
 35336 ;;		 -> STR_196(10), STR_195(10), STR_194(13), STR_179(10), 
 35337 ;;		 -> STR_178(10), STR_177(17), STR_157(6), STR_156(6), 
 35338 ;;		 -> STR_155(9), STR_154(10), STR_129(7), STR_128(4), 
 35339 ;;		 -> STR_127(6), STR_126(9), STR_125(13), STR_94(4), 
 35340 ;;		 -> STR_93(6), STR_92(9), STR_91(14), STR_69(5), 
 35341 ;;		 -> STR_68(5), STR_67(9), STR_66(9), StringAddEqual@temp(100), 
 35342 ;;		 -> RemoveSpaces@That(100), low_isr@TEMP_Rxdata(100), 
 35343 ;;  to              2   10[COMRAM] PTR unsigned char 
 35344 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 35345 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 35346 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 35347 ;;  count           1   12[COMRAM] unsigned char 
 35348 ;;  shift           1   13[COMRAM] unsigned char 
 35349 ;; Auto vars:     Size  Location     Type
 35350 ;;  BufferCopy      1   14[COMRAM] unsigned char 
 35351 ;; Return value:  Size  Location     Type
 35352 ;;		None               void
 35353 ;; Registers used:
 35354 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35355 ;; Tracked objects:
 35356 ;;		On entry : 0/0
 35357 ;;		On exit  : 0/0
 35358 ;;		Unchanged: 0/0
 35359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35360 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35363 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35364 ;;Total ram usage:        7 bytes
 35365 ;; Hardware stack levels used:    1
 35366 ;; Hardware stack levels required when called:    2
 35367 ;; This function calls:
 35368 ;;		i1_cleanBuffer
 35369 ;; This function is called by:
 35370 ;;		_low_isr
 35371 ;; This function uses a non-reentrant model
 35372 ;;
 35373                           
 35374                           	psect	text108
 35375  016EBC                     __ptext108:
 35376                           	opt stack 0
 35377  016EBC                     i1_BufferCopy:
 35378                           	opt stack 21
 35379                           
 35380                           ;MISC.c: 105: unsigned char i=0;
 35381                           
 35382                           ;incstack = 0
 35383  016EBC  0E00               	movlw	0
 35384  016EBE  6E0F               	movwf	i1BufferCopy@i,c
 35385                           
 35386                           ;MISC.c: 106: cleanBuffer(to,count);
 35387  016EC0  C00B  F001         	movff	i1BufferCopy@to,i1cleanBuffer@data
 35388  016EC4  C00C  F002         	movff	i1BufferCopy@to+1,i1cleanBuffer@data+1
 35389  016EC8  C00D  F003         	movff	i1BufferCopy@count,i1cleanBuffer@count
 35390  016ECC  6A04               	clrf	i1cleanBuffer@count+1,c
 35391  016ECE  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 35392                           
 35393                           ;MISC.c: 107: for(i = shift; i>0;i--)
 35394  016ED2  C00E  F00F         	movff	i1BufferCopy@shift,i1BufferCopy@i
 35395  016ED6                     i1l11445:
 35396  016ED6  500F               	movf	i1BufferCopy@i,w,c
 35397  016ED8  B4D8               	btfsc	status,2,c
 35398  016EDA  D029               	goto	i1l11465
 35399  016EDC  D001               	goto	i1l11449
 35400  016EDE  D027               	goto	i1l11465
 35401  016EE0                     i1l11449:
 35402                           
 35403                           ;MISC.c: 108: {
 35404                           ;MISC.c: 109: *to = ' ';
 35405  016EE0  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 35406  016EE4  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 35407  016EE8  0E20               	movlw	32
 35408  016EEA  6EDF               	movwf	indf2,c
 35409                           
 35410                           ;MISC.c: 110: to++;
 35411  016EEC  4A0B               	infsnz	i1BufferCopy@to,f,c
 35412  016EEE  2A0C               	incf	i1BufferCopy@to+1,f,c
 35413  016EF0  060F               	decf	i1BufferCopy@i,f,c
 35414  016EF2  D7F1               	goto	i1l11445
 35415                           
 35416                           ;MISC.c: 111: }
 35417                           ;MISC.c: 112: while(*from != 0 && count >0)
 35418  016EF4  D01C               	goto	i1l11465
 35419  016EF6                     i1l11457:
 35420                           
 35421                           ;MISC.c: 113: {
 35422                           ;MISC.c: 114: *to = *from;
 35423  016EF6  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 35424  016EFA  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 35425  016EFE  0E00               	movlw	low (__mediumconst shr (0+16))
 35426  016F00  6EF8               	movwf	tblptru,c
 35427  016F02  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 35428  016F06  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 35429  016F0A  0E0C               	movlw	(high __ramtop+-1)
 35430  016F0C  64F7               	cpfsgt	tblptrh,c
 35431  016F0E  D003               	bra	i1u1375_27
 35432  016F10  0008               	tblrd		*
 35433  016F12  50F5               	movf	tablat,w,c
 35434  016F14  D005               	bra	i1u1375_20
 35435  016F16                     i1u1375_27:
 35436  016F16  CFF6 FFE9          	movff	tblptrl,fsr0l
 35437  016F1A  CFF7 FFEA          	movff	tblptrh,fsr0h
 35438  016F1E  50EF               	movf	indf0,w,c
 35439  016F20                     i1u1375_20:
 35440  016F20  6EDF               	movwf	indf2,c
 35441                           
 35442                           ;MISC.c: 115: from++;
 35443  016F22  4A09               	infsnz	i1BufferCopy@from,f,c
 35444  016F24  2A0A               	incf	i1BufferCopy@from+1,f,c
 35445                           
 35446                           ;MISC.c: 116: to++;
 35447  016F26  4A0B               	infsnz	i1BufferCopy@to,f,c
 35448  016F28  2A0C               	incf	i1BufferCopy@to+1,f,c
 35449                           
 35450                           ;MISC.c: 117: count--;
 35451  016F2A  060D               	decf	i1BufferCopy@count,f,c
 35452  016F2C  D000               	goto	i1l11465
 35453  016F2E                     i1l11465:
 35454  016F2E  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 35455  016F32  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 35456  016F36  0E00               	movlw	low (__mediumconst shr (0+16))
 35457  016F38  6EF8               	movwf	tblptru,c
 35458  016F3A  0E0C               	movlw	(high __ramtop+-1)
 35459  016F3C  64F7               	cpfsgt	tblptrh,c
 35460  016F3E  D003               	bra	i1u1376_27
 35461  016F40  0008               	tblrd		*
 35462  016F42  50F5               	movf	tablat,w,c
 35463  016F44  D005               	bra	i1u1376_20
 35464  016F46                     i1u1376_27:
 35465  016F46  CFF6 FFE9          	movff	tblptrl,fsr0l
 35466  016F4A  CFF7 FFEA          	movff	tblptrh,fsr0h
 35467  016F4E  50EF               	movf	indf0,w,c
 35468  016F50                     i1u1376_20:
 35469  016F50  0900               	iorlw	0
 35470  016F52  B4D8               	btfsc	status,2,c
 35471  016F54  0012               	return	
 35472  016F56  500D               	movf	i1BufferCopy@count,w,c
 35473  016F58  B4D8               	btfsc	status,2,c
 35474  016F5A  0012               	return	
 35475  016F5C  D7CC               	goto	i1l11457
 35476  016F5E  0012               	return	
 35477  016F60  0012               	return		;funcret
 35478  016F62                     __end_ofi1_BufferCopy:
 35479                           	opt stack 0
 35480                           pclatu	equ	0xFFB
 35481                           pclath	equ	0xFFA
 35482                           tblptru	equ	0xFF8
 35483                           tblptrh	equ	0xFF7
 35484                           tblptrl	equ	0xFF6
 35485                           tablat	equ	0xFF5
 35486                           prodh	equ	0xFF4
 35487                           prodl	equ	0xFF3
 35488                           intcon	equ	0xFF2
 35489                           intcon2	equ	0xFF1
 35490                           indf0	equ	0xFEF
 35491                           postinc0	equ	0xFEE
 35492                           plusw0	equ	0xFEB
 35493                           fsr0h	equ	0xFEA
 35494                           fsr0l	equ	0xFE9
 35495                           wreg	equ	0xFE8
 35496                           indf1	equ	0xFE7
 35497                           postdec1	equ	0xFE5
 35498                           fsr1h	equ	0xFE2
 35499                           fsr1l	equ	0xFE1
 35500                           bsr	equ	0xFE0
 35501                           indf2	equ	0xFDF
 35502                           postinc2	equ	0xFDE
 35503                           postdec2	equ	0xFDD
 35504                           plusw2	equ	0xFDB
 35505                           fsr2h	equ	0xFDA
 35506                           fsr2l	equ	0xFD9
 35507                           status	equ	0xFD8
 35508                           
 35509 ;; *************** function _UseIRCode *****************
 35510 ;; Defined at:
 35511 ;;		line 271 in file "IR.c"
 35512 ;; Parameters:    Size  Location     Type
 35513 ;;  Code            2   70[COMRAM] PTR unsigned char 
 35514 ;;		 -> IR_New_Code(1), 
 35515 ;;  NEC             4   72[COMRAM] unsigned long 
 35516 ;; Auto vars:     Size  Location     Type
 35517 ;;  buf           100    0        unsigned char [100]
 35518 ;;  i               1   77[COMRAM] unsigned char 
 35519 ;; Return value:  Size  Location     Type
 35520 ;;		None               void
 35521 ;; Registers used:
 35522 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35523 ;; Tracked objects:
 35524 ;;		On entry : 0/0
 35525 ;;		On exit  : 0/0
 35526 ;;		Unchanged: 0/0
 35527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35528 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35531 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35532 ;;Total ram usage:        8 bytes
 35533 ;; Hardware stack levels used:    1
 35534 ;; Hardware stack levels required when called:    5
 35535 ;; This function calls:
 35536 ;;		_ReadButton1
 35537 ;;		i1_SetEEPROM
 35538 ;;		i1_UARTstring
 35539 ;;		i1_delayUS
 35540 ;; This function is called by:
 35541 ;;		_low_isr
 35542 ;; This function uses a non-reentrant model
 35543 ;;
 35544                           
 35545                           	psect	text109
 35546  015CCE                     __ptext109:
 35547                           	opt stack 0
 35548  015CCE                     _UseIRCode:
 35549                           	opt stack 18
 35550                           
 35551                           ;IR.c: 273: unsigned char buf[100];
 35552                           ;IR.c: 274: unsigned char i;
 35553                           ;IR.c: 276: if(ReadButton1())
 35554                           
 35555                           ;incstack = 0
 35556  015CCE  EC90  F007         	call	_ReadButton1	;wreg free
 35557  015CD2  0900               	iorlw	0
 35558  015CD4  B4D8               	btfsc	status,2,c
 35559  015CD6  D01C               	goto	i1l10191
 35560                           
 35561                           ;IR.c: 277: {
 35562                           ;IR.c: 278: if(NEC == Global.NEC1)
 35563  015CD8  5049               	movf	UseIRCode@NEC,w,c
 35564  015CDA  0101               	movlb	1	; () banked
 35565  015CDC  198F               	xorwf	(_Global+5)& (0+255),w,b
 35566  015CDE  E16A               	bnz	i1l10219
 35567  015CE0  504A               	movf	UseIRCode@NEC+1,w,c
 35568  015CE2  0101               	movlb	1	; () banked
 35569  015CE4  1990               	xorwf	(_Global+6)& (0+255),w,b
 35570  015CE6  E166               	bnz	i1l10219
 35571  015CE8  504B               	movf	UseIRCode@NEC+2,w,c
 35572  015CEA  0101               	movlb	1	; () banked
 35573  015CEC  1991               	xorwf	(_Global+7)& (0+255),w,b
 35574  015CEE  E162               	bnz	i1l10219
 35575  015CF0  504C               	movf	UseIRCode@NEC+3,w,c
 35576  015CF2  0101               	movlb	1	; () banked
 35577  015CF4  1992               	xorwf	(_Global+8)& (0+255),w,b
 35578  015CF6  A4D8               	btfss	status,2,c
 35579  015CF8  D05D               	goto	i1l10219
 35580                           
 35581                           ; BSR set to: 1
 35582                           ;IR.c: 279: {
 35583                           ;IR.c: 280: if(*Code == 1)
 35584  015CFA  C047  FFD9         	movff	UseIRCode@Code,fsr2l
 35585  015CFE  C048  FFDA         	movff	UseIRCode@Code+1,fsr2h
 35586  015D02  04DE               	decf	postinc2,w,c
 35587  015D04  A4D8               	btfss	status,2,c
 35588  015D06  D002               	goto	i1l10189
 35589                           
 35590                           ; BSR set to: 1
 35591                           ;IR.c: 281: {
 35592                           ;IR.c: 282: LATD |= 0b00000010;
 35593  015D08  828C               	bsf	3980,1,c	;volatile
 35594                           
 35595                           ;IR.c: 283: }
 35596  015D0A  D054               	goto	i1l10219
 35597  015D0C                     i1l10189:
 35598                           
 35599                           ; BSR set to: 1
 35600                           ;IR.c: 284: else
 35601                           ;IR.c: 285: {
 35602                           ;IR.c: 286: LATD |= 0b00000100;
 35603  015D0C  848C               	bsf	3980,2,c	;volatile
 35604                           
 35605                           ; BSR set to: 1
 35606                           ;IR.c: 287: }
 35607                           ;IR.c: 288: }
 35608                           ;IR.c: 289: }
 35609                           
 35610                           ; BSR set to: 1
 35611  015D0E  D052               	goto	i1l10219
 35612  015D10                     i1l10191:
 35613                           
 35614                           ;IR.c: 290: else
 35615                           ;IR.c: 291: {
 35616                           ;IR.c: 292: if(*Code == 1)
 35617  015D10  C047  FFD9         	movff	UseIRCode@Code,fsr2l
 35618  015D14  C048  FFDA         	movff	UseIRCode@Code+1,fsr2h
 35619  015D18  04DE               	decf	postinc2,w,c
 35620  015D1A  A4D8               	btfss	status,2,c
 35621  015D1C  D04B               	goto	i1l10219
 35622                           
 35623                           ;IR.c: 293: {
 35624                           ;IR.c: 294: Global.NEC1 = NEC;
 35625  015D1E  C049  F18F         	movff	UseIRCode@NEC,_Global+5
 35626  015D22  C04A  F190         	movff	UseIRCode@NEC+1,_Global+6
 35627  015D26  C04B  F191         	movff	UseIRCode@NEC+2,_Global+7
 35628  015D2A  C04C  F192         	movff	UseIRCode@NEC+3,_Global+8
 35629                           
 35630                           ;IR.c: 295: if(SetEEPROM(Global, 0x04))
 35631  015D2E  EE21  F08A         	lfsr	2,_Global
 35632  015D32  EE00  F036         	lfsr	0,i1SetEEPROM@Temp
 35633  015D36  0E08               	movlw	8
 35634  015D38                     i1u1200_21:
 35635  015D38  CFDB FFEB          	movff	plusw2,plusw0
 35636  015D3C  06E8               	decf	wreg,f,c
 35637  015D3E  E2FC               	bc	i1u1200_21
 35638  015D40  0E04               	movlw	4
 35639  015D42  6E3F               	movwf	i1SetEEPROM@burn,c
 35640  015D44  0E00               	movlw	0
 35641  015D46  6E40               	movwf	i1SetEEPROM@burn+1,c
 35642  015D48  0E00               	movlw	0
 35643  015D4A  6E41               	movwf	i1SetEEPROM@burn+2,c
 35644  015D4C  0E00               	movlw	0
 35645  015D4E  6E42               	movwf	i1SetEEPROM@burn+3,c
 35646  015D50  EC55  F0B8         	call	i1_SetEEPROM	;wreg free
 35647  015D54  5036               	movf	?i1_SetEEPROM,w,c
 35648  015D56  1037               	iorwf	?i1_SetEEPROM+1,w,c
 35649  015D58  1038               	iorwf	?i1_SetEEPROM+2,w,c
 35650  015D5A  1039               	iorwf	?i1_SetEEPROM+3,w,c
 35651  015D5C  B4D8               	btfsc	status,2,c
 35652  015D5E  D007               	goto	i1l10199
 35653                           
 35654                           ;IR.c: 296: {
 35655                           ;IR.c: 298: UARTstring("Error: Could not burn IR Code into Memory\r\n");
 35656  015D60  0EB3               	movlw	low STR_324
 35657  015D62  6E0C               	movwf	i1UARTstring@data,c
 35658  015D64  0EF1               	movlw	high STR_324
 35659  015D66  6E0D               	movwf	i1UARTstring@data+1,c
 35660  015D68  ECF1  F0B8         	call	i1_UARTstring	;wreg free
 35661  015D6C  D000               	goto	i1l10199
 35662  015D6E                     i1l10199:
 35663                           
 35664                           ;IR.c: 299: }
 35665                           ;IR.c: 300: for(i =0; i <10;i++)
 35666  015D6E  0E00               	movlw	0
 35667  015D70  6E4E               	movwf	UseIRCode@i,c
 35668  015D72                     i1l10201:
 35669  015D72  0E09               	movlw	9
 35670  015D74  644E               	cpfsgt	UseIRCode@i,c
 35671  015D76  D001               	goto	i1l10205
 35672  015D78  D01A               	goto	i1l10217
 35673  015D7A                     i1l10205:
 35674                           
 35675                           ;IR.c: 301: {
 35676                           ;IR.c: 302: LATD |= 0b00000010;
 35677  015D7A  828C               	bsf	3980,1,c	;volatile
 35678                           
 35679                           ;IR.c: 303: LATD &= ~0b00000100;
 35680  015D7C  948C               	bcf	3980,2,c	;volatile
 35681                           
 35682                           ;IR.c: 304: delayUS(50000);
 35683  015D7E  0E50               	movlw	80
 35684  015D80  6E01               	movwf	i1delayUS@US,c
 35685  015D82  0EC3               	movlw	195
 35686  015D84  6E02               	movwf	i1delayUS@US+1,c
 35687  015D86  0E00               	movlw	0
 35688  015D88  6E03               	movwf	i1delayUS@US+2,c
 35689  015D8A  0E00               	movlw	0
 35690  015D8C  6E04               	movwf	i1delayUS@US+3,c
 35691  015D8E  ECA8  F003         	call	i1_delayUS	;wreg free
 35692                           
 35693                           ;IR.c: 305: LATD |= 0b00000100;
 35694  015D92  848C               	bsf	3980,2,c	;volatile
 35695                           
 35696                           ;IR.c: 306: LATD &= ~0b00000010;
 35697  015D94  928C               	bcf	3980,1,c	;volatile
 35698                           
 35699                           ;IR.c: 307: delayUS(50000);
 35700  015D96  0E50               	movlw	80
 35701  015D98  6E01               	movwf	i1delayUS@US,c
 35702  015D9A  0EC3               	movlw	195
 35703  015D9C  6E02               	movwf	i1delayUS@US+1,c
 35704  015D9E  0E00               	movlw	0
 35705  015DA0  6E03               	movwf	i1delayUS@US+2,c
 35706  015DA2  0E00               	movlw	0
 35707  015DA4  6E04               	movwf	i1delayUS@US+3,c
 35708  015DA6  ECA8  F003         	call	i1_delayUS	;wreg free
 35709  015DAA  2A4E               	incf	UseIRCode@i,f,c
 35710  015DAC  D7E2               	goto	i1l10201
 35711  015DAE                     i1l10217:
 35712                           
 35713                           ;IR.c: 308: }
 35714                           ;IR.c: 309: LATD &= ~0b00000010;
 35715  015DAE  928C               	bcf	3980,1,c	;volatile
 35716                           
 35717                           ;IR.c: 310: LATD &= ~0b00000100;
 35718  015DB0  948C               	bcf	3980,2,c	;volatile
 35719  015DB2  D000               	goto	i1l10219
 35720  015DB4                     i1l10219:
 35721                           
 35722                           ;IR.c: 311: }
 35723                           ;IR.c: 312: }
 35724                           ;IR.c: 313: *Code = 0;
 35725  015DB4  C047  FFD9         	movff	UseIRCode@Code,fsr2l
 35726  015DB8  C048  FFDA         	movff	UseIRCode@Code+1,fsr2h
 35727  015DBC  0E00               	movlw	0
 35728  015DBE  6EDF               	movwf	indf2,c
 35729                           
 35730                           ;IR.c: 314: BlueLEDcount = 0;
 35731  015DC0  0E00               	movlw	0
 35732  015DC2  0101               	movlb	1	; () banked
 35733  015DC4  6FEF               	movwf	(_BlueLEDcount+1)& (0+255),b
 35734  015DC6  0E00               	movlw	0
 35735  015DC8  6FEE               	movwf	_BlueLEDcount& (0+255),b
 35736                           
 35737                           ; BSR set to: 1
 35738  015DCA  0012               	return		;funcret
 35739  015DCC                     __end_of_UseIRCode:
 35740                           	opt stack 0
 35741                           pclatu	equ	0xFFB
 35742                           pclath	equ	0xFFA
 35743                           tblptru	equ	0xFF8
 35744                           tblptrh	equ	0xFF7
 35745                           tblptrl	equ	0xFF6
 35746                           tablat	equ	0xFF5
 35747                           prodh	equ	0xFF4
 35748                           prodl	equ	0xFF3
 35749                           intcon	equ	0xFF2
 35750                           intcon2	equ	0xFF1
 35751                           indf0	equ	0xFEF
 35752                           postinc0	equ	0xFEE
 35753                           plusw0	equ	0xFEB
 35754                           fsr0h	equ	0xFEA
 35755                           fsr0l	equ	0xFE9
 35756                           wreg	equ	0xFE8
 35757                           indf1	equ	0xFE7
 35758                           postdec1	equ	0xFE5
 35759                           fsr1h	equ	0xFE2
 35760                           fsr1l	equ	0xFE1
 35761                           bsr	equ	0xFE0
 35762                           indf2	equ	0xFDF
 35763                           postinc2	equ	0xFDE
 35764                           postdec2	equ	0xFDD
 35765                           plusw2	equ	0xFDB
 35766                           fsr2h	equ	0xFDA
 35767                           fsr2l	equ	0xFD9
 35768                           status	equ	0xFD8
 35769                           
 35770 ;; *************** function i1_UARTstring *****************
 35771 ;; Defined at:
 35772 ;;		line 233 in file "UART.c"
 35773 ;; Parameters:    Size  Location     Type
 35774 ;;  data            2   11[COMRAM] PTR const unsigned char 
 35775 ;;		 -> STR_324(44), STR_320(26), STR_319(3), STR_317(18), 
 35776 ;;		 -> STR_315(18), STR_311(20), STR_288(24), STR_285(3), 
 35777 ;;		 -> STR_283(15), STR_282(22), STR_281(50), STR_280(8), 
 35778 ;;		 -> STR_279(6), STR_278(6), STR_277(11), STR_276(17), 
 35779 ;;		 -> STR_275(12), STR_274(13), STR_273(10), STR_272(12), 
 35780 ;;		 -> STR_267(28), STR_266(68), STR_265(9), STR_264(11), 
 35781 ;;		 -> STR_263(23), STR_261(19), STR_259(20), STR_256(20), 
 35782 ;;		 -> STR_247(21), STR_246(61), STR_245(69), STR_244(7), 
 35783 ;;		 -> STR_243(7), STR_242(10), STR_241(11), STR_240(29), 
 35784 ;;		 -> STR_239(13), STR_238(33), STR_237(25), STR_236(28), 
 35785 ;;		 -> STR_235(3), STR_234(26), STR_233(2), STR_232(34), 
 35786 ;;		 -> STR_231(37), STR_228(24), STR_224(3), STR_214(13), 
 35787 ;;		 -> STR_213(73), STR_212(5), STR_211(12), STR_210(17), 
 35788 ;;		 -> STR_204(28), STR_202(30), STR_200(33), STR_193(42), 
 35789 ;;		 -> STR_192(62), STR_191(26), STR_187(43), STR_185(48), 
 35790 ;;		 -> STR_183(27), STR_176(42), STR_175(66), STR_174(25), 
 35791 ;;		 -> STR_172(49), Command@buf(200), STR_168(33), STR_166(38), 
 35792 ;;		 -> STR_164(27), STR_163(28), STR_153(37), STR_152(68), 
 35793 ;;		 -> STR_151(18), STR_150(15), STR_149(11), STR_148(28), 
 35794 ;;		 -> STR_146(18), STR_144(32), STR_140(31), STR_136(38), 
 35795 ;;		 -> STR_123(24), STR_122(68), STR_121(10), STR_120(6), 
 35796 ;;		 -> STR_119(8), STR_118(11), STR_117(21), STR_115(16), 
 35797 ;;		 -> STR_113(19), STR_110(18), STR_107(16), STR_104(15), 
 35798 ;;		 -> STR_101(22), STR_89(27), STR_88(68), STR_87(7), 
 35799 ;;		 -> STR_86(8), STR_85(11), STR_84(24), STR_82(19), 
 35800 ;;		 -> STR_80(19), STR_77(18), STR_74(25), STR_65(17), 
 35801 ;;		 -> STR_64(68), STR_63(8), STR_62(7), STR_61(11), 
 35802 ;;		 -> STR_60(17), STR_58(12), STR_56(9), STR_53(8), 
 35803 ;;		 -> STR_50(13), STR_47(9), STR_44(8), STR_41(13), 
 35804 ;;		 -> STR_36(4), STR_35(22), STR_29(22), STR_28(3), 
 35805 ;;		 -> SetBaud@buf(50), STR_22(4), STR_21(29), STR_11(12), 
 35806 ;;		 -> STR_8(54), STR_7(3), Version(20), STR_6(19), 
 35807 ;;		 -> STR_5(38), low_isr@TEMP_Rxdata(100), STR_4(2), STR_3(2), 
 35808 ;;		 -> STR_2(2), STR_1(2), 
 35809 ;; Auto vars:     Size  Location     Type
 35810 ;;		None
 35811 ;; Return value:  Size  Location     Type
 35812 ;;		None               void
 35813 ;; Registers used:
 35814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35815 ;; Tracked objects:
 35816 ;;		On entry : 0/0
 35817 ;;		On exit  : 0/0
 35818 ;;		Unchanged: 0/0
 35819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35822 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35823 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35824 ;;Total ram usage:        4 bytes
 35825 ;; Hardware stack levels used:    1
 35826 ;; Hardware stack levels required when called:    3
 35827 ;; This function calls:
 35828 ;;		i1_UARTchar
 35829 ;; This function is called by:
 35830 ;;		_low_isr
 35831 ;;		_UseIRCode
 35832 ;; This function uses a non-reentrant model
 35833 ;;
 35834                           
 35835                           	psect	text110
 35836  0171E2                     __ptext110:
 35837                           	opt stack 0
 35838  0171E2                     i1_UARTstring:
 35839                           	opt stack 20
 35840  0171E2                     
 35841                           ;UART.c: 236: {
 35842                           ;UART.c: 237: if(*data != 0)
 35843  0171E2  C00C  FFF6         	movff	i1UARTstring@data,tblptrl
 35844  0171E6  C00D  FFF7         	movff	i1UARTstring@data+1,tblptrh
 35845  0171EA  0E00               	movlw	low (__mediumconst shr (0+16))
 35846  0171EC  6EF8               	movwf	tblptru,c
 35847  0171EE  0E0C               	movlw	(high __ramtop+-1)
 35848  0171F0  64F7               	cpfsgt	tblptrh,c
 35849  0171F2  D003               	bra	i1u1176_27
 35850  0171F4  0008               	tblrd		*
 35851  0171F6  50F5               	movf	tablat,w,c
 35852  0171F8  D005               	bra	i1u1176_20
 35853  0171FA                     i1u1176_27:
 35854  0171FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 35855  0171FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 35856  017202  50EF               	movf	indf0,w,c
 35857  017204                     i1u1176_20:
 35858  017204  0900               	iorlw	0
 35859  017206  B4D8               	btfsc	status,2,c
 35860  017208  D01C               	goto	i1l10111
 35861                           
 35862                           ;UART.c: 238: {
 35863                           ;UART.c: 239: UARTchar((unsigned char) *data, 0, 0);
 35864  01720A  0E00               	movlw	0
 35865  01720C  6E08               	movwf	i1UARTchar@NinethBit_override,c
 35866  01720E  0E00               	movlw	0
 35867  017210  6E09               	movwf	i1UARTchar@NinethBit_override_data,c
 35868  017212  C00C  FFF6         	movff	i1UARTstring@data,tblptrl
 35869  017216  C00D  FFF7         	movff	i1UARTstring@data+1,tblptrh
 35870  01721A  0E00               	movlw	low (__mediumconst shr (0+16))
 35871  01721C  6EF8               	movwf	tblptru,c
 35872  01721E  0E0C               	movlw	(high __ramtop+-1)
 35873  017220  64F7               	cpfsgt	tblptrh,c
 35874  017222  D003               	bra	i1u1178_27
 35875  017224  0008               	tblrd		*
 35876  017226  50F5               	movf	tablat,w,c
 35877  017228  D005               	bra	i1u1178_20
 35878  01722A                     i1u1178_27:
 35879  01722A  CFF6 FFE9          	movff	tblptrl,fsr0l
 35880  01722E  CFF7 FFEA          	movff	tblptrh,fsr0h
 35881  017232  50EF               	movf	indf0,w,c
 35882  017234                     i1u1178_20:
 35883  017234  EC03  F0BC         	call	i1_UARTchar
 35884                           
 35885                           ;UART.c: 240: while((!TXSTAbits.TRMT));
 35886  017238  D000               	goto	i1l521
 35887  01723A                     i1l521:
 35888  01723A  B2AC               	btfsc	4012,1,c	;volatile
 35889  01723C  D002               	goto	i1l10111
 35890  01723E  D7FD               	goto	i1l521
 35891  017240  D000               	goto	i1l10111
 35892  017242                     i1l10111:
 35893                           
 35894                           ;UART.c: 241: }
 35895                           ;UART.c: 242: } while( *data++);
 35896  017242  500C               	movf	i1UARTstring@data,w,c
 35897  017244  6E0E               	movwf	??i1_UARTstring& (0+255),c
 35898  017246  500D               	movf	i1UARTstring@data+1,w,c
 35899  017248  6E0F               	movwf	(??i1_UARTstring+1)& (0+255),c
 35900  01724A  4A0C               	infsnz	i1UARTstring@data,f,c
 35901  01724C  2A0D               	incf	i1UARTstring@data+1,f,c
 35902  01724E  C00E  FFF6         	movff	??i1_UARTstring,tblptrl
 35903  017252  C00F  FFF7         	movff	??i1_UARTstring+1,tblptrh
 35904  017256  0E00               	movlw	low (__mediumconst shr (0+16))
 35905  017258  6EF8               	movwf	tblptru,c
 35906  01725A  0E0C               	movlw	(high __ramtop+-1)
 35907  01725C  64F7               	cpfsgt	tblptrh,c
 35908  01725E  D003               	bra	i1u1180_27
 35909  017260  0008               	tblrd		*
 35910  017262  50F5               	movf	tablat,w,c
 35911  017264  D005               	bra	i1u1180_20
 35912  017266                     i1u1180_27:
 35913  017266  CFF6 FFE9          	movff	tblptrl,fsr0l
 35914  01726A  CFF7 FFEA          	movff	tblptrh,fsr0h
 35915  01726E  50EF               	movf	indf0,w,c
 35916  017270                     i1u1180_20:
 35917  017270  0900               	iorlw	0
 35918  017272  A4D8               	btfss	status,2,c
 35919  017274  D7B6               	goto	i1l10107
 35920  017276  0012               	return		;funcret
 35921  017278                     __end_ofi1_UARTstring:
 35922                           	opt stack 0
 35923                           pclatu	equ	0xFFB
 35924                           pclath	equ	0xFFA
 35925                           tblptru	equ	0xFF8
 35926                           tblptrh	equ	0xFF7
 35927                           tblptrl	equ	0xFF6
 35928                           tablat	equ	0xFF5
 35929                           prodh	equ	0xFF4
 35930                           prodl	equ	0xFF3
 35931                           intcon	equ	0xFF2
 35932                           intcon2	equ	0xFF1
 35933                           indf0	equ	0xFEF
 35934                           postinc0	equ	0xFEE
 35935                           plusw0	equ	0xFEB
 35936                           fsr0h	equ	0xFEA
 35937                           fsr0l	equ	0xFE9
 35938                           wreg	equ	0xFE8
 35939                           indf1	equ	0xFE7
 35940                           postdec1	equ	0xFE5
 35941                           fsr1h	equ	0xFE2
 35942                           fsr1l	equ	0xFE1
 35943                           bsr	equ	0xFE0
 35944                           indf2	equ	0xFDF
 35945                           postinc2	equ	0xFDE
 35946                           postdec2	equ	0xFDD
 35947                           plusw2	equ	0xFDB
 35948                           fsr2h	equ	0xFDA
 35949                           fsr2l	equ	0xFD9
 35950                           status	equ	0xFD8
 35951                           
 35952 ;; *************** function i1_UARTchar *****************
 35953 ;; Defined at:
 35954 ;;		line 194 in file "UART.c"
 35955 ;; Parameters:    Size  Location     Type
 35956 ;;  data            1    wreg     unsigned char 
 35957 ;;  NinethBit_ov    1    7[COMRAM] unsigned char 
 35958 ;;  NinethBit_ov    1    8[COMRAM] unsigned char 
 35959 ;; Auto vars:     Size  Location     Type
 35960 ;;  data            1   10[COMRAM] unsigned char 
 35961 ;; Return value:  Size  Location     Type
 35962 ;;		None               void
 35963 ;; Registers used:
 35964 ;;		wreg, status,2, status,0, cstack
 35965 ;; Tracked objects:
 35966 ;;		On entry : 0/0
 35967 ;;		On exit  : 0/0
 35968 ;;		Unchanged: 0/0
 35969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35972 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35973 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35974 ;;Total ram usage:        4 bytes
 35975 ;; Hardware stack levels used:    1
 35976 ;; Hardware stack levels required when called:    2
 35977 ;; This function calls:
 35978 ;;		i1_CheckSum_byte
 35979 ;; This function is called by:
 35980 ;;		_low_isr
 35981 ;;		i1_UARTstring
 35982 ;; This function uses a non-reentrant model
 35983 ;;
 35984                           
 35985                           	psect	text111
 35986  017806                     __ptext111:
 35987                           	opt stack 0
 35988  017806                     i1_UARTchar:
 35989                           	opt stack 20
 35990                           
 35991                           ;incstack = 0
 35992                           ;i1UARTchar@data stored from wreg
 35993  017806  6E0B               	movwf	i1UARTchar@data,c
 35994                           
 35995                           ;UART.c: 196: if(TXSTAbits.TX9)
 35996  017808  ACAC               	btfss	4012,6,c	;volatile
 35997  01780A  D031               	goto	i1l8975
 35998                           
 35999                           ;UART.c: 197: {
 36000                           ;UART.c: 199: if(!NinethBit_override)
 36001  01780C  5008               	movf	i1UARTchar@NinethBit_override,w,c
 36002  01780E  B4D8               	btfsc	status,2,c
 36003  017810  D017               	goto	i1l8971
 36004  017812  D023               	goto	i1l8973
 36005                           
 36006                           ;UART.c: 200: {
 36007                           ;UART.c: 202: switch (Global.Parity)
 36008  017814  D015               	goto	i1l8971
 36009  017816                     i1l8965:
 36010                           
 36011                           ;UART.c: 205: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 3);
 36012  017816  C00B  F001         	movff	i1UARTchar@data,i1CheckSum_byte@This
 36013  01781A  6A02               	clrf	i1CheckSum_byte@This+1,c
 36014  01781C  0E03               	movlw	3
 36015  01781E  6E03               	movwf	i1CheckSum_byte@Odd_Even,c
 36016  017820  ECF5  F003         	call	i1_CheckSum_byte	;wreg free
 36017  017824  D007               	goto	L30
 36018  017826                     i1l8967:
 36019                           
 36020                           ;UART.c: 208: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 2);
 36021  017826  C00B  F001         	movff	i1UARTchar@data,i1CheckSum_byte@This
 36022  01782A  6A02               	clrf	i1CheckSum_byte@This+1,c
 36023  01782C  0E02               	movlw	2
 36024  01782E  6E03               	movwf	i1CheckSum_byte@Odd_Even,c
 36025  017830  ECF5  F003         	call	i1_CheckSum_byte	;wreg free
 36026  017834                     L30:
 36027  017834  6E0A               	movwf	??i1_UARTchar& (0+255),c
 36028  017836  D015               	goto	L31
 36029  017838                     i1l510:
 36030                           
 36031                           ; BSR set to: 1
 36032                           ;UART.c: 211: TXSTAbits.TX9D = 1;
 36033  017838  80AC               	bsf	4012,0,c	;volatile
 36034                           
 36035                           ;UART.c: 212: break;
 36036  01783A  D019               	goto	i1l8975
 36037  01783C                     i1l511:
 36038                           
 36039                           ; BSR set to: 1
 36040                           ;UART.c: 214: TXSTAbits.TX9D = 0;
 36041  01783C  90AC               	bcf	4012,0,c	;volatile
 36042                           
 36043                           ; BSR set to: 1
 36044                           ;UART.c: 216: }
 36045                           
 36046                           ;UART.c: 215: break;
 36047  01783E  D017               	goto	i1l8975
 36048  017840                     i1l8971:
 36049  017840  0101               	movlb	1	; () banked
 36050  017842  518E               	movf	(_Global+4)& (0+255),w,b
 36051                           
 36052                           ; Switch size 1, requested type "space"
 36053                           ; Number of cases is 3, Range of values is 1 to 3
 36054                           ; switch strategies available:
 36055                           ; Name         Instructions Cycles
 36056                           ; simple_byte           10     6 (average)
 36057                           ;	Chosen strategy is simple_byte
 36058  017844  0A01               	xorlw	1	; case 1
 36059  017846  B4D8               	btfsc	status,2,c
 36060  017848  D7E6               	goto	i1l8965
 36061  01784A  0A03               	xorlw	3	; case 2
 36062  01784C  B4D8               	btfsc	status,2,c
 36063  01784E  D7EB               	goto	i1l8967
 36064  017850  0A01               	xorlw	1	; case 3
 36065  017852  B4D8               	btfsc	status,2,c
 36066  017854  D7F1               	goto	i1l510
 36067  017856  D7F2               	goto	i1l511
 36068                           
 36069                           ; BSR set to: 1
 36070                           ;UART.c: 217: }
 36071  017858  D00A               	goto	i1l8975
 36072  01785A                     i1l8973:
 36073                           
 36074                           ;UART.c: 218: else
 36075                           ;UART.c: 219: {
 36076                           ;UART.c: 220: TXSTAbits.TX9D = (NinethBit_override_data & 0x01);
 36077  01785A  C009  F00A         	movff	i1UARTchar@NinethBit_override_data,??i1_UARTchar
 36078  01785E  0E01               	movlw	1
 36079  017860  160A               	andwf	??i1_UARTchar,f,c
 36080  017862                     L31:
 36081  017862  50AC               	movf	4012,w,c	;volatile
 36082  017864  180A               	xorwf	??i1_UARTchar,w,c
 36083  017866  0BFE               	andlw	-2
 36084  017868  180A               	xorwf	??i1_UARTchar,w,c
 36085  01786A  6EAC               	movwf	4012,c	;volatile
 36086  01786C  D000               	goto	i1l8975
 36087  01786E                     i1l8975:
 36088                           
 36089                           ;UART.c: 221: }
 36090                           ;UART.c: 222: }
 36091                           ;UART.c: 223: TX_OLD = data;
 36092  01786E  C00B  F0F2         	movff	i1UARTchar@data,_TX_OLD
 36093                           
 36094                           ;UART.c: 224: TXREG = data;
 36095  017872  C00B  FFAD         	movff	i1UARTchar@data,4013	;volatile
 36096                           
 36097                           ;UART.c: 225: while(!TXSTAbits.TRMT);
 36098  017876  D000               	goto	i1l513
 36099  017878                     i1l513:
 36100  017878  A2AC               	btfss	4012,1,c	;volatile
 36101  01787A  D7FE               	goto	i1l513
 36102  01787C  0012               	return		;funcret
 36103  01787E                     __end_ofi1_UARTchar:
 36104                           	opt stack 0
 36105                           pclatu	equ	0xFFB
 36106                           pclath	equ	0xFFA
 36107                           tblptru	equ	0xFF8
 36108                           tblptrh	equ	0xFF7
 36109                           tblptrl	equ	0xFF6
 36110                           tablat	equ	0xFF5
 36111                           prodh	equ	0xFF4
 36112                           prodl	equ	0xFF3
 36113                           intcon	equ	0xFF2
 36114                           intcon2	equ	0xFF1
 36115                           indf0	equ	0xFEF
 36116                           postinc0	equ	0xFEE
 36117                           plusw0	equ	0xFEB
 36118                           fsr0h	equ	0xFEA
 36119                           fsr0l	equ	0xFE9
 36120                           wreg	equ	0xFE8
 36121                           indf1	equ	0xFE7
 36122                           postdec1	equ	0xFE5
 36123                           fsr1h	equ	0xFE2
 36124                           fsr1l	equ	0xFE1
 36125                           bsr	equ	0xFE0
 36126                           indf2	equ	0xFDF
 36127                           postinc2	equ	0xFDE
 36128                           postdec2	equ	0xFDD
 36129                           plusw2	equ	0xFDB
 36130                           fsr2h	equ	0xFDA
 36131                           fsr2l	equ	0xFD9
 36132                           status	equ	0xFD8
 36133                           
 36134 ;; *************** function i1_CheckSum_byte *****************
 36135 ;; Defined at:
 36136 ;;		line 359 in file "MISC.c"
 36137 ;; Parameters:    Size  Location     Type
 36138 ;;  This            2    0[COMRAM] unsigned int 
 36139 ;;  Odd_Even        1    2[COMRAM] unsigned char 
 36140 ;; Auto vars:     Size  Location     Type
 36141 ;;  CheckSum_byt    2    3[COMRAM] unsigned int 
 36142 ;;  CheckSum_byt    1    6[COMRAM] unsigned char 
 36143 ;;  CheckSum_byt    1    5[COMRAM] unsigned char 
 36144 ;; Return value:  Size  Location     Type
 36145 ;;                  1    wreg      unsigned char 
 36146 ;; Registers used:
 36147 ;;		wreg, status,2, status,0
 36148 ;; Tracked objects:
 36149 ;;		On entry : 0/0
 36150 ;;		On exit  : 0/0
 36151 ;;		Unchanged: 0/0
 36152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36153 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36154 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36156 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36157 ;;Total ram usage:        7 bytes
 36158 ;; Hardware stack levels used:    1
 36159 ;; Hardware stack levels required when called:    1
 36160 ;; This function calls:
 36161 ;;		Nothing
 36162 ;; This function is called by:
 36163 ;;		i1_UARTchar
 36164 ;; This function uses a non-reentrant model
 36165 ;;
 36166                           
 36167                           	psect	text112
 36168  0007EA                     __ptext112:
 36169                           	opt stack 0
 36170  0007EA                     i1_CheckSum_byte:
 36171                           	opt stack 20
 36172                           
 36173                           ;MISC.c: 361: char i = 0;
 36174                           
 36175                           ;incstack = 0
 36176  0007EA  0E00               	movlw	0
 36177  0007EC  6E07               	movwf	i1CheckSum_byte@i,c
 36178                           
 36179                           ;MISC.c: 362: unsigned char Parity = 0;
 36180  0007EE  0E00               	movlw	0
 36181  0007F0  6E06               	movwf	i1CheckSum_byte@Parity,c
 36182                           
 36183                           ;MISC.c: 363: unsigned int ThisTemp = This;
 36184  0007F2  C001  F004         	movff	i1CheckSum_byte@This,i1CheckSum_byte@ThisTemp
 36185  0007F6  C002  F005         	movff	i1CheckSum_byte@This+1,i1CheckSum_byte@ThisTemp+1
 36186                           
 36187                           ;MISC.c: 365: for (i =0; i<8; i++)
 36188  0007FA  0E00               	movlw	0
 36189  0007FC  6E07               	movwf	i1CheckSum_byte@i,c
 36190  0007FE                     i1l7815:
 36191  0007FE  0E07               	movlw	7
 36192  000800  6407               	cpfsgt	i1CheckSum_byte@i,c
 36193  000802  D001               	goto	i1l402
 36194  000804  D007               	goto	i1l7823
 36195  000806                     i1l402:
 36196                           
 36197                           ;MISC.c: 366: {
 36198                           ;MISC.c: 367: if((ThisTemp & 0x01) == 1)
 36199  000806  B004               	btfsc	i1CheckSum_byte@ThisTemp,0,c
 36200                           
 36201                           ;MISC.c: 368: {
 36202                           ;MISC.c: 369: Parity++;
 36203  000808  2A06               	incf	i1CheckSum_byte@Parity,f,c
 36204                           
 36205                           ;MISC.c: 370: }
 36206                           ;MISC.c: 371: ThisTemp >>= 1;
 36207  00080A  90D8               	bcf	status,0,c
 36208  00080C  3205               	rrcf	i1CheckSum_byte@ThisTemp+1,f,c
 36209  00080E  3204               	rrcf	i1CheckSum_byte@ThisTemp,f,c
 36210  000810  2A07               	incf	i1CheckSum_byte@i,f,c
 36211  000812  D7F5               	goto	i1l7815
 36212  000814                     i1l7823:
 36213                           
 36214                           ;MISC.c: 372: }
 36215                           ;MISC.c: 373: if(Odd_Even == 3)
 36216  000814  0E03               	movlw	3
 36217  000816  1803               	xorwf	i1CheckSum_byte@Odd_Even,w,c
 36218  000818  A4D8               	btfss	status,2,c
 36219  00081A  D006               	goto	i1l405
 36220                           
 36221                           ;MISC.c: 374: {
 36222                           ;MISC.c: 375: if(Parity % 2 == 0)
 36223  00081C  B006               	btfsc	i1CheckSum_byte@Parity,0,c
 36224  00081E  D002               	goto	i1l7831
 36225                           
 36226                           ;MISC.c: 376: {
 36227                           ;MISC.c: 377: return 1;
 36228  000820  0E01               	movlw	1
 36229  000822  0012               	return	
 36230  000824                     i1l7831:
 36231                           
 36232                           ;MISC.c: 378: }
 36233                           ;MISC.c: 379: return 0;
 36234  000824  0E00               	movlw	0
 36235                           
 36236                           ;MISC.c: 380: }
 36237  000826  0012               	return	
 36238  000828                     i1l405:
 36239                           
 36240                           ;MISC.c: 381: else
 36241                           ;MISC.c: 382: {
 36242                           ;MISC.c: 383: if(Parity % 2 == 1)
 36243  000828  A006               	btfss	i1CheckSum_byte@Parity,0,c
 36244  00082A  D002               	goto	i1l7841
 36245                           
 36246                           ;MISC.c: 384: {
 36247                           ;MISC.c: 385: return 1;
 36248  00082C  0E01               	movlw	1
 36249  00082E  0012               	return	
 36250  000830                     i1l7841:
 36251                           
 36252                           ;MISC.c: 386: }
 36253                           ;MISC.c: 387: return 0;
 36254  000830  0E00               	movlw	0
 36255  000832  0012               	return	
 36256  000834  0012               	return		;funcret
 36257  000836                     __end_ofi1_CheckSum_byte:
 36258                           	opt stack 0
 36259                           pclatu	equ	0xFFB
 36260                           pclath	equ	0xFFA
 36261                           tblptru	equ	0xFF8
 36262                           tblptrh	equ	0xFF7
 36263                           tblptrl	equ	0xFF6
 36264                           tablat	equ	0xFF5
 36265                           prodh	equ	0xFF4
 36266                           prodl	equ	0xFF3
 36267                           intcon	equ	0xFF2
 36268                           intcon2	equ	0xFF1
 36269                           indf0	equ	0xFEF
 36270                           postinc0	equ	0xFEE
 36271                           plusw0	equ	0xFEB
 36272                           fsr0h	equ	0xFEA
 36273                           fsr0l	equ	0xFE9
 36274                           wreg	equ	0xFE8
 36275                           indf1	equ	0xFE7
 36276                           postdec1	equ	0xFE5
 36277                           fsr1h	equ	0xFE2
 36278                           fsr1l	equ	0xFE1
 36279                           bsr	equ	0xFE0
 36280                           indf2	equ	0xFDF
 36281                           postinc2	equ	0xFDE
 36282                           postdec2	equ	0xFDD
 36283                           plusw2	equ	0xFDB
 36284                           fsr2h	equ	0xFDA
 36285                           fsr2l	equ	0xFD9
 36286                           status	equ	0xFD8
 36287                           
 36288 ;; *************** function i1_SetEEPROM *****************
 36289 ;; Defined at:
 36290 ;;		line 225 in file "EEPROM.c"
 36291 ;; Parameters:    Size  Location     Type
 36292 ;;  Temp            9   53[COMRAM] struct EEdata
 36293 ;;  burn            4   62[COMRAM] unsigned long 
 36294 ;; Auto vars:     Size  Location     Type
 36295 ;;  SetEEPROM       4   66[COMRAM] unsigned long 
 36296 ;; Return value:  Size  Location     Type
 36297 ;;                  4   53[COMRAM] unsigned long 
 36298 ;; Registers used:
 36299 ;;		wreg, status,2, status,0, cstack
 36300 ;; Tracked objects:
 36301 ;;		On entry : 0/0
 36302 ;;		On exit  : 0/0
 36303 ;;		Unchanged: 0/0
 36304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36305 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36306 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36308 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36309 ;;Total ram usage:       17 bytes
 36310 ;; Hardware stack levels used:    1
 36311 ;; Hardware stack levels required when called:    4
 36312 ;; This function calls:
 36313 ;;		i1_SetMemoryBaud
 36314 ;;		i1_SetMemoryLong
 36315 ;;		i1_SetMemoryParity
 36316 ;; This function is called by:
 36317 ;;		_UseIRCode
 36318 ;; This function uses a non-reentrant model
 36319 ;;
 36320                           
 36321                           	psect	text113
 36322  0170AA                     __ptext113:
 36323                           	opt stack 0
 36324  0170AA                     i1_SetEEPROM:
 36325                           	opt stack 18
 36326                           
 36327                           ;EEPROM.c: 227: unsigned long fail = 0;
 36328                           
 36329                           ;incstack = 0
 36330  0170AA  0E00               	movlw	0
 36331  0170AC  6E43               	movwf	i1SetEEPROM@fail,c
 36332  0170AE  0E00               	movlw	0
 36333  0170B0  6E44               	movwf	i1SetEEPROM@fail+1,c
 36334  0170B2  0E00               	movlw	0
 36335  0170B4  6E45               	movwf	i1SetEEPROM@fail+2,c
 36336  0170B6  0E00               	movlw	0
 36337  0170B8  6E46               	movwf	i1SetEEPROM@fail+3,c
 36338                           
 36339                           ;EEPROM.c: 228: if(burn & 0x00000001)
 36340  0170BA  A03F               	btfss	i1SetEEPROM@burn,0,c
 36341  0170BC  D014               	goto	i1l10147
 36342                           
 36343                           ;EEPROM.c: 229: {
 36344                           ;EEPROM.c: 230: if(!SetMemoryBaud(Temp.Baud))
 36345  0170BE  C036  F024         	movff	i1SetEEPROM@Temp,i1SetMemoryBaud@Baud
 36346  0170C2  C037  F025         	movff	i1SetEEPROM@Temp+1,i1SetMemoryBaud@Baud+1
 36347  0170C6  C038  F026         	movff	i1SetEEPROM@Temp+2,i1SetMemoryBaud@Baud+2
 36348  0170CA  C039  F027         	movff	i1SetEEPROM@Temp+3,i1SetMemoryBaud@Baud+3
 36349  0170CE  EC04  F0B6         	call	i1_SetMemoryBaud	;wreg free
 36350  0170D2  0900               	iorlw	0
 36351  0170D4  A4D8               	btfss	status,2,c
 36352  0170D6  D007               	goto	i1l10147
 36353                           
 36354                           ;EEPROM.c: 231: {
 36355                           ;EEPROM.c: 233: fail += 0x00000001;
 36356  0170D8  0E01               	movlw	1
 36357  0170DA  2643               	addwf	i1SetEEPROM@fail,f,c
 36358  0170DC  0E00               	movlw	0
 36359  0170DE  2244               	addwfc	i1SetEEPROM@fail+1,f,c
 36360  0170E0  2245               	addwfc	i1SetEEPROM@fail+2,f,c
 36361  0170E2  2246               	addwfc	i1SetEEPROM@fail+3,f,c
 36362  0170E4  D000               	goto	i1l10147
 36363  0170E6                     i1l10147:
 36364                           
 36365                           ;EEPROM.c: 234: }
 36366                           ;EEPROM.c: 235: }
 36367                           ;EEPROM.c: 236: if(burn & 0x00000002)
 36368  0170E6  A23F               	btfss	i1SetEEPROM@burn,1,c
 36369  0170E8  D00D               	goto	i1l10153
 36370                           
 36371                           ;EEPROM.c: 237: {
 36372                           ;EEPROM.c: 238: if(!SetMemoryParity(Temp.Parity))
 36373  0170EA  503A               	movf	i1SetEEPROM@Temp+4,w,c
 36374  0170EC  EC8C  F006         	call	i1_SetMemoryParity
 36375  0170F0  0900               	iorlw	0
 36376  0170F2  A4D8               	btfss	status,2,c
 36377  0170F4  D007               	goto	i1l10153
 36378                           
 36379                           ;EEPROM.c: 239: {
 36380                           ;EEPROM.c: 241: fail += 0x00000002;
 36381  0170F6  0E02               	movlw	2
 36382  0170F8  2643               	addwf	i1SetEEPROM@fail,f,c
 36383  0170FA  0E00               	movlw	0
 36384  0170FC  2244               	addwfc	i1SetEEPROM@fail+1,f,c
 36385  0170FE  2245               	addwfc	i1SetEEPROM@fail+2,f,c
 36386  017100  2246               	addwfc	i1SetEEPROM@fail+3,f,c
 36387  017102  D000               	goto	i1l10153
 36388  017104                     i1l10153:
 36389                           
 36390                           ;EEPROM.c: 242: }
 36391                           ;EEPROM.c: 243: }
 36392                           ;EEPROM.c: 244: if(burn & 0x00000004)
 36393  017104  A43F               	btfss	i1SetEEPROM@burn,2,c
 36394  017106  D016               	goto	i1l10159
 36395                           
 36396                           ;EEPROM.c: 245: {
 36397                           ;EEPROM.c: 246: if(!SetMemoryLong(Temp.NEC1,5))
 36398  017108  C03B  F025         	movff	i1SetEEPROM@Temp+5,i1SetMemoryLong@Data
 36399  01710C  C03C  F026         	movff	i1SetEEPROM@Temp+6,i1SetMemoryLong@Data+1
 36400  017110  C03D  F027         	movff	i1SetEEPROM@Temp+7,i1SetMemoryLong@Data+2
 36401  017114  C03E  F028         	movff	i1SetEEPROM@Temp+8,i1SetMemoryLong@Data+3
 36402  017118  0E05               	movlw	5
 36403  01711A  6E29               	movwf	i1SetMemoryLong@AddressFirst,c
 36404  01711C  EC94  F0B4         	call	i1_SetMemoryLong	;wreg free
 36405  017120  0900               	iorlw	0
 36406  017122  A4D8               	btfss	status,2,c
 36407  017124  D007               	goto	i1l10159
 36408                           
 36409                           ;EEPROM.c: 247: {
 36410                           ;EEPROM.c: 249: fail += 0x00000004;
 36411  017126  0E04               	movlw	4
 36412  017128  2643               	addwf	i1SetEEPROM@fail,f,c
 36413  01712A  0E00               	movlw	0
 36414  01712C  2244               	addwfc	i1SetEEPROM@fail+1,f,c
 36415  01712E  2245               	addwfc	i1SetEEPROM@fail+2,f,c
 36416  017130  2246               	addwfc	i1SetEEPROM@fail+3,f,c
 36417  017132  D000               	goto	i1l10159
 36418  017134                     i1l10159:
 36419                           
 36420                           ;EEPROM.c: 250: }
 36421                           ;EEPROM.c: 251: }
 36422                           ;EEPROM.c: 252: return fail;
 36423  017134  C043  F036         	movff	i1SetEEPROM@fail,?i1_SetEEPROM
 36424  017138  C044  F037         	movff	i1SetEEPROM@fail+1,?i1_SetEEPROM+1
 36425  01713C  C045  F038         	movff	i1SetEEPROM@fail+2,?i1_SetEEPROM+2
 36426  017140  C046  F039         	movff	i1SetEEPROM@fail+3,?i1_SetEEPROM+3
 36427  017144  0012               	return	
 36428  017146  0012               	return		;funcret
 36429  017148                     __end_ofi1_SetEEPROM:
 36430                           	opt stack 0
 36431                           pclatu	equ	0xFFB
 36432                           pclath	equ	0xFFA
 36433                           tblptru	equ	0xFF8
 36434                           tblptrh	equ	0xFF7
 36435                           tblptrl	equ	0xFF6
 36436                           tablat	equ	0xFF5
 36437                           prodh	equ	0xFF4
 36438                           prodl	equ	0xFF3
 36439                           intcon	equ	0xFF2
 36440                           intcon2	equ	0xFF1
 36441                           indf0	equ	0xFEF
 36442                           postinc0	equ	0xFEE
 36443                           plusw0	equ	0xFEB
 36444                           fsr0h	equ	0xFEA
 36445                           fsr0l	equ	0xFE9
 36446                           wreg	equ	0xFE8
 36447                           indf1	equ	0xFE7
 36448                           postdec1	equ	0xFE5
 36449                           fsr1h	equ	0xFE2
 36450                           fsr1l	equ	0xFE1
 36451                           bsr	equ	0xFE0
 36452                           indf2	equ	0xFDF
 36453                           postinc2	equ	0xFDE
 36454                           postdec2	equ	0xFDD
 36455                           plusw2	equ	0xFDB
 36456                           fsr2h	equ	0xFDA
 36457                           fsr2l	equ	0xFD9
 36458                           status	equ	0xFD8
 36459                           
 36460 ;; *************** function i1_SetMemoryParity *****************
 36461 ;; Defined at:
 36462 ;;		line 190 in file "EEPROM.c"
 36463 ;; Parameters:    Size  Location     Type
 36464 ;;  Parity          1    wreg     unsigned char 
 36465 ;; Auto vars:     Size  Location     Type
 36466 ;;  Parity          1    5[COMRAM] unsigned char 
 36467 ;;  SetMemoryPar    1    4[COMRAM] unsigned char 
 36468 ;; Return value:  Size  Location     Type
 36469 ;;                  1    wreg      unsigned char 
 36470 ;; Registers used:
 36471 ;;		wreg, status,2, status,0, cstack
 36472 ;; Tracked objects:
 36473 ;;		On entry : 0/0
 36474 ;;		On exit  : 0/0
 36475 ;;		Unchanged: 0/0
 36476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36480 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36481 ;;Total ram usage:        2 bytes
 36482 ;; Hardware stack levels used:    1
 36483 ;; Hardware stack levels required when called:    3
 36484 ;; This function calls:
 36485 ;;		i1_GetMemoryParity
 36486 ;;		i1_WriteEEPROM_1Byte
 36487 ;; This function is called by:
 36488 ;;		i1_SetEEPROM
 36489 ;; This function uses a non-reentrant model
 36490 ;;
 36491                           
 36492                           	psect	text114
 36493  000D18                     __ptext114:
 36494                           	opt stack 0
 36495  000D18                     i1_SetMemoryParity:
 36496                           	opt stack 18
 36497                           
 36498                           ;incstack = 0
 36499                           ;i1SetMemoryParity@Parity stored from wreg
 36500  000D18  6E06               	movwf	i1SetMemoryParity@Parity,c
 36501                           
 36502                           ;EEPROM.c: 192: unsigned char Test;
 36503                           ;EEPROM.c: 194: WriteEEPROM_1Byte(4, Parity);
 36504  000D1A  0E00               	movlw	0
 36505  000D1C  6E02               	movwf	i1WriteEEPROM_1Byte@address+1,c
 36506  000D1E  0E04               	movlw	4
 36507  000D20  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 36508  000D22  C006  F003         	movff	i1SetMemoryParity@Parity,i1WriteEEPROM_1Byte@data
 36509  000D26  EC51  F005         	call	i1_WriteEEPROM_1Byte	;wreg free
 36510                           
 36511                           ;EEPROM.c: 197: Test = GetMemoryParity();
 36512  000D2A  EC23  F007         	call	i1_GetMemoryParity	;wreg free
 36513  000D2E  6E05               	movwf	i1SetMemoryParity@Test,c
 36514                           
 36515                           ;EEPROM.c: 199: if(Test == Parity)
 36516  000D30  5006               	movf	i1SetMemoryParity@Parity,w,c
 36517  000D32  1805               	xorwf	i1SetMemoryParity@Test,w,c
 36518  000D34  A4D8               	btfss	status,2,c
 36519  000D36  D002               	goto	i1l9081
 36520                           
 36521                           ;EEPROM.c: 200: {
 36522                           ;EEPROM.c: 201: return 1;
 36523  000D38  0E01               	movlw	1
 36524  000D3A  0012               	return	
 36525  000D3C                     i1l9081:
 36526                           
 36527                           ;EEPROM.c: 202: }
 36528                           ;EEPROM.c: 203: return 0;
 36529  000D3C  0E00               	movlw	0
 36530  000D3E  0012               	return	
 36531  000D40  0012               	return		;funcret
 36532  000D42                     __end_ofi1_SetMemoryParity:
 36533                           	opt stack 0
 36534                           pclatu	equ	0xFFB
 36535                           pclath	equ	0xFFA
 36536                           tblptru	equ	0xFF8
 36537                           tblptrh	equ	0xFF7
 36538                           tblptrl	equ	0xFF6
 36539                           tablat	equ	0xFF5
 36540                           prodh	equ	0xFF4
 36541                           prodl	equ	0xFF3
 36542                           intcon	equ	0xFF2
 36543                           intcon2	equ	0xFF1
 36544                           indf0	equ	0xFEF
 36545                           postinc0	equ	0xFEE
 36546                           plusw0	equ	0xFEB
 36547                           fsr0h	equ	0xFEA
 36548                           fsr0l	equ	0xFE9
 36549                           wreg	equ	0xFE8
 36550                           indf1	equ	0xFE7
 36551                           postdec1	equ	0xFE5
 36552                           fsr1h	equ	0xFE2
 36553                           fsr1l	equ	0xFE1
 36554                           bsr	equ	0xFE0
 36555                           indf2	equ	0xFDF
 36556                           postinc2	equ	0xFDE
 36557                           postdec2	equ	0xFDD
 36558                           plusw2	equ	0xFDB
 36559                           fsr2h	equ	0xFDA
 36560                           fsr2l	equ	0xFD9
 36561                           status	equ	0xFD8
 36562                           
 36563 ;; *************** function i1_GetMemoryParity *****************
 36564 ;; Defined at:
 36565 ;;		line 176 in file "EEPROM.c"
 36566 ;; Parameters:    Size  Location     Type
 36567 ;;		None
 36568 ;; Auto vars:     Size  Location     Type
 36569 ;;  GetMemoryPar    1    3[COMRAM] unsigned char 
 36570 ;; Return value:  Size  Location     Type
 36571 ;;                  1    wreg      unsigned char 
 36572 ;; Registers used:
 36573 ;;		wreg, status,2, status,0, cstack
 36574 ;; Tracked objects:
 36575 ;;		On entry : 0/0
 36576 ;;		On exit  : 0/0
 36577 ;;		Unchanged: 0/0
 36578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36582 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36583 ;;Total ram usage:        1 bytes
 36584 ;; Hardware stack levels used:    1
 36585 ;; Hardware stack levels required when called:    2
 36586 ;; This function calls:
 36587 ;;		i1_ReadEEPROM_1Byte
 36588 ;; This function is called by:
 36589 ;;		i1_SetMemoryParity
 36590 ;; This function uses a non-reentrant model
 36591 ;;
 36592                           
 36593                           	psect	text115
 36594  000E46                     __ptext115:
 36595                           	opt stack 0
 36596  000E46                     i1_GetMemoryParity:
 36597                           	opt stack 18
 36598                           
 36599                           ;EEPROM.c: 178: unsigned char Parity;
 36600                           ;EEPROM.c: 180: Parity = ReadEEPROM_1Byte(4);
 36601                           
 36602                           ;incstack = 0
 36603  000E46  0E00               	movlw	0
 36604  000E48  6E02               	movwf	i1ReadEEPROM_1Byte@address+1,c
 36605  000E4A  0E04               	movlw	4
 36606  000E4C  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 36607  000E4E  ECD3  F005         	call	i1_ReadEEPROM_1Byte	;wreg free
 36608  000E52  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 36609  000E54  6E04               	movwf	i1GetMemoryParity@Parity,c
 36610                           
 36611                           ;EEPROM.c: 182: return (Parity);
 36612  000E56  5004               	movf	i1GetMemoryParity@Parity,w,c
 36613  000E58  0012               	return	
 36614  000E5A  0012               	return		;funcret
 36615  000E5C                     __end_ofi1_GetMemoryParity:
 36616                           	opt stack 0
 36617                           pclatu	equ	0xFFB
 36618                           pclath	equ	0xFFA
 36619                           tblptru	equ	0xFF8
 36620                           tblptrh	equ	0xFF7
 36621                           tblptrl	equ	0xFF6
 36622                           tablat	equ	0xFF5
 36623                           prodh	equ	0xFF4
 36624                           prodl	equ	0xFF3
 36625                           intcon	equ	0xFF2
 36626                           intcon2	equ	0xFF1
 36627                           indf0	equ	0xFEF
 36628                           postinc0	equ	0xFEE
 36629                           plusw0	equ	0xFEB
 36630                           fsr0h	equ	0xFEA
 36631                           fsr0l	equ	0xFE9
 36632                           wreg	equ	0xFE8
 36633                           indf1	equ	0xFE7
 36634                           postdec1	equ	0xFE5
 36635                           fsr1h	equ	0xFE2
 36636                           fsr1l	equ	0xFE1
 36637                           bsr	equ	0xFE0
 36638                           indf2	equ	0xFDF
 36639                           postinc2	equ	0xFDE
 36640                           postdec2	equ	0xFDD
 36641                           plusw2	equ	0xFDB
 36642                           fsr2h	equ	0xFDA
 36643                           fsr2l	equ	0xFD9
 36644                           status	equ	0xFD8
 36645                           
 36646 ;; *************** function i1_SetMemoryLong *****************
 36647 ;; Defined at:
 36648 ;;		line 300 in file "EEPROM.c"
 36649 ;; Parameters:    Size  Location     Type
 36650 ;;  Data            4   36[COMRAM] unsigned long 
 36651 ;;  AddressFirst    1   40[COMRAM] unsigned char 
 36652 ;; Auto vars:     Size  Location     Type
 36653 ;;  SetMemoryLon    4   45[COMRAM] unsigned long 
 36654 ;;  SetMemoryLon    1   52[COMRAM] unsigned char 
 36655 ;;  SetMemoryLon    1   51[COMRAM] unsigned char 
 36656 ;;  SetMemoryLon    1   50[COMRAM] unsigned char 
 36657 ;;  SetMemoryLon    1   49[COMRAM] unsigned char 
 36658 ;; Return value:  Size  Location     Type
 36659 ;;                  1    wreg      unsigned char 
 36660 ;; Registers used:
 36661 ;;		wreg, status,2, status,0, cstack
 36662 ;; Tracked objects:
 36663 ;;		On entry : 0/0
 36664 ;;		On exit  : 0/0
 36665 ;;		Unchanged: 0/0
 36666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36667 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36668 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36669 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36670 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36671 ;;Total ram usage:       17 bytes
 36672 ;; Hardware stack levels used:    1
 36673 ;; Hardware stack levels required when called:    3
 36674 ;; This function calls:
 36675 ;;		i1_GetMemoryLong
 36676 ;;		i1_WriteEEPROM_1Byte
 36677 ;; This function is called by:
 36678 ;;		i1_SetEEPROM
 36679 ;; This function uses a non-reentrant model
 36680 ;;
 36681                           
 36682                           	psect	text116
 36683  016928                     __ptext116:
 36684                           	opt stack 0
 36685  016928                     i1_SetMemoryLong:
 36686                           	opt stack 18
 36687                           
 36688                           ;EEPROM.c: 302: unsigned char H;
 36689                           ;EEPROM.c: 303: unsigned char MH;
 36690                           ;EEPROM.c: 304: unsigned char ML;
 36691                           ;EEPROM.c: 305: unsigned char L;
 36692                           ;EEPROM.c: 306: unsigned long Test;
 36693                           ;EEPROM.c: 308: H = (unsigned char) ((Data & 0XFF000000) >> 24);
 36694                           
 36695                           ;incstack = 0
 36696  016928  0E00               	movlw	0
 36697  01692A  1425               	andwf	i1SetMemoryLong@Data,w,c
 36698  01692C  6E2A               	movwf	??i1_SetMemoryLong& (0+255),c
 36699  01692E  0E00               	movlw	0
 36700  016930  1426               	andwf	i1SetMemoryLong@Data+1,w,c
 36701  016932  6E2B               	movwf	(??i1_SetMemoryLong+1)& (0+255),c
 36702  016934  0E00               	movlw	0
 36703  016936  1427               	andwf	i1SetMemoryLong@Data+2,w,c
 36704  016938  6E2C               	movwf	(??i1_SetMemoryLong+2)& (0+255),c
 36705  01693A  0EFF               	movlw	255
 36706  01693C  1428               	andwf	i1SetMemoryLong@Data+3,w,c
 36707  01693E  6E2D               	movwf	(??i1_SetMemoryLong+3)& (0+255),c
 36708  016940  0E19               	movlw	25
 36709  016942  D005               	goto	i1u1038_20
 36710  016944                     i1u1038_25:
 36711  016944  90D8               	bcf	status,0,c
 36712  016946  322D               	rrcf	??i1_SetMemoryLong+3,f,c
 36713  016948  322C               	rrcf	??i1_SetMemoryLong+2,f,c
 36714  01694A  322B               	rrcf	??i1_SetMemoryLong+1,f,c
 36715  01694C  322A               	rrcf	??i1_SetMemoryLong,f,c
 36716  01694E                     i1u1038_20:
 36717  01694E  2EE8               	decfsz	wreg,f,c
 36718  016950  D7F9               	goto	i1u1038_25
 36719  016952  502A               	movf	??i1_SetMemoryLong,w,c
 36720  016954  6E32               	movwf	i1SetMemoryLong@H,c
 36721                           
 36722                           ;EEPROM.c: 309: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
 36723  016956  C027  F033         	movff	i1SetMemoryLong@Data+2,i1SetMemoryLong@MH
 36724                           
 36725                           ;EEPROM.c: 310: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
 36726  01695A  C026  F034         	movff	i1SetMemoryLong@Data+1,i1SetMemoryLong@ML
 36727                           
 36728                           ;EEPROM.c: 311: L = (unsigned char) (Data & 0X000000FF);
 36729  01695E  C025  F035         	movff	i1SetMemoryLong@Data,i1SetMemoryLong@L
 36730                           
 36731                           ;EEPROM.c: 314: WriteEEPROM_1Byte(AddressFirst, H);
 36732  016962  C029  F001         	movff	i1SetMemoryLong@AddressFirst,i1WriteEEPROM_1Byte@address
 36733  016966  6A02               	clrf	i1WriteEEPROM_1Byte@address+1,c
 36734  016968  C032  F003         	movff	i1SetMemoryLong@H,i1WriteEEPROM_1Byte@data
 36735  01696C  EC51  F005         	call	i1_WriteEEPROM_1Byte	;wreg free
 36736                           
 36737                           ;EEPROM.c: 315: WriteEEPROM_1Byte((AddressFirst + 1), MH);
 36738  016970  0E01               	movlw	1
 36739  016972  2429               	addwf	i1SetMemoryLong@AddressFirst,w,c
 36740  016974  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 36741  016976  6A02               	clrf	i1WriteEEPROM_1Byte@address+1,c
 36742  016978  0E00               	movlw	0
 36743  01697A  2202               	addwfc	i1WriteEEPROM_1Byte@address+1,f,c
 36744  01697C  C033  F003         	movff	i1SetMemoryLong@MH,i1WriteEEPROM_1Byte@data
 36745  016980  EC51  F005         	call	i1_WriteEEPROM_1Byte	;wreg free
 36746                           
 36747                           ;EEPROM.c: 316: WriteEEPROM_1Byte((AddressFirst + 2), ML);
 36748  016984  0E02               	movlw	2
 36749  016986  2429               	addwf	i1SetMemoryLong@AddressFirst,w,c
 36750  016988  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 36751  01698A  6A02               	clrf	i1WriteEEPROM_1Byte@address+1,c
 36752  01698C  0E00               	movlw	0
 36753  01698E  2202               	addwfc	i1WriteEEPROM_1Byte@address+1,f,c
 36754  016990  C034  F003         	movff	i1SetMemoryLong@ML,i1WriteEEPROM_1Byte@data
 36755  016994  EC51  F005         	call	i1_WriteEEPROM_1Byte	;wreg free
 36756                           
 36757                           ;EEPROM.c: 317: WriteEEPROM_1Byte((AddressFirst + 3), L);
 36758  016998  0E03               	movlw	3
 36759  01699A  2429               	addwf	i1SetMemoryLong@AddressFirst,w,c
 36760  01699C  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 36761  01699E  6A02               	clrf	i1WriteEEPROM_1Byte@address+1,c
 36762  0169A0  0E00               	movlw	0
 36763  0169A2  2202               	addwfc	i1WriteEEPROM_1Byte@address+1,f,c
 36764  0169A4  C035  F003         	movff	i1SetMemoryLong@L,i1WriteEEPROM_1Byte@data
 36765  0169A8  EC51  F005         	call	i1_WriteEEPROM_1Byte	;wreg free
 36766                           
 36767                           ;EEPROM.c: 320: Test = GetMemoryLong(AddressFirst);
 36768  0169AC  5029               	movf	i1SetMemoryLong@AddressFirst,w,c
 36769  0169AE  EC63  F0AF         	call	i1_GetMemoryLong
 36770  0169B2  C004  F02E         	movff	?i1_GetMemoryLong,i1SetMemoryLong@Test
 36771  0169B6  C005  F02F         	movff	?i1_GetMemoryLong+1,i1SetMemoryLong@Test+1
 36772  0169BA  C006  F030         	movff	?i1_GetMemoryLong+2,i1SetMemoryLong@Test+2
 36773  0169BE  C007  F031         	movff	?i1_GetMemoryLong+3,i1SetMemoryLong@Test+3
 36774                           
 36775                           ;EEPROM.c: 322: if(Test == Data)
 36776  0169C2  5025               	movf	i1SetMemoryLong@Data,w,c
 36777  0169C4  182E               	xorwf	i1SetMemoryLong@Test,w,c
 36778  0169C6  E10C               	bnz	i1l9109
 36779  0169C8  5026               	movf	i1SetMemoryLong@Data+1,w,c
 36780  0169CA  182F               	xorwf	i1SetMemoryLong@Test+1,w,c
 36781  0169CC  E109               	bnz	i1l9109
 36782  0169CE  5027               	movf	i1SetMemoryLong@Data+2,w,c
 36783  0169D0  1830               	xorwf	i1SetMemoryLong@Test+2,w,c
 36784  0169D2  E106               	bnz	i1l9109
 36785  0169D4  5028               	movf	i1SetMemoryLong@Data+3,w,c
 36786  0169D6  1831               	xorwf	i1SetMemoryLong@Test+3,w,c
 36787  0169D8  A4D8               	btfss	status,2,c
 36788  0169DA  D002               	goto	i1l9109
 36789                           
 36790                           ;EEPROM.c: 323: {
 36791                           ;EEPROM.c: 324: return 1;
 36792  0169DC  0E01               	movlw	1
 36793  0169DE  0012               	return	
 36794  0169E0                     i1l9109:
 36795                           
 36796                           ;EEPROM.c: 325: }
 36797                           ;EEPROM.c: 326: return 0;
 36798  0169E0  0E00               	movlw	0
 36799  0169E2  0012               	return	
 36800  0169E4  0012               	return		;funcret
 36801  0169E6                     __end_ofi1_SetMemoryLong:
 36802                           	opt stack 0
 36803                           pclatu	equ	0xFFB
 36804                           pclath	equ	0xFFA
 36805                           tblptru	equ	0xFF8
 36806                           tblptrh	equ	0xFF7
 36807                           tblptrl	equ	0xFF6
 36808                           tablat	equ	0xFF5
 36809                           prodh	equ	0xFF4
 36810                           prodl	equ	0xFF3
 36811                           intcon	equ	0xFF2
 36812                           intcon2	equ	0xFF1
 36813                           indf0	equ	0xFEF
 36814                           postinc0	equ	0xFEE
 36815                           plusw0	equ	0xFEB
 36816                           fsr0h	equ	0xFEA
 36817                           fsr0l	equ	0xFE9
 36818                           wreg	equ	0xFE8
 36819                           indf1	equ	0xFE7
 36820                           postdec1	equ	0xFE5
 36821                           fsr1h	equ	0xFE2
 36822                           fsr1l	equ	0xFE1
 36823                           bsr	equ	0xFE0
 36824                           indf2	equ	0xFDF
 36825                           postinc2	equ	0xFDE
 36826                           postdec2	equ	0xFDD
 36827                           plusw2	equ	0xFDB
 36828                           fsr2h	equ	0xFDA
 36829                           fsr2l	equ	0xFD9
 36830                           status	equ	0xFD8
 36831                           
 36832 ;; *************** function i1_GetMemoryLong *****************
 36833 ;; Defined at:
 36834 ;;		line 277 in file "EEPROM.c"
 36835 ;; Parameters:    Size  Location     Type
 36836 ;;  AddressFirst    1    wreg     unsigned char 
 36837 ;; Auto vars:     Size  Location     Type
 36838 ;;  AddressFirst    1   35[COMRAM] unsigned char 
 36839 ;;  GetMemoryLon    4   27[COMRAM] unsigned long 
 36840 ;;  GetMemoryLon    1   34[COMRAM] unsigned char 
 36841 ;;  GetMemoryLon    1   33[COMRAM] unsigned char 
 36842 ;;  GetMemoryLon    1   32[COMRAM] unsigned char 
 36843 ;;  GetMemoryLon    1   31[COMRAM] unsigned char 
 36844 ;; Return value:  Size  Location     Type
 36845 ;;                  4    3[COMRAM] unsigned long 
 36846 ;; Registers used:
 36847 ;;		wreg, status,2, status,0, cstack
 36848 ;; Tracked objects:
 36849 ;;		On entry : 0/0
 36850 ;;		On exit  : 0/0
 36851 ;;		Unchanged: 0/0
 36852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36854 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36855 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36856 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36857 ;;Total ram usage:       33 bytes
 36858 ;; Hardware stack levels used:    1
 36859 ;; Hardware stack levels required when called:    2
 36860 ;; This function calls:
 36861 ;;		i1_ReadEEPROM_1Byte
 36862 ;; This function is called by:
 36863 ;;		i1_SetMemoryLong
 36864 ;; This function uses a non-reentrant model
 36865 ;;
 36866                           
 36867                           	psect	text117
 36868  015EC6                     __ptext117:
 36869                           	opt stack 0
 36870  015EC6                     i1_GetMemoryLong:
 36871                           	opt stack 18
 36872                           
 36873                           ;incstack = 0
 36874                           ;i1GetMemoryLong@AddressFirst stored from wreg
 36875  015EC6  6E24               	movwf	i1GetMemoryLong@AddressFirst,c
 36876                           
 36877                           ;EEPROM.c: 279: unsigned char H;
 36878                           ;EEPROM.c: 280: unsigned char MH;
 36879                           ;EEPROM.c: 281: unsigned char ML;
 36880                           ;EEPROM.c: 282: unsigned char L;
 36881                           ;EEPROM.c: 283: unsigned long temp =0;
 36882  015EC8  0E00               	movlw	0
 36883  015ECA  6E1C               	movwf	i1GetMemoryLong@temp,c
 36884  015ECC  0E00               	movlw	0
 36885  015ECE  6E1D               	movwf	i1GetMemoryLong@temp+1,c
 36886  015ED0  0E00               	movlw	0
 36887  015ED2  6E1E               	movwf	i1GetMemoryLong@temp+2,c
 36888  015ED4  0E00               	movlw	0
 36889  015ED6  6E1F               	movwf	i1GetMemoryLong@temp+3,c
 36890                           
 36891                           ;EEPROM.c: 285: H = ReadEEPROM_1Byte(AddressFirst);
 36892  015ED8  C024  F001         	movff	i1GetMemoryLong@AddressFirst,i1ReadEEPROM_1Byte@address
 36893  015EDC  6A02               	clrf	i1ReadEEPROM_1Byte@address+1,c
 36894  015EDE  ECD3  F005         	call	i1_ReadEEPROM_1Byte	;wreg free
 36895  015EE2  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 36896  015EE4  6E20               	movwf	i1GetMemoryLong@H,c
 36897                           
 36898                           ;EEPROM.c: 286: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 36899  015EE6  0E01               	movlw	1
 36900  015EE8  2424               	addwf	i1GetMemoryLong@AddressFirst,w,c
 36901  015EEA  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 36902  015EEC  6A02               	clrf	i1ReadEEPROM_1Byte@address+1,c
 36903  015EEE  0E00               	movlw	0
 36904  015EF0  2202               	addwfc	i1ReadEEPROM_1Byte@address+1,f,c
 36905  015EF2  ECD3  F005         	call	i1_ReadEEPROM_1Byte	;wreg free
 36906  015EF6  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 36907  015EF8  6E21               	movwf	i1GetMemoryLong@MH,c
 36908                           
 36909                           ;EEPROM.c: 287: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 36910  015EFA  0E02               	movlw	2
 36911  015EFC  2424               	addwf	i1GetMemoryLong@AddressFirst,w,c
 36912  015EFE  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 36913  015F00  6A02               	clrf	i1ReadEEPROM_1Byte@address+1,c
 36914  015F02  0E00               	movlw	0
 36915  015F04  2202               	addwfc	i1ReadEEPROM_1Byte@address+1,f,c
 36916  015F06  ECD3  F005         	call	i1_ReadEEPROM_1Byte	;wreg free
 36917  015F0A  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 36918  015F0C  6E22               	movwf	i1GetMemoryLong@ML,c
 36919                           
 36920                           ;EEPROM.c: 288: L = ReadEEPROM_1Byte(AddressFirst + 3);
 36921  015F0E  0E03               	movlw	3
 36922  015F10  2424               	addwf	i1GetMemoryLong@AddressFirst,w,c
 36923  015F12  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 36924  015F14  6A02               	clrf	i1ReadEEPROM_1Byte@address+1,c
 36925  015F16  0E00               	movlw	0
 36926  015F18  2202               	addwfc	i1ReadEEPROM_1Byte@address+1,f,c
 36927  015F1A  ECD3  F005         	call	i1_ReadEEPROM_1Byte	;wreg free
 36928  015F1E  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 36929  015F20  6E23               	movwf	i1GetMemoryLong@L,c
 36930                           
 36931                           ;EEPROM.c: 290: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 36932                           ;EEPROM.c: 291: + ((unsigned long)ML << 8) + (unsigned long)L);
 36933  015F22  C022  F008         	movff	i1GetMemoryLong@ML,??i1_GetMemoryLong
 36934  015F26  6A09               	clrf	(??i1_GetMemoryLong+1)& (0+255),c
 36935  015F28  6A0A               	clrf	(??i1_GetMemoryLong+2)& (0+255),c
 36936  015F2A  6A0B               	clrf	(??i1_GetMemoryLong+3)& (0+255),c
 36937  015F2C  C00A  F00B         	movff	??i1_GetMemoryLong+2,??i1_GetMemoryLong+3
 36938  015F30  C009  F00A         	movff	??i1_GetMemoryLong+1,??i1_GetMemoryLong+2
 36939  015F34  C008  F009         	movff	??i1_GetMemoryLong,??i1_GetMemoryLong+1
 36940  015F38  6A08               	clrf	??i1_GetMemoryLong,c
 36941  015F3A  C021  F00C         	movff	i1GetMemoryLong@MH,??i1_GetMemoryLong+4
 36942  015F3E  6A0D               	clrf	(??i1_GetMemoryLong+5)& (0+255),c
 36943  015F40  6A0E               	clrf	(??i1_GetMemoryLong+6)& (0+255),c
 36944  015F42  6A0F               	clrf	(??i1_GetMemoryLong+7)& (0+255),c
 36945  015F44  C00D  F00F         	movff	??i1_GetMemoryLong+5,??i1_GetMemoryLong+7
 36946  015F48  C00C  F00E         	movff	??i1_GetMemoryLong+4,??i1_GetMemoryLong+6
 36947  015F4C  6A0D               	clrf	??i1_GetMemoryLong+5,c
 36948  015F4E  6A0C               	clrf	??i1_GetMemoryLong+4,c
 36949  015F50  C020  F010         	movff	i1GetMemoryLong@H,??i1_GetMemoryLong+8
 36950  015F54  6A11               	clrf	(??i1_GetMemoryLong+9)& (0+255),c
 36951  015F56  6A12               	clrf	(??i1_GetMemoryLong+10)& (0+255),c
 36952  015F58  6A13               	clrf	(??i1_GetMemoryLong+11)& (0+255),c
 36953  015F5A  C010  F013         	movff	??i1_GetMemoryLong+8,??i1_GetMemoryLong+11
 36954  015F5E  6A12               	clrf	??i1_GetMemoryLong+10,c
 36955  015F60  6A11               	clrf	??i1_GetMemoryLong+9,c
 36956  015F62  6A10               	clrf	??i1_GetMemoryLong+8,c
 36957  015F64  500C               	movf	??i1_GetMemoryLong+4,w,c
 36958  015F66  2410               	addwf	??i1_GetMemoryLong+8,w,c
 36959  015F68  6E14               	movwf	(??i1_GetMemoryLong+12)& (0+255),c
 36960  015F6A  500D               	movf	??i1_GetMemoryLong+5,w,c
 36961  015F6C  2011               	addwfc	??i1_GetMemoryLong+9,w,c
 36962  015F6E  6E15               	movwf	(??i1_GetMemoryLong+13)& (0+255),c
 36963  015F70  500E               	movf	??i1_GetMemoryLong+6,w,c
 36964  015F72  2012               	addwfc	??i1_GetMemoryLong+10,w,c
 36965  015F74  6E16               	movwf	(??i1_GetMemoryLong+14)& (0+255),c
 36966  015F76  500F               	movf	??i1_GetMemoryLong+7,w,c
 36967  015F78  2013               	addwfc	??i1_GetMemoryLong+11,w,c
 36968  015F7A  6E17               	movwf	(??i1_GetMemoryLong+15)& (0+255),c
 36969  015F7C  5008               	movf	??i1_GetMemoryLong,w,c
 36970  015F7E  2414               	addwf	??i1_GetMemoryLong+12,w,c
 36971  015F80  6E18               	movwf	(??i1_GetMemoryLong+16)& (0+255),c
 36972  015F82  5009               	movf	??i1_GetMemoryLong+1,w,c
 36973  015F84  2015               	addwfc	??i1_GetMemoryLong+13,w,c
 36974  015F86  6E19               	movwf	(??i1_GetMemoryLong+17)& (0+255),c
 36975  015F88  500A               	movf	??i1_GetMemoryLong+2,w,c
 36976  015F8A  2016               	addwfc	??i1_GetMemoryLong+14,w,c
 36977  015F8C  6E1A               	movwf	(??i1_GetMemoryLong+18)& (0+255),c
 36978  015F8E  500B               	movf	??i1_GetMemoryLong+3,w,c
 36979  015F90  2017               	addwfc	??i1_GetMemoryLong+15,w,c
 36980  015F92  6E1B               	movwf	(??i1_GetMemoryLong+19)& (0+255),c
 36981  015F94  5023               	movf	i1GetMemoryLong@L,w,c
 36982  015F96  2418               	addwf	??i1_GetMemoryLong+16,w,c
 36983  015F98  6E1C               	movwf	i1GetMemoryLong@temp,c
 36984  015F9A  0E00               	movlw	0
 36985  015F9C  2019               	addwfc	??i1_GetMemoryLong+17,w,c
 36986  015F9E  6E1D               	movwf	i1GetMemoryLong@temp+1,c
 36987  015FA0  0E00               	movlw	0
 36988  015FA2  201A               	addwfc	??i1_GetMemoryLong+18,w,c
 36989  015FA4  6E1E               	movwf	i1GetMemoryLong@temp+2,c
 36990  015FA6  0E00               	movlw	0
 36991  015FA8  201B               	addwfc	??i1_GetMemoryLong+19,w,c
 36992  015FAA  6E1F               	movwf	i1GetMemoryLong@temp+3,c
 36993                           
 36994                           ;EEPROM.c: 292: return temp;
 36995  015FAC  C01C  F004         	movff	i1GetMemoryLong@temp,?i1_GetMemoryLong
 36996  015FB0  C01D  F005         	movff	i1GetMemoryLong@temp+1,?i1_GetMemoryLong+1
 36997  015FB4  C01E  F006         	movff	i1GetMemoryLong@temp+2,?i1_GetMemoryLong+2
 36998  015FB8  C01F  F007         	movff	i1GetMemoryLong@temp+3,?i1_GetMemoryLong+3
 36999  015FBC  0012               	return	
 37000  015FBE  0012               	return		;funcret
 37001  015FC0                     __end_ofi1_GetMemoryLong:
 37002                           	opt stack 0
 37003                           pclatu	equ	0xFFB
 37004                           pclath	equ	0xFFA
 37005                           tblptru	equ	0xFF8
 37006                           tblptrh	equ	0xFF7
 37007                           tblptrl	equ	0xFF6
 37008                           tablat	equ	0xFF5
 37009                           prodh	equ	0xFF4
 37010                           prodl	equ	0xFF3
 37011                           intcon	equ	0xFF2
 37012                           intcon2	equ	0xFF1
 37013                           indf0	equ	0xFEF
 37014                           postinc0	equ	0xFEE
 37015                           plusw0	equ	0xFEB
 37016                           fsr0h	equ	0xFEA
 37017                           fsr0l	equ	0xFE9
 37018                           wreg	equ	0xFE8
 37019                           indf1	equ	0xFE7
 37020                           postdec1	equ	0xFE5
 37021                           fsr1h	equ	0xFE2
 37022                           fsr1l	equ	0xFE1
 37023                           bsr	equ	0xFE0
 37024                           indf2	equ	0xFDF
 37025                           postinc2	equ	0xFDE
 37026                           postdec2	equ	0xFDD
 37027                           plusw2	equ	0xFDB
 37028                           fsr2h	equ	0xFDA
 37029                           fsr2l	equ	0xFD9
 37030                           status	equ	0xFD8
 37031                           
 37032 ;; *************** function i1_SetMemoryBaud *****************
 37033 ;; Defined at:
 37034 ;;		line 142 in file "EEPROM.c"
 37035 ;; Parameters:    Size  Location     Type
 37036 ;;  Baud            4   35[COMRAM] unsigned long 
 37037 ;; Auto vars:     Size  Location     Type
 37038 ;;  SetMemoryBau    4   43[COMRAM] unsigned long 
 37039 ;;  SetMemoryBau    1   50[COMRAM] unsigned char 
 37040 ;;  SetMemoryBau    1   49[COMRAM] unsigned char 
 37041 ;;  SetMemoryBau    1   48[COMRAM] unsigned char 
 37042 ;;  SetMemoryBau    1   47[COMRAM] unsigned char 
 37043 ;; Return value:  Size  Location     Type
 37044 ;;                  1    wreg      unsigned char 
 37045 ;; Registers used:
 37046 ;;		wreg, status,2, status,0, cstack
 37047 ;; Tracked objects:
 37048 ;;		On entry : 0/0
 37049 ;;		On exit  : 0/0
 37050 ;;		Unchanged: 0/0
 37051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37053 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37055 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37056 ;;Total ram usage:       16 bytes
 37057 ;; Hardware stack levels used:    1
 37058 ;; Hardware stack levels required when called:    3
 37059 ;; This function calls:
 37060 ;;		i1_GetMemoryBaud
 37061 ;;		i1_WriteEEPROM_1Byte
 37062 ;; This function is called by:
 37063 ;;		i1_SetEEPROM
 37064 ;; This function uses a non-reentrant model
 37065 ;;
 37066                           
 37067                           	psect	text118
 37068  016C08                     __ptext118:
 37069                           	opt stack 0
 37070  016C08                     i1_SetMemoryBaud:
 37071                           	opt stack 18
 37072                           
 37073                           ;EEPROM.c: 144: unsigned char BaudTempH;
 37074                           ;EEPROM.c: 145: unsigned char BaudTempMH;
 37075                           ;EEPROM.c: 146: unsigned char BaudTempML;
 37076                           ;EEPROM.c: 147: unsigned char BaudTempL;
 37077                           ;EEPROM.c: 148: unsigned long Test;
 37078                           ;EEPROM.c: 150: BaudTempH = (unsigned char) ((Baud & 0XFF000000) >> 24);
 37079                           
 37080                           ;incstack = 0
 37081  016C08  0E00               	movlw	0
 37082  016C0A  1424               	andwf	i1SetMemoryBaud@Baud,w,c
 37083  016C0C  6E28               	movwf	??i1_SetMemoryBaud& (0+255),c
 37084  016C0E  0E00               	movlw	0
 37085  016C10  1425               	andwf	i1SetMemoryBaud@Baud+1,w,c
 37086  016C12  6E29               	movwf	(??i1_SetMemoryBaud+1)& (0+255),c
 37087  016C14  0E00               	movlw	0
 37088  016C16  1426               	andwf	i1SetMemoryBaud@Baud+2,w,c
 37089  016C18  6E2A               	movwf	(??i1_SetMemoryBaud+2)& (0+255),c
 37090  016C1A  0EFF               	movlw	255
 37091  016C1C  1427               	andwf	i1SetMemoryBaud@Baud+3,w,c
 37092  016C1E  6E2B               	movwf	(??i1_SetMemoryBaud+3)& (0+255),c
 37093  016C20  0E19               	movlw	25
 37094  016C22  D005               	goto	i1u1035_20
 37095  016C24                     i1u1035_25:
 37096  016C24  90D8               	bcf	status,0,c
 37097  016C26  322B               	rrcf	??i1_SetMemoryBaud+3,f,c
 37098  016C28  322A               	rrcf	??i1_SetMemoryBaud+2,f,c
 37099  016C2A  3229               	rrcf	??i1_SetMemoryBaud+1,f,c
 37100  016C2C  3228               	rrcf	??i1_SetMemoryBaud,f,c
 37101  016C2E                     i1u1035_20:
 37102  016C2E  2EE8               	decfsz	wreg,f,c
 37103  016C30  D7F9               	goto	i1u1035_25
 37104  016C32  5028               	movf	??i1_SetMemoryBaud,w,c
 37105  016C34  6E30               	movwf	i1SetMemoryBaud@BaudTempH,c
 37106                           
 37107                           ;EEPROM.c: 151: BaudTempMH = (unsigned char) ((Baud & 0X00FF0000) >> 16);
 37108  016C36  C026  F031         	movff	i1SetMemoryBaud@Baud+2,i1SetMemoryBaud@BaudTempMH
 37109                           
 37110                           ;EEPROM.c: 152: BaudTempML = (unsigned char) ((Baud & 0X0000FF00) >> 8);
 37111  016C3A  C025  F032         	movff	i1SetMemoryBaud@Baud+1,i1SetMemoryBaud@BaudTempML
 37112                           
 37113                           ;EEPROM.c: 153: BaudTempL = (unsigned char) (Baud & 0X000000FF);
 37114  016C3E  C024  F033         	movff	i1SetMemoryBaud@Baud,i1SetMemoryBaud@BaudTempL
 37115                           
 37116                           ;EEPROM.c: 156: WriteEEPROM_1Byte(0, BaudTempH);
 37117  016C42  0E00               	movlw	0
 37118  016C44  6E02               	movwf	i1WriteEEPROM_1Byte@address+1,c
 37119  016C46  0E00               	movlw	0
 37120  016C48  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 37121  016C4A  C030  F003         	movff	i1SetMemoryBaud@BaudTempH,i1WriteEEPROM_1Byte@data
 37122  016C4E  EC51  F005         	call	i1_WriteEEPROM_1Byte	;wreg free
 37123                           
 37124                           ;EEPROM.c: 157: WriteEEPROM_1Byte(1, BaudTempMH);
 37125  016C52  0E00               	movlw	0
 37126  016C54  6E02               	movwf	i1WriteEEPROM_1Byte@address+1,c
 37127  016C56  0E01               	movlw	1
 37128  016C58  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 37129  016C5A  C031  F003         	movff	i1SetMemoryBaud@BaudTempMH,i1WriteEEPROM_1Byte@data
 37130  016C5E  EC51  F005         	call	i1_WriteEEPROM_1Byte	;wreg free
 37131                           
 37132                           ;EEPROM.c: 158: WriteEEPROM_1Byte(2, BaudTempML);
 37133  016C62  0E00               	movlw	0
 37134  016C64  6E02               	movwf	i1WriteEEPROM_1Byte@address+1,c
 37135  016C66  0E02               	movlw	2
 37136  016C68  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 37137  016C6A  C032  F003         	movff	i1SetMemoryBaud@BaudTempML,i1WriteEEPROM_1Byte@data
 37138  016C6E  EC51  F005         	call	i1_WriteEEPROM_1Byte	;wreg free
 37139                           
 37140                           ;EEPROM.c: 159: WriteEEPROM_1Byte(3, BaudTempL);
 37141  016C72  0E00               	movlw	0
 37142  016C74  6E02               	movwf	i1WriteEEPROM_1Byte@address+1,c
 37143  016C76  0E03               	movlw	3
 37144  016C78  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 37145  016C7A  C033  F003         	movff	i1SetMemoryBaud@BaudTempL,i1WriteEEPROM_1Byte@data
 37146  016C7E  EC51  F005         	call	i1_WriteEEPROM_1Byte	;wreg free
 37147                           
 37148                           ;EEPROM.c: 162: Test = GetMemoryBaud();
 37149  016C82  ECD1  F0B0         	call	i1_GetMemoryBaud	;wreg free
 37150  016C86  C004  F02C         	movff	?i1_GetMemoryBaud,i1SetMemoryBaud@Test
 37151  016C8A  C005  F02D         	movff	?i1_GetMemoryBaud+1,i1SetMemoryBaud@Test+1
 37152  016C8E  C006  F02E         	movff	?i1_GetMemoryBaud+2,i1SetMemoryBaud@Test+2
 37153  016C92  C007  F02F         	movff	?i1_GetMemoryBaud+3,i1SetMemoryBaud@Test+3
 37154                           
 37155                           ;EEPROM.c: 164: if(Test == Baud)
 37156  016C96  5024               	movf	i1SetMemoryBaud@Baud,w,c
 37157  016C98  182C               	xorwf	i1SetMemoryBaud@Test,w,c
 37158  016C9A  E10C               	bnz	i1l9069
 37159  016C9C  5025               	movf	i1SetMemoryBaud@Baud+1,w,c
 37160  016C9E  182D               	xorwf	i1SetMemoryBaud@Test+1,w,c
 37161  016CA0  E109               	bnz	i1l9069
 37162  016CA2  5026               	movf	i1SetMemoryBaud@Baud+2,w,c
 37163  016CA4  182E               	xorwf	i1SetMemoryBaud@Test+2,w,c
 37164  016CA6  E106               	bnz	i1l9069
 37165  016CA8  5027               	movf	i1SetMemoryBaud@Baud+3,w,c
 37166  016CAA  182F               	xorwf	i1SetMemoryBaud@Test+3,w,c
 37167  016CAC  A4D8               	btfss	status,2,c
 37168  016CAE  D002               	goto	i1l9069
 37169                           
 37170                           ;EEPROM.c: 165: {
 37171                           ;EEPROM.c: 166: return 1;
 37172  016CB0  0E01               	movlw	1
 37173  016CB2  0012               	return	
 37174  016CB4                     i1l9069:
 37175                           
 37176                           ;EEPROM.c: 167: }
 37177                           ;EEPROM.c: 168: return 0;
 37178  016CB4  0E00               	movlw	0
 37179  016CB6  0012               	return	
 37180  016CB8  0012               	return		;funcret
 37181  016CBA                     __end_ofi1_SetMemoryBaud:
 37182                           	opt stack 0
 37183                           pclatu	equ	0xFFB
 37184                           pclath	equ	0xFFA
 37185                           tblptru	equ	0xFF8
 37186                           tblptrh	equ	0xFF7
 37187                           tblptrl	equ	0xFF6
 37188                           tablat	equ	0xFF5
 37189                           prodh	equ	0xFF4
 37190                           prodl	equ	0xFF3
 37191                           intcon	equ	0xFF2
 37192                           intcon2	equ	0xFF1
 37193                           indf0	equ	0xFEF
 37194                           postinc0	equ	0xFEE
 37195                           plusw0	equ	0xFEB
 37196                           fsr0h	equ	0xFEA
 37197                           fsr0l	equ	0xFE9
 37198                           wreg	equ	0xFE8
 37199                           indf1	equ	0xFE7
 37200                           postdec1	equ	0xFE5
 37201                           fsr1h	equ	0xFE2
 37202                           fsr1l	equ	0xFE1
 37203                           bsr	equ	0xFE0
 37204                           indf2	equ	0xFDF
 37205                           postinc2	equ	0xFDE
 37206                           postdec2	equ	0xFDD
 37207                           plusw2	equ	0xFDB
 37208                           fsr2h	equ	0xFDA
 37209                           fsr2l	equ	0xFD9
 37210                           status	equ	0xFD8
 37211                           
 37212 ;; *************** function i1_WriteEEPROM_1Byte *****************
 37213 ;; Defined at:
 37214 ;;		line 94 in file "EEPROM.c"
 37215 ;; Parameters:    Size  Location     Type
 37216 ;;  address         2    0[COMRAM] unsigned int 
 37217 ;;  data            1    2[COMRAM] unsigned char 
 37218 ;; Auto vars:     Size  Location     Type
 37219 ;;  WriteEEPROM_    1    3[COMRAM] unsigned char 
 37220 ;; Return value:  Size  Location     Type
 37221 ;;		None               void
 37222 ;; Registers used:
 37223 ;;		wreg, status,2, status,0, cstack
 37224 ;; Tracked objects:
 37225 ;;		On entry : 0/0
 37226 ;;		On exit  : 0/0
 37227 ;;		Unchanged: 0/0
 37228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37229 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37232 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37233 ;;Total ram usage:        4 bytes
 37234 ;; Hardware stack levels used:    1
 37235 ;; Hardware stack levels required when called:    2
 37236 ;; This function calls:
 37237 ;;		i1_EEPROM_UNLOCK
 37238 ;; This function is called by:
 37239 ;;		i1_SetMemoryBaud
 37240 ;;		i1_SetMemoryParity
 37241 ;;		i1_SetMemoryLong
 37242 ;; This function uses a non-reentrant model
 37243 ;;
 37244                           
 37245                           	psect	text119
 37246  000AA2                     __ptext119:
 37247                           	opt stack 0
 37248  000AA2                     i1_WriteEEPROM_1Byte:
 37249                           	opt stack 18
 37250                           
 37251                           ;EEPROM.c: 96: unsigned char GIEstatus = INTCONbits.GIE;
 37252                           
 37253                           ;incstack = 0
 37254  000AA2  0E00               	movlw	0
 37255  000AA4  BEF2               	btfsc	intcon,7,c	;volatile
 37256  000AA6  0E01               	movlw	1
 37257  000AA8  6E04               	movwf	i1WriteEEPROM_1Byte@GIEstatus,c
 37258                           
 37259                           ;EEPROM.c: 97: EEADRH = (unsigned char)((address & 0x300) >> 8);
 37260  000AAA  5002               	movf	i1WriteEEPROM_1Byte@address+1,w,c
 37261  000AAC  0B03               	andlw	3
 37262  000AAE  6EAA               	movwf	4010,c	;volatile
 37263                           
 37264                           ;EEPROM.c: 98: EEADR = (unsigned char)(address & 0xFF);
 37265  000AB0  C001  FFA9         	movff	i1WriteEEPROM_1Byte@address,4009	;volatile
 37266                           
 37267                           ;EEPROM.c: 99: EEDATA = data;
 37268  000AB4  C003  FFA8         	movff	i1WriteEEPROM_1Byte@data,4008	;volatile
 37269                           
 37270                           ;EEPROM.c: 100: EECON1bits.EEPGD = 0;
 37271  000AB8  9EA6               	bcf	4006,7,c	;volatile
 37272                           
 37273                           ;EEPROM.c: 101: EECON1bits.CFGS = 0;
 37274  000ABA  9CA6               	bcf	4006,6,c	;volatile
 37275                           
 37276                           ;EEPROM.c: 102: EECON1bits.WREN =1;
 37277  000ABC  84A6               	bsf	4006,2,c	;volatile
 37278                           
 37279                           ;EEPROM.c: 103: INTCONbits.GIE =0;
 37280  000ABE  9EF2               	bcf	intcon,7,c	;volatile
 37281                           
 37282                           ;EEPROM.c: 104: EEPROM_UNLOCK();
 37283  000AC0  EC2E  F007         	call	i1_EEPROM_UNLOCK	;wreg free
 37284                           
 37285                           ;EEPROM.c: 105: EECON1bits.WR =1;
 37286  000AC4  82A6               	bsf	4006,1,c	;volatile
 37287                           
 37288                           ;EEPROM.c: 106: while(EECON1bits.WR);
 37289  000AC6  D000               	goto	i1l1586
 37290  000AC8                     i1l1586:
 37291  000AC8  B2A6               	btfsc	4006,1,c	;volatile
 37292  000ACA  D7FE               	goto	i1l1586
 37293                           
 37294                           ;EEPROM.c: 107: EECON1bits.WREN =0;
 37295  000ACC  94A6               	bcf	4006,2,c	;volatile
 37296                           
 37297                           ;EEPROM.c: 108: if(GIEstatus)
 37298  000ACE  5004               	movf	i1WriteEEPROM_1Byte@GIEstatus,w,c
 37299  000AD0  B4D8               	btfsc	status,2,c
 37300  000AD2  0012               	return	
 37301                           
 37302                           ;EEPROM.c: 109: {
 37303                           ;EEPROM.c: 110: INTCONbits.GIE =1;
 37304  000AD4  8EF2               	bsf	intcon,7,c	;volatile
 37305  000AD6  0012               	return	
 37306  000AD8  0012               	return		;funcret
 37307  000ADA                     __end_ofi1_WriteEEPROM_1Byte:
 37308                           	opt stack 0
 37309                           pclatu	equ	0xFFB
 37310                           pclath	equ	0xFFA
 37311                           tblptru	equ	0xFF8
 37312                           tblptrh	equ	0xFF7
 37313                           tblptrl	equ	0xFF6
 37314                           tablat	equ	0xFF5
 37315                           prodh	equ	0xFF4
 37316                           prodl	equ	0xFF3
 37317                           intcon	equ	0xFF2
 37318                           intcon2	equ	0xFF1
 37319                           indf0	equ	0xFEF
 37320                           postinc0	equ	0xFEE
 37321                           plusw0	equ	0xFEB
 37322                           fsr0h	equ	0xFEA
 37323                           fsr0l	equ	0xFE9
 37324                           wreg	equ	0xFE8
 37325                           indf1	equ	0xFE7
 37326                           postdec1	equ	0xFE5
 37327                           fsr1h	equ	0xFE2
 37328                           fsr1l	equ	0xFE1
 37329                           bsr	equ	0xFE0
 37330                           indf2	equ	0xFDF
 37331                           postinc2	equ	0xFDE
 37332                           postdec2	equ	0xFDD
 37333                           plusw2	equ	0xFDB
 37334                           fsr2h	equ	0xFDA
 37335                           fsr2l	equ	0xFD9
 37336                           status	equ	0xFD8
 37337                           
 37338 ;; *************** function i1_EEPROM_UNLOCK *****************
 37339 ;; Defined at:
 37340 ;;		line 79 in file "EEPROM.c"
 37341 ;; Parameters:    Size  Location     Type
 37342 ;;		None
 37343 ;; Auto vars:     Size  Location     Type
 37344 ;;		None
 37345 ;; Return value:  Size  Location     Type
 37346 ;;		None               void
 37347 ;; Registers used:
 37348 ;;		wreg, status,2
 37349 ;; Tracked objects:
 37350 ;;		On entry : 0/0
 37351 ;;		On exit  : 0/0
 37352 ;;		Unchanged: 0/0
 37353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37358 ;;Total ram usage:        0 bytes
 37359 ;; Hardware stack levels used:    1
 37360 ;; Hardware stack levels required when called:    1
 37361 ;; This function calls:
 37362 ;;		Nothing
 37363 ;; This function is called by:
 37364 ;;		i1_WriteEEPROM_1Byte
 37365 ;; This function uses a non-reentrant model
 37366 ;;
 37367                           
 37368                           	psect	text120
 37369  000E5C                     __ptext120:
 37370                           	opt stack 0
 37371  000E5C                     i1_EEPROM_UNLOCK:
 37372                           	opt stack 18
 37373                           
 37374                           ;EEPROM.c: 81: EECON2 = 0x55;
 37375                           
 37376                           ;incstack = 0
 37377  000E5C  0E55               	movlw	85
 37378  000E5E  6EA7               	movwf	4007,c	;volatile
 37379                           
 37380                           ;EEPROM.c: 82: EECON2 = 0xAA;
 37381  000E60  0EAA               	movlw	170
 37382  000E62  6EA7               	movwf	4007,c	;volatile
 37383                           
 37384                           ;EEPROM.c: 83: EECON1bits.WR =1;
 37385  000E64  82A6               	bsf	4006,1,c	;volatile
 37386                           
 37387                           ;EEPROM.c: 84: while(EECON1bits.WR);
 37388  000E66  D000               	goto	i1l1580
 37389  000E68                     i1l1580:
 37390  000E68  B2A6               	btfsc	4006,1,c	;volatile
 37391  000E6A  D7FE               	goto	i1l1580
 37392                           
 37393                           ;EEPROM.c: 85: __nop();
 37394  000E6C  F000               	nop	
 37395                           
 37396                           ;EEPROM.c: 86: __nop();
 37397  000E6E  F000               	nop	
 37398  000E70  0012               	return		;funcret
 37399  000E72                     __end_ofi1_EEPROM_UNLOCK:
 37400                           	opt stack 0
 37401                           pclatu	equ	0xFFB
 37402                           pclath	equ	0xFFA
 37403                           tblptru	equ	0xFF8
 37404                           tblptrh	equ	0xFF7
 37405                           tblptrl	equ	0xFF6
 37406                           tablat	equ	0xFF5
 37407                           prodh	equ	0xFF4
 37408                           prodl	equ	0xFF3
 37409                           intcon	equ	0xFF2
 37410                           intcon2	equ	0xFF1
 37411                           indf0	equ	0xFEF
 37412                           postinc0	equ	0xFEE
 37413                           plusw0	equ	0xFEB
 37414                           fsr0h	equ	0xFEA
 37415                           fsr0l	equ	0xFE9
 37416                           wreg	equ	0xFE8
 37417                           indf1	equ	0xFE7
 37418                           postdec1	equ	0xFE5
 37419                           fsr1h	equ	0xFE2
 37420                           fsr1l	equ	0xFE1
 37421                           bsr	equ	0xFE0
 37422                           indf2	equ	0xFDF
 37423                           postinc2	equ	0xFDE
 37424                           postdec2	equ	0xFDD
 37425                           plusw2	equ	0xFDB
 37426                           fsr2h	equ	0xFDA
 37427                           fsr2l	equ	0xFD9
 37428                           status	equ	0xFD8
 37429                           
 37430 ;; *************** function i1_GetMemoryBaud *****************
 37431 ;; Defined at:
 37432 ;;		line 119 in file "EEPROM.c"
 37433 ;; Parameters:    Size  Location     Type
 37434 ;;		None
 37435 ;; Auto vars:     Size  Location     Type
 37436 ;;  GetMemoryBau    4   27[COMRAM] unsigned long 
 37437 ;;  GetMemoryBau    1   34[COMRAM] unsigned char 
 37438 ;;  GetMemoryBau    1   33[COMRAM] unsigned char 
 37439 ;;  GetMemoryBau    1   32[COMRAM] unsigned char 
 37440 ;;  GetMemoryBau    1   31[COMRAM] unsigned char 
 37441 ;; Return value:  Size  Location     Type
 37442 ;;                  4    3[COMRAM] unsigned long 
 37443 ;; Registers used:
 37444 ;;		wreg, status,2, status,0, cstack
 37445 ;; Tracked objects:
 37446 ;;		On entry : 0/0
 37447 ;;		On exit  : 0/0
 37448 ;;		Unchanged: 0/0
 37449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37450 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37451 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37452 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37453 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37454 ;;Total ram usage:       32 bytes
 37455 ;; Hardware stack levels used:    1
 37456 ;; Hardware stack levels required when called:    2
 37457 ;; This function calls:
 37458 ;;		i1_ReadEEPROM_1Byte
 37459 ;; This function is called by:
 37460 ;;		i1_SetMemoryBaud
 37461 ;; This function uses a non-reentrant model
 37462 ;;
 37463                           
 37464                           	psect	text121
 37465  0161A2                     __ptext121:
 37466                           	opt stack 0
 37467  0161A2                     i1_GetMemoryBaud:
 37468                           	opt stack 18
 37469                           
 37470                           ;EEPROM.c: 121: unsigned char BaudTempH;
 37471                           ;EEPROM.c: 122: unsigned char BaudTempMH;
 37472                           ;EEPROM.c: 123: unsigned char BaudTempML;
 37473                           ;EEPROM.c: 124: unsigned char BaudTempL;
 37474                           ;EEPROM.c: 125: unsigned long baud =0;
 37475                           
 37476                           ;incstack = 0
 37477  0161A2  0E00               	movlw	0
 37478  0161A4  6E1C               	movwf	i1GetMemoryBaud@baud,c
 37479  0161A6  0E00               	movlw	0
 37480  0161A8  6E1D               	movwf	i1GetMemoryBaud@baud+1,c
 37481  0161AA  0E00               	movlw	0
 37482  0161AC  6E1E               	movwf	i1GetMemoryBaud@baud+2,c
 37483  0161AE  0E00               	movlw	0
 37484  0161B0  6E1F               	movwf	i1GetMemoryBaud@baud+3,c
 37485                           
 37486                           ;EEPROM.c: 127: BaudTempH = ReadEEPROM_1Byte(0);
 37487  0161B2  0E00               	movlw	0
 37488  0161B4  6E02               	movwf	i1ReadEEPROM_1Byte@address+1,c
 37489  0161B6  0E00               	movlw	0
 37490  0161B8  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 37491  0161BA  ECD3  F005         	call	i1_ReadEEPROM_1Byte	;wreg free
 37492  0161BE  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 37493  0161C0  6E20               	movwf	i1GetMemoryBaud@BaudTempH,c
 37494                           
 37495                           ;EEPROM.c: 128: BaudTempMH = ReadEEPROM_1Byte(1);
 37496  0161C2  0E00               	movlw	0
 37497  0161C4  6E02               	movwf	i1ReadEEPROM_1Byte@address+1,c
 37498  0161C6  0E01               	movlw	1
 37499  0161C8  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 37500  0161CA  ECD3  F005         	call	i1_ReadEEPROM_1Byte	;wreg free
 37501  0161CE  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 37502  0161D0  6E21               	movwf	i1GetMemoryBaud@BaudTempMH,c
 37503                           
 37504                           ;EEPROM.c: 129: BaudTempML = ReadEEPROM_1Byte(2);
 37505  0161D2  0E00               	movlw	0
 37506  0161D4  6E02               	movwf	i1ReadEEPROM_1Byte@address+1,c
 37507  0161D6  0E02               	movlw	2
 37508  0161D8  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 37509  0161DA  ECD3  F005         	call	i1_ReadEEPROM_1Byte	;wreg free
 37510  0161DE  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 37511  0161E0  6E22               	movwf	i1GetMemoryBaud@BaudTempML,c
 37512                           
 37513                           ;EEPROM.c: 130: BaudTempL = ReadEEPROM_1Byte(3);
 37514  0161E2  0E00               	movlw	0
 37515  0161E4  6E02               	movwf	i1ReadEEPROM_1Byte@address+1,c
 37516  0161E6  0E03               	movlw	3
 37517  0161E8  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 37518  0161EA  ECD3  F005         	call	i1_ReadEEPROM_1Byte	;wreg free
 37519  0161EE  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 37520  0161F0  6E23               	movwf	i1GetMemoryBaud@BaudTempL,c
 37521                           
 37522                           ;EEPROM.c: 132: baud = (((unsigned long) BaudTempH << 24) + ((unsigned long)BaudTempMH <
      +                          < 16)
 37523                           ;EEPROM.c: 133: + ((unsigned long)BaudTempML << 8) + (unsigned long)BaudTempL);
 37524  0161F2  C022  F008         	movff	i1GetMemoryBaud@BaudTempML,??i1_GetMemoryBaud
 37525  0161F6  6A09               	clrf	(??i1_GetMemoryBaud+1)& (0+255),c
 37526  0161F8  6A0A               	clrf	(??i1_GetMemoryBaud+2)& (0+255),c
 37527  0161FA  6A0B               	clrf	(??i1_GetMemoryBaud+3)& (0+255),c
 37528  0161FC  C00A  F00B         	movff	??i1_GetMemoryBaud+2,??i1_GetMemoryBaud+3
 37529  016200  C009  F00A         	movff	??i1_GetMemoryBaud+1,??i1_GetMemoryBaud+2
 37530  016204  C008  F009         	movff	??i1_GetMemoryBaud,??i1_GetMemoryBaud+1
 37531  016208  6A08               	clrf	??i1_GetMemoryBaud,c
 37532  01620A  C021  F00C         	movff	i1GetMemoryBaud@BaudTempMH,??i1_GetMemoryBaud+4
 37533  01620E  6A0D               	clrf	(??i1_GetMemoryBaud+5)& (0+255),c
 37534  016210  6A0E               	clrf	(??i1_GetMemoryBaud+6)& (0+255),c
 37535  016212  6A0F               	clrf	(??i1_GetMemoryBaud+7)& (0+255),c
 37536  016214  C00D  F00F         	movff	??i1_GetMemoryBaud+5,??i1_GetMemoryBaud+7
 37537  016218  C00C  F00E         	movff	??i1_GetMemoryBaud+4,??i1_GetMemoryBaud+6
 37538  01621C  6A0D               	clrf	??i1_GetMemoryBaud+5,c
 37539  01621E  6A0C               	clrf	??i1_GetMemoryBaud+4,c
 37540  016220  C020  F010         	movff	i1GetMemoryBaud@BaudTempH,??i1_GetMemoryBaud+8
 37541  016224  6A11               	clrf	(??i1_GetMemoryBaud+9)& (0+255),c
 37542  016226  6A12               	clrf	(??i1_GetMemoryBaud+10)& (0+255),c
 37543  016228  6A13               	clrf	(??i1_GetMemoryBaud+11)& (0+255),c
 37544  01622A  C010  F013         	movff	??i1_GetMemoryBaud+8,??i1_GetMemoryBaud+11
 37545  01622E  6A12               	clrf	??i1_GetMemoryBaud+10,c
 37546  016230  6A11               	clrf	??i1_GetMemoryBaud+9,c
 37547  016232  6A10               	clrf	??i1_GetMemoryBaud+8,c
 37548  016234  500C               	movf	??i1_GetMemoryBaud+4,w,c
 37549  016236  2410               	addwf	??i1_GetMemoryBaud+8,w,c
 37550  016238  6E14               	movwf	(??i1_GetMemoryBaud+12)& (0+255),c
 37551  01623A  500D               	movf	??i1_GetMemoryBaud+5,w,c
 37552  01623C  2011               	addwfc	??i1_GetMemoryBaud+9,w,c
 37553  01623E  6E15               	movwf	(??i1_GetMemoryBaud+13)& (0+255),c
 37554  016240  500E               	movf	??i1_GetMemoryBaud+6,w,c
 37555  016242  2012               	addwfc	??i1_GetMemoryBaud+10,w,c
 37556  016244  6E16               	movwf	(??i1_GetMemoryBaud+14)& (0+255),c
 37557  016246  500F               	movf	??i1_GetMemoryBaud+7,w,c
 37558  016248  2013               	addwfc	??i1_GetMemoryBaud+11,w,c
 37559  01624A  6E17               	movwf	(??i1_GetMemoryBaud+15)& (0+255),c
 37560  01624C  5008               	movf	??i1_GetMemoryBaud,w,c
 37561  01624E  2414               	addwf	??i1_GetMemoryBaud+12,w,c
 37562  016250  6E18               	movwf	(??i1_GetMemoryBaud+16)& (0+255),c
 37563  016252  5009               	movf	??i1_GetMemoryBaud+1,w,c
 37564  016254  2015               	addwfc	??i1_GetMemoryBaud+13,w,c
 37565  016256  6E19               	movwf	(??i1_GetMemoryBaud+17)& (0+255),c
 37566  016258  500A               	movf	??i1_GetMemoryBaud+2,w,c
 37567  01625A  2016               	addwfc	??i1_GetMemoryBaud+14,w,c
 37568  01625C  6E1A               	movwf	(??i1_GetMemoryBaud+18)& (0+255),c
 37569  01625E  500B               	movf	??i1_GetMemoryBaud+3,w,c
 37570  016260  2017               	addwfc	??i1_GetMemoryBaud+15,w,c
 37571  016262  6E1B               	movwf	(??i1_GetMemoryBaud+19)& (0+255),c
 37572  016264  5023               	movf	i1GetMemoryBaud@BaudTempL,w,c
 37573  016266  2418               	addwf	??i1_GetMemoryBaud+16,w,c
 37574  016268  6E1C               	movwf	i1GetMemoryBaud@baud,c
 37575  01626A  0E00               	movlw	0
 37576  01626C  2019               	addwfc	??i1_GetMemoryBaud+17,w,c
 37577  01626E  6E1D               	movwf	i1GetMemoryBaud@baud+1,c
 37578  016270  0E00               	movlw	0
 37579  016272  201A               	addwfc	??i1_GetMemoryBaud+18,w,c
 37580  016274  6E1E               	movwf	i1GetMemoryBaud@baud+2,c
 37581  016276  0E00               	movlw	0
 37582  016278  201B               	addwfc	??i1_GetMemoryBaud+19,w,c
 37583  01627A  6E1F               	movwf	i1GetMemoryBaud@baud+3,c
 37584                           
 37585                           ;EEPROM.c: 134: return baud;
 37586  01627C  C01C  F004         	movff	i1GetMemoryBaud@baud,?i1_GetMemoryBaud
 37587  016280  C01D  F005         	movff	i1GetMemoryBaud@baud+1,?i1_GetMemoryBaud+1
 37588  016284  C01E  F006         	movff	i1GetMemoryBaud@baud+2,?i1_GetMemoryBaud+2
 37589  016288  C01F  F007         	movff	i1GetMemoryBaud@baud+3,?i1_GetMemoryBaud+3
 37590  01628C  0012               	return	
 37591  01628E  0012               	return		;funcret
 37592  016290                     __end_ofi1_GetMemoryBaud:
 37593                           	opt stack 0
 37594                           pclatu	equ	0xFFB
 37595                           pclath	equ	0xFFA
 37596                           tblptru	equ	0xFF8
 37597                           tblptrh	equ	0xFF7
 37598                           tblptrl	equ	0xFF6
 37599                           tablat	equ	0xFF5
 37600                           prodh	equ	0xFF4
 37601                           prodl	equ	0xFF3
 37602                           intcon	equ	0xFF2
 37603                           intcon2	equ	0xFF1
 37604                           indf0	equ	0xFEF
 37605                           postinc0	equ	0xFEE
 37606                           plusw0	equ	0xFEB
 37607                           fsr0h	equ	0xFEA
 37608                           fsr0l	equ	0xFE9
 37609                           wreg	equ	0xFE8
 37610                           indf1	equ	0xFE7
 37611                           postdec1	equ	0xFE5
 37612                           fsr1h	equ	0xFE2
 37613                           fsr1l	equ	0xFE1
 37614                           bsr	equ	0xFE0
 37615                           indf2	equ	0xFDF
 37616                           postinc2	equ	0xFDE
 37617                           postdec2	equ	0xFDD
 37618                           plusw2	equ	0xFDB
 37619                           fsr2h	equ	0xFDA
 37620                           fsr2l	equ	0xFD9
 37621                           status	equ	0xFD8
 37622                           
 37623 ;; *************** function i1_ReadEEPROM_1Byte *****************
 37624 ;; Defined at:
 37625 ;;		line 54 in file "EEPROM.c"
 37626 ;; Parameters:    Size  Location     Type
 37627 ;;  address         2    0[COMRAM] unsigned int 
 37628 ;; Auto vars:     Size  Location     Type
 37629 ;;  ReadEEPROM_1    1    2[COMRAM] unsigned char 
 37630 ;; Return value:  Size  Location     Type
 37631 ;;                  2    0[COMRAM] unsigned int 
 37632 ;; Registers used:
 37633 ;;		wreg, status,2, status,0
 37634 ;; Tracked objects:
 37635 ;;		On entry : 0/0
 37636 ;;		On exit  : 0/0
 37637 ;;		Unchanged: 0/0
 37638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37642 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37643 ;;Total ram usage:        3 bytes
 37644 ;; Hardware stack levels used:    1
 37645 ;; Hardware stack levels required when called:    1
 37646 ;; This function calls:
 37647 ;;		Nothing
 37648 ;; This function is called by:
 37649 ;;		i1_GetMemoryBaud
 37650 ;;		i1_GetMemoryParity
 37651 ;;		i1_GetMemoryLong
 37652 ;; This function uses a non-reentrant model
 37653 ;;
 37654                           
 37655                           	psect	text122
 37656  000BA6                     __ptext122:
 37657                           	opt stack 0
 37658  000BA6                     i1_ReadEEPROM_1Byte:
 37659                           	opt stack 18
 37660                           
 37661                           ;EEPROM.c: 56: unsigned char GIEstatus = INTCONbits.GIE;
 37662                           
 37663                           ;incstack = 0
 37664  000BA6  0E00               	movlw	0
 37665  000BA8  BEF2               	btfsc	intcon,7,c	;volatile
 37666  000BAA  0E01               	movlw	1
 37667  000BAC  6E03               	movwf	i1ReadEEPROM_1Byte@GIEstatus,c
 37668                           
 37669                           ;EEPROM.c: 57: EECON1bits.EEPGD = 0;
 37670  000BAE  9EA6               	bcf	4006,7,c	;volatile
 37671                           
 37672                           ;EEPROM.c: 58: EECON1bits.CFGS = 0;
 37673  000BB0  9CA6               	bcf	4006,6,c	;volatile
 37674                           
 37675                           ;EEPROM.c: 59: EEADRH = (unsigned char)((address & 0x300) >> 8);
 37676  000BB2  5002               	movf	i1ReadEEPROM_1Byte@address+1,w,c
 37677  000BB4  0B03               	andlw	3
 37678  000BB6  6EAA               	movwf	4010,c	;volatile
 37679                           
 37680                           ;EEPROM.c: 60: EEADR = (unsigned char)(address & 0xFF);
 37681  000BB8  C001  FFA9         	movff	i1ReadEEPROM_1Byte@address,4009	;volatile
 37682                           
 37683                           ;EEPROM.c: 61: INTCONbits.GIE =0;
 37684  000BBC  9EF2               	bcf	intcon,7,c	;volatile
 37685                           
 37686                           ;EEPROM.c: 62: EECON1bits.RD = 1;
 37687  000BBE  80A6               	bsf	4006,0,c	;volatile
 37688                           
 37689                           ;EEPROM.c: 63: while(EECON1bits.RD);
 37690  000BC0  D000               	goto	i1l1573
 37691  000BC2                     i1l1573:
 37692  000BC2  B0A6               	btfsc	4006,0,c	;volatile
 37693  000BC4  D7FE               	goto	i1l1573
 37694                           
 37695                           ;EEPROM.c: 64: __nop();
 37696  000BC6  F000               	nop	
 37697                           
 37698                           ;EEPROM.c: 65: __nop();
 37699  000BC8  F000               	nop	
 37700                           
 37701                           ;EEPROM.c: 66: if(GIEstatus)
 37702  000BCA  5003               	movf	i1ReadEEPROM_1Byte@GIEstatus,w,c
 37703  000BCC  A4D8               	btfss	status,2,c
 37704                           
 37705                           ;EEPROM.c: 67: {
 37706                           ;EEPROM.c: 68: INTCONbits.GIE =1;
 37707  000BCE  8EF2               	bsf	intcon,7,c	;volatile
 37708                           
 37709                           ;EEPROM.c: 69: }
 37710                           ;EEPROM.c: 70: return (EEDATA);
 37711  000BD0  CFA8 F001          	movff	4008,?i1_ReadEEPROM_1Byte	;volatile
 37712  000BD4  6A02               	clrf	?i1_ReadEEPROM_1Byte+1,c
 37713  000BD6  0012               	return		;funcret
 37714  000BD8                     __end_ofi1_ReadEEPROM_1Byte:
 37715                           	opt stack 0
 37716                           pclatu	equ	0xFFB
 37717                           pclath	equ	0xFFA
 37718                           tblptru	equ	0xFF8
 37719                           tblptrh	equ	0xFF7
 37720                           tblptrl	equ	0xFF6
 37721                           tablat	equ	0xFF5
 37722                           prodh	equ	0xFF4
 37723                           prodl	equ	0xFF3
 37724                           intcon	equ	0xFF2
 37725                           intcon2	equ	0xFF1
 37726                           indf0	equ	0xFEF
 37727                           postinc0	equ	0xFEE
 37728                           plusw0	equ	0xFEB
 37729                           fsr0h	equ	0xFEA
 37730                           fsr0l	equ	0xFE9
 37731                           wreg	equ	0xFE8
 37732                           indf1	equ	0xFE7
 37733                           postdec1	equ	0xFE5
 37734                           fsr1h	equ	0xFE2
 37735                           fsr1l	equ	0xFE1
 37736                           bsr	equ	0xFE0
 37737                           indf2	equ	0xFDF
 37738                           postinc2	equ	0xFDE
 37739                           postdec2	equ	0xFDD
 37740                           plusw2	equ	0xFDB
 37741                           fsr2h	equ	0xFDA
 37742                           fsr2l	equ	0xFD9
 37743                           status	equ	0xFD8
 37744                           
 37745 ;; *************** function _ReadButton1 *****************
 37746 ;; Defined at:
 37747 ;;		line 64 in file "Button.c"
 37748 ;; Parameters:    Size  Location     Type
 37749 ;;		None
 37750 ;; Auto vars:     Size  Location     Type
 37751 ;;		None
 37752 ;; Return value:  Size  Location     Type
 37753 ;;                  1    wreg      unsigned char 
 37754 ;; Registers used:
 37755 ;;		wreg
 37756 ;; Tracked objects:
 37757 ;;		On entry : 0/0
 37758 ;;		On exit  : 0/0
 37759 ;;		Unchanged: 0/0
 37760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37765 ;;Total ram usage:        0 bytes
 37766 ;; Hardware stack levels used:    1
 37767 ;; Hardware stack levels required when called:    1
 37768 ;; This function calls:
 37769 ;;		Nothing
 37770 ;; This function is called by:
 37771 ;;		_UseIRCode
 37772 ;; This function uses a non-reentrant model
 37773 ;;
 37774                           
 37775                           	psect	text123
 37776  000F20                     __ptext123:
 37777                           	opt stack 0
 37778  000F20                     _ReadButton1:
 37779                           	opt stack 21
 37780                           
 37781                           ;Button.c: 67: if((PORTB & 0b00000001) == 0b00000001)
 37782                           
 37783                           ;incstack = 0
 37784  000F20  A081               	btfss	3969,0,c	;volatile
 37785  000F22  D002               	goto	i1l10075
 37786                           
 37787                           ;Button.c: 68: {
 37788                           ;Button.c: 69: return (1);
 37789  000F24  0E01               	movlw	1
 37790                           
 37791                           ;Button.c: 70: }
 37792  000F26  0012               	return	
 37793  000F28                     i1l10075:
 37794                           
 37795                           ;Button.c: 71: else
 37796                           ;Button.c: 72: {
 37797                           ;Button.c: 73: return 0;
 37798  000F28  0E00               	movlw	0
 37799  000F2A  0012               	return	
 37800  000F2C  0012               	return		;funcret
 37801  000F2E                     __end_of_ReadButton1:
 37802                           	opt stack 0
 37803                           pclatu	equ	0xFFB
 37804                           pclath	equ	0xFFA
 37805                           tblptru	equ	0xFF8
 37806                           tblptrh	equ	0xFF7
 37807                           tblptrl	equ	0xFF6
 37808                           tablat	equ	0xFF5
 37809                           prodh	equ	0xFF4
 37810                           prodl	equ	0xFF3
 37811                           intcon	equ	0xFF2
 37812                           intcon2	equ	0xFF1
 37813                           indf0	equ	0xFEF
 37814                           postinc0	equ	0xFEE
 37815                           plusw0	equ	0xFEB
 37816                           fsr0h	equ	0xFEA
 37817                           fsr0l	equ	0xFE9
 37818                           wreg	equ	0xFE8
 37819                           indf1	equ	0xFE7
 37820                           postdec1	equ	0xFE5
 37821                           fsr1h	equ	0xFE2
 37822                           fsr1l	equ	0xFE1
 37823                           bsr	equ	0xFE0
 37824                           indf2	equ	0xFDF
 37825                           postinc2	equ	0xFDE
 37826                           postdec2	equ	0xFDD
 37827                           plusw2	equ	0xFDB
 37828                           fsr2h	equ	0xFDA
 37829                           fsr2l	equ	0xFD9
 37830                           status	equ	0xFD8
 37831                           
 37832 ;; *************** function _Reset_Timer0 *****************
 37833 ;; Defined at:
 37834 ;;		line 103 in file "Timer.c"
 37835 ;; Parameters:    Size  Location     Type
 37836 ;;		None
 37837 ;; Auto vars:     Size  Location     Type
 37838 ;;		None
 37839 ;; Return value:  Size  Location     Type
 37840 ;;		None               void
 37841 ;; Registers used:
 37842 ;;		wreg, status,2
 37843 ;; Tracked objects:
 37844 ;;		On entry : 0/0
 37845 ;;		On exit  : 0/0
 37846 ;;		Unchanged: 0/0
 37847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37852 ;;Total ram usage:        0 bytes
 37853 ;; Hardware stack levels used:    1
 37854 ;; Hardware stack levels required when called:    1
 37855 ;; This function calls:
 37856 ;;		Nothing
 37857 ;; This function is called by:
 37858 ;;		_low_isr
 37859 ;; This function uses a non-reentrant model
 37860 ;;
 37861                           
 37862                           	psect	text124
 37863  000F5E                     __ptext124:
 37864                           	opt stack 0
 37865  000F5E                     _Reset_Timer0:
 37866                           	opt stack 22
 37867                           
 37868                           ;Timer.c: 109: TMR0H = 0;
 37869                           
 37870                           ;incstack = 0
 37871  000F5E  0E00               	movlw	0
 37872  000F60  6ED7               	movwf	4055,c	;volatile
 37873                           
 37874                           ;Timer.c: 110: TMR0L = 2;
 37875  000F62  0E02               	movlw	2
 37876  000F64  6ED6               	movwf	4054,c	;volatile
 37877  000F66  0012               	return		;funcret
 37878  000F68                     __end_of_Reset_Timer0:
 37879                           	opt stack 0
 37880                           pclatu	equ	0xFFB
 37881                           pclath	equ	0xFFA
 37882                           tblptru	equ	0xFF8
 37883                           tblptrh	equ	0xFF7
 37884                           tblptrl	equ	0xFF6
 37885                           tablat	equ	0xFF5
 37886                           prodh	equ	0xFF4
 37887                           prodl	equ	0xFF3
 37888                           intcon	equ	0xFF2
 37889                           intcon2	equ	0xFF1
 37890                           indf0	equ	0xFEF
 37891                           postinc0	equ	0xFEE
 37892                           plusw0	equ	0xFEB
 37893                           fsr0h	equ	0xFEA
 37894                           fsr0l	equ	0xFE9
 37895                           wreg	equ	0xFE8
 37896                           indf1	equ	0xFE7
 37897                           postdec1	equ	0xFE5
 37898                           fsr1h	equ	0xFE2
 37899                           fsr1l	equ	0xFE1
 37900                           bsr	equ	0xFE0
 37901                           indf2	equ	0xFDF
 37902                           postinc2	equ	0xFDE
 37903                           postdec2	equ	0xFDD
 37904                           plusw2	equ	0xFDB
 37905                           fsr2h	equ	0xFDA
 37906                           fsr2l	equ	0xFD9
 37907                           status	equ	0xFD8
 37908                           
 37909 ;; *************** function _LCDScreenUpdate *****************
 37910 ;; Defined at:
 37911 ;;		line 282 in file "LCD.c"
 37912 ;; Parameters:    Size  Location     Type
 37913 ;;		None
 37914 ;; Auto vars:     Size  Location     Type
 37915 ;;		None
 37916 ;; Return value:  Size  Location     Type
 37917 ;;		None               void
 37918 ;; Registers used:
 37919 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37920 ;; Tracked objects:
 37921 ;;		On entry : 0/0
 37922 ;;		On exit  : 0/0
 37923 ;;		Unchanged: 0/0
 37924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37929 ;;Total ram usage:        0 bytes
 37930 ;; Hardware stack levels used:    1
 37931 ;; Hardware stack levels required when called:    5
 37932 ;; This function calls:
 37933 ;;		i1_ClearLCD
 37934 ;;		i1_LCDPrintChar
 37935 ;;		i1_LCDPrintString
 37936 ;;		i1_SetLCDcursor
 37937 ;;		i1_Stop_Timer1
 37938 ;;		i1_cleanBuffer
 37939 ;; This function is called by:
 37940 ;;		_low_isr
 37941 ;; This function uses a non-reentrant model
 37942 ;;
 37943                           
 37944                           	psect	text125
 37945  013D4A                     __ptext125:
 37946                           	opt stack 0
 37947  013D4A                     _LCDScreenUpdate:
 37948                           	opt stack 18
 37949                           
 37950                           ;LCD.c: 285: if(LCDclearCount<(17-1))
 37951                           
 37952                           ;incstack = 0
 37953  013D4A  5052               	movf	_LCDclearCount+3,w,c
 37954  013D4C  1051               	iorwf	_LCDclearCount+2,w,c
 37955  013D4E  1050               	iorwf	_LCDclearCount+1,w,c
 37956  013D50  E10E               	bnz	i1l10379
 37957  013D52  0E10               	movlw	16
 37958  013D54  5C4F               	subwf	_LCDclearCount,w,c
 37959  013D56  B0D8               	btfsc	status,0,c
 37960  013D58  D00A               	goto	i1l10379
 37961                           
 37962                           ;LCD.c: 286: {
 37963                           ;LCD.c: 287: LCDclearCount++;
 37964  013D5A  0E01               	movlw	1
 37965  013D5C  264F               	addwf	_LCDclearCount,f,c
 37966  013D5E  0E00               	movlw	0
 37967  013D60  2250               	addwfc	_LCDclearCount+1,f,c
 37968  013D62  2251               	addwfc	_LCDclearCount+2,f,c
 37969  013D64  2252               	addwfc	_LCDclearCount+3,f,c
 37970                           
 37971                           ;LCD.c: 288: LCDwait = 1;
 37972  013D66  0E01               	movlw	1
 37973  013D68  0101               	movlb	1	; () banked
 37974  013D6A  6F9C               	movwf	_LCDwait& (0+255),b
 37975                           
 37976                           ;LCD.c: 289: }
 37977  013D6C  0012               	return	
 37978  013D6E                     i1l10379:
 37979                           
 37980                           ;LCD.c: 290: else if(LCDclearCount == (17-1))
 37981  013D6E  0E10               	movlw	16
 37982  013D70  184F               	xorwf	_LCDclearCount,w,c
 37983  013D72  1050               	iorwf	_LCDclearCount+1,w,c
 37984  013D74  1051               	iorwf	_LCDclearCount+2,w,c
 37985  013D76  1052               	iorwf	_LCDclearCount+3,w,c
 37986  013D78  A4D8               	btfss	status,2,c
 37987  013D7A  0012               	return	
 37988                           
 37989                           ;LCD.c: 291: {
 37990                           ;LCD.c: 292: LCDclearCount++;
 37991  013D7C  0E01               	movlw	1
 37992  013D7E  264F               	addwf	_LCDclearCount,f,c
 37993  013D80  0E00               	movlw	0
 37994  013D82  2250               	addwfc	_LCDclearCount+1,f,c
 37995  013D84  2251               	addwfc	_LCDclearCount+2,f,c
 37996  013D86  2252               	addwfc	_LCDclearCount+3,f,c
 37997                           
 37998                           ;LCD.c: 293: LCDwait = 0;
 37999  013D88  0E00               	movlw	0
 38000  013D8A  0101               	movlb	1	; () banked
 38001  013D8C  6F9C               	movwf	_LCDwait& (0+255),b
 38002                           
 38003                           ; BSR set to: 1
 38004                           ;LCD.c: 294: if(ScrollFIFOCount == 0)
 38005  013D8E  5055               	movf	_ScrollFIFOCount,w,c
 38006  013D90  A4D8               	btfss	status,2,c
 38007  013D92  D00F               	goto	i1l10397
 38008                           
 38009                           ; BSR set to: 1
 38010                           ;LCD.c: 295: {
 38011                           ;LCD.c: 296: Stop_Timer1();
 38012  013D94  ECBC  F007         	call	i1_Stop_Timer1	;wreg free
 38013                           
 38014                           ;LCD.c: 297: ScrollDisplayPosition = 0;
 38015  013D98  0E00               	movlw	0
 38016  013D9A  6E54               	movwf	_ScrollDisplayPosition,c
 38017                           
 38018                           ;LCD.c: 298: ClearLCD();
 38019  013D9C  EC39  F007         	call	i1_ClearLCD	;wreg free
 38020                           
 38021                           ;LCD.c: 299: SetLCDcursor(0, 0);
 38022  013DA0  0E00               	movlw	0
 38023  013DA2  6E0F               	movwf	i1SetLCDcursor@Col,c
 38024  013DA4  0E00               	movlw	0
 38025  013DA6  EC33  F006         	call	i1_SetLCDcursor
 38026                           
 38027                           ;LCD.c: 300: LCDPrintChar('>');
 38028  013DAA  0E3E               	movlw	62
 38029  013DAC  EC97  F007         	call	i1_LCDPrintChar
 38030                           
 38031                           ;LCD.c: 301: }
 38032  013DB0  0012               	return	
 38033  013DB2                     i1l10397:
 38034                           
 38035                           ;LCD.c: 302: else
 38036                           ;LCD.c: 303: {
 38037                           ;LCD.c: 304: ScrollDisplayPosition++;
 38038  013DB2  2A54               	incf	_ScrollDisplayPosition,f,c
 38039                           
 38040                           ;LCD.c: 305: if(ScrollDisplayPosition == 1)
 38041  013DB4  0454               	decf	_ScrollDisplayPosition,w,c
 38042  013DB6  A4D8               	btfss	status,2,c
 38043  013DB8  D00E               	goto	i1l10405
 38044                           
 38045                           ;LCD.c: 306: {
 38046                           ;LCD.c: 307: ClearLCD();
 38047  013DBA  EC39  F007         	call	i1_ClearLCD	;wreg free
 38048                           
 38049                           ;LCD.c: 308: SetLCDcursor(1, 0);
 38050  013DBE  0E00               	movlw	0
 38051  013DC0  6E0F               	movwf	i1SetLCDcursor@Col,c
 38052  013DC2  0E01               	movlw	1
 38053  013DC4  EC33  F006         	call	i1_SetLCDcursor
 38054                           
 38055                           ;LCD.c: 309: LCDPrintString(Scroll_1);
 38056  013DC8  0E9E               	movlw	low _Scroll_1
 38057  013DCA  6E0F               	movwf	i1LCDPrintString@Text,c
 38058  013DCC  0E01               	movlw	high _Scroll_1
 38059  013DCE  6E10               	movwf	i1LCDPrintString@Text+1,c
 38060  013DD0  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38061                           
 38062                           ;LCD.c: 310: }
 38063  013DD4  D17B               	goto	i1l10503
 38064  013DD6                     i1l10405:
 38065                           
 38066                           ;LCD.c: 311: else if(ScrollDisplayPosition == 2)
 38067  013DD6  0E02               	movlw	2
 38068  013DD8  1854               	xorwf	_ScrollDisplayPosition,w,c
 38069  013DDA  A4D8               	btfss	status,2,c
 38070  013DDC  D023               	goto	i1l10415
 38071                           
 38072                           ;LCD.c: 312: {
 38073                           ;LCD.c: 313: ClearLCD();
 38074  013DDE  EC39  F007         	call	i1_ClearLCD	;wreg free
 38075                           
 38076                           ;LCD.c: 314: SetLCDcursor(0, 0);
 38077  013DE2  0E00               	movlw	0
 38078  013DE4  6E0F               	movwf	i1SetLCDcursor@Col,c
 38079  013DE6  0E00               	movlw	0
 38080  013DE8  EC33  F006         	call	i1_SetLCDcursor
 38081                           
 38082                           ;LCD.c: 315: LCDPrintString(Scroll_1);
 38083  013DEC  0E9E               	movlw	low _Scroll_1
 38084  013DEE  6E0F               	movwf	i1LCDPrintString@Text,c
 38085  013DF0  0E01               	movlw	high _Scroll_1
 38086  013DF2  6E10               	movwf	i1LCDPrintString@Text+1,c
 38087  013DF4  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38088                           
 38089                           ;LCD.c: 316: SetLCDcursor(1, 0);
 38090  013DF8  0E00               	movlw	0
 38091  013DFA  6E0F               	movwf	i1SetLCDcursor@Col,c
 38092  013DFC  0E01               	movlw	1
 38093  013DFE  EC33  F006         	call	i1_SetLCDcursor
 38094                           
 38095                           ;LCD.c: 317: LCDPrintString(Scroll_2);
 38096  013E02  0EAE               	movlw	low _Scroll_2
 38097  013E04  6E0F               	movwf	i1LCDPrintString@Text,c
 38098  013E06  0E01               	movlw	high _Scroll_2
 38099  013E08  6E10               	movwf	i1LCDPrintString@Text+1,c
 38100  013E0A  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38101                           
 38102                           ;LCD.c: 318: cleanBuffer(Scroll_1, 16);
 38103  013E0E  0E9E               	movlw	low _Scroll_1
 38104  013E10  6E01               	movwf	i1cleanBuffer@data,c
 38105  013E12  0E01               	movlw	high _Scroll_1
 38106  013E14  6E02               	movwf	i1cleanBuffer@data+1,c
 38107  013E16  0E00               	movlw	0
 38108  013E18  6E04               	movwf	i1cleanBuffer@count+1,c
 38109  013E1A  0E10               	movlw	16
 38110  013E1C  6E03               	movwf	i1cleanBuffer@count,c
 38111  013E1E  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 38112                           
 38113                           ;LCD.c: 319: }
 38114  013E22  D154               	goto	i1l10503
 38115  013E24                     i1l10415:
 38116                           
 38117                           ;LCD.c: 320: else if(ScrollDisplayPosition == 3)
 38118  013E24  0E03               	movlw	3
 38119  013E26  1854               	xorwf	_ScrollDisplayPosition,w,c
 38120  013E28  A4D8               	btfss	status,2,c
 38121  013E2A  D023               	goto	i1l10425
 38122                           
 38123                           ;LCD.c: 321: {
 38124                           ;LCD.c: 322: ClearLCD();
 38125  013E2C  EC39  F007         	call	i1_ClearLCD	;wreg free
 38126                           
 38127                           ;LCD.c: 323: SetLCDcursor(0, 0);
 38128  013E30  0E00               	movlw	0
 38129  013E32  6E0F               	movwf	i1SetLCDcursor@Col,c
 38130  013E34  0E00               	movlw	0
 38131  013E36  EC33  F006         	call	i1_SetLCDcursor
 38132                           
 38133                           ;LCD.c: 324: LCDPrintString(Scroll_2);
 38134  013E3A  0EAE               	movlw	low _Scroll_2
 38135  013E3C  6E0F               	movwf	i1LCDPrintString@Text,c
 38136  013E3E  0E01               	movlw	high _Scroll_2
 38137  013E40  6E10               	movwf	i1LCDPrintString@Text+1,c
 38138  013E42  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38139                           
 38140                           ;LCD.c: 325: SetLCDcursor(1, 0);
 38141  013E46  0E00               	movlw	0
 38142  013E48  6E0F               	movwf	i1SetLCDcursor@Col,c
 38143  013E4A  0E01               	movlw	1
 38144  013E4C  EC33  F006         	call	i1_SetLCDcursor
 38145                           
 38146                           ;LCD.c: 326: LCDPrintString(Scroll_3);
 38147  013E50  0EBE               	movlw	low _Scroll_3
 38148  013E52  6E0F               	movwf	i1LCDPrintString@Text,c
 38149  013E54  0E01               	movlw	high _Scroll_3
 38150  013E56  6E10               	movwf	i1LCDPrintString@Text+1,c
 38151  013E58  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38152                           
 38153                           ;LCD.c: 327: cleanBuffer(Scroll_2, 16);
 38154  013E5C  0EAE               	movlw	low _Scroll_2
 38155  013E5E  6E01               	movwf	i1cleanBuffer@data,c
 38156  013E60  0E01               	movlw	high _Scroll_2
 38157  013E62  6E02               	movwf	i1cleanBuffer@data+1,c
 38158  013E64  0E00               	movlw	0
 38159  013E66  6E04               	movwf	i1cleanBuffer@count+1,c
 38160  013E68  0E10               	movlw	16
 38161  013E6A  6E03               	movwf	i1cleanBuffer@count,c
 38162  013E6C  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 38163                           
 38164                           ;LCD.c: 328: }
 38165  013E70  D12D               	goto	i1l10503
 38166  013E72                     i1l10425:
 38167                           
 38168                           ;LCD.c: 329: else if(ScrollDisplayPosition == 4)
 38169  013E72  0E04               	movlw	4
 38170  013E74  1854               	xorwf	_ScrollDisplayPosition,w,c
 38171  013E76  A4D8               	btfss	status,2,c
 38172  013E78  D023               	goto	i1l10435
 38173                           
 38174                           ;LCD.c: 330: {
 38175                           ;LCD.c: 331: ClearLCD();
 38176  013E7A  EC39  F007         	call	i1_ClearLCD	;wreg free
 38177                           
 38178                           ;LCD.c: 332: SetLCDcursor(0, 0);
 38179  013E7E  0E00               	movlw	0
 38180  013E80  6E0F               	movwf	i1SetLCDcursor@Col,c
 38181  013E82  0E00               	movlw	0
 38182  013E84  EC33  F006         	call	i1_SetLCDcursor
 38183                           
 38184                           ;LCD.c: 333: LCDPrintString(Scroll_3);
 38185  013E88  0EBE               	movlw	low _Scroll_3
 38186  013E8A  6E0F               	movwf	i1LCDPrintString@Text,c
 38187  013E8C  0E01               	movlw	high _Scroll_3
 38188  013E8E  6E10               	movwf	i1LCDPrintString@Text+1,c
 38189  013E90  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38190                           
 38191                           ;LCD.c: 334: SetLCDcursor(1, 0);
 38192  013E94  0E00               	movlw	0
 38193  013E96  6E0F               	movwf	i1SetLCDcursor@Col,c
 38194  013E98  0E01               	movlw	1
 38195  013E9A  EC33  F006         	call	i1_SetLCDcursor
 38196                           
 38197                           ;LCD.c: 335: LCDPrintString(Scroll_4);
 38198  013E9E  0ECE               	movlw	low _Scroll_4
 38199  013EA0  6E0F               	movwf	i1LCDPrintString@Text,c
 38200  013EA2  0E01               	movlw	high _Scroll_4
 38201  013EA4  6E10               	movwf	i1LCDPrintString@Text+1,c
 38202  013EA6  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38203                           
 38204                           ;LCD.c: 336: cleanBuffer(Scroll_3, 16);
 38205  013EAA  0EBE               	movlw	low _Scroll_3
 38206  013EAC  6E01               	movwf	i1cleanBuffer@data,c
 38207  013EAE  0E01               	movlw	high _Scroll_3
 38208  013EB0  6E02               	movwf	i1cleanBuffer@data+1,c
 38209  013EB2  0E00               	movlw	0
 38210  013EB4  6E04               	movwf	i1cleanBuffer@count+1,c
 38211  013EB6  0E10               	movlw	16
 38212  013EB8  6E03               	movwf	i1cleanBuffer@count,c
 38213  013EBA  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 38214                           
 38215                           ;LCD.c: 337: }
 38216  013EBE  D106               	goto	i1l10503
 38217  013EC0                     i1l10435:
 38218                           
 38219                           ;LCD.c: 338: else if(ScrollDisplayPosition == 5)
 38220  013EC0  0E05               	movlw	5
 38221  013EC2  1854               	xorwf	_ScrollDisplayPosition,w,c
 38222  013EC4  A4D8               	btfss	status,2,c
 38223  013EC6  D023               	goto	i1l10445
 38224                           
 38225                           ;LCD.c: 339: {
 38226                           ;LCD.c: 340: ClearLCD();
 38227  013EC8  EC39  F007         	call	i1_ClearLCD	;wreg free
 38228                           
 38229                           ;LCD.c: 341: SetLCDcursor(0, 0);
 38230  013ECC  0E00               	movlw	0
 38231  013ECE  6E0F               	movwf	i1SetLCDcursor@Col,c
 38232  013ED0  0E00               	movlw	0
 38233  013ED2  EC33  F006         	call	i1_SetLCDcursor
 38234                           
 38235                           ;LCD.c: 342: LCDPrintString(Scroll_4);
 38236  013ED6  0ECE               	movlw	low _Scroll_4
 38237  013ED8  6E0F               	movwf	i1LCDPrintString@Text,c
 38238  013EDA  0E01               	movlw	high _Scroll_4
 38239  013EDC  6E10               	movwf	i1LCDPrintString@Text+1,c
 38240  013EDE  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38241                           
 38242                           ;LCD.c: 343: SetLCDcursor(1, 0);
 38243  013EE2  0E00               	movlw	0
 38244  013EE4  6E0F               	movwf	i1SetLCDcursor@Col,c
 38245  013EE6  0E01               	movlw	1
 38246  013EE8  EC33  F006         	call	i1_SetLCDcursor
 38247                           
 38248                           ;LCD.c: 344: LCDPrintString(Scroll_5);
 38249  013EEC  0EDE               	movlw	low _Scroll_5
 38250  013EEE  6E0F               	movwf	i1LCDPrintString@Text,c
 38251  013EF0  0E01               	movlw	high _Scroll_5
 38252  013EF2  6E10               	movwf	i1LCDPrintString@Text+1,c
 38253  013EF4  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38254                           
 38255                           ;LCD.c: 345: cleanBuffer(Scroll_4, 16);
 38256  013EF8  0ECE               	movlw	low _Scroll_4
 38257  013EFA  6E01               	movwf	i1cleanBuffer@data,c
 38258  013EFC  0E01               	movlw	high _Scroll_4
 38259  013EFE  6E02               	movwf	i1cleanBuffer@data+1,c
 38260  013F00  0E00               	movlw	0
 38261  013F02  6E04               	movwf	i1cleanBuffer@count+1,c
 38262  013F04  0E10               	movlw	16
 38263  013F06  6E03               	movwf	i1cleanBuffer@count,c
 38264  013F08  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 38265                           
 38266                           ;LCD.c: 346: }
 38267  013F0C  D0DF               	goto	i1l10503
 38268  013F0E                     i1l10445:
 38269                           
 38270                           ;LCD.c: 347: else if(ScrollDisplayPosition == 6)
 38271  013F0E  0E06               	movlw	6
 38272  013F10  1854               	xorwf	_ScrollDisplayPosition,w,c
 38273  013F12  A4D8               	btfss	status,2,c
 38274  013F14  D023               	goto	i1l10455
 38275                           
 38276                           ;LCD.c: 348: {
 38277                           ;LCD.c: 349: ClearLCD();
 38278  013F16  EC39  F007         	call	i1_ClearLCD	;wreg free
 38279                           
 38280                           ;LCD.c: 350: SetLCDcursor(0, 0);
 38281  013F1A  0E00               	movlw	0
 38282  013F1C  6E0F               	movwf	i1SetLCDcursor@Col,c
 38283  013F1E  0E00               	movlw	0
 38284  013F20  EC33  F006         	call	i1_SetLCDcursor
 38285                           
 38286                           ;LCD.c: 351: LCDPrintString(Scroll_5);
 38287  013F24  0EDE               	movlw	low _Scroll_5
 38288  013F26  6E0F               	movwf	i1LCDPrintString@Text,c
 38289  013F28  0E01               	movlw	high _Scroll_5
 38290  013F2A  6E10               	movwf	i1LCDPrintString@Text+1,c
 38291  013F2C  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38292                           
 38293                           ;LCD.c: 352: SetLCDcursor(1, 0);
 38294  013F30  0E00               	movlw	0
 38295  013F32  6E0F               	movwf	i1SetLCDcursor@Col,c
 38296  013F34  0E01               	movlw	1
 38297  013F36  EC33  F006         	call	i1_SetLCDcursor
 38298                           
 38299                           ;LCD.c: 353: LCDPrintString(Scroll_6);
 38300  013F3A  0EE5               	movlw	low _Scroll_6
 38301  013F3C  6E0F               	movwf	i1LCDPrintString@Text,c
 38302  013F3E  0E02               	movlw	high _Scroll_6
 38303  013F40  6E10               	movwf	i1LCDPrintString@Text+1,c
 38304  013F42  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38305                           
 38306                           ;LCD.c: 354: cleanBuffer(Scroll_5, 16);
 38307  013F46  0EDE               	movlw	low _Scroll_5
 38308  013F48  6E01               	movwf	i1cleanBuffer@data,c
 38309  013F4A  0E01               	movlw	high _Scroll_5
 38310  013F4C  6E02               	movwf	i1cleanBuffer@data+1,c
 38311  013F4E  0E00               	movlw	0
 38312  013F50  6E04               	movwf	i1cleanBuffer@count+1,c
 38313  013F52  0E10               	movlw	16
 38314  013F54  6E03               	movwf	i1cleanBuffer@count,c
 38315  013F56  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 38316                           
 38317                           ;LCD.c: 355: }
 38318  013F5A  D0B8               	goto	i1l10503
 38319  013F5C                     i1l10455:
 38320                           
 38321                           ;LCD.c: 356: else if(ScrollDisplayPosition == 7)
 38322  013F5C  0E07               	movlw	7
 38323  013F5E  1854               	xorwf	_ScrollDisplayPosition,w,c
 38324  013F60  A4D8               	btfss	status,2,c
 38325  013F62  D023               	goto	i1l10465
 38326                           
 38327                           ;LCD.c: 357: {
 38328                           ;LCD.c: 358: ClearLCD();
 38329  013F64  EC39  F007         	call	i1_ClearLCD	;wreg free
 38330                           
 38331                           ;LCD.c: 359: SetLCDcursor(0, 0);
 38332  013F68  0E00               	movlw	0
 38333  013F6A  6E0F               	movwf	i1SetLCDcursor@Col,c
 38334  013F6C  0E00               	movlw	0
 38335  013F6E  EC33  F006         	call	i1_SetLCDcursor
 38336                           
 38337                           ;LCD.c: 360: LCDPrintString(Scroll_6);
 38338  013F72  0EE5               	movlw	low _Scroll_6
 38339  013F74  6E0F               	movwf	i1LCDPrintString@Text,c
 38340  013F76  0E02               	movlw	high _Scroll_6
 38341  013F78  6E10               	movwf	i1LCDPrintString@Text+1,c
 38342  013F7A  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38343                           
 38344                           ;LCD.c: 361: SetLCDcursor(1, 0);
 38345  013F7E  0E00               	movlw	0
 38346  013F80  6E0F               	movwf	i1SetLCDcursor@Col,c
 38347  013F82  0E01               	movlw	1
 38348  013F84  EC33  F006         	call	i1_SetLCDcursor
 38349                           
 38350                           ;LCD.c: 362: LCDPrintString(Scroll_7);
 38351  013F88  0E74               	movlw	low _Scroll_7
 38352  013F8A  6E0F               	movwf	i1LCDPrintString@Text,c
 38353  013F8C  0E03               	movlw	high _Scroll_7
 38354  013F8E  6E10               	movwf	i1LCDPrintString@Text+1,c
 38355  013F90  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38356                           
 38357                           ;LCD.c: 363: cleanBuffer(Scroll_6, 16);
 38358  013F94  0EE5               	movlw	low _Scroll_6
 38359  013F96  6E01               	movwf	i1cleanBuffer@data,c
 38360  013F98  0E02               	movlw	high _Scroll_6
 38361  013F9A  6E02               	movwf	i1cleanBuffer@data+1,c
 38362  013F9C  0E00               	movlw	0
 38363  013F9E  6E04               	movwf	i1cleanBuffer@count+1,c
 38364  013FA0  0E10               	movlw	16
 38365  013FA2  6E03               	movwf	i1cleanBuffer@count,c
 38366  013FA4  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 38367                           
 38368                           ;LCD.c: 364: }
 38369  013FA8  D091               	goto	i1l10503
 38370  013FAA                     i1l10465:
 38371                           
 38372                           ;LCD.c: 365: else if(ScrollDisplayPosition == 8)
 38373  013FAA  0E08               	movlw	8
 38374  013FAC  1854               	xorwf	_ScrollDisplayPosition,w,c
 38375  013FAE  A4D8               	btfss	status,2,c
 38376  013FB0  D023               	goto	i1l10475
 38377                           
 38378                           ;LCD.c: 366: {
 38379                           ;LCD.c: 367: ClearLCD();
 38380  013FB2  EC39  F007         	call	i1_ClearLCD	;wreg free
 38381                           
 38382                           ;LCD.c: 368: SetLCDcursor(0, 0);
 38383  013FB6  0E00               	movlw	0
 38384  013FB8  6E0F               	movwf	i1SetLCDcursor@Col,c
 38385  013FBA  0E00               	movlw	0
 38386  013FBC  EC33  F006         	call	i1_SetLCDcursor
 38387                           
 38388                           ;LCD.c: 369: LCDPrintString(Scroll_7);
 38389  013FC0  0E74               	movlw	low _Scroll_7
 38390  013FC2  6E0F               	movwf	i1LCDPrintString@Text,c
 38391  013FC4  0E03               	movlw	high _Scroll_7
 38392  013FC6  6E10               	movwf	i1LCDPrintString@Text+1,c
 38393  013FC8  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38394                           
 38395                           ;LCD.c: 370: SetLCDcursor(1, 0);
 38396  013FCC  0E00               	movlw	0
 38397  013FCE  6E0F               	movwf	i1SetLCDcursor@Col,c
 38398  013FD0  0E01               	movlw	1
 38399  013FD2  EC33  F006         	call	i1_SetLCDcursor
 38400                           
 38401                           ;LCD.c: 371: LCDPrintString(Scroll_8);
 38402  013FD6  0E84               	movlw	low _Scroll_8
 38403  013FD8  6E0F               	movwf	i1LCDPrintString@Text,c
 38404  013FDA  0E03               	movlw	high _Scroll_8
 38405  013FDC  6E10               	movwf	i1LCDPrintString@Text+1,c
 38406  013FDE  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38407                           
 38408                           ;LCD.c: 372: cleanBuffer(Scroll_7, 16);
 38409  013FE2  0E74               	movlw	low _Scroll_7
 38410  013FE4  6E01               	movwf	i1cleanBuffer@data,c
 38411  013FE6  0E03               	movlw	high _Scroll_7
 38412  013FE8  6E02               	movwf	i1cleanBuffer@data+1,c
 38413  013FEA  0E00               	movlw	0
 38414  013FEC  6E04               	movwf	i1cleanBuffer@count+1,c
 38415  013FEE  0E10               	movlw	16
 38416  013FF0  6E03               	movwf	i1cleanBuffer@count,c
 38417  013FF2  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 38418                           
 38419                           ;LCD.c: 373: }
 38420  013FF6  D06A               	goto	i1l10503
 38421  013FF8                     i1l10475:
 38422                           
 38423                           ;LCD.c: 374: else if(ScrollDisplayPosition == 9)
 38424  013FF8  0E09               	movlw	9
 38425  013FFA  1854               	xorwf	_ScrollDisplayPosition,w,c
 38426  013FFC  A4D8               	btfss	status,2,c
 38427  013FFE  D023               	goto	i1l10485
 38428                           
 38429                           ;LCD.c: 375: {
 38430                           ;LCD.c: 376: ClearLCD();
 38431  014000  EC39  F007         	call	i1_ClearLCD	;wreg free
 38432                           
 38433                           ;LCD.c: 377: SetLCDcursor(0, 0);
 38434  014004  0E00               	movlw	0
 38435  014006  6E0F               	movwf	i1SetLCDcursor@Col,c
 38436  014008  0E00               	movlw	0
 38437  01400A  EC33  F006         	call	i1_SetLCDcursor
 38438                           
 38439                           ;LCD.c: 378: LCDPrintString(Scroll_8);
 38440  01400E  0E84               	movlw	low _Scroll_8
 38441  014010  6E0F               	movwf	i1LCDPrintString@Text,c
 38442  014012  0E03               	movlw	high _Scroll_8
 38443  014014  6E10               	movwf	i1LCDPrintString@Text+1,c
 38444  014016  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38445                           
 38446                           ;LCD.c: 379: SetLCDcursor(1, 0);
 38447  01401A  0E00               	movlw	0
 38448  01401C  6E0F               	movwf	i1SetLCDcursor@Col,c
 38449  01401E  0E01               	movlw	1
 38450  014020  EC33  F006         	call	i1_SetLCDcursor
 38451                           
 38452                           ;LCD.c: 380: LCDPrintString(Scroll_9);
 38453  014024  0E94               	movlw	low _Scroll_9
 38454  014026  6E0F               	movwf	i1LCDPrintString@Text,c
 38455  014028  0E03               	movlw	high _Scroll_9
 38456  01402A  6E10               	movwf	i1LCDPrintString@Text+1,c
 38457  01402C  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38458                           
 38459                           ;LCD.c: 381: cleanBuffer(Scroll_8, 16);
 38460  014030  0E84               	movlw	low _Scroll_8
 38461  014032  6E01               	movwf	i1cleanBuffer@data,c
 38462  014034  0E03               	movlw	high _Scroll_8
 38463  014036  6E02               	movwf	i1cleanBuffer@data+1,c
 38464  014038  0E00               	movlw	0
 38465  01403A  6E04               	movwf	i1cleanBuffer@count+1,c
 38466  01403C  0E10               	movlw	16
 38467  01403E  6E03               	movwf	i1cleanBuffer@count,c
 38468  014040  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 38469                           
 38470                           ;LCD.c: 382: }
 38471  014044  D043               	goto	i1l10503
 38472  014046                     i1l10485:
 38473                           
 38474                           ;LCD.c: 383: else if(ScrollDisplayPosition == 10)
 38475  014046  0E0A               	movlw	10
 38476  014048  1854               	xorwf	_ScrollDisplayPosition,w,c
 38477  01404A  A4D8               	btfss	status,2,c
 38478  01404C  D023               	goto	i1l10495
 38479                           
 38480                           ;LCD.c: 384: {
 38481                           ;LCD.c: 385: ClearLCD();
 38482  01404E  EC39  F007         	call	i1_ClearLCD	;wreg free
 38483                           
 38484                           ;LCD.c: 386: SetLCDcursor(0, 0);
 38485  014052  0E00               	movlw	0
 38486  014054  6E0F               	movwf	i1SetLCDcursor@Col,c
 38487  014056  0E00               	movlw	0
 38488  014058  EC33  F006         	call	i1_SetLCDcursor
 38489                           
 38490                           ;LCD.c: 387: LCDPrintString(Scroll_9);
 38491  01405C  0E94               	movlw	low _Scroll_9
 38492  01405E  6E0F               	movwf	i1LCDPrintString@Text,c
 38493  014060  0E03               	movlw	high _Scroll_9
 38494  014062  6E10               	movwf	i1LCDPrintString@Text+1,c
 38495  014064  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38496                           
 38497                           ;LCD.c: 388: SetLCDcursor(1, 0);
 38498  014068  0E00               	movlw	0
 38499  01406A  6E0F               	movwf	i1SetLCDcursor@Col,c
 38500  01406C  0E01               	movlw	1
 38501  01406E  EC33  F006         	call	i1_SetLCDcursor
 38502                           
 38503                           ;LCD.c: 389: LCDPrintString(Scroll_10);
 38504  014072  0E64               	movlw	low _Scroll_10
 38505  014074  6E0F               	movwf	i1LCDPrintString@Text,c
 38506  014076  0E03               	movlw	high _Scroll_10
 38507  014078  6E10               	movwf	i1LCDPrintString@Text+1,c
 38508  01407A  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38509                           
 38510                           ;LCD.c: 390: cleanBuffer(Scroll_9, 16);
 38511  01407E  0E94               	movlw	low _Scroll_9
 38512  014080  6E01               	movwf	i1cleanBuffer@data,c
 38513  014082  0E03               	movlw	high _Scroll_9
 38514  014084  6E02               	movwf	i1cleanBuffer@data+1,c
 38515  014086  0E00               	movlw	0
 38516  014088  6E04               	movwf	i1cleanBuffer@count+1,c
 38517  01408A  0E10               	movlw	16
 38518  01408C  6E03               	movwf	i1cleanBuffer@count,c
 38519  01408E  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 38520                           
 38521                           ;LCD.c: 391: }
 38522  014092  D01C               	goto	i1l10503
 38523  014094                     i1l10495:
 38524                           
 38525                           ;LCD.c: 392: else if(ScrollDisplayPosition == 11)
 38526  014094  0E0B               	movlw	11
 38527  014096  1854               	xorwf	_ScrollDisplayPosition,w,c
 38528  014098  A4D8               	btfss	status,2,c
 38529  01409A  D018               	goto	i1l10503
 38530                           
 38531                           ;LCD.c: 393: {
 38532                           ;LCD.c: 394: ClearLCD();
 38533  01409C  EC39  F007         	call	i1_ClearLCD	;wreg free
 38534                           
 38535                           ;LCD.c: 395: SetLCDcursor(0, 0);
 38536  0140A0  0E00               	movlw	0
 38537  0140A2  6E0F               	movwf	i1SetLCDcursor@Col,c
 38538  0140A4  0E00               	movlw	0
 38539  0140A6  EC33  F006         	call	i1_SetLCDcursor
 38540                           
 38541                           ;LCD.c: 396: LCDPrintString(Scroll_10);
 38542  0140AA  0E64               	movlw	low _Scroll_10
 38543  0140AC  6E0F               	movwf	i1LCDPrintString@Text,c
 38544  0140AE  0E03               	movlw	high _Scroll_10
 38545  0140B0  6E10               	movwf	i1LCDPrintString@Text+1,c
 38546  0140B2  ECB4  F0BC         	call	i1_LCDPrintString	;wreg free
 38547                           
 38548                           ;LCD.c: 397: cleanBuffer(Scroll_10, 16);
 38549  0140B6  0E64               	movlw	low _Scroll_10
 38550  0140B8  6E01               	movwf	i1cleanBuffer@data,c
 38551  0140BA  0E03               	movlw	high _Scroll_10
 38552  0140BC  6E02               	movwf	i1cleanBuffer@data+1,c
 38553  0140BE  0E00               	movlw	0
 38554  0140C0  6E04               	movwf	i1cleanBuffer@count+1,c
 38555  0140C2  0E10               	movlw	16
 38556  0140C4  6E03               	movwf	i1cleanBuffer@count,c
 38557  0140C6  ECBE  F004         	call	i1_cleanBuffer	;wreg free
 38558  0140CA  D000               	goto	i1l10503
 38559  0140CC                     i1l10503:
 38560                           
 38561                           ;LCD.c: 398: }
 38562                           ;LCD.c: 399: if(ScrollDisplayPosition > ScrollFIFOCount)
 38563  0140CC  5054               	movf	_ScrollDisplayPosition,w,c
 38564  0140CE  5C55               	subwf	_ScrollFIFOCount,w,c
 38565  0140D0  B0D8               	btfsc	status,0,c
 38566  0140D2  D004               	goto	i1l1147
 38567                           
 38568                           ;LCD.c: 400: {
 38569                           ;LCD.c: 401: ScrollFIFOCount=0;
 38570  0140D4  0E00               	movlw	0
 38571  0140D6  6E55               	movwf	_ScrollFIFOCount,c
 38572                           
 38573                           ;LCD.c: 402: ScrollDisplayPosition=0;
 38574  0140D8  0E00               	movlw	0
 38575  0140DA  6E54               	movwf	_ScrollDisplayPosition,c
 38576  0140DC                     i1l1147:
 38577                           
 38578                           ;LCD.c: 403: }
 38579                           ;LCD.c: 404: LCDclearCount = 0;
 38580  0140DC  0E00               	movlw	0
 38581  0140DE  6E4F               	movwf	_LCDclearCount,c
 38582  0140E0  0E00               	movlw	0
 38583  0140E2  6E50               	movwf	_LCDclearCount+1,c
 38584  0140E4  0E00               	movlw	0
 38585  0140E6  6E51               	movwf	_LCDclearCount+2,c
 38586  0140E8  0E00               	movlw	0
 38587  0140EA  6E52               	movwf	_LCDclearCount+3,c
 38588  0140EC  0012               	return	
 38589  0140EE  0012               	return		;funcret
 38590  0140F0                     __end_of_LCDScreenUpdate:
 38591                           	opt stack 0
 38592                           pclatu	equ	0xFFB
 38593                           pclath	equ	0xFFA
 38594                           tblptru	equ	0xFF8
 38595                           tblptrh	equ	0xFF7
 38596                           tblptrl	equ	0xFF6
 38597                           tablat	equ	0xFF5
 38598                           prodh	equ	0xFF4
 38599                           prodl	equ	0xFF3
 38600                           intcon	equ	0xFF2
 38601                           intcon2	equ	0xFF1
 38602                           indf0	equ	0xFEF
 38603                           postinc0	equ	0xFEE
 38604                           plusw0	equ	0xFEB
 38605                           fsr0h	equ	0xFEA
 38606                           fsr0l	equ	0xFE9
 38607                           wreg	equ	0xFE8
 38608                           indf1	equ	0xFE7
 38609                           postdec1	equ	0xFE5
 38610                           fsr1h	equ	0xFE2
 38611                           fsr1l	equ	0xFE1
 38612                           bsr	equ	0xFE0
 38613                           indf2	equ	0xFDF
 38614                           postinc2	equ	0xFDE
 38615                           postdec2	equ	0xFDD
 38616                           plusw2	equ	0xFDB
 38617                           fsr2h	equ	0xFDA
 38618                           fsr2l	equ	0xFD9
 38619                           status	equ	0xFD8
 38620                           
 38621 ;; *************** function i1_cleanBuffer *****************
 38622 ;; Defined at:
 38623 ;;		line 75 in file "MISC.c"
 38624 ;; Parameters:    Size  Location     Type
 38625 ;;  data            2    0[COMRAM] PTR unsigned char 
 38626 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 38627 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 38628 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 38629 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 38630 ;;  count           2    2[COMRAM] int 
 38631 ;; Auto vars:     Size  Location     Type
 38632 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 38633 ;; Return value:  Size  Location     Type
 38634 ;;		None               void
 38635 ;; Registers used:
 38636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38637 ;; Tracked objects:
 38638 ;;		On entry : 0/0
 38639 ;;		On exit  : 0/0
 38640 ;;		Unchanged: 0/0
 38641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 38642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38644 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38645 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38646 ;;Total ram usage:        8 bytes
 38647 ;; Hardware stack levels used:    1
 38648 ;; Hardware stack levels required when called:    1
 38649 ;; This function calls:
 38650 ;;		Nothing
 38651 ;; This function is called by:
 38652 ;;		_low_isr
 38653 ;;		_LCDScreenUpdate
 38654 ;;		i1_BufferCopy
 38655 ;; This function uses a non-reentrant model
 38656 ;;
 38657                           
 38658                           	psect	text126
 38659  00097C                     __ptext126:
 38660                           	opt stack 0
 38661  00097C                     i1_cleanBuffer:
 38662                           	opt stack 22
 38663                           
 38664                           ;MISC.c: 77: unsigned char i=0;
 38665                           
 38666                           ;incstack = 0
 38667  00097C  0E00               	movlw	0
 38668  00097E  6E08               	movwf	i1cleanBuffer@i,c
 38669                           
 38670                           ;MISC.c: 78: for(i=0; i<count;i++)
 38671  000980  0E00               	movlw	0
 38672  000982  6E08               	movwf	i1cleanBuffer@i,c
 38673  000984  D00C               	goto	i1l10105
 38674  000986                     i1l10101:
 38675                           
 38676                           ;MISC.c: 79: {
 38677                           ;MISC.c: 80: data[i]= 0;
 38678  000986  5008               	movf	i1cleanBuffer@i,w,c
 38679  000988  0D01               	mullw	1
 38680  00098A  50F3               	movf	prodl,w,c
 38681  00098C  2401               	addwf	i1cleanBuffer@data,w,c
 38682  00098E  6ED9               	movwf	fsr2l,c
 38683  000990  50F4               	movf	prodh,w,c
 38684  000992  2002               	addwfc	i1cleanBuffer@data+1,w,c
 38685  000994  6EDA               	movwf	fsr2h,c
 38686  000996  0E00               	movlw	0
 38687  000998  6EDF               	movwf	indf2,c
 38688  00099A  2A08               	incf	i1cleanBuffer@i,f,c
 38689  00099C  D000               	goto	i1l10105
 38690  00099E                     i1l10105:
 38691  00099E  5008               	movf	i1cleanBuffer@i,w,c
 38692  0009A0  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 38693  0009A2  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 38694  0009A4  5003               	movf	i1cleanBuffer@count,w,c
 38695  0009A6  5C05               	subwf	??i1_cleanBuffer,w,c
 38696  0009A8  5006               	movf	??i1_cleanBuffer+1,w,c
 38697  0009AA  0A80               	xorlw	128
 38698  0009AC  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 38699  0009AE  5004               	movf	i1cleanBuffer@count+1,w,c
 38700  0009B0  0A80               	xorlw	128
 38701  0009B2  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 38702  0009B4  A0D8               	btfss	status,0,c
 38703  0009B6  D7E7               	goto	i1l10101
 38704  0009B8  0012               	return		;funcret
 38705  0009BA                     __end_ofi1_cleanBuffer:
 38706                           	opt stack 0
 38707                           pclatu	equ	0xFFB
 38708                           pclath	equ	0xFFA
 38709                           tblptru	equ	0xFF8
 38710                           tblptrh	equ	0xFF7
 38711                           tblptrl	equ	0xFF6
 38712                           tablat	equ	0xFF5
 38713                           prodh	equ	0xFF4
 38714                           prodl	equ	0xFF3
 38715                           intcon	equ	0xFF2
 38716                           intcon2	equ	0xFF1
 38717                           indf0	equ	0xFEF
 38718                           postinc0	equ	0xFEE
 38719                           plusw0	equ	0xFEB
 38720                           fsr0h	equ	0xFEA
 38721                           fsr0l	equ	0xFE9
 38722                           wreg	equ	0xFE8
 38723                           indf1	equ	0xFE7
 38724                           postdec1	equ	0xFE5
 38725                           fsr1h	equ	0xFE2
 38726                           fsr1l	equ	0xFE1
 38727                           bsr	equ	0xFE0
 38728                           indf2	equ	0xFDF
 38729                           postinc2	equ	0xFDE
 38730                           postdec2	equ	0xFDD
 38731                           plusw2	equ	0xFDB
 38732                           fsr2h	equ	0xFDA
 38733                           fsr2l	equ	0xFD9
 38734                           status	equ	0xFD8
 38735                           
 38736 ;; *************** function i1_Stop_Timer1 *****************
 38737 ;; Defined at:
 38738 ;;		line 137 in file "Timer.c"
 38739 ;; Parameters:    Size  Location     Type
 38740 ;;		None
 38741 ;; Auto vars:     Size  Location     Type
 38742 ;;		None
 38743 ;; Return value:  Size  Location     Type
 38744 ;;		None               void
 38745 ;; Registers used:
 38746 ;;		None
 38747 ;; Tracked objects:
 38748 ;;		On entry : 0/0
 38749 ;;		On exit  : 0/0
 38750 ;;		Unchanged: 0/0
 38751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 38752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38756 ;;Total ram usage:        0 bytes
 38757 ;; Hardware stack levels used:    1
 38758 ;; Hardware stack levels required when called:    1
 38759 ;; This function calls:
 38760 ;;		Nothing
 38761 ;; This function is called by:
 38762 ;;		_LCDScreenUpdate
 38763 ;; This function uses a non-reentrant model
 38764 ;;
 38765                           
 38766                           	psect	text127
 38767  000F78                     __ptext127:
 38768                           	opt stack 0
 38769  000F78                     i1_Stop_Timer1:
 38770                           	opt stack 21
 38771                           
 38772                           ;Timer.c: 140: T1CONbits.TMR1ON =0;
 38773                           
 38774                           ;incstack = 0
 38775  000F78  90CD               	bcf	4045,0,c	;volatile
 38776                           
 38777                           ;Timer.c: 142: PIR1bits.TMR1IF = 0;
 38778  000F7A  909E               	bcf	3998,0,c	;volatile
 38779                           
 38780                           ;Timer.c: 143: PIE1bits.TMR1IE = 0;
 38781  000F7C  909D               	bcf	3997,0,c	;volatile
 38782  000F7E  0012               	return		;funcret
 38783  000F80                     __end_ofi1_Stop_Timer1:
 38784                           	opt stack 0
 38785                           pclatu	equ	0xFFB
 38786                           pclath	equ	0xFFA
 38787                           tblptru	equ	0xFF8
 38788                           tblptrh	equ	0xFF7
 38789                           tblptrl	equ	0xFF6
 38790                           tablat	equ	0xFF5
 38791                           prodh	equ	0xFF4
 38792                           prodl	equ	0xFF3
 38793                           intcon	equ	0xFF2
 38794                           intcon2	equ	0xFF1
 38795                           indf0	equ	0xFEF
 38796                           postinc0	equ	0xFEE
 38797                           plusw0	equ	0xFEB
 38798                           fsr0h	equ	0xFEA
 38799                           fsr0l	equ	0xFE9
 38800                           wreg	equ	0xFE8
 38801                           indf1	equ	0xFE7
 38802                           postdec1	equ	0xFE5
 38803                           fsr1h	equ	0xFE2
 38804                           fsr1l	equ	0xFE1
 38805                           bsr	equ	0xFE0
 38806                           indf2	equ	0xFDF
 38807                           postinc2	equ	0xFDE
 38808                           postdec2	equ	0xFDD
 38809                           plusw2	equ	0xFDB
 38810                           fsr2h	equ	0xFDA
 38811                           fsr2l	equ	0xFD9
 38812                           status	equ	0xFD8
 38813                           
 38814 ;; *************** function i1_SetLCDcursor *****************
 38815 ;; Defined at:
 38816 ;;		line 195 in file "LCD.c"
 38817 ;; Parameters:    Size  Location     Type
 38818 ;;  Row             1    wreg     unsigned char 
 38819 ;;  Col             1   14[COMRAM] unsigned char 
 38820 ;; Auto vars:     Size  Location     Type
 38821 ;;  Row             1   15[COMRAM] unsigned char 
 38822 ;;  SetLCDcursor    1   16[COMRAM] unsigned char 
 38823 ;; Return value:  Size  Location     Type
 38824 ;;		None               void
 38825 ;; Registers used:
 38826 ;;		wreg, status,2, status,0, cstack
 38827 ;; Tracked objects:
 38828 ;;		On entry : 0/0
 38829 ;;		On exit  : 0/0
 38830 ;;		Unchanged: 0/0
 38831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 38832 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38835 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38836 ;;Total ram usage:        3 bytes
 38837 ;; Hardware stack levels used:    1
 38838 ;; Hardware stack levels required when called:    4
 38839 ;; This function calls:
 38840 ;;		i1_SendLCDbyte
 38841 ;; This function is called by:
 38842 ;;		_low_isr
 38843 ;;		_LCDScreenUpdate
 38844 ;; This function uses a non-reentrant model
 38845 ;;
 38846                           
 38847                           	psect	text128
 38848  000C66                     __ptext128:
 38849                           	opt stack 0
 38850  000C66                     i1_SetLCDcursor:
 38851                           	opt stack 19
 38852                           
 38853                           ;incstack = 0
 38854                           ;i1SetLCDcursor@Row stored from wreg
 38855  000C66  6E10               	movwf	i1SetLCDcursor@Row,c
 38856                           
 38857                           ;LCD.c: 197: char address;
 38858                           ;LCD.c: 200: if (Row == 0)
 38859  000C68  5010               	movf	i1SetLCDcursor@Row,w,c
 38860  000C6A  A4D8               	btfss	status,2,c
 38861  000C6C  D002               	goto	i1l10117
 38862                           
 38863                           ;LCD.c: 201: {
 38864                           ;LCD.c: 202: address = 0;
 38865  000C6E  0E00               	movlw	0
 38866  000C70  D001               	goto	L32
 38867  000C72                     i1l10117:
 38868                           
 38869                           ;LCD.c: 204: else
 38870                           ;LCD.c: 205: {
 38871                           ;LCD.c: 206: address = 0x40;
 38872  000C72  0E40               	movlw	64
 38873  000C74                     L32:
 38874  000C74  6E11               	movwf	i1SetLCDcursor@address,c
 38875  000C76  D000               	goto	i1l10119
 38876  000C78                     i1l10119:
 38877                           
 38878                           ;LCD.c: 207: }
 38879                           ;LCD.c: 209: address |= Col;
 38880  000C78  500F               	movf	i1SetLCDcursor@Col,w,c
 38881  000C7A  1211               	iorwf	i1SetLCDcursor@address,f,c
 38882                           
 38883                           ;LCD.c: 210: if(!LCDwait)
 38884  000C7C  0101               	movlb	1	; () banked
 38885  000C7E  519C               	movf	_LCDwait& (0+255),w,b
 38886  000C80  A4D8               	btfss	status,2,c
 38887  000C82  0012               	return	
 38888                           
 38889                           ; BSR set to: 1
 38890                           ;LCD.c: 211: {
 38891                           ;LCD.c: 212: SendLCDbyte(0x80 | address, 0);
 38892  000C84  0E00               	movlw	0
 38893  000C86  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 38894  000C88  5011               	movf	i1SetLCDcursor@address,w,c
 38895  000C8A  0980               	iorlw	128
 38896  000C8C  ECCD  F0B3         	call	i1_SendLCDbyte
 38897  000C90  0012               	return	
 38898  000C92  0012               	return		;funcret
 38899  000C94                     __end_ofi1_SetLCDcursor:
 38900                           	opt stack 0
 38901                           pclatu	equ	0xFFB
 38902                           pclath	equ	0xFFA
 38903                           tblptru	equ	0xFF8
 38904                           tblptrh	equ	0xFF7
 38905                           tblptrl	equ	0xFF6
 38906                           tablat	equ	0xFF5
 38907                           prodh	equ	0xFF4
 38908                           prodl	equ	0xFF3
 38909                           intcon	equ	0xFF2
 38910                           intcon2	equ	0xFF1
 38911                           indf0	equ	0xFEF
 38912                           postinc0	equ	0xFEE
 38913                           plusw0	equ	0xFEB
 38914                           fsr0h	equ	0xFEA
 38915                           fsr0l	equ	0xFE9
 38916                           wreg	equ	0xFE8
 38917                           indf1	equ	0xFE7
 38918                           postdec1	equ	0xFE5
 38919                           fsr1h	equ	0xFE2
 38920                           fsr1l	equ	0xFE1
 38921                           bsr	equ	0xFE0
 38922                           indf2	equ	0xFDF
 38923                           postinc2	equ	0xFDE
 38924                           postdec2	equ	0xFDD
 38925                           plusw2	equ	0xFDB
 38926                           fsr2h	equ	0xFDA
 38927                           fsr2l	equ	0xFD9
 38928                           status	equ	0xFD8
 38929                           
 38930 ;; *************** function i1_LCDPrintString *****************
 38931 ;; Defined at:
 38932 ;;		line 236 in file "LCD.c"
 38933 ;; Parameters:    Size  Location     Type
 38934 ;;  Text            2   14[COMRAM] PTR const unsigned char 
 38935 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 38936 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 38937 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 38938 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 38939 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 38940 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 38941 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 38942 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 38943 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 38944 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 38945 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 38946 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 38947 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 38948 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 38949 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 38950 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 38951 ;;		 -> low_isr@LCD_TEMP(16), 
 38952 ;; Auto vars:     Size  Location     Type
 38953 ;;  LCDPrintStri    2   16[COMRAM] PTR unsigned char 
 38954 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 38955 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 38956 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 38957 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 38958 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 38959 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 38960 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 38961 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 38962 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 38963 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 38964 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 38965 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 38966 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 38967 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 38968 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 38969 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 38970 ;;		 -> low_isr@LCD_TEMP(16), 
 38971 ;; Return value:  Size  Location     Type
 38972 ;;		None               void
 38973 ;; Registers used:
 38974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38975 ;; Tracked objects:
 38976 ;;		On entry : 0/0
 38977 ;;		On exit  : 0/0
 38978 ;;		Unchanged: 0/0
 38979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 38980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38981 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38983 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38984 ;;Total ram usage:        4 bytes
 38985 ;; Hardware stack levels used:    1
 38986 ;; Hardware stack levels required when called:    4
 38987 ;; This function calls:
 38988 ;;		i1_SendLCDbyte
 38989 ;; This function is called by:
 38990 ;;		_low_isr
 38991 ;;		_LCDScreenUpdate
 38992 ;; This function uses a non-reentrant model
 38993 ;;
 38994                           
 38995                           	psect	text129
 38996  017968                     __ptext129:
 38997                           	opt stack 0
 38998  017968                     i1_LCDPrintString:
 38999                           	opt stack 19
 39000                           
 39001                           ;LCD.c: 238: unsigned char *c;
 39002                           ;LCD.c: 240: c = (unsigned char*)Text;
 39003                           
 39004                           ;incstack = 0
 39005  017968  C00F  F011         	movff	i1LCDPrintString@Text,i1LCDPrintString@c
 39006  01796C  C010  F012         	movff	i1LCDPrintString@Text+1,i1LCDPrintString@c+1
 39007                           
 39008                           ;LCD.c: 242: while ((c != 0) && (*c != 0))
 39009  017970  D018               	goto	i1l10133
 39010  017972                     i1l10129:
 39011                           
 39012                           ;LCD.c: 243: {
 39013                           ;LCD.c: 244: SendLCDbyte(*c, 1);
 39014  017972  0E01               	movlw	1
 39015  017974  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 39016  017976  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 39017  01797A  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 39018  01797E  0E00               	movlw	low (__mediumconst shr (0+16))
 39019  017980  6EF8               	movwf	tblptru,c
 39020  017982  0E0C               	movlw	(high __ramtop+-1)
 39021  017984  64F7               	cpfsgt	tblptrh,c
 39022  017986  D003               	bra	i1u1184_27
 39023  017988  0008               	tblrd		*
 39024  01798A  50F5               	movf	tablat,w,c
 39025  01798C  D005               	bra	i1u1184_20
 39026  01798E                     i1u1184_27:
 39027  01798E  CFF6 FFE9          	movff	tblptrl,fsr0l
 39028  017992  CFF7 FFEA          	movff	tblptrh,fsr0h
 39029  017996  50EF               	movf	indf0,w,c
 39030  017998                     i1u1184_20:
 39031  017998  ECCD  F0B3         	call	i1_SendLCDbyte
 39032                           
 39033                           ;LCD.c: 245: c++;
 39034  01799C  4A11               	infsnz	i1LCDPrintString@c,f,c
 39035  01799E  2A12               	incf	i1LCDPrintString@c+1,f,c
 39036  0179A0  D000               	goto	i1l10133
 39037  0179A2                     i1l10133:
 39038  0179A2  5011               	movf	i1LCDPrintString@c,w,c
 39039  0179A4  1012               	iorwf	i1LCDPrintString@c+1,w,c
 39040  0179A6  B4D8               	btfsc	status,2,c
 39041  0179A8  0012               	return	
 39042  0179AA  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 39043  0179AE  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 39044  0179B2  0E00               	movlw	low (__mediumconst shr (0+16))
 39045  0179B4  6EF8               	movwf	tblptru,c
 39046  0179B6  0E0C               	movlw	(high __ramtop+-1)
 39047  0179B8  64F7               	cpfsgt	tblptrh,c
 39048  0179BA  D003               	bra	i1u1186_27
 39049  0179BC  0008               	tblrd		*
 39050  0179BE  50F5               	movf	tablat,w,c
 39051  0179C0  D005               	bra	i1u1186_20
 39052  0179C2                     i1u1186_27:
 39053  0179C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 39054  0179C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 39055  0179CA  50EF               	movf	indf0,w,c
 39056  0179CC                     i1u1186_20:
 39057  0179CC  0900               	iorlw	0
 39058  0179CE  B4D8               	btfsc	status,2,c
 39059  0179D0  0012               	return	
 39060  0179D2  D7CF               	goto	i1l10129
 39061  0179D4  0012               	return	
 39062  0179D6  0012               	return		;funcret
 39063  0179D8                     __end_ofi1_LCDPrintString:
 39064                           	opt stack 0
 39065                           pclatu	equ	0xFFB
 39066                           pclath	equ	0xFFA
 39067                           tblptru	equ	0xFF8
 39068                           tblptrh	equ	0xFF7
 39069                           tblptrl	equ	0xFF6
 39070                           tablat	equ	0xFF5
 39071                           prodh	equ	0xFF4
 39072                           prodl	equ	0xFF3
 39073                           intcon	equ	0xFF2
 39074                           intcon2	equ	0xFF1
 39075                           indf0	equ	0xFEF
 39076                           postinc0	equ	0xFEE
 39077                           plusw0	equ	0xFEB
 39078                           fsr0h	equ	0xFEA
 39079                           fsr0l	equ	0xFE9
 39080                           wreg	equ	0xFE8
 39081                           indf1	equ	0xFE7
 39082                           postdec1	equ	0xFE5
 39083                           fsr1h	equ	0xFE2
 39084                           fsr1l	equ	0xFE1
 39085                           bsr	equ	0xFE0
 39086                           indf2	equ	0xFDF
 39087                           postinc2	equ	0xFDE
 39088                           postdec2	equ	0xFDD
 39089                           plusw2	equ	0xFDB
 39090                           fsr2h	equ	0xFDA
 39091                           fsr2l	equ	0xFD9
 39092                           status	equ	0xFD8
 39093                           
 39094 ;; *************** function i1_LCDPrintChar *****************
 39095 ;; Defined at:
 39096 ;;		line 271 in file "LCD.c"
 39097 ;; Parameters:    Size  Location     Type
 39098 ;;  character       1    wreg     unsigned char 
 39099 ;; Auto vars:     Size  Location     Type
 39100 ;;  character       1   14[COMRAM] unsigned char 
 39101 ;; Return value:  Size  Location     Type
 39102 ;;		None               void
 39103 ;; Registers used:
 39104 ;;		wreg, status,2, status,0, cstack
 39105 ;; Tracked objects:
 39106 ;;		On entry : 0/0
 39107 ;;		On exit  : 0/0
 39108 ;;		Unchanged: 0/0
 39109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 39110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39114 ;;Total ram usage:        1 bytes
 39115 ;; Hardware stack levels used:    1
 39116 ;; Hardware stack levels required when called:    4
 39117 ;; This function calls:
 39118 ;;		i1_SendLCDbyte
 39119 ;; This function is called by:
 39120 ;;		_low_isr
 39121 ;;		_LCDScreenUpdate
 39122 ;; This function uses a non-reentrant model
 39123 ;;
 39124                           
 39125                           	psect	text130
 39126  000F2E                     __ptext130:
 39127                           	opt stack 0
 39128  000F2E                     i1_LCDPrintChar:
 39129                           	opt stack 19
 39130                           
 39131                           ;incstack = 0
 39132                           ;i1LCDPrintChar@character stored from wreg
 39133  000F2E  6E0F               	movwf	i1LCDPrintChar@character,c
 39134                           
 39135                           ;LCD.c: 273: SendLCDbyte(character, 1);
 39136  000F30  0E01               	movlw	1
 39137  000F32  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 39138  000F34  500F               	movf	i1LCDPrintChar@character,w,c
 39139  000F36  ECCD  F0B3         	call	i1_SendLCDbyte
 39140  000F3A  0012               	return		;funcret
 39141  000F3C                     __end_ofi1_LCDPrintChar:
 39142                           	opt stack 0
 39143                           pclatu	equ	0xFFB
 39144                           pclath	equ	0xFFA
 39145                           tblptru	equ	0xFF8
 39146                           tblptrh	equ	0xFF7
 39147                           tblptrl	equ	0xFF6
 39148                           tablat	equ	0xFF5
 39149                           prodh	equ	0xFF4
 39150                           prodl	equ	0xFF3
 39151                           intcon	equ	0xFF2
 39152                           intcon2	equ	0xFF1
 39153                           indf0	equ	0xFEF
 39154                           postinc0	equ	0xFEE
 39155                           plusw0	equ	0xFEB
 39156                           fsr0h	equ	0xFEA
 39157                           fsr0l	equ	0xFE9
 39158                           wreg	equ	0xFE8
 39159                           indf1	equ	0xFE7
 39160                           postdec1	equ	0xFE5
 39161                           fsr1h	equ	0xFE2
 39162                           fsr1l	equ	0xFE1
 39163                           bsr	equ	0xFE0
 39164                           indf2	equ	0xFDF
 39165                           postinc2	equ	0xFDE
 39166                           postdec2	equ	0xFDD
 39167                           plusw2	equ	0xFDB
 39168                           fsr2h	equ	0xFDA
 39169                           fsr2l	equ	0xFD9
 39170                           status	equ	0xFD8
 39171                           
 39172 ;; *************** function i1_ClearLCD *****************
 39173 ;; Defined at:
 39174 ;;		line 222 in file "LCD.c"
 39175 ;; Parameters:    Size  Location     Type
 39176 ;;		None
 39177 ;; Auto vars:     Size  Location     Type
 39178 ;;		None
 39179 ;; Return value:  Size  Location     Type
 39180 ;;		None               void
 39181 ;; Registers used:
 39182 ;;		wreg, status,2, status,0, cstack
 39183 ;; Tracked objects:
 39184 ;;		On entry : 0/0
 39185 ;;		On exit  : 0/0
 39186 ;;		Unchanged: 0/0
 39187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 39188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39192 ;;Total ram usage:        0 bytes
 39193 ;; Hardware stack levels used:    1
 39194 ;; Hardware stack levels required when called:    4
 39195 ;; This function calls:
 39196 ;;		i1_SendLCDbyte
 39197 ;; This function is called by:
 39198 ;;		_low_isr
 39199 ;;		_LCDScreenUpdate
 39200 ;; This function uses a non-reentrant model
 39201 ;;
 39202                           
 39203                           	psect	text131
 39204  000E72                     __ptext131:
 39205                           	opt stack 0
 39206  000E72                     i1_ClearLCD:
 39207                           	opt stack 19
 39208                           
 39209                           ;LCD.c: 227: SendLCDbyte(0x01, 0);
 39210                           
 39211                           ;incstack = 0
 39212  000E72  0E00               	movlw	0
 39213  000E74  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 39214  000E76  0E01               	movlw	1
 39215  000E78  ECCD  F0B3         	call	i1_SendLCDbyte
 39216                           
 39217                           ;LCD.c: 228: SendLCDbyte(0x02, 0);
 39218  000E7C  0E00               	movlw	0
 39219  000E7E  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 39220  000E80  0E02               	movlw	2
 39221  000E82  ECCD  F0B3         	call	i1_SendLCDbyte
 39222  000E86  0012               	return		;funcret
 39223  000E88                     __end_ofi1_ClearLCD:
 39224                           	opt stack 0
 39225                           pclatu	equ	0xFFB
 39226                           pclath	equ	0xFFA
 39227                           tblptru	equ	0xFF8
 39228                           tblptrh	equ	0xFF7
 39229                           tblptrl	equ	0xFF6
 39230                           tablat	equ	0xFF5
 39231                           prodh	equ	0xFF4
 39232                           prodl	equ	0xFF3
 39233                           intcon	equ	0xFF2
 39234                           intcon2	equ	0xFF1
 39235                           indf0	equ	0xFEF
 39236                           postinc0	equ	0xFEE
 39237                           plusw0	equ	0xFEB
 39238                           fsr0h	equ	0xFEA
 39239                           fsr0l	equ	0xFE9
 39240                           wreg	equ	0xFE8
 39241                           indf1	equ	0xFE7
 39242                           postdec1	equ	0xFE5
 39243                           fsr1h	equ	0xFE2
 39244                           fsr1l	equ	0xFE1
 39245                           bsr	equ	0xFE0
 39246                           indf2	equ	0xFDF
 39247                           postinc2	equ	0xFDE
 39248                           postdec2	equ	0xFDD
 39249                           plusw2	equ	0xFDB
 39250                           fsr2h	equ	0xFDA
 39251                           fsr2l	equ	0xFD9
 39252                           status	equ	0xFD8
 39253                           
 39254 ;; *************** function i1_SendLCDbyte *****************
 39255 ;; Defined at:
 39256 ;;		line 109 in file "LCD.c"
 39257 ;; Parameters:    Size  Location     Type
 39258 ;;  data            1    wreg     unsigned char 
 39259 ;;  isCommand       1   10[COMRAM] unsigned char 
 39260 ;; Auto vars:     Size  Location     Type
 39261 ;;  data            1   11[COMRAM] unsigned char 
 39262 ;;  SendLCDbyte     1   13[COMRAM] unsigned char 
 39263 ;;  SendLCDbyte     1   12[COMRAM] unsigned char 
 39264 ;; Return value:  Size  Location     Type
 39265 ;;		None               void
 39266 ;; Registers used:
 39267 ;;		wreg, status,2, status,0, cstack
 39268 ;; Tracked objects:
 39269 ;;		On entry : 0/0
 39270 ;;		On exit  : 0/0
 39271 ;;		Unchanged: 0/0
 39272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 39273 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39274 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39276 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39277 ;;Total ram usage:        4 bytes
 39278 ;; Hardware stack levels used:    1
 39279 ;; Hardware stack levels required when called:    3
 39280 ;; This function calls:
 39281 ;;		i1_PulseEnablePin
 39282 ;;		i1_delayUS
 39283 ;; This function is called by:
 39284 ;;		i1_SetLCDcursor
 39285 ;;		i1_ClearLCD
 39286 ;;		i1_LCDPrintString
 39287 ;;		i1_LCDPrintChar
 39288 ;; This function uses a non-reentrant model
 39289 ;;
 39290                           
 39291                           	psect	text132
 39292  01679A                     __ptext132:
 39293                           	opt stack 0
 39294  01679A                     i1_SendLCDbyte:
 39295                           	opt stack 19
 39296                           
 39297                           ;incstack = 0
 39298                           ;i1SendLCDbyte@data stored from wreg
 39299  01679A  6E0C               	movwf	i1SendLCDbyte@data,c
 39300                           
 39301                           ;LCD.c: 111: unsigned char MSB_nibble=0;
 39302  01679C  0E00               	movlw	0
 39303  01679E  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 39304                           
 39305                           ;LCD.c: 112: unsigned char LSB_nibble=0;
 39306  0167A0  0E00               	movlw	0
 39307  0167A2  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 39308                           
 39309                           ;LCD.c: 114: LATA &= ~(0b00001000+0b00010000+0b00100000);
 39310  0167A4  0EC7               	movlw	199
 39311  0167A6  1689               	andwf	3977,f,c	;volatile
 39312                           
 39313                           ;LCD.c: 115: LATE &= ~0b00000001;
 39314  0167A8  908D               	bcf	3981,0,c	;volatile
 39315                           
 39316                           ;LCD.c: 116: LATD &= ~(0b10000000 + 0b00100000);
 39317  0167AA  0E5F               	movlw	95
 39318  0167AC  168C               	andwf	3980,f,c	;volatile
 39319                           
 39320                           ;LCD.c: 117: delayUS(10);
 39321  0167AE  0E0A               	movlw	10
 39322  0167B0  6E01               	movwf	i1delayUS@US,c
 39323  0167B2  0E00               	movlw	0
 39324  0167B4  6E02               	movwf	i1delayUS@US+1,c
 39325  0167B6  0E00               	movlw	0
 39326  0167B8  6E03               	movwf	i1delayUS@US+2,c
 39327  0167BA  0E00               	movlw	0
 39328  0167BC  6E04               	movwf	i1delayUS@US+3,c
 39329  0167BE  ECA8  F003         	call	i1_delayUS	;wreg free
 39330                           
 39331                           ;LCD.c: 118: MSB_nibble = (data & 0xF0)>>4;
 39332  0167C2  380C               	swapf	i1SendLCDbyte@data,w,c
 39333  0167C4  0B0F               	andlw	15
 39334  0167C6  0B0F               	andlw	15
 39335  0167C8  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 39336                           
 39337                           ;LCD.c: 119: LSB_nibble = (data & 0x0F);
 39338  0167CA  500C               	movf	i1SendLCDbyte@data,w,c
 39339  0167CC  0B0F               	andlw	15
 39340  0167CE  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 39341                           
 39342                           ;LCD.c: 120: if(!LCDwait)
 39343  0167D0  0101               	movlb	1	; () banked
 39344  0167D2  519C               	movf	_LCDwait& (0+255),w,b
 39345  0167D4  A4D8               	btfss	status,2,c
 39346  0167D6  D039               	goto	i1l9043
 39347                           
 39348                           ; BSR set to: 1
 39349                           ;LCD.c: 121: {
 39350                           ;LCD.c: 122: if(isCommand)
 39351  0167D8  500B               	movf	i1SendLCDbyte@isCommand,w,c
 39352  0167DA  B4D8               	btfsc	status,2,c
 39353  0167DC  D002               	goto	i1l8999
 39354                           
 39355                           ; BSR set to: 1
 39356                           ;LCD.c: 123: {
 39357                           ;LCD.c: 124: LATD |= (0b00100000);
 39358  0167DE  8A8C               	bsf	3980,5,c	;volatile
 39359                           
 39360                           ;LCD.c: 125: }
 39361  0167E0  D002               	goto	i1l9001
 39362  0167E2                     i1l8999:
 39363                           
 39364                           ; BSR set to: 1
 39365                           ;LCD.c: 126: else
 39366                           ;LCD.c: 127: {
 39367                           ;LCD.c: 128: LATD &= ~(0b00100000);
 39368  0167E2  9A8C               	bcf	3980,5,c	;volatile
 39369  0167E4  D000               	goto	i1l9001
 39370  0167E6                     i1l9001:
 39371                           
 39372                           ; BSR set to: 1
 39373                           ;LCD.c: 129: }
 39374                           ;LCD.c: 130: if(MSB_nibble&0b1000)
 39375  0167E6  A60D               	btfss	i1SendLCDbyte@MSB_nibble,3,c
 39376  0167E8  D002               	goto	i1l9005
 39377                           
 39378                           ; BSR set to: 1
 39379                           ;LCD.c: 131: {
 39380                           ;LCD.c: 132: LATA |= 0b00001000;
 39381  0167EA  8689               	bsf	3977,3,c	;volatile
 39382  0167EC  D000               	goto	i1l9005
 39383  0167EE                     i1l9005:
 39384                           
 39385                           ; BSR set to: 1
 39386                           ;LCD.c: 133: }
 39387                           ;LCD.c: 134: if(MSB_nibble&0b0100)
 39388  0167EE  A40D               	btfss	i1SendLCDbyte@MSB_nibble,2,c
 39389  0167F0  D002               	goto	i1l9009
 39390                           
 39391                           ; BSR set to: 1
 39392                           ;LCD.c: 135: {
 39393                           ;LCD.c: 136: LATA |= 0b00010000;
 39394  0167F2  8889               	bsf	3977,4,c	;volatile
 39395  0167F4  D000               	goto	i1l9009
 39396  0167F6                     i1l9009:
 39397                           
 39398                           ; BSR set to: 1
 39399                           ;LCD.c: 137: }
 39400                           ;LCD.c: 138: if(MSB_nibble&0b0010)
 39401  0167F6  A20D               	btfss	i1SendLCDbyte@MSB_nibble,1,c
 39402  0167F8  D002               	goto	i1l9013
 39403                           
 39404                           ; BSR set to: 1
 39405                           ;LCD.c: 139: {
 39406                           ;LCD.c: 140: LATA |= 0b00100000;
 39407  0167FA  8A89               	bsf	3977,5,c	;volatile
 39408  0167FC  D000               	goto	i1l9013
 39409  0167FE                     i1l9013:
 39410                           
 39411                           ; BSR set to: 1
 39412                           ;LCD.c: 141: }
 39413                           ;LCD.c: 142: if(MSB_nibble&0b0001)
 39414  0167FE  A00D               	btfss	i1SendLCDbyte@MSB_nibble,0,c
 39415  016800  D002               	goto	i1l9017
 39416                           
 39417                           ; BSR set to: 1
 39418                           ;LCD.c: 143: {
 39419                           ;LCD.c: 144: LATE |= 0b00000001;
 39420  016802  808D               	bsf	3981,0,c	;volatile
 39421  016804  D000               	goto	i1l9017
 39422  016806                     i1l9017:
 39423                           
 39424                           ; BSR set to: 1
 39425                           ;LCD.c: 145: }
 39426                           ;LCD.c: 146: PulseEnablePin();
 39427  016806  EC4A  F006         	call	i1_PulseEnablePin	;wreg free
 39428                           
 39429                           ;LCD.c: 147: LATA &= ~(0b00001000+0b00010000+0b00100000);
 39430  01680A  0EC7               	movlw	199
 39431  01680C  1689               	andwf	3977,f,c	;volatile
 39432                           
 39433                           ;LCD.c: 148: LATE &= ~0b00000001;
 39434  01680E  908D               	bcf	3981,0,c	;volatile
 39435                           
 39436                           ;LCD.c: 149: delayUS(10);
 39437  016810  0E0A               	movlw	10
 39438  016812  6E01               	movwf	i1delayUS@US,c
 39439  016814  0E00               	movlw	0
 39440  016816  6E02               	movwf	i1delayUS@US+1,c
 39441  016818  0E00               	movlw	0
 39442  01681A  6E03               	movwf	i1delayUS@US+2,c
 39443  01681C  0E00               	movlw	0
 39444  01681E  6E04               	movwf	i1delayUS@US+3,c
 39445  016820  ECA8  F003         	call	i1_delayUS	;wreg free
 39446                           
 39447                           ;LCD.c: 150: if(LSB_nibble&0b1000)
 39448  016824  A60E               	btfss	i1SendLCDbyte@LSB_nibble,3,c
 39449  016826  D002               	goto	i1l9029
 39450                           
 39451                           ;LCD.c: 151: {
 39452                           ;LCD.c: 152: LATA |= 0b00001000;
 39453  016828  8689               	bsf	3977,3,c	;volatile
 39454  01682A  D000               	goto	i1l9029
 39455  01682C                     i1l9029:
 39456                           
 39457                           ;LCD.c: 153: }
 39458                           ;LCD.c: 154: if(LSB_nibble&0b0100)
 39459  01682C  A40E               	btfss	i1SendLCDbyte@LSB_nibble,2,c
 39460  01682E  D002               	goto	i1l9033
 39461                           
 39462                           ;LCD.c: 155: {
 39463                           ;LCD.c: 156: LATA |= 0b00010000;
 39464  016830  8889               	bsf	3977,4,c	;volatile
 39465  016832  D000               	goto	i1l9033
 39466  016834                     i1l9033:
 39467                           
 39468                           ;LCD.c: 157: }
 39469                           ;LCD.c: 158: if(LSB_nibble&0b0010)
 39470  016834  A20E               	btfss	i1SendLCDbyte@LSB_nibble,1,c
 39471  016836  D002               	goto	i1l9037
 39472                           
 39473                           ;LCD.c: 159: {
 39474                           ;LCD.c: 160: LATA |= 0b00100000;
 39475  016838  8A89               	bsf	3977,5,c	;volatile
 39476  01683A  D000               	goto	i1l9037
 39477  01683C                     i1l9037:
 39478                           
 39479                           ;LCD.c: 161: }
 39480                           ;LCD.c: 162: if(LSB_nibble&0b0001)
 39481  01683C  A00E               	btfss	i1SendLCDbyte@LSB_nibble,0,c
 39482  01683E  D002               	goto	i1l9041
 39483                           
 39484                           ;LCD.c: 163: {
 39485                           ;LCD.c: 164: LATE |= 0b00000001;
 39486  016840  808D               	bsf	3981,0,c	;volatile
 39487  016842  D000               	goto	i1l9041
 39488  016844                     i1l9041:
 39489                           
 39490                           ;LCD.c: 165: }
 39491                           ;LCD.c: 166: PulseEnablePin();
 39492  016844  EC4A  F006         	call	i1_PulseEnablePin	;wreg free
 39493                           
 39494                           ;LCD.c: 167: }
 39495  016848  0012               	return	
 39496  01684A                     i1l9043:
 39497                           
 39498                           ;LCD.c: 168: else
 39499                           ;LCD.c: 169: {
 39500                           ;LCD.c: 170: delayUS(20);
 39501  01684A  0E14               	movlw	20
 39502  01684C  6E01               	movwf	i1delayUS@US,c
 39503  01684E  0E00               	movlw	0
 39504  016850  6E02               	movwf	i1delayUS@US+1,c
 39505  016852  0E00               	movlw	0
 39506  016854  6E03               	movwf	i1delayUS@US+2,c
 39507  016856  0E00               	movlw	0
 39508  016858  6E04               	movwf	i1delayUS@US+3,c
 39509  01685A  ECA8  F003         	call	i1_delayUS	;wreg free
 39510  01685E  0012               	return	
 39511  016860  0012               	return		;funcret
 39512  016862                     __end_ofi1_SendLCDbyte:
 39513                           	opt stack 0
 39514                           pclatu	equ	0xFFB
 39515                           pclath	equ	0xFFA
 39516                           tblptru	equ	0xFF8
 39517                           tblptrh	equ	0xFF7
 39518                           tblptrl	equ	0xFF6
 39519                           tablat	equ	0xFF5
 39520                           prodh	equ	0xFF4
 39521                           prodl	equ	0xFF3
 39522                           intcon	equ	0xFF2
 39523                           intcon2	equ	0xFF1
 39524                           indf0	equ	0xFEF
 39525                           postinc0	equ	0xFEE
 39526                           plusw0	equ	0xFEB
 39527                           fsr0h	equ	0xFEA
 39528                           fsr0l	equ	0xFE9
 39529                           wreg	equ	0xFE8
 39530                           indf1	equ	0xFE7
 39531                           postdec1	equ	0xFE5
 39532                           fsr1h	equ	0xFE2
 39533                           fsr1l	equ	0xFE1
 39534                           bsr	equ	0xFE0
 39535                           indf2	equ	0xFDF
 39536                           postinc2	equ	0xFDE
 39537                           postdec2	equ	0xFDD
 39538                           plusw2	equ	0xFDB
 39539                           fsr2h	equ	0xFDA
 39540                           fsr2l	equ	0xFD9
 39541                           status	equ	0xFD8
 39542                           
 39543 ;; *************** function i1_PulseEnablePin *****************
 39544 ;; Defined at:
 39545 ;;		line 180 in file "LCD.c"
 39546 ;; Parameters:    Size  Location     Type
 39547 ;;		None
 39548 ;; Auto vars:     Size  Location     Type
 39549 ;;		None
 39550 ;; Return value:  Size  Location     Type
 39551 ;;		None               void
 39552 ;; Registers used:
 39553 ;;		wreg, status,2, status,0, cstack
 39554 ;; Tracked objects:
 39555 ;;		On entry : 0/0
 39556 ;;		On exit  : 0/0
 39557 ;;		Unchanged: 0/0
 39558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 39559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39563 ;;Total ram usage:        0 bytes
 39564 ;; Hardware stack levels used:    1
 39565 ;; Hardware stack levels required when called:    2
 39566 ;; This function calls:
 39567 ;;		i1_delayUS
 39568 ;; This function is called by:
 39569 ;;		i1_SendLCDbyte
 39570 ;; This function uses a non-reentrant model
 39571 ;;
 39572                           
 39573                           	psect	text133
 39574  000C94                     __ptext133:
 39575                           	opt stack 0
 39576  000C94                     i1_PulseEnablePin:
 39577                           	opt stack 19
 39578                           
 39579                           ;LCD.c: 183: LATD |= (0b10000000);
 39580                           
 39581                           ;incstack = 0
 39582  000C94  8E8C               	bsf	3980,7,c	;volatile
 39583                           
 39584                           ;LCD.c: 184: delayUS(2500);
 39585  000C96  0EC4               	movlw	196
 39586  000C98  6E01               	movwf	i1delayUS@US,c
 39587  000C9A  0E09               	movlw	9
 39588  000C9C  6E02               	movwf	i1delayUS@US+1,c
 39589  000C9E  0E00               	movlw	0
 39590  000CA0  6E03               	movwf	i1delayUS@US+2,c
 39591  000CA2  0E00               	movlw	0
 39592  000CA4  6E04               	movwf	i1delayUS@US+3,c
 39593  000CA6  ECA8  F003         	call	i1_delayUS	;wreg free
 39594                           
 39595                           ;LCD.c: 186: LATD &= ~(0b10000000);
 39596  000CAA  9E8C               	bcf	3980,7,c	;volatile
 39597                           
 39598                           ;LCD.c: 187: delayUS(2500);
 39599  000CAC  0EC4               	movlw	196
 39600  000CAE  6E01               	movwf	i1delayUS@US,c
 39601  000CB0  0E09               	movlw	9
 39602  000CB2  6E02               	movwf	i1delayUS@US+1,c
 39603  000CB4  0E00               	movlw	0
 39604  000CB6  6E03               	movwf	i1delayUS@US+2,c
 39605  000CB8  0E00               	movlw	0
 39606  000CBA  6E04               	movwf	i1delayUS@US+3,c
 39607  000CBC  ECA8  F003         	call	i1_delayUS	;wreg free
 39608  000CC0  0012               	return		;funcret
 39609  000CC2                     __end_ofi1_PulseEnablePin:
 39610                           	opt stack 0
 39611                           pclatu	equ	0xFFB
 39612                           pclath	equ	0xFFA
 39613                           tblptru	equ	0xFF8
 39614                           tblptrh	equ	0xFF7
 39615                           tblptrl	equ	0xFF6
 39616                           tablat	equ	0xFF5
 39617                           prodh	equ	0xFF4
 39618                           prodl	equ	0xFF3
 39619                           intcon	equ	0xFF2
 39620                           intcon2	equ	0xFF1
 39621                           indf0	equ	0xFEF
 39622                           postinc0	equ	0xFEE
 39623                           plusw0	equ	0xFEB
 39624                           fsr0h	equ	0xFEA
 39625                           fsr0l	equ	0xFE9
 39626                           wreg	equ	0xFE8
 39627                           indf1	equ	0xFE7
 39628                           postdec1	equ	0xFE5
 39629                           fsr1h	equ	0xFE2
 39630                           fsr1l	equ	0xFE1
 39631                           bsr	equ	0xFE0
 39632                           indf2	equ	0xFDF
 39633                           postinc2	equ	0xFDE
 39634                           postdec2	equ	0xFDD
 39635                           plusw2	equ	0xFDB
 39636                           fsr2h	equ	0xFDA
 39637                           fsr2l	equ	0xFD9
 39638                           status	equ	0xFD8
 39639                           
 39640 ;; *************** function i1_delayUS *****************
 39641 ;; Defined at:
 39642 ;;		line 57 in file "MISC.c"
 39643 ;; Parameters:    Size  Location     Type
 39644 ;;  US              4    0[COMRAM] long 
 39645 ;; Auto vars:     Size  Location     Type
 39646 ;;  delayUS         4    5[COMRAM] long 
 39647 ;;  delayUS         1    9[COMRAM] unsigned char 
 39648 ;; Return value:  Size  Location     Type
 39649 ;;		None               void
 39650 ;; Registers used:
 39651 ;;		wreg, status,2, status,0
 39652 ;; Tracked objects:
 39653 ;;		On entry : 0/0
 39654 ;;		On exit  : 0/0
 39655 ;;		Unchanged: 0/0
 39656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 39657 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39658 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39659 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39660 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39661 ;;Total ram usage:       10 bytes
 39662 ;; Hardware stack levels used:    1
 39663 ;; Hardware stack levels required when called:    1
 39664 ;; This function calls:
 39665 ;;		Nothing
 39666 ;; This function is called by:
 39667 ;;		_UseIRCode
 39668 ;;		i1_SendLCDbyte
 39669 ;;		i1_PulseEnablePin
 39670 ;; This function uses a non-reentrant model
 39671 ;;
 39672                           
 39673                           	psect	text134
 39674  000750                     __ptext134:
 39675                           	opt stack 0
 39676  000750                     i1_delayUS:
 39677                           	opt stack 20
 39678                           
 39679                           ;MISC.c: 59: long i;
 39680                           ;MISC.c: 60: unsigned char j;
 39681                           ;MISC.c: 61: for(i=0;i<US;i+=31)
 39682                           
 39683                           ;incstack = 0
 39684  000750  0E00               	movlw	0
 39685  000752  6E06               	movwf	i1delayUS@i,c
 39686  000754  0E00               	movlw	0
 39687  000756  6E07               	movwf	i1delayUS@i+1,c
 39688  000758  0E00               	movlw	0
 39689  00075A  6E08               	movwf	i1delayUS@i+2,c
 39690  00075C  0E00               	movlw	0
 39691  00075E  6E09               	movwf	i1delayUS@i+3,c
 39692  000760  D00F               	goto	i1l282
 39693  000762                     i1l7397:
 39694                           
 39695                           ;MISC.c: 62: {
 39696                           ;MISC.c: 63: for(j=0;j<41;j++)
 39697  000762  0E00               	movlw	0
 39698  000764  6E0A               	movwf	i1delayUS@j,c
 39699  000766                     i1l7399:
 39700  000766  0E28               	movlw	40
 39701  000768  640A               	cpfsgt	i1delayUS@j,c
 39702  00076A  D001               	goto	i1l284
 39703  00076C  D003               	goto	i1l7407
 39704  00076E                     i1l284:
 39705                           
 39706                           ;MISC.c: 64: {
 39707                           ;MISC.c: 65: __nop();
 39708  00076E  F000               	nop	
 39709  000770  2A0A               	incf	i1delayUS@j,f,c
 39710  000772  D7F9               	goto	i1l7399
 39711  000774                     i1l7407:
 39712  000774  0E1F               	movlw	31
 39713  000776  2606               	addwf	i1delayUS@i,f,c
 39714  000778  0E00               	movlw	0
 39715  00077A  2207               	addwfc	i1delayUS@i+1,f,c
 39716  00077C  2208               	addwfc	i1delayUS@i+2,f,c
 39717  00077E  2209               	addwfc	i1delayUS@i+3,f,c
 39718  000780                     i1l282:
 39719  000780  5001               	movf	i1delayUS@US,w,c
 39720  000782  5C06               	subwf	i1delayUS@i,w,c
 39721  000784  5002               	movf	i1delayUS@US+1,w,c
 39722  000786  5807               	subwfb	i1delayUS@i+1,w,c
 39723  000788  5003               	movf	i1delayUS@US+2,w,c
 39724  00078A  5808               	subwfb	i1delayUS@i+2,w,c
 39725  00078C  5009               	movf	i1delayUS@i+3,w,c
 39726  00078E  0A80               	xorlw	128
 39727  000790  6E05               	movwf	??i1_delayUS& (0+255),c
 39728  000792  5004               	movf	i1delayUS@US+3,w,c
 39729  000794  0A80               	xorlw	128
 39730  000796  5805               	subwfb	??i1_delayUS& (0+255),w,c
 39731  000798  A0D8               	btfss	status,0,c
 39732  00079A  D7E3               	goto	i1l7397
 39733  00079C  0012               	return		;funcret
 39734  00079E                     __end_ofi1_delayUS:
 39735                           	opt stack 0
 39736                           pclatu	equ	0xFFB
 39737                           pclath	equ	0xFFA
 39738                           tblptru	equ	0xFF8
 39739                           tblptrh	equ	0xFF7
 39740                           tblptrl	equ	0xFF6
 39741                           tablat	equ	0xFF5
 39742                           prodh	equ	0xFF4
 39743                           prodl	equ	0xFF3
 39744                           intcon	equ	0xFF2
 39745                           intcon2	equ	0xFF1
 39746                           indf0	equ	0xFEF
 39747                           postinc0	equ	0xFEE
 39748                           plusw0	equ	0xFEB
 39749                           fsr0h	equ	0xFEA
 39750                           fsr0l	equ	0xFE9
 39751                           wreg	equ	0xFE8
 39752                           indf1	equ	0xFE7
 39753                           postdec1	equ	0xFE5
 39754                           fsr1h	equ	0xFE2
 39755                           fsr1l	equ	0xFE1
 39756                           bsr	equ	0xFE0
 39757                           indf2	equ	0xFDF
 39758                           postinc2	equ	0xFDE
 39759                           postdec2	equ	0xFDD
 39760                           plusw2	equ	0xFDB
 39761                           fsr2h	equ	0xFDA
 39762                           fsr2l	equ	0xFD9
 39763                           status	equ	0xFD8
 39764                           
 39765 ;; *************** function _IsPrintableASCII *****************
 39766 ;; Defined at:
 39767 ;;		line 413 in file "MISC.c"
 39768 ;; Parameters:    Size  Location     Type
 39769 ;;  data            1    wreg     unsigned char 
 39770 ;; Auto vars:     Size  Location     Type
 39771 ;;  data            1    0[COMRAM] unsigned char 
 39772 ;; Return value:  Size  Location     Type
 39773 ;;                  1    wreg      unsigned char 
 39774 ;; Registers used:
 39775 ;;		wreg, status,2, status,0
 39776 ;; Tracked objects:
 39777 ;;		On entry : 0/0
 39778 ;;		On exit  : 0/0
 39779 ;;		Unchanged: 0/0
 39780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 39781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39785 ;;Total ram usage:        1 bytes
 39786 ;; Hardware stack levels used:    1
 39787 ;; Hardware stack levels required when called:    1
 39788 ;; This function calls:
 39789 ;;		Nothing
 39790 ;; This function is called by:
 39791 ;;		_low_isr
 39792 ;; This function uses a non-reentrant model
 39793 ;;
 39794                           
 39795                           	psect	text135
 39796  000E02                     __ptext135:
 39797                           	opt stack 0
 39798  000E02                     _IsPrintableASCII:
 39799                           	opt stack 22
 39800                           
 39801                           ;incstack = 0
 39802                           ;IsPrintableASCII@data stored from wreg
 39803  000E02  6E01               	movwf	IsPrintableASCII@data,c
 39804                           
 39805                           ;MISC.c: 415: if(data >= 0x20 && data < 0x7F)
 39806  000E04  0E1F               	movlw	31
 39807  000E06  6401               	cpfsgt	IsPrintableASCII@data,c
 39808  000E08  D005               	goto	i1l10175
 39809  000E0A  0E7F               	movlw	127
 39810  000E0C  6001               	cpfslt	IsPrintableASCII@data,c
 39811  000E0E  D002               	goto	i1l10175
 39812                           
 39813                           ;MISC.c: 416: {
 39814                           ;MISC.c: 417: return 1;
 39815  000E10  0E01               	movlw	1
 39816  000E12  0012               	return	
 39817  000E14                     i1l10175:
 39818                           
 39819                           ;MISC.c: 418: }
 39820                           ;MISC.c: 419: return 0;
 39821  000E14  0E00               	movlw	0
 39822  000E16  0012               	return	
 39823  000E18  0012               	return		;funcret
 39824  000E1A                     __end_of_IsPrintableASCII:
 39825                           	opt stack 0
 39826                           pclatu	equ	0xFFB
 39827                           pclath	equ	0xFFA
 39828                           tblptru	equ	0xFF8
 39829                           tblptrh	equ	0xFF7
 39830                           tblptrl	equ	0xFF6
 39831                           tablat	equ	0xFF5
 39832                           prodh	equ	0xFF4
 39833                           prodl	equ	0xFF3
 39834                           intcon	equ	0xFF2
 39835                           intcon2	equ	0xFF1
 39836                           indf0	equ	0xFEF
 39837                           postinc0	equ	0xFEE
 39838                           plusw0	equ	0xFEB
 39839                           fsr0h	equ	0xFEA
 39840                           fsr0l	equ	0xFE9
 39841                           wreg	equ	0xFE8
 39842                           indf1	equ	0xFE7
 39843                           postdec1	equ	0xFE5
 39844                           fsr1h	equ	0xFE2
 39845                           fsr1l	equ	0xFE1
 39846                           bsr	equ	0xFE0
 39847                           indf2	equ	0xFDF
 39848                           postinc2	equ	0xFDE
 39849                           postdec2	equ	0xFDD
 39850                           plusw2	equ	0xFDB
 39851                           fsr2h	equ	0xFDA
 39852                           fsr2l	equ	0xFD9
 39853                           status	equ	0xFD8
 39854                           
 39855 ;; *************** function _IRrawToNEC *****************
 39856 ;; Defined at:
 39857 ;;		line 113 in file "IR.c"
 39858 ;; Parameters:    Size  Location     Type
 39859 ;;  Raw             2    0[COMRAM] PTR unsigned int 
 39860 ;;		 -> IRRawCode(144), 
 39861 ;;  NEC             2    2[COMRAM] PTR unsigned long 
 39862 ;;		 -> IR_NEC(4), 
 39863 ;;  Invert          1    4[COMRAM] unsigned char 
 39864 ;; Auto vars:     Size  Location     Type
 39865 ;;  NECtemp         4    7[COMRAM] unsigned long 
 39866 ;;  StartBit        1   14[COMRAM] unsigned char 
 39867 ;;  i               1   13[COMRAM] unsigned char 
 39868 ;;  first           1   12[COMRAM] unsigned char 
 39869 ;;  Pause           1   11[COMRAM] unsigned char 
 39870 ;; Return value:  Size  Location     Type
 39871 ;;                  1    wreg      unsigned char 
 39872 ;; Registers used:
 39873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39874 ;; Tracked objects:
 39875 ;;		On entry : 0/0
 39876 ;;		On exit  : 0/0
 39877 ;;		Unchanged: 0/0
 39878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 39879 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39880 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39881 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39882 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39883 ;;Total ram usage:       15 bytes
 39884 ;; Hardware stack levels used:    1
 39885 ;; Hardware stack levels required when called:    1
 39886 ;; This function calls:
 39887 ;;		Nothing
 39888 ;; This function is called by:
 39889 ;;		_low_isr
 39890 ;; This function uses a non-reentrant model
 39891 ;;
 39892                           
 39893                           	psect	text136
 39894  0140F0                     __ptext136:
 39895                           	opt stack 0
 39896  0140F0                     _IRrawToNEC:
 39897                           	opt stack 22
 39898                           
 39899                           ;IR.c: 141: unsigned char i;
 39900                           ;IR.c: 142: unsigned char Pause =0;
 39901                           
 39902                           ;incstack = 0
 39903  0140F0  0E00               	movlw	0
 39904  0140F2  6E0C               	movwf	IRrawToNEC@Pause,c
 39905                           
 39906                           ;IR.c: 143: unsigned char first =0;
 39907  0140F4  0E00               	movlw	0
 39908  0140F6  6E0D               	movwf	IRrawToNEC@first,c
 39909                           
 39910                           ;IR.c: 144: unsigned char StartBit=72;
 39911  0140F8  0E48               	movlw	72
 39912  0140FA  6E0F               	movwf	IRrawToNEC@StartBit,c
 39913                           
 39914                           ;IR.c: 145: unsigned long NECtemp = 0;
 39915  0140FC  0E00               	movlw	0
 39916  0140FE  6E08               	movwf	IRrawToNEC@NECtemp,c
 39917  014100  0E00               	movlw	0
 39918  014102  6E09               	movwf	IRrawToNEC@NECtemp+1,c
 39919  014104  0E00               	movlw	0
 39920  014106  6E0A               	movwf	IRrawToNEC@NECtemp+2,c
 39921  014108  0E00               	movlw	0
 39922  01410A  6E0B               	movwf	IRrawToNEC@NECtemp+3,c
 39923                           
 39924                           ;IR.c: 148: for (i =0; i < 72; i++)
 39925  01410C  0E00               	movlw	0
 39926  01410E  6E0E               	movwf	IRrawToNEC@i,c
 39927  014110                     i1l10225:
 39928  014110  0E47               	movlw	71
 39929  014112  640E               	cpfsgt	IRrawToNEC@i,c
 39930  014114  D001               	goto	i1l10229
 39931  014116  D03F               	goto	i1l10249
 39932  014118                     i1l10229:
 39933                           
 39934                           ;IR.c: 149: {
 39935                           ;IR.c: 150: if(Raw[i] >= 28800L && Raw[i] <= 32000L )
 39936  014118  500E               	movf	IRrawToNEC@i,w,c
 39937  01411A  0D02               	mullw	2
 39938  01411C  50F3               	movf	prodl,w,c
 39939  01411E  2401               	addwf	IRrawToNEC@Raw,w,c
 39940  014120  6ED9               	movwf	fsr2l,c
 39941  014122  50F4               	movf	prodh,w,c
 39942  014124  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 39943  014126  6EDA               	movwf	fsr2h,c
 39944  014128  0E80               	movlw	128
 39945  01412A  5CDE               	subwf	postinc2,w,c
 39946  01412C  0E70               	movlw	112
 39947  01412E  58DE               	subwfb	postinc2,w,c
 39948  014130  A0D8               	btfss	status,0,c
 39949  014132  D010               	goto	i1l10239
 39950  014134  500E               	movf	IRrawToNEC@i,w,c
 39951  014136  0D02               	mullw	2
 39952  014138  50F3               	movf	prodl,w,c
 39953  01413A  2401               	addwf	IRrawToNEC@Raw,w,c
 39954  01413C  6ED9               	movwf	fsr2l,c
 39955  01413E  50F4               	movf	prodh,w,c
 39956  014140  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 39957  014142  6EDA               	movwf	fsr2h,c
 39958  014144  04DE               	decf	postinc2,w,c
 39959  014146  0E7D               	movlw	125
 39960  014148  58DE               	subwfb	postinc2,w,c
 39961  01414A  B0D8               	btfsc	status,0,c
 39962  01414C  D003               	goto	i1l10239
 39963                           
 39964                           ;IR.c: 151: {
 39965                           ;IR.c: 153: return 2;
 39966  01414E  0E02               	movlw	2
 39967  014150  0012               	return	
 39968                           
 39969                           ;IR.c: 154: }
 39970  014152  D01F               	goto	i1l10245
 39971  014154                     i1l10239:
 39972                           
 39973                           ;IR.c: 155: else if(Raw[i] >= 2560 && Raw[i] <= 3200 )
 39974  014154  500E               	movf	IRrawToNEC@i,w,c
 39975  014156  0D02               	mullw	2
 39976  014158  50F3               	movf	prodl,w,c
 39977  01415A  2401               	addwf	IRrawToNEC@Raw,w,c
 39978  01415C  6ED9               	movwf	fsr2l,c
 39979  01415E  50F4               	movf	prodh,w,c
 39980  014160  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 39981  014162  6EDA               	movwf	fsr2h,c
 39982  014164  52DE               	movf	postinc2,f,c
 39983  014166  0E0A               	movlw	10
 39984  014168  5CDE               	subwf	postinc2,w,c
 39985  01416A  A0D8               	btfss	status,0,c
 39986  01416C  D012               	goto	i1l10245
 39987  01416E  500E               	movf	IRrawToNEC@i,w,c
 39988  014170  0D02               	mullw	2
 39989  014172  50F3               	movf	prodl,w,c
 39990  014174  2401               	addwf	IRrawToNEC@Raw,w,c
 39991  014176  6ED9               	movwf	fsr2l,c
 39992  014178  50F4               	movf	prodh,w,c
 39993  01417A  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 39994  01417C  6EDA               	movwf	fsr2h,c
 39995  01417E  0E81               	movlw	129
 39996  014180  5CDE               	subwf	postinc2,w,c
 39997  014182  0E0C               	movlw	12
 39998  014184  58DE               	subwfb	postinc2,w,c
 39999  014186  B0D8               	btfsc	status,0,c
 40000  014188  D004               	goto	i1l10245
 40001                           
 40002                           ;IR.c: 156: {
 40003                           ;IR.c: 158: StartBit = i;
 40004  01418A  C00E  F00F         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 40005                           
 40006                           ;IR.c: 159: break;
 40007  01418E  D003               	goto	i1l10249
 40008  014190  D000               	goto	i1l10245
 40009  014192                     i1l10245:
 40010  014192  2A0E               	incf	IRrawToNEC@i,f,c
 40011  014194  D7BD               	goto	i1l10225
 40012  014196                     i1l10249:
 40013                           
 40014                           ;IR.c: 160: }
 40015                           ;IR.c: 161: }
 40016                           ;IR.c: 162: if(72 - StartBit < 72)
 40017  014196  500F               	movf	IRrawToNEC@StartBit,w,c
 40018  014198  6E06               	movwf	??_IRrawToNEC& (0+255),c
 40019  01419A  6A07               	clrf	(??_IRrawToNEC+1)& (0+255),c
 40020  01419C  1E06               	comf	??_IRrawToNEC,f,c
 40021  01419E  1E07               	comf	??_IRrawToNEC+1,f,c
 40022  0141A0  4A06               	infsnz	??_IRrawToNEC,f,c
 40023  0141A2  2A07               	incf	??_IRrawToNEC+1,f,c
 40024  0141A4  0E48               	movlw	72
 40025  0141A6  2606               	addwf	??_IRrawToNEC,f,c
 40026  0141A8  0E00               	movlw	0
 40027  0141AA  2207               	addwfc	??_IRrawToNEC+1,f,c
 40028  0141AC  BE07               	btfsc	??_IRrawToNEC+1,7,c
 40029  0141AE  D006               	goto	i1l10251
 40030  0141B0  5007               	movf	??_IRrawToNEC+1,w,c
 40031  0141B2  E106               	bnz	i1l10255
 40032  0141B4  0E48               	movlw	72
 40033  0141B6  5C06               	subwf	??_IRrawToNEC,w,c
 40034  0141B8  B0D8               	btfsc	status,0,c
 40035  0141BA  D002               	goto	i1l10255
 40036  0141BC                     i1l10251:
 40037                           
 40038                           ;IR.c: 163: {
 40039                           ;IR.c: 165: return 0;
 40040  0141BC  0E00               	movlw	0
 40041  0141BE  0012               	return	
 40042  0141C0                     i1l10255:
 40043                           
 40044                           ;IR.c: 166: }
 40045                           ;IR.c: 168: StartBit++;
 40046  0141C0  2A0F               	incf	IRrawToNEC@StartBit,f,c
 40047                           
 40048                           ;IR.c: 169: if(Raw[StartBit] < 1120 || Raw[StartBit] > 1760 )
 40049  0141C2  500F               	movf	IRrawToNEC@StartBit,w,c
 40050  0141C4  0D02               	mullw	2
 40051  0141C6  50F3               	movf	prodl,w,c
 40052  0141C8  2401               	addwf	IRrawToNEC@Raw,w,c
 40053  0141CA  6ED9               	movwf	fsr2l,c
 40054  0141CC  50F4               	movf	prodh,w,c
 40055  0141CE  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40056  0141D0  6EDA               	movwf	fsr2h,c
 40057  0141D2  0E60               	movlw	96
 40058  0141D4  5CDE               	subwf	postinc2,w,c
 40059  0141D6  0E04               	movlw	4
 40060  0141D8  58DE               	subwfb	postinc2,w,c
 40061  0141DA  A0D8               	btfss	status,0,c
 40062  0141DC  D00E               	goto	i1l10261
 40063  0141DE  500F               	movf	IRrawToNEC@StartBit,w,c
 40064  0141E0  0D02               	mullw	2
 40065  0141E2  50F3               	movf	prodl,w,c
 40066  0141E4  2401               	addwf	IRrawToNEC@Raw,w,c
 40067  0141E6  6ED9               	movwf	fsr2l,c
 40068  0141E8  50F4               	movf	prodh,w,c
 40069  0141EA  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40070  0141EC  6EDA               	movwf	fsr2h,c
 40071  0141EE  0EE1               	movlw	225
 40072  0141F0  5CDE               	subwf	postinc2,w,c
 40073  0141F2  0E06               	movlw	6
 40074  0141F4  58DE               	subwfb	postinc2,w,c
 40075  0141F6  A0D8               	btfss	status,0,c
 40076  0141F8  D002               	goto	i1l10265
 40077  0141FA                     i1l10261:
 40078                           
 40079                           ;IR.c: 170: {
 40080                           ;IR.c: 172: return 0;
 40081  0141FA  0E00               	movlw	0
 40082  0141FC  0012               	return	
 40083  0141FE                     i1l10265:
 40084                           
 40085                           ;IR.c: 173: }
 40086                           ;IR.c: 176: StartBit++;
 40087  0141FE  2A0F               	incf	IRrawToNEC@StartBit,f,c
 40088                           
 40089                           ;IR.c: 177: for(i = StartBit; i < 72;i++)
 40090  014200  C00F  F00E         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 40091  014204                     i1l10269:
 40092  014204  0E47               	movlw	71
 40093  014206  640E               	cpfsgt	IRrawToNEC@i,c
 40094  014208  D001               	goto	i1l10273
 40095  01420A  D11E               	goto	i1l10369
 40096  01420C                     i1l10273:
 40097                           
 40098                           ;IR.c: 178: {
 40099                           ;IR.c: 179: if(Raw[StartBit] >= 80 && Raw[StartBit] <= 384 )
 40100  01420C  500F               	movf	IRrawToNEC@StartBit,w,c
 40101  01420E  0D02               	mullw	2
 40102  014210  50F3               	movf	prodl,w,c
 40103  014212  2401               	addwf	IRrawToNEC@Raw,w,c
 40104  014214  6ED9               	movwf	fsr2l,c
 40105  014216  50F4               	movf	prodh,w,c
 40106  014218  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40107  01421A  6EDA               	movwf	fsr2h,c
 40108  01421C  0E01               	movlw	1
 40109  01421E  50DB               	movf	plusw2,w,c
 40110  014220  E104               	bnz	i1u1214_20
 40111  014222  0E50               	movlw	80
 40112  014224  5CDE               	subwf	postinc2,w,c
 40113  014226  A0D8               	btfss	status,0,c
 40114  014228  D037               	goto	i1l10297
 40115  01422A                     i1u1214_20:
 40116  01422A  500F               	movf	IRrawToNEC@StartBit,w,c
 40117  01422C  0D02               	mullw	2
 40118  01422E  50F3               	movf	prodl,w,c
 40119  014230  2401               	addwf	IRrawToNEC@Raw,w,c
 40120  014232  6ED9               	movwf	fsr2l,c
 40121  014234  50F4               	movf	prodh,w,c
 40122  014236  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40123  014238  6EDA               	movwf	fsr2h,c
 40124  01423A  0E81               	movlw	129
 40125  01423C  5CDE               	subwf	postinc2,w,c
 40126  01423E  0E01               	movlw	1
 40127  014240  58DE               	subwfb	postinc2,w,c
 40128  014242  B0D8               	btfsc	status,0,c
 40129  014244  D029               	goto	i1l10297
 40130                           
 40131                           ;IR.c: 180: {
 40132                           ;IR.c: 181: if(Pause != 3)
 40133  014246  0E03               	movlw	3
 40134  014248  180C               	xorwf	IRrawToNEC@Pause,w,c
 40135  01424A  B4D8               	btfsc	status,2,c
 40136  01424C  D016               	goto	i1l10291
 40137                           
 40138                           ;IR.c: 182: {
 40139                           ;IR.c: 183: if(!first)
 40140  01424E  500D               	movf	IRrawToNEC@first,w,c
 40141  014250  A4D8               	btfss	status,2,c
 40142  014252  D002               	goto	i1l10283
 40143                           
 40144                           ;IR.c: 184: {
 40145                           ;IR.c: 186: first = 1;
 40146  014254  0E01               	movlw	1
 40147  014256  D04F               	goto	L33
 40148  014258                     i1l10283:
 40149                           
 40150                           ;IR.c: 188: else
 40151                           ;IR.c: 189: {
 40152                           ;IR.c: 190: first = 0;
 40153  014258  0E00               	movlw	0
 40154  01425A  6E0D               	movwf	IRrawToNEC@first,c
 40155                           
 40156                           ;IR.c: 191: NECtemp <<= 1;
 40157  01425C  90D8               	bcf	status,0,c
 40158  01425E  3608               	rlcf	IRrawToNEC@NECtemp,f,c
 40159  014260  3609               	rlcf	IRrawToNEC@NECtemp+1,f,c
 40160  014262  360A               	rlcf	IRrawToNEC@NECtemp+2,f,c
 40161  014264  360B               	rlcf	IRrawToNEC@NECtemp+3,f,c
 40162                           
 40163                           ;IR.c: 192: if(!Invert)
 40164  014266  5005               	movf	IRrawToNEC@Invert,w,c
 40165  014268  A4D8               	btfss	status,2,c
 40166  01426A  D0EB               	goto	i1l10365
 40167                           
 40168                           ;IR.c: 193: {
 40169                           ;IR.c: 194: NECtemp++;
 40170  01426C  0E01               	movlw	1
 40171  01426E  2608               	addwf	IRrawToNEC@NECtemp,f,c
 40172  014270  0E00               	movlw	0
 40173  014272  2209               	addwfc	IRrawToNEC@NECtemp+1,f,c
 40174  014274  220A               	addwfc	IRrawToNEC@NECtemp+2,f,c
 40175  014276  220B               	addwfc	IRrawToNEC@NECtemp+3,f,c
 40176                           
 40177                           ;IR.c: 195: }
 40178                           ;IR.c: 197: }
 40179                           ;IR.c: 198: }
 40180  014278  D0E4               	goto	i1l10365
 40181  01427A                     i1l10291:
 40182                           
 40183                           ;IR.c: 199: else
 40184                           ;IR.c: 200: {
 40185                           ;IR.c: 202: *NEC = NECtemp;
 40186  01427A  C003  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 40187  01427E  C004  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 40188  014282  C008  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 40189  014286  C009  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 40190  01428A  C00A  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 40191  01428E  C00B  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 40192  014292  D046               	goto	i1l10321
 40193                           
 40194                           ;IR.c: 203: return 1;
 40195  014294  0012               	return	
 40196                           
 40197                           ;IR.c: 204: }
 40198                           ;IR.c: 205: }
 40199  014296  D0D5               	goto	i1l10365
 40200  014298                     i1l10297:
 40201                           
 40202                           ;IR.c: 206: else if(Raw[StartBit] >= 448 && Raw[StartBit] <= 608)
 40203  014298  500F               	movf	IRrawToNEC@StartBit,w,c
 40204  01429A  0D02               	mullw	2
 40205  01429C  50F3               	movf	prodl,w,c
 40206  01429E  2401               	addwf	IRrawToNEC@Raw,w,c
 40207  0142A0  6ED9               	movwf	fsr2l,c
 40208  0142A2  50F4               	movf	prodh,w,c
 40209  0142A4  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40210  0142A6  6EDA               	movwf	fsr2h,c
 40211  0142A8  0EC0               	movlw	192
 40212  0142AA  5CDE               	subwf	postinc2,w,c
 40213  0142AC  0E01               	movlw	1
 40214  0142AE  58DE               	subwfb	postinc2,w,c
 40215  0142B0  A0D8               	btfss	status,0,c
 40216  0142B2  D026               	goto	i1l10315
 40217  0142B4  500F               	movf	IRrawToNEC@StartBit,w,c
 40218  0142B6  0D02               	mullw	2
 40219  0142B8  50F3               	movf	prodl,w,c
 40220  0142BA  2401               	addwf	IRrawToNEC@Raw,w,c
 40221  0142BC  6ED9               	movwf	fsr2l,c
 40222  0142BE  50F4               	movf	prodh,w,c
 40223  0142C0  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40224  0142C2  6EDA               	movwf	fsr2h,c
 40225  0142C4  0E61               	movlw	97
 40226  0142C6  5CDE               	subwf	postinc2,w,c
 40227  0142C8  0E02               	movlw	2
 40228  0142CA  58DE               	subwfb	postinc2,w,c
 40229  0142CC  B0D8               	btfsc	status,0,c
 40230  0142CE  D018               	goto	i1l10315
 40231                           
 40232                           ;IR.c: 207: {
 40233                           ;IR.c: 208: if(first)
 40234  0142D0  500D               	movf	IRrawToNEC@first,w,c
 40235  0142D2  B4D8               	btfsc	status,2,c
 40236  0142D4  D012               	goto	i1l10311
 40237                           
 40238                           ;IR.c: 209: {
 40239                           ;IR.c: 211: NECtemp <<= 1;
 40240  0142D6  90D8               	bcf	status,0,c
 40241  0142D8  3608               	rlcf	IRrawToNEC@NECtemp,f,c
 40242  0142DA  3609               	rlcf	IRrawToNEC@NECtemp+1,f,c
 40243  0142DC  360A               	rlcf	IRrawToNEC@NECtemp+2,f,c
 40244  0142DE  360B               	rlcf	IRrawToNEC@NECtemp+3,f,c
 40245                           
 40246                           ;IR.c: 212: if(Invert)
 40247  0142E0  5005               	movf	IRrawToNEC@Invert,w,c
 40248  0142E2  B4D8               	btfsc	status,2,c
 40249  0142E4  D007               	goto	i1l10309
 40250                           
 40251                           ;IR.c: 213: {
 40252                           ;IR.c: 214: NECtemp++;
 40253  0142E6  0E01               	movlw	1
 40254  0142E8  2608               	addwf	IRrawToNEC@NECtemp,f,c
 40255  0142EA  0E00               	movlw	0
 40256  0142EC  2209               	addwfc	IRrawToNEC@NECtemp+1,f,c
 40257  0142EE  220A               	addwfc	IRrawToNEC@NECtemp+2,f,c
 40258  0142F0  220B               	addwfc	IRrawToNEC@NECtemp+3,f,c
 40259  0142F2  D000               	goto	i1l10309
 40260  0142F4                     i1l10309:
 40261                           
 40262                           ;IR.c: 215: }
 40263                           ;IR.c: 216: first = 0;
 40264  0142F4  0E00               	movlw	0
 40265  0142F6                     L33:
 40266  0142F6  6E0D               	movwf	IRrawToNEC@first,c
 40267                           
 40268                           ;IR.c: 217: }
 40269  0142F8  D0A4               	goto	i1l10365
 40270  0142FA                     i1l10311:
 40271                           
 40272                           ;IR.c: 218: else
 40273                           ;IR.c: 219: {
 40274                           ;IR.c: 221: return 0;
 40275  0142FA  0E00               	movlw	0
 40276  0142FC  0012               	return	
 40277                           
 40278                           ;IR.c: 222: }
 40279                           ;IR.c: 223: }
 40280  0142FE  D0A1               	goto	i1l10365
 40281  014300                     i1l10315:
 40282                           
 40283                           ;IR.c: 224: else if(Raw[StartBit] == 0 && first == 1)
 40284  014300  500F               	movf	IRrawToNEC@StartBit,w,c
 40285  014302  0D02               	mullw	2
 40286  014304  50F3               	movf	prodl,w,c
 40287  014306  2401               	addwf	IRrawToNEC@Raw,w,c
 40288  014308  6ED9               	movwf	fsr2l,c
 40289  01430A  50F4               	movf	prodh,w,c
 40290  01430C  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40291  01430E  6EDA               	movwf	fsr2h,c
 40292  014310  50DE               	movf	postinc2,w,c
 40293  014312  10DE               	iorwf	postinc2,w,c
 40294  014314  A4D8               	btfss	status,2,c
 40295  014316  D007               	goto	i1l10327
 40296  014318  040D               	decf	IRrawToNEC@first,w,c
 40297  01431A  A4D8               	btfss	status,2,c
 40298  01431C  D004               	goto	i1l10327
 40299  01431E  D7AD               	goto	i1l10291
 40300  014320                     i1l10321:
 40301                           
 40302                           ;IR.c: 231: return 1;
 40303  014320  0E01               	movlw	1
 40304  014322  0012               	return	
 40305                           
 40306                           ;IR.c: 232: }
 40307  014324  D08E               	goto	i1l10365
 40308  014326                     i1l10327:
 40309                           
 40310                           ;IR.c: 233: else if(Raw[StartBit] >= 12160 && Raw[StartBit] <= 13440)
 40311  014326  500F               	movf	IRrawToNEC@StartBit,w,c
 40312  014328  0D02               	mullw	2
 40313  01432A  50F3               	movf	prodl,w,c
 40314  01432C  2401               	addwf	IRrawToNEC@Raw,w,c
 40315  01432E  6ED9               	movwf	fsr2l,c
 40316  014330  50F4               	movf	prodh,w,c
 40317  014332  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40318  014334  6EDA               	movwf	fsr2h,c
 40319  014336  0E80               	movlw	128
 40320  014338  5CDE               	subwf	postinc2,w,c
 40321  01433A  0E2F               	movlw	47
 40322  01433C  58DE               	subwfb	postinc2,w,c
 40323  01433E  A0D8               	btfss	status,0,c
 40324  014340  D010               	goto	i1l10333
 40325  014342  500F               	movf	IRrawToNEC@StartBit,w,c
 40326  014344  0D02               	mullw	2
 40327  014346  50F3               	movf	prodl,w,c
 40328  014348  2401               	addwf	IRrawToNEC@Raw,w,c
 40329  01434A  6ED9               	movwf	fsr2l,c
 40330  01434C  50F4               	movf	prodh,w,c
 40331  01434E  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40332  014350  6EDA               	movwf	fsr2h,c
 40333  014352  0E81               	movlw	129
 40334  014354  5CDE               	subwf	postinc2,w,c
 40335  014356  0E34               	movlw	52
 40336  014358  58DE               	subwfb	postinc2,w,c
 40337  01435A  B0D8               	btfsc	status,0,c
 40338  01435C  D002               	goto	i1l10333
 40339                           
 40340                           ;IR.c: 234: {
 40341                           ;IR.c: 236: Pause = 1;
 40342  01435E  0E01               	movlw	1
 40343  014360  D041               	goto	L35
 40344  014362                     i1l10333:
 40345                           
 40346                           ;IR.c: 238: else if(Pause == 1 && Raw[StartBit] >= 2560 && Raw[StartBit] <= 3200)
 40347  014362  040C               	decf	IRrawToNEC@Pause,w,c
 40348  014364  A4D8               	btfss	status,2,c
 40349  014366  D01D               	goto	i1l10341
 40350  014368  500F               	movf	IRrawToNEC@StartBit,w,c
 40351  01436A  0D02               	mullw	2
 40352  01436C  50F3               	movf	prodl,w,c
 40353  01436E  2401               	addwf	IRrawToNEC@Raw,w,c
 40354  014370  6ED9               	movwf	fsr2l,c
 40355  014372  50F4               	movf	prodh,w,c
 40356  014374  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40357  014376  6EDA               	movwf	fsr2h,c
 40358  014378  52DE               	movf	postinc2,f,c
 40359  01437A  0E0A               	movlw	10
 40360  01437C  5CDE               	subwf	postinc2,w,c
 40361  01437E  A0D8               	btfss	status,0,c
 40362  014380  D010               	goto	i1l10341
 40363  014382  500F               	movf	IRrawToNEC@StartBit,w,c
 40364  014384  0D02               	mullw	2
 40365  014386  50F3               	movf	prodl,w,c
 40366  014388  2401               	addwf	IRrawToNEC@Raw,w,c
 40367  01438A  6ED9               	movwf	fsr2l,c
 40368  01438C  50F4               	movf	prodh,w,c
 40369  01438E  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40370  014390  6EDA               	movwf	fsr2h,c
 40371  014392  0E81               	movlw	129
 40372  014394  5CDE               	subwf	postinc2,w,c
 40373  014396  0E0C               	movlw	12
 40374  014398  58DE               	subwfb	postinc2,w,c
 40375  01439A  B0D8               	btfsc	status,0,c
 40376  01439C  D002               	goto	i1l10341
 40377                           
 40378                           ;IR.c: 239: {
 40379                           ;IR.c: 241: Pause = 2;
 40380  01439E  0E02               	movlw	2
 40381  0143A0  D021               	goto	L35
 40382  0143A2                     i1l10341:
 40383                           
 40384                           ;IR.c: 243: else if(Pause == 2 && Raw[StartBit] >= 592 && Raw[StartBit] <= 800)
 40385  0143A2  0E02               	movlw	2
 40386  0143A4  180C               	xorwf	IRrawToNEC@Pause,w,c
 40387  0143A6  A4D8               	btfss	status,2,c
 40388  0143A8  D01F               	goto	i1l10349
 40389  0143AA  500F               	movf	IRrawToNEC@StartBit,w,c
 40390  0143AC  0D02               	mullw	2
 40391  0143AE  50F3               	movf	prodl,w,c
 40392  0143B0  2401               	addwf	IRrawToNEC@Raw,w,c
 40393  0143B2  6ED9               	movwf	fsr2l,c
 40394  0143B4  50F4               	movf	prodh,w,c
 40395  0143B6  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40396  0143B8  6EDA               	movwf	fsr2h,c
 40397  0143BA  0E50               	movlw	80
 40398  0143BC  5CDE               	subwf	postinc2,w,c
 40399  0143BE  0E02               	movlw	2
 40400  0143C0  58DE               	subwfb	postinc2,w,c
 40401  0143C2  A0D8               	btfss	status,0,c
 40402  0143C4  D011               	goto	i1l10349
 40403  0143C6  500F               	movf	IRrawToNEC@StartBit,w,c
 40404  0143C8  0D02               	mullw	2
 40405  0143CA  50F3               	movf	prodl,w,c
 40406  0143CC  2401               	addwf	IRrawToNEC@Raw,w,c
 40407  0143CE  6ED9               	movwf	fsr2l,c
 40408  0143D0  50F4               	movf	prodh,w,c
 40409  0143D2  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40410  0143D4  6EDA               	movwf	fsr2h,c
 40411  0143D6  0E21               	movlw	33
 40412  0143D8  5CDE               	subwf	postinc2,w,c
 40413  0143DA  0E03               	movlw	3
 40414  0143DC  58DE               	subwfb	postinc2,w,c
 40415  0143DE  B0D8               	btfsc	status,0,c
 40416  0143E0  D003               	goto	i1l10349
 40417                           
 40418                           ;IR.c: 244: {
 40419                           ;IR.c: 247: Pause = 3;
 40420  0143E2  0E03               	movlw	3
 40421  0143E4                     L35:
 40422  0143E4  6E0C               	movwf	IRrawToNEC@Pause,c
 40423                           
 40424                           ;IR.c: 248: }
 40425  0143E6  D02D               	goto	i1l10365
 40426  0143E8                     i1l10349:
 40427                           
 40428                           ;IR.c: 249: else if(Raw[StartBit] >= 28800L && Raw[StartBit] <= 32000L)
 40429  0143E8  500F               	movf	IRrawToNEC@StartBit,w,c
 40430  0143EA  0D02               	mullw	2
 40431  0143EC  50F3               	movf	prodl,w,c
 40432  0143EE  2401               	addwf	IRrawToNEC@Raw,w,c
 40433  0143F0  6ED9               	movwf	fsr2l,c
 40434  0143F2  50F4               	movf	prodh,w,c
 40435  0143F4  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40436  0143F6  6EDA               	movwf	fsr2h,c
 40437  0143F8  0E80               	movlw	128
 40438  0143FA  5CDE               	subwf	postinc2,w,c
 40439  0143FC  0E70               	movlw	112
 40440  0143FE  58DE               	subwfb	postinc2,w,c
 40441  014400  A0D8               	btfss	status,0,c
 40442  014402  D01C               	goto	i1l10361
 40443  014404  500F               	movf	IRrawToNEC@StartBit,w,c
 40444  014406  0D02               	mullw	2
 40445  014408  50F3               	movf	prodl,w,c
 40446  01440A  2401               	addwf	IRrawToNEC@Raw,w,c
 40447  01440C  6ED9               	movwf	fsr2l,c
 40448  01440E  50F4               	movf	prodh,w,c
 40449  014410  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40450  014412  6EDA               	movwf	fsr2h,c
 40451  014414  04DE               	decf	postinc2,w,c
 40452  014416  0E7D               	movlw	125
 40453  014418  58DE               	subwfb	postinc2,w,c
 40454  01441A  B0D8               	btfsc	status,0,c
 40455  01441C  D00F               	goto	i1l10361
 40456                           
 40457                           ;IR.c: 250: {
 40458                           ;IR.c: 252: *NEC = NECtemp;
 40459  01441E  C003  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 40460  014422  C004  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 40461  014426  C008  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 40462  01442A  C009  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 40463  01442E  C00A  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 40464  014432  C00B  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 40465                           
 40466                           ;IR.c: 253: return 2;
 40467  014436  0E02               	movlw	2
 40468  014438  0012               	return	
 40469                           
 40470                           ;IR.c: 254: }
 40471  01443A  D003               	goto	i1l10365
 40472  01443C                     i1l10361:
 40473                           
 40474                           ;IR.c: 255: else
 40475                           ;IR.c: 256: {
 40476                           ;IR.c: 257: return 0;
 40477  01443C  0E00               	movlw	0
 40478  01443E  0012               	return	
 40479  014440  D000               	goto	i1l10365
 40480  014442                     i1l10365:
 40481                           
 40482                           ;IR.c: 258: }
 40483                           ;IR.c: 259: StartBit++;
 40484  014442  2A0F               	incf	IRrawToNEC@StartBit,f,c
 40485  014444  2A0E               	incf	IRrawToNEC@i,f,c
 40486  014446  D6DE               	goto	i1l10269
 40487  014448                     i1l10369:
 40488                           
 40489                           ;IR.c: 260: }
 40490                           ;IR.c: 262: return 0;
 40491  014448  0E00               	movlw	0
 40492  01444A  0012               	return	
 40493  01444C  0012               	return		;funcret
 40494  01444E                     __end_of_IRrawToNEC:
 40495                           	opt stack 0
 40496                           pclatu	equ	0xFFB
 40497                           pclath	equ	0xFFA
 40498                           tblptru	equ	0xFF8
 40499                           tblptrh	equ	0xFF7
 40500                           tblptrl	equ	0xFF6
 40501                           tablat	equ	0xFF5
 40502                           prodh	equ	0xFF4
 40503                           prodl	equ	0xFF3
 40504                           intcon	equ	0xFF2
 40505                           intcon2	equ	0xFF1
 40506                           indf0	equ	0xFEF
 40507                           postinc0	equ	0xFEE
 40508                           plusw0	equ	0xFEB
 40509                           fsr0h	equ	0xFEA
 40510                           fsr0l	equ	0xFE9
 40511                           wreg	equ	0xFE8
 40512                           indf1	equ	0xFE7
 40513                           postdec1	equ	0xFE5
 40514                           fsr1h	equ	0xFE2
 40515                           fsr1l	equ	0xFE1
 40516                           bsr	equ	0xFE0
 40517                           indf2	equ	0xFDF
 40518                           postinc2	equ	0xFDE
 40519                           postdec2	equ	0xFDD
 40520                           plusw2	equ	0xFDB
 40521                           fsr2h	equ	0xFDA
 40522                           fsr2l	equ	0xFD9
 40523                           status	equ	0xFD8
 40524                           
 40525 ;; *************** function _high_isr *****************
 40526 ;; Defined at:
 40527 ;;		line 62 in file "interrupts.c"
 40528 ;; Parameters:    Size  Location     Type
 40529 ;;		None
 40530 ;; Auto vars:     Size  Location     Type
 40531 ;;		None
 40532 ;; Return value:  Size  Location     Type
 40533 ;;		None               void
 40534 ;; Registers used:
 40535 ;;		None
 40536 ;; Tracked objects:
 40537 ;;		On entry : 0/0
 40538 ;;		On exit  : 0/0
 40539 ;;		Unchanged: 0/0
 40540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 40541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40543 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 40544 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 40545 ;;Total ram usage:       14 bytes
 40546 ;; Hardware stack levels used:    1
 40547 ;; This function calls:
 40548 ;;		Nothing
 40549 ;; This function is called by:
 40550 ;;		Interrupt level 2
 40551 ;; This function uses a non-reentrant model
 40552 ;;
 40553                           
 40554                           	psect	intcode
 40555  000008                     __pintcode:
 40556                           	opt stack 0
 40557  000008                     _high_isr:
 40558                           	opt stack 18
 40559                           
 40560                           ;incstack = 0
 40561  000008  CFFA F100          	movff	pclath,??_high_isr
 40562  00000C  CFFB F101          	movff	pclatu,??_high_isr+1
 40563  000010  CFE9 F102          	movff	fsr0l,??_high_isr+2
 40564  000014  EFF8  F0BD         	goto	int_func
 40565                           pclatu	equ	0xFFB
 40566                           pclath	equ	0xFFA
 40567                           tblptru	equ	0xFF8
 40568                           tblptrh	equ	0xFF7
 40569                           tblptrl	equ	0xFF6
 40570                           tablat	equ	0xFF5
 40571                           prodh	equ	0xFF4
 40572                           prodl	equ	0xFF3
 40573                           intcon	equ	0xFF2
 40574                           intcon2	equ	0xFF1
 40575                           indf0	equ	0xFEF
 40576                           postinc0	equ	0xFEE
 40577                           plusw0	equ	0xFEB
 40578                           fsr0h	equ	0xFEA
 40579                           fsr0l	equ	0xFE9
 40580                           wreg	equ	0xFE8
 40581                           indf1	equ	0xFE7
 40582                           postdec1	equ	0xFE5
 40583                           fsr1h	equ	0xFE2
 40584                           fsr1l	equ	0xFE1
 40585                           bsr	equ	0xFE0
 40586                           indf2	equ	0xFDF
 40587                           postinc2	equ	0xFDE
 40588                           postdec2	equ	0xFDD
 40589                           plusw2	equ	0xFDB
 40590                           fsr2h	equ	0xFDA
 40591                           fsr2l	equ	0xFD9
 40592                           status	equ	0xFD8
 40593                           
 40594                           	psect	intcode_body
 40595  017BF0                     __pintcode_body:
 40596                           	opt stack 18
 40597  017BF0                     int_func:
 40598                           	opt stack 18
 40599  017BF0  CFEA F103          	movff	fsr0h,??_high_isr+3
 40600  017BF4  CFE1 F104          	movff	fsr1l,??_high_isr+4
 40601  017BF8  CFE2 F105          	movff	fsr1h,??_high_isr+5
 40602  017BFC  CFD9 F106          	movff	fsr2l,??_high_isr+6
 40603  017C00  CFDA F107          	movff	fsr2h,??_high_isr+7
 40604  017C04  CFF3 F108          	movff	prodl,??_high_isr+8
 40605  017C08  CFF4 F109          	movff	prodh,??_high_isr+9
 40606  017C0C  CFF6 F10A          	movff	tblptrl,??_high_isr+10
 40607  017C10  CFF7 F10B          	movff	tblptrh,??_high_isr+11
 40608  017C14  CFF8 F10C          	movff	tblptru,??_high_isr+12
 40609  017C18  CFF5 F10D          	movff	tablat,??_high_isr+13
 40610  017C1C  C10D  FFF5         	movff	??_high_isr+13,tablat
 40611  017C20  C10C  FFF8         	movff	??_high_isr+12,tblptru
 40612  017C24  C10B  FFF7         	movff	??_high_isr+11,tblptrh
 40613  017C28  C10A  FFF6         	movff	??_high_isr+10,tblptrl
 40614  017C2C  C109  FFF4         	movff	??_high_isr+9,prodh
 40615  017C30  C108  FFF3         	movff	??_high_isr+8,prodl
 40616  017C34  C107  FFDA         	movff	??_high_isr+7,fsr2h
 40617  017C38  C106  FFD9         	movff	??_high_isr+6,fsr2l
 40618  017C3C  C105  FFE2         	movff	??_high_isr+5,fsr1h
 40619  017C40  C104  FFE1         	movff	??_high_isr+4,fsr1l
 40620  017C44  C103  FFEA         	movff	??_high_isr+3,fsr0h
 40621  017C48  C102  FFE9         	movff	??_high_isr+2,fsr0l
 40622  017C4C  C101  FFFB         	movff	??_high_isr+1,pclatu
 40623  017C50  C100  FFFA         	movff	??_high_isr,pclath
 40624  017C54  0011               	retfie		f
 40625  017C56                     __end_of_high_isr:
 40626                           	opt stack 0
 40627                           pclatu	equ	0xFFB
 40628                           pclath	equ	0xFFA
 40629                           tblptru	equ	0xFF8
 40630                           tblptrh	equ	0xFF7
 40631                           tblptrl	equ	0xFF6
 40632                           tablat	equ	0xFF5
 40633                           prodh	equ	0xFF4
 40634                           prodl	equ	0xFF3
 40635                           intcon	equ	0xFF2
 40636                           intcon2	equ	0xFF1
 40637                           indf0	equ	0xFEF
 40638                           postinc0	equ	0xFEE
 40639                           plusw0	equ	0xFEB
 40640                           fsr0h	equ	0xFEA
 40641                           fsr0l	equ	0xFE9
 40642                           wreg	equ	0xFE8
 40643                           indf1	equ	0xFE7
 40644                           postdec1	equ	0xFE5
 40645                           fsr1h	equ	0xFE2
 40646                           fsr1l	equ	0xFE1
 40647                           bsr	equ	0xFE0
 40648                           indf2	equ	0xFDF
 40649                           postinc2	equ	0xFDE
 40650                           postdec2	equ	0xFDD
 40651                           plusw2	equ	0xFDB
 40652                           fsr2h	equ	0xFDA
 40653                           fsr2l	equ	0xFD9
 40654                           status	equ	0xFD8
 40655                           pclatu	equ	0xFFB
 40656                           pclath	equ	0xFFA
 40657                           tblptru	equ	0xFF8
 40658                           tblptrh	equ	0xFF7
 40659                           tblptrl	equ	0xFF6
 40660                           tablat	equ	0xFF5
 40661                           prodh	equ	0xFF4
 40662                           prodl	equ	0xFF3
 40663                           intcon	equ	0xFF2
 40664                           intcon2	equ	0xFF1
 40665                           indf0	equ	0xFEF
 40666                           postinc0	equ	0xFEE
 40667                           plusw0	equ	0xFEB
 40668                           fsr0h	equ	0xFEA
 40669                           fsr0l	equ	0xFE9
 40670                           wreg	equ	0xFE8
 40671                           indf1	equ	0xFE7
 40672                           postdec1	equ	0xFE5
 40673                           fsr1h	equ	0xFE2
 40674                           fsr1l	equ	0xFE1
 40675                           bsr	equ	0xFE0
 40676                           indf2	equ	0xFDF
 40677                           postinc2	equ	0xFDE
 40678                           postdec2	equ	0xFDD
 40679                           plusw2	equ	0xFDB
 40680                           fsr2h	equ	0xFDA
 40681                           fsr2l	equ	0xFD9
 40682                           status	equ	0xFD8
 40683                           
 40684                           	psect	param1
 40685  0000                     pclatu	equ	0xFFB
 40686                           pclath	equ	0xFFA
 40687                           tblptru	equ	0xFF8
 40688                           tblptrh	equ	0xFF7
 40689                           tblptrl	equ	0xFF6
 40690                           tablat	equ	0xFF5
 40691                           prodh	equ	0xFF4
 40692                           prodl	equ	0xFF3
 40693                           intcon	equ	0xFF2
 40694                           intcon2	equ	0xFF1
 40695                           indf0	equ	0xFEF
 40696                           postinc0	equ	0xFEE
 40697                           plusw0	equ	0xFEB
 40698                           fsr0h	equ	0xFEA
 40699                           fsr0l	equ	0xFE9
 40700                           wreg	equ	0xFE8
 40701                           indf1	equ	0xFE7
 40702                           postdec1	equ	0xFE5
 40703                           fsr1h	equ	0xFE2
 40704                           fsr1l	equ	0xFE1
 40705                           bsr	equ	0xFE0
 40706                           indf2	equ	0xFDF
 40707                           postinc2	equ	0xFDE
 40708                           postdec2	equ	0xFDD
 40709                           plusw2	equ	0xFDB
 40710                           fsr2h	equ	0xFDA
 40711                           fsr2l	equ	0xFD9
 40712                           status	equ	0xFD8


Data Sizes:
    Strings     4513
    Constant    412
    Data        26
    BSS         638
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     78      85
    BANK0           160    142     153
    BANK1           256    138     240
    BANK2           256    229     245
    BANK3           256      0     184
    BANK4           256      0     244
    BANK5           256      0     100
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          239      0       0

Pointer List with Targets:

    sprintf$3087	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_326(CODE[17]), STR_325(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_323(CODE[32]), STR_322(CODE[35]), STR_321(CODE[35]), STR_300(CODE[10]), 
		 -> STR_287(CODE[23]), STR_286(CODE[23]), STR_227(CODE[23]), STR_226(CODE[23]), 
		 -> STR_222(CODE[16]), STR_221(CODE[36]), STR_209(CODE[13]), STR_208(CODE[20]), 
		 -> STR_207(CODE[17]), STR_206(CODE[29]), STR_190(CODE[15]), STR_189(CODE[32]), 
		 -> STR_171(CODE[15]), STR_170(CODE[22]), STR_30(CODE[19]), STR_27(CODE[52]), 
		 -> STR_26(CODE[48]), STR_25(CODE[47]), STR_24(CODE[54]), STR_23(CODE[53]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK2[200]), SetBaud@buf(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK0[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK0[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK4[144]), 

    Multiple_I2C_Read@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    I2C_Read_Sequential@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    Parse_Time@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    SprintDate@ReturnBuf	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK2[200]), 

    LCD_Scroll@This	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_298(CODE[6]), STR_297(CODE[5]), STR_296(CODE[5]), STR_295(CODE[10]), 
		 -> STR_294(CODE[16]), STR_293(CODE[11]), STR_292(CODE[12]), STR_291(CODE[9]), 
		 -> STR_290(CODE[14]), STR_270(CODE[6]), STR_269(CODE[9]), STR_268(CODE[14]), 
		 -> STR_252(CODE[4]), STR_251(CODE[5]), STR_250(CODE[8]), STR_249(CODE[10]), 
		 -> STR_248(CODE[9]), STR_217(CODE[2]), STR_216(CODE[10]), STR_215(CODE[9]), 
		 -> STR_196(CODE[10]), STR_195(CODE[10]), STR_194(CODE[13]), STR_179(CODE[10]), 
		 -> STR_178(CODE[10]), STR_177(CODE[17]), STR_157(CODE[6]), STR_156(CODE[6]), 
		 -> STR_155(CODE[9]), STR_154(CODE[10]), STR_129(CODE[7]), STR_128(CODE[4]), 
		 -> STR_127(CODE[6]), STR_126(CODE[9]), STR_125(CODE[13]), STR_94(CODE[4]), 
		 -> STR_93(CODE[6]), STR_92(CODE[9]), STR_91(CODE[14]), STR_69(CODE[5]), 
		 -> STR_68(CODE[5]), STR_67(CODE[9]), STR_66(CODE[9]), 

    LCDdisplayFeedback@Text	PTR const unsigned char  size(2) Largest target is 200
		 -> STR_318(CODE[16]), STR_316(CODE[16]), STR_262(CODE[16]), STR_260(CODE[16]), 
		 -> STR_257(CODE[15]), STR_205(CODE[16]), STR_203(CODE[16]), STR_201(CODE[13]), 
		 -> STR_188(CODE[14]), STR_186(CODE[16]), STR_184(CODE[15]), STR_173(CODE[16]), 
		 -> Command@buf(BANK2[200]), STR_169(CODE[14]), STR_167(CODE[16]), STR_165(CODE[15]), 
		 -> STR_147(CODE[13]), STR_145(CODE[15]), STR_141(CODE[14]), STR_137(CODE[16]), 
		 -> STR_124(CODE[16]), STR_116(CODE[16]), STR_114(CODE[16]), STR_111(CODE[15]), 
		 -> STR_108(CODE[15]), STR_105(CODE[14]), STR_102(CODE[16]), STR_90(CODE[16]), 
		 -> STR_83(CODE[16]), STR_81(CODE[15]), STR_78(CODE[14]), STR_75(CODE[16]), 
		 -> STR_59(CODE[12]), STR_57(CODE[9]), STR_54(CODE[8]), STR_51(CODE[13]), 
		 -> STR_48(CODE[9]), STR_45(CODE[8]), STR_42(CODE[13]), 

    LCDPrintString@Text	PTR const unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK3[16]), Scroll_9(BANK3[16]), Scroll_8(BANK3[16]), Scroll_7(BANK3[16]), 
		 -> Scroll_6(BANK2[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_318(CODE[16]), STR_316(CODE[16]), 
		 -> STR_289(CODE[17]), STR_284(CODE[10]), STR_262(CODE[16]), STR_260(CODE[16]), 
		 -> STR_257(CODE[15]), STR_229(CODE[17]), STR_225(CODE[17]), STR_205(CODE[16]), 
		 -> STR_203(CODE[16]), STR_201(CODE[13]), STR_188(CODE[14]), STR_186(CODE[16]), 
		 -> STR_184(CODE[15]), STR_173(CODE[16]), Command@buf(BANK2[200]), STR_169(CODE[14]), 
		 -> STR_167(CODE[16]), STR_165(CODE[15]), STR_147(CODE[13]), STR_145(CODE[15]), 
		 -> STR_141(CODE[14]), STR_137(CODE[16]), STR_124(CODE[16]), STR_116(CODE[16]), 
		 -> STR_114(CODE[16]), STR_111(CODE[15]), STR_108(CODE[15]), STR_105(CODE[14]), 
		 -> STR_102(CODE[16]), STR_90(CODE[16]), STR_83(CODE[16]), STR_81(CODE[15]), 
		 -> STR_78(CODE[14]), STR_75(CODE[16]), STR_59(CODE[12]), STR_57(CODE[9]), 
		 -> STR_54(CODE[8]), STR_51(CODE[13]), STR_48(CODE[9]), STR_45(CODE[8]), 
		 -> STR_42(CODE[13]), STR_20(CODE[10]), STR_19(CODE[17]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[14]), STR_15(CODE[13]), STR_14(CODE[12]), 
		 -> STR_13(CODE[11]), STR_12(CODE[10]), STR_10(CODE[9]), STR_9(CODE[14]), 
		 -> low_isr@LCD_TEMP(BANK0[16]), 

    LCDPrintString@c	PTR unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK3[16]), Scroll_9(BANK3[16]), Scroll_8(BANK3[16]), Scroll_7(BANK3[16]), 
		 -> Scroll_6(BANK2[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_318(CODE[16]), STR_316(CODE[16]), 
		 -> STR_289(CODE[17]), STR_284(CODE[10]), STR_262(CODE[16]), STR_260(CODE[16]), 
		 -> STR_257(CODE[15]), STR_229(CODE[17]), STR_225(CODE[17]), STR_205(CODE[16]), 
		 -> STR_203(CODE[16]), STR_201(CODE[13]), STR_188(CODE[14]), STR_186(CODE[16]), 
		 -> STR_184(CODE[15]), STR_173(CODE[16]), Command@buf(BANK2[200]), STR_169(CODE[14]), 
		 -> STR_167(CODE[16]), STR_165(CODE[15]), STR_147(CODE[13]), STR_145(CODE[15]), 
		 -> STR_141(CODE[14]), STR_137(CODE[16]), STR_124(CODE[16]), STR_116(CODE[16]), 
		 -> STR_114(CODE[16]), STR_111(CODE[15]), STR_108(CODE[15]), STR_105(CODE[14]), 
		 -> STR_102(CODE[16]), STR_90(CODE[16]), STR_83(CODE[16]), STR_81(CODE[15]), 
		 -> STR_78(CODE[14]), STR_75(CODE[16]), STR_59(CODE[12]), STR_57(CODE[9]), 
		 -> STR_54(CODE[8]), STR_51(CODE[13]), STR_48(CODE[9]), STR_45(CODE[8]), 
		 -> STR_42(CODE[13]), STR_20(CODE[10]), STR_19(CODE[17]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[14]), STR_15(CODE[13]), STR_14(CODE[12]), 
		 -> STR_13(CODE[11]), STR_12(CODE[10]), STR_10(CODE[9]), STR_9(CODE[14]), 
		 -> low_isr@LCD_TEMP(BANK0[16]), 

    Send_Config2@data	PTR const unsigned char  size(2) Largest target is 16
		 -> SubLightOFF(CODE[16]), SubLightON(CODE[16]), Aux2OFF(CODE[16]), Aux2ON(CODE[16]), 
		 -> BedOFF(CODE[16]), BedON(CODE[16]), AuxOFF(CODE[16]), AuxON(CODE[16]), 
		 -> fanOFF(CODE[16]), fanON(CODE[16]), 

    Send_Config1@data	PTR const unsigned char  size(2) Largest target is 12
		 -> TXdataF(CODE[12]), TXdataE(CODE[12]), TXdataD(CODE[12]), 

    Command@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    UARTstringWAIT@data	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_34(CODE[18]), STR_33(CODE[17]), STR_32(CODE[24]), STR_31(CODE[23]), 

    UARTstring@data	PTR const unsigned char  size(2) Largest target is 200
		 -> STR_324(CODE[44]), STR_320(CODE[26]), STR_319(CODE[3]), STR_317(CODE[18]), 
		 -> STR_315(CODE[18]), STR_311(CODE[20]), STR_288(CODE[24]), STR_285(CODE[3]), 
		 -> STR_283(CODE[15]), STR_282(CODE[22]), STR_281(CODE[50]), STR_280(CODE[8]), 
		 -> STR_279(CODE[6]), STR_278(CODE[6]), STR_277(CODE[11]), STR_276(CODE[17]), 
		 -> STR_275(CODE[12]), STR_274(CODE[13]), STR_273(CODE[10]), STR_272(CODE[12]), 
		 -> STR_267(CODE[28]), STR_266(CODE[68]), STR_265(CODE[9]), STR_264(CODE[11]), 
		 -> STR_263(CODE[23]), STR_261(CODE[19]), STR_259(CODE[20]), STR_256(CODE[20]), 
		 -> STR_247(CODE[21]), STR_246(CODE[61]), STR_245(CODE[69]), STR_244(CODE[7]), 
		 -> STR_243(CODE[7]), STR_242(CODE[10]), STR_241(CODE[11]), STR_240(CODE[29]), 
		 -> STR_239(CODE[13]), STR_238(CODE[33]), STR_237(CODE[25]), STR_236(CODE[28]), 
		 -> STR_235(CODE[3]), STR_234(CODE[26]), STR_233(CODE[2]), STR_232(CODE[34]), 
		 -> STR_231(CODE[37]), STR_228(CODE[24]), STR_224(CODE[3]), STR_214(CODE[13]), 
		 -> STR_213(CODE[73]), STR_212(CODE[5]), STR_211(CODE[12]), STR_210(CODE[17]), 
		 -> STR_204(CODE[28]), STR_202(CODE[30]), STR_200(CODE[33]), STR_193(CODE[42]), 
		 -> STR_192(CODE[62]), STR_191(CODE[26]), STR_187(CODE[43]), STR_185(CODE[48]), 
		 -> STR_183(CODE[27]), STR_176(CODE[42]), STR_175(CODE[66]), STR_174(CODE[25]), 
		 -> STR_172(CODE[49]), Command@buf(BANK2[200]), STR_168(CODE[33]), STR_166(CODE[38]), 
		 -> STR_164(CODE[27]), STR_163(CODE[28]), STR_153(CODE[37]), STR_152(CODE[68]), 
		 -> STR_151(CODE[18]), STR_150(CODE[15]), STR_149(CODE[11]), STR_148(CODE[28]), 
		 -> STR_146(CODE[18]), STR_144(CODE[32]), STR_140(CODE[31]), STR_136(CODE[38]), 
		 -> STR_123(CODE[24]), STR_122(CODE[68]), STR_121(CODE[10]), STR_120(CODE[6]), 
		 -> STR_119(CODE[8]), STR_118(CODE[11]), STR_117(CODE[21]), STR_115(CODE[16]), 
		 -> STR_113(CODE[19]), STR_110(CODE[18]), STR_107(CODE[16]), STR_104(CODE[15]), 
		 -> STR_101(CODE[22]), STR_89(CODE[27]), STR_88(CODE[68]), STR_87(CODE[7]), 
		 -> STR_86(CODE[8]), STR_85(CODE[11]), STR_84(CODE[24]), STR_82(CODE[19]), 
		 -> STR_80(CODE[19]), STR_77(CODE[18]), STR_74(CODE[25]), STR_65(CODE[17]), 
		 -> STR_64(CODE[68]), STR_63(CODE[8]), STR_62(CODE[7]), STR_61(CODE[11]), 
		 -> STR_60(CODE[17]), STR_58(CODE[12]), STR_56(CODE[9]), STR_53(CODE[8]), 
		 -> STR_50(CODE[13]), STR_47(CODE[9]), STR_44(CODE[8]), STR_41(CODE[13]), 
		 -> STR_36(CODE[4]), STR_35(CODE[22]), STR_29(CODE[22]), STR_28(CODE[3]), 
		 -> SetBaud@buf(BANK1[50]), STR_22(CODE[4]), STR_21(CODE[29]), STR_11(CODE[12]), 
		 -> STR_8(CODE[54]), STR_7(CODE[3]), Version(BANK3[20]), STR_6(CODE[19]), 
		 -> STR_5(CODE[38]), low_isr@TEMP_Rxdata(BANK0[100]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    lowercase@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@address	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    GetEnteredNumber@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StartsWith@That	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_253(CODE[4]), STR_218(CODE[4]), STR_197(CODE[4]), STR_180(CODE[9]), 
		 -> STR_161(CODE[17]), STR_160(CODE[7]), STR_158(CODE[4]), STR_95(CODE[8]), 
		 -> STR_70(CODE[11]), STR_38(CODE[4]), 

    StartsWith@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_314(CODE[2]), STR_313(CODE[14]), STR_312(CODE[7]), STR_310(CODE[13]), 
		 -> STR_309(CODE[12]), STR_308(CODE[18]), STR_307(CODE[17]), STR_306(CODE[16]), 
		 -> STR_305(CODE[2]), STR_304(CODE[11]), STR_303(CODE[8]), STR_302(CODE[8]), 
		 -> STR_301(CODE[16]), STR_254(CODE[2]), STR_230(CODE[4]), STR_223(CODE[5]), 
		 -> STR_220(CODE[8]), STR_219(CODE[2]), STR_199(CODE[2]), STR_198(CODE[2]), 
		 -> STR_182(CODE[2]), STR_181(CODE[2]), STR_162(CODE[2]), STR_159(CODE[2]), 
		 -> STR_143(CODE[5]), STR_142(CODE[6]), STR_139(CODE[4]), STR_138(CODE[6]), 
		 -> STR_135(CODE[2]), STR_134(CODE[6]), STR_133(CODE[2]), STR_132(CODE[10]), 
		 -> STR_131(CODE[6]), STR_130(CODE[6]), STR_98(CODE[4]), STR_97(CODE[6]), 
		 -> STR_96(CODE[2]), STR_71(CODE[2]), STR_39(CODE[2]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_299(CODE[6]), STR_271(CODE[2]), STR_258(CODE[18]), STR_255(CODE[17]), 
		 -> STR_112(CODE[18]), STR_109(CODE[17]), STR_106(CODE[15]), STR_103(CODE[14]), 
		 -> STR_100(CODE[17]), STR_99(CODE[16]), STR_79(CODE[18]), STR_76(CODE[17]), 
		 -> STR_73(CODE[20]), STR_72(CODE[19]), STR_55(CODE[9]), STR_52(CODE[8]), 
		 -> STR_49(CODE[5]), STR_46(CODE[9]), STR_43(CODE[8]), STR_40(CODE[5]), 
		 -> STR_37(CODE[2]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 100
		 -> STR_298(CODE[6]), STR_297(CODE[5]), STR_296(CODE[5]), STR_295(CODE[10]), 
		 -> STR_294(CODE[16]), STR_293(CODE[11]), STR_292(CODE[12]), STR_291(CODE[9]), 
		 -> STR_290(CODE[14]), STR_270(CODE[6]), STR_269(CODE[9]), STR_268(CODE[14]), 
		 -> STR_252(CODE[4]), STR_251(CODE[5]), STR_250(CODE[8]), STR_249(CODE[10]), 
		 -> STR_248(CODE[9]), STR_217(CODE[2]), STR_216(CODE[10]), STR_215(CODE[9]), 
		 -> STR_196(CODE[10]), STR_195(CODE[10]), STR_194(CODE[13]), STR_179(CODE[10]), 
		 -> STR_178(CODE[10]), STR_177(CODE[17]), STR_157(CODE[6]), STR_156(CODE[6]), 
		 -> STR_155(CODE[9]), STR_154(CODE[10]), STR_129(CODE[7]), STR_128(CODE[4]), 
		 -> STR_127(CODE[6]), STR_126(CODE[9]), STR_125(CODE[13]), STR_94(CODE[4]), 
		 -> STR_93(CODE[6]), STR_92(CODE[9]), STR_91(CODE[14]), STR_69(CODE[5]), 
		 -> STR_68(CODE[5]), STR_67(CODE[9]), STR_66(CODE[9]), StringAddEqual@temp(BANK1[100]), 
		 -> RemoveSpaces@That(BANK1[100]), low_isr@TEMP_Rxdata(BANK0[100]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK3[16]), Scroll_9(BANK3[16]), Scroll_8(BANK3[16]), Scroll_7(BANK3[16]), 
		 -> Scroll_6(BANK2[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), Rxdata(BANK3[100]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK4[144]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK3[16]), Scroll_9(BANK3[16]), Scroll_8(BANK3[16]), Scroll_7(BANK3[16]), 
		 -> Scroll_6(BANK2[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), StringAddEqual@temp(BANK1[100]), RemoveSpaces@That(BANK1[100]), 
		 -> Rxdata(BANK3[100]), low_isr@TEMP_Rxdata(BANK0[100]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->_UseIRCode
    i1_BufferCopy->i1_cleanBuffer
    _UseIRCode->i1_SetEEPROM
    i1_UARTstring->i1_UARTchar
    i1_UARTchar->i1_CheckSum_byte
    i1_SetEEPROM->i1_SetMemoryLong
    i1_SetMemoryParity->i1_GetMemoryParity
    i1_SetMemoryParity->i1_WriteEEPROM_1Byte
    i1_GetMemoryParity->i1_ReadEEPROM_1Byte
    i1_SetMemoryLong->i1_GetMemoryLong
    i1_GetMemoryLong->i1_ReadEEPROM_1Byte
    i1_SetMemoryBaud->i1_GetMemoryBaud
    i1_GetMemoryBaud->i1_ReadEEPROM_1Byte
    _LCDScreenUpdate->i1_LCDPrintString
    i1_SetLCDcursor->i1_SendLCDbyte
    i1_LCDPrintString->i1_SendLCDbyte
    i1_LCDPrintChar->i1_SendLCDbyte
    i1_ClearLCD->i1_SendLCDbyte
    i1_SendLCDbyte->i1_delayUS
    i1_PulseEnablePin->i1_delayUS

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Command
    _init_LCD->_SendLCDbyte
    _init_IR->_cleanBuffer16bit
    _SyncEEPROMandGLOBAL->_GetEEPROM
    _GetEEPROM->_GetMemoryLong
    _GetMemoryChar->_ReadEEPROM_1Byte
    _SetEEPROM->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _RTC_INIT->_InternalADC_Read
    _I2C_Read_At_Address->_WriteI2C
    _PWM_init->_SetDuty
    _SetFreq->___aldiv
    ___aldiv->___wmul
    _LCDPrintChar->_SendLCDbyte
    _InitApp->_delayUS
    _ContrastPWM_init->_SetDuty
    _Command->_SetBaud
    _Command->_StringAddEqual
    ___lwtoft->___ftpack
    _StringAddEqual->_BufferCopy
    _SprintDate->_sprintf
    _SetDuty->___fttol
    _SetContrast->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lbtoft
    _SetBaud->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _UARTstringWAIT->_UARTchar
    _SetMemoryParity->_GetMemoryParity
    _SetMemoryParity->_WriteEEPROM_1Byte
    _GetMemoryParity->_ReadEEPROM_1Byte
    _SetMemoryBaud->_GetMemoryBaud
    _GetMemoryBaud->_ReadEEPROM_1Byte
    _InitUART->___lldiv
    _Send_Config2->_One_Config2
    _Send_Config2->_Zero_Config2
    _Zero_Config2->_delayUS
    _One_Config2->_delayUS
    _Send_Config1->_One_Config1
    _Send_Config1->_Zero_Config1
    _Send_Config1->_f_Config1
    _f_Config1->_delayUS
    _Zero_Config1->_delayUS
    _One_Config1->_delayUS
    _SET_RTC_TIME->___awdiv
    _I2C_Write_At_Address->_WriteI2C
    _RemoveSpaces->_BufferCopy
    _ResetI2C->_delayUS
    _Init_I2C_Master->_OpenI2C
    _I2C_Read_Sequential->_Multiple_I2C_Read
    _WriteI2C->_IdleI2C
    _LCDdisplayFeedback->_LCDPrintString
    _SetLCDcursor->_SendLCDbyte
    _LCDPrintString->_SendLCDbyte
    _ClearLCD->_SendLCDbyte
    _SendLCDbyte->_delayUS
    _PulseEnablePin->_delayUS
    _LCD_Scroll->_BufferCopy
    _BufferCopy->_cleanBuffer
    _InternalADC_Read->_UARTstring
    _UARTstring->_UARTchar
    _UARTchar->_CheckSum_byte
    _GetEnteredNumber->___lmul

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Command

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  476156
                                            226 BANK2      3     3      0
                           _ClearLCD
                            _Command
                _ConfigureOscillator
                   _ContrastPWM_init
                  _EnableInternalADC
                            _InitApp
                           _InitUART
                    _Init_I2C_Master
                       _LCDPrintChar
                     _LCDPrintString
                           _PWM_init
                           _RTC_INIT
                          _ReadUSART
                        _SetContrast
                            _SetDuty
                          _SetEEPROM
                       _SetLCDcursor
                _SyncEEPROMandGLOBAL
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                            _init_IR
                           _init_LCD
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             0     0      0   28976
                           _ClearLCD
                     _PulseEnablePin
                        _SendLCDbyte
                            _delayUS
                        _init_Timer1
 ---------------------------------------------------------------------------------
 (2) _init_Timer1                                          0     0      0       0
                        _Stop_Timer1
 ---------------------------------------------------------------------------------
 (3) _Stop_Timer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_IR                                              0     0      0     371
                          _ReadIRpin
                       _Start_Timer0
                   _cleanBuffer16bit
                        _init_Timer0
 ---------------------------------------------------------------------------------
 (2) _init_Timer0                                          0     0      0       0
                        _Stop_Timer0
 ---------------------------------------------------------------------------------
 (3) _Stop_Timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cleanBuffer16bit                                     8     4      4     371
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _Start_Timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SyncEEPROMandGLOBAL                                  9     9      0    3805
                                             68 BANK1      9     9      0
                          _GetEEPROM
 ---------------------------------------------------------------------------------
 (2) _GetEEPROM                                           18     9      9    3703
                                             50 BANK1     18     9      9
                      _GetMemoryBaud
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (3) _GetMemoryChar                                        6     2      4    1085
                                             17 BANK1      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (1) _SetEEPROM                                           17     4     13   11177
                                             67 BANK1     17     4     13
                      _SetMemoryBaud
                      _SetMemoryLong
                    _SetMemoryParity
 ---------------------------------------------------------------------------------
 (2) _SetMemoryLong                                       17    12      5    3926
                                             50 BANK1     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (3) _GetMemoryLong                                       33    29      4    1317
                                             17 BANK1     33    29      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (1) _RTC_INIT                                             0     0      0   25768
                   _InternalADC_Read
                   _RTC_Clock_Enable
               _RTC_TIME_NONMilitary
 ---------------------------------------------------------------------------------
 (2) _RTC_TIME_NONMilitary                                 5     5      0    6934
                                             24 BANK1      5     5      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (2) _RTC_Clock_Enable                                     3     3      0    6866
                                             24 BANK1      3     3      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_At_Address                                  3     1      2     432
                                             16 BANK1      3     1      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0   12112
                            _SetDuty
                            _SetFreq
 ---------------------------------------------------------------------------------
 (2) _SetFreq                                              3     1      2    1438
                                             34 BANK1      3     1      2
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     599
                                             20 BANK1     14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCDPrintChar                                         1     1      0   10064
                                             28 BANK1      1     1      0
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0    4455
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _EnableInternalADC                                    2     2      0     377
                                             14 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ContrastPWM_init                                     0     0      0   10674
                            _SetDuty
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Command                                            228   226      2  291091
                                            136 BANK1      2     0      2
                                              0 BANK2    226   226      0
                            _GetBaud
                   _GetEnteredNumber
                           _ISNUMBER
                   _InternalADC_Read
                     _LCDPrintString
                         _LCD_Scroll
                 _LCDdisplayFeedback
                         _Parse_Time
                      _READ_RTC_TIME
                       _RemoveSpaces
                       _SET_RTC_TIME
                       _Send_Config1
                       _Send_Config2
                            _SetBaud
                        _SetContrast
                            _SetDuty
                       _SetLCDcursor
                         _SprintDate
                         _StartsWith
                     _StringAddEqual
                     _StringContains
                        _StringMatch
                         _UARTstring
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwmod
                           ___lwtoft
                        _cleanBuffer
                            _delayUS
                          _lowercase
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercase                                            4     2      2     439
                                             14 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2649
                                             22 BANK1      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          5     1      4    3395
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringContains                                       5     1      4    6170
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     107   105      2    9660
                                             29 BANK1    107   105      2
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _StartsWith                                           5     1      4    1732
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _SprintDate                                          12     0     12   11386
                                             80 BANK1     12     0     12
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetDuty                                              8     8      0   10674
                                             71 BANK1      8     8      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) _SetContrast                                          8     8      0   10742
                                             71 BANK1      8     8      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2495
                                             22 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     679
                                             56 BANK1     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3682
                                             41 BANK1     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3614
                                             26 BANK1     15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2464
                                             14 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) _SetBaud                                             56    51      5   41929
                                             80 BANK1     56    51      5
                           _InitUART
                      _SetMemoryBaud
                    _SetMemoryParity
                         _UARTstring
                     _UARTstringWAIT
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             48    32     16    9932
                                             36 BANK1     44    28     16
                            _GetBaud (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     694
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     386
                                             27 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UARTstringWAIT                                       2     0      2    5980
                                             25 BANK1      2     0      2
                           _UARTchar
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SetMemoryParity                                      2     2      0    3125
                                             18 BANK1      2     2      0
                    _GetMemoryParity
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (3) _GetMemoryParity                                      1     1      0    1054
                                             17 BANK1      1     1      0
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (2) _SetMemoryBaud                                       16    12      4    3647
                                             49 BANK1     16    12      4
                      _GetMemoryBaud
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (3) _WriteEEPROM_1Byte                                    4     1      3    1975
                                             14 BANK1      4     1      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (4) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetMemoryBaud                                       32    28      4    1193
                                             17 BANK1     32    28      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _ReadEEPROM_1Byte                                     3     1      2    1020
                                             14 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitUART                                            17    12      5    1882
                                             27 BANK1     17    12      5
                          _OpenUSART
                          _ReadUSART
                            ___lldiv
                          _baudUSART
 ---------------------------------------------------------------------------------
 (2) _baudUSART                                            1     1      0      31
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     857
                                             14 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (1) _ReadUSART                                            1     1      0      34
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     387
                                             14 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Send_Config2                                         6     4      2   20029
                                             25 BANK1      6     4      2
                        _One_Config2
                       _Zero_Config2
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config2                                         1     1      0    4517
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config2                                          1     1      0    4517
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _Send_Config1                                         6     4      2   20159
                                             25 BANK1      6     4      2
                        _One_Config1
                       _Zero_Config1
                            _delayUS
                          _f_Config1
 ---------------------------------------------------------------------------------
 (3) _f_Config1                                            1     1      0    4579
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config1                                         1     1      0    4579
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config1                                          1     1      0    4579
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SET_RTC_TIME                                        21    12      9    5638
                                             22 BANK1     21    12      9
               _I2C_Write_At_Address
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1357
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1369
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_At_Address                                 5     3      2    1664
                                             16 BANK1      5     3      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _RemoveSpaces                                       106   104      2    8751
                                             29 BANK1    106   104      2
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _READ_RTC_TIME                                        8     8      0    5938
                                             24 BANK1      8     8      0
                _I2C_Read_Sequential
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _ResetI2C                                             0     0      0    4696
                    _Init_I2C_Master
                            _delayUS
 ---------------------------------------------------------------------------------
 (4) _Init_I2C_Master                                      2     2      0     241
                                             16 BANK1      2     2      0
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (5) _OpenI2C                                              2     1      1     139
                                             14 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Sequential                                  5     1      4     667
                                             17 BANK1      5     1      4
                            _IdleI2C
                  _Multiple_I2C_Read
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             1     1      0      31
                                             15 BANK1      1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Multiple_I2C_Read                                    3     0      3     250
                                             14 BANK1      3     0      3
                            _readI2C
 ---------------------------------------------------------------------------------
 (5) _readI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Parse_Time                                          13    11      2    2693
                                             14 BANK1     13    11      2
 ---------------------------------------------------------------------------------
 (2) _LCDdisplayFeedback                                   2     0      2   38566
                                             32 BANK1      2     0      2
                           _ClearLCD
                     _LCDPrintString
                       _Reset_Timer1
                       _SetLCDcursor
                       _Start_Timer1
 ---------------------------------------------------------------------------------
 (1) _SetLCDcursor                                         3     2      1   12683
                                             28 BANK1      3     2      1
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (1) _LCDPrintString                                       4     2      2   12431
                                             28 BANK1      4     2      2
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _ClearLCD                                             0     0      0   10033
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _SendLCDbyte                                          4     3      1   10033
                                             24 BANK1      4     3      1
                     _PulseEnablePin
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _PulseEnablePin                                       0     0      0    4455
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _delayUS                                             10     6      4    4455
                                             14 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Scroll                                           2     0      2    9979
                                             29 BANK1      2     0      2
                         _BufferCopy
                       _Start_Timer1
 ---------------------------------------------------------------------------------
 (3) _Start_Timer1                                         0     0      0       0
                       _Reset_Timer1
 ---------------------------------------------------------------------------------
 (4) _Reset_Timer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    6358
                                             22 BANK1      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    1995
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _InternalADC_Read                                     5     3      2   11968
                                             29 BANK1      5     3      2
                         _UARTstring
 ---------------------------------------------------------------------------------
 (1) _UARTstring                                           4     2      2   11906
                                             25 BANK1      4     2      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (2) _UARTchar                                             4     2      2    1124
                                             21 BANK1      4     2      2
                      _CheckSum_byte
 ---------------------------------------------------------------------------------
 (3) _CheckSum_byte                                        7     4      3     546
                                             14 BANK1      7     4      3
 ---------------------------------------------------------------------------------
 (2) _ISNUMBER                                             1     1      0      62
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetEnteredNumber                                    15    11      4    1293
                                             26 BANK1     15    11      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                             14 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) _GetBaud                                              4     0      4       0
                                             14 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                            142   142      0   21941
                                              0 BANK0    142   142      0
                         _IRrawToNEC
                   _IsPrintableASCII
                    _LCDScreenUpdate
                       _Reset_Timer0
                          _UseIRCode
                       i1_BufferCopy
                         i1_ClearLCD
                     i1_LCDPrintChar
                   i1_LCDPrintString
                        i1_ReadIRpin
                        i1_ReadUSART
                     i1_SetLCDcursor
                         i1_UARTchar
                       i1_UARTstring
                      i1_cleanBuffer
                 i1_cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (8) i1_cleanBuffer16bit                                   8     4      4     143
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) i1_ReadUSART                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_ReadIRpin                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_BufferCopy                                         7     1      6    1254
                                              8 COMRAM     7     1      6
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (8) _UseIRCode                                          108   102      6    5267
                                             70 COMRAM     8     2      6
                        _ReadButton1
                        i1_SetEEPROM
                       i1_UARTstring
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (8) i1_UARTstring                                         4     2      2     749
                                             11 COMRAM     4     2      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (9) i1_UARTchar                                           4     2      2     501
                                              7 COMRAM     4     2      2
                    i1_CheckSum_byte
 ---------------------------------------------------------------------------------
 (10) i1_CheckSum_byte                                     7     4      3     265
                                              0 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (9) i1_SetEEPROM                                         17     4     13    3832
                                             53 COMRAM    17     4     13
                    i1_SetMemoryBaud
                    i1_SetMemoryLong
                  i1_SetMemoryParity
 ---------------------------------------------------------------------------------
 (10) i1_SetMemoryParity                                   2     2      0     948
                                              4 COMRAM     2     2      0
                  i1_GetMemoryParity
                i1_WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (11) i1_GetMemoryParity                                   1     1      0     324
                                              3 COMRAM     1     1      0
                 i1_ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (10) i1_SetMemoryLong                                    17    12      5    1449
                                             36 COMRAM    17    12      5
                    i1_GetMemoryLong
                i1_WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (11) i1_GetMemoryLong                                    33    29      4     505
                                              3 COMRAM    33    29      4
                 i1_ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (10) i1_SetMemoryBaud                                    16    12      4    1225
                                             35 COMRAM    16    12      4
                    i1_GetMemoryBaud
                i1_WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (11) i1_WriteEEPROM_1Byte                                 4     1      3     557
                                              0 COMRAM     4     1      3
                    i1_EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (12) i1_EEPROM_UNLOCK                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_GetMemoryBaud                                    32    28      4     417
                                              3 COMRAM    32    28      4
                 i1_ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (12) i1_ReadEEPROM_1Byte                                  3     1      2     301
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (9) _ReadButton1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Reset_Timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _LCDScreenUpdate                                      0     0      0    5866
                         i1_ClearLCD
                     i1_LCDPrintChar
                   i1_LCDPrintString
                     i1_SetLCDcursor
                      i1_Stop_Timer1
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (8) i1_cleanBuffer                                        8     4      4     819
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) i1_Stop_Timer1                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_SetLCDcursor                                       3     2      1    1617
                                             14 COMRAM     3     2      1
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_LCDPrintString                                     4     2      2    1560
                                             14 COMRAM     4     2      2
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_LCDPrintChar                                       1     1      0     946
                                             14 COMRAM     1     1      0
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_ClearLCD                                           0     0      0     924
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (9) i1_SendLCDbyte                                        4     3      1     924
                                             10 COMRAM     4     3      1
                   i1_PulseEnablePin
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_PulseEnablePin                                    0     0      0     274
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_delayUS                                          10     6      4     274
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) _IsPrintableASCII                                     1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _IRrawToNEC                                          15    10      5    1512
                                              0 COMRAM    15    10      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _high_isr                                           14    14      0       0
                                              0 BANK1     14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCD
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _Command
     _GetBaud
     _GetEnteredNumber
       ___lmul
     _ISNUMBER
     _InternalADC_Read
       _UARTstring
         _UARTchar
           _CheckSum_byte
     _LCDPrintString
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCD_Scroll
       _BufferCopy
         _cleanBuffer
       _Start_Timer1
         _Reset_Timer1
     _LCDdisplayFeedback
       _ClearLCD
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _LCDPrintString
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _Reset_Timer1
       _SetLCDcursor
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _Start_Timer1
         _Reset_Timer1
     _Parse_Time
     _READ_RTC_TIME
       _I2C_Read_Sequential
         _IdleI2C
         _Multiple_I2C_Read
           _readI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RemoveSpaces
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _SET_RTC_TIME
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       ___awdiv
       ___awmod
     _Send_Config1
       _One_Config1
         _delayUS
       _Zero_Config1
         _delayUS
       _delayUS
       _f_Config1
         _delayUS
     _Send_Config2
       _One_Config2
         _delayUS
       _Zero_Config2
         _delayUS
       _delayUS
     _SetBaud
       _InitUART
         _OpenUSART
         _ReadUSART
         ___lldiv
         _baudUSART
       _SetMemoryBaud
         _GetMemoryBaud
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _SetMemoryParity
         _GetMemoryParity
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _UARTstring
         _UARTchar
           _CheckSum_byte
       _UARTstringWAIT
         _UARTchar
           _CheckSum_byte
         _delayUS
       _delayUS
       _sprintf
         _GetBaud (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _SetContrast
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetLCDcursor
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _SprintDate
       _sprintf
         _GetBaud (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _StartsWith
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContains
     _StringMatch
     _UARTstring
       _UARTchar
         _CheckSum_byte
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwmod
     ___lwtoft
       ___ftpack
     _cleanBuffer
     _delayUS
     _lowercase
     _sprintf
       _GetBaud (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
   _ConfigureOscillator
   _ContrastPWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
   _EnableInternalADC
   _InitApp
     _delayUS
   _InitUART
     _OpenUSART
     _ReadUSART
     ___lldiv
     _baudUSART
   _Init_I2C_Master
     _OpenI2C
   _LCDPrintChar
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _LCDPrintString
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _PWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetFreq
       ___aldiv
         ___wmul (ARG)
       ___wmul
   _RTC_INIT
     _InternalADC_Read
       _UARTstring
         _UARTchar
           _CheckSum_byte
     _RTC_Clock_Enable
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RTC_TIME_NONMilitary
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
   _ReadUSART
   _SetContrast
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetDuty
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetEEPROM
     _SetMemoryBaud
       _GetMemoryBaud
         _ReadEEPROM_1Byte
       _WriteEEPROM_1Byte
         _EEPROM_UNLOCK
     _SetMemoryLong
       _GetMemoryLong
         _ReadEEPROM_1Byte
       _WriteEEPROM_1Byte
         _EEPROM_UNLOCK
     _SetMemoryParity
       _GetMemoryParity
         _ReadEEPROM_1Byte
       _WriteEEPROM_1Byte
         _EEPROM_UNLOCK
   _SetLCDcursor
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _SyncEEPROMandGLOBAL
     _GetEEPROM
       _GetMemoryBaud
         _ReadEEPROM_1Byte
       _GetMemoryChar
         _ReadEEPROM_1Byte
       _GetMemoryLong
         _ReadEEPROM_1Byte
   _UARTstring
     _UARTchar
       _CheckSum_byte
   _cleanBuffer
   _delayUS
   _init_IR
     _ReadIRpin
     _Start_Timer0
     _cleanBuffer16bit
     _init_Timer0
       _Stop_Timer0
   _init_LCD
     _ClearLCD
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _PulseEnablePin
       _delayUS
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
     _delayUS
     _init_Timer1
       _Stop_Timer1

 _low_isr (ROOT)
   _IRrawToNEC
   _IsPrintableASCII
   _LCDScreenUpdate
     i1_ClearLCD
       i1_SendLCDbyte
         i1_PulseEnablePin
           i1_delayUS
         i1_delayUS
     i1_LCDPrintChar
       i1_SendLCDbyte
         i1_PulseEnablePin
           i1_delayUS
         i1_delayUS
     i1_LCDPrintString
       i1_SendLCDbyte
         i1_PulseEnablePin
           i1_delayUS
         i1_delayUS
     i1_SetLCDcursor
       i1_SendLCDbyte
         i1_PulseEnablePin
           i1_delayUS
         i1_delayUS
     i1_Stop_Timer1
     i1_cleanBuffer
   _Reset_Timer0
   _UseIRCode
     _ReadButton1
     i1_SetEEPROM
       i1_SetMemoryBaud
         i1_GetMemoryBaud
           i1_ReadEEPROM_1Byte
         i1_WriteEEPROM_1Byte
           i1_EEPROM_UNLOCK
       i1_SetMemoryLong
         i1_GetMemoryLong
           i1_ReadEEPROM_1Byte
         i1_WriteEEPROM_1Byte
           i1_EEPROM_UNLOCK
       i1_SetMemoryParity
         i1_GetMemoryParity
           i1_ReadEEPROM_1Byte
         i1_WriteEEPROM_1Byte
           i1_EEPROM_UNLOCK
     i1_UARTstring
       i1_UARTchar
         i1_CheckSum_byte
     i1_delayUS
   i1_BufferCopy
     i1_cleanBuffer
   i1_ClearLCD
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDPrintChar
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDPrintString
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_ReadIRpin
   i1_ReadUSART
   i1_SetLCDcursor
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_UARTchar
     i1_CheckSum_byte
   i1_UARTstring
     i1_UARTchar
       i1_CheckSum_byte
   i1_cleanBuffer
   i1_cleanBuffer16bit

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CEE      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      64      16       39.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      F4      14       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      B8      12       71.9%
BITBANK2           100      0       0       9        0.0%
BANK2              100     E5      F5      10       95.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100     8A      F0       8       93.8%
BITBANK12           EF      0       0      29        0.0%
BANK12              EF      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     8E      99       6       95.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4E      55       1       89.5%
BITSFR_8             0      0       0      40        0.0%
SFR_8                0      0       0      40        0.0%
BITSFR_7             0      0       0      40        0.0%
SFR_7                0      0       0      40        0.0%
BITSFR_6             0      0       0      40        0.0%
SFR_6                0      0       0      40        0.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4E3       3        0.0%
DATA                 0      0     4E3       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Mar 13 15:47:24 2015

                      BufferCopy@shift 011B               __size_of_GetMemoryParity 001E  
                    i1LCDPrintString@c 0011                       ?i1_EEPROM_UNLOCK 0001  
              __size_of_StringContains 0080                           _Zero_Config1 7620  
                         _Zero_Config2 08BE                            _SSPSTATbits 000FC7  
                          ?_LCD_Scroll 011D                    ??i1_GetMemoryParity 0004  
                         ___awdiv@sign 0113                                     bsr 000FE0  
                  ___wmul@multiplicand 0110                            __CFG_BORV$3 000000  
                         __CFG_CP0$OFF 000000                           __CFG_CP1$OFF 000000  
                         __CFG_CP2$OFF 000000                           __CFG_CP3$OFF 000000  
                         __CFG_CP4$OFF 000000                           __CFG_CP5$OFF 000000  
                                  l402 7C7A                                    l404 7C84  
                                  l500 78E4                                    l405 7CAA  
                                  l510 73DA                                    l511 73DE  
                                  l247 0F72                                    l513 741E  
                                  l521 7062                                    l282 7AEA  
                                  l530 0B2E                                    l531 0B36  
                                  l284 7AD4                                    l540 7942  
                                  l528 0B26                                    l704 03D0  
                                  l483 5202                                    l555 4834  
                                  l388 4DC0                                    l493 78B4  
                                  l719 07C0                                    l497 78D4  
                                  l498 78D6                                    l499 78E2  
                                  l819 22C4                                    l683 26F6  
                                  l978 7BCC                           __CFG_CPB$OFF 000000  
                                  _PR2 000FCB                           __CFG_CPD$OFF 000000  
                   _TXToiletMyBathroom ED45                   i1LCDPrintString@Text 000F  
                                  _buf 0400                             _IRrawToNEC 40F0  
                           _IRrawCount 00EE                           ___awmod@sign 0113  
                                  prod 000FF3            __size_ofi1_ReadEEPROM_1Byte 0032  
                                  wreg 000FE8                        _LCDScreenUpdate 3D4A  
              SyncEEPROMandGLOBAL@Temp 0144                       ??i1_SetLCDcursor 0010  
                       SetContrast@LSB 014B                         SetContrast@MSB 014A  
                        Send_Config1@i 011D                          Send_Config2@i 011E  
                         __CFG_LVP$OFF 000000                           ___ftdiv@cntr 0123  
                      ??i1_SendLCDbyte 000C                           ___ftdiv@sign 0128  
                         __CFG_WDT$OFF 000000                                   l1005 0C00  
                                 l1400 66C0                                   l1250 3512  
                                 l1242 3464                                   l1218 459A  
                                 l1420 579E                                   l1501 5C80  
                                 l1421 578E                                   l1414 5850  
                                 l1406 5738                                   l1271 3704  
                                 l1263 3656                                   l1415 5778  
                                 l1520 5CBE                                   l1512 5CA2  
                                 l1504 5C88                                   l1440 57F4  
                                 l1432 57E2                                   l1424 582E  
                                 l1416 5768                                   l1433 57D2  
                                 l1425 57A6                                   l1409 5740  
                RTC_Clock_Enable@Error 011A                                   l1258 35AC  
                                 l1507 5C90                                   l1443 57FC  
                                 l1419 583C                                   l1516 5CB0  
                                 l1380 667A                                   l1436 5818  
                                 l1428 57AE                                   l1349 7A6C  
                                 l1381 6672                                   l1437 57EA  
                                 l1358 7A96                                   l1470 5BDA  
                                 l1390 669E                                   l1374 66B4  
                                 l1366 6610                                   l2502 7A3A  
                                 l1462 5840                                   l1454 581C  
                                 l1446 5804                                   l1279 379E  
                                 l1527 0504                                   l1375 665C  
                                 l1199 7B70                                   l1544 0D9E  
                                 l1536 0534                                   l1480 5CBA  
                                 l1384 669A                                   l1376 6654  
                                 l2352 56F2                                   l1289 385A  
                                 l1545 0DA2                                   l1481 5C24  
                                 l1369 6618                                   l1449 580C  
                                 l1482 5C1C                                   l1394 66AC  
                                 l1386 6690                                   l1458 5832  
                                 l1467 5BD2                                   l1379 66A8  
                                 l1492 5C54                                   l1476 5C06  
                                 l1580 0E3C                                   l1493 5C4C  
                                 l1485 5CAC                                   l1477 5BFE  
                                 l1397 66B8                                   l2429 6916  
                                 l1573 09DA                                   l1486 5C2C  
                                 l2439 6FF4                                   l1496 5C9E  
                                 l2288 5B8C                                   l1497 5C72  
                                 l1489 5C34                                   l1921 2F4A  
                                 l1498 5C78                                   l1586 08A8  
                                 l1863 2974                                   l1839 279E  
                                 l1937 3078                                   l1882 2B9E  
                                 STR_1 FFFC                                   STR_2 F94E  
                                 STR_3 FFFC                                   STR_4 F4D1  
                                 STR_5 F280                                   STR_6 F813  
                                 STR_7 F6CE                                   STR_8 F022  
                                 STR_9 FCC5                EnableInternalADC@config 010E  
                ??_I2C_Read_At_Address 0112                                   _LATA 000F89  
                                 _LATC 000F8B                                   _LATD 000F8C  
                                 _LATE 000F8D                                   _PIE1 000F9D  
                                 i1l74 0302                    _SyncEEPROMandGLOBAL 0A32  
                        i1_Stop_Timer1 0F78              __end_ofi1_GetMemoryParity 0E5C  
                         __CFG_PWRT$ON 000000                             i1delayUS@i 0006  
                           i1delayUS@j 000A                          ?_LCDPrintChar 0001  
           WriteEEPROM_1Byte@GIEstatus 0111                                   _main 387C  
                   UARTstringWAIT@data 0119                           ___ftpack@arg 010E  
                         ___ftpack@exp 0111                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   indf0 000FEF  
                                 fsr0l 000FE9                                   fsr2h 000FDA  
                                 indf1 000FE7                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                     ??_PulseEnablePin 0118                    baudUSART@baudconfig 010E  
                                 pclat 000FFA                __end_of_Init_I2C_Master 0750  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 04E8                    i1_WriteEEPROM_1Byte 0AA2  
                      __end_of_Aux2OFF EDA9                          __CFG_IESO$OFF 000000  
                      Command@BAUDtemp 02CE                        __end_of_IdleI2C 0EC4  
                      __end_of_GetBaud 0ED6                      ?_GetEnteredNumber 011A  
                         _sprintf$3080 013B                           _sprintf$3081 013D  
                         _sprintf$3087 013F             __size_of_Multiple_I2C_Read 0062  
                        __CFG_MCLRE$ON 000000                           ___ftmul@cntr 0136  
                      __end_of_Command 270C                         UARTstring@data 0119  
                          ?i1_UARTchar 0008                           ___param_bank 000001  
                         ___ftmul@sign 0137                        __end_of_TXdataD EE45  
                      __end_of_TXdataE EE51                        __end_of_TXdataF EE5D  
                        ??_ReadButton1 0001                        __end_of_InitApp 0608  
                   ??_GetEnteredNumber 011E                        SetContrast@Duty 014E  
                      __end_of_OpenI2C 0D8A               I2C_Write_At_Address@data 0111  
                      __end_of_SetBaud 497A                           ___fttol@exp1 0146  
               __size_of_READ_RTC_TIME 00EA                           ___fttol@lval 0142  
                      __end_of_SetFreq 06B4                        __end_of_SetDuty 6C08  
                 ?_SyncEEPROMandGLOBAL 0001                        SetContrast@temp 014C  
                         f_Config1@pin 0118      i1UARTchar@NinethBit_override_data 0009  
      UARTchar@NinethBit_override_data 0116                           ?_init_Timer0 0001  
                         ?_init_Timer1 0001                      IRrawToNEC@NECtemp 0008  
                       _LCDPrintString 778E               i1GetMemoryBaud@BaudTempH 0020  
             i1GetMemoryBaud@BaudTempL 0023                                  l12013 73AE  
                                l12021 73FC                                  l12015 73C2  
                                l12023 7414                                  l12111 610E  
                                l12033 0636                                  l12121 6126  
                                l12113 6112                                  l12201 7AA6  
                                l12041 0732                                  l12019 73E2  
                                l12211 04EE                                  l12043 073E  
                                l13003 6626                                  l12029 0616  
                                l12141 6164                                  l12125 6130  
                                l12117 611C                                  l12205 7AAA  
                                l12061 78AA                                  l12053 7894  
                                l12301 5AC0                                  l12223 0524  
                                l13111 5CC8                                  l12153 6182  
                                l12145 616E                                  l12129 613A  
                                l12073 78CA                                  l12065 78B8  
                                l12057 78A0                                  l12313 5B3A  
                                l12305 5AD6                                  l12411 6A12  
                                l12155 6188                                  l14003 34B8  
                                l12219 0510                                  l12227 053C  
                                l12323 5B98                                  l12315 5B6C  
                                l12307 5AE6                                  l13141 7728  
                                l12149 6178                                  l14101 3676  
                                l14021 350E                                  l13301 656A  
                                l12341 68A2                                  l12317 5B7C  
                                l12309 5B18                                  l13205 564E  
                                l12407 6A04                                  l14007 34BC  
                                l12183 7A7A                                  l13063 5BE8  
                                l13039 66CC                                  l13311 65A0  
                                l12351 6902                                  l12343 68AC  
                                l12511 27CE                                  l12503 2772  
                                l13145 7750                                  l14113 36AE  
                                l14041 3566                                  l14033 3532  
                                l14017 34FA                                  l12169 7A54  
                                l13057 5BE2                                  l12361 6F90  
                                l12601 2AB6                                  l12329 5BB6  
                                l13225 56B0                                  l13401 5588  
                                l12371 7006                                  l12419 6A2C  
                                l12427 6A6A                                  l14123 36EC  
                                l12187 7A7E                                  l13307 6588  
                                l13323 65E2                                  l12339 6890  
                                l12451 51FE                                  l12363 6F9A  
                                l12507 27AA                                  l13235 5704  
                                l13251 50D0                                  l13403 559A  
                                l15011 1744                                  l15003 16CC  
                                l13171 58E0                                  l13163 58A0  
                                l11901 7ADC                                  l14109 36AA  
                                l14045 356A                                  l14029 352E  
                                l13309 6596                                  l12541 28EC  
                                l12605 2ABE                                  l13245 5096  
                                l13405 55A8                                  l13181 5940  
                                l13173 58EA                                  l13157 5880  
                                l12375 706A                                  l12383 0950  
                                l14151 375C                                  l14135 3720  
                                l14127 3700                                  l14071 35FC  
                                l14063 35C8                                  l14055 35A8  
                                l13327 65F8                                  l13319 65D2  
                                l13351 6AFE                                  l13343 6AD2  
                                l12367 6FE0                                  l12359 6F7E  
                                l12287 0C5A                                  l12615 2B56  
                                l12607 2B14                                  l12551 296A  
                                l12527 2888                                  l12519 2850  
                                l13503 75A0                                  l13431 055C  
                                l13601 4C24                                  l12393 7798  
                                l12385 0958                                  l14209 3856  
                                l14161 379A                                  l12481 794A  
                                l12801 3136                                  l12721 2ECC  
                                l12713 2E68                                  l12705 2E10  
                                l12641 2C1A                                  l12633 2BEA  
                                l12561 29A4                                  l12553 2970  
                                l12545 2938                                  l13273 515C  
                                l13265 5120                                  l13409 55C6  
                                l15113 1CC8                                  l13169 58CE  
                                l13185 5954                                  l13425 0EFE  
                                l11923 7CA6                                  l11915 7C92  
                                l11907 7C70                                  l14147 3758  
                                l14139 3724                                  l14075 3600  
                                l13099 5CA6                                  l13363 6B4A  
                                l13355 6B24                                  l13347 6AE6  
                                l13339 6AC0                                  l12475 78F4  
                                l12707 2E1C                                  l12619 2B7E  
                                l12571 29E0                                  l12555 297A  
                                l12539 28E0                                  l12547 2954  
                                l12491 273C                                  l13283 51A0  
                                l13275 5164                                  l13523 74E6  
                                l15115 1CDC                                  l15131 1DEE  
                                l15027 17EA                                  l15035 186E  
                                l13435 0580                                  l13621 4CEA  
                                l11933 7CB4                                  l12397 77CC  
                                l14181 37EA                                  l14085 363E  
                                l13349 6AF4                                  l14261 4624  
                                l14253 45C0                                  l14237 451C  
                                l14229 44B8                                  l12813 3240  
                                l12805 314A                                  l12821 32E2  
                                l12733 2F42                                  l12725 2F04  
                                l12653 2C70                                  l12645 2C28  
                                l12629 2BC0                                  l12565 29CA  
                                l12549 2964                                  l12493 2752  
                                l12485 271C                                  l13269 5140  
                                l13373 54C2                                  l13517 74D2  
                                l13509 74AC                                  l15221 2372  
                                l15117 1D06                                  l13189 5972  
                                l13607 4C3A                                  l13295 6552  
                                l13359 6B34                                  l12831 334A  
                                l12815 324E                                  l12807 31CE  
                                l12823 3302                                  l12751 2FC2  
                                l12727 2F10                                  l12719 2EC0  
                                l12663 2CC4                                  l12655 2C76  
                                l12639 2C14                                  l12591 2A66  
                                l12575 29F4                                  l12583 2A30  
                                l12567 29D6                                  l12495 2758  
                                l13199 5614                                  l13279 5184  
                                l13391 5556                                  l13535 727A  
                                l13551 72D0                                  l13527 7514  
                                l15119 1D1A                                  l14319 7B78  
                                l13625 4D08                                  l14177 37E4  
                                l14169 37BA                                  l14097 3672  
                                l14089 3652                                  l12825 330E  
                                l12817 327C                                  l12673 2CE0  
                                l12649 2C68                                  l12593 2A84  
                                l12577 2A0E                                  l12497 275E  
                                l13545 72BC                                  l13705 4EBE  
                                l15241 2486                                  l15161 2018  
                                l15081 1B8A                                  l15057 1A4C  
                                l14353 5EC0                                  l13619 4CE2  
                                l13571 4B8C                                  l13723 0DE2  
                                l13811 49C4                                  l11891 7AC4  
                                l12827 3316                                  l12739 2F5E  
                                l12755 2FD2                                  l12763 3008  
                                l12667 2CCC                                  l12659 2C84  
                                l12683 2D28                                  l12587 2A52  
                                l12499 2764                                  l13731 4706  
                                l13395 556A                                  l13563 7306  
                                l13491 756A                                  l13483 752A  
                                l15251 24F8                                  l15219 2360  
                                l15147 1F10                                  l15075 1B26  
                                l14451 6E3A                                  l13629 4D26  
                                l13581 4BD0                                  l11893 7ACA  
                                l14197 3824                                  l11957 0EB2  
                                l13645 71A6                                  l14277 46EC  
                                l14269 4688                                  l12773 3044  
                                l12757 2FDE                                  l12749 2FB6  
                                l12693 2DA2                                  l12677 2D20  
                                l12669 2CD2                                  l12685 2D48  
                                l12597 2A9E                                  l12837 3374  
                                l13733 4734                                  l13741 47BE  
                                l13549 72C2                                  l13709 4EC4  
                                l13493 7578                                  l13653 7314  
                                l13661 736E                                  l15237 245A  
                                l15229 23E2                                  l15077 1B6C  
                                l15341 38EC                                  l13575 4BAE  
                                l13903 7BB2                                  l13831 4AAA  
                                l13823 4A4E                                  l13815 49F2  
                                l13639 7172                                  l13647 71AE  
                                l12783 308E                                  l12767 301A  
                                l12839 339A                                  l13735 4762  
                                l13743 47D8                                  l13487 7566  
                                l14383 7A2A                                  l14375 79EC  
                                l15263 255E                                  l15255 251A  
                                l15191 227A                                  l15159 1FF6  
                                l14471 6E82                                  l14463 6E64  
                                l14455 6E48                                  l14447 6E2C  
                                l13569 4B84                                  l12777 3070  
                                l12689 2D70                                  l13761 48A4  
                                l13737 4790                                  l13745 4806  
                                l13673 4DA2                                  l14377 79FA  
                                l15273 25C4                                  l15169 209A  
                                l15097 1C20                                  l15089 1BBA  
                                l14801 0BD2                                  l14721 0634  
                                l14617 00B8                                  l12945 5748  
                                l13595 4C0C                                  l13843 4B34  
                                l13835 4AD8                                  l13827 4A7C  
                                l13819 4A20                                  l12867 6454  
                                l12699 2DD8                                  l13771 4900  
                                l13683 4DF6                                  l13675 4DC6  
                                l14379 7A04                                  l13659 7368  
                                l15267 2580                                  l15259 253C  
                                l15275 25D6                                  l15195 2298  
                                l14803 0BF6                                  l14723 0658  
                                l14483 6EB0                                  l14475 6E90  
                                l14467 6E72                                  l14459 6E56  
                                l15443 3C76                                  l15363 39A4  
                                l15347 3948                                  l13933 636C  
                                l13861 64E8                                  l13853 6474  
                                l12789 30D2                                  l13773 4912  
                                l13781 4950                                  l13685 4DFE  
                                l13669 4D68                                  l13677 4DCC  
                                l15269 2594                                  l15189 2234  
                                l14901 11E6                                  l14821 0D24  
                                l14741 0784                                  l14709 054C  
                                l14733 070C                                  l14661 024C  
                                l14653 0208                                  l14645 01C2  
                                l14637 017E                                  l14629 013A  
                                l14485 6EB6                                  l12981 5820  
                                l12949 5752                                  l14581 6D56  
                                l13839 4B06                                  l13935 6372  
                                l13863 64F2                                  l12879 0B08  
                                l12799 312A                                  l13775 4924  
                                l13783 4962                                  l13695 4E56  
                                l13679 4DE8                                  l15295 26AE  
                                l14815 0CCA                                  l14671 02B4  
                                l14479 6E9E                                  l14575 6D20  
                                l15471 3CE6                                  l15439 3C68  
                                l15375 39DE                                  l15359 399A  
                                l13857 64AE                                  l13849 646A  
                                l13769 48EE                                  l13945 601C  
                                l13689 4E30                                  l15297 26B2  
                                l15289 2652                                  l14905 1220  
                                l14921 12E2                                  l14753 0866  
                                l14681 0358                                  l14497 0BFC  
                                l12969 57BE                                  l14569 6CFC  
                                l15481 3D2A                                  l15465 3CC8  
                                l15449 3C9C                                  l15393 3A5A  
                                l13867 64F8                                  l13883 7478  
                                l13875 7434                                  l13779 4936  
                                l13947 6066                                  l13699 4E60  
                                l15299 26D4                                  l14851 0F06  
                                l13965 340A                                  l13957 33D6  
                                l13885 7482                                  l14941 13EA  
                                l14909 124A                                  l14837 0E24  
                                l14765 093C                                  l14669 0290  
                                l15469 3CE0                                  l13991 3480  
                                l13983 3460                                  l13879 743E  
                                l14919 12BE                                  l13969 340E  
                                l13889 7488                                  l14953 1476  
                                l14945 13FA                                  l14937 13AE  
                                l14929 1346                                  l14865 0FE8  
                                l14777 0A24                                  l14697 0476  
                                l13995 3484                                  l13979 344C  
                                l14867 100C                                  l14957 14A0  
                                l14949 143C                                  l14893 1194  
                                l14885 1128                                  l14877 10B0  
                                l14789 0AFA                                  l14991 162C  
                                l14983 15E0                                  l14967 1514  
                                l14975 1578                                  l14897 11A4  
                                l14889 1158                                  l14995 166E  
                                l14987 161C                                  l14999 1698  
                      __end_of___aldiv 5986                                  ?_main 0001  
             __size_ofi1_CheckSum_byte 004C                 __size_ofi1_cleanBuffer 003E  
                      __end_of___awdiv 6604                                  _EEADR 000FA9  
                          ?i1_ClearLCD 0001                                  STR_10 FEE9  
                                STR_11 FDAB                                  STR_12 FE7C  
                                STR_20 FE72                                  STR_13 FDF9  
                                STR_21 F4B6                                  STR_14 FDAB  
                                STR_22 F4CF                                  STR_30 F800  
                                STR_31 F076                                  STR_15 FD62  
                                STR_23 F058                                  STR_32 F00A  
                                STR_40 FFBD                                  STR_16 FCB7  
                                STR_24 EFEC                                  STR_33 F1A2  
                                STR_41 FD21                                  STR_17 FC1C  
                                STR_25 F184                                  STR_34 F172  
                                STR_42 FD21                                  STR_50 FD2E  
                                STR_18 FB49                                  STR_26 F154  
                                STR_35 F0AB                                  STR_51 FD2E  
                                STR_43 FF2A                                  STR_19 F9D8  
                                STR_27 F08D                                  STR_36 EEE7  
                                STR_28 F6CE                                  STR_52 FF32  
                                STR_44 FF1A                                  STR_60 F8FB  
                      __end_of___awmod 6B56                                  STR_37 F4D1  
                                STR_45 FF1A                                  STR_53 FF22  
                                STR_61 FDB7                                  STR_29 F6FD  
                                STR_38 FF71                                  STR_54 FF22  
                                STR_62 FF60                                  STR_46 FEB3  
                                STR_70 FDEE                                  STR_71 FA17  
                                STR_39 FA17                                  STR_63 FEF2  
                                STR_55 FEBC                                  STR_47 FEA1  
                                STR_48 FEA1                                  STR_56 FEAA  
                                STR_72 F7ED                                  STR_80 F7C7  
                                STR_64 EEEB                                  STR_57 FEAA  
                                STR_49 FFC7                                  STR_81 FBA4  
                                STR_65 F92E                                  STR_73 F779  
                                STR_58 FA3D                                  STR_66 FEE0  
                                STR_90 FB29                                  STR_82 F7A1  
                                STR_74 F615                                  STR_59 FA3D  
                                STR_67 FE8F                                  STR_91 FCA9  
                                STR_75 FA79                                  STR_83 FA09  
                                STR_92 FE8F                                  STR_68 FFB8  
                                STR_76 F972                                  STR_84 F62E  
                                STR_85 FDB7                                  STR_69 FFC2  
                                STR_93 FFA7                                  STR_77 F892  
                                STR_94 FFEC                                  STR_86 FF02  
                                STR_78 FC71                                  STR_87 FF52  
                                STR_95 FF12                                  STR_79 F85C  
                                STR_88 EEEB                                  STR_96 FA17  
                                STR_97 FFAD                                  STR_89 F57A  
                                STR_98 FFF0                                  STR_99 FB09  
                      __end_of___ftdiv 572C                       __end_of_ISNUMBER 0DE8  
                      __end_of___lldiv 6928                        __end_of___ftmul 51C8  
                      ___awdiv@divisor 0110                        __end_of___llmod 7006  
                      __end_of___fttol 55DA                                  _T2CON 000FCA  
              ReadEEPROM_1Byte@address 010E                                  u15130 7028  
                                u15210 77C0                                  u15150 705C  
                                u15230 77FA                                  u15320 5274  
                                u15137 701E                                  u15217 77B6  
                                u15170 70A2                                  u15157 7052  
                                u15237 77F0                                  u15325 5268  
                                u15270 6A56                                  u15280 6A8C  
                                u15177 7098                                  u15277 6A4C  
                                u15287 6A82                                  u15911 3106  
                                u15760 2EB4                                  u18225 4526  
                                u16801 50AC                                  u18321 06F6  
                                u18330 5E04                                  u16731 55F0  
                                u19301 1C92                                  u19070 1452  
                                u16751 562A                                  u19231 1A8A  
                                u18335 5DF8                                  u16781 5072  
                                u15990 63B2                                  u16961 549E  
                                u19281 1C56                                  u19450 24BC  
                                u15995 63A6                                  u19371 21B4  
                                u18491 0A3C                                  u19611 390E  
                                i1l100 04A0                                  u16980 54E8  
                                i1l101 0462                                  u19461 24D4  
                                i1l110 0484                                  i1l112 048E  
                                u16985 54DE                                  i1l114 049C  
                                u19570 268E                                  u19590 38CE  
                                i1l402 0806                                  i1l405 0828  
                                i1l510 7838                                  u18990 11FC  
                                i1l511 783C                                  i1l513 7878  
                                i1l521 723A                        __end_of___lwmod 7A44  
                                i1l282 0780                                  i1l530 0B94  
                                i1l531 0B9C                                  i1l284 076E  
                                i1l528 0B8C                        ___awdiv@counter 0112  
                                _RCREG 000FAE                   ?i1_WriteEEPROM_1Byte 0001  
                                _RCSTA 000FAB                                  _TMR0H 000FD7  
                                _TMR1H 000FCF                                  _TMR0L 000FD6  
                                _TMR1L 000FCE                                  _SPBRG 000FAF  
                           _BufferCopy 69E6                                  _PORTB 000F81  
                                _BedON EDE9                           InitUART@Baud 011B  
                                _TXREG 000FAD                                  _TXSTA 000FAC  
                        ??_One_Config1 0118                          ??_One_Config2 0118  
                  _ConfigureOscillator 0F70                        __end_of_delayUS 7B1C  
                     _InternalADC_Read 7B86                                  _AuxON EDC9  
                        __CFG_WRT0$OFF 000000                            i1delayUS@US 0001  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                  ___lmul@multiplicand 0112                          __CFG_WRT3$OFF 000000  
                        __CFG_WRT4$OFF 000000                          __CFG_WRT5$OFF 000000  
                       __CFG_EBTR0$OFF 000000                         __CFG_FCMEN$OFF 000000  
                       __CFG_EBTR1$OFF 000000                         __CFG_EBTR2$OFF 000000  
                       __CFG_EBTR3$OFF 000000                         __CFG_EBTR4$OFF 000000  
                       __CFG_EBTR5$OFF 000000                           InitUART@temp 0128  
                         _IRrawCodeNum 00F1                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                                _fanON EE29                       __end_of_UARTchar 7424  
                      __end_of_readI2C 0DAC                             SetBaud@buf 0155  
                       __CFG_EBTRB$OFF 000000                        __end_of_init_IR 087E  
                      __end_of_dpowers ED19                       __end_of_RTC_INIT 0EF6  
                      __end_of_isdigit 0C66               i1SetMemoryBaud@BaudTempH 0030  
             i1SetMemoryBaud@BaudTempL 0033                          ___ftpack@sign 0112  
                       ?i1_Stop_Timer1 0001                       Command@ADC_Value 02C8  
                       ??_LCDPrintChar 011C                          ??_SendLCDbyte 0119  
                      __end_of_low_isr 04E8              i1ReadEEPROM_1Byte@address 0001  
          I2C_Read_At_Address@Register 0110                                  tablat 000FF5  
                        ?_SetLCDcursor 011C                    __size_of_LCD_Scroll 01EA  
                                plusw0 000FEB                                  plusw2 000FDB  
                     __end_of_PWM_init 0C08                            ?_UARTstring 0119  
              InternalADC_Read@channel 0121                                  status 000FD8  
                      __end_of_sprintf 33AA                       __end_of_ClearLCD 0E02  
                 __size_of_cleanBuffer 005A                  __end_of_GetMemoryBaud 5488  
                __end_of_GetMemoryChar 0D18                         __CFG_PBADEN$ON 000000  
                 ?_ConfigureOscillator 0001                  __end_of_GetMemoryLong 505C  
                   StringContains@That 0110                     StringContains@This 010E  
                   __size_ofi1_delayUS 004E                             SetDuty@LSB 014C  
                           SetDuty@MSB 014B                        __initialization 6D6A  
                   StringAddEqual@temp 0121                    _I2C_Read_Sequential 5BC6  
                __end_of_EEPROM_UNLOCK 0E46                     __size_of_GetEEPROM 004E  
                         __end_of_main 3D4A                       __end_of_InitUART 5332  
                     ??_UARTstringWAIT 011B                          ??_SetContrast 0147  
               __end_of_LCDPrintString 7806                  ??_SyncEEPROMandGLOBAL 0144  
                       __CFG_OSC$HSPLL 000000                __end_of_LCDScreenUpdate 40F0  
            __size_of_ContrastPWM_init 000C                          _LCDclearCount 004F  
                               ??_main 018A                      ??_GetMemoryParity 0111  
                        ___fttol@sign1 0141                         SetDuty@tempPR2 0148  
                      Send_Config1@pin 011E                    __end_of_ReadButton1 0F2E  
                      Send_Config2@pin 011D                       __end_of_ResetI2C 0D66  
                      SendLCDbyte@data 0119                  ??i1_WriteEEPROM_1Byte 0004  
                        __activetblptr 000003                            ?_IRrawToNEC 0001  
               Multiple_I2C_Read@rdptr 010E                             _Parse_Time 33AA  
             __size_ofi1_SetMemoryBaud 00B2                        low_isr@LCD_TEMP 00D9  
             __size_ofi1_SetMemoryLong 00BE                   ?_I2C_Read_Sequential 0111  
                     i1CheckSum_byte@i 0007                             UseIRCode@i 004E  
                       _StringAddEqual 4D3A                                 _ADCON0 000FC2  
                               _ADCON1 000FC1                                 _ADCON2 000FC0  
                  __size_ofi1_UARTchar 0078                       ___llmod@dividend 011B  
                               STR_100 F950                                 STR_101 F6E7  
                               STR_102 FA89                                 STR_110 F8A4  
                               STR_103 FC8D                                 STR_111 FBD1  
                               STR_120 FF89                                 STR_104 FBE0  
                               STR_112 F86E                                 STR_200 F3BE  
                               STR_121 FE04                                 STR_201 FCFA  
                               STR_105 FC7F                                 STR_113 F7DA  
                               STR_122 EEEB                                 STR_130 FFA1  
                               STR_106 FBC2                                 STR_114 FAC9  
                               STR_210 F8EA                                 STR_202 F45E  
                               _ADRESH 000FC4                                 STR_131 FF9B  
                               STR_211 FD7B                                 STR_203 FAF9  
                               STR_107 FAD9                                 STR_115 FA19  
                               STR_123 F65E                                 STR_116 FA19  
                               STR_212 FFB3                                 STR_220 FF4A  
                               STR_132 FE54                                 STR_300 FE4A  
                               STR_108 FBB3                                 STR_124 FA29  
                               STR_204 F4EF                                 STR_140 F43F  
                               _EEADRH 000FAA                                 STR_133 FA17  
                               STR_125 FD55                                 STR_141 FC63  
                               STR_301 FB19                                 STR_205 FAB9  
                               STR_109 F983                                 STR_117 F713  
                               STR_221 F2F0                                 STR_213 EE5D  
                               STR_118 FDB7                                 STR_126 FE8F  
                               STR_142 FF9B                                 STR_134 FFA1  
                               STR_230 FFF8                                 STR_302 FF3A  
                               STR_310 FD3B                                 STR_214 FCD3  
                               STR_150 FB68                                 STR_222 FA99  
                               STR_206 F499                                 _ADRESL 000FC3  
                               STR_119 FF02                                 STR_135 FD05  
                               STR_143 FEB7                                 STR_127 FFA7  
                               STR_223 FFDB                                 STR_303 FF0A  
                               STR_215 FECE                                 STR_207 F90C  
                               STR_151 F826                                 STR_311 F73D  
                               STR_231 F2CB                     _LCDdisplayFeedback 09F6  
                               STR_224 F6CE                                 STR_152 EEEB  
                               STR_216 FE36                                 STR_128 FFEC  
                               STR_312 FF7C                                 STR_160 FF6E  
                               STR_304 FDE3                                 STR_208 F751  
                               STR_320 F595                                 STR_240 F47C  
                               STR_144 F41F                                 STR_232 F35A  
                               STR_136 F25A                                 STR_217 FC37  
                               STR_305 FD05                                 STR_233 F4D1  
                               STR_129 FF75                                 STR_241 FDC2  
                               STR_209 FD14                                 STR_313 FC55  
                               STR_145 FB95                                 STR_137 FA69  
                               STR_161 F9A5                                 STR_225 F93F  
                               STR_321 F314                                 STR_153 F2A6  
                               STR_314 FD05                                 STR_162 FD05  
                               STR_138 FF9B                                 STR_218 FFE4  
                               STR_250 FF42                                 STR_154 FE5E  
                               STR_242 FE18                                 STR_306 FB39  
                               STR_146 F84A                                 STR_170 F6D1  
                               STR_226 F6A4                                 STR_234 F5C9  
                               STR_322 F337                                 STR_235 F6CE  
                               STR_155 FE8F                                 STR_219 FA17  
                               STR_139 FF2E                                 STR_251 FFD6  
                               STR_243 FF67                                 STR_147 FD07  
                               STR_171 FB86                                 STR_307 F9B6  
                               STR_315 F838                                 STR_227 F68D  
                               STR_163 F50B                                 STR_323 F3DF  
                               STR_156 FF9B                                 STR_252 FFF4  
                               STR_244 FF59                                 STR_180 FEC5  
                               STR_260 FAE9                                 STR_316 FAA9  
                               STR_308 F8B6                                 STR_228 F646  
                               STR_164 F55F                                 STR_236 F543  
                               STR_148 F4D3                                 STR_324 F1B3  
                               STR_172 F0F3                                 STR_149 FDB7  
                               STR_317 F838                                 STR_181 FA17  
                               STR_157 FFA1                                 STR_253 FFE8  
                               STR_309 FD9F                                 STR_165 FC0D  
                               STR_173 FA39                                 STR_229 F961  
                               STR_325 F8C8                                 STR_261 F7B4  
                               STR_237 F5FC                                 STR_245 EEA6  
                               _EEDATA 000FA8                                 STR_182 FD05  
                               STR_254 FA17                                 STR_158 F4B2  
                               STR_318 FAA9                                 STR_270 FFA7  
                               STR_190 FB77                                 STR_262 FA49  
                               STR_326 F8D9                                 STR_174 F5E3  
                               STR_238 F39D                                 STR_166 F234  
                               STR_246 EFAF                                 STR_319 F6CE  
                               STR_183 F55F                                 STR_271 FA17  
                               STR_159 FA17                                 STR_239 FCED  
                               STR_167 F9F9                                 STR_255 F994  
                               STR_247 F728                                 STR_263 F676  
                               STR_191 F5AF                                 STR_175 EF2F  
                               STR_264 FDB7                                 STR_280 FEFA  
                               STR_248 FED7                                 STR_272 FD6F  
                               STR_184 FBFE                                 STR_256 F78D  
                               STR_168 F37C                                 STR_176 F20A  
                               STR_192 EF71                                 STR_193 F20A  
                               STR_249 FE36                                 STR_265 FE86  
                               STR_273 FE0E                                 STR_169 FC39  
                               STR_257 FBEF                                 STR_177 F9C7  
                               STR_185 F124                                 STR_281 F0C1  
                               STR_266 EEEB                                 STR_178 FE36  
                               STR_194 FD48                                 STR_274 FCE0  
                               STR_290 FC47                                 STR_186 F9E9  
                               STR_258 F880                                 STR_282 F6BB  
                               STR_195 FE36                                 STR_291 FE98  
                               STR_179 FE22                                 STR_275 FD87  
                               STR_283 FB59                                 STR_259 F765  
                               STR_267 F527                                 STR_187 F1DF  
                               STR_284 FE68                                 STR_196 FE2C  
                               STR_292 FD93                                 STR_268 FC9B  
                               STR_188 FC2B                                 STR_276 F91D  
                               STR_285 F6CE                                 STR_269 FE8F  
                               STR_197 FFE0                                 STR_293 FDD8  
                               STR_277 FDCD                                 STR_189 F3FF  
                               STR_198 FA17                                 STR_286 F6A4  
                               STR_278 FF83                                 STR_294 FA59  
                               _CCPR1L 000FBE                                 STR_279 F658  
                               STR_199 FD05                                 STR_287 F68D  
                               STR_295 FE40                                 STR_288 F646  
                               STR_296 FFCC                                 STR_289 F961  
                               STR_297 FFD1                                 STR_298 FF8F  
                               STR_299 FF95                                 _EECON2 000FA7  
                     ___awdiv@dividend 010E                          _READ_RTC_TIME 6290  
                     __end_of_WriteI2C 7AB0                        __CFG_BBSIZ$1024 000000  
                     __end_of___ftpack 5BC6                       __end_of___lbtoft 0C38  
                       ??_SetLCDcursor 011D                        _ScrollFIFOCount 0055  
                               i1l1147 40DC              __size_ofi1_LCDPrintString 0070  
                          OpenI2C@slew 010E                                 i1l1580 0E68  
                               i1l1573 0BC2                                 i1l1586 0AC8  
           __size_ofi1_GetMemoryParity 0016                    __end_of_One_Config1 7714  
                  __end_of_One_Config2 093E                                 i1l9001 67E6  
                               i1l9013 67FE                                 i1l9005 67EE  
                               i1l7407 0774                                 i1l9041 6844  
                               i1l9033 6834                                 i1l9017 6806  
                               i1l9009 67F6                                 i1l9043 684A  
                               i1l9037 683C                                 i1l9029 682C  
                               i1l9109 69E0                                 i1l9081 0D3C  
                               i1l7397 0762                                 i1l9069 6CB4  
                               i1l7399 0766                                 i1l7831 0824  
                               i1l7823 0814                                 i1l7815 07FE  
                               i1l7841 0830                                 i1l8971 7840  
                               i1l8965 7816                                 i1l8973 785A  
                               i1l8967 7826                                 i1l8975 786E  
                               i1l8999 67E2                       __end_of___lwtoft 0CEE  
                            ??_IdleI2C 010E                              ??_GetBaud 0112  
                   __size_of_ReadUSART 0034                                 _OSCCON 000FD3  
                               _IR_NEC 00F4                     __size_of_ReadIRpin 000E  
            __size_of_IsPrintableASCII 0018                                 _SPBRGH 000FB0  
                        i1_cleanBuffer 097C                         SetMemoryLong@H 013F  
                       SetMemoryLong@L 0142                                 _BedOFF EDD9  
              i1WriteEEPROM_1Byte@data 0003                                 _SSPADD 000FC8  
                   __size_of_SetEEPROM 00B0                                 _SSPBUF 000FC9  
                            ??_Command 018A                    ?_LCDdisplayFeedback 0120  
                               _Aux2ON EDA9                              ??_InitApp 0118  
                ??_ConfigureOscillator 010E                                 _TX_OLD 00F2  
                  __size_ofi1_ClearLCD 0016                                 _AuxOFF EDB9  
                     ?_Init_I2C_Master 0001   Command@RTC_Battery_Value_LOW_decimal 02D2  
                            ??_OpenI2C 010F                                 _Global 018A  
                            ??_SetBaud 0155                              ??_SetFreq 0124  
                            ??_SetDuty 0147                    __end_of_SendLCDbyte 61A2  
                       __CFG_XINST$OFF 000000                          InitUART@spbrg 0124  
                          SetBaud@Baud 0150                       __end_of_high_isr 7C56  
                               _Rxdata 0300                     __size_of_OpenUSART 0076  
                       _StringContains 74A8                             _SubLightON EE09  
                               _Txdata 0500                                 ___lmul 7714  
                               _fanOFF EE19                              ??___aldiv 011C  
                      Command@contrast 02D8                                 ___wmul 0A6A  
                            ??___awdiv 0112               __end_ofi1_PulseEnablePin 0CC2  
                       __CFG_STVREN$ON 000000                              ??___awmod 0112  
                            ??___ftdiv 0120                              ??___lldiv 0116  
                            ??___ftmul 012F                              ??___llmod 0123  
                            ??___fttol 013C                        ?_LCDPrintString 011C  
                    cleanBuffer16bit@i 0115                       __end_of_init_LCD 5AA6  
                            ??___lwmod 0112                i1cleanBuffer16bit@count 0003  
                         ?i1_ReadUSART 0001                                 clear_0 6D70  
                               clear_1 6D7C                                 clear_2 6D88  
                               clear_3 6D94                                 clear_4 6DA0  
                               clear_5 6DAC                           ?i1_ReadIRpin 0001  
                     ___awdiv@quotient 0114                              ??_delayUS 0112  
                      ___awmod@divisor 0110                     __size_of_UseIRCode 00FE  
                         ?i1_SetEEPROM 0036                        ___awmod@counter 0112  
        __size_of_I2C_Write_At_Address 00CE                                 main@ii 02E3  
                      Command@tempLONG 02DE                    SprintDate@ReturnBuf 0150  
                 ??_LCDdisplayFeedback 0122                  ___ftmul@f3_as_product 0133  
                            ??_readI2C 010E                    __size_of_UARTstring 00A4  
                        ?_Send_Config1 0119                          ?_Send_Config2 0119  
                      __CFG_BOREN$BOHW 000000                              ??_init_IR 0116  
                          ?_BufferCopy 0116                    __end_of_SetContrast 679A  
                    ?_cleanBuffer16bit 010E                           __pdataCOMRAM 004F  
                            ??_isdigit 010E                  ??_I2C_Read_Sequential 0115  
               __end_of_StringAddEqual 4EEC                           __mediumconst ECC0  
                     i1GetMemoryLong@H 0020                       i1GetMemoryLong@L 0023  
                    __end_ofi1_delayUS 079E                              ??_low_isr 0060  
                      Zero_Config1@pin 0118                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                      Zero_Config2@pin 0118                     ??_cleanBuffer16bit 0112  
               __size_of_CheckSum_byte 0064                     IRrawToNEC@StartBit 000F  
                      ??i1_Stop_Timer1 0001                      ??i1_CheckSum_byte 0004  
                    __end_of_GetEEPROM 0702                         ?_READ_RTC_TIME 0001  
                         _BlueLEDcount 01EE                      i1_SetMemoryParity 0D18  
                            ??_sprintf 0134                     __size_of_f_Config1 007A  
                           _StartsWith 7278           i1WriteEEPROM_1Byte@GIEstatus 0004  
                   ?i1_SetMemoryParity 0001                         ?i1_cleanBuffer 0001  
                           _SprintDate 5FC0                            SetFreq@freq 0122  
                           __accesstop 0060                __end_of__initialization 6E10  
                          SetFreq@temp 0124               __size_of_SetMemoryParity 0034  
                        ___rparam_used 000000                    StringAddEqual@Input 011D  
                           ___ftdiv@f1 011A                             ___ftdiv@f2 011D  
                           ___ftdiv@f3 0124                              ?_ISNUMBER 0001  
               __end_of_StringContains 7528                    ??i1_SetMemoryParity 0005  
                   __size_of_baudUSART 000E                          __end_of_BedON EDF9  
                           ___lbtoft@c 0119              __size_of_ReadEEPROM_1Byte 003C  
                  __size_of_IRrawToNEC 035E                            SetDuty@Duty 0147  
                           ___ftmul@f1 0129                             ___ftmul@f2 012C  
                        __end_of_AuxON EDD9                             ___fttol@f1 0138  
            __size_of_RTC_Clock_Enable 004C                         __pcstackCOMRAM 0001  
                          SetDuty@temp 014D                           __pidataBANK1 0F88  
                         __pidataBANK3 0E88                            _ReadButton1 0F20  
                        __end_of_fanON EE39                              ?_UARTchar 0115  
                         ??_LCD_Scroll 011F                     InitUART@baudconfig 0126  
                            ?_RTC_INIT 0001                   __end_of_LCDPrintChar 0EB0  
                     ?_LCDScreenUpdate 0001                      __end_of_ReadUSART 0B42  
                    __end_of_ReadIRpin 0F04                          ?i1_UARTstring 000C  
                           ___lwtoft@c 0116                         ??_Send_Config1 011B  
                       ??_Send_Config2 011B                    __end_of_SubLightOFF EE09  
                    __end_of_SetEEPROM 6D6A            __size_ofi1_cleanBuffer16bit 0042  
                 __size_of_init_Timer0 0016                   __size_of_init_Timer1 0010  
                            ?_PWM_init 0001                     LCDPrintString@Text 011C  
                          ?_Parse_Time 010E                              ?_ClearLCD 0001  
                        ?_Reset_Timer0 0001                          ?_Reset_Timer1 0001  
            __end_ofi1_SetMemoryParity 0D42                        ?_StringAddEqual 011D  
                          _One_Config1 769A                            _One_Config2 08FE  
                        ?_RemoveSpaces 011D                          ReadUSART@data 010E  
                       One_Config1@pin 0118                         One_Config2@pin 0118  
                    __end_of_OpenUSART 78F4                       Send_Config1@data 0119  
                        ??_Stop_Timer0 010E                          ??_Stop_Timer1 010E  
                     Send_Config2@data 0119                           sprintf@width 014B  
               __size_of_SetMemoryBaud 00E0                             __pbssBANK0 00EE  
                           __pbssBANK1 018A                             __pbssBANK2 02E5  
                           __pbssBANK3 0300                             __pbssBANK4 0400  
                           __pbssBANK5 0500                 __size_of_SetMemoryLong 00FA  
                    ??i1_SetMemoryBaud 0028                              ?_InitUART 011B  
                          _SendLCDbyte 60B2                      ??i1_SetMemoryLong 002A  
                    __end_of_UseIRCode 5DCC                    SET_RTC_TIME@SetTime 0116  
          RTC_Clock_Enable@tempSeconds 0118                Multiple_I2C_Read@length 0110  
                   __end_of_LCD_Scroll 4B64                          ??_StringMatch 0112  
                  SetLCDcursor@address 011E                             ??_ISNUMBER 010E  
                            ?_ResetI2C 0001                  WriteEEPROM_1Byte@data 0110  
                      ?_StringContains 010E            __end_of_TXdataBedroomCLOSED ED5D  
             __end_of_InternalADC_Read 7BF0                    __size_of_BufferCopy 00BC  
        __size_of_RTC_TIME_NONMilitary 006A                          _CheckSum_byte 7C56  
                         ??i1_UARTchar 000A            __end_of_TXdataBedroomOPENED ED69  
                        RemoveSpaces@i 0186                                ?___lmul 010E  
                  i1CheckSum_byte@This 0001                                ?___wmul 010E  
                    __end_of_f_Config1 7620                      Command@PARITYtemp 02D4  
                           ??_UARTchar 0117                            _SetContrast 66D2  
       I2C_Write_At_Address@I2Caddress 0114                             ??_RTC_INIT 0122  
                              _CCP1CON 000FBD                                _BAUDCON 000FB8  
                 __end_of_SetLCDcursor 097C                         ___lmul@product 0116  
                     _ContrastPWM_init 0F3C                                _ECCPR1L 000FBB  
                       ??i1_UARTstring 000E                              ?_WriteI2C 0001  
                            ?___ftpack 010E                              ?___lbtoft 0116  
             __size_ofi1_GetMemoryBaud 00EE                     __size_of_lowercase 008C  
                cleanBuffer16bit@count 0110               __size_ofi1_GetMemoryLong 00FA  
                         ??i1_ClearLCD 000F             __end_ofi1_ReadEEPROM_1Byte 0BD8  
                i1CheckSum_byte@Parity 0006                              ?___lwtoft 0116  
                           ??_PWM_init 014F                                i1l10101 0986  
                              i1l10111 7242                                i1l10105 099E  
                              i1l10201 5D72                                i1l10107 71E2  
                              i1l10133 79A2                                i1l10117 0C72  
                              i1l10205 5D7A                                i1l10311 42FA  
                              i1l10119 0C78                                i1l10321 4320  
                              i1l10225 4110                                i1l10129 7972  
                              i1l10153 7104                                i1l10217 5DAE  
                              i1l10315 4300                                i1l10251 41BC  
                              i1l10075 0F28                                i1l10147 70E6  
                              i1l10219 5DB4                                i1l10341 43A2  
                              i1l10333 4362                                i1l10309 42F4  
                              i1l10261 41FA                                i1l10245 4192  
                              i1l10229 4118                                i1l10405 3DD6  
                              i1l10327 4326                                i1l10255 41C0  
                              i1l10239 4154                                i1l10175 0E14  
                              i1l10415 3E24                                i1l10503 40CC  
                              i1l10159 7134                                i1l10191 5D10  
                              i1l10361 443C                                i1l10273 420C  
                              i1l10265 41FE                                i1l10249 4196  
                              i1l10425 3E72               __size_ofi1_EEPROM_UNLOCK 0016  
                              i1l10283 4258                                i1l10291 427A  
                              i1l10435 3EC0                                i1l10349 43E8  
                              i1l10365 4442                                i1l10269 4204  
                              i1l10445 3F0E                                i1l10189 5D0C  
                              i1l10455 3F5C                                i1l10199 5D6E  
                              i1l10297 4298                                i1l10369 4448  
                              i1l10465 3FAA                                i1l11433 7CC4  
                              i1l11521 00C6                                i1l11513 009E  
                              i1l10475 3FF8                                i1l10379 3D6E  
                              i1l11603 02F2                                i1l11531 00FA  
                              i1l10485 4046                                i1l10397 3DB2  
                              i1l11445 6ED6                                i1l11437 7CE0  
                              i1l11605 02FA                                i1l10495 4094  
                              i1l11527 00E6                                i1l11457 6EF6  
                              i1l11465 6F2E                                i1l11449 6EE0  
                              i1l11633 039A                                i1l11545 0170  
                              i1l11643 03F0                                i1l11555 01A8  
                              i1l11493 0F1A                                i1l11645 03FA  
                              i1l11549 017A                                i1l11647 0400  
                              i1l11583 025E                                i1l11567 0204  
                              i1l11559 01D4                                i1l11657 0450  
                              i1l11593 02AC                                i1l11659 0458  
                              i1l11595 02CA                                i1l11587 027C  
                              i1l11579 024A                         ??_Reset_Timer0 0001  
                       ??_Reset_Timer1 010E              __size_of_GetEnteredNumber 01D6  
                       ??_RemoveSpaces 011F                             ??_ClearLCD 011C  
             Command@RTC_Battery_Value 02CA                         StartsWith@That 0110  
                       StartsWith@This 010E                       i1UARTstring@data 000C  
          __end_of_I2C_Read_At_Address 585A                          UseIRCode@Code 0047  
                              _LCDwait 019C                        ??_READ_RTC_TIME 0118  
                    __end_of_baudUSART 0F12                    Init_I2C_Master@baud 0110  
               GetMemoryBaud@BaudTempH 012D                 GetMemoryBaud@BaudTempL 0130  
                       lowercase@Input 010E                        SetMemoryLong@MH 0140  
                      SetMemoryLong@ML 0141                                _SSPCON1 000FC6  
                              _SSPCON2 000FC5                        ??i1_cleanBuffer 0005  
                            ?_high_isr 0001                                _SSPSTAT 000FC7  
                   __end_ofi1_UARTchar 787E                                _IRfault 0053  
                          ?_StartsWith 010E                       i1_LCDPrintString 7968  
             GetEnteredNumber@negative 0124                             ??_InitUART 0120  
                              _Aux2OFF ED99                            ?_SprintDate 0150  
                __end_ofi1_SendLCDbyte 6862                                _IdleI2C 0EB0  
                              _GetBaud 0EC4                              ?_init_LCD 0001  
                     _IsPrintableASCII 0E02                           ??_UARTstring 011B  
                              _Command 0000                                _TXdataD EE39  
                              _TXdataE EE45                                _TXdataF EE51  
               SetMemoryBaud@BaudTempH 013D                 SetMemoryBaud@BaudTempL 0140  
                              _InitApp 05AC                    __end_of_Stop_Timer0 0F84  
                  __end_of_Stop_Timer1 0F70                          ?i1_BufferCopy 0009  
                      SetLCDcursor@Col 011C                __size_ofi1_LCDPrintChar 000E  
                           ??_ResetI2C 0118                                _OpenI2C 0D66  
                      SetLCDcursor@Row 011D                                _SetBaud 46F2  
                   __end_ofi1_ClearLCD 0E88                         InitUART@config 0127  
                       ?_CheckSum_byte 010E                                __Hparam 0000  
                              _SetFreq 0662                        _GetMemoryParity 0DAC  
                              _SetDuty 6B56                                __Lparam 0000  
                              _NowTime 0193                          ?_SET_RTC_TIME 0116  
                  __size_of_Parse_Time 04D2                         InitUART@parity 011F  
              i1CheckSum_byte@Odd_Even 0003                      ??_SetMemoryParity 0112  
                    i1cleanBuffer@data 0001                                _Version 03A4  
                              ___aldiv 585A                            _SubLightOFF EDF9  
                              ___awdiv 6534                        __size_of___lmul 007A  
                              ___awmod 6AA2                                ___ftdiv 55DA  
                              ___lldiv 6862                    __end_of_StringMatch 75A6  
                      __size_of___wmul 0038                                ___ftmul 505C  
                              ___llmod 6F62                                ___fttol 5488  
                        _SetMemoryBaud 637A                                ___lwmod 79D8  
                      LCDPrintString@c 011E                          _SetMemoryLong 5DCC  
                              __pcinit 6D6A                             ??_WriteI2C 010F  
                              _delayUS 7AB0                             ??___ftpack 0113  
                           ??___lbtoft 0119                                __ramtop 0D00  
                    SetMemoryBaud@Baud 0131                                __ptext0 387C  
                              __ptext1 5986                                __ptext2 0ED6  
                              __ptext3 0F68                                __ptext4 0836  
                              __ptext5 0E1A                                __ptext6 0F80  
                              __ptext7 054E                                __ptext8 0F84  
                              __ptext9 0EF6                      SetMemoryBaud@Test 0139  
                           ??___lwtoft 0119                              _T0CONbits 000FD5  
                    GetMemoryBaud@baud 0129                                _readI2C 0D8A  
                 __size_ofi1_ReadUSART 0032                      __end_of_hexpowers ED39  
                            _T1CONbits 000FCD                   __size_ofi1_ReadIRpin 000E  
              i1SendLCDbyte@LSB_nibble 000E                                _init_IR 0836  
                              _dpowers ECF1                           ??_IRrawToNEC 0006  
                   __end_of_UARTstring 70AA                i1CheckSum_byte@ThisTemp 0004  
                              _isdigit 0C38                   __size_ofi1_SetEEPROM 009E  
                     ___awmod@dividend 010E                       ___aldiv@dividend 0114  
           __size_ofi1_SetMemoryParity 002A              GetMemoryLong@AddressFirst 0131  
                              _low_isr 0018                i1SendLCDbyte@MSB_nibble 000D  
                        SetEEPROM@Temp 0143                          SetEEPROM@fail 0150  
                        SetEEPROM@burn 014C                                _sprintf 270C  
                           ??_high_isr 0100                         __pintcode_body 7BF0  
                 end_of_initialization 6E10                      __end_of_octpowers ECF1  
                        ??_cleanBuffer 0112                  i1SetMemoryParity@Test 0005  
                           ??_init_LCD 011C                        i1ReadUSART@data 0001  
                            i1u1200_21 5D38                              i1u1035_20 6C2E  
                            i1u1035_25 6C24                              i1u1214_20 422A  
                            i1u1038_20 694E                              i1u1038_25 6944  
                    __end_of_lowercase 7398                              i1u1180_20 7270  
                            i1u1180_27 7266                                int_func 7BF0  
                            i1u1184_20 7998                              i1u1176_20 7204  
                            i1u1184_27 798E                              i1u1176_27 71FA  
                            i1u1186_20 79CC                              i1u1178_20 7234  
                            i1u1186_27 79C2                              i1u1178_27 722A  
                            i1u1375_20 6F20                              i1u1375_27 6F16  
                            i1u1376_20 6F50                              i1u1376_27 6F46  
                       ??i1_BufferCopy 000F                   __end_of_Send_Config1 6534  
                 __end_of_Send_Config2 74A8                   GetEnteredNumber@This 011A  
              __size_ofi1_SetLCDcursor 002E            __end_of_SyncEEPROMandGLOBAL 0A6A  
                     ??_LCDPrintString 011E                        ___lldiv@divisor 0112  
                       ??_SET_RTC_TIME 011F                   GetEnteredNumber@temp 0125  
                    i1GetMemoryLong@MH 0021                      i1GetMemoryLong@ML 0022  
        I2C_Read_Sequential@I2Caddress 0115                       _ReadEEPROM_1Byte 09BA  
                      ___lldiv@counter 011A                       _RTC_Clock_Enable 079E  
                __size_of_LCDPrintChar 0014                     __end_of_IRrawToNEC 444E  
                            _RCSTAbits 000FAB                       ___aldiv@quotient 011E  
                              postdec1 000FE5                                postdec2 000FDD  
                       ?_SetMemoryBaud 0131                                postinc0 000FEE  
                              postinc2 000FDE            __end_ofi1_WriteEEPROM_1Byte 0ADA  
                        i1BufferCopy@i 000F                         ?_SetMemoryLong 0132  
                    ?i1_PulseEnablePin 0001                     Parse_Time@TempTime 0112  
                            _IRRawCode 0464                __size_of_PulseEnablePin 0032  
                      i1_CheckSum_byte 07EA                       i1SetMemoryLong@H 0032  
                     i1SetMemoryLong@L 0035                    __size_of_StartsWith 0094  
                   ??i1_PulseEnablePin 000B                      SetMemoryLong@Data 0132  
              i1LCDPrintChar@character 000F                    __size_of_SprintDate 00F2  
                        ?_Start_Timer0 0001                          ?_Start_Timer1 0001  
                    SetMemoryLong@Test 013B                      GetMemoryLong@temp 0129  
                         ??_BufferCopy 011C                 __size_of_GetMemoryBaud 0156  
               __size_of_GetMemoryChar 002A                              _TRISAbits 000F92  
                            _TRISBbits 000F93                              _TRISCbits 000F94  
                            _TRISDbits 000F95                              _TRISEbits 000F96  
                       BufferCopy@from 0116                 __size_of_GetMemoryLong 0170  
                    ??i1_GetMemoryBaud 0008                     low_isr@TEMP_Rxdata 0075  
                    ??i1_GetMemoryLong 0008                 __size_of_EEPROM_UNLOCK 0016  
                    ??i1_EEPROM_UNLOCK 0001            __end_of_ConfigureOscillator 0F78  
                          _Stop_Timer0 0F80                            _Stop_Timer1 0F68  
                            i1_delayUS 0750                __end_of_GetMemoryParity 0DCA  
         __end_of_I2C_Write_At_Address 66D2                              _GetEEPROM 06B4  
                         _LCDPrintChar 0E9C                   __end_ofi1_UARTstring 7278  
                          ___ftdiv@exp 0127                        ??_CheckSum_byte 0111  
                            _TXSTAbits 000FAC              __size_of_cleanBuffer16bit 005E  
                       __end_of_BedOFF EDE9                            _StringMatch 7528  
          i1GetMemoryLong@AddressFirst 0024                   __end_of_Reset_Timer0 0F68  
                 __end_of_Reset_Timer1 0F5E                    __end_of_cleanBuffer 0662  
                       __end_of_Aux2ON EDB9                   __end_of_RemoveSpaces 71E2  
                       __end_of_AuxOFF EDC9                  __size_of_SetLCDcursor 003E  
                   __end_of_BufferCopy 6AA2                            ___ftmul@exp 0132  
                    __size_of_ISNUMBER 001E                           ?_ReadButton1 0001  
                  RemoveSpaces@address 0184                          ?_Zero_Config1 0001  
                        ?_Zero_Config2 0001                  CheckSum_byte@Odd_Even 0110  
                       __end_of___lmul 778E                         __end_of_fanOFF EE29  
             __size_of_Init_I2C_Master 004E                         __end_of___wmul 0AA2  
          __end_of_I2C_Read_Sequential 5CCE                          __pidataCOMRAM 7CFC  
                       ??_Start_Timer0 010E                         ??_Start_Timer1 010E  
                     ??_StringAddEqual 011F                      _EnableInternalADC 6E16  
                    __size_of_UARTchar 008C                       IRrawToNEC@Invert 0005  
                    __size_of_RTC_INIT 0010            __size_of_LCDdisplayFeedback 003C  
                    GetEnteredNumber@i 0123                        i1_SetMemoryBaud 6C08  
                   ?_EnableInternalADC 0001                       _GetEnteredNumber 4B64  
                      i1_SetMemoryLong 6928                           ??_Parse_Time 0110  
                  start_initialization 6D6A                           ?_One_Config1 0001  
                         ?_One_Config2 0001                              _ReadUSART 0B0E  
                            _ReadIRpin 0EF6                __size_of_UARTstringWAIT 0074  
                SendLCDbyte@LSB_nibble 011B                      __size_of_PWM_init 0030  
                            _SetEEPROM 6CBA                  CheckSum_byte@ThisTemp 0111  
                    __size_of_ClearLCD 001A                       WriteI2C@data_out 010F  
                SendLCDbyte@MSB_nibble 011A                    ??_EnableInternalADC 010E  
                  i1cleanBuffer16bit@i 0008                  __end_ofi1_Stop_Timer1 0F80  
                           ?i1_delayUS 0001           __end_of_TXToiletAlexBathroom ED45  
                         ?_SendLCDbyte 0118                       ??_StringContains 0112  
             __end_of_ContrastPWM_init 0F48                           _SetLCDcursor 093E  
                           ?_GetEEPROM 0132                              _OpenUSART 787E  
                      i1SetEEPROM@Temp 0036                        i1SetEEPROM@fail 0043  
                      i1SetEEPROM@burn 003F                        ___llmod@divisor 011F  
                    __size_of_InitUART 016A                        ___llmod@counter 0123  
                    i1BufferCopy@count 000D                         i1_LCDPrintChar 0F2E  
                    i1BufferCopy@shift 000E                         Command@channel 02DA  
                            _UseIRCode 5CCE                          _GetMemoryBaud 5332  
                            _Scroll_10 0364                          _GetMemoryChar 0CEE  
              __end_ofi1_CheckSum_byte 0836                     SprintDate@Military 015B  
                      ??_SetMemoryBaud 0135              StringAddEqual@firstnumber 0185  
                        _GetMemoryLong 4EEC                      ?_InternalADC_Read 011D  
                      ??_SetMemoryLong 0137                     __end_of_Parse_Time 387C  
               i1cleanBuffer16bit@data 0001                      __size_of_ResetI2C 0024  
                       ??_Zero_Config1 0118                         ??_Zero_Config2 0118  
                             ??___lmul 0116                          _EEPROM_UNLOCK 0E30  
                             ??___wmul 0112                     ??_InternalADC_Read 011F  
            __end_of_EnableInternalADC 6EBC                           ?_SetContrast 0001  
                          __pdataBANK1 01EE                            __pdataBANK3 03A4  
                        ??_init_Timer0 010E                          ??_init_Timer1 010E  
                     __CFG_LPT1OSC$OFF 000000             __end_ofi1_cleanBuffer16bit 7CFC  
             __end_ofi1_LCDPrintString 79D8               __end_of_IsPrintableASCII 0E1A  
             WriteEEPROM_1Byte@address 010E                              _f_Config1 75A6  
                    __size_of_WriteI2C 006C                     SetContrast@tempPR2 0147  
                    __size_of___ftpack 0120                      __size_of___lbtoft 0030  
                 __end_ofi1_BufferCopy 6F62              SetMemoryLong@AddressFirst 0136  
                LCDPrintChar@character 011C                       cleanBuffer@count 0110  
         __end_of_RTC_TIME_NONMilitary 7B86                            __pbssCOMRAM 0053  
                           ?_ReadUSART 0001                      __size_of___lwtoft 002C  
                           ?_ReadIRpin 0001                          __pcstackBANK0 0060  
                        __pcstackBANK1 0100                          __pcstackBANK2 0200  
                 __end_of_SET_RTC_TIME 46F2                             ?_SetEEPROM 0143  
             __size_of_LCDScreenUpdate 03A6                           _isdigit$3366 010F  
                __size_of_Send_Config1 00DA                  __size_of_Send_Config2 0084  
                         ??_StartsWith 0112                              _baudUSART 0F04  
                   __end_of_SubLightON EE19                     i1_ReadEEPROM_1Byte 0BA6  
                         ??_SprintDate 015C                        _SetMemoryParity 0ADA  
                          _cleanBuffer 0608                               ?_IdleI2C 0001  
                     ?_GetMemoryParity 0001                               ?_GetBaud 010E  
               __end_ofi1_LCDPrintChar 0F3C                             ?_OpenUSART 010E  
                       LCD_Scroll@This 011D                      __size_of_high_isr 7C4E  
                          sprintf@flag 014E                            sprintf@prec 0149  
                             ?_Command 0188                         i1_SetLCDcursor 0C66  
        I2C_Read_At_Address@I2Caddress 0112                               ?_InitApp 0001  
                    __size_of_init_LCD 0120                         ?_GetMemoryBaud 0111  
                       ?_GetMemoryChar 0111                               ?_OpenI2C 010E  
                             ?_SetBaud 0150                         ?_GetMemoryLong 0111  
                  ?i1_ReadEEPROM_1Byte 0001                               ?_SetFreq 0122  
                           ?_UseIRCode 0047                               ?_SetDuty 0001  
                SprintDate@DisplayTime 0152             i1WriteEEPROM_1Byte@address 0001  
                       ?_EEPROM_UNLOCK 0001                              __pintcode 0008  
                        __pmediumconst ECC0                               ?___aldiv 0114  
                             ?___awdiv 010E                              __ptext100 0DCA  
                            __ptext101 4B64                              __ptext110 71E2  
                            __ptext102 7714                              __ptext111 7806  
                            __ptext103 0EC4                              __ptext120 0E5C  
                            __ptext112 07EA                              __ptext121 61A2  
                            __ptext113 70AA                              __ptext105 7CBA  
                            __ptext130 0F2E                              __ptext122 0BA6  
                            __ptext114 0D18                              __ptext106 0B74  
                            __ptext131 0E72                              __ptext123 0F20  
                            __ptext115 0E46                              __ptext107 0F12  
                            __ptext132 679A                              __ptext124 0F5E  
                            __ptext116 6928                              __ptext108 6EBC  
                            __ptext133 0C94                              __ptext125 3D4A  
                            __ptext117 5EC6                              __ptext109 5CCE  
                            __ptext134 0750                              __ptext126 097C  
                            __ptext118 6C08                              __ptext135 0E02  
                            __ptext127 0F78                              __ptext119 0AA2  
                            __ptext136 40F0                              __ptext128 0C66  
                            __ptext129 7968                            IRrawToNEC@i 000E  
                             ?___awmod 010E                        _TXdataLabCLOSED ED81  
                             ?___ftdiv 011A                   cleanBuffer16bit@data 010E  
              __end_ofi1_SetMemoryBaud 6CBA                               ?___lldiv 010E  
                             ?___ftmul 0129                               ?___llmod 011B  
                             ?___fttol 0138                __end_ofi1_SetMemoryLong 69E6  
                             ?___lwmod 010E                         _PulseEnablePin 0B42  
                      _TXdataLabOPENED ED8D                           UseIRCode@NEC 0049  
                          __pintcodelo 0018                               ?_delayUS 010E  
                   __end_of_StartsWith 730C                   _I2C_Write_At_Address 6604  
                           ?_f_Config1 0001                     __end_of_SprintDate 60B2  
                             ?_readI2C 0001                       RemoveSpaces@That 0120  
             I2C_Read_Sequential@rdptr 0112                       RemoveSpaces@This 011D  
                             ?_init_IR 0001                               _ECCP1CON 000FBA  
                        IRrawToNEC@NEC 0003                           _Send_Config1 645A  
                         _Send_Config2 7424                      _WriteEEPROM_1Byte 087E  
                             ?_isdigit 0001                   ??i1_ReadEEPROM_1Byte 0003  
                        IRrawToNEC@Raw 0001                      ??_Init_I2C_Master 0110  
                  __end_of_init_Timer0 0E30                    __end_of_init_Timer1 0EE6  
             __end_of_ReadEEPROM_1Byte 09F6                               ?_low_isr 0001  
                   ?_WriteEEPROM_1Byte 010E               __end_of_RTC_Clock_Enable 07EA  
                            _hexpowers ED19                  __end_of_READ_RTC_TIME 637A  
                __size_ofi1_UARTstring 0096                               ?_sprintf 0124  
           UARTchar@NinethBit_override 0115                             ?_baudUSART 0001  
                          ??i1_delayUS 0005                             lowercase@i 0111  
                            delayUS@US 010E                  __end_ofi1_cleanBuffer 09BA  
               __end_ofi1_SetLCDcursor 0C94                  __size_of_Reset_Timer0 000A  
                __size_of_Reset_Timer1 000A           __size_of_I2C_Read_At_Address 012E  
                      ___aldiv@divisor 0118                            ??_GetEEPROM 013B  
                      ?i1_LCDPrintChar 0001                         Parse_Time@This 010E  
                __size_of_RemoveSpaces 009A                    ??_WriteEEPROM_1Byte 0111  
                      ___aldiv@counter 011C                   __end_of_Start_Timer0 0F88  
                 __end_of_Start_Timer1 0F54                         ___wmul@product 0112  
                       Parse_Time@temp 0111                       _cleanBuffer16bit 054E  
          i1SetMemoryLong@AddressFirst 0029                              _octpowers ECC1  
                             _IPR1bits 000F9F                               _PIE1bits 000F9D  
                         cleanBuffer@i 0115                            _bufferCount 00F3  
                             _ISNUMBER 0DCA             __end_of_TXToiletMyBathroom ED51  
                            _lowercase 730C                               _PIR1bits 000F9E  
                             _PIR2bits 000FA1                GetMemoryBaud@BaudTempMH 012E  
              GetMemoryBaud@BaudTempML 012F                       ?i1_CheckSum_byte 0001  
               __end_of_PulseEnablePin 0B74                               _RCONbits 000FD0  
                     __CFG_WDTPS$32768 000000             __size_of_EnableInternalADC 00A6  
                             _UARTchar 7398                        i1_GetMemoryBaud 61A2  
                             _RTC_INIT 0EE6                          ??i1_ReadUSART 0001  
                        ??i1_ReadIRpin 0001                      i1SendLCDbyte@data 000C  
                      i1_GetMemoryLong 5EC6                   __size_of_ReadButton1 000E  
                        ??i1_SetEEPROM 0043              ReadEEPROM_1Byte@GIEstatus 0110  
                ?_I2C_Write_At_Address 0110                   _TXToiletAlexBathroom ED39  
            __end_of_WriteEEPROM_1Byte 08BE                        i1_EEPROM_UNLOCK 0E5C  
               __size_ofi1_SendLCDbyte 00C8                      ___wmul@multiplier 010E  
                         i1_UARTstring 71E2                               _IRpinOLD 00F0  
            i1GetMemoryBaud@BaudTempMH 0021              i1GetMemoryBaud@BaudTempML 0022  
                             _PWM_init 0BD8              EnableInternalADC@channels 010F  
                            main@count 02E4                               _ClearLCD 0DE8  
                       _UARTstringWAIT 78F4                            ??_ReadUSART 010E  
                          ??_ReadIRpin 010E                __end_of_SetMemoryParity 0B0E  
                         _Reset_Timer0 0F5E                           _Reset_Timer1 0F54  
                      StringAddEqual@i 0186                        StringAddEqual@j 0187  
                         _RemoveSpaces 7148                i1GetMemoryParity@Parity 0004  
                          ??_SetEEPROM 0150                   __size_of_One_Config1 007A  
                 __size_of_One_Config2 0040              __size_ofi1_PulseEnablePin 002E  
                 __end_of_Zero_Config1 769A                   __end_of_Zero_Config2 08FE  
                    ___lmul@multiplier 010E                            _INTCON2bits 000FF1  
                            copy_data0 6DCC                           ?_Stop_Timer0 0001  
                            copy_data1 6E04                           ?_Stop_Timer1 0001  
                         low_isr@IRpin 00EB                        IRrawToNEC@Pause 000C  
              i1SetMemoryParity@Parity 0006                               _InitUART 51C8  
              SetMemoryBaud@BaudTempMH 013E                SetMemoryBaud@BaudTempML 013F  
                     OpenI2C@sync_mode 010F                        ?i1_SetLCDcursor 000F  
                          ??_OpenUSART 0110                        IRrawToNEC@first 000D  
                  i1SetMemoryBaud@Baud 0024                        ??_GetMemoryBaud 0115  
                      ??_GetMemoryChar 0115                      ??_LCDScreenUpdate 0013  
                     __size_of_IdleI2C 0014                       __size_of_GetBaud 0012  
                  i1SetMemoryBaud@Test 002C                        OpenUSART@config 0110  
                i1SetLCDcursor@address 0011                    i1GetMemoryBaud@baud 001C  
                      ??_GetMemoryLong 0115                   __size_of_SendLCDbyte 00F0  
                           _EECON1bits 000FA6                __end_of_TXdataLabCLOSED ED8D  
                             __Hparam1 0000                           ?_StringMatch 010E  
                     __size_of_Command 270C               __end_of_GetEnteredNumber 4D3A  
                      ??_EEPROM_UNLOCK 010E                               _ResetI2C 0D42  
                     i1BufferCopy@from 0009                       __size_of_InitApp 005C  
                             __Lparam1 0000                            ??_UseIRCode 004D  
              __end_of_TXdataLabOPENED ED99                             ?_lowercase 010E  
                     __size_of_OpenI2C 0024                   _RTC_TIME_NONMilitary 7B1C  
                             _Scroll_1 019E                               _Scroll_2 01AE  
                             _Scroll_3 01BE                               _Scroll_4 01CE  
                             _Scroll_5 01DE                               _Scroll_6 02E5  
                             _Scroll_7 0374                               _Scroll_8 0384  
                             _Scroll_9 0394                       __size_of_SetBaud 0288  
                       i1cleanBuffer@i 0008                       __size_of_SetFreq 0052  
                     __size_of_SetDuty 00B2                        ?_PulseEnablePin 0001  
            i1SetMemoryBaud@BaudTempMH 0031              i1SetMemoryBaud@BaudTempML 0032  
                     ?i1_SetMemoryBaud 0024                       __size_of___aldiv 012C  
                   i1cleanBuffer@count 0003                          GetEEPROM@Temp 013B  
                     __size_of___awdiv 00D0                       ?i1_SetMemoryLong 0025  
                __size_ofi1_BufferCopy 00A6                       __size_of___awmod 00B4  
                     __size_of___ftdiv 0152                        cleanBuffer@data 010E  
         __size_of_SyncEEPROMandGLOBAL 0038                       __size_of___lldiv 00C6  
                     __size_of___ftmul 016C                       __size_of___llmod 00A4  
                     __size_of___fttol 0152                            _init_Timer0 0E1A  
                          _init_Timer1 0ED6                       __size_of___lwmod 006C  
          I2C_Read_Sequential@Register 0111                               _WriteI2C 7A44  
                        SetBaud@Parity 0154                               ___ftpack 5AA6  
                             ___lbtoft 0C08                  __size_of_SET_RTC_TIME 02A4  
                 __size_of_SetContrast 00C8                       __size_of_delayUS 006C  
                          ??_f_Config1 0118                 __end_of_UARTstringWAIT 7968  
                             ___lwtoft 0CC2           __size_ofi1_WriteEEPROM_1Byte 0038  
                           sprintf@idx 0138                             sprintf@len 0141  
                           sprintf@val 0145                       __size_of_readI2C 0022  
                    SET_RTC_TIME@Error 012A                       __size_of_init_IR 0048  
                  __end_ofi1_ReadUSART 0BA6                    __end_ofi1_ReadIRpin 0F20  
                     __size_of_isdigit 002E                    __end_ofi1_SetEEPROM 7148  
                     __size_of_low_isr 04D0                          ISNUMBER@ascii 010E  
                             __ptext10 0A32                               __ptext11 06B4  
                             __ptext20 0BD8                               __ptext12 0CEE  
                             __ptext21 0662                               __ptext13 6CBA  
               LCDdisplayFeedback@Text 0120                               __ptext30 0CC2  
                             __ptext22 585A                               __ptext14 5DCC  
                             __ptext31 79D8                               __ptext23 0E9C  
                             __ptext15 4EEC                               __ptext40 5488  
                             __ptext32 7528                               __ptext24 05AC  
                             __ptext16 0EE6                               __ptext41 505C  
                             __ptext33 74A8                               __ptext25 6E16  
                             __ptext17 7B1C                               __ptext50 0ADA  
                             __ptext42 55DA                               __ptext34 4D3A  
                             __ptext26 0F3C                               __ptext18 079E  
                             __ptext51 0DAC                               __ptext43 5AA6  
                             __ptext35 7278                               __ptext27 0F70  
                             __ptext19 572C                               __ptext60 0B0E  
                             __ptext52 637A                               __ptext44 46F2  
                             __ptext36 5FC0                               __ptext28 0000  
                             __ptext61 787E                               __ptext53 087E  
                             __ptext45 270C                               __ptext37 6B56  
                             __ptext29 730C                               __ptext70 6AA2  
                             __ptext62 7424                               __ptext54 0E30  
                             __ptext46 0C38                               __ptext38 66D2  
                             __ptext71 6534                               __ptext63 08BE  
                             __ptext55 5332                               __ptext47 0A6A  
                             __ptext39 0C08                               __ptext80 0EB0  
                             __ptext72 6604                               __ptext64 08FE  
                             __ptext56 09BA                               __ptext48 6F62  
                             __ptext81 04EC                               __ptext73 7148  
                             __ptext65 645A                               __ptext57 51C8  
                             __ptext49 78F4                     READ_RTC_TIME@Error 011F  
                             __ptext90 7AB0                               __ptext82 0D8A  
                             __ptext74 6290                               __ptext66 75A6  
                             __ptext58 0F04                               __ptext91 497A  
                             __ptext83 33AA                               __ptext75 0D42  
                             __ptext67 7620                               __ptext59 6862  
                             __ptext92 0F48                               __ptext84 09F6  
                             __ptext76 0702                               __ptext68 769A  
                             __ptext93 0F54                               __ptext85 093E  
                             __ptext77 0D66                               __ptext69 444E  
                             __ptext94 69E6                               __ptext86 778E  
                             __ptext78 5BC6                               __ptext95 0608  
                             __ptext87 0DE8                               __ptext79 7A44  
                             __ptext96 7B86                               __ptext88 60B2  
                             __ptext97 7006                               __ptext89 0B42  
                             __ptext98 7398                               __ptext99 7C56  
                        SetBaud@status 0187                               _high_isr 0008  
                          ??_baudUSART 010E                       __size_of_sprintf 0C9E  
                 IsPrintableASCII@data 0001            i1ReadEEPROM_1Byte@GIEstatus 0003  
                            low_isr@rx 00ED                               _init_LCD 5986  
                  i1SetMemoryLong@Data 0025                      ?_ContrastPWM_init 0001  
                        i1_SendLCDbyte 679A          RTC_TIME_NONMilitary@temphours 011B  
                        __size_of_main 04CE                    i1SetMemoryLong@Test 002E  
                             delayUS@i 0113                               delayUS@j 0117  
                  i1GetMemoryLong@temp 001C              GetMemoryChar@AddressFirst 0115  
                   ??_ContrastPWM_init 014F                           i1_BufferCopy 6EBC  
         __size_of_ConfigureOscillator 0008                __end_ofi1_GetMemoryBaud 6290  
                __end_of_CheckSum_byte 7CBA                  ?_RTC_TIME_NONMilitary 0001  
              __end_ofi1_GetMemoryLong 5FC0                           _SET_RTC_TIME 444E  
              __end_ofi1_EEPROM_UNLOCK 0E72                        GetMemoryLong@MH 012E  
                      GetMemoryLong@ML 012F                         CheckSum_byte@i 0114  
                    _Multiple_I2C_Read 04EC                           BufferCopy@to 0118  
               ??_I2C_Write_At_Address 0112                             _LCD_Scroll 497A  
           __end_of_LCDdisplayFeedback 0A32                     ?_Multiple_I2C_Read 010E  
                    ?i1_LCDPrintString 000F                     main@MemoryBurnflag 02E2  
           __size_of_WriteEEPROM_1Byte 0040                __size_of_LCDPrintString 0078  
         I2C_Write_At_Address@Register 0110                      ?_IsPrintableASCII 0001  
                      ?_UARTstringWAIT 0119                    CheckSum_byte@Parity 0113  
                   ??i1_LCDPrintString 0011                           Command@Input 0188  
                           _INTCONbits 000FF2                     ??_IsPrintableASCII 0001  
            __size_of_InternalADC_Read 006A                    ??_Multiple_I2C_Read 0111  
                       OpenUSART@spbrg 010E                       ?_SetMemoryParity 0001  
         __size_of_I2C_Read_Sequential 0108                           UARTchar@data 0118  
                      StringMatch@That 0110                        StringMatch@This 010E  
         i1UARTchar@NinethBit_override 0008                               isdigit@c 0110  
Command@RTC_Battery_Value_HIGH_decimal 02CC                     i1_cleanBuffer16bit 7CBA  
                __size_of_Start_Timer0 0004                  __size_of_Start_Timer1 000C  
                GetMemoryParity@Parity 0111                               intlevel1 0000  
                             intlevel2 0000                 i1SendLCDbyte@isCommand 000B  
                            sprintf@ap 0143                              sprintf@cp 0139  
                            sprintf@sp 0124                           ?_cleanBuffer 010E  
                       ?i1_SendLCDbyte 000B                    _TXdataBedroomCLOSED ED51  
                     ___lwmod@dividend 010E                       SET_RTC_TIME@temp 0123  
                     ___lldiv@dividend 010E                      _TXdataFrontCLOSED ED69  
                SetMemoryParity@Parity 0113                    ?i1_cleanBuffer16bit 0001  
                  _TXdataBedroomOPENED ED5D                      READ_RTC_TIME@temp 0118  
                             low_isr@i 00E9                               low_isr@j 00EC  
                    _TXdataFrontOPENED ED75                         GetMemoryChar@H 0116  
                          _IR_New_Code 00F8                            ??_lowercase 0110  
            __end_of_Multiple_I2C_Read 054E                             i1_UARTchar 7806  
                       GetMemoryLong@H 012D                         GetMemoryLong@L 0130  
                          BufferCopy@i 011C                  __end_of_SetMemoryBaud 645A  
                      _Init_I2C_Master 0702                  __end_of_SetMemoryLong 5EC6  
                          i1_ReadUSART 0B74                 __size_ofi1_Stop_Timer1 0008  
                          i1_ReadIRpin 0F12                    _I2C_Read_At_Address 572C  
                       i1BufferCopy@to 000B                            Command@duty 02DC  
                          i1_SetEEPROM 70AA                   ??i1_cleanBuffer16bit 0005  
                           i1_ClearLCD 0E72                           _Start_Timer0 0F84  
                         _Start_Timer1 0F48                               sprintf@c 014D  
             __end_of_cleanBuffer16bit 05AC                               sprintf@f 0126  
            RTC_TIME_NONMilitary@Error 0119                       ___lldiv@quotient 0116  
                __size_of_Zero_Config1 007A                  __size_of_Zero_Config2 0040  
                      ___lwmod@divisor 0110                      i1SetMemoryLong@MH 0033  
                    i1SetMemoryLong@ML 0034                        ___lwmod@counter 0112  
                         ___aldiv@sign 011D                      ?_ReadEEPROM_1Byte 010E  
            I2C_Read_Sequential@length 0114                            _SSPCON1bits 000FC6  
                     ??i1_LCDPrintChar 000F                            _SSPCON2bits 000FC5  
                _ScrollDisplayPosition 0054                      ?_RTC_Clock_Enable 0001  
                     i1_PulseEnablePin 0C94                      CheckSum_byte@This 010E  
              __size_of_StringAddEqual 01B2                         i1UARTchar@data 000B  
                           Command@buf 0200                     ??_ReadEEPROM_1Byte 0110  
            __end_of_TXdataFrontCLOSED ED75                     ??_RTC_Clock_Enable 0118  
                  SetMemoryParity@Test 0112                   ?_I2C_Read_At_Address 0110  
                 SendLCDbyte@isCommand 0118              __end_of_TXdataFrontOPENED ED81  
                 __size_of_Stop_Timer0 0004                      i1SetLCDcursor@Col 000F  
                 __size_of_Stop_Timer1 0008                             _UARTstring 7006  
                    i1SetLCDcursor@Row 0010                      i1_GetMemoryParity 0E46  
               ??_RTC_TIME_NONMilitary 0118                           _USART_Status 019D  
                   ?i1_GetMemoryParity 0001                       ?i1_GetMemoryBaud 0004  
                     ?i1_GetMemoryLong 0004                        BufferCopy@count 011A  
                 __size_of_StringMatch 007E  
