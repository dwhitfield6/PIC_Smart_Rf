

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Dec 21 01:38:44 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4685
     2                           	fnconf	param1,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    14                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   108                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   109                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   110                           	psect	param1,global,class=BANK1,space=1,delta=1
   111  0000                     
   112                           	psect	idataBANK1
   113  016D26                     __pidataBANK1:
   114                           	opt stack 0
   115                           
   116                           ;initializer for _LCDclearCount
   117  016D26  61A8               	dw	25000
   118  016D28  0000               	dw	0
   119                           
   120                           	psect	mediumconst
   121  00EF8E                     __pmediumconst:
   122                           	opt stack 0
   123  00EF8E  00                 	db	0
   124  00EF8F                     _TXToiletAlexBathroom:
   125                           	opt stack 0
   126  00EF8F  00                 	db	0
   127  00EF90  00                 	db	0
   128  00EF91  00                 	db	0
   129  00EF92  00                 	db	0
   130  00EF93  00                 	db	0
   131  00EF94  00                 	db	0
   132  00EF95  00                 	db	0
   133  00EF96  00                 	db	0
   134  00EF97  00                 	db	0
   135  00EF98  00                 	db	0
   136  00EF99  00                 	db	0
   137  00EF9A  02                 	db	2
   138  00EF9B                     __end_of_TXToiletAlexBathroom:
   139                           	opt stack 0
   140  00EF9B                     _TXToiletMyBathroom:
   141                           	opt stack 0
   142  00EF9B  00                 	db	0
   143  00EF9C  00                 	db	0
   144  00EF9D  00                 	db	0
   145  00EF9E  00                 	db	0
   146  00EF9F  00                 	db	0
   147  00EFA0  00                 	db	0
   148  00EFA1  00                 	db	0
   149  00EFA2  00                 	db	0
   150  00EFA3  00                 	db	0
   151  00EFA4  00                 	db	0
   152  00EFA5  00                 	db	0
   153  00EFA6  01                 	db	1
   154  00EFA7                     __end_of_TXToiletMyBathroom:
   155                           	opt stack 0
   156  00EFA7                     _TXdataBedroomCLOSED:
   157                           	opt stack 0
   158  00EFA7  00                 	db	0
   159  00EFA8  00                 	db	0
   160  00EFA9  00                 	db	0
   161  00EFAA  00                 	db	0
   162  00EFAB  00                 	db	0
   163  00EFAC  00                 	db	0
   164  00EFAD  00                 	db	0
   165  00EFAE  00                 	db	0
   166  00EFAF  00                 	db	0
   167  00EFB0  01                 	db	1
   168  00EFB1  00                 	db	0
   169  00EFB2  00                 	db	0
   170  00EFB3                     __end_of_TXdataBedroomCLOSED:
   171                           	opt stack 0
   172  00EFB3                     _TXdataBedroomOPENED:
   173                           	opt stack 0
   174  00EFB3  00                 	db	0
   175  00EFB4  00                 	db	0
   176  00EFB5  00                 	db	0
   177  00EFB6  00                 	db	0
   178  00EFB7  00                 	db	0
   179  00EFB8  00                 	db	0
   180  00EFB9  00                 	db	0
   181  00EFBA  00                 	db	0
   182  00EFBB  00                 	db	0
   183  00EFBC  02                 	db	2
   184  00EFBD  00                 	db	0
   185  00EFBE  00                 	db	0
   186  00EFBF                     __end_of_TXdataBedroomOPENED:
   187                           	opt stack 0
   188  00EFBF                     _TXdataFrontCLOSED:
   189                           	opt stack 0
   190  00EFBF  00                 	db	0
   191  00EFC0  00                 	db	0
   192  00EFC1  00                 	db	0
   193  00EFC2  00                 	db	0
   194  00EFC3  00                 	db	0
   195  00EFC4  00                 	db	0
   196  00EFC5  00                 	db	0
   197  00EFC6  00                 	db	0
   198  00EFC7  00                 	db	0
   199  00EFC8  00                 	db	0
   200  00EFC9  02                 	db	2
   201  00EFCA  00                 	db	0
   202  00EFCB                     __end_of_TXdataFrontCLOSED:
   203                           	opt stack 0
   204  00EFCB                     _TXdataFrontOPENED:
   205                           	opt stack 0
   206  00EFCB  00                 	db	0
   207  00EFCC  00                 	db	0
   208  00EFCD  00                 	db	0
   209  00EFCE  00                 	db	0
   210  00EFCF  00                 	db	0
   211  00EFD0  00                 	db	0
   212  00EFD1  00                 	db	0
   213  00EFD2  00                 	db	0
   214  00EFD3  00                 	db	0
   215  00EFD4  00                 	db	0
   216  00EFD5  01                 	db	1
   217  00EFD6  00                 	db	0
   218  00EFD7                     __end_of_TXdataFrontOPENED:
   219                           	opt stack 0
   220  00EFD7                     _TXdataLabCLOSED:
   221                           	opt stack 0
   222  00EFD7  00                 	db	0
   223  00EFD8  00                 	db	0
   224  00EFD9  00                 	db	0
   225  00EFDA  00                 	db	0
   226  00EFDB  00                 	db	0
   227  00EFDC  00                 	db	0
   228  00EFDD  00                 	db	0
   229  00EFDE  00                 	db	0
   230  00EFDF  02                 	db	2
   231  00EFE0  00                 	db	0
   232  00EFE1  00                 	db	0
   233  00EFE2  00                 	db	0
   234  00EFE3                     __end_of_TXdataLabCLOSED:
   235                           	opt stack 0
   236  00EFE3                     _TXdataLabOPENED:
   237                           	opt stack 0
   238  00EFE3  00                 	db	0
   239  00EFE4  00                 	db	0
   240  00EFE5  00                 	db	0
   241  00EFE6  00                 	db	0
   242  00EFE7  00                 	db	0
   243  00EFE8  00                 	db	0
   244  00EFE9  00                 	db	0
   245  00EFEA  00                 	db	0
   246  00EFEB  01                 	db	1
   247  00EFEC  00                 	db	0
   248  00EFED  00                 	db	0
   249  00EFEE  00                 	db	0
   250  00EFEF                     __end_of_TXdataLabOPENED:
   251                           	opt stack 0
   252  00EFEF                     _octpowers:
   253                           	opt stack 0
   254  00EFEF  0001               	dw	1
   255  00EFF1  0008               	dw	8
   256  00EFF3  0040               	dw	64
   257  00EFF5  0200               	dw	512
   258  00EFF7  1000               	dw	4096
   259  00EFF9  8000               	dw	32768
   260  00EFFB                     __end_of_octpowers:
   261                           	opt stack 0
   262  00EFFB                     _dpowers:
   263                           	opt stack 0
   264  00EFFB  0001               	dw	1
   265  00EFFD  000A               	dw	10
   266  00EFFF  0064               	dw	100
   267  00F001  03E8               	dw	1000
   268  00F003  2710               	dw	10000
   269  00F005                     __end_of_dpowers:
   270                           	opt stack 0
   271  00F005                     _hexpowers:
   272                           	opt stack 0
   273  00F005  0001               	dw	1
   274  00F007  0010               	dw	16
   275  00F009  0100               	dw	256
   276  00F00B  1000               	dw	4096
   277  00F00D                     __end_of_hexpowers:
   278                           	opt stack 0
   279  00F00D                     _Aux2OFF:
   280                           	opt stack 0
   281  00F00D  00                 	db	0
   282  00F00E  01                 	db	1
   283  00F00F  01                 	db	1
   284  00F010  00                 	db	0
   285  00F011  01                 	db	1
   286  00F012  00                 	db	0
   287  00F013  00                 	db	0
   288  00F014  00                 	db	0
   289  00F015  00                 	db	0
   290  00F016  00                 	db	0
   291  00F017  00                 	db	0
   292  00F018  01                 	db	1
   293  00F019  00                 	db	0
   294  00F01A  00                 	db	0
   295  00F01B  00                 	db	0
   296  00F01C  01                 	db	1
   297  00F01D                     __end_of_Aux2OFF:
   298                           	opt stack 0
   299  00F01D                     _Aux2ON:
   300                           	opt stack 0
   301  00F01D  00                 	db	0
   302  00F01E  01                 	db	1
   303  00F01F  01                 	db	1
   304  00F020  00                 	db	0
   305  00F021  01                 	db	1
   306  00F022  00                 	db	0
   307  00F023  00                 	db	0
   308  00F024  00                 	db	0
   309  00F025  00                 	db	0
   310  00F026  00                 	db	0
   311  00F027  01                 	db	1
   312  00F028  00                 	db	0
   313  00F029  00                 	db	0
   314  00F02A  00                 	db	0
   315  00F02B  00                 	db	0
   316  00F02C  01                 	db	1
   317  00F02D                     __end_of_Aux2ON:
   318                           	opt stack 0
   319  00F02D                     _AuxOFF:
   320                           	opt stack 0
   321  00F02D  00                 	db	0
   322  00F02E  01                 	db	1
   323  00F02F  01                 	db	1
   324  00F030  00                 	db	0
   325  00F031  01                 	db	1
   326  00F032  00                 	db	0
   327  00F033  01                 	db	1
   328  00F034  00                 	db	0
   329  00F035  00                 	db	0
   330  00F036  00                 	db	0
   331  00F037  00                 	db	0
   332  00F038  00                 	db	0
   333  00F039  00                 	db	0
   334  00F03A  00                 	db	0
   335  00F03B  00                 	db	0
   336  00F03C  00                 	db	0
   337  00F03D                     __end_of_AuxOFF:
   338                           	opt stack 0
   339  00F03D                     _AuxON:
   340                           	opt stack 0
   341  00F03D  00                 	db	0
   342  00F03E  01                 	db	1
   343  00F03F  01                 	db	1
   344  00F040  00                 	db	0
   345  00F041  01                 	db	1
   346  00F042  00                 	db	0
   347  00F043  00                 	db	0
   348  00F044  01                 	db	1
   349  00F045  00                 	db	0
   350  00F046  00                 	db	0
   351  00F047  00                 	db	0
   352  00F048  00                 	db	0
   353  00F049  00                 	db	0
   354  00F04A  00                 	db	0
   355  00F04B  00                 	db	0
   356  00F04C  00                 	db	0
   357  00F04D                     __end_of_AuxON:
   358                           	opt stack 0
   359  00F04D                     _BedOFF:
   360                           	opt stack 0
   361  00F04D  00                 	db	0
   362  00F04E  01                 	db	1
   363  00F04F  01                 	db	1
   364  00F050  00                 	db	0
   365  00F051  01                 	db	1
   366  00F052  00                 	db	0
   367  00F053  00                 	db	0
   368  00F054  00                 	db	0
   369  00F055  00                 	db	0
   370  00F056  01                 	db	1
   371  00F057  00                 	db	0
   372  00F058  00                 	db	0
   373  00F059  00                 	db	0
   374  00F05A  00                 	db	0
   375  00F05B  00                 	db	0
   376  00F05C  00                 	db	0
   377  00F05D                     __end_of_BedOFF:
   378                           	opt stack 0
   379  00F05D                     _BedON:
   380                           	opt stack 0
   381  00F05D  00                 	db	0
   382  00F05E  01                 	db	1
   383  00F05F  01                 	db	1
   384  00F060  00                 	db	0
   385  00F061  01                 	db	1
   386  00F062  00                 	db	0
   387  00F063  00                 	db	0
   388  00F064  00                 	db	0
   389  00F065  01                 	db	1
   390  00F066  00                 	db	0
   391  00F067  00                 	db	0
   392  00F068  00                 	db	0
   393  00F069  00                 	db	0
   394  00F06A  00                 	db	0
   395  00F06B  00                 	db	0
   396  00F06C  00                 	db	0
   397  00F06D                     __end_of_BedON:
   398                           	opt stack 0
   399  00F06D                     _SubLightOFF:
   400                           	opt stack 0
   401  00F06D  00                 	db	0
   402  00F06E  01                 	db	1
   403  00F06F  01                 	db	1
   404  00F070  00                 	db	0
   405  00F071  01                 	db	1
   406  00F072  00                 	db	0
   407  00F073  00                 	db	0
   408  00F074  00                 	db	0
   409  00F075  00                 	db	0
   410  00F076  00                 	db	0
   411  00F077  00                 	db	0
   412  00F078  01                 	db	1
   413  00F079  00                 	db	0
   414  00F07A  01                 	db	1
   415  00F07B  00                 	db	0
   416  00F07C  00                 	db	0
   417  00F07D                     __end_of_SubLightOFF:
   418                           	opt stack 0
   419  00F07D                     _SubLightON:
   420                           	opt stack 0
   421  00F07D  00                 	db	0
   422  00F07E  01                 	db	1
   423  00F07F  01                 	db	1
   424  00F080  00                 	db	0
   425  00F081  01                 	db	1
   426  00F082  00                 	db	0
   427  00F083  00                 	db	0
   428  00F084  00                 	db	0
   429  00F085  00                 	db	0
   430  00F086  00                 	db	0
   431  00F087  01                 	db	1
   432  00F088  00                 	db	0
   433  00F089  00                 	db	0
   434  00F08A  01                 	db	1
   435  00F08B  00                 	db	0
   436  00F08C  00                 	db	0
   437  00F08D                     __end_of_SubLightON:
   438                           	opt stack 0
   439  00F08D                     _fanOFF:
   440                           	opt stack 0
   441  00F08D  00                 	db	0
   442  00F08E  01                 	db	1
   443  00F08F  01                 	db	1
   444  00F090  00                 	db	0
   445  00F091  01                 	db	1
   446  00F092  00                 	db	0
   447  00F093  00                 	db	0
   448  00F094  00                 	db	0
   449  00F095  00                 	db	0
   450  00F096  00                 	db	0
   451  00F097  00                 	db	0
   452  00F098  01                 	db	1
   453  00F099  00                 	db	0
   454  00F09A  00                 	db	0
   455  00F09B  00                 	db	0
   456  00F09C  00                 	db	0
   457  00F09D                     __end_of_fanOFF:
   458                           	opt stack 0
   459  00F09D                     _fanON:
   460                           	opt stack 0
   461  00F09D  00                 	db	0
   462  00F09E  01                 	db	1
   463  00F09F  01                 	db	1
   464  00F0A0  00                 	db	0
   465  00F0A1  01                 	db	1
   466  00F0A2  00                 	db	0
   467  00F0A3  00                 	db	0
   468  00F0A4  00                 	db	0
   469  00F0A5  00                 	db	0
   470  00F0A6  00                 	db	0
   471  00F0A7  01                 	db	1
   472  00F0A8  00                 	db	0
   473  00F0A9  00                 	db	0
   474  00F0AA  00                 	db	0
   475  00F0AB  00                 	db	0
   476  00F0AC  00                 	db	0
   477  00F0AD                     __end_of_fanON:
   478                           	opt stack 0
   479  00F0AD                     _TXdataD:
   480                           	opt stack 0
   481  00F0AD  02                 	db	2
   482  00F0AE  02                 	db	2
   483  00F0AF  02                 	db	2
   484  00F0B0  02                 	db	2
   485  00F0B1  02                 	db	2
   486  00F0B2  02                 	db	2
   487  00F0B3  00                 	db	0
   488  00F0B4  00                 	db	0
   489  00F0B5  01                 	db	1
   490  00F0B6  00                 	db	0
   491  00F0B7  00                 	db	0
   492  00F0B8  00                 	db	0
   493  00F0B9                     __end_of_TXdataD:
   494                           	opt stack 0
   495  00F0B9                     _TXdataE:
   496                           	opt stack 0
   497  00F0B9  00                 	db	0
   498  00F0BA  02                 	db	2
   499  00F0BB  02                 	db	2
   500  00F0BC  02                 	db	2
   501  00F0BD  02                 	db	2
   502  00F0BE  02                 	db	2
   503  00F0BF  00                 	db	0
   504  00F0C0  00                 	db	0
   505  00F0C1  01                 	db	1
   506  00F0C2  00                 	db	0
   507  00F0C3  00                 	db	0
   508  00F0C4  00                 	db	0
   509  00F0C5                     __end_of_TXdataE:
   510                           	opt stack 0
   511  00F0C5                     _TXdataF:
   512                           	opt stack 0
   513  00F0C5  02                 	db	2
   514  00F0C6  00                 	db	0
   515  00F0C7  02                 	db	2
   516  00F0C8  02                 	db	2
   517  00F0C9  02                 	db	2
   518  00F0CA  02                 	db	2
   519  00F0CB  00                 	db	0
   520  00F0CC  00                 	db	0
   521  00F0CD  01                 	db	1
   522  00F0CE  00                 	db	0
   523  00F0CF  00                 	db	0
   524  00F0D0  00                 	db	0
   525  00F0D1                     __end_of_TXdataF:
   526                           	opt stack 0
   527  0000                     _ADCON0	set	4034
   528  0000                     _ADCON1	set	4033
   529  0000                     _ADCON2	set	4032
   530  0000                     _ADRESH	set	4036
   531  0000                     _ADRESL	set	4035
   532  0000                     _BAUDCON	set	4024
   533  0000                     _CCP1CON	set	4029
   534  0000                     _CCPR1L	set	4030
   535  0000                     _ECCP1CON	set	4026
   536  0000                     _ECCPR1L	set	4027
   537  0000                     _INTCONbits	set	4082
   538  0000                     _IPR1bits	set	3999
   539  0000                     _LATA	set	3977
   540  0000                     _LATC	set	3979
   541  0000                     _LATD	set	3980
   542  0000                     _LATE	set	3981
   543  0000                     _PIE1	set	3997
   544  0000                     _PIE1bits	set	3997
   545  0000                     _PIR1bits	set	3998
   546  0000                     _PIR2bits	set	4001
   547  0000                     _PR2	set	4043
   548  0000                     _RCONbits	set	4048
   549  0000                     _RCREG	set	4014
   550  0000                     _RCSTA	set	4011
   551  0000                     _RCSTAbits	set	4011
   552  0000                     _SPBRG	set	4015
   553  0000                     _SPBRGH	set	4016
   554  0000                     _SSPADD	set	4040
   555  0000                     _SSPBUF	set	4041
   556  0000                     _SSPCON1	set	4038
   557  0000                     _SSPCON1bits	set	4038
   558  0000                     _SSPCON2	set	4037
   559  0000                     _SSPCON2bits	set	4037
   560  0000                     _SSPSTAT	set	4039
   561  0000                     _SSPSTATbits	set	4039
   562  0000                     _T2CON	set	4042
   563  0000                     _TRISAbits	set	3986
   564  0000                     _TRISCbits	set	3988
   565  0000                     _TRISDbits	set	3989
   566  0000                     _TRISEbits	set	3990
   567  0000                     _TXREG	set	4013
   568  0000                     _TXSTA	set	4012
   569  0000                     _TXSTAbits	set	4012
   570  00F0D1                     __stringdata:
   571                           	opt stack 0
   572  00F0D1                     STR_194:
   573  00F0D1  54                 	db	84	;'T'
   574  00F0D2  6F                 	db	111	;'o'
   575  00F0D3  20                 	db	32
   576  00F0D4  72                 	db	114	;'r'
   577  00F0D5  65                 	db	101	;'e'
   578  00F0D6  61                 	db	97	;'a'
   579  00F0D7  64                 	db	100	;'d'
   580  00F0D8  20                 	db	32
   581  00F0D9  61                 	db	97	;'a'
   582  00F0DA  6E                 	db	110	;'n'
   583  00F0DB  64                 	db	100	;'d'
   584  00F0DC  20                 	db	32
   585  00F0DD  61                 	db	97	;'a'
   586  00F0DE  64                 	db	100	;'d'
   587  00F0DF  63                 	db	99	;'c'
   588  00F0E0  20                 	db	32
   589  00F0E1  63                 	db	99	;'c'
   590  00F0E2  68                 	db	104	;'h'
   591  00F0E3  61                 	db	97	;'a'
   592  00F0E4  6E                 	db	110	;'n'
   593  00F0E5  6E                 	db	110	;'n'
   594  00F0E6  65                 	db	101	;'e'
   595  00F0E7  6C                 	db	108	;'l'
   596  00F0E8  2C                 	db	44
   597  00F0E9  20                 	db	32
   598  00F0EA  74                 	db	116	;'t'
   599  00F0EB  79                 	db	121	;'y'
   600  00F0EC  70                 	db	112	;'p'
   601  00F0ED  65                 	db	101	;'e'
   602  00F0EE  20                 	db	32
   603  00F0EF  74                 	db	116	;'t'
   604  00F0F0  68                 	db	104	;'h'
   605  00F0F1  65                 	db	101	;'e'
   606  00F0F2  20                 	db	32
   607  00F0F3  63                 	db	99	;'c'
   608  00F0F4  6F                 	db	111	;'o'
   609  00F0F5  6D                 	db	109	;'m'
   610  00F0F6  6D                 	db	109	;'m'
   611  00F0F7  61                 	db	97	;'a'
   612  00F0F8  6E                 	db	110	;'n'
   613  00F0F9  64                 	db	100	;'d'
   614  00F0FA  0D                 	db	13
   615  00F0FB  0A                 	db	10
   616  00F0FC  20                 	db	32
   617  00F0FD  41                 	db	65	;'A'
   618  00F0FE  44                 	db	68	;'D'
   619  00F0FF  43                 	db	67	;'C'
   620  00F100  20                 	db	32
   621  00F101  66                 	db	102	;'f'
   622  00F102  6F                 	db	111	;'o'
   623  00F103  6C                 	db	108	;'l'
   624  00F104  6C                 	db	108	;'l'
   625  00F105  6F                 	db	111	;'o'
   626  00F106  77                 	db	119	;'w'
   627  00F107  65                 	db	101	;'e'
   628  00F108  64                 	db	100	;'d'
   629  00F109  20                 	db	32
   630  00F10A  62                 	db	98	;'b'
   631  00F10B  79                 	db	121	;'y'
   632  00F10C  20                 	db	32
   633  00F10D  27                 	db	39
   634  00F10E  43                 	db	67	;'C'
   635  00F10F  68                 	db	104	;'h'
   636  00F110  61                 	db	97	;'a'
   637  00F111  6E                 	db	110	;'n'
   638  00F112  6E                 	db	110	;'n'
   639  00F113  65                 	db	101	;'e'
   640  00F114  6C                 	db	108	;'l'
   641  00F115  27                 	db	39
   642  00F116  20                 	db	32
   643  00F117  0D                 	db	13
   644  00F118  0A                 	db	10
   645  00F119  00                 	db	0
   646  00F11A                     STR_226:
   647  00F11A  54                 	db	84	;'T'
   648  00F11B  6F                 	db	111	;'o'
   649  00F11C  20                 	db	32
   650  00F11D  63                 	db	99	;'c'
   651  00F11E  6F                 	db	111	;'o'
   652  00F11F  6D                 	db	109	;'m'
   653  00F120  6D                 	db	109	;'m'
   654  00F121  61                 	db	97	;'a'
   655  00F122  6E                 	db	110	;'n'
   656  00F123  64                 	db	100	;'d'
   657  00F124  20                 	db	32
   658  00F125  74                 	db	116	;'t'
   659  00F126  68                 	db	104	;'h'
   660  00F127  65                 	db	101	;'e'
   661  00F128  20                 	db	32
   662  00F129  52                 	db	82	;'R'
   663  00F12A  54                 	db	84	;'T'
   664  00F12B  43                 	db	67	;'C'
   665  00F12C  2C                 	db	44
   666  00F12D  20                 	db	32
   667  00F12E  74                 	db	116	;'t'
   668  00F12F  79                 	db	121	;'y'
   669  00F130  70                 	db	112	;'p'
   670  00F131  65                 	db	101	;'e'
   671  00F132  20                 	db	32
   672  00F133  74                 	db	116	;'t'
   673  00F134  68                 	db	104	;'h'
   674  00F135  65                 	db	101	;'e'
   675  00F136  20                 	db	32
   676  00F137  61                 	db	97	;'a'
   677  00F138  63                 	db	99	;'c'
   678  00F139  74                 	db	116	;'t'
   679  00F13A  69                 	db	105	;'i'
   680  00F13B  6F                 	db	111	;'o'
   681  00F13C  6E                 	db	110	;'n'
   682  00F13D  0D                 	db	13
   683  00F13E  0A                 	db	10
   684  00F13F  20                 	db	32
   685  00F140  66                 	db	102	;'f'
   686  00F141  6F                 	db	111	;'o'
   687  00F142  6C                 	db	108	;'l'
   688  00F143  6C                 	db	108	;'l'
   689  00F144  6F                 	db	111	;'o'
   690  00F145  77                 	db	119	;'w'
   691  00F146  65                 	db	101	;'e'
   692  00F147  64                 	db	100	;'d'
   693  00F148  20                 	db	32
   694  00F149  62                 	db	98	;'b'
   695  00F14A  79                 	db	121	;'y'
   696  00F14B  20                 	db	32
   697  00F14C  74                 	db	116	;'t'
   698  00F14D  68                 	db	104	;'h'
   699  00F14E  65                 	db	101	;'e'
   700  00F14F  20                 	db	32
   701  00F150  70                 	db	112	;'p'
   702  00F151  61                 	db	97	;'a'
   703  00F152  72                 	db	114	;'r'
   704  00F153  61                 	db	97	;'a'
   705  00F154  6D                 	db	109	;'m'
   706  00F155  65                 	db	101	;'e'
   707  00F156  74                 	db	116	;'t'
   708  00F157  65                 	db	101	;'e'
   709  00F158  72                 	db	114	;'r'
   710  00F159  73                 	db	115	;'s'
   711  00F15A  20                 	db	32
   712  00F15B  0D                 	db	13
   713  00F15C  0A                 	db	10
   714  00F15D  0A                 	db	10
   715  00F15E  00                 	db	0
   716  00F15F                     STR_45:
   717  00F15F  54                 	db	84	;'T'
   718  00F160  6F                 	db	111	;'o'
   719  00F161  20                 	db	32
   720  00F162  63                 	db	99	;'c'
   721  00F163  6F                 	db	111	;'o'
   722  00F164  6E                 	db	110	;'n'
   723  00F165  74                 	db	116	;'t'
   724  00F166  72                 	db	114	;'r'
   725  00F167  6F                 	db	111	;'o'
   726  00F168  6C                 	db	108	;'l'
   727  00F169  20                 	db	32
   728  00F16A  61                 	db	97	;'a'
   729  00F16B  20                 	db	32
   730  00F16C  64                 	db	100	;'d'
   731  00F16D  65                 	db	101	;'e'
   732  00F16E  76                 	db	118	;'v'
   733  00F16F  69                 	db	105	;'i'
   734  00F170  63                 	db	99	;'c'
   735  00F171  65                 	db	101	;'e'
   736  00F172  20                 	db	32
   737  00F173  65                 	db	101	;'e'
   738  00F174  6E                 	db	110	;'n'
   739  00F175  74                 	db	116	;'t'
   740  00F176  65                 	db	101	;'e'
   741  00F177  72                 	db	114	;'r'
   742  00F178  20                 	db	32
   743  00F179  74                 	db	116	;'t'
   744  00F17A  68                 	db	104	;'h'
   745  00F17B  65                 	db	101	;'e'
   746  00F17C  20                 	db	32
   747  00F17D  64                 	db	100	;'d'
   748  00F17E  65                 	db	101	;'e'
   749  00F17F  76                 	db	118	;'v'
   750  00F180  69                 	db	105	;'i'
   751  00F181  63                 	db	99	;'c'
   752  00F182  65                 	db	101	;'e'
   753  00F183  20                 	db	32
   754  00F184  66                 	db	102	;'f'
   755  00F185  6F                 	db	111	;'o'
   756  00F186  6C                 	db	108	;'l'
   757  00F187  6C                 	db	108	;'l'
   758  00F188  6F                 	db	111	;'o'
   759  00F189  77                 	db	119	;'w'
   760  00F18A  65                 	db	101	;'e'
   761  00F18B  64                 	db	100	;'d'
   762  00F18C  20                 	db	32
   763  00F18D  62                 	db	98	;'b'
   764  00F18E  79                 	db	121	;'y'
   765  00F18F  20                 	db	32
   766  00F190  27                 	db	39
   767  00F191  3D                 	db	61	;'='
   768  00F192  27                 	db	39
   769  00F193  20                 	db	32
   770  00F194  61                 	db	97	;'a'
   771  00F195  6E                 	db	110	;'n'
   772  00F196  64                 	db	100	;'d'
   773  00F197  20                 	db	32
   774  00F198  27                 	db	39
   775  00F199  4F                 	db	79	;'O'
   776  00F19A  6E                 	db	110	;'n'
   777  00F19B  2F                 	db	47
   778  00F19C  4F                 	db	79	;'O'
   779  00F19D  66                 	db	102	;'f'
   780  00F19E  66                 	db	102	;'f'
   781  00F19F  27                 	db	39
   782  00F1A0  0D                 	db	13
   783  00F1A1  0A                 	db	10
   784  00F1A2  00                 	db	0
   785  00F1A3                     STR_156:
   786  00F1A3  54                 	db	84	;'T'
   787  00F1A4  6F                 	db	111	;'o'
   788  00F1A5  20                 	db	32
   789  00F1A6  73                 	db	115	;'s'
   790  00F1A7  65                 	db	101	;'e'
   791  00F1A8  74                 	db	116	;'t'
   792  00F1A9  20                 	db	32
   793  00F1AA  74                 	db	116	;'t'
   794  00F1AB  65                 	db	101	;'e'
   795  00F1AC  20                 	db	32
   796  00F1AD  50                 	db	80	;'P'
   797  00F1AE  57                 	db	87	;'W'
   798  00F1AF  4D                 	db	77	;'M'
   799  00F1B0  20                 	db	32
   800  00F1B1  62                 	db	98	;'b'
   801  00F1B2  72                 	db	114	;'r'
   802  00F1B3  69                 	db	105	;'i'
   803  00F1B4  67                 	db	103	;'g'
   804  00F1B5  68                 	db	104	;'h'
   805  00F1B6  74                 	db	116	;'t'
   806  00F1B7  6E                 	db	110	;'n'
   807  00F1B8  65                 	db	101	;'e'
   808  00F1B9  73                 	db	115	;'s'
   809  00F1BA  73                 	db	115	;'s'
   810  00F1BB  20                 	db	32
   811  00F1BC  65                 	db	101	;'e'
   812  00F1BD  6E                 	db	110	;'n'
   813  00F1BE  74                 	db	116	;'t'
   814  00F1BF  65                 	db	101	;'e'
   815  00F1C0  72                 	db	114	;'r'
   816  00F1C1  20                 	db	32
   817  00F1C2  27                 	db	39
   818  00F1C3  52                 	db	82	;'R'
   819  00F1C4  65                 	db	101	;'e'
   820  00F1C5  64                 	db	100	;'d'
   821  00F1C6  20                 	db	32
   822  00F1C7  4C                 	db	76	;'L'
   823  00F1C8  45                 	db	69	;'E'
   824  00F1C9  44                 	db	68	;'D'
   825  00F1CA  20                 	db	32
   826  00F1CB  62                 	db	98	;'b'
   827  00F1CC  72                 	db	114	;'r'
   828  00F1CD  69                 	db	105	;'i'
   829  00F1CE  67                 	db	103	;'g'
   830  00F1CF  68                 	db	104	;'h'
   831  00F1D0  74                 	db	116	;'t'
   832  00F1D1  6E                 	db	110	;'n'
   833  00F1D2  65                 	db	101	;'e'
   834  00F1D3  73                 	db	115	;'s'
   835  00F1D4  73                 	db	115	;'s'
   836  00F1D5  20                 	db	32
   837  00F1D6  3D                 	db	61	;'='
   838  00F1D7  20                 	db	32
   839  00F1D8  64                 	db	100	;'d'
   840  00F1D9  75                 	db	117	;'u'
   841  00F1DA  74                 	db	116	;'t'
   842  00F1DB  79                 	db	121	;'y'
   843  00F1DC  63                 	db	99	;'c'
   844  00F1DD  79                 	db	121	;'y'
   845  00F1DE  63                 	db	99	;'c'
   846  00F1DF  6C                 	db	108	;'l'
   847  00F1E0  65                 	db	101	;'e'
   848  00F1E1  27                 	db	39
   849  00F1E2  0D                 	db	13
   850  00F1E3  0A                 	db	10
   851  00F1E4  00                 	db	0
   852  00F1E5                     STR_173:
   853  00F1E5  54                 	db	84	;'T'
   854  00F1E6  6F                 	db	111	;'o'
   855  00F1E7  20                 	db	32
   856  00F1E8  73                 	db	115	;'s'
   857  00F1E9  65                 	db	101	;'e'
   858  00F1EA  74                 	db	116	;'t'
   859  00F1EB  20                 	db	32
   860  00F1EC  43                 	db	67	;'C'
   861  00F1ED  6F                 	db	111	;'o'
   862  00F1EE  6E                 	db	110	;'n'
   863  00F1EF  74                 	db	116	;'t'
   864  00F1F0  72                 	db	114	;'r'
   865  00F1F1  61                 	db	97	;'a'
   866  00F1F2  73                 	db	115	;'s'
   867  00F1F3  74                 	db	116	;'t'
   868  00F1F4  20                 	db	32
   869  00F1F5  50                 	db	80	;'P'
   870  00F1F6  57                 	db	87	;'W'
   871  00F1F7  4D                 	db	77	;'M'
   872  00F1F8  20                 	db	32
   873  00F1F9  62                 	db	98	;'b'
   874  00F1FA  72                 	db	114	;'r'
   875  00F1FB  69                 	db	105	;'i'
   876  00F1FC  67                 	db	103	;'g'
   877  00F1FD  68                 	db	104	;'h'
   878  00F1FE  74                 	db	116	;'t'
   879  00F1FF  6E                 	db	110	;'n'
   880  00F200  65                 	db	101	;'e'
   881  00F201  73                 	db	115	;'s'
   882  00F202  73                 	db	115	;'s'
   883  00F203  20                 	db	32
   884  00F204  65                 	db	101	;'e'
   885  00F205  6E                 	db	110	;'n'
   886  00F206  74                 	db	116	;'t'
   887  00F207  65                 	db	101	;'e'
   888  00F208  72                 	db	114	;'r'
   889  00F209  20                 	db	32
   890  00F20A  27                 	db	39
   891  00F20B  43                 	db	67	;'C'
   892  00F20C  6F                 	db	111	;'o'
   893  00F20D  6E                 	db	110	;'n'
   894  00F20E  74                 	db	116	;'t'
   895  00F20F  72                 	db	114	;'r'
   896  00F210  61                 	db	97	;'a'
   897  00F211  73                 	db	115	;'s'
   898  00F212  74                 	db	116	;'t'
   899  00F213  20                 	db	32
   900  00F214  3D                 	db	61	;'='
   901  00F215  20                 	db	32
   902  00F216  64                 	db	100	;'d'
   903  00F217  75                 	db	117	;'u'
   904  00F218  74                 	db	116	;'t'
   905  00F219  79                 	db	121	;'y'
   906  00F21A  63                 	db	99	;'c'
   907  00F21B  79                 	db	121	;'y'
   908  00F21C  63                 	db	99	;'c'
   909  00F21D  6C                 	db	108	;'l'
   910  00F21E  65                 	db	101	;'e'
   911  00F21F  27                 	db	39
   912  00F220  0D                 	db	13
   913  00F221  0A                 	db	10
   914  00F222  00                 	db	0
   915  00F223                     STR_227:
   916  00F223  66                 	db	102	;'f'
   917  00F224  75                 	db	117	;'u'
   918  00F225  72                 	db	114	;'r'
   919  00F226  74                 	db	116	;'t'
   920  00F227  68                 	db	104	;'h'
   921  00F228  65                 	db	101	;'e'
   922  00F229  72                 	db	114	;'r'
   923  00F22A  20                 	db	32
   924  00F22B  73                 	db	115	;'s'
   925  00F22C  75                 	db	117	;'u'
   926  00F22D  62                 	db	98	;'b'
   927  00F22E  20                 	db	32
   928  00F22F  6D                 	db	109	;'m'
   929  00F230  65                 	db	101	;'e'
   930  00F231  6E                 	db	110	;'n'
   931  00F232  75                 	db	117	;'u'
   932  00F233  73                 	db	115	;'s'
   933  00F234  20                 	db	32
   934  00F235  61                 	db	97	;'a'
   935  00F236  76                 	db	118	;'v'
   936  00F237  61                 	db	97	;'a'
   937  00F238  69                 	db	105	;'i'
   938  00F239  6C                 	db	108	;'l'
   939  00F23A  61                 	db	97	;'a'
   940  00F23B  62                 	db	98	;'b'
   941  00F23C  6C                 	db	108	;'l'
   942  00F23D  65                 	db	101	;'e'
   943  00F23E  20                 	db	32
   944  00F23F  62                 	db	98	;'b'
   945  00F240  79                 	db	121	;'y'
   946  00F241  20                 	db	32
   947  00F242  65                 	db	101	;'e'
   948  00F243  6E                 	db	110	;'n'
   949  00F244  74                 	db	116	;'t'
   950  00F245  65                 	db	101	;'e'
   951  00F246  72                 	db	114	;'r'
   952  00F247  69                 	db	105	;'i'
   953  00F248  6E                 	db	110	;'n'
   954  00F249  67                 	db	103	;'g'
   955  00F24A  20                 	db	32
   956  00F24B  74                 	db	116	;'t'
   957  00F24C  68                 	db	104	;'h'
   958  00F24D  65                 	db	101	;'e'
   959  00F24E  20                 	db	32
   960  00F24F  61                 	db	97	;'a'
   961  00F250  63                 	db	99	;'c'
   962  00F251  74                 	db	116	;'t'
   963  00F252  69                 	db	105	;'i'
   964  00F253  6F                 	db	111	;'o'
   965  00F254  6E                 	db	110	;'n'
   966  00F255  20                 	db	32
   967  00F256  61                 	db	97	;'a'
   968  00F257  6E                 	db	110	;'n'
   969  00F258  64                 	db	100	;'d'
   970  00F259  20                 	db	32
   971  00F25A  61                 	db	97	;'a'
   972  00F25B  20                 	db	32
   973  00F25C  27                 	db	39
   974  00F25D  3F                 	db	63	;'?'
   975  00F25E  27                 	db	39
   976  00F25F  00                 	db	0
   977  00F260                     STR_261:
   978  00F260  46                 	db	70	;'F'
   979  00F261  6F                 	db	111	;'o'
   980  00F262  72                 	db	114	;'r'
   981  00F263  20                 	db	32
   982  00F264  44                 	db	68	;'D'
   983  00F265  65                 	db	101	;'e'
   984  00F266  76                 	db	118	;'v'
   985  00F267  69                 	db	105	;'i'
   986  00F268  63                 	db	99	;'c'
   987  00F269  65                 	db	101	;'e'
   988  00F26A  20                 	db	32
   989  00F26B  68                 	db	104	;'h'
   990  00F26C  65                 	db	101	;'e'
   991  00F26D  6C                 	db	108	;'l'
   992  00F26E  70                 	db	112	;'p'
   993  00F26F  20                 	db	32
   994  00F270  65                 	db	101	;'e'
   995  00F271  6E                 	db	110	;'n'
   996  00F272  74                 	db	116	;'t'
   997  00F273  65                 	db	101	;'e'
   998  00F274  72                 	db	114	;'r'
   999  00F275  20                 	db	32
  1000  00F276  64                 	db	100	;'d'
  1001  00F277  65                 	db	101	;'e'
  1002  00F278  76                 	db	118	;'v'
  1003  00F279  69                 	db	105	;'i'
  1004  00F27A  63                 	db	99	;'c'
  1005  00F27B  65                 	db	101	;'e'
  1006  00F27C  20                 	db	32
  1007  00F27D  66                 	db	102	;'f'
  1008  00F27E  6F                 	db	111	;'o'
  1009  00F27F  6C                 	db	108	;'l'
  1010  00F280  6C                 	db	108	;'l'
  1011  00F281  6F                 	db	111	;'o'
  1012  00F282  77                 	db	119	;'w'
  1013  00F283  65                 	db	101	;'e'
  1014  00F284  64                 	db	100	;'d'
  1015  00F285  20                 	db	32
  1016  00F286  62                 	db	98	;'b'
  1017  00F287  79                 	db	121	;'y'
  1018  00F288  20                 	db	32
  1019  00F289  61                 	db	97	;'a'
  1020  00F28A  20                 	db	32
  1021  00F28B  27                 	db	39
  1022  00F28C  3F                 	db	63	;'?'
  1023  00F28D  27                 	db	39
  1024  00F28E  20                 	db	32
  1025  00F28F  0D                 	db	13
  1026  00F290  0A                 	db	10
  1027  00F291  00                 	db	0
  1028  00F292                     STR_153:
  1029  00F292  72                 	db	114	;'r'
  1030  00F293  65                 	db	101	;'e'
  1031  00F294  64                 	db	100	;'d'
  1032  00F295  6C                 	db	108	;'l'
  1033  00F296  65                 	db	101	;'e'
  1034  00F297  64                 	db	100	;'d'
  1035  00F298  20                 	db	32
  1036  00F299  77                 	db	119	;'w'
  1037  00F29A  68                 	db	104	;'h'
  1038  00F29B  61                 	db	97	;'a'
  1039  00F29C  74                 	db	116	;'t'
  1040  00F29D  3F                 	db	63	;'?'
  1041  00F29E  3F                 	db	63	;'?'
  1042  00F29F  3F                 	db	63	;'?'
  1043  00F2A0  20                 	db	32
  1044  00F2A1  44                 	db	68	;'D'
  1045  00F2A2  6F                 	db	111	;'o'
  1046  00F2A3  20                 	db	32
  1047  00F2A4  79                 	db	121	;'y'
  1048  00F2A5  6F                 	db	111	;'o'
  1049  00F2A6  75                 	db	117	;'u'
  1050  00F2A7  20                 	db	32
  1051  00F2A8  6D                 	db	109	;'m'
  1052  00F2A9  65                 	db	101	;'e'
  1053  00F2AA  61                 	db	97	;'a'
  1054  00F2AB  6E                 	db	110	;'n'
  1055  00F2AC  20                 	db	32
  1056  00F2AD  52                 	db	82	;'R'
  1057  00F2AE  65                 	db	101	;'e'
  1058  00F2AF  64                 	db	100	;'d'
  1059  00F2B0  20                 	db	32
  1060  00F2B1  4C                 	db	76	;'L'
  1061  00F2B2  65                 	db	101	;'e'
  1062  00F2B3  64                 	db	100	;'d'
  1063  00F2B4  20                 	db	32
  1064  00F2B5  42                 	db	66	;'B'
  1065  00F2B6  72                 	db	114	;'r'
  1066  00F2B7  69                 	db	105	;'i'
  1067  00F2B8  67                 	db	103	;'g'
  1068  00F2B9  68                 	db	104	;'h'
  1069  00F2BA  74                 	db	116	;'t'
  1070  00F2BB  6E                 	db	110	;'n'
  1071  00F2BC  65                 	db	101	;'e'
  1072  00F2BD  73                 	db	115	;'s'
  1073  00F2BE  73                 	db	115	;'s'
  1074  00F2BF  3F                 	db	63	;'?'
  1075  00F2C0  3F                 	db	63	;'?'
  1076  00F2C1  3F                 	db	63	;'?'
  1077  00F2C2  00                 	db	0
  1078  00F2C3                     STR_166:
  1079  00F2C3  49                 	db	73	;'I'
  1080  00F2C4  6E                 	db	110	;'n'
  1081  00F2C5  76                 	db	118	;'v'
  1082  00F2C6  61                 	db	97	;'a'
  1083  00F2C7  6C                 	db	108	;'l'
  1084  00F2C8  69                 	db	105	;'i'
  1085  00F2C9  64                 	db	100	;'d'
  1086  00F2CA  20                 	db	32
  1087  00F2CB  43                 	db	67	;'C'
  1088  00F2CC  6F                 	db	111	;'o'
  1089  00F2CD  6E                 	db	110	;'n'
  1090  00F2CE  74                 	db	116	;'t'
  1091  00F2CF  72                 	db	114	;'r'
  1092  00F2D0  61                 	db	97	;'a'
  1093  00F2D1  73                 	db	115	;'s'
  1094  00F2D2  74                 	db	116	;'t'
  1095  00F2D3  20                 	db	32
  1096  00F2D4  44                 	db	68	;'D'
  1097  00F2D5  75                 	db	117	;'u'
  1098  00F2D6  74                 	db	116	;'t'
  1099  00F2D7  79                 	db	121	;'y'
  1100  00F2D8  20                 	db	32
  1101  00F2D9  63                 	db	99	;'c'
  1102  00F2DA  79                 	db	121	;'y'
  1103  00F2DB  63                 	db	99	;'c'
  1104  00F2DC  6C                 	db	108	;'l'
  1105  00F2DD  65                 	db	101	;'e'
  1106  00F2DE  3A                 	db	58	;':'
  1107  00F2DF  20                 	db	32
  1108  00F2E0  47                 	db	71	;'G'
  1109  00F2E1  72                 	db	114	;'r'
  1110  00F2E2  65                 	db	101	;'e'
  1111  00F2E3  61                 	db	97	;'a'
  1112  00F2E4  74                 	db	116	;'t'
  1113  00F2E5  65                 	db	101	;'e'
  1114  00F2E6  72                 	db	114	;'r'
  1115  00F2E7  20                 	db	32
  1116  00F2E8  74                 	db	116	;'t'
  1117  00F2E9  68                 	db	104	;'h'
  1118  00F2EA  61                 	db	97	;'a'
  1119  00F2EB  6E                 	db	110	;'n'
  1120  00F2EC  20                 	db	32
  1121  00F2ED  31                 	db	49	;'1'
  1122  00F2EE  30                 	db	48	;'0'
  1123  00F2EF  30                 	db	48	;'0'
  1124  00F2F0  0D                 	db	13
  1125  00F2F1  0A                 	db	10
  1126  00F2F2  00                 	db	0
  1127  00F2F3                     STR_168:
  1128  00F2F3  49                 	db	73	;'I'
  1129  00F2F4  6E                 	db	110	;'n'
  1130  00F2F5  76                 	db	118	;'v'
  1131  00F2F6  61                 	db	97	;'a'
  1132  00F2F7  6C                 	db	108	;'l'
  1133  00F2F8  69                 	db	105	;'i'
  1134  00F2F9  64                 	db	100	;'d'
  1135  00F2FA  20                 	db	32
  1136  00F2FB  43                 	db	67	;'C'
  1137  00F2FC  6F                 	db	111	;'o'
  1138  00F2FD  6E                 	db	110	;'n'
  1139  00F2FE  74                 	db	116	;'t'
  1140  00F2FF  72                 	db	114	;'r'
  1141  00F300  61                 	db	97	;'a'
  1142  00F301  73                 	db	115	;'s'
  1143  00F302  74                 	db	116	;'t'
  1144  00F303  20                 	db	32
  1145  00F304  44                 	db	68	;'D'
  1146  00F305  75                 	db	117	;'u'
  1147  00F306  74                 	db	116	;'t'
  1148  00F307  79                 	db	121	;'y'
  1149  00F308  20                 	db	32
  1150  00F309  43                 	db	67	;'C'
  1151  00F30A  79                 	db	121	;'y'
  1152  00F30B  63                 	db	99	;'c'
  1153  00F30C  6C                 	db	108	;'l'
  1154  00F30D  65                 	db	101	;'e'
  1155  00F30E  3A                 	db	58	;':'
  1156  00F30F  20                 	db	32
  1157  00F310  4C                 	db	76	;'L'
  1158  00F311  65                 	db	101	;'e'
  1159  00F312  73                 	db	115	;'s'
  1160  00F313  73                 	db	115	;'s'
  1161  00F314  20                 	db	32
  1162  00F315  74                 	db	116	;'t'
  1163  00F316  68                 	db	104	;'h'
  1164  00F317  61                 	db	97	;'a'
  1165  00F318  6E                 	db	110	;'n'
  1166  00F319  20                 	db	32
  1167  00F31A  30                 	db	48	;'0'
  1168  00F31B  0D                 	db	13
  1169  00F31C  0A                 	db	10
  1170  00F31D  00                 	db	0
  1171  00F31E                     STR_157:
  1172  00F31E  77                 	db	119	;'w'
  1173  00F31F  68                 	db	104	;'h'
  1174  00F320  65                 	db	101	;'e'
  1175  00F321  72                 	db	114	;'r'
  1176  00F322  65                 	db	101	;'e'
  1177  00F323  20                 	db	32
  1178  00F324  74                 	db	116	;'t'
  1179  00F325  68                 	db	104	;'h'
  1180  00F326  65                 	db	101	;'e'
  1181  00F327  20                 	db	32
  1182  00F328  64                 	db	100	;'d'
  1183  00F329  75                 	db	117	;'u'
  1184  00F32A  74                 	db	116	;'t'
  1185  00F32B  79                 	db	121	;'y'
  1186  00F32C  63                 	db	99	;'c'
  1187  00F32D  79                 	db	121	;'y'
  1188  00F32E  63                 	db	99	;'c'
  1189  00F32F  6C                 	db	108	;'l'
  1190  00F330  65                 	db	101	;'e'
  1191  00F331  20                 	db	32
  1192  00F332  69                 	db	105	;'i'
  1193  00F333  73                 	db	115	;'s'
  1194  00F334  20                 	db	32
  1195  00F335  61                 	db	97	;'a'
  1196  00F336  20                 	db	32
  1197  00F337  6E                 	db	110	;'n'
  1198  00F338  75                 	db	117	;'u'
  1199  00F339  6D                 	db	109	;'m'
  1200  00F33A  62                 	db	98	;'b'
  1201  00F33B  65                 	db	101	;'e'
  1202  00F33C  72                 	db	114	;'r'
  1203  00F33D  20                 	db	32
  1204  00F33E  30                 	db	48	;'0'
  1205  00F33F  20                 	db	32
  1206  00F340  2D                 	db	45
  1207  00F341  20                 	db	32
  1208  00F342  31                 	db	49	;'1'
  1209  00F343  30                 	db	48	;'0'
  1210  00F344  30                 	db	48	;'0'
  1211  00F345  0D                 	db	13
  1212  00F346  0A                 	db	10
  1213  00F347  00                 	db	0
  1214  00F348                     STR_147:
  1215  00F348  49                 	db	73	;'I'
  1216  00F349  6E                 	db	110	;'n'
  1217  00F34A  76                 	db	118	;'v'
  1218  00F34B  61                 	db	97	;'a'
  1219  00F34C  6C                 	db	108	;'l'
  1220  00F34D  69                 	db	105	;'i'
  1221  00F34E  64                 	db	100	;'d'
  1222  00F34F  20                 	db	32
  1223  00F350  44                 	db	68	;'D'
  1224  00F351  75                 	db	117	;'u'
  1225  00F352  74                 	db	116	;'t'
  1226  00F353  79                 	db	121	;'y'
  1227  00F354  63                 	db	99	;'c'
  1228  00F355  79                 	db	121	;'y'
  1229  00F356  63                 	db	99	;'c'
  1230  00F357  6C                 	db	108	;'l'
  1231  00F358  65                 	db	101	;'e'
  1232  00F359  3A                 	db	58	;':'
  1233  00F35A  20                 	db	32
  1234  00F35B  47                 	db	71	;'G'
  1235  00F35C  72                 	db	114	;'r'
  1236  00F35D  65                 	db	101	;'e'
  1237  00F35E  61                 	db	97	;'a'
  1238  00F35F  74                 	db	116	;'t'
  1239  00F360  65                 	db	101	;'e'
  1240  00F361  72                 	db	114	;'r'
  1241  00F362  20                 	db	32
  1242  00F363  74                 	db	116	;'t'
  1243  00F364  68                 	db	104	;'h'
  1244  00F365  61                 	db	97	;'a'
  1245  00F366  6E                 	db	110	;'n'
  1246  00F367  20                 	db	32
  1247  00F368  31                 	db	49	;'1'
  1248  00F369  30                 	db	48	;'0'
  1249  00F36A  30                 	db	48	;'0'
  1250  00F36B  0D                 	db	13
  1251  00F36C  0A                 	db	10
  1252  00F36D  00                 	db	0
  1253  00F36E                     STR_117:
  1254  00F36E  43                 	db	67	;'C'
  1255  00F36F  68                 	db	104	;'h'
  1256  00F370  72                 	db	114	;'r'
  1257  00F371  69                 	db	105	;'i'
  1258  00F372  73                 	db	115	;'s'
  1259  00F373  74                 	db	116	;'t'
  1260  00F374  6D                 	db	109	;'m'
  1261  00F375  61                 	db	97	;'a'
  1262  00F376  73                 	db	115	;'s'
  1263  00F377  20                 	db	32
  1264  00F378  54                 	db	84	;'T'
  1265  00F379  72                 	db	114	;'r'
  1266  00F37A  65                 	db	101	;'e'
  1267  00F37B  65                 	db	101	;'e'
  1268  00F37C  20                 	db	32
  1269  00F37D  43                 	db	67	;'C'
  1270  00F37E  6F                 	db	111	;'o'
  1271  00F37F  6C                 	db	108	;'l'
  1272  00F380  6F                 	db	111	;'o'
  1273  00F381  72                 	db	114	;'r'
  1274  00F382  65                 	db	101	;'e'
  1275  00F383  64                 	db	100	;'d'
  1276  00F384  20                 	db	32
  1277  00F385  4C                 	db	76	;'L'
  1278  00F386  69                 	db	105	;'i'
  1279  00F387  67                 	db	103	;'g'
  1280  00F388  68                 	db	104	;'h'
  1281  00F389  74                 	db	116	;'t'
  1282  00F38A  73                 	db	115	;'s'
  1283  00F38B  20                 	db	32
  1284  00F38C  54                 	db	84	;'T'
  1285  00F38D  6F                 	db	111	;'o'
  1286  00F38E  67                 	db	103	;'g'
  1287  00F38F  67                 	db	103	;'g'
  1288  00F390  6C                 	db	108	;'l'
  1289  00F391  65                 	db	101	;'e'
  1290  00F392  64                 	db	100	;'d'
  1291  00F393  00                 	db	0
  1292  00F394                     STR_5:
  1293  00F394  0D                 	db	13
  1294  00F395  0A                 	db	10
  1295  00F396  42                 	db	66	;'B'
  1296  00F397  75                 	db	117	;'u'
  1297  00F398  66                 	db	102	;'f'
  1298  00F399  66                 	db	102	;'f'
  1299  00F39A  65                 	db	101	;'e'
  1300  00F39B  72                 	db	114	;'r'
  1301  00F39C  20                 	db	32
  1302  00F39D  6F                 	db	111	;'o'
  1303  00F39E  76                 	db	118	;'v'
  1304  00F39F  65                 	db	101	;'e'
  1305  00F3A0  72                 	db	114	;'r'
  1306  00F3A1  66                 	db	102	;'f'
  1307  00F3A2  6C                 	db	108	;'l'
  1308  00F3A3  6F                 	db	111	;'o'
  1309  00F3A4  77                 	db	119	;'w'
  1310  00F3A5  21                 	db	33
  1311  00F3A6  20                 	db	32
  1312  00F3A7  44                 	db	68	;'D'
  1313  00F3A8  65                 	db	101	;'e'
  1314  00F3A9  6C                 	db	108	;'l'
  1315  00F3AA  65                 	db	101	;'e'
  1316  00F3AB  74                 	db	116	;'t'
  1317  00F3AC  69                 	db	105	;'i'
  1318  00F3AD  6E                 	db	110	;'n'
  1319  00F3AE  67                 	db	103	;'g'
  1320  00F3AF  20                 	db	32
  1321  00F3B0  42                 	db	66	;'B'
  1322  00F3B1  75                 	db	117	;'u'
  1323  00F3B2  66                 	db	102	;'f'
  1324  00F3B3  66                 	db	102	;'f'
  1325  00F3B4  65                 	db	101	;'e'
  1326  00F3B5  72                 	db	114	;'r'
  1327  00F3B6  20                 	db	32
  1328  00F3B7  0D                 	db	13
  1329  00F3B8  0A                 	db	10
  1330  00F3B9  00                 	db	0
  1331  00F3BA                     STR_134:
  1332  00F3BA  69                 	db	105	;'i'
  1333  00F3BB  2E                 	db	46
  1334  00F3BC  65                 	db	101	;'e'
  1335  00F3BD  2E                 	db	46
  1336  00F3BE  20                 	db	32
  1337  00F3BF  43                 	db	67	;'C'
  1338  00F3C0  68                 	db	104	;'h'
  1339  00F3C1  72                 	db	114	;'r'
  1340  00F3C2  69                 	db	105	;'i'
  1341  00F3C3  73                 	db	115	;'s'
  1342  00F3C4  74                 	db	116	;'t'
  1343  00F3C5  6D                 	db	109	;'m'
  1344  00F3C6  61                 	db	97	;'a'
  1345  00F3C7  73                 	db	115	;'s'
  1346  00F3C8  20                 	db	32
  1347  00F3C9  43                 	db	67	;'C'
  1348  00F3CA  6F                 	db	111	;'o'
  1349  00F3CB  6C                 	db	108	;'l'
  1350  00F3CC  6F                 	db	111	;'o'
  1351  00F3CD  72                 	db	114	;'r'
  1352  00F3CE  65                 	db	101	;'e'
  1353  00F3CF  64                 	db	100	;'d'
  1354  00F3D0  20                 	db	32
  1355  00F3D1  6C                 	db	108	;'l'
  1356  00F3D2  69                 	db	105	;'i'
  1357  00F3D3  67                 	db	103	;'g'
  1358  00F3D4  68                 	db	104	;'h'
  1359  00F3D5  74                 	db	116	;'t'
  1360  00F3D6  73                 	db	115	;'s'
  1361  00F3D7  20                 	db	32
  1362  00F3D8  3D                 	db	61	;'='
  1363  00F3D9  20                 	db	32
  1364  00F3DA  4F                 	db	79	;'O'
  1365  00F3DB  6E                 	db	110	;'n'
  1366  00F3DC  0D                 	db	13
  1367  00F3DD  0A                 	db	10
  1368  00F3DE  00                 	db	0
  1369  00F3DF                     STR_212:
  1370  00F3DF  45                 	db	69	;'E'
  1371  00F3E0  6E                 	db	110	;'n'
  1372  00F3E1  74                 	db	116	;'t'
  1373  00F3E2  65                 	db	101	;'e'
  1374  00F3E3  72                 	db	114	;'r'
  1375  00F3E4  20                 	db	32
  1376  00F3E5  54                 	db	84	;'T'
  1377  00F3E6  69                 	db	105	;'i'
  1378  00F3E7  6D                 	db	109	;'m'
  1379  00F3E8  65                 	db	101	;'e'
  1380  00F3E9  20                 	db	32
  1381  00F3EA  4D                 	db	77	;'M'
  1382  00F3EB  4D                 	db	77	;'M'
  1383  00F3EC  2F                 	db	47
  1384  00F3ED  44                 	db	68	;'D'
  1385  00F3EE  44                 	db	68	;'D'
  1386  00F3EF  2F                 	db	47
  1387  00F3F0  59                 	db	89	;'Y'
  1388  00F3F1  59                 	db	89	;'Y'
  1389  00F3F2  20                 	db	32
  1390  00F3F3  48                 	db	72	;'H'
  1391  00F3F4  48                 	db	72	;'H'
  1392  00F3F5  3A                 	db	58	;':'
  1393  00F3F6  4D                 	db	77	;'M'
  1394  00F3F7  4D                 	db	77	;'M'
  1395  00F3F8  3A                 	db	58	;':'
  1396  00F3F9  53                 	db	83	;'S'
  1397  00F3FA  53                 	db	83	;'S'
  1398  00F3FB  20                 	db	32
  1399  00F3FC  41                 	db	65	;'A'
  1400  00F3FD  4D                 	db	77	;'M'
  1401  00F3FE  20                 	db	32
  1402  00F3FF  6F                 	db	111	;'o'
  1403  00F400  72                 	db	114	;'r'
  1404  00F401  0D                 	db	13
  1405  00F402  0A                 	db	10
  1406  00F403  00                 	db	0
  1407  00F404                     STR_202:
  1408  00F404  20                 	db	32
  1409  00F405  33                 	db	51	;'3'
  1410  00F406  20                 	db	32
  1411  00F407  56                 	db	86	;'V'
  1412  00F408  6F                 	db	111	;'o'
  1413  00F409  6C                 	db	108	;'l'
  1414  00F40A  74                 	db	116	;'t'
  1415  00F40B  20                 	db	32
  1416  00F40C  52                 	db	82	;'R'
  1417  00F40D  54                 	db	84	;'T'
  1418  00F40E  43                 	db	67	;'C'
  1419  00F40F  20                 	db	32
  1420  00F410  42                 	db	66	;'B'
  1421  00F411  61                 	db	97	;'a'
  1422  00F412  74                 	db	116	;'t'
  1423  00F413  74                 	db	116	;'t'
  1424  00F414  65                 	db	101	;'e'
  1425  00F415  72                 	db	114	;'r'
  1426  00F416  79                 	db	121	;'y'
  1427  00F417  20                 	db	32
  1428  00F418  56                 	db	86	;'V'
  1429  00F419  6F                 	db	111	;'o'
  1430  00F41A  6C                 	db	108	;'l'
  1431  00F41B  74                 	db	116	;'t'
  1432  00F41C  61                 	db	97	;'a'
  1433  00F41D  67                 	db	103	;'g'
  1434  00F41E  65                 	db	101	;'e'
  1435  00F41F  20                 	db	32
  1436  00F420  3D                 	db	61	;'='
  1437  00F421  20                 	db	32
  1438  00F422  25                 	db	37
  1439  00F423  64                 	db	100	;'d'
  1440  00F424  2E                 	db	46
  1441  00F425  25                 	db	37
  1442  00F426  64                 	db	100	;'d'
  1443  00F427  00                 	db	0
  1444  00F428                     STR_282:
  1445  00F428  25                 	db	37
  1446  00F429  30                 	db	48	;'0'
  1447  00F42A  32                 	db	50	;'2'
  1448  00F42B  64                 	db	100	;'d'
  1449  00F42C  2F                 	db	47
  1450  00F42D  25                 	db	37
  1451  00F42E  30                 	db	48	;'0'
  1452  00F42F  32                 	db	50	;'2'
  1453  00F430  64                 	db	100	;'d'
  1454  00F431  2F                 	db	47
  1455  00F432  32                 	db	50	;'2'
  1456  00F433  30                 	db	48	;'0'
  1457  00F434  25                 	db	37
  1458  00F435  30                 	db	48	;'0'
  1459  00F436  32                 	db	50	;'2'
  1460  00F437  64                 	db	100	;'d'
  1461  00F438  20                 	db	32
  1462  00F439  25                 	db	37
  1463  00F43A  30                 	db	48	;'0'
  1464  00F43B  32                 	db	50	;'2'
  1465  00F43C  64                 	db	100	;'d'
  1466  00F43D  3A                 	db	58	;':'
  1467  00F43E  25                 	db	37
  1468  00F43F  30                 	db	48	;'0'
  1469  00F440  32                 	db	50	;'2'
  1470  00F441  64                 	db	100	;'d'
  1471  00F442  3A                 	db	58	;':'
  1472  00F443  25                 	db	37
  1473  00F444  30                 	db	48	;'0'
  1474  00F445  32                 	db	50	;'2'
  1475  00F446  64                 	db	100	;'d'
  1476  00F447  20                 	db	32
  1477  00F448  41                 	db	65	;'A'
  1478  00F449  4D                 	db	77	;'M'
  1479  00F44A  00                 	db	0
  1480  00F44B                     STR_283:
  1481  00F44B  25                 	db	37
  1482  00F44C  30                 	db	48	;'0'
  1483  00F44D  32                 	db	50	;'2'
  1484  00F44E  64                 	db	100	;'d'
  1485  00F44F  2F                 	db	47
  1486  00F450  25                 	db	37
  1487  00F451  30                 	db	48	;'0'
  1488  00F452  32                 	db	50	;'2'
  1489  00F453  64                 	db	100	;'d'
  1490  00F454  2F                 	db	47
  1491  00F455  32                 	db	50	;'2'
  1492  00F456  30                 	db	48	;'0'
  1493  00F457  25                 	db	37
  1494  00F458  30                 	db	48	;'0'
  1495  00F459  32                 	db	50	;'2'
  1496  00F45A  64                 	db	100	;'d'
  1497  00F45B  20                 	db	32
  1498  00F45C  25                 	db	37
  1499  00F45D  30                 	db	48	;'0'
  1500  00F45E  32                 	db	50	;'2'
  1501  00F45F  64                 	db	100	;'d'
  1502  00F460  3A                 	db	58	;':'
  1503  00F461  25                 	db	37
  1504  00F462  30                 	db	48	;'0'
  1505  00F463  32                 	db	50	;'2'
  1506  00F464  64                 	db	100	;'d'
  1507  00F465  3A                 	db	58	;':'
  1508  00F466  25                 	db	37
  1509  00F467  30                 	db	48	;'0'
  1510  00F468  32                 	db	50	;'2'
  1511  00F469  64                 	db	100	;'d'
  1512  00F46A  20                 	db	32
  1513  00F46B  50                 	db	80	;'P'
  1514  00F46C  4D                 	db	77	;'M'
  1515  00F46D  00                 	db	0
  1516  00F46E                     STR_213:
  1517  00F46E  45                 	db	69	;'E'
  1518  00F46F  6E                 	db	110	;'n'
  1519  00F470  74                 	db	116	;'t'
  1520  00F471  65                 	db	101	;'e'
  1521  00F472  72                 	db	114	;'r'
  1522  00F473  20                 	db	32
  1523  00F474  54                 	db	84	;'T'
  1524  00F475  69                 	db	105	;'i'
  1525  00F476  6D                 	db	109	;'m'
  1526  00F477  65                 	db	101	;'e'
  1527  00F478  20                 	db	32
  1528  00F479  4D                 	db	77	;'M'
  1529  00F47A  4D                 	db	77	;'M'
  1530  00F47B  2F                 	db	47
  1531  00F47C  44                 	db	68	;'D'
  1532  00F47D  44                 	db	68	;'D'
  1533  00F47E  2F                 	db	47
  1534  00F47F  59                 	db	89	;'Y'
  1535  00F480  59                 	db	89	;'Y'
  1536  00F481  20                 	db	32
  1537  00F482  48                 	db	72	;'H'
  1538  00F483  48                 	db	72	;'H'
  1539  00F484  3A                 	db	58	;':'
  1540  00F485  4D                 	db	77	;'M'
  1541  00F486  4D                 	db	77	;'M'
  1542  00F487  3A                 	db	58	;':'
  1543  00F488  53                 	db	83	;'S'
  1544  00F489  53                 	db	83	;'S'
  1545  00F48A  20                 	db	32
  1546  00F48B  50                 	db	80	;'P'
  1547  00F48C  4D                 	db	77	;'M'
  1548  00F48D  0D                 	db	13
  1549  00F48E  0A                 	db	10
  1550  00F48F  00                 	db	0
  1551  00F490                     STR_149:
  1552  00F490  49                 	db	73	;'I'
  1553  00F491  6E                 	db	110	;'n'
  1554  00F492  76                 	db	118	;'v'
  1555  00F493  61                 	db	97	;'a'
  1556  00F494  6C                 	db	108	;'l'
  1557  00F495  69                 	db	105	;'i'
  1558  00F496  64                 	db	100	;'d'
  1559  00F497  20                 	db	32
  1560  00F498  44                 	db	68	;'D'
  1561  00F499  75                 	db	117	;'u'
  1562  00F49A  74                 	db	116	;'t'
  1563  00F49B  79                 	db	121	;'y'
  1564  00F49C  63                 	db	99	;'c'
  1565  00F49D  79                 	db	121	;'y'
  1566  00F49E  63                 	db	99	;'c'
  1567  00F49F  6C                 	db	108	;'l'
  1568  00F4A0  65                 	db	101	;'e'
  1569  00F4A1  3A                 	db	58	;':'
  1570  00F4A2  20                 	db	32
  1571  00F4A3  4C                 	db	76	;'L'
  1572  00F4A4  65                 	db	101	;'e'
  1573  00F4A5  73                 	db	115	;'s'
  1574  00F4A6  73                 	db	115	;'s'
  1575  00F4A7  20                 	db	32
  1576  00F4A8  74                 	db	116	;'t'
  1577  00F4A9  68                 	db	104	;'h'
  1578  00F4AA  61                 	db	97	;'a'
  1579  00F4AB  6E                 	db	110	;'n'
  1580  00F4AC  20                 	db	32
  1581  00F4AD  30                 	db	48	;'0'
  1582  00F4AE  0D                 	db	13
  1583  00F4AF  0A                 	db	10
  1584  00F4B0  00                 	db	0
  1585  00F4B1                     STR_219:
  1586  00F4B1  46                 	db	70	;'F'
  1587  00F4B2  6F                 	db	111	;'o'
  1588  00F4B3  72                 	db	114	;'r'
  1589  00F4B4  6D                 	db	109	;'m'
  1590  00F4B5  61                 	db	97	;'a'
  1591  00F4B6  74                 	db	116	;'t'
  1592  00F4B7  20                 	db	32
  1593  00F4B8  69                 	db	105	;'i'
  1594  00F4B9  73                 	db	115	;'s'
  1595  00F4BA  20                 	db	32
  1596  00F4BB  4D                 	db	77	;'M'
  1597  00F4BC  4D                 	db	77	;'M'
  1598  00F4BD  2F                 	db	47
  1599  00F4BE  44                 	db	68	;'D'
  1600  00F4BF  44                 	db	68	;'D'
  1601  00F4C0  2F                 	db	47
  1602  00F4C1  59                 	db	89	;'Y'
  1603  00F4C2  59                 	db	89	;'Y'
  1604  00F4C3  20                 	db	32
  1605  00F4C4  48                 	db	72	;'H'
  1606  00F4C5  48                 	db	72	;'H'
  1607  00F4C6  3A                 	db	58	;':'
  1608  00F4C7  4D                 	db	77	;'M'
  1609  00F4C8  4D                 	db	77	;'M'
  1610  00F4C9  3A                 	db	58	;':'
  1611  00F4CA  53                 	db	83	;'S'
  1612  00F4CB  53                 	db	83	;'S'
  1613  00F4CC  20                 	db	32
  1614  00F4CD  41                 	db	65	;'A'
  1615  00F4CE  4D                 	db	77	;'M'
  1616  00F4CF  0D                 	db	13
  1617  00F4D0  0A                 	db	10
  1618  00F4D1  00                 	db	0
  1619  00F4D2                     STR_181:
  1620  00F4D2  45                 	db	69	;'E'
  1621  00F4D3  72                 	db	114	;'r'
  1622  00F4D4  72                 	db	114	;'r'
  1623  00F4D5  6F                 	db	111	;'o'
  1624  00F4D6  72                 	db	114	;'r'
  1625  00F4D7  3A                 	db	58	;':'
  1626  00F4D8  20                 	db	32
  1627  00F4D9  6F                 	db	111	;'o'
  1628  00F4DA  6E                 	db	110	;'n'
  1629  00F4DB  6C                 	db	108	;'l'
  1630  00F4DC  79                 	db	121	;'y'
  1631  00F4DD  20                 	db	32
  1632  00F4DE  75                 	db	117	;'u'
  1633  00F4DF  73                 	db	115	;'s'
  1634  00F4E0  65                 	db	101	;'e'
  1635  00F4E1  20                 	db	32
  1636  00F4E2  6F                 	db	111	;'o'
  1637  00F4E3  6E                 	db	110	;'n'
  1638  00F4E4  65                 	db	101	;'e'
  1639  00F4E5  20                 	db	32
  1640  00F4E6  65                 	db	101	;'e'
  1641  00F4E7  71                 	db	113	;'q'
  1642  00F4E8  75                 	db	117	;'u'
  1643  00F4E9  61                 	db	97	;'a'
  1644  00F4EA  6C                 	db	108	;'l'
  1645  00F4EB  20                 	db	32
  1646  00F4EC  73                 	db	115	;'s'
  1647  00F4ED  69                 	db	105	;'i'
  1648  00F4EE  67                 	db	103	;'g'
  1649  00F4EF  6E                 	db	110	;'n'
  1650  00F4F0  0D                 	db	13
  1651  00F4F1  0A                 	db	10
  1652  00F4F2  00                 	db	0
  1653  00F4F3                     STR_284:
  1654  00F4F3  25                 	db	37
  1655  00F4F4  30                 	db	48	;'0'
  1656  00F4F5  32                 	db	50	;'2'
  1657  00F4F6  64                 	db	100	;'d'
  1658  00F4F7  2F                 	db	47
  1659  00F4F8  25                 	db	37
  1660  00F4F9  30                 	db	48	;'0'
  1661  00F4FA  32                 	db	50	;'2'
  1662  00F4FB  64                 	db	100	;'d'
  1663  00F4FC  2F                 	db	47
  1664  00F4FD  32                 	db	50	;'2'
  1665  00F4FE  30                 	db	48	;'0'
  1666  00F4FF  25                 	db	37
  1667  00F500  30                 	db	48	;'0'
  1668  00F501  32                 	db	50	;'2'
  1669  00F502  64                 	db	100	;'d'
  1670  00F503  20                 	db	32
  1671  00F504  25                 	db	37
  1672  00F505  30                 	db	48	;'0'
  1673  00F506  32                 	db	50	;'2'
  1674  00F507  64                 	db	100	;'d'
  1675  00F508  3A                 	db	58	;':'
  1676  00F509  25                 	db	37
  1677  00F50A  30                 	db	48	;'0'
  1678  00F50B  32                 	db	50	;'2'
  1679  00F50C  64                 	db	100	;'d'
  1680  00F50D  3A                 	db	58	;':'
  1681  00F50E  25                 	db	37
  1682  00F50F  30                 	db	48	;'0'
  1683  00F510  32                 	db	50	;'2'
  1684  00F511  64                 	db	100	;'d'
  1685  00F512  00                 	db	0
  1686  00F513                     STR_170:
  1687  00F513  43                 	db	67	;'C'
  1688  00F514  6F                 	db	111	;'o'
  1689  00F515  6E                 	db	110	;'n'
  1690  00F516  74                 	db	116	;'t'
  1691  00F517  72                 	db	114	;'r'
  1692  00F518  61                 	db	97	;'a'
  1693  00F519  73                 	db	115	;'s'
  1694  00F51A  74                 	db	116	;'t'
  1695  00F51B  20                 	db	32
  1696  00F51C  44                 	db	68	;'D'
  1697  00F51D  75                 	db	117	;'u'
  1698  00F51E  74                 	db	116	;'t'
  1699  00F51F  79                 	db	121	;'y'
  1700  00F520  20                 	db	32
  1701  00F521  43                 	db	67	;'C'
  1702  00F522  79                 	db	121	;'y'
  1703  00F523  63                 	db	99	;'c'
  1704  00F524  6C                 	db	108	;'l'
  1705  00F525  65                 	db	101	;'e'
  1706  00F526  20                 	db	32
  1707  00F527  73                 	db	115	;'s'
  1708  00F528  65                 	db	101	;'e'
  1709  00F529  74                 	db	116	;'t'
  1710  00F52A  20                 	db	32
  1711  00F52B  74                 	db	116	;'t'
  1712  00F52C  6F                 	db	111	;'o'
  1713  00F52D  20                 	db	32
  1714  00F52E  25                 	db	37
  1715  00F52F  64                 	db	100	;'d'
  1716  00F530  0D                 	db	13
  1717  00F531  0A                 	db	10
  1718  00F532  00                 	db	0
  1719  00F533                     STR_125:
  1720  00F533  43                 	db	67	;'C'
  1721  00F534  68                 	db	104	;'h'
  1722  00F535  72                 	db	114	;'r'
  1723  00F536  69                 	db	105	;'i'
  1724  00F537  73                 	db	115	;'s'
  1725  00F538  74                 	db	116	;'t'
  1726  00F539  6D                 	db	109	;'m'
  1727  00F53A  61                 	db	97	;'a'
  1728  00F53B  73                 	db	115	;'s'
  1729  00F53C  20                 	db	32
  1730  00F53D  54                 	db	84	;'T'
  1731  00F53E  72                 	db	114	;'r'
  1732  00F53F  65                 	db	101	;'e'
  1733  00F540  65                 	db	101	;'e'
  1734  00F541  20                 	db	32
  1735  00F542  57                 	db	87	;'W'
  1736  00F543  68                 	db	104	;'h'
  1737  00F544  69                 	db	105	;'i'
  1738  00F545  74                 	db	116	;'t'
  1739  00F546  65                 	db	101	;'e'
  1740  00F547  20                 	db	32
  1741  00F548  4C                 	db	76	;'L'
  1742  00F549  69                 	db	105	;'i'
  1743  00F54A  67                 	db	103	;'g'
  1744  00F54B  68                 	db	104	;'h'
  1745  00F54C  74                 	db	116	;'t'
  1746  00F54D  73                 	db	115	;'s'
  1747  00F54E  20                 	db	32
  1748  00F54F  4F                 	db	79	;'O'
  1749  00F550  66                 	db	102	;'f'
  1750  00F551  66                 	db	102	;'f'
  1751  00F552  00                 	db	0
  1752  00F553                     STR_121:
  1753  00F553  43                 	db	67	;'C'
  1754  00F554  68                 	db	104	;'h'
  1755  00F555  72                 	db	114	;'r'
  1756  00F556  69                 	db	105	;'i'
  1757  00F557  73                 	db	115	;'s'
  1758  00F558  74                 	db	116	;'t'
  1759  00F559  6D                 	db	109	;'m'
  1760  00F55A  61                 	db	97	;'a'
  1761  00F55B  73                 	db	115	;'s'
  1762  00F55C  20                 	db	32
  1763  00F55D  54                 	db	84	;'T'
  1764  00F55E  72                 	db	114	;'r'
  1765  00F55F  65                 	db	101	;'e'
  1766  00F560  65                 	db	101	;'e'
  1767  00F561  20                 	db	32
  1768  00F562  57                 	db	87	;'W'
  1769  00F563  68                 	db	104	;'h'
  1770  00F564  69                 	db	105	;'i'
  1771  00F565  74                 	db	116	;'t'
  1772  00F566  65                 	db	101	;'e'
  1773  00F567  20                 	db	32
  1774  00F568  4C                 	db	76	;'L'
  1775  00F569  69                 	db	105	;'i'
  1776  00F56A  67                 	db	103	;'g'
  1777  00F56B  68                 	db	104	;'h'
  1778  00F56C  74                 	db	116	;'t'
  1779  00F56D  73                 	db	115	;'s'
  1780  00F56E  20                 	db	32
  1781  00F56F  4F                 	db	79	;'O'
  1782  00F570  6E                 	db	110	;'n'
  1783  00F571  00                 	db	0
  1784  00F572                     STR_183:
  1785  00F572  45                 	db	69	;'E'
  1786  00F573  72                 	db	114	;'r'
  1787  00F574  72                 	db	114	;'r'
  1788  00F575  6F                 	db	111	;'o'
  1789  00F576  72                 	db	114	;'r'
  1790  00F577  3A                 	db	58	;':'
  1791  00F578  20                 	db	32
  1792  00F579  4E                 	db	78	;'N'
  1793  00F57A  6F                 	db	111	;'o'
  1794  00F57B  20                 	db	32
  1795  00F57C  6E                 	db	110	;'n'
  1796  00F57D  65                 	db	101	;'e'
  1797  00F57E  67                 	db	103	;'g'
  1798  00F57F  61                 	db	97	;'a'
  1799  00F580  74                 	db	116	;'t'
  1800  00F581  69                 	db	105	;'i'
  1801  00F582  76                 	db	118	;'v'
  1802  00F583  65                 	db	101	;'e'
  1803  00F584  20                 	db	32
  1804  00F585  63                 	db	99	;'c'
  1805  00F586  68                 	db	104	;'h'
  1806  00F587  61                 	db	97	;'a'
  1807  00F588  6E                 	db	110	;'n'
  1808  00F589  6E                 	db	110	;'n'
  1809  00F58A  65                 	db	101	;'e'
  1810  00F58B  6C                 	db	108	;'l'
  1811  00F58C  73                 	db	115	;'s'
  1812  00F58D  0D                 	db	13
  1813  00F58E  0A                 	db	10
  1814  00F58F  00                 	db	0
  1815  00F590                     STR_221:
  1816  00F590  52                 	db	82	;'R'
  1817  00F591  65                 	db	101	;'e'
  1818  00F592  61                 	db	97	;'a'
  1819  00F593  6C                 	db	108	;'l'
  1820  00F594  20                 	db	32
  1821  00F595  54                 	db	84	;'T'
  1822  00F596  69                 	db	105	;'i'
  1823  00F597  6D                 	db	109	;'m'
  1824  00F598  65                 	db	101	;'e'
  1825  00F599  20                 	db	32
  1826  00F59A  43                 	db	67	;'C'
  1827  00F59B  6C                 	db	108	;'l'
  1828  00F59C  6F                 	db	111	;'o'
  1829  00F59D  63                 	db	99	;'c'
  1830  00F59E  6B                 	db	107	;'k'
  1831  00F59F  20                 	db	32
  1832  00F5A0  48                 	db	72	;'H'
  1833  00F5A1  65                 	db	101	;'e'
  1834  00F5A2  6C                 	db	108	;'l'
  1835  00F5A3  70                 	db	112	;'p'
  1836  00F5A4  20                 	db	32
  1837  00F5A5  4D                 	db	77	;'M'
  1838  00F5A6  65                 	db	101	;'e'
  1839  00F5A7  6E                 	db	110	;'n'
  1840  00F5A8  75                 	db	117	;'u'
  1841  00F5A9  0D                 	db	13
  1842  00F5AA  0A                 	db	10
  1843  00F5AB  0A                 	db	10
  1844  00F5AC  00                 	db	0
  1845  00F5AD                     STR_187:
  1846  00F5AD  43                 	db	67	;'C'
  1847  00F5AE  68                 	db	104	;'h'
  1848  00F5AF  61                 	db	97	;'a'
  1849  00F5B0  6E                 	db	110	;'n'
  1850  00F5B1  6E                 	db	110	;'n'
  1851  00F5B2  65                 	db	101	;'e'
  1852  00F5B3  6C                 	db	108	;'l'
  1853  00F5B4  20                 	db	32
  1854  00F5B5  25                 	db	37
  1855  00F5B6  64                 	db	100	;'d'
  1856  00F5B7  20                 	db	32
  1857  00F5B8  69                 	db	105	;'i'
  1858  00F5B9  73                 	db	115	;'s'
  1859  00F5BA  20                 	db	32
  1860  00F5BB  6E                 	db	110	;'n'
  1861  00F5BC  6F                 	db	111	;'o'
  1862  00F5BD  74                 	db	116	;'t'
  1863  00F5BE  20                 	db	32
  1864  00F5BF  63                 	db	99	;'c'
  1865  00F5C0  6F                 	db	111	;'o'
  1866  00F5C1  6E                 	db	110	;'n'
  1867  00F5C2  66                 	db	102	;'f'
  1868  00F5C3  69                 	db	105	;'i'
  1869  00F5C4  67                 	db	103	;'g'
  1870  00F5C5  75                 	db	117	;'u'
  1871  00F5C6  72                 	db	114	;'r'
  1872  00F5C7  65                 	db	101	;'e'
  1873  00F5C8  64                 	db	100	;'d'
  1874  00F5C9  00                 	db	0
  1875  00F5CA                     STR_16:
  1876  00F5CA  0D                 	db	13
  1877  00F5CB  0A                 	db	10
  1878  00F5CC  45                 	db	69	;'E'
  1879  00F5CD  6E                 	db	110	;'n'
  1880  00F5CE  74                 	db	116	;'t'
  1881  00F5CF  65                 	db	101	;'e'
  1882  00F5D0  72                 	db	114	;'r'
  1883  00F5D1  20                 	db	32
  1884  00F5D2  27                 	db	39
  1885  00F5D3  3F                 	db	63	;'?'
  1886  00F5D4  27                 	db	39
  1887  00F5D5  20                 	db	32
  1888  00F5D6  66                 	db	102	;'f'
  1889  00F5D7  6F                 	db	111	;'o'
  1890  00F5D8  72                 	db	114	;'r'
  1891  00F5D9  20                 	db	32
  1892  00F5DA  48                 	db	72	;'H'
  1893  00F5DB  65                 	db	101	;'e'
  1894  00F5DC  6C                 	db	108	;'l'
  1895  00F5DD  70                 	db	112	;'p'
  1896  00F5DE  20                 	db	32
  1897  00F5DF  4D                 	db	77	;'M'
  1898  00F5E0  65                 	db	101	;'e'
  1899  00F5E1  6E                 	db	110	;'n'
  1900  00F5E2  75                 	db	117	;'u'
  1901  00F5E3  0D                 	db	13
  1902  00F5E4  0A                 	db	10
  1903  00F5E5  3E                 	db	62	;'>'
  1904  00F5E6  00                 	db	0
  1905  00F5E7                     STR_129:
  1906  00F5E7  43                 	db	67	;'C'
  1907  00F5E8  68                 	db	104	;'h'
  1908  00F5E9  72                 	db	114	;'r'
  1909  00F5EA  69                 	db	105	;'i'
  1910  00F5EB  73                 	db	115	;'s'
  1911  00F5EC  74                 	db	116	;'t'
  1912  00F5ED  6D                 	db	109	;'m'
  1913  00F5EE  61                 	db	97	;'a'
  1914  00F5EF  73                 	db	115	;'s'
  1915  00F5F0  20                 	db	32
  1916  00F5F1  74                 	db	116	;'t'
  1917  00F5F2  72                 	db	114	;'r'
  1918  00F5F3  65                 	db	101	;'e'
  1919  00F5F4  65                 	db	101	;'e'
  1920  00F5F5  20                 	db	32
  1921  00F5F6  48                 	db	72	;'H'
  1922  00F5F7  65                 	db	101	;'e'
  1923  00F5F8  6C                 	db	108	;'l'
  1924  00F5F9  70                 	db	112	;'p'
  1925  00F5FA  20                 	db	32
  1926  00F5FB  4D                 	db	77	;'M'
  1927  00F5FC  65                 	db	101	;'e'
  1928  00F5FD  6E                 	db	110	;'n'
  1929  00F5FE  75                 	db	117	;'u'
  1930  00F5FF  0D                 	db	13
  1931  00F600  0A                 	db	10
  1932  00F601  0A                 	db	10
  1933  00F602  00                 	db	0
  1934  00F603                     STR_185:
  1935  00F603  45                 	db	69	;'E'
  1936  00F604  72                 	db	114	;'r'
  1937  00F605  72                 	db	114	;'r'
  1938  00F606  6F                 	db	111	;'o'
  1939  00F607  72                 	db	114	;'r'
  1940  00F608  3A                 	db	58	;':'
  1941  00F609  20                 	db	32
  1942  00F60A  69                 	db	105	;'i'
  1943  00F60B  6E                 	db	110	;'n'
  1944  00F60C  20                 	db	32
  1945  00F60D  70                 	db	112	;'p'
  1946  00F60E  61                 	db	97	;'a'
  1947  00F60F  72                 	db	114	;'r'
  1948  00F610  73                 	db	115	;'s'
  1949  00F611  69                 	db	105	;'i'
  1950  00F612  6E                 	db	110	;'n'
  1951  00F613  67                 	db	103	;'g'
  1952  00F614  20                 	db	32
  1953  00F615  63                 	db	99	;'c'
  1954  00F616  6F                 	db	111	;'o'
  1955  00F617  6D                 	db	109	;'m'
  1956  00F618  6D                 	db	109	;'m'
  1957  00F619  61                 	db	97	;'a'
  1958  00F61A  6E                 	db	110	;'n'
  1959  00F61B  64                 	db	100	;'d'
  1960  00F61C  0D                 	db	13
  1961  00F61D  0A                 	db	10
  1962  00F61E  00                 	db	0
  1963  00F61F                     STR_144:
  1964  00F61F  74                 	db	116	;'t'
  1965  00F620  68                 	db	104	;'h'
  1966  00F621  65                 	db	101	;'e'
  1967  00F622  72                 	db	114	;'r'
  1968  00F623  65                 	db	101	;'e'
  1969  00F624  20                 	db	32
  1970  00F625  69                 	db	105	;'i'
  1971  00F626  73                 	db	115	;'s'
  1972  00F627  20                 	db	32
  1973  00F628  6E                 	db	110	;'n'
  1974  00F629  6F                 	db	111	;'o'
  1975  00F62A  20                 	db	32
  1976  00F62B  71                 	db	113	;'q'
  1977  00F62C  75                 	db	117	;'u'
  1978  00F62D  65                 	db	101	;'e'
  1979  00F62E  73                 	db	115	;'s'
  1980  00F62F  74                 	db	116	;'t'
  1981  00F630  69                 	db	105	;'i'
  1982  00F631  6F                 	db	111	;'o'
  1983  00F632  6E                 	db	110	;'n'
  1984  00F633  20                 	db	32
  1985  00F634  6D                 	db	109	;'m'
  1986  00F635  61                 	db	97	;'a'
  1987  00F636  72                 	db	114	;'r'
  1988  00F637  6B                 	db	107	;'k'
  1989  00F638  0D                 	db	13
  1990  00F639  0A                 	db	10
  1991  00F63A  00                 	db	0
  1992  00F63B                     STR_248:
  1993  00F63B  69                 	db	105	;'i'
  1994  00F63C  2E                 	db	46
  1995  00F63D  65                 	db	101	;'e'
  1996  00F63E  2E                 	db	46
  1997  00F63F  20                 	db	32
  1998  00F640  4A                 	db	74	;'J'
  1999  00F641  6F                 	db	111	;'o'
  2000  00F642  65                 	db	101	;'e'
  2001  00F643  73                 	db	115	;'s'
  2002  00F644  20                 	db	32
  2003  00F645  72                 	db	114	;'r'
  2004  00F646  6F                 	db	111	;'o'
  2005  00F647  6F                 	db	111	;'o'
  2006  00F648  6D                 	db	109	;'m'
  2007  00F649  20                 	db	32
  2008  00F64A  6C                 	db	108	;'l'
  2009  00F64B  69                 	db	105	;'i'
  2010  00F64C  67                 	db	103	;'g'
  2011  00F64D  68                 	db	104	;'h'
  2012  00F64E  74                 	db	116	;'t'
  2013  00F64F  20                 	db	32
  2014  00F650  3D                 	db	61	;'='
  2015  00F651  20                 	db	32
  2016  00F652  4F                 	db	79	;'O'
  2017  00F653  6E                 	db	110	;'n'
  2018  00F654  0D                 	db	13
  2019  00F655  0A                 	db	10
  2020  00F656  00                 	db	0
  2021  00F657                     STR_217:
  2022  00F657  0D                 	db	13
  2023  00F658  0A                 	db	10
  2024  00F659  54                 	db	84	;'T'
  2025  00F65A  69                 	db	105	;'i'
  2026  00F65B  6D                 	db	109	;'m'
  2027  00F65C  65                 	db	101	;'e'
  2028  00F65D  20                 	db	32
  2029  00F65E  4E                 	db	78	;'N'
  2030  00F65F  6F                 	db	111	;'o'
  2031  00F660  74                 	db	116	;'t'
  2032  00F661  20                 	db	32
  2033  00F662  53                 	db	83	;'S'
  2034  00F663  65                 	db	101	;'e'
  2035  00F664  74                 	db	116	;'t'
  2036  00F665  20                 	db	32
  2037  00F666  53                 	db	83	;'S'
  2038  00F667  75                 	db	117	;'u'
  2039  00F668  63                 	db	99	;'c'
  2040  00F669  63                 	db	99	;'c'
  2041  00F66A  65                 	db	101	;'e'
  2042  00F66B  73                 	db	115	;'s'
  2043  00F66C  73                 	db	115	;'s'
  2044  00F66D  66                 	db	102	;'f'
  2045  00F66E  75                 	db	117	;'u'
  2046  00F66F  6C                 	db	108	;'l'
  2047  00F670  6C                 	db	108	;'l'
  2048  00F671  79                 	db	121	;'y'
  2049  00F672  00                 	db	0
  2050  00F673                     STR_145:
  2051  00F673  45                 	db	69	;'E'
  2052  00F674  72                 	db	114	;'r'
  2053  00F675  72                 	db	114	;'r'
  2054  00F676  6F                 	db	111	;'o'
  2055  00F677  72                 	db	114	;'r'
  2056  00F678  3A                 	db	58	;':'
  2057  00F679  20                 	db	32
  2058  00F67A  4E                 	db	78	;'N'
  2059  00F67B  6F                 	db	111	;'o'
  2060  00F67C  20                 	db	32
  2061  00F67D  6E                 	db	110	;'n'
  2062  00F67E  75                 	db	117	;'u'
  2063  00F67F  6D                 	db	109	;'m'
  2064  00F680  62                 	db	98	;'b'
  2065  00F681  65                 	db	101	;'e'
  2066  00F682  72                 	db	114	;'r'
  2067  00F683  20                 	db	32
  2068  00F684  65                 	db	101	;'e'
  2069  00F685  6E                 	db	110	;'n'
  2070  00F686  74                 	db	116	;'t'
  2071  00F687  65                 	db	101	;'e'
  2072  00F688  72                 	db	114	;'r'
  2073  00F689  65                 	db	101	;'e'
  2074  00F68A  64                 	db	100	;'d'
  2075  00F68B  0D                 	db	13
  2076  00F68C  0A                 	db	10
  2077  00F68D  00                 	db	0
  2078  00F68E                     STR_70:
  2079  00F68E  69                 	db	105	;'i'
  2080  00F68F  2E                 	db	46
  2081  00F690  65                 	db	101	;'e'
  2082  00F691  2E                 	db	46
  2083  00F692  20                 	db	32
  2084  00F693  4C                 	db	76	;'L'
  2085  00F694  69                 	db	105	;'i'
  2086  00F695  76                 	db	118	;'v'
  2087  00F696  69                 	db	105	;'i'
  2088  00F697  6E                 	db	110	;'n'
  2089  00F698  67                 	db	103	;'g'
  2090  00F699  72                 	db	114	;'r'
  2091  00F69A  6F                 	db	111	;'o'
  2092  00F69B  6F                 	db	111	;'o'
  2093  00F69C  6D                 	db	109	;'m'
  2094  00F69D  20                 	db	32
  2095  00F69E  66                 	db	102	;'f'
  2096  00F69F  61                 	db	97	;'a'
  2097  00F6A0  6E                 	db	110	;'n'
  2098  00F6A1  20                 	db	32
  2099  00F6A2  3D                 	db	61	;'='
  2100  00F6A3  20                 	db	32
  2101  00F6A4  4F                 	db	79	;'O'
  2102  00F6A5  6E                 	db	110	;'n'
  2103  00F6A6  0D                 	db	13
  2104  00F6A7  0A                 	db	10
  2105  00F6A8  00                 	db	0
  2106  00F6A9                     STR_281:
  2107  00F6A9  41                 	db	65	;'A'
  2108  00F6AA  44                 	db	68	;'D'
  2109  00F6AB  43                 	db	67	;'C'
  2110  00F6AC  20                 	db	32
  2111  00F6AD  43                 	db	67	;'C'
  2112  00F6AE  68                 	db	104	;'h'
  2113  00F6AF  61                 	db	97	;'a'
  2114  00F6B0  6E                 	db	110	;'n'
  2115  00F6B1  6E                 	db	110	;'n'
  2116  00F6B2  65                 	db	101	;'e'
  2117  00F6B3  6C                 	db	108	;'l'
  2118  00F6B4  20                 	db	32
  2119  00F6B5  4F                 	db	79	;'O'
  2120  00F6B6  75                 	db	117	;'u'
  2121  00F6B7  74                 	db	116	;'t'
  2122  00F6B8  20                 	db	32
  2123  00F6B9  6F                 	db	111	;'o'
  2124  00F6BA  66                 	db	102	;'f'
  2125  00F6BB  20                 	db	32
  2126  00F6BC  42                 	db	66	;'B'
  2127  00F6BD  6F                 	db	111	;'o'
  2128  00F6BE  75                 	db	117	;'u'
  2129  00F6BF  6E                 	db	110	;'n'
  2130  00F6C0  64                 	db	100	;'d'
  2131  00F6C1  73                 	db	115	;'s'
  2132  00F6C2  00                 	db	0
  2133  00F6C3                     STR_172:
  2134  00F6C3  43                 	db	67	;'C'
  2135  00F6C4  6F                 	db	111	;'o'
  2136  00F6C5  6E                 	db	110	;'n'
  2137  00F6C6  74                 	db	116	;'t'
  2138  00F6C7  72                 	db	114	;'r'
  2139  00F6C8  61                 	db	97	;'a'
  2140  00F6C9  73                 	db	115	;'s'
  2141  00F6CA  74                 	db	116	;'t'
  2142  00F6CB  20                 	db	32
  2143  00F6CC  50                 	db	80	;'P'
  2144  00F6CD  57                 	db	87	;'W'
  2145  00F6CE  4D                 	db	77	;'M'
  2146  00F6CF  20                 	db	32
  2147  00F6D0  48                 	db	72	;'H'
  2148  00F6D1  65                 	db	101	;'e'
  2149  00F6D2  6C                 	db	108	;'l'
  2150  00F6D3  70                 	db	112	;'p'
  2151  00F6D4  20                 	db	32
  2152  00F6D5  4D                 	db	77	;'M'
  2153  00F6D6  65                 	db	101	;'e'
  2154  00F6D7  6E                 	db	110	;'n'
  2155  00F6D8  75                 	db	117	;'u'
  2156  00F6D9  0D                 	db	13
  2157  00F6DA  0A                 	db	10
  2158  00F6DB  0A                 	db	10
  2159  00F6DC  00                 	db	0
  2160  00F6DD                     STR_215:
  2161  00F6DD  0D                 	db	13
  2162  00F6DE  0A                 	db	10
  2163  00F6DF  54                 	db	84	;'T'
  2164  00F6E0  69                 	db	105	;'i'
  2165  00F6E1  6D                 	db	109	;'m'
  2166  00F6E2  65                 	db	101	;'e'
  2167  00F6E3  20                 	db	32
  2168  00F6E4  53                 	db	83	;'S'
  2169  00F6E5  65                 	db	101	;'e'
  2170  00F6E6  74                 	db	116	;'t'
  2171  00F6E7  20                 	db	32
  2172  00F6E8  53                 	db	83	;'S'
  2173  00F6E9  75                 	db	117	;'u'
  2174  00F6EA  63                 	db	99	;'c'
  2175  00F6EB  63                 	db	99	;'c'
  2176  00F6EC  65                 	db	101	;'e'
  2177  00F6ED  73                 	db	115	;'s'
  2178  00F6EE  73                 	db	115	;'s'
  2179  00F6EF  66                 	db	102	;'f'
  2180  00F6F0  75                 	db	117	;'u'
  2181  00F6F1  6C                 	db	108	;'l'
  2182  00F6F2  6C                 	db	108	;'l'
  2183  00F6F3  79                 	db	121	;'y'
  2184  00F6F4  0D                 	db	13
  2185  00F6F5  0A                 	db	10
  2186  00F6F6  00                 	db	0
  2187  00F6F7                     STR_155:
  2188  00F6F7  52                 	db	82	;'R'
  2189  00F6F8  65                 	db	101	;'e'
  2190  00F6F9  64                 	db	100	;'d'
  2191  00F6FA  20                 	db	32
  2192  00F6FB  4C                 	db	76	;'L'
  2193  00F6FC  45                 	db	69	;'E'
  2194  00F6FD  44                 	db	68	;'D'
  2195  00F6FE  20                 	db	32
  2196  00F6FF  50                 	db	80	;'P'
  2197  00F700  57                 	db	87	;'W'
  2198  00F701  4D                 	db	77	;'M'
  2199  00F702  20                 	db	32
  2200  00F703  48                 	db	72	;'H'
  2201  00F704  65                 	db	101	;'e'
  2202  00F705  6C                 	db	108	;'l'
  2203  00F706  70                 	db	112	;'p'
  2204  00F707  20                 	db	32
  2205  00F708  4D                 	db	77	;'M'
  2206  00F709  65                 	db	101	;'e'
  2207  00F70A  6E                 	db	110	;'n'
  2208  00F70B  75                 	db	117	;'u'
  2209  00F70C  0D                 	db	13
  2210  00F70D  0A                 	db	10
  2211  00F70E  0A                 	db	10
  2212  00F70F  00                 	db	0
  2213  00F710                     STR_218:
  2214  00F710  0D                 	db	13
  2215  00F711  0A                 	db	10
  2216  00F712  49                 	db	73	;'I'
  2217  00F713  6E                 	db	110	;'n'
  2218  00F714  76                 	db	118	;'v'
  2219  00F715  61                 	db	97	;'a'
  2220  00F716  6C                 	db	108	;'l'
  2221  00F717  69                 	db	105	;'i'
  2222  00F718  64                 	db	100	;'d'
  2223  00F719  20                 	db	32
  2224  00F71A  54                 	db	84	;'T'
  2225  00F71B  69                 	db	105	;'i'
  2226  00F71C  6D                 	db	109	;'m'
  2227  00F71D  65                 	db	101	;'e'
  2228  00F71E  20                 	db	32
  2229  00F71F  45                 	db	69	;'E'
  2230  00F720  6E                 	db	110	;'n'
  2231  00F721  74                 	db	116	;'t'
  2232  00F722  65                 	db	101	;'e'
  2233  00F723  72                 	db	114	;'r'
  2234  00F724  65                 	db	101	;'e'
  2235  00F725  64                 	db	100	;'d'
  2236  00F726  0D                 	db	13
  2237  00F727  0A                 	db	10
  2238  00F728  00                 	db	0
  2239  00F729                     STR_55:
  2240  00F729  4C                 	db	76	;'L'
  2241  00F72A  69                 	db	105	;'i'
  2242  00F72B  76                 	db	118	;'v'
  2243  00F72C  69                 	db	105	;'i'
  2244  00F72D  6E                 	db	110	;'n'
  2245  00F72E  67                 	db	103	;'g'
  2246  00F72F  72                 	db	114	;'r'
  2247  00F730  6F                 	db	111	;'o'
  2248  00F731  6F                 	db	111	;'o'
  2249  00F732  6D                 	db	109	;'m'
  2250  00F733  20                 	db	32
  2251  00F734  4C                 	db	76	;'L'
  2252  00F735  69                 	db	105	;'i'
  2253  00F736  67                 	db	103	;'g'
  2254  00F737  68                 	db	104	;'h'
  2255  00F738  74                 	db	116	;'t'
  2256  00F739  20                 	db	32
  2257  00F73A  54                 	db	84	;'T'
  2258  00F73B  6F                 	db	111	;'o'
  2259  00F73C  67                 	db	103	;'g'
  2260  00F73D  67                 	db	103	;'g'
  2261  00F73E  6C                 	db	108	;'l'
  2262  00F73F  65                 	db	101	;'e'
  2263  00F740  64                 	db	100	;'d'
  2264  00F741  00                 	db	0
  2265  00F742                     STR_65:
  2266  00F742  4C                 	db	76	;'L'
  2267  00F743  69                 	db	105	;'i'
  2268  00F744  76                 	db	118	;'v'
  2269  00F745  69                 	db	105	;'i'
  2270  00F746  6E                 	db	110	;'n'
  2271  00F747  67                 	db	103	;'g'
  2272  00F748  72                 	db	114	;'r'
  2273  00F749  6F                 	db	111	;'o'
  2274  00F74A  6F                 	db	111	;'o'
  2275  00F74B  6D                 	db	109	;'m'
  2276  00F74C  20                 	db	32
  2277  00F74D  48                 	db	72	;'H'
  2278  00F74E  65                 	db	101	;'e'
  2279  00F74F  6C                 	db	108	;'l'
  2280  00F750  70                 	db	112	;'p'
  2281  00F751  20                 	db	32
  2282  00F752  4D                 	db	77	;'M'
  2283  00F753  65                 	db	101	;'e'
  2284  00F754  6E                 	db	110	;'n'
  2285  00F755  75                 	db	117	;'u'
  2286  00F756  0D                 	db	13
  2287  00F757  0A                 	db	10
  2288  00F758  0A                 	db	10
  2289  00F759  00                 	db	0
  2290  00F75A                     STR_209:
  2291  00F75A  45                 	db	69	;'E'
  2292  00F75B  52                 	db	82	;'R'
  2293  00F75C  52                 	db	82	;'R'
  2294  00F75D  4F                 	db	79	;'O'
  2295  00F75E  52                 	db	82	;'R'
  2296  00F75F  3A                 	db	58	;':'
  2297  00F760  20                 	db	32
  2298  00F761  43                 	db	67	;'C'
  2299  00F762  61                 	db	97	;'a'
  2300  00F763  6E                 	db	110	;'n'
  2301  00F764  27                 	db	39
  2302  00F765  74                 	db	116	;'t'
  2303  00F766  20                 	db	32
  2304  00F767  52                 	db	82	;'R'
  2305  00F768  65                 	db	101	;'e'
  2306  00F769  61                 	db	97	;'a'
  2307  00F76A  64                 	db	100	;'d'
  2308  00F76B  20                 	db	32
  2309  00F76C  52                 	db	82	;'R'
  2310  00F76D  54                 	db	84	;'T'
  2311  00F76E  43                 	db	67	;'C'
  2312  00F76F  0D                 	db	13
  2313  00F770  0A                 	db	10
  2314  00F771  00                 	db	0
  2315  00F772                     STR_104:
  2316  00F772  69                 	db	105	;'i'
  2317  00F773  2E                 	db	46
  2318  00F774  65                 	db	101	;'e'
  2319  00F775  2E                 	db	46
  2320  00F776  20                 	db	32
  2321  00F777  42                 	db	66	;'B'
  2322  00F778  65                 	db	101	;'e'
  2323  00F779  64                 	db	100	;'d'
  2324  00F77A  72                 	db	114	;'r'
  2325  00F77B  6F                 	db	111	;'o'
  2326  00F77C  6F                 	db	111	;'o'
  2327  00F77D  6D                 	db	109	;'m'
  2328  00F77E  20                 	db	32
  2329  00F77F  66                 	db	102	;'f'
  2330  00F780  61                 	db	97	;'a'
  2331  00F781  6E                 	db	110	;'n'
  2332  00F782  20                 	db	32
  2333  00F783  3D                 	db	61	;'='
  2334  00F784  20                 	db	32
  2335  00F785  4F                 	db	79	;'O'
  2336  00F786  6E                 	db	110	;'n'
  2337  00F787  0D                 	db	13
  2338  00F788  0A                 	db	10
  2339  00F789  00                 	db	0
  2340  00F78A                     STR_244:
  2341  00F78A  4A                 	db	74	;'J'
  2342  00F78B  6F                 	db	111	;'o'
  2343  00F78C  65                 	db	101	;'e'
  2344  00F78D  73                 	db	115	;'s'
  2345  00F78E  20                 	db	32
  2346  00F78F  52                 	db	82	;'R'
  2347  00F790  6F                 	db	111	;'o'
  2348  00F791  6F                 	db	111	;'o'
  2349  00F792  6D                 	db	109	;'m'
  2350  00F793  20                 	db	32
  2351  00F794  48                 	db	72	;'H'
  2352  00F795  65                 	db	101	;'e'
  2353  00F796  6C                 	db	108	;'l'
  2354  00F797  70                 	db	112	;'p'
  2355  00F798  20                 	db	32
  2356  00F799  4D                 	db	77	;'M'
  2357  00F79A  65                 	db	101	;'e'
  2358  00F79B  6E                 	db	110	;'n'
  2359  00F79C  75                 	db	117	;'u'
  2360  00F79D  0D                 	db	13
  2361  00F79E  0A                 	db	10
  2362  00F79F  0A                 	db	10
  2363  00F7A0  00                 	db	0
  2364  00F7A1                     STR_208:
  2365  00F7A1  25                 	db	37
  2366  00F7A2  30                 	db	48	;'0'
  2367  00F7A3  32                 	db	50	;'2'
  2368  00F7A4  64                 	db	100	;'d'
  2369  00F7A5  2F                 	db	47
  2370  00F7A6  25                 	db	37
  2371  00F7A7  30                 	db	48	;'0'
  2372  00F7A8  32                 	db	50	;'2'
  2373  00F7A9  64                 	db	100	;'d'
  2374  00F7AA  20                 	db	32
  2375  00F7AB  25                 	db	37
  2376  00F7AC  30                 	db	48	;'0'
  2377  00F7AD  32                 	db	50	;'2'
  2378  00F7AE  64                 	db	100	;'d'
  2379  00F7AF  3A                 	db	58	;':'
  2380  00F7B0  25                 	db	37
  2381  00F7B1  30                 	db	48	;'0'
  2382  00F7B2  32                 	db	50	;'2'
  2383  00F7B3  64                 	db	100	;'d'
  2384  00F7B4  20                 	db	32
  2385  00F7B5  41                 	db	65	;'A'
  2386  00F7B6  4D                 	db	77	;'M'
  2387  00F7B7  00                 	db	0
  2388  00F7B8                     STR_207:
  2389  00F7B8  25                 	db	37
  2390  00F7B9  30                 	db	48	;'0'
  2391  00F7BA  32                 	db	50	;'2'
  2392  00F7BB  64                 	db	100	;'d'
  2393  00F7BC  2F                 	db	47
  2394  00F7BD  25                 	db	37
  2395  00F7BE  30                 	db	48	;'0'
  2396  00F7BF  32                 	db	50	;'2'
  2397  00F7C0  64                 	db	100	;'d'
  2398  00F7C1  20                 	db	32
  2399  00F7C2  25                 	db	37
  2400  00F7C3  30                 	db	48	;'0'
  2401  00F7C4  32                 	db	50	;'2'
  2402  00F7C5  64                 	db	100	;'d'
  2403  00F7C6  3A                 	db	58	;':'
  2404  00F7C7  25                 	db	37
  2405  00F7C8  30                 	db	48	;'0'
  2406  00F7C9  32                 	db	50	;'2'
  2407  00F7CA  64                 	db	100	;'d'
  2408  00F7CB  20                 	db	32
  2409  00F7CC  50                 	db	80	;'P'
  2410  00F7CD  4D                 	db	77	;'M'
  2411  00F7CE  00                 	db	0
  2412  00F7CF                     STR_262:
  2413  00F7CF  69                 	db	105	;'i'
  2414  00F7D0  2E                 	db	46
  2415  00F7D1  65                 	db	101	;'e'
  2416  00F7D2  2E                 	db	46
  2417  00F7D3  20                 	db	32
  2418  00F7D4  20                 	db	32
  2419  00F7D5  4C                 	db	76	;'L'
  2420  00F7D6  69                 	db	105	;'i'
  2421  00F7D7  76                 	db	118	;'v'
  2422  00F7D8  69                 	db	105	;'i'
  2423  00F7D9  6E                 	db	110	;'n'
  2424  00F7DA  67                 	db	103	;'g'
  2425  00F7DB  72                 	db	114	;'r'
  2426  00F7DC  6F                 	db	111	;'o'
  2427  00F7DD  6F                 	db	111	;'o'
  2428  00F7DE  6D                 	db	109	;'m'
  2429  00F7DF  3F                 	db	63	;'?'
  2430  00F7E0  0D                 	db	13
  2431  00F7E1  0A                 	db	10
  2432  00F7E2  0D                 	db	13
  2433  00F7E3  0A                 	db	10
  2434  00F7E4  00                 	db	0
  2435  00F7E5                     STR_151:
  2436  00F7E5  44                 	db	68	;'D'
  2437  00F7E6  75                 	db	117	;'u'
  2438  00F7E7  74                 	db	116	;'t'
  2439  00F7E8  79                 	db	121	;'y'
  2440  00F7E9  63                 	db	99	;'c'
  2441  00F7EA  79                 	db	121	;'y'
  2442  00F7EB  63                 	db	99	;'c'
  2443  00F7EC  6C                 	db	108	;'l'
  2444  00F7ED  65                 	db	101	;'e'
  2445  00F7EE  20                 	db	32
  2446  00F7EF  73                 	db	115	;'s'
  2447  00F7F0  65                 	db	101	;'e'
  2448  00F7F1  74                 	db	116	;'t'
  2449  00F7F2  20                 	db	32
  2450  00F7F3  74                 	db	116	;'t'
  2451  00F7F4  6F                 	db	111	;'o'
  2452  00F7F5  20                 	db	32
  2453  00F7F6  25                 	db	37
  2454  00F7F7  64                 	db	100	;'d'
  2455  00F7F8  0D                 	db	13
  2456  00F7F9  0A                 	db	10
  2457  00F7FA  00                 	db	0
  2458  00F7FB                     STR_82:
  2459  00F7FB  42                 	db	66	;'B'
  2460  00F7FC  65                 	db	101	;'e'
  2461  00F7FD  64                 	db	100	;'d'
  2462  00F7FE  72                 	db	114	;'r'
  2463  00F7FF  6F                 	db	111	;'o'
  2464  00F800  6F                 	db	111	;'o'
  2465  00F801  6D                 	db	109	;'m'
  2466  00F802  20                 	db	32
  2467  00F803  4C                 	db	76	;'L'
  2468  00F804  69                 	db	105	;'i'
  2469  00F805  67                 	db	103	;'g'
  2470  00F806  68                 	db	104	;'h'
  2471  00F807  74                 	db	116	;'t'
  2472  00F808  20                 	db	32
  2473  00F809  54                 	db	84	;'T'
  2474  00F80A  6F                 	db	111	;'o'
  2475  00F80B  67                 	db	103	;'g'
  2476  00F80C  67                 	db	103	;'g'
  2477  00F80D  6C                 	db	108	;'l'
  2478  00F80E  65                 	db	101	;'e'
  2479  00F80F  64                 	db	100	;'d'
  2480  00F810  00                 	db	0
  2481  00F811                     STR_98:
  2482  00F811  42                 	db	66	;'B'
  2483  00F812  65                 	db	101	;'e'
  2484  00F813  64                 	db	100	;'d'
  2485  00F814  72                 	db	114	;'r'
  2486  00F815  6F                 	db	111	;'o'
  2487  00F816  6F                 	db	111	;'o'
  2488  00F817  6D                 	db	109	;'m'
  2489  00F818  20                 	db	32
  2490  00F819  48                 	db	72	;'H'
  2491  00F81A  65                 	db	101	;'e'
  2492  00F81B  6C                 	db	108	;'l'
  2493  00F81C  70                 	db	112	;'p'
  2494  00F81D  20                 	db	32
  2495  00F81E  4D                 	db	77	;'M'
  2496  00F81F  65                 	db	101	;'e'
  2497  00F820  6E                 	db	110	;'n'
  2498  00F821  75                 	db	117	;'u'
  2499  00F822  0D                 	db	13
  2500  00F823  0A                 	db	10
  2501  00F824  0A                 	db	10
  2502  00F825  00                 	db	0
  2503  00F826                     STR_228:
  2504  00F826  69                 	db	105	;'i'
  2505  00F827  2E                 	db	46
  2506  00F828  65                 	db	101	;'e'
  2507  00F829  2E                 	db	46
  2508  00F82A  20                 	db	32
  2509  00F82B  52                 	db	82	;'R'
  2510  00F82C  54                 	db	84	;'T'
  2511  00F82D  43                 	db	67	;'C'
  2512  00F82E  20                 	db	32
  2513  00F82F  53                 	db	83	;'S'
  2514  00F830  65                 	db	101	;'e'
  2515  00F831  74                 	db	116	;'t'
  2516  00F832  20                 	db	32
  2517  00F833  54                 	db	84	;'T'
  2518  00F834  69                 	db	105	;'i'
  2519  00F835  6D                 	db	109	;'m'
  2520  00F836  65                 	db	101	;'e'
  2521  00F837  3F                 	db	63	;'?'
  2522  00F838  0D                 	db	13
  2523  00F839  0A                 	db	10
  2524  00F83A  00                 	db	0
  2525  00F83B                     STR_189:
  2526  00F83B  41                 	db	65	;'A'
  2527  00F83C  44                 	db	68	;'D'
  2528  00F83D  43                 	db	67	;'C'
  2529  00F83E  20                 	db	32
  2530  00F83F  63                 	db	99	;'c'
  2531  00F840  68                 	db	104	;'h'
  2532  00F841  61                 	db	97	;'a'
  2533  00F842  6E                 	db	110	;'n'
  2534  00F843  6E                 	db	110	;'n'
  2535  00F844  65                 	db	101	;'e'
  2536  00F845  6C                 	db	108	;'l'
  2537  00F846  20                 	db	32
  2538  00F847  25                 	db	37
  2539  00F848  64                 	db	100	;'d'
  2540  00F849  20                 	db	32
  2541  00F84A  3D                 	db	61	;'='
  2542  00F84B  20                 	db	32
  2543  00F84C  25                 	db	37
  2544  00F84D  64                 	db	100	;'d'
  2545  00F84E  00                 	db	0
  2546  00F84F                     STR_240:
  2547  00F84F  4A                 	db	74	;'J'
  2548  00F850  6F                 	db	111	;'o'
  2549  00F851  65                 	db	101	;'e'
  2550  00F852  73                 	db	115	;'s'
  2551  00F853  20                 	db	32
  2552  00F854  72                 	db	114	;'r'
  2553  00F855  6F                 	db	111	;'o'
  2554  00F856  6F                 	db	111	;'o'
  2555  00F857  6D                 	db	109	;'m'
  2556  00F858  20                 	db	32
  2557  00F859  6C                 	db	108	;'l'
  2558  00F85A  69                 	db	105	;'i'
  2559  00F85B  67                 	db	103	;'g'
  2560  00F85C  68                 	db	104	;'h'
  2561  00F85D  74                 	db	116	;'t'
  2562  00F85E  20                 	db	32
  2563  00F85F  4F                 	db	79	;'O'
  2564  00F860  66                 	db	102	;'f'
  2565  00F861  66                 	db	102	;'f'
  2566  00F862  00                 	db	0
  2567  00F863                     STR_54:
  2568  00F863  6C                 	db	108	;'l'
  2569  00F864  69                 	db	105	;'i'
  2570  00F865  76                 	db	118	;'v'
  2571  00F866  69                 	db	105	;'i'
  2572  00F867  6E                 	db	110	;'n'
  2573  00F868  67                 	db	103	;'g'
  2574  00F869  72                 	db	114	;'r'
  2575  00F86A  6F                 	db	111	;'o'
  2576  00F86B  6F                 	db	111	;'o'
  2577  00F86C  6D                 	db	109	;'m'
  2578  00F86D  6C                 	db	108	;'l'
  2579  00F86E  69                 	db	105	;'i'
  2580  00F86F  67                 	db	103	;'g'
  2581  00F870  68                 	db	104	;'h'
  2582  00F871  74                 	db	116	;'t'
  2583  00F872  3D                 	db	61	;'='
  2584  00F873  6F                 	db	111	;'o'
  2585  00F874  66                 	db	102	;'f'
  2586  00F875  66                 	db	102	;'f'
  2587  00F876  00                 	db	0
  2588  00F877                     STR_237:
  2589  00F877  4A                 	db	74	;'J'
  2590  00F878  6F                 	db	111	;'o'
  2591  00F879  65                 	db	101	;'e'
  2592  00F87A  27                 	db	39
  2593  00F87B  73                 	db	115	;'s'
  2594  00F87C  20                 	db	32
  2595  00F87D  72                 	db	114	;'r'
  2596  00F87E  6F                 	db	111	;'o'
  2597  00F87F  6F                 	db	111	;'o'
  2598  00F880  6D                 	db	109	;'m'
  2599  00F881  20                 	db	32
  2600  00F882  6C                 	db	108	;'l'
  2601  00F883  69                 	db	105	;'i'
  2602  00F884  67                 	db	103	;'g'
  2603  00F885  68                 	db	104	;'h'
  2604  00F886  74                 	db	116	;'t'
  2605  00F887  20                 	db	32
  2606  00F888  4F                 	db	79	;'O'
  2607  00F889  6E                 	db	110	;'n'
  2608  00F88A  00                 	db	0
  2609  00F88B                     STR_63:
  2610  00F88B  4C                 	db	76	;'L'
  2611  00F88C  69                 	db	105	;'i'
  2612  00F88D  76                 	db	118	;'v'
  2613  00F88E  69                 	db	105	;'i'
  2614  00F88F  6E                 	db	110	;'n'
  2615  00F890  67                 	db	103	;'g'
  2616  00F891  72                 	db	114	;'r'
  2617  00F892  6F                 	db	111	;'o'
  2618  00F893  6F                 	db	111	;'o'
  2619  00F894  6D                 	db	109	;'m'
  2620  00F895  20                 	db	32
  2621  00F896  54                 	db	84	;'T'
  2622  00F897  61                 	db	97	;'a'
  2623  00F898  73                 	db	115	;'s'
  2624  00F899  6B                 	db	107	;'k'
  2625  00F89A  3F                 	db	63	;'?'
  2626  00F89B  3F                 	db	63	;'?'
  2627  00F89C  3F                 	db	63	;'?'
  2628  00F89D  00                 	db	0
  2629  00F89E                     STR_242:
  2630  00F89E  4A                 	db	74	;'J'
  2631  00F89F  6F                 	db	111	;'o'
  2632  00F8A0  65                 	db	101	;'e'
  2633  00F8A1  27                 	db	39
  2634  00F8A2  73                 	db	115	;'s'
  2635  00F8A3  20                 	db	32
  2636  00F8A4  72                 	db	114	;'r'
  2637  00F8A5  6F                 	db	111	;'o'
  2638  00F8A6  6F                 	db	111	;'o'
  2639  00F8A7  6D                 	db	109	;'m'
  2640  00F8A8  20                 	db	32
  2641  00F8A9  77                 	db	119	;'w'
  2642  00F8AA  68                 	db	104	;'h'
  2643  00F8AB  61                 	db	97	;'a'
  2644  00F8AC  74                 	db	116	;'t'
  2645  00F8AD  3F                 	db	63	;'?'
  2646  00F8AE  3F                 	db	63	;'?'
  2647  00F8AF  3F                 	db	63	;'?'
  2648  00F8B0  00                 	db	0
  2649  00F8B1                     STR_61:
  2650  00F8B1  4C                 	db	76	;'L'
  2651  00F8B2  69                 	db	105	;'i'
  2652  00F8B3  76                 	db	118	;'v'
  2653  00F8B4  69                 	db	105	;'i'
  2654  00F8B5  6E                 	db	110	;'n'
  2655  00F8B6  67                 	db	103	;'g'
  2656  00F8B7  72                 	db	114	;'r'
  2657  00F8B8  6F                 	db	111	;'o'
  2658  00F8B9  6F                 	db	111	;'o'
  2659  00F8BA  6D                 	db	109	;'m'
  2660  00F8BB  20                 	db	32
  2661  00F8BC  46                 	db	70	;'F'
  2662  00F8BD  61                 	db	97	;'a'
  2663  00F8BE  6E                 	db	110	;'n'
  2664  00F8BF  20                 	db	32
  2665  00F8C0  4F                 	db	79	;'O'
  2666  00F8C1  66                 	db	102	;'f'
  2667  00F8C2  66                 	db	102	;'f'
  2668  00F8C3  00                 	db	0
  2669  00F8C4                     STR_94:
  2670  00F8C4  42                 	db	66	;'B'
  2671  00F8C5  65                 	db	101	;'e'
  2672  00F8C6  64                 	db	100	;'d'
  2673  00F8C7  72                 	db	114	;'r'
  2674  00F8C8  6F                 	db	111	;'o'
  2675  00F8C9  6F                 	db	111	;'o'
  2676  00F8CA  6D                 	db	109	;'m'
  2677  00F8CB  20                 	db	32
  2678  00F8CC  53                 	db	83	;'S'
  2679  00F8CD  68                 	db	104	;'h'
  2680  00F8CE  61                 	db	97	;'a'
  2681  00F8CF  6B                 	db	107	;'k'
  2682  00F8D0  65                 	db	101	;'e'
  2683  00F8D1  72                 	db	114	;'r'
  2684  00F8D2  20                 	db	32
  2685  00F8D3  4F                 	db	79	;'O'
  2686  00F8D4  66                 	db	102	;'f'
  2687  00F8D5  66                 	db	102	;'f'
  2688  00F8D6  00                 	db	0
  2689  00F8D7                     STR_53:
  2690  00F8D7  6C                 	db	108	;'l'
  2691  00F8D8  69                 	db	105	;'i'
  2692  00F8D9  76                 	db	118	;'v'
  2693  00F8DA  69                 	db	105	;'i'
  2694  00F8DB  6E                 	db	110	;'n'
  2695  00F8DC  67                 	db	103	;'g'
  2696  00F8DD  72                 	db	114	;'r'
  2697  00F8DE  6F                 	db	111	;'o'
  2698  00F8DF  6F                 	db	111	;'o'
  2699  00F8E0  6D                 	db	109	;'m'
  2700  00F8E1  6C                 	db	108	;'l'
  2701  00F8E2  69                 	db	105	;'i'
  2702  00F8E3  67                 	db	103	;'g'
  2703  00F8E4  68                 	db	104	;'h'
  2704  00F8E5  74                 	db	116	;'t'
  2705  00F8E6  3D                 	db	61	;'='
  2706  00F8E7  6F                 	db	111	;'o'
  2707  00F8E8  6E                 	db	110	;'n'
  2708  00F8E9  00                 	db	0
  2709  00F8EA                     STR_132:
  2710  00F8EA  63                 	db	99	;'c'
  2711  00F8EB  6F                 	db	111	;'o'
  2712  00F8EC  6C                 	db	108	;'l'
  2713  00F8ED  6F                 	db	111	;'o'
  2714  00F8EE  72                 	db	114	;'r'
  2715  00F8EF  65                 	db	101	;'e'
  2716  00F8F0  64                 	db	100	;'d'
  2717  00F8F1  20                 	db	32
  2718  00F8F2  6C                 	db	108	;'l'
  2719  00F8F3  69                 	db	105	;'i'
  2720  00F8F4  67                 	db	103	;'g'
  2721  00F8F5  68                 	db	104	;'h'
  2722  00F8F6  74                 	db	116	;'t'
  2723  00F8F7  73                 	db	115	;'s'
  2724  00F8F8  0D                 	db	13
  2725  00F8F9  0A                 	db	10
  2726  00F8FA  0A                 	db	10
  2727  00F8FB  00                 	db	0
  2728  00F8FC                     STR_127:
  2729  00F8FC  43                 	db	67	;'C'
  2730  00F8FD  68                 	db	104	;'h'
  2731  00F8FE  72                 	db	114	;'r'
  2732  00F8FF  69                 	db	105	;'i'
  2733  00F900  73                 	db	115	;'s'
  2734  00F901  74                 	db	116	;'t'
  2735  00F902  6D                 	db	109	;'m'
  2736  00F903  61                 	db	97	;'a'
  2737  00F904  73                 	db	115	;'s'
  2738  00F905  20                 	db	32
  2739  00F906  57                 	db	87	;'W'
  2740  00F907  68                 	db	104	;'h'
  2741  00F908  61                 	db	97	;'a'
  2742  00F909  74                 	db	116	;'t'
  2743  00F90A  3F                 	db	63	;'?'
  2744  00F90B  3F                 	db	63	;'?'
  2745  00F90C  3F                 	db	63	;'?'
  2746  00F90D  00                 	db	0
  2747  00F90E                     STR_60:
  2748  00F90E  6C                 	db	108	;'l'
  2749  00F90F  69                 	db	105	;'i'
  2750  00F910  76                 	db	118	;'v'
  2751  00F911  69                 	db	105	;'i'
  2752  00F912  6E                 	db	110	;'n'
  2753  00F913  67                 	db	103	;'g'
  2754  00F914  72                 	db	114	;'r'
  2755  00F915  6F                 	db	111	;'o'
  2756  00F916  6F                 	db	111	;'o'
  2757  00F917  6D                 	db	109	;'m'
  2758  00F918  66                 	db	102	;'f'
  2759  00F919  61                 	db	97	;'a'
  2760  00F91A  6E                 	db	110	;'n'
  2761  00F91B  3D                 	db	61	;'='
  2762  00F91C  6F                 	db	111	;'o'
  2763  00F91D  66                 	db	102	;'f'
  2764  00F91E  66                 	db	102	;'f'
  2765  00F91F  00                 	db	0
  2766  00F920                     STR_93:
  2767  00F920  62                 	db	98	;'b'
  2768  00F921  65                 	db	101	;'e'
  2769  00F922  64                 	db	100	;'d'
  2770  00F923  72                 	db	114	;'r'
  2771  00F924  6F                 	db	111	;'o'
  2772  00F925  6F                 	db	111	;'o'
  2773  00F926  6D                 	db	109	;'m'
  2774  00F927  73                 	db	115	;'s'
  2775  00F928  68                 	db	104	;'h'
  2776  00F929  61                 	db	97	;'a'
  2777  00F92A  6B                 	db	107	;'k'
  2778  00F92B  65                 	db	101	;'e'
  2779  00F92C  72                 	db	114	;'r'
  2780  00F92D  3D                 	db	61	;'='
  2781  00F92E  6F                 	db	111	;'o'
  2782  00F92F  66                 	db	102	;'f'
  2783  00F930  66                 	db	102	;'f'
  2784  00F931  00                 	db	0
  2785  00F932                     STR_239:
  2786  00F932  6A                 	db	106	;'j'
  2787  00F933  6F                 	db	111	;'o'
  2788  00F934  65                 	db	101	;'e'
  2789  00F935  73                 	db	115	;'s'
  2790  00F936  72                 	db	114	;'r'
  2791  00F937  6F                 	db	111	;'o'
  2792  00F938  6F                 	db	111	;'o'
  2793  00F939  6D                 	db	109	;'m'
  2794  00F93A  6C                 	db	108	;'l'
  2795  00F93B  69                 	db	105	;'i'
  2796  00F93C  67                 	db	103	;'g'
  2797  00F93D  68                 	db	104	;'h'
  2798  00F93E  74                 	db	116	;'t'
  2799  00F93F  3D                 	db	61	;'='
  2800  00F940  6F                 	db	111	;'o'
  2801  00F941  66                 	db	102	;'f'
  2802  00F942  66                 	db	102	;'f'
  2803  00F943  00                 	db	0
  2804  00F944                     STR_58:
  2805  00F944  4C                 	db	76	;'L'
  2806  00F945  69                 	db	105	;'i'
  2807  00F946  76                 	db	118	;'v'
  2808  00F947  69                 	db	105	;'i'
  2809  00F948  6E                 	db	110	;'n'
  2810  00F949  67                 	db	103	;'g'
  2811  00F94A  72                 	db	114	;'r'
  2812  00F94B  6F                 	db	111	;'o'
  2813  00F94C  6F                 	db	111	;'o'
  2814  00F94D  6D                 	db	109	;'m'
  2815  00F94E  20                 	db	32
  2816  00F94F  46                 	db	70	;'F'
  2817  00F950  61                 	db	97	;'a'
  2818  00F951  6E                 	db	110	;'n'
  2819  00F952  20                 	db	32
  2820  00F953  4F                 	db	79	;'O'
  2821  00F954  6E                 	db	110	;'n'
  2822  00F955  00                 	db	0
  2823  00F956                     STR_91:
  2824  00F956  42                 	db	66	;'B'
  2825  00F957  65                 	db	101	;'e'
  2826  00F958  64                 	db	100	;'d'
  2827  00F959  72                 	db	114	;'r'
  2828  00F95A  6F                 	db	111	;'o'
  2829  00F95B  6F                 	db	111	;'o'
  2830  00F95C  6D                 	db	109	;'m'
  2831  00F95D  20                 	db	32
  2832  00F95E  53                 	db	83	;'S'
  2833  00F95F  68                 	db	104	;'h'
  2834  00F960  61                 	db	97	;'a'
  2835  00F961  6B                 	db	107	;'k'
  2836  00F962  65                 	db	101	;'e'
  2837  00F963  72                 	db	114	;'r'
  2838  00F964  20                 	db	32
  2839  00F965  4F                 	db	79	;'O'
  2840  00F966  6E                 	db	110	;'n'
  2841  00F967  00                 	db	0
  2842  00F968                     STR_285:
  2843  00F968  30                 	db	48	;'0'
  2844  00F969  31                 	db	49	;'1'
  2845  00F96A  32                 	db	50	;'2'
  2846  00F96B  33                 	db	51	;'3'
  2847  00F96C  34                 	db	52	;'4'
  2848  00F96D  35                 	db	53	;'5'
  2849  00F96E  36                 	db	54	;'6'
  2850  00F96F  37                 	db	55	;'7'
  2851  00F970  38                 	db	56	;'8'
  2852  00F971  39                 	db	57	;'9'
  2853  00F972  41                 	db	65	;'A'
  2854  00F973  42                 	db	66	;'B'
  2855  00F974  43                 	db	67	;'C'
  2856  00F975  44                 	db	68	;'D'
  2857  00F976  45                 	db	69	;'E'
  2858  00F977  46                 	db	70	;'F'
  2859  00F978  00                 	db	0
  2860  00F979                     STR_286:
  2861  00F979  30                 	db	48	;'0'
  2862  00F97A  31                 	db	49	;'1'
  2863  00F97B  32                 	db	50	;'2'
  2864  00F97C  33                 	db	51	;'3'
  2865  00F97D  34                 	db	52	;'4'
  2866  00F97E  35                 	db	53	;'5'
  2867  00F97F  36                 	db	54	;'6'
  2868  00F980  37                 	db	55	;'7'
  2869  00F981  38                 	db	56	;'8'
  2870  00F982  39                 	db	57	;'9'
  2871  00F983  61                 	db	97	;'a'
  2872  00F984  62                 	db	98	;'b'
  2873  00F985  63                 	db	99	;'c'
  2874  00F986  64                 	db	100	;'d'
  2875  00F987  65                 	db	101	;'e'
  2876  00F988  66                 	db	102	;'f'
  2877  00F989  00                 	db	0
  2878  00F98A                     STR_191:
  2879  00F98A  41                 	db	65	;'A'
  2880  00F98B  44                 	db	68	;'D'
  2881  00F98C  43                 	db	67	;'C'
  2882  00F98D  20                 	db	32
  2883  00F98E  48                 	db	72	;'H'
  2884  00F98F  65                 	db	101	;'e'
  2885  00F990  6C                 	db	108	;'l'
  2886  00F991  70                 	db	112	;'p'
  2887  00F992  20                 	db	32
  2888  00F993  4D                 	db	77	;'M'
  2889  00F994  65                 	db	101	;'e'
  2890  00F995  6E                 	db	110	;'n'
  2891  00F996  75                 	db	117	;'u'
  2892  00F997  0D                 	db	13
  2893  00F998  0A                 	db	10
  2894  00F999  0A                 	db	10
  2895  00F99A  00                 	db	0
  2896  00F99B                     STR_41:
  2897  00F99B  4C                 	db	76	;'L'
  2898  00F99C  45                 	db	69	;'E'
  2899  00F99D  44                 	db	68	;'D'
  2900  00F99E  20                 	db	32
  2901  00F99F  48                 	db	72	;'H'
  2902  00F9A0  65                 	db	101	;'e'
  2903  00F9A1  6C                 	db	108	;'l'
  2904  00F9A2  70                 	db	112	;'p'
  2905  00F9A3  20                 	db	32
  2906  00F9A4  4D                 	db	77	;'M'
  2907  00F9A5  65                 	db	101	;'e'
  2908  00F9A6  6E                 	db	110	;'n'
  2909  00F9A7  75                 	db	117	;'u'
  2910  00F9A8  0D                 	db	13
  2911  00F9A9  0A                 	db	10
  2912  00F9AA  0A                 	db	10
  2913  00F9AB  00                 	db	0
  2914  00F9AC                     STR_188:
  2915  00F9AC  43                 	db	67	;'C'
  2916  00F9AD  68                 	db	104	;'h'
  2917  00F9AE  6E                 	db	110	;'n'
  2918  00F9AF  6C                 	db	108	;'l'
  2919  00F9B0  20                 	db	32
  2920  00F9B1  73                 	db	115	;'s'
  2921  00F9B2  65                 	db	101	;'e'
  2922  00F9B3  74                 	db	116	;'t'
  2923  00F9B4  20                 	db	32
  2924  00F9B5  74                 	db	116	;'t'
  2925  00F9B6  6F                 	db	111	;'o'
  2926  00F9B7  20                 	db	32
  2927  00F9B8  25                 	db	37
  2928  00F9B9  64                 	db	100	;'d'
  2929  00F9BA  0D                 	db	13
  2930  00F9BB  0A                 	db	10
  2931  00F9BC  00                 	db	0
  2932  00F9BD                     STR_257:
  2933  00F9BD  43                 	db	67	;'C'
  2934  00F9BE  68                 	db	104	;'h'
  2935  00F9BF  72                 	db	114	;'r'
  2936  00F9C0  69                 	db	105	;'i'
  2937  00F9C1  73                 	db	115	;'s'
  2938  00F9C2  74                 	db	116	;'t'
  2939  00F9C3  6D                 	db	109	;'m'
  2940  00F9C4  61                 	db	97	;'a'
  2941  00F9C5  73                 	db	115	;'s'
  2942  00F9C6  20                 	db	32
  2943  00F9C7  54                 	db	84	;'T'
  2944  00F9C8  72                 	db	114	;'r'
  2945  00F9C9  65                 	db	101	;'e'
  2946  00F9CA  65                 	db	101	;'e'
  2947  00F9CB  0D                 	db	13
  2948  00F9CC  0A                 	db	10
  2949  00F9CD  00                 	db	0
  2950  00F9CE                     STR_46:
  2951  00F9CE  69                 	db	105	;'i'
  2952  00F9CF  2E                 	db	46
  2953  00F9D0  65                 	db	101	;'e'
  2954  00F9D1  2E                 	db	46
  2955  00F9D2  20                 	db	32
  2956  00F9D3  4C                 	db	76	;'L'
  2957  00F9D4  45                 	db	69	;'E'
  2958  00F9D5  44                 	db	68	;'D'
  2959  00F9D6  31                 	db	49	;'1'
  2960  00F9D7  20                 	db	32
  2961  00F9D8  3D                 	db	61	;'='
  2962  00F9D9  20                 	db	32
  2963  00F9DA  4F                 	db	79	;'O'
  2964  00F9DB  6E                 	db	110	;'n'
  2965  00F9DC  0D                 	db	13
  2966  00F9DD  0A                 	db	10
  2967  00F9DE  00                 	db	0
  2968  00F9DF                     STR_206:
  2969  00F9DF  52                 	db	82	;'R'
  2970  00F9E0  54                 	db	84	;'T'
  2971  00F9E1  43                 	db	67	;'C'
  2972  00F9E2  20                 	db	32
  2973  00F9E3  54                 	db	84	;'T'
  2974  00F9E4  69                 	db	105	;'i'
  2975  00F9E5  6D                 	db	109	;'m'
  2976  00F9E6  65                 	db	101	;'e'
  2977  00F9E7  20                 	db	32
  2978  00F9E8  69                 	db	105	;'i'
  2979  00F9E9  73                 	db	115	;'s'
  2980  00F9EA  3A                 	db	58	;':'
  2981  00F9EB  20                 	db	32
  2982  00F9EC  20                 	db	32
  2983  00F9ED  20                 	db	32
  2984  00F9EE  20                 	db	32
  2985  00F9EF  00                 	db	0
  2986  00F9F0                     STR_81:
  2987  00F9F0  62                 	db	98	;'b'
  2988  00F9F1  65                 	db	101	;'e'
  2989  00F9F2  64                 	db	100	;'d'
  2990  00F9F3  72                 	db	114	;'r'
  2991  00F9F4  6F                 	db	111	;'o'
  2992  00F9F5  6F                 	db	111	;'o'
  2993  00F9F6  6D                 	db	109	;'m'
  2994  00F9F7  6C                 	db	108	;'l'
  2995  00F9F8  69                 	db	105	;'i'
  2996  00F9F9  67                 	db	103	;'g'
  2997  00F9FA  68                 	db	104	;'h'
  2998  00F9FB  74                 	db	116	;'t'
  2999  00F9FC  3D                 	db	61	;'='
  3000  00F9FD  6F                 	db	111	;'o'
  3001  00F9FE  66                 	db	102	;'f'
  3002  00F9FF  66                 	db	102	;'f'
  3003  00FA00  00                 	db	0
  3004  00FA01                     STR_210:
  3005  00FA01  52                 	db	82	;'R'
  3006  00FA02  54                 	db	84	;'T'
  3007  00FA03  43                 	db	67	;'C'
  3008  00FA04  20                 	db	32
  3009  00FA05  69                 	db	105	;'i'
  3010  00FA06  73                 	db	115	;'s'
  3011  00FA07  6E                 	db	110	;'n'
  3012  00FA08  74                 	db	116	;'t'
  3013  00FA09  20                 	db	32
  3014  00FA0A  77                 	db	119	;'w'
  3015  00FA0B  6F                 	db	111	;'o'
  3016  00FA0C  72                 	db	114	;'r'
  3017  00FA0D  6B                 	db	107	;'k'
  3018  00FA0E  69                 	db	105	;'i'
  3019  00FA0F  6E                 	db	110	;'n'
  3020  00FA10  67                 	db	103	;'g'
  3021  00FA11  00                 	db	0
  3022  00FA12                     STR_57:
  3023  00FA12  6C                 	db	108	;'l'
  3024  00FA13  69                 	db	105	;'i'
  3025  00FA14  76                 	db	118	;'v'
  3026  00FA15  69                 	db	105	;'i'
  3027  00FA16  6E                 	db	110	;'n'
  3028  00FA17  67                 	db	103	;'g'
  3029  00FA18  72                 	db	114	;'r'
  3030  00FA19  6F                 	db	111	;'o'
  3031  00FA1A  6F                 	db	111	;'o'
  3032  00FA1B  6D                 	db	109	;'m'
  3033  00FA1C  66                 	db	102	;'f'
  3034  00FA1D  61                 	db	97	;'a'
  3035  00FA1E  6E                 	db	110	;'n'
  3036  00FA1F  3D                 	db	61	;'='
  3037  00FA20  6F                 	db	111	;'o'
  3038  00FA21  6E                 	db	110	;'n'
  3039  00FA22  00                 	db	0
  3040  00FA23                     STR_90:
  3041  00FA23  62                 	db	98	;'b'
  3042  00FA24  65                 	db	101	;'e'
  3043  00FA25  64                 	db	100	;'d'
  3044  00FA26  72                 	db	114	;'r'
  3045  00FA27  6F                 	db	111	;'o'
  3046  00FA28  6F                 	db	111	;'o'
  3047  00FA29  6D                 	db	109	;'m'
  3048  00FA2A  73                 	db	115	;'s'
  3049  00FA2B  68                 	db	104	;'h'
  3050  00FA2C  61                 	db	97	;'a'
  3051  00FA2D  6B                 	db	107	;'k'
  3052  00FA2E  65                 	db	101	;'e'
  3053  00FA2F  72                 	db	114	;'r'
  3054  00FA30  3D                 	db	61	;'='
  3055  00FA31  6F                 	db	111	;'o'
  3056  00FA32  6E                 	db	110	;'n'
  3057  00FA33  00                 	db	0
  3058  00FA34                     STR_236:
  3059  00FA34  6A                 	db	106	;'j'
  3060  00FA35  6F                 	db	111	;'o'
  3061  00FA36  65                 	db	101	;'e'
  3062  00FA37  73                 	db	115	;'s'
  3063  00FA38  72                 	db	114	;'r'
  3064  00FA39  6F                 	db	111	;'o'
  3065  00FA3A  6F                 	db	111	;'o'
  3066  00FA3B  6D                 	db	109	;'m'
  3067  00FA3C  6C                 	db	108	;'l'
  3068  00FA3D  69                 	db	105	;'i'
  3069  00FA3E  67                 	db	103	;'g'
  3070  00FA3F  68                 	db	104	;'h'
  3071  00FA40  74                 	db	116	;'t'
  3072  00FA41  3D                 	db	61	;'='
  3073  00FA42  6F                 	db	111	;'o'
  3074  00FA43  6E                 	db	110	;'n'
  3075  00FA44  00                 	db	0
  3076  00FA45                     STR_142:
  3077  00FA45  72                 	db	114	;'r'
  3078  00FA46  65                 	db	101	;'e'
  3079  00FA47  64                 	db	100	;'d'
  3080  00FA48  6C                 	db	108	;'l'
  3081  00FA49  65                 	db	101	;'e'
  3082  00FA4A  64                 	db	100	;'d'
  3083  00FA4B  62                 	db	98	;'b'
  3084  00FA4C  72                 	db	114	;'r'
  3085  00FA4D  69                 	db	105	;'i'
  3086  00FA4E  67                 	db	103	;'g'
  3087  00FA4F  68                 	db	104	;'h'
  3088  00FA50  74                 	db	116	;'t'
  3089  00FA51  6E                 	db	110	;'n'
  3090  00FA52  65                 	db	101	;'e'
  3091  00FA53  73                 	db	115	;'s'
  3092  00FA54  73                 	db	115	;'s'
  3093  00FA55  00                 	db	0
  3094  00FA56                     STR_158:
  3095  00FA56  52                 	db	82	;'R'
  3096  00FA57  65                 	db	101	;'e'
  3097  00FA58  64                 	db	100	;'d'
  3098  00FA59  20                 	db	32
  3099  00FA5A  4C                 	db	76	;'L'
  3100  00FA5B  45                 	db	69	;'E'
  3101  00FA5C  44                 	db	68	;'D'
  3102  00FA5D  20                 	db	32
  3103  00FA5E  43                 	db	67	;'C'
  3104  00FA5F  6F                 	db	111	;'o'
  3105  00FA60  6E                 	db	110	;'n'
  3106  00FA61  74                 	db	116	;'t'
  3107  00FA62  72                 	db	114	;'r'
  3108  00FA63  61                 	db	97	;'a'
  3109  00FA64  73                 	db	115	;'s'
  3110  00FA65  74                 	db	116	;'t'
  3111  00FA66  00                 	db	0
  3112  00FA67                     STR_14:
  3113  00FA67  53                 	db	83	;'S'
  3114  00FA68  74                 	db	116	;'t'
  3115  00FA69  61                 	db	97	;'a'
  3116  00FA6A  72                 	db	114	;'r'
  3117  00FA6B  74                 	db	116	;'t'
  3118  00FA6C  69                 	db	105	;'i'
  3119  00FA6D  6E                 	db	110	;'n'
  3120  00FA6E  67                 	db	103	;'g'
  3121  00FA6F  2E                 	db	46
  3122  00FA70  2E                 	db	46
  3123  00FA71  2E                 	db	46
  3124  00FA72  2E                 	db	46
  3125  00FA73  2E                 	db	46
  3126  00FA74  2E                 	db	46
  3127  00FA75  2E                 	db	46
  3128  00FA76  2E                 	db	46
  3129  00FA77  00                 	db	0
  3130  00FA78                     STR_167:
  3131  00FA78  45                 	db	69	;'E'
  3132  00FA79  52                 	db	82	;'R'
  3133  00FA7A  52                 	db	82	;'R'
  3134  00FA7B  3A                 	db	58	;':'
  3135  00FA7C  20                 	db	32
  3136  00FA7D  43                 	db	67	;'C'
  3137  00FA7E  4E                 	db	78	;'N'
  3138  00FA7F  53                 	db	83	;'S'
  3139  00FA80  54                 	db	84	;'T'
  3140  00FA81  20                 	db	32
  3141  00FA82  3E                 	db	62	;'>'
  3142  00FA83  20                 	db	32
  3143  00FA84  31                 	db	49	;'1'
  3144  00FA85  30                 	db	48	;'0'
  3145  00FA86  30                 	db	48	;'0'
  3146  00FA87  00                 	db	0
  3147  00FA88                     STR_148:
  3148  00FA88  45                 	db	69	;'E'
  3149  00FA89  52                 	db	82	;'R'
  3150  00FA8A  52                 	db	82	;'R'
  3151  00FA8B  3A                 	db	58	;':'
  3152  00FA8C  20                 	db	32
  3153  00FA8D  44                 	db	68	;'D'
  3154  00FA8E  75                 	db	117	;'u'
  3155  00FA8F  74                 	db	116	;'t'
  3156  00FA90  79                 	db	121	;'y'
  3157  00FA91  20                 	db	32
  3158  00FA92  3E                 	db	62	;'>'
  3159  00FA93  20                 	db	32
  3160  00FA94  31                 	db	49	;'1'
  3161  00FA95  30                 	db	48	;'0'
  3162  00FA96  30                 	db	48	;'0'
  3163  00FA97  00                 	db	0
  3164  00FA98                     STR_64:
  3165  00FA98  4C                 	db	76	;'L'
  3166  00FA99  56                 	db	86	;'V'
  3167  00FA9A  4E                 	db	78	;'N'
  3168  00FA9B  47                 	db	71	;'G'
  3169  00FA9C  20                 	db	32
  3170  00FA9D  52                 	db	82	;'R'
  3171  00FA9E  6D                 	db	109	;'m'
  3172  00FA9F  20                 	db	32
  3173  00FAA0  54                 	db	84	;'T'
  3174  00FAA1  61                 	db	97	;'a'
  3175  00FAA2  73                 	db	115	;'s'
  3176  00FAA3  6B                 	db	107	;'k'
  3177  00FAA4  3F                 	db	63	;'?'
  3178  00FAA5  3F                 	db	63	;'?'
  3179  00FAA6  3F                 	db	63	;'?'
  3180  00FAA7  00                 	db	0
  3181  00FAA8                     STR_96:
  3182  00FAA8  42                 	db	66	;'B'
  3183  00FAA9  65                 	db	101	;'e'
  3184  00FAAA  64                 	db	100	;'d'
  3185  00FAAB  72                 	db	114	;'r'
  3186  00FAAC  6F                 	db	111	;'o'
  3187  00FAAD  6F                 	db	111	;'o'
  3188  00FAAE  6D                 	db	109	;'m'
  3189  00FAAF  20                 	db	32
  3190  00FAB0  54                 	db	84	;'T'
  3191  00FAB1  61                 	db	97	;'a'
  3192  00FAB2  73                 	db	115	;'s'
  3193  00FAB3  6B                 	db	107	;'k'
  3194  00FAB4  3F                 	db	63	;'?'
  3195  00FAB5  3F                 	db	63	;'?'
  3196  00FAB6  3F                 	db	63	;'?'
  3197  00FAB7  00                 	db	0
  3198  00FAB8                     STR_105:
  3199  00FAB8  42                 	db	66	;'B'
  3200  00FAB9  65                 	db	101	;'e'
  3201  00FABA  64                 	db	100	;'d'
  3202  00FABB  72                 	db	114	;'r'
  3203  00FABC  6F                 	db	111	;'o'
  3204  00FABD  6F                 	db	111	;'o'
  3205  00FABE  6D                 	db	109	;'m'
  3206  00FABF  20                 	db	32
  3207  00FAC0  48                 	db	72	;'H'
  3208  00FAC1  65                 	db	101	;'e'
  3209  00FAC2  6C                 	db	108	;'l'
  3210  00FAC3  70                 	db	112	;'p'
  3211  00FAC4  3F                 	db	63	;'?'
  3212  00FAC5  3F                 	db	63	;'?'
  3213  00FAC6  3F                 	db	63	;'?'
  3214  00FAC7  00                 	db	0
  3215  00FAC8                     STR_154:
  3216  00FAC8  52                 	db	82	;'R'
  3217  00FAC9  65                 	db	101	;'e'
  3218  00FACA  64                 	db	100	;'d'
  3219  00FACB  20                 	db	32
  3220  00FACC  4C                 	db	76	;'L'
  3221  00FACD  45                 	db	69	;'E'
  3222  00FACE  44                 	db	68	;'D'
  3223  00FACF  20                 	db	32
  3224  00FAD0  57                 	db	87	;'W'
  3225  00FAD1  68                 	db	104	;'h'
  3226  00FAD2  61                 	db	97	;'a'
  3227  00FAD3  74                 	db	116	;'t'
  3228  00FAD4  3F                 	db	63	;'?'
  3229  00FAD5  3F                 	db	63	;'?'
  3230  00FAD6  3F                 	db	63	;'?'
  3231  00FAD7  00                 	db	0
  3232  00FAD8                     STR_243:
  3233  00FAD8  4A                 	db	74	;'J'
  3234  00FAD9  6F                 	db	111	;'o'
  3235  00FADA  65                 	db	101	;'e'
  3236  00FADB  20                 	db	32
  3237  00FADC  72                 	db	114	;'r'
  3238  00FADD  6F                 	db	111	;'o'
  3239  00FADE  6F                 	db	111	;'o'
  3240  00FADF  6D                 	db	109	;'m'
  3241  00FAE0  20                 	db	32
  3242  00FAE1  77                 	db	119	;'w'
  3243  00FAE2  68                 	db	104	;'h'
  3244  00FAE3  61                 	db	97	;'a'
  3245  00FAE4  74                 	db	116	;'t'
  3246  00FAE5  3F                 	db	63	;'?'
  3247  00FAE6  3F                 	db	63	;'?'
  3248  00FAE7  00                 	db	0
  3249  00FAE8                     STR_272:
  3250  00FAE8  43                 	db	67	;'C'
  3251  00FAE9  68                 	db	104	;'h'
  3252  00FAEA  72                 	db	114	;'r'
  3253  00FAEB  69                 	db	105	;'i'
  3254  00FAEC  73                 	db	115	;'s'
  3255  00FAED  74                 	db	116	;'t'
  3256  00FAEE  6D                 	db	109	;'m'
  3257  00FAEF  61                 	db	97	;'a'
  3258  00FAF0  73                 	db	115	;'s'
  3259  00FAF1  20                 	db	32
  3260  00FAF2  54                 	db	84	;'T'
  3261  00FAF3  72                 	db	114	;'r'
  3262  00FAF4  65                 	db	101	;'e'
  3263  00FAF5  65                 	db	101	;'e'
  3264  00FAF6  3F                 	db	63	;'?'
  3265  00FAF7  00                 	db	0
  3266  00FAF8                     STR_118:
  3267  00FAF8  58                 	db	88	;'X'
  3268  00FAF9  4D                 	db	77	;'M'
  3269  00FAFA  41                 	db	65	;'A'
  3270  00FAFB  53                 	db	83	;'S'
  3271  00FAFC  20                 	db	32
  3272  00FAFD  43                 	db	67	;'C'
  3273  00FAFE  6F                 	db	111	;'o'
  3274  00FAFF  6C                 	db	108	;'l'
  3275  00FB00  6F                 	db	111	;'o'
  3276  00FB01  72                 	db	114	;'r'
  3277  00FB02  20                 	db	32
  3278  00FB03  54                 	db	84	;'T'
  3279  00FB04  47                 	db	71	;'G'
  3280  00FB05  4C                 	db	76	;'L'
  3281  00FB06  44                 	db	68	;'D'
  3282  00FB07  00                 	db	0
  3283  00FB08                     STR_56:
  3284  00FB08  4C                 	db	76	;'L'
  3285  00FB09  56                 	db	86	;'V'
  3286  00FB0A  4E                 	db	78	;'N'
  3287  00FB0B  47                 	db	71	;'G'
  3288  00FB0C  20                 	db	32
  3289  00FB0D  52                 	db	82	;'R'
  3290  00FB0E  6D                 	db	109	;'m'
  3291  00FB0F  20                 	db	32
  3292  00FB10  4C                 	db	76	;'L'
  3293  00FB11  74                 	db	116	;'t'
  3294  00FB12  20                 	db	32
  3295  00FB13  54                 	db	84	;'T'
  3296  00FB14  47                 	db	71	;'G'
  3297  00FB15  4C                 	db	76	;'L'
  3298  00FB16  44                 	db	68	;'D'
  3299  00FB17  00                 	db	0
  3300  00FB18                     STR_83:
  3301  00FB18  42                 	db	66	;'B'
  3302  00FB19  65                 	db	101	;'e'
  3303  00FB1A  64                 	db	100	;'d'
  3304  00FB1B  72                 	db	114	;'r'
  3305  00FB1C  6F                 	db	111	;'o'
  3306  00FB1D  6F                 	db	111	;'o'
  3307  00FB1E  6D                 	db	109	;'m'
  3308  00FB1F  20                 	db	32
  3309  00FB20  4C                 	db	76	;'L'
  3310  00FB21  74                 	db	116	;'t'
  3311  00FB22  20                 	db	32
  3312  00FB23  54                 	db	84	;'T'
  3313  00FB24  47                 	db	71	;'G'
  3314  00FB25  4C                 	db	76	;'L'
  3315  00FB26  44                 	db	68	;'D'
  3316  00FB27  00                 	db	0
  3317  00FB28                     STR_203:
  3318  00FB28  52                 	db	82	;'R'
  3319  00FB29  54                 	db	84	;'T'
  3320  00FB2A  43                 	db	67	;'C'
  3321  00FB2B  20                 	db	32
  3322  00FB2C  42                 	db	66	;'B'
  3323  00FB2D  74                 	db	116	;'t'
  3324  00FB2E  79                 	db	121	;'y'
  3325  00FB2F  20                 	db	32
  3326  00FB30  3D                 	db	61	;'='
  3327  00FB31  20                 	db	32
  3328  00FB32  25                 	db	37
  3329  00FB33  64                 	db	100	;'d'
  3330  00FB34  2E                 	db	46
  3331  00FB35  25                 	db	37
  3332  00FB36  64                 	db	100	;'d'
  3333  00FB37  00                 	db	0
  3334  00FB38                     STR_278:
  3335  00FB38  49                 	db	73	;'I'
  3336  00FB39  6E                 	db	110	;'n'
  3337  00FB3A  76                 	db	118	;'v'
  3338  00FB3B  61                 	db	97	;'a'
  3339  00FB3C  6C                 	db	108	;'l'
  3340  00FB3D  69                 	db	105	;'i'
  3341  00FB3E  64                 	db	100	;'d'
  3342  00FB3F  20                 	db	32
  3343  00FB40  43                 	db	67	;'C'
  3344  00FB41  6F                 	db	111	;'o'
  3345  00FB42  6D                 	db	109	;'m'
  3346  00FB43  6D                 	db	109	;'m'
  3347  00FB44  61                 	db	97	;'a'
  3348  00FB45  6E                 	db	110	;'n'
  3349  00FB46  64                 	db	100	;'d'
  3350  00FB47  00                 	db	0
  3351  00FB48                     STR_186:
  3352  00FB48  45                 	db	69	;'E'
  3353  00FB49  52                 	db	82	;'R'
  3354  00FB4A  52                 	db	82	;'R'
  3355  00FB4B  3A                 	db	58	;':'
  3356  00FB4C  20                 	db	32
  3357  00FB4D  43                 	db	67	;'C'
  3358  00FB4E  61                 	db	97	;'a'
  3359  00FB4F  6E                 	db	110	;'n'
  3360  00FB50  74                 	db	116	;'t'
  3361  00FB51  20                 	db	32
  3362  00FB52  70                 	db	112	;'p'
  3363  00FB53  61                 	db	97	;'a'
  3364  00FB54  72                 	db	114	;'r'
  3365  00FB55  73                 	db	115	;'s'
  3366  00FB56  65                 	db	101	;'e'
  3367  00FB57  00                 	db	0
  3368  00FB58                     STR_95:
  3369  00FB58  42                 	db	66	;'B'
  3370  00FB59  65                 	db	101	;'e'
  3371  00FB5A  64                 	db	100	;'d'
  3372  00FB5B  72                 	db	114	;'r'
  3373  00FB5C  6F                 	db	111	;'o'
  3374  00FB5D  6F                 	db	111	;'o'
  3375  00FB5E  6D                 	db	109	;'m'
  3376  00FB5F  20                 	db	32
  3377  00FB60  53                 	db	83	;'S'
  3378  00FB61  4B                 	db	75	;'K'
  3379  00FB62  52                 	db	82	;'R'
  3380  00FB63  20                 	db	32
  3381  00FB64  4F                 	db	79	;'O'
  3382  00FB65  66                 	db	102	;'f'
  3383  00FB66  66                 	db	102	;'f'
  3384  00FB67  00                 	db	0
  3385  00FB68                     STR_88:
  3386  00FB68  42                 	db	66	;'B'
  3387  00FB69  65                 	db	101	;'e'
  3388  00FB6A  64                 	db	100	;'d'
  3389  00FB6B  72                 	db	114	;'r'
  3390  00FB6C  6F                 	db	111	;'o'
  3391  00FB6D  6F                 	db	111	;'o'
  3392  00FB6E  6D                 	db	109	;'m'
  3393  00FB6F  20                 	db	32
  3394  00FB70  46                 	db	70	;'F'
  3395  00FB71  61                 	db	97	;'a'
  3396  00FB72  6E                 	db	110	;'n'
  3397  00FB73  20                 	db	32
  3398  00FB74  4F                 	db	79	;'O'
  3399  00FB75  66                 	db	102	;'f'
  3400  00FB76  66                 	db	102	;'f'
  3401  00FB77  00                 	db	0
  3402  00FB78                     STR_241:
  3403  00FB78  4A                 	db	74	;'J'
  3404  00FB79  6F                 	db	111	;'o'
  3405  00FB7A  65                 	db	101	;'e'
  3406  00FB7B  20                 	db	32
  3407  00FB7C  72                 	db	114	;'r'
  3408  00FB7D  6F                 	db	111	;'o'
  3409  00FB7E  6F                 	db	111	;'o'
  3410  00FB7F  6D                 	db	109	;'m'
  3411  00FB80  20                 	db	32
  3412  00FB81  6C                 	db	108	;'l'
  3413  00FB82  74                 	db	116	;'t'
  3414  00FB83  20                 	db	32
  3415  00FB84  4F                 	db	79	;'O'
  3416  00FB85  66                 	db	102	;'f'
  3417  00FB86  66                 	db	102	;'f'
  3418  00FB87  00                 	db	0
  3419  00FB88                     STR_184:
  3420  00FB88  45                 	db	69	;'E'
  3421  00FB89  52                 	db	82	;'R'
  3422  00FB8A  52                 	db	82	;'R'
  3423  00FB8B  3A                 	db	58	;':'
  3424  00FB8C  20                 	db	32
  3425  00FB8D  55                 	db	85	;'U'
  3426  00FB8E  73                 	db	115	;'s'
  3427  00FB8F  65                 	db	101	;'e'
  3428  00FB90  20                 	db	32
  3429  00FB91  2B                 	db	43
  3430  00FB92  20                 	db	32
  3431  00FB93  43                 	db	67	;'C'
  3432  00FB94  68                 	db	104	;'h'
  3433  00FB95  6E                 	db	110	;'n'
  3434  00FB96  6C                 	db	108	;'l'
  3435  00FB97  00                 	db	0
  3436  00FB98                     STR_80:
  3437  00FB98  62                 	db	98	;'b'
  3438  00FB99  65                 	db	101	;'e'
  3439  00FB9A  64                 	db	100	;'d'
  3440  00FB9B  72                 	db	114	;'r'
  3441  00FB9C  6F                 	db	111	;'o'
  3442  00FB9D  6F                 	db	111	;'o'
  3443  00FB9E  6D                 	db	109	;'m'
  3444  00FB9F  6C                 	db	108	;'l'
  3445  00FBA0  69                 	db	105	;'i'
  3446  00FBA1  67                 	db	103	;'g'
  3447  00FBA2  68                 	db	104	;'h'
  3448  00FBA3  74                 	db	116	;'t'
  3449  00FBA4  3D                 	db	61	;'='
  3450  00FBA5  6F                 	db	111	;'o'
  3451  00FBA6  6E                 	db	110	;'n'
  3452  00FBA7  00                 	db	0
  3453  00FBA8                     STR_71:
  3454  00FBA8  4C                 	db	76	;'L'
  3455  00FBA9  56                 	db	86	;'V'
  3456  00FBAA  4E                 	db	78	;'N'
  3457  00FBAB  47                 	db	71	;'G'
  3458  00FBAC  20                 	db	32
  3459  00FBAD  52                 	db	82	;'R'
  3460  00FBAE  6D                 	db	109	;'m'
  3461  00FBAF  20                 	db	32
  3462  00FBB0  4C                 	db	76	;'L'
  3463  00FBB1  74                 	db	116	;'t'
  3464  00FBB2  20                 	db	32
  3465  00FBB3  68                 	db	104	;'h'
  3466  00FBB4  65                 	db	101	;'e'
  3467  00FBB5  6C                 	db	108	;'l'
  3468  00FBB6  70                 	db	112	;'p'
  3469  00FBB7  00                 	db	0
  3470  00FBB8                     STR_13:
  3471  00FBB8  53                 	db	83	;'S'
  3472  00FBB9  74                 	db	116	;'t'
  3473  00FBBA  61                 	db	97	;'a'
  3474  00FBBB  72                 	db	114	;'r'
  3475  00FBBC  74                 	db	116	;'t'
  3476  00FBBD  69                 	db	105	;'i'
  3477  00FBBE  6E                 	db	110	;'n'
  3478  00FBBF  67                 	db	103	;'g'
  3479  00FBC0  2E                 	db	46
  3480  00FBC1  2E                 	db	46
  3481  00FBC2  2E                 	db	46
  3482  00FBC3  2E                 	db	46
  3483  00FBC4  2E                 	db	46
  3484  00FBC5  2E                 	db	46
  3485  00FBC6  2E                 	db	46
  3486  00FBC7  00                 	db	0
  3487  00FBC8                     STR_263:
  3488  00FBC8  43                 	db	67	;'C'
  3489  00FBC9  75                 	db	117	;'u'
  3490  00FBCA  72                 	db	114	;'r'
  3491  00FBCB  72                 	db	114	;'r'
  3492  00FBCC  65                 	db	101	;'e'
  3493  00FBCD  6E                 	db	110	;'n'
  3494  00FBCE  74                 	db	116	;'t'
  3495  00FBCF  20                 	db	32
  3496  00FBD0  54                 	db	84	;'T'
  3497  00FBD1  69                 	db	105	;'i'
  3498  00FBD2  6D                 	db	109	;'m'
  3499  00FBD3  65                 	db	101	;'e'
  3500  00FBD4  0D                 	db	13
  3501  00FBD5  0A                 	db	10
  3502  00FBD6  00                 	db	0
  3503  00FBD7                     STR_131:
  3504  00FBD7  77                 	db	119	;'w'
  3505  00FBD8  68                 	db	104	;'h'
  3506  00FBD9  69                 	db	105	;'i'
  3507  00FBDA  74                 	db	116	;'t'
  3508  00FBDB  65                 	db	101	;'e'
  3509  00FBDC  20                 	db	32
  3510  00FBDD  6C                 	db	108	;'l'
  3511  00FBDE  69                 	db	105	;'i'
  3512  00FBDF  67                 	db	103	;'g'
  3513  00FBE0  68                 	db	104	;'h'
  3514  00FBE1  74                 	db	116	;'t'
  3515  00FBE2  73                 	db	115	;'s'
  3516  00FBE3  0D                 	db	13
  3517  00FBE4  0A                 	db	10
  3518  00FBE5  00                 	db	0
  3519  00FBE6                     STR_171:
  3520  00FBE6  43                 	db	67	;'C'
  3521  00FBE7  4E                 	db	78	;'N'
  3522  00FBE8  53                 	db	83	;'S'
  3523  00FBE9  54                 	db	84	;'T'
  3524  00FBEA  20                 	db	32
  3525  00FBEB  73                 	db	115	;'s'
  3526  00FBEC  65                 	db	101	;'e'
  3527  00FBED  74                 	db	116	;'t'
  3528  00FBEE  20                 	db	32
  3529  00FBEF  74                 	db	116	;'t'
  3530  00FBF0  6F                 	db	111	;'o'
  3531  00FBF1  20                 	db	32
  3532  00FBF2  25                 	db	37
  3533  00FBF3  64                 	db	100	;'d'
  3534  00FBF4  00                 	db	0
  3535  00FBF5                     STR_152:
  3536  00FBF5  44                 	db	68	;'D'
  3537  00FBF6  75                 	db	117	;'u'
  3538  00FBF7  74                 	db	116	;'t'
  3539  00FBF8  79                 	db	121	;'y'
  3540  00FBF9  20                 	db	32
  3541  00FBFA  73                 	db	115	;'s'
  3542  00FBFB  65                 	db	101	;'e'
  3543  00FBFC  74                 	db	116	;'t'
  3544  00FBFD  20                 	db	32
  3545  00FBFE  74                 	db	116	;'t'
  3546  00FBFF  6F                 	db	111	;'o'
  3547  00FC00  20                 	db	32
  3548  00FC01  25                 	db	37
  3549  00FC02  64                 	db	100	;'d'
  3550  00FC03  00                 	db	0
  3551  00FC04                     STR_126:
  3552  00FC04  58                 	db	88	;'X'
  3553  00FC05  4D                 	db	77	;'M'
  3554  00FC06  41                 	db	65	;'A'
  3555  00FC07  53                 	db	83	;'S'
  3556  00FC08  20                 	db	32
  3557  00FC09  57                 	db	87	;'W'
  3558  00FC0A  68                 	db	104	;'h'
  3559  00FC0B  69                 	db	105	;'i'
  3560  00FC0C  74                 	db	116	;'t'
  3561  00FC0D  65                 	db	101	;'e'
  3562  00FC0E  20                 	db	32
  3563  00FC0F  4F                 	db	79	;'O'
  3564  00FC10  66                 	db	102	;'f'
  3565  00FC11  66                 	db	102	;'f'
  3566  00FC12  00                 	db	0
  3567  00FC13                     STR_62:
  3568  00FC13  4C                 	db	76	;'L'
  3569  00FC14  56                 	db	86	;'V'
  3570  00FC15  4E                 	db	78	;'N'
  3571  00FC16  47                 	db	71	;'G'
  3572  00FC17  20                 	db	32
  3573  00FC18  52                 	db	82	;'R'
  3574  00FC19  6D                 	db	109	;'m'
  3575  00FC1A  20                 	db	32
  3576  00FC1B  4C                 	db	76	;'L'
  3577  00FC1C  74                 	db	116	;'t'
  3578  00FC1D  20                 	db	32
  3579  00FC1E  4F                 	db	79	;'O'
  3580  00FC1F  66                 	db	102	;'f'
  3581  00FC20  66                 	db	102	;'f'
  3582  00FC21  00                 	db	0
  3583  00FC22                     STR_89:
  3584  00FC22  42                 	db	66	;'B'
  3585  00FC23  65                 	db	101	;'e'
  3586  00FC24  64                 	db	100	;'d'
  3587  00FC25  72                 	db	114	;'r'
  3588  00FC26  6F                 	db	111	;'o'
  3589  00FC27  6F                 	db	111	;'o'
  3590  00FC28  6D                 	db	109	;'m'
  3591  00FC29  20                 	db	32
  3592  00FC2A  4C                 	db	76	;'L'
  3593  00FC2B  74                 	db	116	;'t'
  3594  00FC2C  20                 	db	32
  3595  00FC2D  4F                 	db	79	;'O'
  3596  00FC2E  66                 	db	102	;'f'
  3597  00FC2F  66                 	db	102	;'f'
  3598  00FC30  00                 	db	0
  3599  00FC31                     STR_87:
  3600  00FC31  62                 	db	98	;'b'
  3601  00FC32  65                 	db	101	;'e'
  3602  00FC33  64                 	db	100	;'d'
  3603  00FC34  72                 	db	114	;'r'
  3604  00FC35  6F                 	db	111	;'o'
  3605  00FC36  6F                 	db	111	;'o'
  3606  00FC37  6D                 	db	109	;'m'
  3607  00FC38  66                 	db	102	;'f'
  3608  00FC39  61                 	db	97	;'a'
  3609  00FC3A  6E                 	db	110	;'n'
  3610  00FC3B  3D                 	db	61	;'='
  3611  00FC3C  6F                 	db	111	;'o'
  3612  00FC3D  66                 	db	102	;'f'
  3613  00FC3E  66                 	db	102	;'f'
  3614  00FC3F  00                 	db	0
  3615  00FC40                     STR_92:
  3616  00FC40  42                 	db	66	;'B'
  3617  00FC41  65                 	db	101	;'e'
  3618  00FC42  64                 	db	100	;'d'
  3619  00FC43  72                 	db	114	;'r'
  3620  00FC44  6F                 	db	111	;'o'
  3621  00FC45  6F                 	db	111	;'o'
  3622  00FC46  6D                 	db	109	;'m'
  3623  00FC47  20                 	db	32
  3624  00FC48  53                 	db	83	;'S'
  3625  00FC49  4B                 	db	75	;'K'
  3626  00FC4A  52                 	db	82	;'R'
  3627  00FC4B  20                 	db	32
  3628  00FC4C  4F                 	db	79	;'O'
  3629  00FC4D  6E                 	db	110	;'n'
  3630  00FC4E  00                 	db	0
  3631  00FC4F                     STR_85:
  3632  00FC4F  42                 	db	66	;'B'
  3633  00FC50  65                 	db	101	;'e'
  3634  00FC51  64                 	db	100	;'d'
  3635  00FC52  72                 	db	114	;'r'
  3636  00FC53  6F                 	db	111	;'o'
  3637  00FC54  6F                 	db	111	;'o'
  3638  00FC55  6D                 	db	109	;'m'
  3639  00FC56  20                 	db	32
  3640  00FC57  46                 	db	70	;'F'
  3641  00FC58  61                 	db	97	;'a'
  3642  00FC59  6E                 	db	110	;'n'
  3643  00FC5A  20                 	db	32
  3644  00FC5B  4F                 	db	79	;'O'
  3645  00FC5C  6E                 	db	110	;'n'
  3646  00FC5D  00                 	db	0
  3647  00FC5E                     STR_238:
  3648  00FC5E  4A                 	db	74	;'J'
  3649  00FC5F  6F                 	db	111	;'o'
  3650  00FC60  65                 	db	101	;'e'
  3651  00FC61  20                 	db	32
  3652  00FC62  72                 	db	114	;'r'
  3653  00FC63  6F                 	db	111	;'o'
  3654  00FC64  6F                 	db	111	;'o'
  3655  00FC65  6D                 	db	109	;'m'
  3656  00FC66  20                 	db	32
  3657  00FC67  6C                 	db	108	;'l'
  3658  00FC68  74                 	db	116	;'t'
  3659  00FC69  20                 	db	32
  3660  00FC6A  4F                 	db	79	;'O'
  3661  00FC6B  6E                 	db	110	;'n'
  3662  00FC6C  00                 	db	0
  3663  00FC6D                     STR_165:
  3664  00FC6D  45                 	db	69	;'E'
  3665  00FC6E  52                 	db	82	;'R'
  3666  00FC6F  52                 	db	82	;'R'
  3667  00FC70  3A                 	db	58	;':'
  3668  00FC71  20                 	db	32
  3669  00FC72  4E                 	db	78	;'N'
  3670  00FC73  6F                 	db	111	;'o'
  3671  00FC74  20                 	db	32
  3672  00FC75  6E                 	db	110	;'n'
  3673  00FC76  75                 	db	117	;'u'
  3674  00FC77  6D                 	db	109	;'m'
  3675  00FC78  62                 	db	98	;'b'
  3676  00FC79  65                 	db	101	;'e'
  3677  00FC7A  72                 	db	114	;'r'
  3678  00FC7B  00                 	db	0
  3679  00FC7C                     STR_146:
  3680  00FC7C  45                 	db	69	;'E'
  3681  00FC7D  52                 	db	82	;'R'
  3682  00FC7E  52                 	db	82	;'R'
  3683  00FC7F  3A                 	db	58	;':'
  3684  00FC80  20                 	db	32
  3685  00FC81  6E                 	db	110	;'n'
  3686  00FC82  6F                 	db	111	;'o'
  3687  00FC83  20                 	db	32
  3688  00FC84  6E                 	db	110	;'n'
  3689  00FC85  75                 	db	117	;'u'
  3690  00FC86  6D                 	db	109	;'m'
  3691  00FC87  62                 	db	98	;'b'
  3692  00FC88  65                 	db	101	;'e'
  3693  00FC89  72                 	db	114	;'r'
  3694  00FC8A  00                 	db	0
  3695  00FC8B                     STR_12:
  3696  00FC8B  53                 	db	83	;'S'
  3697  00FC8C  74                 	db	116	;'t'
  3698  00FC8D  61                 	db	97	;'a'
  3699  00FC8E  72                 	db	114	;'r'
  3700  00FC8F  74                 	db	116	;'t'
  3701  00FC90  69                 	db	105	;'i'
  3702  00FC91  6E                 	db	110	;'n'
  3703  00FC92  67                 	db	103	;'g'
  3704  00FC93  2E                 	db	46
  3705  00FC94  2E                 	db	46
  3706  00FC95  2E                 	db	46
  3707  00FC96  2E                 	db	46
  3708  00FC97  2E                 	db	46
  3709  00FC98  2E                 	db	46
  3710  00FC99  00                 	db	0
  3711  00FC9A                     STR_169:
  3712  00FC9A  45                 	db	69	;'E'
  3713  00FC9B  52                 	db	82	;'R'
  3714  00FC9C  52                 	db	82	;'R'
  3715  00FC9D  3A                 	db	58	;':'
  3716  00FC9E  20                 	db	32
  3717  00FC9F  43                 	db	67	;'C'
  3718  00FCA0  4E                 	db	78	;'N'
  3719  00FCA1  53                 	db	83	;'S'
  3720  00FCA2  54                 	db	84	;'T'
  3721  00FCA3  20                 	db	32
  3722  00FCA4  3C                 	db	60	;'<'
  3723  00FCA5  20                 	db	32
  3724  00FCA6  30                 	db	48	;'0'
  3725  00FCA7  00                 	db	0
  3726  00FCA8                     STR_150:
  3727  00FCA8  45                 	db	69	;'E'
  3728  00FCA9  52                 	db	82	;'R'
  3729  00FCAA  52                 	db	82	;'R'
  3730  00FCAB  3A                 	db	58	;':'
  3731  00FCAC  20                 	db	32
  3732  00FCAD  44                 	db	68	;'D'
  3733  00FCAE  75                 	db	117	;'u'
  3734  00FCAF  74                 	db	116	;'t'
  3735  00FCB0  79                 	db	121	;'y'
  3736  00FCB1  20                 	db	32
  3737  00FCB2  3C                 	db	60	;'<'
  3738  00FCB3  20                 	db	32
  3739  00FCB4  30                 	db	48	;'0'
  3740  00FCB5  00                 	db	0
  3741  00FCB6                     STR_268:
  3742  00FCB6  44                 	db	68	;'D'
  3743  00FCB7  65                 	db	101	;'e'
  3744  00FCB8  76                 	db	118	;'v'
  3745  00FCB9  69                 	db	105	;'i'
  3746  00FCBA  63                 	db	99	;'c'
  3747  00FCBB  65                 	db	101	;'e'
  3748  00FCBC  20                 	db	32
  3749  00FCBD  4D                 	db	77	;'M'
  3750  00FCBE  65                 	db	101	;'e'
  3751  00FCBF  6E                 	db	110	;'n'
  3752  00FCC0  75                 	db	117	;'u'
  3753  00FCC1  73                 	db	115	;'s'
  3754  00FCC2  3A                 	db	58	;':'
  3755  00FCC3  00                 	db	0
  3756  00FCC4                     STR_122:
  3757  00FCC4  58                 	db	88	;'X'
  3758  00FCC5  4D                 	db	77	;'M'
  3759  00FCC6  41                 	db	65	;'A'
  3760  00FCC7  53                 	db	83	;'S'
  3761  00FCC8  20                 	db	32
  3762  00FCC9  57                 	db	87	;'W'
  3763  00FCCA  68                 	db	104	;'h'
  3764  00FCCB  69                 	db	105	;'i'
  3765  00FCCC  74                 	db	116	;'t'
  3766  00FCCD  65                 	db	101	;'e'
  3767  00FCCE  20                 	db	32
  3768  00FCCF  4F                 	db	79	;'O'
  3769  00FCD0  6E                 	db	110	;'n'
  3770  00FCD1  00                 	db	0
  3771  00FCD2                     STR_59:
  3772  00FCD2  4C                 	db	76	;'L'
  3773  00FCD3  56                 	db	86	;'V'
  3774  00FCD4  4E                 	db	78	;'N'
  3775  00FCD5  47                 	db	71	;'G'
  3776  00FCD6  20                 	db	32
  3777  00FCD7  52                 	db	82	;'R'
  3778  00FCD8  6D                 	db	109	;'m'
  3779  00FCD9  20                 	db	32
  3780  00FCDA  4C                 	db	76	;'L'
  3781  00FCDB  74                 	db	116	;'t'
  3782  00FCDC  20                 	db	32
  3783  00FCDD  4F                 	db	79	;'O'
  3784  00FCDE  6E                 	db	110	;'n'
  3785  00FCDF  00                 	db	0
  3786  00FCE0                     STR_86:
  3787  00FCE0  42                 	db	66	;'B'
  3788  00FCE1  65                 	db	101	;'e'
  3789  00FCE2  64                 	db	100	;'d'
  3790  00FCE3  72                 	db	114	;'r'
  3791  00FCE4  6F                 	db	111	;'o'
  3792  00FCE5  6F                 	db	111	;'o'
  3793  00FCE6  6D                 	db	109	;'m'
  3794  00FCE7  20                 	db	32
  3795  00FCE8  4C                 	db	76	;'L'
  3796  00FCE9  74                 	db	116	;'t'
  3797  00FCEA  20                 	db	32
  3798  00FCEB  4F                 	db	79	;'O'
  3799  00FCEC  6E                 	db	110	;'n'
  3800  00FCED  00                 	db	0
  3801  00FCEE                     STR_84:
  3802  00FCEE  62                 	db	98	;'b'
  3803  00FCEF  65                 	db	101	;'e'
  3804  00FCF0  64                 	db	100	;'d'
  3805  00FCF1  72                 	db	114	;'r'
  3806  00FCF2  6F                 	db	111	;'o'
  3807  00FCF3  6F                 	db	111	;'o'
  3808  00FCF4  6D                 	db	109	;'m'
  3809  00FCF5  66                 	db	102	;'f'
  3810  00FCF6  61                 	db	97	;'a'
  3811  00FCF7  6E                 	db	110	;'n'
  3812  00FCF8  3D                 	db	61	;'='
  3813  00FCF9  6F                 	db	111	;'o'
  3814  00FCFA  6E                 	db	110	;'n'
  3815  00FCFB  00                 	db	0
  3816  00FCFC                     STR_249:
  3817  00FCFC  4A                 	db	74	;'J'
  3818  00FCFD  6F                 	db	111	;'o'
  3819  00FCFE  65                 	db	101	;'e'
  3820  00FCFF  20                 	db	32
  3821  00FD00  72                 	db	114	;'r'
  3822  00FD01  6F                 	db	111	;'o'
  3823  00FD02  6F                 	db	111	;'o'
  3824  00FD03  6D                 	db	109	;'m'
  3825  00FD04  20                 	db	32
  3826  00FD05  4D                 	db	77	;'M'
  3827  00FD06  65                 	db	101	;'e'
  3828  00FD07  6E                 	db	110	;'n'
  3829  00FD08  75                 	db	117	;'u'
  3830  00FD09  00                 	db	0
  3831  00FD0A                     STR_72:
  3832  00FD0A  4C                 	db	76	;'L'
  3833  00FD0B  56                 	db	86	;'V'
  3834  00FD0C  4E                 	db	78	;'N'
  3835  00FD0D  47                 	db	71	;'G'
  3836  00FD0E  72                 	db	114	;'r'
  3837  00FD0F  6F                 	db	111	;'o'
  3838  00FD10  6F                 	db	111	;'o'
  3839  00FD11  6D                 	db	109	;'m'
  3840  00FD12  20                 	db	32
  3841  00FD13  4D                 	db	77	;'M'
  3842  00FD14  65                 	db	101	;'e'
  3843  00FD15  6E                 	db	110	;'n'
  3844  00FD16  75                 	db	117	;'u'
  3845  00FD17  00                 	db	0
  3846  00FD18                     STR_11:
  3847  00FD18  53                 	db	83	;'S'
  3848  00FD19  74                 	db	116	;'t'
  3849  00FD1A  61                 	db	97	;'a'
  3850  00FD1B  72                 	db	114	;'r'
  3851  00FD1C  74                 	db	116	;'t'
  3852  00FD1D  69                 	db	105	;'i'
  3853  00FD1E  6E                 	db	110	;'n'
  3854  00FD1F  67                 	db	103	;'g'
  3855  00FD20  2E                 	db	46
  3856  00FD21  2E                 	db	46
  3857  00FD22  2E                 	db	46
  3858  00FD23  2E                 	db	46
  3859  00FD24  2E                 	db	46
  3860  00FD25  00                 	db	0
  3861  00FD26                     STR_195:
  3862  00FD26  69                 	db	105	;'i'
  3863  00FD27  2E                 	db	46
  3864  00FD28  65                 	db	101	;'e'
  3865  00FD29  2E                 	db	46
  3866  00FD2A  20                 	db	32
  3867  00FD2B  41                 	db	65	;'A'
  3868  00FD2C  44                 	db	68	;'D'
  3869  00FD2D  43                 	db	67	;'C'
  3870  00FD2E  20                 	db	32
  3871  00FD2F  30                 	db	48	;'0'
  3872  00FD30  0D                 	db	13
  3873  00FD31  0A                 	db	10
  3874  00FD32  00                 	db	0
  3875  00FD33                     STR_255:
  3876  00FD33  4C                 	db	76	;'L'
  3877  00FD34  69                 	db	105	;'i'
  3878  00FD35  76                 	db	118	;'v'
  3879  00FD36  69                 	db	105	;'i'
  3880  00FD37  6E                 	db	110	;'n'
  3881  00FD38  67                 	db	103	;'g'
  3882  00FD39  72                 	db	114	;'r'
  3883  00FD3A  6F                 	db	111	;'o'
  3884  00FD3B  6F                 	db	111	;'o'
  3885  00FD3C  6D                 	db	109	;'m'
  3886  00FD3D  0D                 	db	13
  3887  00FD3E  0A                 	db	10
  3888  00FD3F  00                 	db	0
  3889  00FD40                     STR_220:
  3890  00FD40  52                 	db	82	;'R'
  3891  00FD41  54                 	db	84	;'T'
  3892  00FD42  43                 	db	67	;'C'
  3893  00FD43  20                 	db	32
  3894  00FD44  57                 	db	87	;'W'
  3895  00FD45  68                 	db	104	;'h'
  3896  00FD46  61                 	db	97	;'a'
  3897  00FD47  74                 	db	116	;'t'
  3898  00FD48  3F                 	db	63	;'?'
  3899  00FD49  3F                 	db	63	;'?'
  3900  00FD4A  3F                 	db	63	;'?'
  3901  00FD4B  0A                 	db	10
  3902  00FD4C  00                 	db	0
  3903  00FD4D                     STR_182:
  3904  00FD4D  45                 	db	69	;'E'
  3905  00FD4E  52                 	db	82	;'R'
  3906  00FD4F  52                 	db	82	;'R'
  3907  00FD50  3A                 	db	58	;':'
  3908  00FD51  20                 	db	32
  3909  00FD52  55                 	db	85	;'U'
  3910  00FD53  73                 	db	115	;'s'
  3911  00FD54  65                 	db	101	;'e'
  3912  00FD55  20                 	db	32
  3913  00FD56  31                 	db	49	;'1'
  3914  00FD57  20                 	db	32
  3915  00FD58  3D                 	db	61	;'='
  3916  00FD59  00                 	db	0
  3917  00FD5A                     STR_128:
  3918  00FD5A  58                 	db	88	;'X'
  3919  00FD5B  4D                 	db	77	;'M'
  3920  00FD5C  41                 	db	65	;'A'
  3921  00FD5D  53                 	db	83	;'S'
  3922  00FD5E  20                 	db	32
  3923  00FD5F  57                 	db	87	;'W'
  3924  00FD60  68                 	db	104	;'h'
  3925  00FD61  61                 	db	97	;'a'
  3926  00FD62  74                 	db	116	;'t'
  3927  00FD63  3F                 	db	63	;'?'
  3928  00FD64  3F                 	db	63	;'?'
  3929  00FD65  3F                 	db	63	;'?'
  3930  00FD66  00                 	db	0
  3931  00FD67                     STR_190:
  3932  00FD67  43                 	db	67	;'C'
  3933  00FD68  68                 	db	104	;'h'
  3934  00FD69  6E                 	db	110	;'n'
  3935  00FD6A  6C                 	db	108	;'l'
  3936  00FD6B  20                 	db	32
  3937  00FD6C  25                 	db	37
  3938  00FD6D  64                 	db	100	;'d'
  3939  00FD6E  20                 	db	32
  3940  00FD6F  3D                 	db	61	;'='
  3941  00FD70  20                 	db	32
  3942  00FD71  25                 	db	37
  3943  00FD72  64                 	db	100	;'d'
  3944  00FD73  00                 	db	0
  3945  00FD74                     STR_22:
  3946  00FD74  4C                 	db	76	;'L'
  3947  00FD75  45                 	db	69	;'E'
  3948  00FD76  44                 	db	68	;'D'
  3949  00FD77  30                 	db	48	;'0'
  3950  00FD78  20                 	db	32
  3951  00FD79  54                 	db	84	;'T'
  3952  00FD7A  6F                 	db	111	;'o'
  3953  00FD7B  67                 	db	103	;'g'
  3954  00FD7C  67                 	db	103	;'g'
  3955  00FD7D  6C                 	db	108	;'l'
  3956  00FD7E  65                 	db	101	;'e'
  3957  00FD7F  64                 	db	100	;'d'
  3958  00FD80  00                 	db	0
  3959  00FD81                     STR_31:
  3960  00FD81  4C                 	db	76	;'L'
  3961  00FD82  45                 	db	69	;'E'
  3962  00FD83  44                 	db	68	;'D'
  3963  00FD84  31                 	db	49	;'1'
  3964  00FD85  20                 	db	32
  3965  00FD86  54                 	db	84	;'T'
  3966  00FD87  6F                 	db	111	;'o'
  3967  00FD88  67                 	db	103	;'g'
  3968  00FD89  67                 	db	103	;'g'
  3969  00FD8A  6C                 	db	108	;'l'
  3970  00FD8B  65                 	db	101	;'e'
  3971  00FD8C  64                 	db	100	;'d'
  3972  00FD8D  00                 	db	0
  3973  00FD8E                     STR_175:
  3974  00FD8E  4C                 	db	76	;'L'
  3975  00FD8F  43                 	db	67	;'C'
  3976  00FD90  44                 	db	68	;'D'
  3977  00FD91  20                 	db	32
  3978  00FD92  43                 	db	67	;'C'
  3979  00FD93  6F                 	db	111	;'o'
  3980  00FD94  6E                 	db	110	;'n'
  3981  00FD95  74                 	db	116	;'t'
  3982  00FD96  72                 	db	114	;'r'
  3983  00FD97  61                 	db	97	;'a'
  3984  00FD98  73                 	db	115	;'s'
  3985  00FD99  74                 	db	116	;'t'
  3986  00FD9A  00                 	db	0
  3987  00FD9B                     STR_106:
  3988  00FD9B  42                 	db	66	;'B'
  3989  00FD9C  65                 	db	101	;'e'
  3990  00FD9D  64                 	db	100	;'d'
  3991  00FD9E  72                 	db	114	;'r'
  3992  00FD9F  6F                 	db	111	;'o'
  3993  00FDA0  6F                 	db	111	;'o'
  3994  00FDA1  6D                 	db	109	;'m'
  3995  00FDA2  20                 	db	32
  3996  00FDA3  4D                 	db	77	;'M'
  3997  00FDA4  65                 	db	101	;'e'
  3998  00FDA5  6E                 	db	110	;'n'
  3999  00FDA6  75                 	db	117	;'u'
  4000  00FDA7  00                 	db	0
  4001  00FDA8                     STR_10:
  4002  00FDA8  53                 	db	83	;'S'
  4003  00FDA9  74                 	db	116	;'t'
  4004  00FDAA  61                 	db	97	;'a'
  4005  00FDAB  72                 	db	114	;'r'
  4006  00FDAC  74                 	db	116	;'t'
  4007  00FDAD  69                 	db	105	;'i'
  4008  00FDAE  6E                 	db	110	;'n'
  4009  00FDAF  67                 	db	103	;'g'
  4010  00FDB0  2E                 	db	46
  4011  00FDB1  2E                 	db	46
  4012  00FDB2  2E                 	db	46
  4013  00FDB3  2E                 	db	46
  4014  00FDB4  00                 	db	0
  4015  00FDB5                     STR_253:
  4016  00FDB5  44                 	db	68	;'D'
  4017  00FDB6  65                 	db	101	;'e'
  4018  00FDB7  76                 	db	118	;'v'
  4019  00FDB8  69                 	db	105	;'i'
  4020  00FDB9  63                 	db	99	;'c'
  4021  00FDBA  65                 	db	101	;'e'
  4022  00FDBB  73                 	db	115	;'s'
  4023  00FDBC  3A                 	db	58	;':'
  4024  00FDBD  0D                 	db	13
  4025  00FDBE  0A                 	db	10
  4026  00FDBF  0A                 	db	10
  4027  00FDC0  00                 	db	0
  4028  00FDC1                     STR_192:
  4029  00FDC1  43                 	db	67	;'C'
  4030  00FDC2  68                 	db	104	;'h'
  4031  00FDC3  61                 	db	97	;'a'
  4032  00FDC4  6E                 	db	110	;'n'
  4033  00FDC5  6E                 	db	110	;'n'
  4034  00FDC6  65                 	db	101	;'e'
  4035  00FDC7  6C                 	db	108	;'l'
  4036  00FDC8  73                 	db	115	;'s'
  4037  00FDC9  3A                 	db	58	;':'
  4038  00FDCA  0D                 	db	13
  4039  00FDCB  0A                 	db	10
  4040  00FDCC  00                 	db	0
  4041  00FDCD                     STR_256:
  4042  00FDCD  4A                 	db	74	;'J'
  4043  00FDCE  6F                 	db	111	;'o'
  4044  00FDCF  65                 	db	101	;'e'
  4045  00FDD0  73                 	db	115	;'s'
  4046  00FDD1  20                 	db	32
  4047  00FDD2  72                 	db	114	;'r'
  4048  00FDD3  6F                 	db	111	;'o'
  4049  00FDD4  6F                 	db	111	;'o'
  4050  00FDD5  6D                 	db	109	;'m'
  4051  00FDD6  0D                 	db	13
  4052  00FDD7  0A                 	db	10
  4053  00FDD8  00                 	db	0
  4054  00FDD9                     STR_270:
  4055  00FDD9  4C                 	db	76	;'L'
  4056  00FDDA  69                 	db	105	;'i'
  4057  00FDDB  76                 	db	118	;'v'
  4058  00FDDC  69                 	db	105	;'i'
  4059  00FDDD  6E                 	db	110	;'n'
  4060  00FDDE  67                 	db	103	;'g'
  4061  00FDDF  72                 	db	114	;'r'
  4062  00FDE0  6F                 	db	111	;'o'
  4063  00FDE1  6F                 	db	111	;'o'
  4064  00FDE2  6D                 	db	109	;'m'
  4065  00FDE3  3F                 	db	63	;'?'
  4066  00FDE4  00                 	db	0
  4067  00FDE5                     STR_9:
  4068  00FDE5  53                 	db	83	;'S'
  4069  00FDE6  74                 	db	116	;'t'
  4070  00FDE7  61                 	db	97	;'a'
  4071  00FDE8  72                 	db	114	;'r'
  4072  00FDE9  74                 	db	116	;'t'
  4073  00FDEA  69                 	db	105	;'i'
  4074  00FDEB  6E                 	db	110	;'n'
  4075  00FDEC  67                 	db	103	;'g'
  4076  00FDED  2E                 	db	46
  4077  00FDEE  2E                 	db	46
  4078  00FDEF  2E                 	db	46
  4079  00FDF0  00                 	db	0
  4080  00FDF1                     STR_42:
  4081  00FDF1  44                 	db	68	;'D'
  4082  00FDF2  65                 	db	101	;'e'
  4083  00FDF3  76                 	db	118	;'v'
  4084  00FDF4  69                 	db	105	;'i'
  4085  00FDF5  63                 	db	99	;'c'
  4086  00FDF6  65                 	db	101	;'e'
  4087  00FDF7  73                 	db	115	;'s'
  4088  00FDF8  3A                 	db	58	;':'
  4089  00FDF9  0D                 	db	13
  4090  00FDFA  0A                 	db	10
  4091  00FDFB  00                 	db	0
  4092  00FDFC                     STR_222:
  4093  00FDFC  41                 	db	65	;'A'
  4094  00FDFD  63                 	db	99	;'c'
  4095  00FDFE  74                 	db	116	;'t'
  4096  00FDFF  69                 	db	105	;'i'
  4097  00FE00  6F                 	db	111	;'o'
  4098  00FE01  6E                 	db	110	;'n'
  4099  00FE02  73                 	db	115	;'s'
  4100  00FE03  3A                 	db	58	;':'
  4101  00FE04  0D                 	db	13
  4102  00FE05  0A                 	db	10
  4103  00FE06  00                 	db	0
  4104  00FE07                     STR_258:
  4105  00FE07  43                 	db	67	;'C'
  4106  00FE08  6F                 	db	111	;'o'
  4107  00FE09  6E                 	db	110	;'n'
  4108  00FE0A  74                 	db	116	;'t'
  4109  00FE0B  72                 	db	114	;'r'
  4110  00FE0C  61                 	db	97	;'a'
  4111  00FE0D  73                 	db	115	;'s'
  4112  00FE0E  74                 	db	116	;'t'
  4113  00FE0F  0D                 	db	13
  4114  00FE10  0A                 	db	10
  4115  00FE11  00                 	db	0
  4116  00FE12                     STR_271:
  4117  00FE12  4A                 	db	74	;'J'
  4118  00FE13  6F                 	db	111	;'o'
  4119  00FE14  65                 	db	101	;'e'
  4120  00FE15  73                 	db	115	;'s'
  4121  00FE16  20                 	db	32
  4122  00FE17  52                 	db	82	;'R'
  4123  00FE18  6F                 	db	111	;'o'
  4124  00FE19  6F                 	db	111	;'o'
  4125  00FE1A  6D                 	db	109	;'m'
  4126  00FE1B  3F                 	db	63	;'?'
  4127  00FE1C  00                 	db	0
  4128  00FE1D                     STR_51:
  4129  00FE1D  6C                 	db	108	;'l'
  4130  00FE1E  69                 	db	105	;'i'
  4131  00FE1F  76                 	db	118	;'v'
  4132  00FE20  69                 	db	105	;'i'
  4133  00FE21  6E                 	db	110	;'n'
  4134  00FE22  67                 	db	103	;'g'
  4135  00FE23  72                 	db	114	;'r'
  4136  00FE24  6F                 	db	111	;'o'
  4137  00FE25  6F                 	db	111	;'o'
  4138  00FE26  6D                 	db	109	;'m'
  4139  00FE27  00                 	db	0
  4140  00FE28                     STR_8:
  4141  00FE28  53                 	db	83	;'S'
  4142  00FE29  74                 	db	116	;'t'
  4143  00FE2A  61                 	db	97	;'a'
  4144  00FE2B  72                 	db	114	;'r'
  4145  00FE2C  74                 	db	116	;'t'
  4146  00FE2D  69                 	db	105	;'i'
  4147  00FE2E  6E                 	db	110	;'n'
  4148  00FE2F  67                 	db	103	;'g'
  4149  00FE30  2E                 	db	46
  4150  00FE31  2E                 	db	46
  4151  00FE32  00                 	db	0
  4152  00FE33                     STR_102:
  4153  00FE33  73                 	db	115	;'s'
  4154  00FE34  68                 	db	104	;'h'
  4155  00FE35  61                 	db	97	;'a'
  4156  00FE36  6B                 	db	107	;'k'
  4157  00FE37  65                 	db	101	;'e'
  4158  00FE38  72                 	db	114	;'r'
  4159  00FE39  0D                 	db	13
  4160  00FE3A  0A                 	db	10
  4161  00FE3B  0A                 	db	10
  4162  00FE3C  00                 	db	0
  4163  00FE3D                     STR_254:
  4164  00FE3D  42                 	db	66	;'B'
  4165  00FE3E  65                 	db	101	;'e'
  4166  00FE3F  64                 	db	100	;'d'
  4167  00FE40  72                 	db	114	;'r'
  4168  00FE41  6F                 	db	111	;'o'
  4169  00FE42  6F                 	db	111	;'o'
  4170  00FE43  6D                 	db	109	;'m'
  4171  00FE44  0D                 	db	13
  4172  00FE45  0A                 	db	10
  4173  00FE46  00                 	db	0
  4174  00FE47                     STR_223:
  4175  00FE47  42                 	db	66	;'B'
  4176  00FE48  61                 	db	97	;'a'
  4177  00FE49  74                 	db	116	;'t'
  4178  00FE4A  74                 	db	116	;'t'
  4179  00FE4B  65                 	db	101	;'e'
  4180  00FE4C  72                 	db	114	;'r'
  4181  00FE4D  79                 	db	121	;'y'
  4182  00FE4E  0D                 	db	13
  4183  00FE4F  0A                 	db	10
  4184  00FE50  00                 	db	0
  4185  00FE51                     STR_160:
  4186  00FE51  52                 	db	82	;'R'
  4187  00FE52  65                 	db	101	;'e'
  4188  00FE53  64                 	db	100	;'d'
  4189  00FE54  20                 	db	32
  4190  00FE55  4C                 	db	76	;'L'
  4191  00FE56  45                 	db	69	;'E'
  4192  00FE57  44                 	db	68	;'D'
  4193  00FE58  3D                 	db	61	;'='
  4194  00FE59  23                 	db	35
  4195  00FE5A  00                 	db	0
  4196  00FE5B                     STR_177:
  4197  00FE5B  43                 	db	67	;'C'
  4198  00FE5C  6F                 	db	111	;'o'
  4199  00FE5D  6E                 	db	110	;'n'
  4200  00FE5E  74                 	db	116	;'t'
  4201  00FE5F  72                 	db	114	;'r'
  4202  00FE60  61                 	db	97	;'a'
  4203  00FE61  73                 	db	115	;'s'
  4204  00FE62  74                 	db	116	;'t'
  4205  00FE63  23                 	db	35
  4206  00FE64  00                 	db	0
  4207  00FE65                     STR_159:
  4208  00FE65  43                 	db	67	;'C'
  4209  00FE66  6F                 	db	111	;'o'
  4210  00FE67  6D                 	db	109	;'m'
  4211  00FE68  6D                 	db	109	;'m'
  4212  00FE69  61                 	db	97	;'a'
  4213  00FE6A  6E                 	db	110	;'n'
  4214  00FE6B  64                 	db	100	;'d'
  4215  00FE6C  73                 	db	115	;'s'
  4216  00FE6D  3A                 	db	58	;':'
  4217  00FE6E  00                 	db	0
  4218  00FE6F                     STR_273:
  4219  00FE6F  43                 	db	67	;'C'
  4220  00FE70  6F                 	db	111	;'o'
  4221  00FE71  6E                 	db	110	;'n'
  4222  00FE72  74                 	db	116	;'t'
  4223  00FE73  72                 	db	114	;'r'
  4224  00FE74  61                 	db	97	;'a'
  4225  00FE75  73                 	db	115	;'s'
  4226  00FE76  74                 	db	116	;'t'
  4227  00FE77  3F                 	db	63	;'?'
  4228  00FE78  00                 	db	0
  4229  00FE79                     STR_113:
  4230  00FE79  63                 	db	99	;'c'
  4231  00FE7A  68                 	db	104	;'h'
  4232  00FE7B  72                 	db	114	;'r'
  4233  00FE7C  69                 	db	105	;'i'
  4234  00FE7D  73                 	db	115	;'s'
  4235  00FE7E  74                 	db	116	;'t'
  4236  00FE7F  6D                 	db	109	;'m'
  4237  00FE80  61                 	db	97	;'a'
  4238  00FE81  73                 	db	115	;'s'
  4239  00FE82  00                 	db	0
  4240  00FE83                     STR_135:
  4241  00FE83  58                 	db	88	;'X'
  4242  00FE84  4D                 	db	77	;'M'
  4243  00FE85  41                 	db	65	;'A'
  4244  00FE86  53                 	db	83	;'S'
  4245  00FE87  20                 	db	32
  4246  00FE88  4D                 	db	77	;'M'
  4247  00FE89  65                 	db	101	;'e'
  4248  00FE8A  6E                 	db	110	;'n'
  4249  00FE8B  75                 	db	117	;'u'
  4250  00FE8C  00                 	db	0
  4251  00FE8D                     STR_264:
  4252  00FE8D  48                 	db	72	;'H'
  4253  00FE8E  65                 	db	101	;'e'
  4254  00FE8F  6C                 	db	108	;'l'
  4255  00FE90  70                 	db	112	;'p'
  4256  00FE91  20                 	db	32
  4257  00FE92  4D                 	db	77	;'M'
  4258  00FE93  65                 	db	101	;'e'
  4259  00FE94  6E                 	db	110	;'n'
  4260  00FE95  75                 	db	117	;'u'
  4261  00FE96  00                 	db	0
  4262  00FE97                     STR_15:
  4263  00FE97  45                 	db	69	;'E'
  4264  00FE98  6E                 	db	110	;'n'
  4265  00FE99  74                 	db	116	;'t'
  4266  00FE9A  65                 	db	101	;'e'
  4267  00FE9B  72                 	db	114	;'r'
  4268  00FE9C  20                 	db	32
  4269  00FE9D  27                 	db	39
  4270  00FE9E  3F                 	db	63	;'?'
  4271  00FE9F  27                 	db	39
  4272  00FEA0  00                 	db	0
  4273  00FEA1                     STR_7:
  4274  00FEA1  53                 	db	83	;'S'
  4275  00FEA2  74                 	db	116	;'t'
  4276  00FEA3  61                 	db	97	;'a'
  4277  00FEA4  72                 	db	114	;'r'
  4278  00FEA5  74                 	db	116	;'t'
  4279  00FEA6  69                 	db	105	;'i'
  4280  00FEA7  6E                 	db	110	;'n'
  4281  00FEA8  67                 	db	103	;'g'
  4282  00FEA9  2E                 	db	46
  4283  00FEAA  00                 	db	0
  4284  00FEAB                     STR_246:
  4285  00FEAB  4C                 	db	76	;'L'
  4286  00FEAC  69                 	db	105	;'i'
  4287  00FEAD  67                 	db	103	;'g'
  4288  00FEAE  68                 	db	104	;'h'
  4289  00FEAF  74                 	db	116	;'t'
  4290  00FEB0  0D                 	db	13
  4291  00FEB1  0A                 	db	10
  4292  00FEB2  0A                 	db	10
  4293  00FEB3  00                 	db	0
  4294  00FEB4                     STR_48:
  4295  00FEB4  44                 	db	68	;'D'
  4296  00FEB5  65                 	db	101	;'e'
  4297  00FEB6  76                 	db	118	;'v'
  4298  00FEB7  69                 	db	105	;'i'
  4299  00FEB8  63                 	db	99	;'c'
  4300  00FEB9  65                 	db	101	;'e'
  4301  00FEBA  73                 	db	115	;'s'
  4302  00FEBB  3A                 	db	58	;':'
  4303  00FEBC  00                 	db	0
  4304  00FEBD                     STR_269:
  4305  00FEBD  42                 	db	66	;'B'
  4306  00FEBE  65                 	db	101	;'e'
  4307  00FEBF  64                 	db	100	;'d'
  4308  00FEC0  72                 	db	114	;'r'
  4309  00FEC1  6F                 	db	111	;'o'
  4310  00FEC2  6F                 	db	111	;'o'
  4311  00FEC3  6D                 	db	109	;'m'
  4312  00FEC4  3F                 	db	63	;'?'
  4313  00FEC5  00                 	db	0
  4314  00FEC6                     STR_28:
  4315  00FEC6  4C                 	db	76	;'L'
  4316  00FEC7  45                 	db	69	;'E'
  4317  00FEC8  44                 	db	68	;'D'
  4318  00FEC9  30                 	db	48	;'0'
  4319  00FECA  20                 	db	32
  4320  00FECB  4F                 	db	79	;'O'
  4321  00FECC  66                 	db	102	;'f'
  4322  00FECD  66                 	db	102	;'f'
  4323  00FECE  00                 	db	0
  4324  00FECF                     STR_37:
  4325  00FECF  4C                 	db	76	;'L'
  4326  00FED0  45                 	db	69	;'E'
  4327  00FED1  44                 	db	68	;'D'
  4328  00FED2  31                 	db	49	;'1'
  4329  00FED3  20                 	db	32
  4330  00FED4  4F                 	db	79	;'O'
  4331  00FED5  66                 	db	102	;'f'
  4332  00FED6  66                 	db	102	;'f'
  4333  00FED7  00                 	db	0
  4334  00FED8                     STR_27:
  4335  00FED8  6C                 	db	108	;'l'
  4336  00FED9  65                 	db	101	;'e'
  4337  00FEDA  64                 	db	100	;'d'
  4338  00FEDB  30                 	db	48	;'0'
  4339  00FEDC  3D                 	db	61	;'='
  4340  00FEDD  6F                 	db	111	;'o'
  4341  00FEDE  66                 	db	102	;'f'
  4342  00FEDF  66                 	db	102	;'f'
  4343  00FEE0  00                 	db	0
  4344  00FEE1                     STR_36:
  4345  00FEE1  6C                 	db	108	;'l'
  4346  00FEE2  65                 	db	101	;'e'
  4347  00FEE3  64                 	db	100	;'d'
  4348  00FEE4  31                 	db	49	;'1'
  4349  00FEE5  3D                 	db	61	;'='
  4350  00FEE6  6F                 	db	111	;'o'
  4351  00FEE7  66                 	db	102	;'f'
  4352  00FEE8  66                 	db	102	;'f'
  4353  00FEE9  00                 	db	0
  4354  00FEEA                     STR_161:
  4355  00FEEA  63                 	db	99	;'c'
  4356  00FEEB  6F                 	db	111	;'o'
  4357  00FEEC  6E                 	db	110	;'n'
  4358  00FEED  74                 	db	116	;'t'
  4359  00FEEE  72                 	db	114	;'r'
  4360  00FEEF  61                 	db	97	;'a'
  4361  00FEF0  73                 	db	115	;'s'
  4362  00FEF1  74                 	db	116	;'t'
  4363  00FEF2  00                 	db	0
  4364  00FEF3                     STR_196:
  4365  00FEF3  41                 	db	65	;'A'
  4366  00FEF4  44                 	db	68	;'D'
  4367  00FEF5  43                 	db	67	;'C'
  4368  00FEF6  20                 	db	32
  4369  00FEF7  4D                 	db	77	;'M'
  4370  00FEF8  65                 	db	101	;'e'
  4371  00FEF9  6E                 	db	110	;'n'
  4372  00FEFA  75                 	db	117	;'u'
  4373  00FEFB  00                 	db	0
  4374  00FEFC                     STR_229:
  4375  00FEFC  52                 	db	82	;'R'
  4376  00FEFD  54                 	db	84	;'T'
  4377  00FEFE  43                 	db	67	;'C'
  4378  00FEFF  20                 	db	32
  4379  00FF00  4D                 	db	77	;'M'
  4380  00FF01  65                 	db	101	;'e'
  4381  00FF02  6E                 	db	110	;'n'
  4382  00FF03  75                 	db	117	;'u'
  4383  00FF04  00                 	db	0
  4384  00FF05                     STR_47:
  4385  00FF05  4C                 	db	76	;'L'
  4386  00FF06  45                 	db	69	;'E'
  4387  00FF07  44                 	db	68	;'D'
  4388  00FF08  20                 	db	32
  4389  00FF09  4D                 	db	77	;'M'
  4390  00FF0A  65                 	db	101	;'e'
  4391  00FF0B  6E                 	db	110	;'n'
  4392  00FF0C  75                 	db	117	;'u'
  4393  00FF0D  00                 	db	0
  4394  00FF0E                     STR_6:
  4395  00FF0E  53                 	db	83	;'S'
  4396  00FF0F  74                 	db	116	;'t'
  4397  00FF10  61                 	db	97	;'a'
  4398  00FF11  72                 	db	114	;'r'
  4399  00FF12  74                 	db	116	;'t'
  4400  00FF13  69                 	db	105	;'i'
  4401  00FF14  6E                 	db	110	;'n'
  4402  00FF15  67                 	db	103	;'g'
  4403  00FF16  00                 	db	0
  4404  00FF17                     STR_44:
  4405  00FF17  4C                 	db	76	;'L'
  4406  00FF18  45                 	db	69	;'E'
  4407  00FF19  44                 	db	68	;'D'
  4408  00FF1A  31                 	db	49	;'1'
  4409  00FF1B  0D                 	db	13
  4410  00FF1C  0A                 	db	10
  4411  00FF1D  0A                 	db	10
  4412  00FF1E  00                 	db	0
  4413  00FF1F                     STR_67:
  4414  00FF1F  6C                 	db	108	;'l'
  4415  00FF20  69                 	db	105	;'i'
  4416  00FF21  67                 	db	103	;'g'
  4417  00FF22  68                 	db	104	;'h'
  4418  00FF23  74                 	db	116	;'t'
  4419  00FF24  0D                 	db	13
  4420  00FF25  0A                 	db	10
  4421  00FF26  00                 	db	0
  4422  00FF27                     STR_76:
  4423  00FF27  62                 	db	98	;'b'
  4424  00FF28  65                 	db	101	;'e'
  4425  00FF29  64                 	db	100	;'d'
  4426  00FF2A  72                 	db	114	;'r'
  4427  00FF2B  6F                 	db	111	;'o'
  4428  00FF2C  6F                 	db	111	;'o'
  4429  00FF2D  6D                 	db	109	;'m'
  4430  00FF2E  00                 	db	0
  4431  00FF2F                     STR_25:
  4432  00FF2F  4C                 	db	76	;'L'
  4433  00FF30  45                 	db	69	;'E'
  4434  00FF31  44                 	db	68	;'D'
  4435  00FF32  30                 	db	48	;'0'
  4436  00FF33  20                 	db	32
  4437  00FF34  4F                 	db	79	;'O'
  4438  00FF35  6E                 	db	110	;'n'
  4439  00FF36  00                 	db	0
  4440  00FF37                     STR_34:
  4441  00FF37  4C                 	db	76	;'L'
  4442  00FF38  45                 	db	69	;'E'
  4443  00FF39  44                 	db	68	;'D'
  4444  00FF3A  31                 	db	49	;'1'
  4445  00FF3B  20                 	db	32
  4446  00FF3C  4F                 	db	79	;'O'
  4447  00FF3D  6E                 	db	110	;'n'
  4448  00FF3E  00                 	db	0
  4449  00FF3F                     STR_24:
  4450  00FF3F  6C                 	db	108	;'l'
  4451  00FF40  65                 	db	101	;'e'
  4452  00FF41  64                 	db	100	;'d'
  4453  00FF42  30                 	db	48	;'0'
  4454  00FF43  3D                 	db	61	;'='
  4455  00FF44  6F                 	db	111	;'o'
  4456  00FF45  6E                 	db	110	;'n'
  4457  00FF46  00                 	db	0
  4458  00FF47                     STR_33:
  4459  00FF47  6C                 	db	108	;'l'
  4460  00FF48  65                 	db	101	;'e'
  4461  00FF49  64                 	db	100	;'d'
  4462  00FF4A  31                 	db	49	;'1'
  4463  00FF4B  3D                 	db	61	;'='
  4464  00FF4C  6F                 	db	111	;'o'
  4465  00FF4D  6E                 	db	110	;'n'
  4466  00FF4E  00                 	db	0
  4467  00FF4F                     STR_231:
  4468  00FF4F  42                 	db	66	;'B'
  4469  00FF50  61                 	db	97	;'a'
  4470  00FF51  74                 	db	116	;'t'
  4471  00FF52  74                 	db	116	;'t'
  4472  00FF53  65                 	db	101	;'e'
  4473  00FF54  72                 	db	114	;'r'
  4474  00FF55  79                 	db	121	;'y'
  4475  00FF56  00                 	db	0
  4476  00FF57                     STR_201:
  4477  00FF57  62                 	db	98	;'b'
  4478  00FF58  61                 	db	97	;'a'
  4479  00FF59  74                 	db	116	;'t'
  4480  00FF5A  74                 	db	116	;'t'
  4481  00FF5B  65                 	db	101	;'e'
  4482  00FF5C  72                 	db	114	;'r'
  4483  00FF5D  79                 	db	121	;'y'
  4484  00FF5E  00                 	db	0
  4485  00FF5F                     STR_260:
  4486  00FF5F  52                 	db	82	;'R'
  4487  00FF60  54                 	db	84	;'T'
  4488  00FF61  43                 	db	67	;'C'
  4489  00FF62  0D                 	db	13
  4490  00FF63  0A                 	db	10
  4491  00FF64  0A                 	db	10
  4492  00FF65  00                 	db	0
  4493  00FF66                     STR_68:
  4494  00FF66  66                 	db	102	;'f'
  4495  00FF67  61                 	db	97	;'a'
  4496  00FF68  6E                 	db	110	;'n'
  4497  00FF69  0D                 	db	13
  4498  00FF6A  0A                 	db	10
  4499  00FF6B  0A                 	db	10
  4500  00FF6C  00                 	db	0
  4501  00FF6D                     STR_225:
  4502  00FF6D  53                 	db	83	;'S'
  4503  00FF6E  65                 	db	101	;'e'
  4504  00FF6F  74                 	db	116	;'t'
  4505  00FF70  0D                 	db	13
  4506  00FF71  0A                 	db	10
  4507  00FF72  0A                 	db	10
  4508  00FF73  00                 	db	0
  4509  00FF74                     STR_43:
  4510  00FF74  4C                 	db	76	;'L'
  4511  00FF75  45                 	db	69	;'E'
  4512  00FF76  44                 	db	68	;'D'
  4513  00FF77  30                 	db	48	;'0'
  4514  00FF78  0D                 	db	13
  4515  00FF79  0A                 	db	10
  4516  00FF7A  00                 	db	0
  4517  00FF7B                     STR_224:
  4518  00FF7B  52                 	db	82	;'R'
  4519  00FF7C  65                 	db	101	;'e'
  4520  00FF7D  61                 	db	97	;'a'
  4521  00FF7E  64                 	db	100	;'d'
  4522  00FF7F  0D                 	db	13
  4523  00FF80  0A                 	db	10
  4524  00FF81  00                 	db	0
  4525  00FF82                     STR_141:
  4526  00FF82  72                 	db	114	;'r'
  4527  00FF83  65                 	db	101	;'e'
  4528  00FF84  64                 	db	100	;'d'
  4529  00FF85  6C                 	db	108	;'l'
  4530  00FF86  65                 	db	101	;'e'
  4531  00FF87  64                 	db	100	;'d'
  4532  00FF88  00                 	db	0
  4533  00FF89                     STR_110:
  4534  00FF89  53                 	db	83	;'S'
  4535  00FF8A  68                 	db	104	;'h'
  4536  00FF8B  61                 	db	97	;'a'
  4537  00FF8C  6B                 	db	107	;'k'
  4538  00FF8D  65                 	db	101	;'e'
  4539  00FF8E  72                 	db	114	;'r'
  4540  00FF8F  00                 	db	0
  4541  00FF90                     STR_259:
  4542  00FF90  41                 	db	65	;'A'
  4543  00FF91  44                 	db	68	;'D'
  4544  00FF92  43                 	db	67	;'C'
  4545  00FF93  0D                 	db	13
  4546  00FF94  0A                 	db	10
  4547  00FF95  00                 	db	0
  4548  00FF96                     STR_101:
  4549  00FF96  66                 	db	102	;'f'
  4550  00FF97  61                 	db	97	;'a'
  4551  00FF98  6E                 	db	110	;'n'
  4552  00FF99  0D                 	db	13
  4553  00FF9A  0A                 	db	10
  4554  00FF9B  00                 	db	0
  4555  00FF9C                     STR_112:
  4556  00FF9C  77                 	db	119	;'w'
  4557  00FF9D  68                 	db	104	;'h'
  4558  00FF9E  69                 	db	105	;'i'
  4559  00FF9F  74                 	db	116	;'t'
  4560  00FFA0  65                 	db	101	;'e'
  4561  00FFA1  00                 	db	0
  4562  00FFA2                     STR_111:
  4563  00FFA2  63                 	db	99	;'c'
  4564  00FFA3  6F                 	db	111	;'o'
  4565  00FFA4  6C                 	db	108	;'l'
  4566  00FFA5  6F                 	db	111	;'o'
  4567  00FFA6  72                 	db	114	;'r'
  4568  00FFA7  00                 	db	0
  4569  00FFA8                     STR_74:
  4570  00FFA8  4C                 	db	76	;'L'
  4571  00FFA9  69                 	db	105	;'i'
  4572  00FFAA  67                 	db	103	;'g'
  4573  00FFAB  68                 	db	104	;'h'
  4574  00FFAC  74                 	db	116	;'t'
  4575  00FFAD  00                 	db	0
  4576  00FFAE                     STR_78:
  4577  00FFAE  6C                 	db	108	;'l'
  4578  00FFAF  69                 	db	105	;'i'
  4579  00FFB0  67                 	db	103	;'g'
  4580  00FFB1  68                 	db	104	;'h'
  4581  00FFB2  74                 	db	116	;'t'
  4582  00FFB3  00                 	db	0
  4583  00FFB4                     STR_193:
  4584  00FFB4  30                 	db	48	;'0'
  4585  00FFB5  0D                 	db	13
  4586  00FFB6  0A                 	db	10
  4587  00FFB7  0A                 	db	10
  4588  00FFB8  00                 	db	0
  4589  00FFB9                     STR_49:
  4590  00FFB9  4C                 	db	76	;'L'
  4591  00FFBA  45                 	db	69	;'E'
  4592  00FFBB  44                 	db	68	;'D'
  4593  00FFBC  30                 	db	48	;'0'
  4594  00FFBD  00                 	db	0
  4595  00FFBE                     STR_21:
  4596  00FFBE  6C                 	db	108	;'l'
  4597  00FFBF  65                 	db	101	;'e'
  4598  00FFC0  64                 	db	100	;'d'
  4599  00FFC1  30                 	db	48	;'0'
  4600  00FFC2  00                 	db	0
  4601  00FFC3                     STR_50:
  4602  00FFC3  4C                 	db	76	;'L'
  4603  00FFC4  45                 	db	69	;'E'
  4604  00FFC5  44                 	db	68	;'D'
  4605  00FFC6  31                 	db	49	;'1'
  4606  00FFC7  00                 	db	0
  4607  00FFC8                     STR_30:
  4608  00FFC8  6C                 	db	108	;'l'
  4609  00FFC9  65                 	db	101	;'e'
  4610  00FFCA  64                 	db	100	;'d'
  4611  00FFCB  31                 	db	49	;'1'
  4612  00FFCC  00                 	db	0
  4613  00FFCD                     STR_274:
  4614  00FFCD  41                 	db	65	;'A'
  4615  00FFCE  44                 	db	68	;'D'
  4616  00FFCF  43                 	db	67	;'C'
  4617  00FFD0  3F                 	db	63	;'?'
  4618  00FFD1  00                 	db	0
  4619  00FFD2                     STR_275:
  4620  00FFD2  52                 	db	82	;'R'
  4621  00FFD3  54                 	db	84	;'T'
  4622  00FFD4  43                 	db	67	;'C'
  4623  00FFD5  3F                 	db	63	;'?'
  4624  00FFD6  00                 	db	0
  4625  00FFD7                     STR_232:
  4626  00FFD7  52                 	db	82	;'R'
  4627  00FFD8  65                 	db	101	;'e'
  4628  00FFD9  61                 	db	97	;'a'
  4629  00FFDA  64                 	db	100	;'d'
  4630  00FFDB  00                 	db	0
  4631  00FFDC                     STR_204:
  4632  00FFDC  72                 	db	114	;'r'
  4633  00FFDD  65                 	db	101	;'e'
  4634  00FFDE  61                 	db	97	;'a'
  4635  00FFDF  64                 	db	100	;'d'
  4636  00FFE0  00                 	db	0
  4637  00FFE1                     STR_178:
  4638  00FFE1  61                 	db	97	;'a'
  4639  00FFE2  64                 	db	100	;'d'
  4640  00FFE3  63                 	db	99	;'c'
  4641  00FFE4  00                 	db	0
  4642  00FFE5                     STR_199:
  4643  00FFE5  72                 	db	114	;'r'
  4644  00FFE6  74                 	db	116	;'t'
  4645  00FFE7  63                 	db	99	;'c'
  4646  00FFE8  00                 	db	0
  4647  00FFE9                     STR_234:
  4648  00FFE9  6A                 	db	106	;'j'
  4649  00FFEA  6F                 	db	111	;'o'
  4650  00FFEB  65                 	db	101	;'e'
  4651  00FFEC  00                 	db	0
  4652  00FFED                     STR_75:
  4653  00FFED  46                 	db	70	;'F'
  4654  00FFEE  61                 	db	97	;'a'
  4655  00FFEF  6E                 	db	110	;'n'
  4656  00FFF0  00                 	db	0
  4657  00FFF1                     STR_79:
  4658  00FFF1  66                 	db	102	;'f'
  4659  00FFF2  61                 	db	97	;'a'
  4660  00FFF3  6E                 	db	110	;'n'
  4661  00FFF4  00                 	db	0
  4662  00FFF5                     STR_233:
  4663  00FFF5  53                 	db	83	;'S'
  4664  00FFF6  65                 	db	101	;'e'
  4665  00FFF7  74                 	db	116	;'t'
  4666  00FFF8  00                 	db	0
  4667  00FFF9                     STR_211:
  4668  00FFF9  73                 	db	115	;'s'
  4669  00FFFA  65                 	db	101	;'e'
  4670  00FFFB  74                 	db	116	;'t'
  4671  00FFFC  00                 	db	0
  4672  00FFFD                     STR_1:
  4673  00FFFD  0D                 	db	13
  4674  00FFFE  00                 	db	0
  4675  00FFFF                     __end_of__stringdata:
  4676                           	opt stack 0
  4677                           
  4678                           ; #config settings
  4679  00FFFF  00                 	db	0	; dummy byte at the end
  4680  0000                     
  4681                           	psect	cinit
  4682  016678                     __pcinit:
  4683                           	opt stack 0
  4684  016678                     start_initialization:
  4685                           	opt stack 0
  4686  016678                     __initialization:
  4687                           	opt stack 0
  4688                           
  4689                           ; Clear objects allocated to BANK4 (100 bytes)
  4690  016678  EE04  F000         	lfsr	0,__pbssBANK4
  4691  01667C  0E64               	movlw	100
  4692  01667E                     clear_0:
  4693  01667E  6AEE               	clrf	postinc0,c
  4694  016680  06E8               	decf	wreg,f,c
  4695  016682  E1FD               	bnz	clear_0
  4696                           
  4697                           ; Clear objects allocated to BANK3 (200 bytes)
  4698  016684  EE03  F000         	lfsr	0,__pbssBANK3
  4699  016688  0EC8               	movlw	200
  4700  01668A                     clear_1:
  4701  01668A  6AEE               	clrf	postinc0,c
  4702  01668C  06E8               	decf	wreg,f,c
  4703  01668E  E1FD               	bnz	clear_1
  4704                           
  4705                           ; Clear objects allocated to BANK1 (109 bytes)
  4706  016690  EE01  F000         	lfsr	0,__pbssBANK1
  4707  016694  0E6D               	movlw	109
  4708  016696                     clear_2:
  4709  016696  6AEE               	clrf	postinc0,c
  4710  016698  06E8               	decf	wreg,f,c
  4711  01669A  E1FD               	bnz	clear_2
  4712                           
  4713                           ; Clear objects allocated to BANK0 (33 bytes)
  4714  01669C  EE00  F0D8         	lfsr	0,__pbssBANK0
  4715  0166A0  0E21               	movlw	33
  4716  0166A2                     clear_3:
  4717  0166A2  6AEE               	clrf	postinc0,c
  4718  0166A4  06E8               	decf	wreg,f,c
  4719  0166A6  E1FD               	bnz	clear_3
  4720                           
  4721                           ; Clear objects allocated to COMRAM (32 bytes)
  4722  0166A8  EE00  F027         	lfsr	0,__pbssCOMRAM
  4723  0166AC  0E20               	movlw	32
  4724  0166AE                     clear_4:
  4725  0166AE  6AEE               	clrf	postinc0,c
  4726  0166B0  06E8               	decf	wreg,f,c
  4727  0166B2  E1FD               	bnz	clear_4
  4728                           
  4729                           ; Initialize objects allocated to BANK1 (4 bytes)
  4730                           ; load TBLPTR registers with __pidataBANK1
  4731  0166B4  0E26               	movlw	low __pidataBANK1
  4732  0166B6  6EF6               	movwf	tblptrl,c
  4733  0166B8  0E6D               	movlw	high __pidataBANK1
  4734  0166BA  6EF7               	movwf	tblptrh,c
  4735  0166BC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4736  0166BE  6EF8               	movwf	tblptru,c
  4737  0166C0  EE01  F0C8         	lfsr	0,__pdataBANK1
  4738  0166C4  EE10 F004          	lfsr	1,4
  4739  0166C8                     copy_data0:
  4740  0166C8  0009               	tblrd		*+
  4741  0166CA  CFF5 FFEE          	movff	tablat,postinc0
  4742  0166CE  50E5               	movf	postdec1,w,c
  4743  0166D0  50E1               	movf	fsr1l,w,c
  4744  0166D2  E1FA               	bnz	copy_data0
  4745  0166D4                     end_of_initialization:
  4746                           	opt stack 0
  4747  0166D4                     __end_of__initialization:
  4748                           	opt stack 0
  4749  0166D4  0100               	movlb	0
  4750  0166D6  EF00  F09D         	goto	_main	;jump to C main() function
  4751                           tblptru	equ	0xFF8
  4752                           tblptrh	equ	0xFF7
  4753                           tblptrl	equ	0xFF6
  4754                           tablat	equ	0xFF5
  4755                           postinc0	equ	0xFEE
  4756                           wreg	equ	0xFE8
  4757                           postdec1	equ	0xFE5
  4758                           fsr1l	equ	0xFE1
  4759                           
  4760                           	psect	bssCOMRAM
  4761  000027                     __pbssCOMRAM:
  4762                           	opt stack 0
  4763  000027                     _Scroll_7:
  4764                           	opt stack 0
  4765  000027                     	ds	16
  4766  000037                     _Scroll_8:
  4767                           	opt stack 0
  4768  000037                     	ds	16
  4769                           tblptru	equ	0xFF8
  4770                           tblptrh	equ	0xFF7
  4771                           tblptrl	equ	0xFF6
  4772                           tablat	equ	0xFF5
  4773                           postinc0	equ	0xFEE
  4774                           wreg	equ	0xFE8
  4775                           postdec1	equ	0xFE5
  4776                           fsr1l	equ	0xFE1
  4777                           
  4778                           	psect	bssBANK0
  4779  0000D8                     __pbssBANK0:
  4780                           	opt stack 0
  4781  0000D8                     _bufferCount:
  4782                           	opt stack 0
  4783  0000D8                     	ds	1
  4784  0000D9                     _Scroll_10:
  4785                           	opt stack 0
  4786  0000D9                     	ds	16
  4787  0000E9                     _Scroll_9:
  4788                           	opt stack 0
  4789  0000E9                     	ds	16
  4790                           tblptru	equ	0xFF8
  4791                           tblptrh	equ	0xFF7
  4792                           tblptrl	equ	0xFF6
  4793                           tablat	equ	0xFF5
  4794                           postinc0	equ	0xFEE
  4795                           wreg	equ	0xFE8
  4796                           postdec1	equ	0xFE5
  4797                           fsr1l	equ	0xFE1
  4798                           
  4799                           	psect	bssBANK1
  4800  000100                     __pbssBANK1:
  4801                           	opt stack 0
  4802  000100                     _NowTime:
  4803                           	opt stack 0
  4804  000100                     	ds	9
  4805  000109                     _LCDwait:
  4806                           	opt stack 0
  4807  000109                     	ds	1
  4808  00010A                     _ScrollDisplayPosition:
  4809                           	opt stack 0
  4810  00010A                     	ds	1
  4811  00010B                     _ScrollFIFOCount:
  4812                           	opt stack 0
  4813  00010B                     	ds	1
  4814  00010C                     _USART_Status:
  4815                           	opt stack 0
  4816  00010C                     	ds	1
  4817  00010D                     _Scroll_1:
  4818                           	opt stack 0
  4819  00010D                     	ds	16
  4820  00011D                     _Scroll_2:
  4821                           	opt stack 0
  4822  00011D                     	ds	16
  4823  00012D                     _Scroll_3:
  4824                           	opt stack 0
  4825  00012D                     	ds	16
  4826  00013D                     _Scroll_4:
  4827                           	opt stack 0
  4828  00013D                     	ds	16
  4829  00014D                     _Scroll_5:
  4830                           	opt stack 0
  4831  00014D                     	ds	16
  4832  00015D                     _Scroll_6:
  4833                           	opt stack 0
  4834  00015D                     	ds	16
  4835                           tblptru	equ	0xFF8
  4836                           tblptrh	equ	0xFF7
  4837                           tblptrl	equ	0xFF6
  4838                           tablat	equ	0xFF5
  4839                           postinc0	equ	0xFEE
  4840                           wreg	equ	0xFE8
  4841                           postdec1	equ	0xFE5
  4842                           fsr1l	equ	0xFE1
  4843                           
  4844                           	psect	dataBANK1
  4845  0001C8                     __pdataBANK1:
  4846                           	opt stack 0
  4847  0001C8                     _LCDclearCount:
  4848                           	opt stack 0
  4849  0001C8                     	ds	4
  4850                           tblptru	equ	0xFF8
  4851                           tblptrh	equ	0xFF7
  4852                           tblptrl	equ	0xFF6
  4853                           tablat	equ	0xFF5
  4854                           postinc0	equ	0xFEE
  4855                           wreg	equ	0xFE8
  4856                           postdec1	equ	0xFE5
  4857                           fsr1l	equ	0xFE1
  4858                           
  4859                           	psect	bssBANK3
  4860  000300                     __pbssBANK3:
  4861                           	opt stack 0
  4862  000300                     _buf:
  4863                           	opt stack 0
  4864  000300                     	ds	100
  4865  000364                     _Rxdata:
  4866                           	opt stack 0
  4867  000364                     	ds	100
  4868                           tblptru	equ	0xFF8
  4869                           tblptrh	equ	0xFF7
  4870                           tblptrl	equ	0xFF6
  4871                           tablat	equ	0xFF5
  4872                           postinc0	equ	0xFEE
  4873                           wreg	equ	0xFE8
  4874                           postdec1	equ	0xFE5
  4875                           fsr1l	equ	0xFE1
  4876                           
  4877                           	psect	bssBANK4
  4878  000400                     __pbssBANK4:
  4879                           	opt stack 0
  4880  000400                     _Txdata:
  4881                           	opt stack 0
  4882  000400                     	ds	100
  4883                           tblptru	equ	0xFF8
  4884                           tblptrh	equ	0xFF7
  4885                           tblptrl	equ	0xFF6
  4886                           tablat	equ	0xFF5
  4887                           postinc0	equ	0xFEE
  4888                           wreg	equ	0xFE8
  4889                           postdec1	equ	0xFE5
  4890                           fsr1l	equ	0xFE1
  4891                           
  4892                           	psect	cstackBANK5
  4893  000500                     __pcstackBANK5:
  4894                           	opt stack 0
  4895  000500                     Command@buf:
  4896                           	opt stack 0
  4897                           
  4898                           ; 200 bytes @ 0x0
  4899  000500                     	ds	200
  4900  0005C8                     Command@ADC_Value:
  4901                           	opt stack 0
  4902                           
  4903                           ; 2 bytes @ 0xC8
  4904  0005C8                     	ds	2
  4905  0005CA                     Command@RTC_Battery_Value:
  4906                           	opt stack 0
  4907                           
  4908                           ; 2 bytes @ 0xCA
  4909  0005CA                     	ds	2
  4910  0005CC                     Command@RTC_Battery_Value_HIGH_decimal:
  4911                           	opt stack 0
  4912                           
  4913                           ; 2 bytes @ 0xCC
  4914  0005CC                     	ds	2
  4915  0005CE                     Command@RTC_Battery_Value_LOW_decimal:
  4916                           	opt stack 0
  4917                           
  4918                           ; 2 bytes @ 0xCE
  4919  0005CE                     	ds	2
  4920  0005D0                     Command@contrast:
  4921                           	opt stack 0
  4922                           
  4923                           ; 2 bytes @ 0xD0
  4924  0005D0                     	ds	2
  4925  0005D2                     Command@channel:
  4926                           	opt stack 0
  4927                           
  4928                           ; 2 bytes @ 0xD2
  4929  0005D2                     	ds	2
  4930  0005D4                     Command@duty:
  4931                           	opt stack 0
  4932                           
  4933                           ; 2 bytes @ 0xD4
  4934  0005D4                     	ds	2
  4935                           tblptru	equ	0xFF8
  4936                           tblptrh	equ	0xFF7
  4937                           tblptrl	equ	0xFF6
  4938                           tablat	equ	0xFF5
  4939                           postinc0	equ	0xFEE
  4940                           wreg	equ	0xFE8
  4941                           postdec1	equ	0xFE5
  4942                           fsr1l	equ	0xFE1
  4943                           
  4944                           	psect	cstackBANK2
  4945  000200                     __pcstackBANK2:
  4946                           	opt stack 0
  4947  000200                     RemoveSpaces@That:
  4948                           	opt stack 0
  4949  000200                     StringAddEqual@temp:
  4950                           	opt stack 0
  4951                           
  4952                           ; 100 bytes @ 0x0
  4953  000200                     	ds	100
  4954  000264                     StringAddEqual@firstnumber:
  4955                           	opt stack 0
  4956  000264                     RemoveSpaces@address:
  4957                           	opt stack 0
  4958                           
  4959                           ; 2 bytes @ 0x64
  4960  000264                     	ds	1
  4961  000265                     StringAddEqual@i:
  4962                           	opt stack 0
  4963                           
  4964                           ; 1 bytes @ 0x65
  4965  000265                     	ds	1
  4966  000266                     RemoveSpaces@i:
  4967                           	opt stack 0
  4968  000266                     StringAddEqual@j:
  4969                           	opt stack 0
  4970                           
  4971                           ; 1 bytes @ 0x66
  4972  000266                     	ds	1
  4973                           tblptru	equ	0xFF8
  4974                           tblptrh	equ	0xFF7
  4975                           tblptrl	equ	0xFF6
  4976                           tablat	equ	0xFF5
  4977                           postinc0	equ	0xFEE
  4978                           wreg	equ	0xFE8
  4979                           postdec1	equ	0xFE5
  4980                           fsr1l	equ	0xFE1
  4981                           
  4982                           	psect	cstackBANK1
  4983  00016D                     __pcstackBANK1:
  4984                           	opt stack 0
  4985  00016D                     ??_high_isr:
  4986                           
  4987                           ; 0 bytes @ 0x0
  4988  00016D                     	ds	14
  4989  00017B                     ??_readI2C:
  4990  00017B                     ??_isdigit:
  4991  00017B                     ??_IdleI2C:
  4992  00017B                     ?___wmul:
  4993                           	opt stack 0
  4994  00017B                     ?___awdiv:
  4995                           	opt stack 0
  4996  00017B                     ?___awmod:
  4997                           	opt stack 0
  4998  00017B                     ?___lwdiv:
  4999                           	opt stack 0
  5000  00017B                     ?___ftpack:
  5001                           	opt stack 0
  5002  00017B                     baudUSART@baudconfig:
  5003                           	opt stack 0
  5004  00017B                     ReadUSART@data:
  5005                           	opt stack 0
  5006  00017B                     EnableInternalADC@config:
  5007                           	opt stack 0
  5008  00017B                     OpenI2C@slew:
  5009                           	opt stack 0
  5010  00017B                     WriteUSART@data:
  5011                           	opt stack 0
  5012  00017B                     cleanBuffer@data:
  5013                           	opt stack 0
  5014  00017B                     StringMatch@This:
  5015                           	opt stack 0
  5016  00017B                     StringContains@This:
  5017                           	opt stack 0
  5018  00017B                     StartsWith@This:
  5019                           	opt stack 0
  5020  00017B                     lowercase@Input:
  5021                           	opt stack 0
  5022  00017B                     OpenUSART@spbrg:
  5023                           	opt stack 0
  5024  00017B                     Parse_Time@This:
  5025                           	opt stack 0
  5026  00017B                     ___wmul@multiplier:
  5027                           	opt stack 0
  5028  00017B                     ___awdiv@dividend:
  5029                           	opt stack 0
  5030  00017B                     ___awmod@dividend:
  5031                           	opt stack 0
  5032  00017B                     ___lwdiv@dividend:
  5033                           	opt stack 0
  5034  00017B                     ___ftpack@arg:
  5035                           	opt stack 0
  5036  00017B                     delayUS@US:
  5037                           	opt stack 0
  5038                           
  5039                           ; 4 bytes @ 0xE
  5040  00017B                     	ds	1
  5041  00017C                     ??_WriteI2C:
  5042  00017C                     EnableInternalADC@channels:
  5043                           	opt stack 0
  5044  00017C                     OpenI2C@sync_mode:
  5045                           	opt stack 0
  5046  00017C                     _isdigit$2562:
  5047                           	opt stack 0
  5048  00017C                     UARTstring@data:
  5049                           	opt stack 0
  5050  00017C                     Multiple_I2C_Read@rdptr:
  5051                           	opt stack 0
  5052                           
  5053                           ; 2 bytes @ 0xF
  5054  00017C                     	ds	1
  5055  00017D                     ??_OpenUSART:
  5056  00017D                     ??_Parse_Time:
  5057  00017D                     ??_lowercase:
  5058  00017D                     WriteI2C@data_out:
  5059                           	opt stack 0
  5060  00017D                     isdigit@c:
  5061                           	opt stack 0
  5062  00017D                     cleanBuffer@count:
  5063                           	opt stack 0
  5064  00017D                     StringMatch@That:
  5065                           	opt stack 0
  5066  00017D                     StringContains@That:
  5067                           	opt stack 0
  5068  00017D                     StartsWith@That:
  5069                           	opt stack 0
  5070  00017D                     Init_I2C_Master@baud:
  5071                           	opt stack 0
  5072  00017D                     ___wmul@multiplicand:
  5073                           	opt stack 0
  5074  00017D                     ___awdiv@divisor:
  5075                           	opt stack 0
  5076  00017D                     ___awmod@divisor:
  5077                           	opt stack 0
  5078  00017D                     ___lwdiv@divisor:
  5079                           	opt stack 0
  5080                           
  5081                           ; 2 bytes @ 0x10
  5082  00017D                     	ds	1
  5083  00017E                     ??_UARTstring:
  5084  00017E                     ?_I2C_Read_At_Address:
  5085                           	opt stack 0
  5086  00017E                     lowercase@i:
  5087                           	opt stack 0
  5088  00017E                     Parse_Time@temp:
  5089                           	opt stack 0
  5090  00017E                     I2C_Write_At_Address@Register:
  5091                           	opt stack 0
  5092  00017E                     I2C_Read_At_Address@Register:
  5093                           	opt stack 0
  5094  00017E                     Multiple_I2C_Read@length:
  5095                           	opt stack 0
  5096  00017E                     ___ftpack@exp:
  5097                           	opt stack 0
  5098                           
  5099                           ; 1 bytes @ 0x11
  5100  00017E                     	ds	1
  5101  00017F                     ??_cleanBuffer:
  5102  00017F                     ??_delayUS:
  5103  00017F                     ??_Multiple_I2C_Read:
  5104  00017F                     ??_StringContains:
  5105  00017F                     ??_StartsWith:
  5106  00017F                     I2C_Write_At_Address@data:
  5107                           	opt stack 0
  5108  00017F                     ___awdiv@counter:
  5109                           	opt stack 0
  5110  00017F                     ___awmod@counter:
  5111                           	opt stack 0
  5112  00017F                     ___ftpack@sign:
  5113                           	opt stack 0
  5114  00017F                     ___lwdiv@counter:
  5115                           	opt stack 0
  5116  00017F                     ___wmul@product:
  5117                           	opt stack 0
  5118  00017F                     Parse_Time@TempTime:
  5119                           	opt stack 0
  5120                           
  5121                           ; 9 bytes @ 0x12
  5122  00017F                     	ds	1
  5123  000180                     ??_I2C_Write_At_Address:
  5124  000180                     ??___ftpack:
  5125  000180                     ?_InternalADC_Read:
  5126                           	opt stack 0
  5127  000180                     OpenUSART@config:
  5128                           	opt stack 0
  5129  000180                     I2C_Read_At_Address@I2Caddress:
  5130                           	opt stack 0
  5131  000180                     I2C_Read_Sequential@Register:
  5132                           	opt stack 0
  5133  000180                     ___awdiv@sign:
  5134                           	opt stack 0
  5135  000180                     ___awmod@sign:
  5136                           	opt stack 0
  5137  000180                     ___lwdiv@quotient:
  5138                           	opt stack 0
  5139  000180                     delayUS@i:
  5140                           	opt stack 0
  5141                           
  5142                           ; 4 bytes @ 0x13
  5143  000180                     	ds	1
  5144  000181                     ??_InitUART:
  5145  000181                     ?_GetEnteredNumber:
  5146                           	opt stack 0
  5147  000181                     ?___aldiv:
  5148                           	opt stack 0
  5149  000181                     GetEnteredNumber@This:
  5150                           	opt stack 0
  5151  000181                     I2C_Read_Sequential@rdptr:
  5152                           	opt stack 0
  5153  000181                     ___awdiv@quotient:
  5154                           	opt stack 0
  5155  000181                     ___aldiv@dividend:
  5156                           	opt stack 0
  5157                           
  5158                           ; 4 bytes @ 0x14
  5159  000181                     	ds	1
  5160  000182                     ??_InternalADC_Read:
  5161  000182                     ?___lwmod:
  5162                           	opt stack 0
  5163  000182                     cleanBuffer@i:
  5164                           	opt stack 0
  5165  000182                     I2C_Write_At_Address@I2Caddress:
  5166                           	opt stack 0
  5167  000182                     InitUART@temp:
  5168                           	opt stack 0
  5169  000182                     ___lwmod@dividend:
  5170                           	opt stack 0
  5171                           
  5172                           ; 2 bytes @ 0x15
  5173  000182                     	ds	1
  5174  000183                     ??_GetEnteredNumber:
  5175  000183                     ?___lbtoft:
  5176                           	opt stack 0
  5177  000183                     ?___lwtoft:
  5178                           	opt stack 0
  5179  000183                     I2C_Read_Sequential@length:
  5180                           	opt stack 0
  5181  000183                     BufferCopy@from:
  5182                           	opt stack 0
  5183  000183                     ___lwtoft@c:
  5184                           	opt stack 0
  5185  000183                     SET_RTC_TIME@SetTime:
  5186                           	opt stack 0
  5187                           
  5188                           ; 9 bytes @ 0x16
  5189  000183                     	ds	1
  5190  000184                     delayUS@j:
  5191                           	opt stack 0
  5192  000184                     InternalADC_Read@channel:
  5193                           	opt stack 0
  5194  000184                     I2C_Read_Sequential@I2Caddress:
  5195                           	opt stack 0
  5196  000184                     InitUART@spbrg:
  5197                           	opt stack 0
  5198  000184                     ___lwmod@divisor:
  5199                           	opt stack 0
  5200                           
  5201                           ; 2 bytes @ 0x17
  5202  000184                     	ds	1
  5203  000185                     ??_RTC_TIME_NONMilitary:
  5204  000185                     Zero_Config1@pin:
  5205                           	opt stack 0
  5206  000185                     One_Config1@pin:
  5207                           	opt stack 0
  5208  000185                     f_Config1@pin:
  5209                           	opt stack 0
  5210  000185                     Zero_Config2@pin:
  5211                           	opt stack 0
  5212  000185                     One_Config2@pin:
  5213                           	opt stack 0
  5214  000185                     SendLCDbyte@isCommand:
  5215                           	opt stack 0
  5216  000185                     RTC_Clock_Enable@Error:
  5217                           	opt stack 0
  5218  000185                     BufferCopy@to:
  5219                           	opt stack 0
  5220  000185                     ___aldiv@divisor:
  5221                           	opt stack 0
  5222  000185                     READ_RTC_TIME@temp:
  5223                           	opt stack 0
  5224                           
  5225                           ; 7 bytes @ 0x18
  5226  000185                     	ds	1
  5227  000186                     InitUART@baudconfig:
  5228                           	opt stack 0
  5229  000186                     SendLCDbyte@data:
  5230                           	opt stack 0
  5231  000186                     ___lbtoft@c:
  5232                           	opt stack 0
  5233  000186                     ___lwmod@counter:
  5234                           	opt stack 0
  5235  000186                     Send_Config1@data:
  5236                           	opt stack 0
  5237  000186                     Send_Config2@data:
  5238                           	opt stack 0
  5239  000186                     RTC_Clock_Enable@tempSeconds:
  5240                           	opt stack 0
  5241  000186                     RTC_TIME_NONMilitary@Error:
  5242                           	opt stack 0
  5243                           
  5244                           ; 2 bytes @ 0x19
  5245  000186                     	ds	1
  5246  000187                     ?_sprintf:
  5247                           	opt stack 0
  5248  000187                     ?___ftdiv:
  5249                           	opt stack 0
  5250  000187                     BufferCopy@count:
  5251                           	opt stack 0
  5252  000187                     GetEnteredNumber@i:
  5253                           	opt stack 0
  5254  000187                     InitUART@config:
  5255                           	opt stack 0
  5256  000187                     SendLCDbyte@MSB_nibble:
  5257                           	opt stack 0
  5258  000187                     sprintf@sp:
  5259                           	opt stack 0
  5260  000187                     ___ftdiv@f1:
  5261                           	opt stack 0
  5262                           
  5263                           ; 3 bytes @ 0x1A
  5264  000187                     	ds	1
  5265  000188                     ??_Send_Config1:
  5266  000188                     ??_Send_Config2:
  5267  000188                     BufferCopy@shift:
  5268                           	opt stack 0
  5269  000188                     GetEnteredNumber@negative:
  5270                           	opt stack 0
  5271  000188                     SendLCDbyte@LSB_nibble:
  5272                           	opt stack 0
  5273  000188                     RTC_TIME_NONMilitary@temphours:
  5274                           	opt stack 0
  5275                           
  5276                           ; 2 bytes @ 0x1B
  5277  000188                     	ds	1
  5278  000189                     BufferCopy@i:
  5279                           	opt stack 0
  5280  000189                     SetLCDcursor@Col:
  5281                           	opt stack 0
  5282  000189                     LCDPrintChar@character:
  5283                           	opt stack 0
  5284  000189                     ___aldiv@counter:
  5285                           	opt stack 0
  5286  000189                     GetEnteredNumber@temp:
  5287                           	opt stack 0
  5288  000189                     LCDPrintString@Text:
  5289                           	opt stack 0
  5290  000189                     sprintf@f:
  5291                           	opt stack 0
  5292                           
  5293                           ; 2 bytes @ 0x1C
  5294  000189                     	ds	1
  5295  00018A                     Send_Config2@pin:
  5296                           	opt stack 0
  5297  00018A                     SetLCDcursor@Row:
  5298                           	opt stack 0
  5299  00018A                     ___aldiv@sign:
  5300                           	opt stack 0
  5301  00018A                     RemoveSpaces@This:
  5302                           	opt stack 0
  5303  00018A                     StringAddEqual@Input:
  5304                           	opt stack 0
  5305  00018A                     LCD_Scroll@This:
  5306                           	opt stack 0
  5307  00018A                     ___ftdiv@f2:
  5308                           	opt stack 0
  5309                           
  5310                           ; 3 bytes @ 0x1D
  5311  00018A                     	ds	1
  5312  00018B                     Send_Config1@i:
  5313                           	opt stack 0
  5314  00018B                     Send_Config2@i:
  5315                           	opt stack 0
  5316  00018B                     SetLCDcursor@address:
  5317                           	opt stack 0
  5318  00018B                     LCDPrintString@c:
  5319                           	opt stack 0
  5320  00018B                     ___aldiv@quotient:
  5321                           	opt stack 0
  5322                           
  5323                           ; 4 bytes @ 0x1E
  5324  00018B                     	ds	1
  5325  00018C                     ??_SET_RTC_TIME:
  5326  00018C                     ??_StringAddEqual:
  5327  00018C                     Send_Config1@pin:
  5328                           	opt stack 0
  5329  00018C                     READ_RTC_TIME@Error:
  5330                           	opt stack 0
  5331                           
  5332                           ; 1 bytes @ 0x1F
  5333  00018C                     	ds	1
  5334  00018D                     ??_LCDScreenUpdate:
  5335  00018D                     ??___ftdiv:
  5336  00018D                     LCDdisplayFeedback@Text:
  5337                           	opt stack 0
  5338                           
  5339                           ; 2 bytes @ 0x20
  5340  00018D                     	ds	2
  5341  00018F                     SetFreq@freq:
  5342                           	opt stack 0
  5343                           
  5344                           ; 2 bytes @ 0x22
  5345  00018F                     	ds	1
  5346  000190                     ___ftdiv@cntr:
  5347                           	opt stack 0
  5348  000190                     SET_RTC_TIME@temp:
  5349                           	opt stack 0
  5350                           
  5351                           ; 7 bytes @ 0x23
  5352  000190                     	ds	1
  5353  000191                     ??_SetFreq:
  5354  000191                     ___ftdiv@f3:
  5355                           	opt stack 0
  5356                           
  5357                           ; 3 bytes @ 0x24
  5358  000191                     	ds	3
  5359  000194                     ___ftdiv@exp:
  5360                           	opt stack 0
  5361                           
  5362                           ; 1 bytes @ 0x27
  5363  000194                     	ds	1
  5364  000195                     SetFreq@temp:
  5365                           	opt stack 0
  5366  000195                     ___ftdiv@sign:
  5367                           	opt stack 0
  5368                           
  5369                           ; 1 bytes @ 0x28
  5370  000195                     	ds	1
  5371  000196                     ?___ftmul:
  5372                           	opt stack 0
  5373  000196                     ___ftmul@f1:
  5374                           	opt stack 0
  5375                           
  5376                           ; 3 bytes @ 0x29
  5377  000196                     	ds	1
  5378  000197                     ??_sprintf:
  5379  000197                     SET_RTC_TIME@Error:
  5380                           	opt stack 0
  5381                           
  5382                           ; 1 bytes @ 0x2A
  5383  000197                     	ds	2
  5384  000199                     ___ftmul@f2:
  5385                           	opt stack 0
  5386                           
  5387                           ; 3 bytes @ 0x2C
  5388  000199                     	ds	2
  5389  00019B                     sprintf@idx:
  5390                           	opt stack 0
  5391                           
  5392                           ; 1 bytes @ 0x2E
  5393  00019B                     	ds	1
  5394  00019C                     ??___ftmul:
  5395  00019C                     _sprintf$2213:
  5396                           	opt stack 0
  5397                           
  5398                           ; 2 bytes @ 0x2F
  5399  00019C                     	ds	2
  5400  00019E                     _sprintf$2214:
  5401                           	opt stack 0
  5402                           
  5403                           ; 2 bytes @ 0x31
  5404  00019E                     	ds	1
  5405  00019F                     ___ftmul@exp:
  5406                           	opt stack 0
  5407                           
  5408                           ; 1 bytes @ 0x32
  5409  00019F                     	ds	1
  5410  0001A0                     _sprintf$2220:
  5411                           	opt stack 0
  5412  0001A0                     ___ftmul@f3_as_product:
  5413                           	opt stack 0
  5414                           
  5415                           ; 3 bytes @ 0x33
  5416  0001A0                     	ds	2
  5417  0001A2                     sprintf@ap:
  5418                           	opt stack 0
  5419                           
  5420                           ; 2 bytes @ 0x35
  5421  0001A2                     	ds	1
  5422  0001A3                     ___ftmul@cntr:
  5423                           	opt stack 0
  5424                           
  5425                           ; 1 bytes @ 0x36
  5426  0001A3                     	ds	1
  5427  0001A4                     sprintf@prec:
  5428                           	opt stack 0
  5429  0001A4                     ___ftmul@sign:
  5430                           	opt stack 0
  5431                           
  5432                           ; 1 bytes @ 0x37
  5433  0001A4                     	ds	1
  5434  0001A5                     ?___fttol:
  5435                           	opt stack 0
  5436  0001A5                     sprintf@width:
  5437                           	opt stack 0
  5438  0001A5                     ___fttol@f1:
  5439                           	opt stack 0
  5440                           
  5441                           ; 3 bytes @ 0x38
  5442  0001A5                     	ds	2
  5443  0001A7                     sprintf@_val:
  5444                           	opt stack 0
  5445                           
  5446                           ; 4 bytes @ 0x3A
  5447  0001A7                     	ds	2
  5448  0001A9                     ??___fttol:
  5449                           
  5450                           ; 0 bytes @ 0x3C
  5451  0001A9                     	ds	2
  5452  0001AB                     sprintf@c:
  5453                           	opt stack 0
  5454                           
  5455                           ; 1 bytes @ 0x3E
  5456  0001AB                     	ds	1
  5457  0001AC                     sprintf@flag:
  5458                           	opt stack 0
  5459                           
  5460                           ; 2 bytes @ 0x3F
  5461  0001AC                     	ds	2
  5462  0001AE                     ___fttol@sign1:
  5463                           	opt stack 0
  5464  0001AE                     SprintDate@ReturnBuf:
  5465                           	opt stack 0
  5466                           
  5467                           ; 2 bytes @ 0x41
  5468  0001AE                     	ds	1
  5469  0001AF                     ___fttol@lval:
  5470                           	opt stack 0
  5471                           
  5472                           ; 4 bytes @ 0x42
  5473  0001AF                     	ds	1
  5474  0001B0                     SprintDate@DisplayTime:
  5475                           	opt stack 0
  5476                           
  5477                           ; 9 bytes @ 0x43
  5478  0001B0                     	ds	3
  5479  0001B3                     ___fttol@exp1:
  5480                           	opt stack 0
  5481                           
  5482                           ; 1 bytes @ 0x46
  5483  0001B3                     	ds	1
  5484  0001B4                     ??_SetContrast:
  5485  0001B4                     ??_SetDuty:
  5486                           
  5487                           ; 0 bytes @ 0x47
  5488  0001B4                     	ds	4
  5489  0001B8                     SetDuty@Duty:
  5490                           	opt stack 0
  5491  0001B8                     SetContrast@tempPR2:
  5492                           	opt stack 0
  5493                           
  5494                           ; 3 bytes @ 0x4B
  5495  0001B8                     	ds	1
  5496  0001B9                     SprintDate@Military:
  5497                           	opt stack 0
  5498  0001B9                     SetDuty@tempPR2:
  5499                           	opt stack 0
  5500                           
  5501                           ; 3 bytes @ 0x4C
  5502  0001B9                     	ds	1
  5503  0001BA                     
  5504                           ; 0 bytes @ 0x4D
  5505  0001BA                     	ds	1
  5506  0001BB                     SetContrast@MSB:
  5507                           	opt stack 0
  5508                           
  5509                           ; 1 bytes @ 0x4E
  5510  0001BB                     	ds	1
  5511  0001BC                     SetContrast@LSB:
  5512                           	opt stack 0
  5513  0001BC                     SetDuty@MSB:
  5514                           	opt stack 0
  5515                           
  5516                           ; 1 bytes @ 0x4F
  5517  0001BC                     	ds	1
  5518  0001BD                     SetDuty@LSB:
  5519                           	opt stack 0
  5520  0001BD                     SetContrast@temp:
  5521                           	opt stack 0
  5522                           
  5523                           ; 2 bytes @ 0x50
  5524  0001BD                     	ds	1
  5525  0001BE                     SetDuty@temp:
  5526                           	opt stack 0
  5527                           
  5528                           ; 2 bytes @ 0x51
  5529  0001BE                     	ds	1
  5530  0001BF                     SetContrast@Duty:
  5531                           	opt stack 0
  5532                           
  5533                           ; 1 bytes @ 0x52
  5534  0001BF                     	ds	1
  5535  0001C0                     Command@Input:
  5536                           	opt stack 0
  5537                           
  5538                           ; 2 bytes @ 0x53
  5539  0001C0                     	ds	2
  5540  0001C2                     ??_Command:
  5541                           
  5542                           ; 0 bytes @ 0x55
  5543  0001C2                     	ds	4
  5544  0001C6                     main@ii:
  5545                           	opt stack 0
  5546                           
  5547                           ; 1 bytes @ 0x59
  5548  0001C6                     	ds	1
  5549  0001C7                     main@count:
  5550                           	opt stack 0
  5551                           
  5552                           ; 1 bytes @ 0x5A
  5553  0001C7                     	ds	1
  5554                           tblptru	equ	0xFF8
  5555                           tblptrh	equ	0xFF7
  5556                           tblptrl	equ	0xFF6
  5557                           tablat	equ	0xFF5
  5558                           postinc0	equ	0xFEE
  5559                           wreg	equ	0xFE8
  5560                           postdec1	equ	0xFE5
  5561                           fsr1l	equ	0xFE1
  5562                           
  5563                           	psect	cstackBANK0
  5564  000060                     __pcstackBANK0:
  5565                           	opt stack 0
  5566  000060                     low_isr@TEMP_Rxdata:
  5567                           	opt stack 0
  5568                           
  5569                           ; 100 bytes @ 0x0
  5570  000060                     	ds	100
  5571  0000C4                     low_isr@LCD_TEMP:
  5572                           	opt stack 0
  5573                           
  5574                           ; 16 bytes @ 0x64
  5575  0000C4                     	ds	16
  5576  0000D4                     low_isr@i:
  5577                           	opt stack 0
  5578                           
  5579                           ; 2 bytes @ 0x74
  5580  0000D4                     	ds	2
  5581  0000D6                     low_isr@j:
  5582                           	opt stack 0
  5583                           
  5584                           ; 1 bytes @ 0x76
  5585  0000D6                     	ds	1
  5586  0000D7                     low_isr@rx:
  5587                           	opt stack 0
  5588                           
  5589                           ; 1 bytes @ 0x77
  5590  0000D7                     	ds	1
  5591                           tblptru	equ	0xFF8
  5592                           tblptrh	equ	0xFF7
  5593                           tblptrl	equ	0xFF6
  5594                           tablat	equ	0xFF5
  5595                           postinc0	equ	0xFEE
  5596                           wreg	equ	0xFE8
  5597                           postdec1	equ	0xFE5
  5598                           fsr1l	equ	0xFE1
  5599                           
  5600                           	psect	cstackCOMRAM
  5601  000001                     __pcstackCOMRAM:
  5602                           	opt stack 0
  5603  000001                     i1ReadUSART@data:
  5604                           	opt stack 0
  5605  000001                     i1WriteUSART@data:
  5606                           	opt stack 0
  5607  000001                     i1cleanBuffer@data:
  5608                           	opt stack 0
  5609  000001                     i1delayUS@US:
  5610                           	opt stack 0
  5611                           
  5612                           ; 4 bytes @ 0x0
  5613  000001                     	ds	1
  5614  000002                     i1UARTstring@data:
  5615                           	opt stack 0
  5616                           
  5617                           ; 2 bytes @ 0x1
  5618  000002                     	ds	1
  5619  000003                     i1cleanBuffer@count:
  5620                           	opt stack 0
  5621                           
  5622                           ; 2 bytes @ 0x2
  5623  000003                     	ds	1
  5624  000004                     ??i1_UARTstring:
  5625                           
  5626                           ; 0 bytes @ 0x3
  5627  000004                     	ds	1
  5628  000005                     ??i1_delayUS:
  5629  000005                     ??i1_cleanBuffer:
  5630                           
  5631                           ; 0 bytes @ 0x4
  5632  000005                     	ds	1
  5633  000006                     i1delayUS@i:
  5634                           	opt stack 0
  5635                           
  5636                           ; 4 bytes @ 0x5
  5637  000006                     	ds	2
  5638  000008                     i1cleanBuffer@i:
  5639                           	opt stack 0
  5640                           
  5641                           ; 1 bytes @ 0x7
  5642  000008                     	ds	1
  5643  000009                     i1BufferCopy@from:
  5644                           	opt stack 0
  5645                           
  5646                           ; 2 bytes @ 0x8
  5647  000009                     	ds	1
  5648  00000A                     i1delayUS@j:
  5649                           	opt stack 0
  5650                           
  5651                           ; 1 bytes @ 0x9
  5652  00000A                     	ds	1
  5653  00000B                     i1SendLCDbyte@isCommand:
  5654                           	opt stack 0
  5655  00000B                     i1BufferCopy@to:
  5656                           	opt stack 0
  5657                           
  5658                           ; 2 bytes @ 0xA
  5659  00000B                     	ds	1
  5660  00000C                     i1SendLCDbyte@data:
  5661                           	opt stack 0
  5662                           
  5663                           ; 1 bytes @ 0xB
  5664  00000C                     	ds	1
  5665  00000D                     i1BufferCopy@count:
  5666                           	opt stack 0
  5667  00000D                     i1SendLCDbyte@MSB_nibble:
  5668                           	opt stack 0
  5669                           
  5670                           ; 1 bytes @ 0xC
  5671  00000D                     	ds	1
  5672  00000E                     i1BufferCopy@shift:
  5673                           	opt stack 0
  5674  00000E                     i1SendLCDbyte@LSB_nibble:
  5675                           	opt stack 0
  5676                           
  5677                           ; 1 bytes @ 0xD
  5678  00000E                     	ds	1
  5679  00000F                     i1BufferCopy@i:
  5680                           	opt stack 0
  5681  00000F                     i1SetLCDcursor@Col:
  5682                           	opt stack 0
  5683  00000F                     i1LCDPrintChar@character:
  5684                           	opt stack 0
  5685  00000F                     i1LCDPrintString@Text:
  5686                           	opt stack 0
  5687                           
  5688                           ; 2 bytes @ 0xE
  5689  00000F                     	ds	1
  5690  000010                     i1SetLCDcursor@Row:
  5691                           	opt stack 0
  5692                           
  5693                           ; 1 bytes @ 0xF
  5694  000010                     	ds	1
  5695  000011                     i1SetLCDcursor@address:
  5696                           	opt stack 0
  5697  000011                     i1LCDPrintString@c:
  5698                           	opt stack 0
  5699                           
  5700                           ; 2 bytes @ 0x10
  5701  000011                     	ds	2
  5702  000013                     ??_low_isr:
  5703                           
  5704                           ; 0 bytes @ 0x12
  5705  000013                     	ds	20
  5706                           tblptru	equ	0xFF8
  5707                           tblptrh	equ	0xFF7
  5708                           tblptrl	equ	0xFF6
  5709                           tablat	equ	0xFF5
  5710                           postinc0	equ	0xFEE
  5711                           wreg	equ	0xFE8
  5712                           postdec1	equ	0xFE5
  5713                           fsr1l	equ	0xFE1
  5714                           
  5715 ;;
  5716 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5717 ;;
  5718 ;; *************** function _main *****************
  5719 ;; Defined at:
  5720 ;;		line 51 in file "main.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  count           1   90[BANK1 ] unsigned char 
  5725 ;;  ii              1   89[BANK1 ] unsigned char 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;		None               void
  5728 ;; Registers used:
  5729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5739 ;;Total ram usage:        2 bytes
  5740 ;; Hardware stack levels required when called:   12
  5741 ;; This function calls:
  5742 ;;		_ClearLCD
  5743 ;;		_Command
  5744 ;;		_ConfigureOscillator
  5745 ;;		_ContrastPWM_init
  5746 ;;		_EnableInternalADC
  5747 ;;		_InitApp
  5748 ;;		_InitUART
  5749 ;;		_Init_I2C_Master
  5750 ;;		_LCDPrintChar
  5751 ;;		_LCDPrintString
  5752 ;;		_LCDScreenUpdate
  5753 ;;		_PWM_init
  5754 ;;		_RTC_INIT
  5755 ;;		_ReadUSART
  5756 ;;		_SetContrast
  5757 ;;		_SetDuty
  5758 ;;		_SetLCDcursor
  5759 ;;		_UARTstring
  5760 ;;		_cleanBuffer
  5761 ;;		_delayUS
  5762 ;;		_init_LCD
  5763 ;; This function is called by:
  5764 ;;		Startup code after reset
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text0
  5769  013A00                     __ptext0:
  5770                           	opt stack 0
  5771  013A00                     _main:
  5772                           	opt stack 18
  5773                           
  5774                           ;main.c: 53: unsigned char ii =0;
  5775                           
  5776                           ;incstack = 0
  5777  013A00  0E00               	movlw	0
  5778  013A02  0101               	movlb	1	; () banked
  5779  013A04  6FC6               	movwf	main@ii& (0+255),b
  5780                           
  5781                           ;main.c: 54: unsigned char count =0;
  5782  013A06  0E00               	movlw	0
  5783  013A08  0101               	movlb	1	; () banked
  5784  013A0A  6FC7               	movwf	main@count& (0+255),b
  5785                           
  5786                           ; BSR set to: 1
  5787                           ;main.c: 56: ConfigureOscillator();
  5788  013A0C  EC95  F0B6         	call	_ConfigureOscillator	;wreg free
  5789                           
  5790                           ;main.c: 57: InitApp();
  5791  013A10  EC9D  F0B3         	call	_InitApp	;wreg free
  5792                           
  5793                           ;main.c: 58: InitUART();
  5794  013A14  EC5F  F0AC         	call	_InitUART	;wreg free
  5795                           
  5796                           ;main.c: 59: EnableInternalADC(1);
  5797  013A18  0E01               	movlw	1
  5798  013A1A  EC10  F0AD         	call	_EnableInternalADC
  5799                           
  5800                           ;main.c: 60: PWM_init();
  5801  013A1E  EC00  F0B6         	call	_PWM_init	;wreg free
  5802                           
  5803                           ;main.c: 61: ContrastPWM_init();
  5804  013A22  EC88  F0B6         	call	_ContrastPWM_init	;wreg free
  5805                           
  5806                           ;main.c: 62: init_LCD();
  5807  013A26  ECF4  F0A5         	call	_init_LCD	;wreg free
  5808                           
  5809                           ;main.c: 63: Init_I2C_Master();
  5810  013A2A  ECF8  F0B3         	call	_Init_I2C_Master	;wreg free
  5811                           
  5812                           ;main.c: 64: RTC_INIT();
  5813  013A2E  EC79  F0B6         	call	_RTC_INIT	;wreg free
  5814                           
  5815                           ;main.c: 66: for(ii =0; ii <10;ii++)
  5816  013A32  0E00               	movlw	0
  5817  013A34  0101               	movlb	1	; () banked
  5818  013A36  6FC6               	movwf	main@ii& (0+255),b
  5819  013A38  D022               	goto	L1
  5820  013A3A                     l12036:
  5821                           
  5822                           ; BSR set to: 1
  5823                           ;main.c: 67: {
  5824                           ;main.c: 68: LATD |= 0b00000010;
  5825  013A3A  828C               	bsf	3980,1,c	;volatile
  5826                           
  5827                           ;main.c: 69: LATD &= ~0b00000100;
  5828  013A3C  948C               	bcf	3980,2,c	;volatile
  5829                           
  5830                           ; BSR set to: 1
  5831                           ;main.c: 70: delayUS(50000);
  5832  013A3E  0E50               	movlw	80
  5833  013A40  0101               	movlb	1	; () banked
  5834  013A42  6F7B               	movwf	delayUS@US& (0+255),b
  5835  013A44  0EC3               	movlw	195
  5836  013A46  0101               	movlb	1	; () banked
  5837  013A48  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  5838  013A4A  0E00               	movlw	0
  5839  013A4C  0101               	movlb	1	; () banked
  5840  013A4E  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  5841  013A50  0E00               	movlw	0
  5842  013A52  0101               	movlb	1	; () banked
  5843  013A54  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  5844  013A56  ECC0  F0B1         	call	_delayUS	;wreg free
  5845                           
  5846                           ;main.c: 71: LATD |= 0b00000100;
  5847  013A5A  848C               	bsf	3980,2,c	;volatile
  5848                           
  5849                           ;main.c: 72: LATD &= ~0b00000010;
  5850  013A5C  928C               	bcf	3980,1,c	;volatile
  5851                           
  5852                           ;main.c: 73: delayUS(50000);
  5853  013A5E  0E50               	movlw	80
  5854  013A60  0101               	movlb	1	; () banked
  5855  013A62  6F7B               	movwf	delayUS@US& (0+255),b
  5856  013A64  0EC3               	movlw	195
  5857  013A66  0101               	movlb	1	; () banked
  5858  013A68  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  5859  013A6A  0E00               	movlw	0
  5860  013A6C  0101               	movlb	1	; () banked
  5861  013A6E  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  5862  013A70  0E00               	movlw	0
  5863  013A72  0101               	movlb	1	; () banked
  5864  013A74  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  5865  013A76  ECC0  F0B1         	call	_delayUS	;wreg free
  5866  013A7A  0101               	movlb	1	; () banked
  5867  013A7C  2BC6               	incf	main@ii& (0+255),f,b
  5868  013A7E                     L1:
  5869                           
  5870                           ; BSR set to: 1
  5871  013A7E  0E09               	movlw	9
  5872  013A80  0101               	movlb	1	; () banked
  5873  013A82  65C6               	cpfsgt	main@ii& (0+255),b
  5874  013A84  D7DA               	goto	l12036
  5875                           
  5876                           ; BSR set to: 1
  5877                           ;main.c: 74: }
  5878                           ;main.c: 75: SetContrast(65);
  5879                           
  5880                           ; BSR set to: 1
  5881  013A86  0E41               	movlw	65
  5882  013A88  ECAA  F0A8         	call	_SetContrast
  5883                           
  5884                           ;main.c: 76: delayUS(20);
  5885  013A8C  0E14               	movlw	20
  5886  013A8E  0101               	movlb	1	; () banked
  5887  013A90  6F7B               	movwf	delayUS@US& (0+255),b
  5888  013A92  0E00               	movlw	0
  5889  013A94  0101               	movlb	1	; () banked
  5890  013A96  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  5891  013A98  0E00               	movlw	0
  5892  013A9A  0101               	movlb	1	; () banked
  5893  013A9C  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  5894  013A9E  0E00               	movlw	0
  5895  013AA0  0101               	movlb	1	; () banked
  5896  013AA2  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  5897  013AA4  ECC0  F0B1         	call	_delayUS	;wreg free
  5898                           
  5899                           ;main.c: 77: SetLCDcursor(0, 0);
  5900  013AA8  0E00               	movlw	0
  5901  013AAA  0101               	movlb	1	; () banked
  5902  013AAC  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  5903  013AAE  0E00               	movlw	0
  5904  013AB0  EC2D  F0B5         	call	_SetLCDcursor
  5905                           
  5906                           ;main.c: 78: LCDPrintString("Starting");
  5907  013AB4  0EFF               	movlw	high STR_6
  5908  013AB6  0101               	movlb	1	; () banked
  5909  013AB8  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  5910  013ABA  0E0E               	movlw	low STR_6
  5911  013ABC  0101               	movlb	1	; () banked
  5912  013ABE  6F89               	movwf	LCDPrintString@Text& (0+255),b
  5913  013AC0  EC46  F0B1         	call	_LCDPrintString	;wreg free
  5914                           
  5915                           ;main.c: 79: delayUS(100000);
  5916  013AC4  0EA0               	movlw	160
  5917  013AC6  0101               	movlb	1	; () banked
  5918  013AC8  6F7B               	movwf	delayUS@US& (0+255),b
  5919  013ACA  0E86               	movlw	134
  5920  013ACC  0101               	movlb	1	; () banked
  5921  013ACE  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  5922  013AD0  0E01               	movlw	1
  5923  013AD2  0101               	movlb	1	; () banked
  5924  013AD4  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  5925  013AD6  0E00               	movlw	0
  5926  013AD8  0101               	movlb	1	; () banked
  5927  013ADA  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  5928  013ADC  ECC0  F0B1         	call	_delayUS	;wreg free
  5929                           
  5930                           ;main.c: 80: SetLCDcursor(0, 0);
  5931  013AE0  0E00               	movlw	0
  5932  013AE2  0101               	movlb	1	; () banked
  5933  013AE4  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  5934  013AE6  0E00               	movlw	0
  5935  013AE8  EC2D  F0B5         	call	_SetLCDcursor
  5936                           
  5937                           ;main.c: 81: LCDPrintString("Starting.");
  5938  013AEC  0EFE               	movlw	high STR_7
  5939  013AEE  0101               	movlb	1	; () banked
  5940  013AF0  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  5941  013AF2  0EA1               	movlw	low STR_7
  5942  013AF4  0101               	movlb	1	; () banked
  5943  013AF6  6F89               	movwf	LCDPrintString@Text& (0+255),b
  5944  013AF8  EC46  F0B1         	call	_LCDPrintString	;wreg free
  5945                           
  5946                           ;main.c: 82: delayUS(100000);
  5947  013AFC  0EA0               	movlw	160
  5948  013AFE  0101               	movlb	1	; () banked
  5949  013B00  6F7B               	movwf	delayUS@US& (0+255),b
  5950  013B02  0E86               	movlw	134
  5951  013B04  0101               	movlb	1	; () banked
  5952  013B06  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  5953  013B08  0E01               	movlw	1
  5954  013B0A  0101               	movlb	1	; () banked
  5955  013B0C  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  5956  013B0E  0E00               	movlw	0
  5957  013B10  0101               	movlb	1	; () banked
  5958  013B12  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  5959  013B14  ECC0  F0B1         	call	_delayUS	;wreg free
  5960                           
  5961                           ;main.c: 83: SetLCDcursor(0, 0);
  5962  013B18  0E00               	movlw	0
  5963  013B1A  0101               	movlb	1	; () banked
  5964  013B1C  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  5965  013B1E  0E00               	movlw	0
  5966  013B20  EC2D  F0B5         	call	_SetLCDcursor
  5967                           
  5968                           ;main.c: 84: LCDPrintString("Starting..");
  5969  013B24  0EFE               	movlw	high STR_8
  5970  013B26  0101               	movlb	1	; () banked
  5971  013B28  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  5972  013B2A  0E28               	movlw	low STR_8
  5973  013B2C  0101               	movlb	1	; () banked
  5974  013B2E  6F89               	movwf	LCDPrintString@Text& (0+255),b
  5975  013B30  EC46  F0B1         	call	_LCDPrintString	;wreg free
  5976                           
  5977                           ;main.c: 85: delayUS(100000);
  5978  013B34  0EA0               	movlw	160
  5979  013B36  0101               	movlb	1	; () banked
  5980  013B38  6F7B               	movwf	delayUS@US& (0+255),b
  5981  013B3A  0E86               	movlw	134
  5982  013B3C  0101               	movlb	1	; () banked
  5983  013B3E  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  5984  013B40  0E01               	movlw	1
  5985  013B42  0101               	movlb	1	; () banked
  5986  013B44  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  5987  013B46  0E00               	movlw	0
  5988  013B48  0101               	movlb	1	; () banked
  5989  013B4A  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  5990  013B4C  ECC0  F0B1         	call	_delayUS	;wreg free
  5991                           
  5992                           ;main.c: 86: SetLCDcursor(0, 0);
  5993  013B50  0E00               	movlw	0
  5994  013B52  0101               	movlb	1	; () banked
  5995  013B54  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  5996  013B56  0E00               	movlw	0
  5997  013B58  EC2D  F0B5         	call	_SetLCDcursor
  5998                           
  5999                           ;main.c: 87: LCDPrintString("Starting...");
  6000  013B5C  0EFD               	movlw	high STR_9
  6001  013B5E  0101               	movlb	1	; () banked
  6002  013B60  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6003  013B62  0EE5               	movlw	low STR_9
  6004  013B64  0101               	movlb	1	; () banked
  6005  013B66  6F89               	movwf	LCDPrintString@Text& (0+255),b
  6006  013B68  EC46  F0B1         	call	_LCDPrintString	;wreg free
  6007                           
  6008                           ;main.c: 88: delayUS(100000);
  6009  013B6C  0EA0               	movlw	160
  6010  013B6E  0101               	movlb	1	; () banked
  6011  013B70  6F7B               	movwf	delayUS@US& (0+255),b
  6012  013B72  0E86               	movlw	134
  6013  013B74  0101               	movlb	1	; () banked
  6014  013B76  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6015  013B78  0E01               	movlw	1
  6016  013B7A  0101               	movlb	1	; () banked
  6017  013B7C  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6018  013B7E  0E00               	movlw	0
  6019  013B80  0101               	movlb	1	; () banked
  6020  013B82  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6021  013B84  ECC0  F0B1         	call	_delayUS	;wreg free
  6022                           
  6023                           ;main.c: 89: SetLCDcursor(0, 0);
  6024  013B88  0E00               	movlw	0
  6025  013B8A  0101               	movlb	1	; () banked
  6026  013B8C  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  6027  013B8E  0E00               	movlw	0
  6028  013B90  EC2D  F0B5         	call	_SetLCDcursor
  6029                           
  6030                           ;main.c: 90: LCDPrintString("Starting....");
  6031  013B94  0EFD               	movlw	high STR_10
  6032  013B96  0101               	movlb	1	; () banked
  6033  013B98  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6034  013B9A  0EA8               	movlw	low STR_10
  6035  013B9C  0101               	movlb	1	; () banked
  6036  013B9E  6F89               	movwf	LCDPrintString@Text& (0+255),b
  6037  013BA0  EC46  F0B1         	call	_LCDPrintString	;wreg free
  6038                           
  6039                           ;main.c: 91: delayUS(100000);
  6040  013BA4  0EA0               	movlw	160
  6041  013BA6  0101               	movlb	1	; () banked
  6042  013BA8  6F7B               	movwf	delayUS@US& (0+255),b
  6043  013BAA  0E86               	movlw	134
  6044  013BAC  0101               	movlb	1	; () banked
  6045  013BAE  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6046  013BB0  0E01               	movlw	1
  6047  013BB2  0101               	movlb	1	; () banked
  6048  013BB4  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6049  013BB6  0E00               	movlw	0
  6050  013BB8  0101               	movlb	1	; () banked
  6051  013BBA  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6052  013BBC  ECC0  F0B1         	call	_delayUS	;wreg free
  6053                           
  6054                           ;main.c: 92: SetLCDcursor(0, 0);
  6055  013BC0  0E00               	movlw	0
  6056  013BC2  0101               	movlb	1	; () banked
  6057  013BC4  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  6058  013BC6  0E00               	movlw	0
  6059  013BC8  EC2D  F0B5         	call	_SetLCDcursor
  6060                           
  6061                           ;main.c: 93: LCDPrintString("Starting.....");
  6062  013BCC  0EFD               	movlw	high STR_11
  6063  013BCE  0101               	movlb	1	; () banked
  6064  013BD0  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6065  013BD2  0E18               	movlw	low STR_11
  6066  013BD4  0101               	movlb	1	; () banked
  6067  013BD6  6F89               	movwf	LCDPrintString@Text& (0+255),b
  6068  013BD8  EC46  F0B1         	call	_LCDPrintString	;wreg free
  6069                           
  6070                           ;main.c: 94: delayUS(100000);
  6071  013BDC  0EA0               	movlw	160
  6072  013BDE  0101               	movlb	1	; () banked
  6073  013BE0  6F7B               	movwf	delayUS@US& (0+255),b
  6074  013BE2  0E86               	movlw	134
  6075  013BE4  0101               	movlb	1	; () banked
  6076  013BE6  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6077  013BE8  0E01               	movlw	1
  6078  013BEA  0101               	movlb	1	; () banked
  6079  013BEC  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6080  013BEE  0E00               	movlw	0
  6081  013BF0  0101               	movlb	1	; () banked
  6082  013BF2  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6083  013BF4  ECC0  F0B1         	call	_delayUS	;wreg free
  6084                           
  6085                           ;main.c: 95: SetLCDcursor(0, 0);
  6086  013BF8  0E00               	movlw	0
  6087  013BFA  0101               	movlb	1	; () banked
  6088  013BFC  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  6089  013BFE  0E00               	movlw	0
  6090  013C00  EC2D  F0B5         	call	_SetLCDcursor
  6091                           
  6092                           ;main.c: 96: LCDPrintString("Starting......");
  6093  013C04  0EFC               	movlw	high STR_12
  6094  013C06  0101               	movlb	1	; () banked
  6095  013C08  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6096  013C0A  0E8B               	movlw	low STR_12
  6097  013C0C  0101               	movlb	1	; () banked
  6098  013C0E  6F89               	movwf	LCDPrintString@Text& (0+255),b
  6099  013C10  EC46  F0B1         	call	_LCDPrintString	;wreg free
  6100                           
  6101                           ;main.c: 97: delayUS(100000);
  6102  013C14  0EA0               	movlw	160
  6103  013C16  0101               	movlb	1	; () banked
  6104  013C18  6F7B               	movwf	delayUS@US& (0+255),b
  6105  013C1A  0E86               	movlw	134
  6106  013C1C  0101               	movlb	1	; () banked
  6107  013C1E  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6108  013C20  0E01               	movlw	1
  6109  013C22  0101               	movlb	1	; () banked
  6110  013C24  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6111  013C26  0E00               	movlw	0
  6112  013C28  0101               	movlb	1	; () banked
  6113  013C2A  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6114  013C2C  ECC0  F0B1         	call	_delayUS	;wreg free
  6115                           
  6116                           ;main.c: 98: SetLCDcursor(0, 0);
  6117  013C30  0E00               	movlw	0
  6118  013C32  0101               	movlb	1	; () banked
  6119  013C34  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  6120  013C36  0E00               	movlw	0
  6121  013C38  EC2D  F0B5         	call	_SetLCDcursor
  6122                           
  6123                           ;main.c: 99: LCDPrintString("Starting.......");
  6124  013C3C  0EFB               	movlw	high STR_13
  6125  013C3E  0101               	movlb	1	; () banked
  6126  013C40  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6127  013C42  0EB8               	movlw	low STR_13
  6128  013C44  0101               	movlb	1	; () banked
  6129  013C46  6F89               	movwf	LCDPrintString@Text& (0+255),b
  6130  013C48  EC46  F0B1         	call	_LCDPrintString	;wreg free
  6131                           
  6132                           ;main.c: 100: delayUS(100000);
  6133  013C4C  0EA0               	movlw	160
  6134  013C4E  0101               	movlb	1	; () banked
  6135  013C50  6F7B               	movwf	delayUS@US& (0+255),b
  6136  013C52  0E86               	movlw	134
  6137  013C54  0101               	movlb	1	; () banked
  6138  013C56  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6139  013C58  0E01               	movlw	1
  6140  013C5A  0101               	movlb	1	; () banked
  6141  013C5C  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6142  013C5E  0E00               	movlw	0
  6143  013C60  0101               	movlb	1	; () banked
  6144  013C62  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6145  013C64  ECC0  F0B1         	call	_delayUS	;wreg free
  6146                           
  6147                           ;main.c: 101: SetLCDcursor(0, 0);
  6148  013C68  0E00               	movlw	0
  6149  013C6A  0101               	movlb	1	; () banked
  6150  013C6C  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  6151  013C6E  0E00               	movlw	0
  6152  013C70  EC2D  F0B5         	call	_SetLCDcursor
  6153                           
  6154                           ;main.c: 102: LCDPrintString("Starting........");
  6155  013C74  0EFA               	movlw	high STR_14
  6156  013C76  0101               	movlb	1	; () banked
  6157  013C78  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6158  013C7A  0E67               	movlw	low STR_14
  6159  013C7C  0101               	movlb	1	; () banked
  6160  013C7E  6F89               	movwf	LCDPrintString@Text& (0+255),b
  6161  013C80  EC46  F0B1         	call	_LCDPrintString	;wreg free
  6162                           
  6163                           ;main.c: 103: delayUS(100000);
  6164  013C84  0EA0               	movlw	160
  6165  013C86  0101               	movlb	1	; () banked
  6166  013C88  6F7B               	movwf	delayUS@US& (0+255),b
  6167  013C8A  0E86               	movlw	134
  6168  013C8C  0101               	movlb	1	; () banked
  6169  013C8E  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6170  013C90  0E01               	movlw	1
  6171  013C92  0101               	movlb	1	; () banked
  6172  013C94  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6173  013C96  0E00               	movlw	0
  6174  013C98  0101               	movlb	1	; () banked
  6175  013C9A  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6176  013C9C  ECC0  F0B1         	call	_delayUS	;wreg free
  6177                           
  6178                           ;main.c: 104: SetLCDcursor(1, 0);
  6179  013CA0  0E00               	movlw	0
  6180  013CA2  0101               	movlb	1	; () banked
  6181  013CA4  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  6182  013CA6  0E01               	movlw	1
  6183  013CA8  EC2D  F0B5         	call	_SetLCDcursor
  6184                           
  6185                           ;main.c: 105: LCDPrintString("Enter '?'");
  6186  013CAC  0EFE               	movlw	high STR_15
  6187  013CAE  0101               	movlb	1	; () banked
  6188  013CB0  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6189  013CB2  0E97               	movlw	low STR_15
  6190  013CB4  0101               	movlb	1	; () banked
  6191  013CB6  6F89               	movwf	LCDPrintString@Text& (0+255),b
  6192  013CB8  EC46  F0B1         	call	_LCDPrintString	;wreg free
  6193                           
  6194                           ;main.c: 106: delayUS(100000);
  6195  013CBC  0EA0               	movlw	160
  6196  013CBE  0101               	movlb	1	; () banked
  6197  013CC0  6F7B               	movwf	delayUS@US& (0+255),b
  6198  013CC2  0E86               	movlw	134
  6199  013CC4  0101               	movlb	1	; () banked
  6200  013CC6  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6201  013CC8  0E01               	movlw	1
  6202  013CCA  0101               	movlb	1	; () banked
  6203  013CCC  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6204  013CCE  0E00               	movlw	0
  6205  013CD0  0101               	movlb	1	; () banked
  6206  013CD2  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6207  013CD4  ECC0  F0B1         	call	_delayUS	;wreg free
  6208                           
  6209                           ;main.c: 107: UARTstring("\r\nEnter '?' for Help Menu\r\n>");
  6210  013CD8  0EF5               	movlw	high STR_16
  6211  013CDA  0101               	movlb	1	; () banked
  6212  013CDC  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
  6213  013CDE  0ECA               	movlw	low STR_16
  6214  013CE0  0101               	movlb	1	; () banked
  6215  013CE2  6F7C               	movwf	UARTstring@data& (0+255),b
  6216  013CE4  ECB3  F0AD         	call	_UARTstring	;wreg free
  6217                           
  6218                           ;main.c: 109: for(count =100; count >0; count-=5)
  6219  013CE8  0E64               	movlw	100
  6220  013CEA  0101               	movlb	1	; () banked
  6221  013CEC  6FC7               	movwf	main@count& (0+255),b
  6222  013CEE  D015               	goto	L2
  6223  013CF0                     l12098:
  6224                           
  6225                           ; BSR set to: 1
  6226                           ;main.c: 110: {
  6227                           ;main.c: 111: SetDuty(count);
  6228  013CF0  0101               	movlb	1	; () banked
  6229  013CF2  51C7               	movf	main@count& (0+255),w,b
  6230  013CF4  ECDE  F0AA         	call	_SetDuty
  6231                           
  6232                           ;main.c: 112: delayUS(50000);
  6233  013CF8  0E50               	movlw	80
  6234  013CFA  0101               	movlb	1	; () banked
  6235  013CFC  6F7B               	movwf	delayUS@US& (0+255),b
  6236  013CFE  0EC3               	movlw	195
  6237  013D00  0101               	movlb	1	; () banked
  6238  013D02  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6239  013D04  0E00               	movlw	0
  6240  013D06  0101               	movlb	1	; () banked
  6241  013D08  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6242  013D0A  0E00               	movlw	0
  6243  013D0C  0101               	movlb	1	; () banked
  6244  013D0E  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6245  013D10  ECC0  F0B1         	call	_delayUS	;wreg free
  6246  013D14  0E05               	movlw	5
  6247  013D16  0101               	movlb	1	; () banked
  6248  013D18  5FC7               	subwf	main@count& (0+255),f,b
  6249  013D1A                     L2:
  6250                           
  6251                           ; BSR set to: 1
  6252  013D1A  0101               	movlb	1	; () banked
  6253  013D1C  67C7               	tstfsz	main@count& (0+255),b
  6254  013D1E  D7E8               	goto	l12098
  6255                           
  6256                           ; BSR set to: 1
  6257                           ;main.c: 113: }
  6258                           ;main.c: 115: LATD &= ~(0b00000010+0b00000100);
  6259                           
  6260                           ; BSR set to: 1
  6261  013D20  0EF9               	movlw	249
  6262  013D22  168C               	andwf	3980,f,c	;volatile
  6263                           
  6264                           ; BSR set to: 1
  6265                           ;main.c: 116: ReadUSART();
  6266  013D24  EC60  F0B5         	call	_ReadUSART	;wreg free
  6267                           
  6268                           ;main.c: 117: ReadUSART();
  6269  013D28  EC60  F0B5         	call	_ReadUSART	;wreg free
  6270                           
  6271                           ;main.c: 118: ReadUSART();
  6272  013D2C  EC60  F0B5         	call	_ReadUSART	;wreg free
  6273                           
  6274                           ;main.c: 120: ClearLCD();
  6275  013D30  EC39  F0B6         	call	_ClearLCD	;wreg free
  6276                           
  6277                           ;main.c: 121: SetLCDcursor(0, 0);
  6278  013D34  0E00               	movlw	0
  6279  013D36  0101               	movlb	1	; () banked
  6280  013D38  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  6281  013D3A  0E00               	movlw	0
  6282  013D3C  EC2D  F0B5         	call	_SetLCDcursor
  6283                           
  6284                           ;main.c: 122: LCDPrintChar('>');
  6285  013D40  0E3E               	movlw	62
  6286  013D42  EC5C  F0B6         	call	_LCDPrintChar
  6287  013D46                     l12118:
  6288                           
  6289                           ;main.c: 125: {
  6290                           ;main.c: 127: LCDScreenUpdate();
  6291  013D46  ECC6  F097         	call	_LCDScreenUpdate	;wreg free
  6292                           
  6293                           ;main.c: 128: if(Rxdata[0] != 0)
  6294  013D4A  0103               	movlb	3	; () banked
  6295  013D4C  5164               	movf	_Rxdata& (0+255),w,b
  6296  013D4E  B4D8               	btfsc	status,2,c
  6297  013D50  D7FA               	goto	l12118
  6298                           
  6299                           ; BSR set to: 3
  6300                           ;main.c: 129: {
  6301                           ;main.c: 130: if (Rxdata[0] != '\r' && Rxdata[0] != '\n')
  6302  013D52  0103               	movlb	3	; () banked
  6303  013D54  5164               	movf	_Rxdata& (0+255),w,b
  6304  013D56  0A0D               	xorlw	13
  6305  013D58  B4D8               	btfsc	status,2,c
  6306  013D5A  D00F               	goto	l12128
  6307                           
  6308                           ; BSR set to: 3
  6309  013D5C  0103               	movlb	3	; () banked
  6310  013D5E  5164               	movf	_Rxdata& (0+255),w,b
  6311  013D60  0A0A               	xorlw	10
  6312  013D62  B4D8               	btfsc	status,2,c
  6313  013D64  D00A               	goto	l12128
  6314                           
  6315                           ; BSR set to: 3
  6316                           ;main.c: 131: {
  6317                           ;main.c: 132: Command(Rxdata);
  6318  013D66  0103               	movlb	3	; () banked
  6319  013D68  0E03               	movlw	high _Rxdata
  6320  013D6A  0101               	movlb	1	; () banked
  6321  013D6C  6FC1               	movwf	(Command@Input+1)& (0+255),b
  6322  013D6E  0103               	movlb	3	; () banked
  6323  013D70  0E64               	movlw	low _Rxdata
  6324  013D72  0101               	movlb	1	; () banked
  6325  013D74  6FC0               	movwf	Command@Input& (0+255),b
  6326  013D76  EC00  F080         	call	_Command	;wreg free
  6327  013D7A                     l12128:
  6328                           
  6329                           ;main.c: 133: }
  6330                           ;main.c: 134: cleanBuffer(Rxdata, 100);
  6331  013D7A  0103               	movlb	3	; () banked
  6332  013D7C  0E03               	movlw	high _Rxdata
  6333  013D7E  0101               	movlb	1	; () banked
  6334  013D80  6F7C               	movwf	(cleanBuffer@data+1)& (0+255),b
  6335  013D82  0103               	movlb	3	; () banked
  6336  013D84  0E64               	movlw	low _Rxdata
  6337  013D86  0101               	movlb	1	; () banked
  6338  013D88  6F7B               	movwf	cleanBuffer@data& (0+255),b
  6339  013D8A  0E00               	movlw	0
  6340  013D8C  0101               	movlb	1	; () banked
  6341  013D8E  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
  6342  013D90  0E64               	movlw	100
  6343  013D92  0101               	movlb	1	; () banked
  6344  013D94  6F7D               	movwf	cleanBuffer@count& (0+255),b
  6345  013D96  ECCC  F0B3         	call	_cleanBuffer	;wreg free
  6346                           
  6347                           ;main.c: 135: UARTstring("\r\n>");
  6348  013D9A  0EF5               	movlw	high (STR_16+25)
  6349  013D9C  0101               	movlb	1	; () banked
  6350  013D9E  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
  6351  013DA0  0EE3               	movlw	low (STR_16+25)
  6352  013DA2  0101               	movlb	1	; () banked
  6353  013DA4  6F7C               	movwf	UARTstring@data& (0+255),b
  6354  013DA6  ECB3  F0AD         	call	_UARTstring	;wreg free
  6355  013DAA  D7CD               	goto	l12118
  6356  013DAC                     __end_of_main:
  6357                           	opt stack 0
  6358                           tblptru	equ	0xFF8
  6359                           tblptrh	equ	0xFF7
  6360                           tblptrl	equ	0xFF6
  6361                           tablat	equ	0xFF5
  6362                           postinc0	equ	0xFEE
  6363                           wreg	equ	0xFE8
  6364                           postdec1	equ	0xFE5
  6365                           fsr1l	equ	0xFE1
  6366                           status	equ	0xFD8
  6367                           
  6368 ;; *************** function _init_LCD *****************
  6369 ;; Defined at:
  6370 ;;		line 38 in file "LCD.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;		None
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;		None
  6375 ;; Return value:  Size  Location     Type
  6376 ;;		None               void
  6377 ;; Registers used:
  6378 ;;		wreg, status,2, status,0, cstack
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6388 ;;Total ram usage:        0 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; Hardware stack levels required when called:   10
  6391 ;; This function calls:
  6392 ;;		_ClearLCD
  6393 ;;		_PulseEnablePin
  6394 ;;		_SendLCDbyte
  6395 ;;		_delayUS
  6396 ;; This function is called by:
  6397 ;;		_main
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text1
  6402  014BE8                     __ptext1:
  6403                           	opt stack 0
  6404  014BE8                     _init_LCD:
  6405                           	opt stack 19
  6406                           
  6407                           ;LCD.c: 40: LATD &= ~(0b01000000);
  6408                           
  6409                           ;incstack = 0
  6410  014BE8  9C8C               	bcf	3980,6,c	;volatile
  6411                           
  6412                           ;LCD.c: 41: PulseEnablePin();
  6413  014BEA  ECD5  F0B4         	call	_PulseEnablePin	;wreg free
  6414                           
  6415                           ;LCD.c: 42: LATD &= ~(0b10000000 + 0b00100000);
  6416  014BEE  0E5F               	movlw	95
  6417  014BF0  168C               	andwf	3980,f,c	;volatile
  6418                           
  6419                           ;LCD.c: 43: PulseEnablePin();
  6420  014BF2  ECD5  F0B4         	call	_PulseEnablePin	;wreg free
  6421                           
  6422                           ;LCD.c: 45: SendLCDbyte(0x00, 1);
  6423  014BF6  0E01               	movlw	1
  6424  014BF8  0101               	movlb	1	; () banked
  6425  014BFA  6F85               	movwf	SendLCDbyte@isCommand& (0+255),b
  6426  014BFC  0E00               	movlw	0
  6427  014BFE  EC71  F0AA         	call	_SendLCDbyte
  6428                           
  6429                           ;LCD.c: 46: delayUS(50000);
  6430  014C02  0E50               	movlw	80
  6431  014C04  0101               	movlb	1	; () banked
  6432  014C06  6F7B               	movwf	delayUS@US& (0+255),b
  6433  014C08  0EC3               	movlw	195
  6434  014C0A  0101               	movlb	1	; () banked
  6435  014C0C  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6436  014C0E  0E00               	movlw	0
  6437  014C10  0101               	movlb	1	; () banked
  6438  014C12  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6439  014C14  0E00               	movlw	0
  6440  014C16  0101               	movlb	1	; () banked
  6441  014C18  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6442  014C1A  ECC0  F0B1         	call	_delayUS	;wreg free
  6443                           
  6444                           ;LCD.c: 47: SendLCDbyte(0x00, 0);
  6445  014C1E  0E00               	movlw	0
  6446  014C20  0101               	movlb	1	; () banked
  6447  014C22  6F85               	movwf	SendLCDbyte@isCommand& (0+255),b
  6448  014C24  0E00               	movlw	0
  6449  014C26  EC71  F0AA         	call	_SendLCDbyte
  6450                           
  6451                           ;LCD.c: 48: delayUS(50000);
  6452  014C2A  0E50               	movlw	80
  6453  014C2C  0101               	movlb	1	; () banked
  6454  014C2E  6F7B               	movwf	delayUS@US& (0+255),b
  6455  014C30  0EC3               	movlw	195
  6456  014C32  0101               	movlb	1	; () banked
  6457  014C34  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6458  014C36  0E00               	movlw	0
  6459  014C38  0101               	movlb	1	; () banked
  6460  014C3A  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6461  014C3C  0E00               	movlw	0
  6462  014C3E  0101               	movlb	1	; () banked
  6463  014C40  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6464  014C42  ECC0  F0B1         	call	_delayUS	;wreg free
  6465                           
  6466                           ;LCD.c: 50: LATA |= (0b00100000);
  6467  014C46  8A89               	bsf	3977,5,c	;volatile
  6468                           
  6469                           ;LCD.c: 51: delayUS(50000);
  6470  014C48  0E50               	movlw	80
  6471  014C4A  0101               	movlb	1	; () banked
  6472  014C4C  6F7B               	movwf	delayUS@US& (0+255),b
  6473  014C4E  0EC3               	movlw	195
  6474  014C50  0101               	movlb	1	; () banked
  6475  014C52  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6476  014C54  0E00               	movlw	0
  6477  014C56  0101               	movlb	1	; () banked
  6478  014C58  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6479  014C5A  0E00               	movlw	0
  6480  014C5C  0101               	movlb	1	; () banked
  6481  014C5E  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6482  014C60  ECC0  F0B1         	call	_delayUS	;wreg free
  6483                           
  6484                           ;LCD.c: 52: PulseEnablePin();
  6485  014C64  ECD5  F0B4         	call	_PulseEnablePin	;wreg free
  6486                           
  6487                           ;LCD.c: 53: delayUS(50000);
  6488  014C68  0E50               	movlw	80
  6489  014C6A  0101               	movlb	1	; () banked
  6490  014C6C  6F7B               	movwf	delayUS@US& (0+255),b
  6491  014C6E  0EC3               	movlw	195
  6492  014C70  0101               	movlb	1	; () banked
  6493  014C72  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6494  014C74  0E00               	movlw	0
  6495  014C76  0101               	movlb	1	; () banked
  6496  014C78  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6497  014C7A  0E00               	movlw	0
  6498  014C7C  0101               	movlb	1	; () banked
  6499  014C7E  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6500  014C80  ECC0  F0B1         	call	_delayUS	;wreg free
  6501                           
  6502                           ;LCD.c: 57: SendLCDbyte(0x28, 0);
  6503  014C84  0E00               	movlw	0
  6504  014C86  0101               	movlb	1	; () banked
  6505  014C88  6F85               	movwf	SendLCDbyte@isCommand& (0+255),b
  6506  014C8A  0E28               	movlw	40
  6507  014C8C  EC71  F0AA         	call	_SendLCDbyte
  6508                           
  6509                           ;LCD.c: 58: delayUS(50000);
  6510  014C90  0E50               	movlw	80
  6511  014C92  0101               	movlb	1	; () banked
  6512  014C94  6F7B               	movwf	delayUS@US& (0+255),b
  6513  014C96  0EC3               	movlw	195
  6514  014C98  0101               	movlb	1	; () banked
  6515  014C9A  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6516  014C9C  0E00               	movlw	0
  6517  014C9E  0101               	movlb	1	; () banked
  6518  014CA0  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6519  014CA2  0E00               	movlw	0
  6520  014CA4  0101               	movlb	1	; () banked
  6521  014CA6  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6522  014CA8  ECC0  F0B1         	call	_delayUS	;wreg free
  6523                           
  6524                           ;LCD.c: 61: SendLCDbyte(0x0C, 0);
  6525  014CAC  0E00               	movlw	0
  6526  014CAE  0101               	movlb	1	; () banked
  6527  014CB0  6F85               	movwf	SendLCDbyte@isCommand& (0+255),b
  6528  014CB2  0E0C               	movlw	12
  6529  014CB4  EC71  F0AA         	call	_SendLCDbyte
  6530                           
  6531                           ;LCD.c: 62: delayUS(50000);
  6532  014CB8  0E50               	movlw	80
  6533  014CBA  0101               	movlb	1	; () banked
  6534  014CBC  6F7B               	movwf	delayUS@US& (0+255),b
  6535  014CBE  0EC3               	movlw	195
  6536  014CC0  0101               	movlb	1	; () banked
  6537  014CC2  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6538  014CC4  0E00               	movlw	0
  6539  014CC6  0101               	movlb	1	; () banked
  6540  014CC8  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6541  014CCA  0E00               	movlw	0
  6542  014CCC  0101               	movlb	1	; () banked
  6543  014CCE  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6544  014CD0  ECC0  F0B1         	call	_delayUS	;wreg free
  6545                           
  6546                           ;LCD.c: 65: SendLCDbyte(0x06, 0);
  6547  014CD4  0E00               	movlw	0
  6548  014CD6  0101               	movlb	1	; () banked
  6549  014CD8  6F85               	movwf	SendLCDbyte@isCommand& (0+255),b
  6550  014CDA  0E06               	movlw	6
  6551  014CDC  EC71  F0AA         	call	_SendLCDbyte
  6552                           
  6553                           ;LCD.c: 66: delayUS(50000);
  6554  014CE0  0E50               	movlw	80
  6555  014CE2  0101               	movlb	1	; () banked
  6556  014CE4  6F7B               	movwf	delayUS@US& (0+255),b
  6557  014CE6  0EC3               	movlw	195
  6558  014CE8  0101               	movlb	1	; () banked
  6559  014CEA  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6560  014CEC  0E00               	movlw	0
  6561  014CEE  0101               	movlb	1	; () banked
  6562  014CF0  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6563  014CF2  0E00               	movlw	0
  6564  014CF4  0101               	movlb	1	; () banked
  6565  014CF6  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6566  014CF8  ECC0  F0B1         	call	_delayUS	;wreg free
  6567                           
  6568                           ;LCD.c: 68: ClearLCD();
  6569  014CFC  EC39  F0B6         	call	_ClearLCD	;wreg free
  6570                           
  6571                           ;LCD.c: 69: delayUS(50000);
  6572  014D00  0E50               	movlw	80
  6573  014D02  0101               	movlb	1	; () banked
  6574  014D04  6F7B               	movwf	delayUS@US& (0+255),b
  6575  014D06  0EC3               	movlw	195
  6576  014D08  0101               	movlb	1	; () banked
  6577  014D0A  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  6578  014D0C  0E00               	movlw	0
  6579  014D0E  0101               	movlb	1	; () banked
  6580  014D10  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  6581  014D12  0E00               	movlw	0
  6582  014D14  0101               	movlb	1	; () banked
  6583  014D16  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  6584  014D18  ECC0  F0B1         	call	_delayUS	;wreg free
  6585  014D1C  0012               	return	
  6586  014D1E                     __end_of_init_LCD:
  6587                           	opt stack 0
  6588                           tblptru	equ	0xFF8
  6589                           tblptrh	equ	0xFF7
  6590                           tblptrl	equ	0xFF6
  6591                           tablat	equ	0xFF5
  6592                           postinc0	equ	0xFEE
  6593                           wreg	equ	0xFE8
  6594                           postdec1	equ	0xFE5
  6595                           fsr1l	equ	0xFE1
  6596                           status	equ	0xFD8
  6597                           
  6598 ;; *************** function _RTC_INIT *****************
  6599 ;; Defined at:
  6600 ;;		line 28 in file "RTC.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;		None
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;		None
  6605 ;; Return value:  Size  Location     Type
  6606 ;;		None               void
  6607 ;; Registers used:
  6608 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;Total ram usage:        0 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:   10
  6621 ;; This function calls:
  6622 ;;		_InternalADC_Read
  6623 ;;		_RTC_Clock_Enable
  6624 ;;		_RTC_TIME_NONMilitary
  6625 ;; This function is called by:
  6626 ;;		_main
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text2
  6631  016CF2                     __ptext2:
  6632                           	opt stack 0
  6633  016CF2                     _RTC_INIT:
  6634                           	opt stack 19
  6635                           
  6636                           ;RTC.c: 30: RTC_Clock_Enable();
  6637                           
  6638                           ;incstack = 0
  6639  016CF2  EC92  F0B4         	call	_RTC_Clock_Enable	;wreg free
  6640                           
  6641                           ;RTC.c: 31: RTC_TIME_NONMilitary();
  6642  016CF6  EC88  F0B0         	call	_RTC_TIME_NONMilitary	;wreg free
  6643                           
  6644                           ;RTC.c: 32: InternalADC_Read(2);
  6645  016CFA  0E02               	movlw	2
  6646  016CFC  ECD5  F0B2         	call	_InternalADC_Read
  6647  016D00  0012               	return	
  6648  016D02                     __end_of_RTC_INIT:
  6649                           	opt stack 0
  6650                           tblptru	equ	0xFF8
  6651                           tblptrh	equ	0xFF7
  6652                           tblptrl	equ	0xFF6
  6653                           tablat	equ	0xFF5
  6654                           postinc0	equ	0xFEE
  6655                           wreg	equ	0xFE8
  6656                           postdec1	equ	0xFE5
  6657                           fsr1l	equ	0xFE1
  6658                           status	equ	0xFD8
  6659                           
  6660 ;; *************** function _RTC_TIME_NONMilitary *****************
  6661 ;; Defined at:
  6662 ;;		line 48 in file "RTC.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;		None
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;  temphours       2   27[BANK1 ] int 
  6667 ;;  Error           2   25[BANK1 ] int 
  6668 ;; Return value:  Size  Location     Type
  6669 ;;		None               void
  6670 ;; Registers used:
  6671 ;;		wreg, status,2, status,0, prodl, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6678 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6679 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6680 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6681 ;;Total ram usage:        5 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    9
  6684 ;; This function calls:
  6685 ;;		_I2C_Read_At_Address
  6686 ;;		_I2C_Write_At_Address
  6687 ;;		_ResetI2C
  6688 ;; This function is called by:
  6689 ;;		_RTC_INIT
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           	psect	text3
  6694  016110                     __ptext3:
  6695                           	opt stack 0
  6696  016110                     _RTC_TIME_NONMilitary:
  6697                           	opt stack 19
  6698                           
  6699                           ;RTC.c: 50: int temphours = 0;
  6700                           
  6701                           ;incstack = 0
  6702  016110  0E00               	movlw	0
  6703  016112  0101               	movlb	1	; () banked
  6704  016114  6F89               	movwf	(RTC_TIME_NONMilitary@temphours+1)& (0+255),b
  6705  016116  0E00               	movlw	0
  6706  016118  0101               	movlb	1	; () banked
  6707  01611A  6F88               	movwf	RTC_TIME_NONMilitary@temphours& (0+255),b
  6708                           
  6709                           ; BSR set to: 1
  6710                           ;RTC.c: 51: int Error = -1;
  6711  01611C  0101               	movlb	1	; () banked
  6712  01611E  6986               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  6713  016120  0101               	movlb	1	; () banked
  6714  016122  6987               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  6715                           
  6716                           ; BSR set to: 1
  6717                           ;RTC.c: 53: temphours = I2C_Read_At_Address(0b1101000, 0x02);
  6718  016124  0E02               	movlw	2
  6719  016126  0101               	movlb	1	; () banked
  6720  016128  6F7E               	movwf	I2C_Read_At_Address@Register& (0+255),b
  6721  01612A  0E68               	movlw	104
  6722  01612C  EC8F  F0A6         	call	_I2C_Read_At_Address
  6723  016130  0101               	movlb	1	; () banked
  6724  016132  C17E  F188         	movff	?_I2C_Read_At_Address,RTC_TIME_NONMilitary@temphours
  6725  016136  0101               	movlb	1	; () banked
  6726  016138  C17F  F189         	movff	?_I2C_Read_At_Address+1,RTC_TIME_NONMilitary@temphours+1
  6727                           
  6728                           ; BSR set to: 1
  6729                           ;RTC.c: 54: if(temphours >= 0)
  6730  01613C  0101               	movlb	1	; () banked
  6731  01613E  BF89               	btfsc	(RTC_TIME_NONMilitary@temphours+1)& (0+255),7,b
  6732  016140  D016               	goto	l974
  6733                           
  6734                           ; BSR set to: 1
  6735                           ;RTC.c: 55: {
  6736                           ;RTC.c: 56: if((temphours & 0x40) == 0)
  6737  016142  0101               	movlb	1	; () banked
  6738  016144  BD88               	btfsc	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  6739  016146  D017               	goto	l10920
  6740                           
  6741                           ; BSR set to: 1
  6742                           ;RTC.c: 57: {
  6743                           ;RTC.c: 58: temphours |= 0x40;
  6744  016148  0101               	movlb	1	; () banked
  6745  01614A  8D88               	bsf	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  6746                           
  6747                           ; BSR set to: 1
  6748                           ;RTC.c: 59: Error = I2C_Write_At_Address( 0b1101000, 0x02, temphours );
  6749  01614C  0E02               	movlw	2
  6750  01614E  0101               	movlb	1	; () banked
  6751  016150  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
  6752  016152  C188  F17F         	movff	RTC_TIME_NONMilitary@temphours,I2C_Write_At_Address@data
  6753  016156  0E68               	movlw	104
  6754  016158  ECB8  F0AC         	call	_I2C_Write_At_Address
  6755  01615C  0101               	movlb	1	; () banked
  6756  01615E  6F85               	movwf	??_RTC_TIME_NONMilitary& (0+255),b
  6757  016160  0101               	movlb	1	; () banked
  6758  016162  5185               	movf	??_RTC_TIME_NONMilitary& (0+255),w,b
  6759  016164  0101               	movlb	1	; () banked
  6760  016166  6F86               	movwf	RTC_TIME_NONMilitary@Error& (0+255),b
  6761  016168  0101               	movlb	1	; () banked
  6762  01616A  6B87               	clrf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  6763  01616C  D004               	goto	l10920
  6764  01616E                     l974:
  6765                           
  6766                           ; BSR set to: 1
  6767                           ;RTC.c: 62: else
  6768                           ;RTC.c: 63: {
  6769                           ;RTC.c: 64: Error = -1;
  6770  01616E  0101               	movlb	1	; () banked
  6771  016170  6986               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  6772  016172  0101               	movlb	1	; () banked
  6773  016174  6987               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  6774  016176                     l10920:
  6775                           
  6776                           ; BSR set to: 1
  6777                           ;RTC.c: 65: }
  6778                           ;RTC.c: 66: if(Error < 0 )
  6779  016176  0101               	movlb	1	; () banked
  6780  016178  5187               	movf	(RTC_TIME_NONMilitary@Error+1)& (0+255),w,b
  6781  01617A  0A80               	xorlw	128
  6782  01617C  6EF3               	movwf	prodl,c
  6783  01617E  0E80               	movlw	128
  6784  016180  5CF3               	subwf	prodl,w,c
  6785  016182  0E00               	movlw	0
  6786  016184  B4D8               	btfsc	status,2,c
  6787  016186  5D86               	subwf	RTC_TIME_NONMilitary@Error& (0+255),w,b
  6788  016188  B0D8               	btfsc	status,0,c
  6789  01618A  0012               	return	
  6790                           
  6791                           ; BSR set to: 1
  6792                           ;RTC.c: 67: {
  6793                           ;RTC.c: 68: ResetI2C();
  6794  01618C  ECEB  F0B5         	call	_ResetI2C	;wreg free
  6795  016190  0012               	return	
  6796  016192                     __end_of_RTC_TIME_NONMilitary:
  6797                           	opt stack 0
  6798                           tblptru	equ	0xFF8
  6799                           tblptrh	equ	0xFF7
  6800                           tblptrl	equ	0xFF6
  6801                           tablat	equ	0xFF5
  6802                           prodl	equ	0xFF3
  6803                           postinc0	equ	0xFEE
  6804                           wreg	equ	0xFE8
  6805                           postdec1	equ	0xFE5
  6806                           fsr1l	equ	0xFE1
  6807                           status	equ	0xFD8
  6808                           
  6809 ;; *************** function _RTC_Clock_Enable *****************
  6810 ;; Defined at:
  6811 ;;		line 34 in file "RTC.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;		None
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;  tempSeconds     2   25[BANK1 ] int 
  6816 ;;  Error           1   24[BANK1 ] unsigned char 
  6817 ;; Return value:  Size  Location     Type
  6818 ;;		None               void
  6819 ;; Registers used:
  6820 ;;		wreg, status,2, status,0, cstack
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6829 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6830 ;;Total ram usage:        3 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; Hardware stack levels required when called:    9
  6833 ;; This function calls:
  6834 ;;		_I2C_Read_At_Address
  6835 ;;		_I2C_Write_At_Address
  6836 ;;		_ResetI2C
  6837 ;; This function is called by:
  6838 ;;		_RTC_INIT
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text4
  6843  016924                     __ptext4:
  6844                           	opt stack 0
  6845  016924                     _RTC_Clock_Enable:
  6846                           	opt stack 19
  6847                           
  6848                           ;RTC.c: 36: int tempSeconds =0;
  6849                           
  6850                           ;incstack = 0
  6851  016924  0E00               	movlw	0
  6852  016926  0101               	movlb	1	; () banked
  6853  016928  6F87               	movwf	(RTC_Clock_Enable@tempSeconds+1)& (0+255),b
  6854  01692A  0E00               	movlw	0
  6855  01692C  0101               	movlb	1	; () banked
  6856  01692E  6F86               	movwf	RTC_Clock_Enable@tempSeconds& (0+255),b
  6857                           
  6858                           ;RTC.c: 37: unsigned char Error=0;
  6859  016930  0E00               	movlw	0
  6860  016932  0101               	movlb	1	; () banked
  6861  016934  6F85               	movwf	RTC_Clock_Enable@Error& (0+255),b
  6862                           
  6863                           ; BSR set to: 1
  6864                           ;RTC.c: 39: tempSeconds = I2C_Read_At_Address(0b1101000, 0x00);
  6865  016936  0E00               	movlw	0
  6866  016938  0101               	movlb	1	; () banked
  6867  01693A  6F7E               	movwf	I2C_Read_At_Address@Register& (0+255),b
  6868  01693C  0E68               	movlw	104
  6869  01693E  EC8F  F0A6         	call	_I2C_Read_At_Address
  6870  016942  0101               	movlb	1	; () banked
  6871  016944  C17E  F186         	movff	?_I2C_Read_At_Address,RTC_Clock_Enable@tempSeconds
  6872  016948  0101               	movlb	1	; () banked
  6873  01694A  C17F  F187         	movff	?_I2C_Read_At_Address+1,RTC_Clock_Enable@tempSeconds+1
  6874                           
  6875                           ; BSR set to: 1
  6876                           ;RTC.c: 40: Error = I2C_Write_At_Address( 0b1101000, 0x00, (tempSeconds & 0x7F) );
  6877  01694E  0E00               	movlw	0
  6878  016950  0101               	movlb	1	; () banked
  6879  016952  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
  6880  016954  0101               	movlb	1	; () banked
  6881  016956  5186               	movf	RTC_Clock_Enable@tempSeconds& (0+255),w,b
  6882  016958  0B7F               	andlw	127
  6883  01695A  0101               	movlb	1	; () banked
  6884  01695C  6F7F               	movwf	I2C_Write_At_Address@data& (0+255),b
  6885  01695E  0E68               	movlw	104
  6886  016960  ECB8  F0AC         	call	_I2C_Write_At_Address
  6887  016964  0101               	movlb	1	; () banked
  6888  016966  6F85               	movwf	RTC_Clock_Enable@Error& (0+255),b
  6889                           
  6890                           ;RTC.c: 42: if(Error < 0 )
  6891  016968  0012               	return	
  6892  01696A                     __end_of_RTC_Clock_Enable:
  6893                           	opt stack 0
  6894                           tblptru	equ	0xFF8
  6895                           tblptrh	equ	0xFF7
  6896                           tblptrl	equ	0xFF6
  6897                           tablat	equ	0xFF5
  6898                           prodl	equ	0xFF3
  6899                           postinc0	equ	0xFEE
  6900                           wreg	equ	0xFE8
  6901                           postdec1	equ	0xFE5
  6902                           fsr1l	equ	0xFE1
  6903                           status	equ	0xFD8
  6904                           
  6905 ;; *************** function _I2C_Read_At_Address *****************
  6906 ;; Defined at:
  6907 ;;		line 164 in file "I2C.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;  I2Caddress      1    wreg     unsigned char 
  6910 ;;  Register        1   17[BANK1 ] unsigned char 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;  I2Caddress      1   19[BANK1 ] unsigned char 
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  2   17[BANK1 ] int 
  6915 ;; Registers used:
  6916 ;;		wreg, status,2, status,0, cstack
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6922 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;Total ram usage:        3 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; Hardware stack levels required when called:    8
  6929 ;; This function calls:
  6930 ;;		_IdleI2C
  6931 ;;		_WriteI2C
  6932 ;; This function is called by:
  6933 ;;		_RTC_Clock_Enable
  6934 ;;		_RTC_TIME_NONMilitary
  6935 ;;		_RTC_Clock_Disable
  6936 ;;		_READ_RTC_SECONDS
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           	psect	text5
  6941  014D1E                     __ptext5:
  6942                           	opt stack 0
  6943  014D1E                     _I2C_Read_At_Address:
  6944                           	opt stack 19
  6945                           
  6946                           ;incstack = 0
  6947                           ;I2C_Read_At_Address@I2Caddress stored from wreg
  6948  014D1E  0101               	movlb	1	; () banked
  6949  014D20  6F80               	movwf	I2C_Read_At_Address@I2Caddress& (0+255),b
  6950                           
  6951                           ; BSR set to: 1
  6952                           ;I2C.c: 166: IdleI2C();
  6953  014D22  EC70  F0B6         	call	_IdleI2C	;wreg free
  6954                           
  6955                           ;I2C.c: 167: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  6956  014D26  80C5               	bsf	4037,0,c	;volatile
  6957  014D28                     l1181:
  6958  014D28  B0C5               	btfsc	4037,0,c	;volatile
  6959  014D2A  D7FE               	goto	l1181
  6960  014D2C                     l1184:
  6961  014D2C  B0C5               	btfsc	4037,0,c	;volatile
  6962  014D2E  D7FE               	goto	l1184
  6963                           
  6964                           ;I2C.c: 169: if ( PIR2bits.BCLIF )
  6965  014D30  A6A1               	btfss	4001,3,c	;volatile
  6966  014D32  D005               	goto	l9712
  6967                           
  6968                           ;I2C.c: 170: {
  6969                           ;I2C.c: 171: return ( -1 );
  6970  014D34  0101               	movlb	1	; () banked
  6971  014D36  697E               	setf	?_I2C_Read_At_Address& (0+255),b
  6972  014D38  0101               	movlb	1	; () banked
  6973  014D3A  697F               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  6974  014D3C  0012               	return	
  6975  014D3E                     l9712:
  6976                           
  6977                           ;I2C.c: 173: else
  6978                           ;I2C.c: 174: {
  6979                           ;I2C.c: 175: if ( WriteI2C( (I2Caddress << 1 ) & 0xFE ) )
  6980  014D3E  0101               	movlb	1	; () banked
  6981  014D40  5180               	movf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  6982  014D42  0101               	movlb	1	; () banked
  6983  014D44  2580               	addwf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  6984  014D46  0BFE               	andlw	254
  6985  014D48  ECB9  F0AF         	call	_WriteI2C
  6986  014D4C  0900               	iorlw	0
  6987  014D4E  B4D8               	btfsc	status,2,c
  6988  014D50  D00A               	goto	l1190
  6989                           
  6990                           ;I2C.c: 176: {
  6991                           ;I2C.c: 177: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  6992  014D52  84C5               	bsf	4037,2,c	;volatile
  6993  014D54                     l1191:
  6994  014D54  B4C5               	btfsc	4037,2,c	;volatile
  6995  014D56  D7FE               	goto	l1191
  6996                           
  6997                           ;I2C.c: 178: return ( -3 );
  6998  014D58  0EFF               	movlw	255
  6999  014D5A  0101               	movlb	1	; () banked
  7000  014D5C  6F7F               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7001  014D5E  0EFD               	movlw	253
  7002  014D60  0101               	movlb	1	; () banked
  7003  014D62  6F7E               	movwf	?_I2C_Read_At_Address& (0+255),b
  7004  014D64  0012               	return	
  7005  014D66                     l1190:
  7006                           
  7007                           ;I2C.c: 179: }
  7008                           ;I2C.c: 182: if ( !SSPCON2bits.ACKSTAT )
  7009  014D66  BCC5               	btfsc	4037,6,c	;volatile
  7010  014D68  D05C               	goto	l1194
  7011                           
  7012                           ;I2C.c: 183: {
  7013                           ;I2C.c: 184: if ( WriteI2C( Register ) )
  7014  014D6A  0101               	movlb	1	; () banked
  7015  014D6C  517E               	movf	I2C_Read_At_Address@Register& (0+255),w,b
  7016  014D6E  ECB9  F0AF         	call	_WriteI2C
  7017  014D72  0900               	iorlw	0
  7018  014D74  B4D8               	btfsc	status,2,c
  7019  014D76  D00A               	goto	l1195
  7020                           
  7021                           ;I2C.c: 185: {
  7022                           ;I2C.c: 186: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7023  014D78  84C5               	bsf	4037,2,c	;volatile
  7024  014D7A                     l1196:
  7025  014D7A  B4C5               	btfsc	4037,2,c	;volatile
  7026  014D7C  D7FE               	goto	l1196
  7027                           
  7028                           ;I2C.c: 187: return ( -3 );
  7029  014D7E  0EFF               	movlw	255
  7030  014D80  0101               	movlb	1	; () banked
  7031  014D82  6F7F               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7032  014D84  0EFD               	movlw	253
  7033  014D86  0101               	movlb	1	; () banked
  7034  014D88  6F7E               	movwf	?_I2C_Read_At_Address& (0+255),b
  7035  014D8A  0012               	return	
  7036  014D8C                     l1195:
  7037                           
  7038                           ;I2C.c: 188: }
  7039                           ;I2C.c: 191: if ( !SSPCON2bits.ACKSTAT )
  7040  014D8C  BCC5               	btfsc	4037,6,c	;volatile
  7041  014D8E  D03F               	goto	l1199
  7042                           
  7043                           ;I2C.c: 192: {
  7044                           ;I2C.c: 193: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  7045  014D90  82C5               	bsf	4037,1,c	;volatile
  7046  014D92                     l1200:
  7047  014D92  B2C5               	btfsc	4037,1,c	;volatile
  7048  014D94  D7FE               	goto	l1200
  7049  014D96                     l1203:
  7050  014D96  B2C5               	btfsc	4037,1,c	;volatile
  7051  014D98  D7FE               	goto	l1203
  7052                           
  7053                           ;I2C.c: 195: if ( PIR2bits.BCLIF )
  7054  014D9A  A6A1               	btfss	4001,3,c	;volatile
  7055  014D9C  D005               	goto	l9732
  7056                           
  7057                           ;I2C.c: 196: {
  7058                           ;I2C.c: 197: return ( -1 );
  7059  014D9E  0101               	movlb	1	; () banked
  7060  014DA0  697E               	setf	?_I2C_Read_At_Address& (0+255),b
  7061  014DA2  0101               	movlb	1	; () banked
  7062  014DA4  697F               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  7063  014DA6  0012               	return	
  7064  014DA8                     l9732:
  7065                           
  7066                           ;I2C.c: 198: }
  7067                           ;I2C.c: 200: if ( WriteI2C( (I2Caddress << 1) + 1 ) )
  7068  014DA8  80D8               	bsf	status,0,c
  7069  014DAA  0101               	movlb	1	; () banked
  7070  014DAC  3580               	rlcf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  7071  014DAE  ECB9  F0AF         	call	_WriteI2C
  7072  014DB2  0900               	iorlw	0
  7073  014DB4  B4D8               	btfsc	status,2,c
  7074  014DB6  D00A               	goto	l1207
  7075                           
  7076                           ;I2C.c: 201: {
  7077                           ;I2C.c: 202: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7078  014DB8  84C5               	bsf	4037,2,c	;volatile
  7079  014DBA                     l1208:
  7080  014DBA  B4C5               	btfsc	4037,2,c	;volatile
  7081  014DBC  D7FE               	goto	l1208
  7082                           
  7083                           ;I2C.c: 203: return ( -3 );
  7084  014DBE  0EFF               	movlw	255
  7085  014DC0  0101               	movlb	1	; () banked
  7086  014DC2  6F7F               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7087  014DC4  0EFD               	movlw	253
  7088  014DC6  0101               	movlb	1	; () banked
  7089  014DC8  6F7E               	movwf	?_I2C_Read_At_Address& (0+255),b
  7090  014DCA  0012               	return	
  7091  014DCC                     l1207:
  7092                           
  7093                           ;I2C.c: 204: }
  7094                           ;I2C.c: 207: if ( !SSPCON2bits.ACKSTAT )
  7095  014DCC  BCC5               	btfsc	4037,6,c	;volatile
  7096  014DCE  D015               	goto	l1211
  7097                           
  7098                           ;I2C.c: 208: {
  7099                           ;I2C.c: 209: SSPCON2bits.RCEN = 1;
  7100  014DD0  86C5               	bsf	4037,3,c	;volatile
  7101  014DD2                     l1212:
  7102  014DD2  B6C5               	btfsc	4037,3,c	;volatile
  7103  014DD4  D7FE               	goto	l1212
  7104                           
  7105                           ;I2C.c: 211: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  7106  014DD6  8AC5               	bsf	4037,5,c	;volatile
  7107  014DD8  88C5               	bsf	4037,4,c	;volatile
  7108  014DDA                     l1215:
  7109  014DDA  B8C5               	btfsc	4037,4,c	;volatile
  7110  014DDC  D7FE               	goto	l1215
  7111  014DDE                     l1218:
  7112  014DDE  B8C5               	btfsc	4037,4,c	;volatile
  7113  014DE0  D7FE               	goto	l1218
  7114                           
  7115                           ;I2C.c: 213: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7116  014DE2  84C5               	bsf	4037,2,c	;volatile
  7117  014DE4                     l1221:
  7118  014DE4  B4C5               	btfsc	4037,2,c	;volatile
  7119  014DE6  D7FE               	goto	l1221
  7120  014DE8                     l1224:
  7121  014DE8  B4C5               	btfsc	4037,2,c	;volatile
  7122  014DEA  D7FE               	goto	l1224
  7123                           
  7124                           ;I2C.c: 215: if ( PIR2bits.BCLIF )
  7125  014DEC  A6A1               	btfss	4001,3,c	;volatile
  7126  014DEE  D023               	goto	l1189
  7127                           
  7128                           ;I2C.c: 216: {
  7129                           ;I2C.c: 217: return ( -1 );
  7130  014DF0  0101               	movlb	1	; () banked
  7131  014DF2  697E               	setf	?_I2C_Read_At_Address& (0+255),b
  7132  014DF4  0101               	movlb	1	; () banked
  7133  014DF6  697F               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  7134  014DF8  0012               	return	
  7135  014DFA                     l1211:
  7136                           
  7137                           ;I2C.c: 220: else
  7138                           ;I2C.c: 221: {
  7139                           ;I2C.c: 222: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7140  014DFA  84C5               	bsf	4037,2,c	;volatile
  7141  014DFC                     l1229:
  7142  014DFC  B4C5               	btfsc	4037,2,c	;volatile
  7143  014DFE  D7FE               	goto	l1229
  7144                           
  7145                           ;I2C.c: 223: return ( -2 );
  7146  014E00  0EFF               	movlw	255
  7147  014E02  0101               	movlb	1	; () banked
  7148  014E04  6F7F               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7149  014E06  0EFE               	movlw	254
  7150  014E08  0101               	movlb	1	; () banked
  7151  014E0A  6F7E               	movwf	?_I2C_Read_At_Address& (0+255),b
  7152  014E0C  0012               	return	
  7153  014E0E                     l1199:
  7154                           
  7155                           ;I2C.c: 227: else
  7156                           ;I2C.c: 228: {
  7157                           ;I2C.c: 229: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7158  014E0E  84C5               	bsf	4037,2,c	;volatile
  7159  014E10                     l1233:
  7160  014E10  B4C5               	btfsc	4037,2,c	;volatile
  7161  014E12  D7FE               	goto	l1233
  7162                           
  7163                           ;I2C.c: 230: return ( -2 );
  7164  014E14  0EFF               	movlw	255
  7165  014E16  0101               	movlb	1	; () banked
  7166  014E18  6F7F               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7167  014E1A  0EFE               	movlw	254
  7168  014E1C  0101               	movlb	1	; () banked
  7169  014E1E  6F7E               	movwf	?_I2C_Read_At_Address& (0+255),b
  7170  014E20  0012               	return	
  7171  014E22                     l1194:
  7172                           
  7173                           ;I2C.c: 233: else
  7174                           ;I2C.c: 234: {
  7175                           ;I2C.c: 235: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7176  014E22  84C5               	bsf	4037,2,c	;volatile
  7177  014E24                     l1237:
  7178  014E24  B4C5               	btfsc	4037,2,c	;volatile
  7179  014E26  D7FE               	goto	l1237
  7180                           
  7181                           ;I2C.c: 236: return ( -2 );
  7182  014E28  0EFF               	movlw	255
  7183  014E2A  0101               	movlb	1	; () banked
  7184  014E2C  6F7F               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7185  014E2E  0EFE               	movlw	254
  7186  014E30  0101               	movlb	1	; () banked
  7187  014E32  6F7E               	movwf	?_I2C_Read_At_Address& (0+255),b
  7188  014E34  0012               	return	
  7189  014E36                     l1189:
  7190                           
  7191                           ;I2C.c: 237: }
  7192                           ;I2C.c: 238: }
  7193                           ;I2C.c: 239: return ( (unsigned int) SSPBUF );
  7194  014E36  0101               	movlb	1	; () banked
  7195  014E38  CFC9 F17E          	movff	4041,?_I2C_Read_At_Address	;volatile
  7196  014E3C  0101               	movlb	1	; () banked
  7197  014E3E  6B7F               	clrf	(?_I2C_Read_At_Address+1)& (0+255),b
  7198                           
  7199                           ; BSR set to: 1
  7200  014E40  0012               	return	
  7201  014E42                     __end_of_I2C_Read_At_Address:
  7202                           	opt stack 0
  7203                           tblptru	equ	0xFF8
  7204                           tblptrh	equ	0xFF7
  7205                           tblptrl	equ	0xFF6
  7206                           tablat	equ	0xFF5
  7207                           prodl	equ	0xFF3
  7208                           postinc0	equ	0xFEE
  7209                           wreg	equ	0xFE8
  7210                           postdec1	equ	0xFE5
  7211                           fsr1l	equ	0xFE1
  7212                           status	equ	0xFD8
  7213                           
  7214 ;; *************** function _PWM_init *****************
  7215 ;; Defined at:
  7216 ;;		line 24 in file "PWM.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;		None
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;		None               void
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;Total ram usage:        0 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:    9
  7237 ;; This function calls:
  7238 ;;		_SetDuty
  7239 ;;		_SetFreq
  7240 ;; This function is called by:
  7241 ;;		_main
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text6
  7246  016C00                     __ptext6:
  7247                           	opt stack 0
  7248  016C00                     _PWM_init:
  7249                           	opt stack 20
  7250                           
  7251                           ;PWM.c: 27: SetFreq(60);
  7252                           
  7253                           ; BSR set to: 1
  7254                           ;incstack = 0
  7255  016C00  0E00               	movlw	0
  7256  016C02  0101               	movlb	1	; () banked
  7257  016C04  6F90               	movwf	(SetFreq@freq+1)& (0+255),b
  7258  016C06  0E3C               	movlw	60
  7259  016C08  0101               	movlb	1	; () banked
  7260  016C0A  6F8F               	movwf	SetFreq@freq& (0+255),b
  7261  016C0C  EC35  F0B2         	call	_SetFreq	;wreg free
  7262                           
  7263                           ;PWM.c: 28: SetDuty(0);
  7264  016C10  0E00               	movlw	0
  7265  016C12  ECDE  F0AA         	call	_SetDuty
  7266                           
  7267                           ;PWM.c: 29: T2CON &= ~0x03;
  7268  016C16  0EFC               	movlw	252
  7269  016C18  16CA               	andwf	4042,f,c	;volatile
  7270                           
  7271                           ;PWM.c: 30: if(16 == 1)
  7272  016C1A  D001               	goto	l11062
  7273                           
  7274                           ;PWM.c: 31: {
  7275                           ;PWM.c: 32: __nop();
  7276  016C1C  F000               	nop	
  7277  016C1E                     l11062:
  7278                           
  7279                           ;PWM.c: 38: else
  7280                           ;PWM.c: 39: {
  7281                           ;PWM.c: 40: T2CON |= 0x10;
  7282  016C1E  88CA               	bsf	4042,4,c	;volatile
  7283                           
  7284                           ;PWM.c: 41: }
  7285                           ;PWM.c: 42: T2CON |= 0b00000100;
  7286  016C20  84CA               	bsf	4042,2,c	;volatile
  7287                           
  7288                           ;PWM.c: 43: CCP1CON |= 0b00001100;
  7289  016C22  0E0C               	movlw	12
  7290  016C24  12BD               	iorwf	4029,f,c	;volatile
  7291  016C26  0012               	return	
  7292  016C28                     __end_of_PWM_init:
  7293                           	opt stack 0
  7294                           tblptru	equ	0xFF8
  7295                           tblptrh	equ	0xFF7
  7296                           tblptrl	equ	0xFF6
  7297                           tablat	equ	0xFF5
  7298                           prodl	equ	0xFF3
  7299                           postinc0	equ	0xFEE
  7300                           wreg	equ	0xFE8
  7301                           postdec1	equ	0xFE5
  7302                           fsr1l	equ	0xFE1
  7303                           status	equ	0xFD8
  7304                           
  7305 ;; *************** function _SetFreq *****************
  7306 ;; Defined at:
  7307 ;;		line 90 in file "PWM.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  freq            2   34[BANK1 ] unsigned int 
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;  temp            1   40[BANK1 ] unsigned char 
  7312 ;; Return value:  Size  Location     Type
  7313 ;;		None               void
  7314 ;; Registers used:
  7315 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7321 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7322 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7323 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7324 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7325 ;;Total ram usage:        7 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:    7
  7328 ;; This function calls:
  7329 ;;		___aldiv
  7330 ;;		___wmul
  7331 ;; This function is called by:
  7332 ;;		_PWM_init
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           	psect	text7
  7337  01646A                     __ptext7:
  7338                           	opt stack 0
  7339  01646A                     _SetFreq:
  7340                           	opt stack 21
  7341                           
  7342                           ;PWM.c: 93: unsigned char temp =0;
  7343                           
  7344                           ;incstack = 0
  7345  01646A  0E00               	movlw	0
  7346  01646C  0101               	movlb	1	; () banked
  7347  01646E  6F95               	movwf	SetFreq@temp& (0+255),b
  7348                           
  7349                           ; BSR set to: 1
  7350                           ;PWM.c: 94: temp = (unsigned char)(((41000000L >> 2)/(freq*1000))-1);
  7351  016470  0E10               	movlw	16
  7352  016472  0101               	movlb	1	; () banked
  7353  016474  6F81               	movwf	___aldiv@dividend& (0+255),b
  7354  016476  0E67               	movlw	103
  7355  016478  0101               	movlb	1	; () banked
  7356  01647A  6F82               	movwf	(___aldiv@dividend+1)& (0+255),b
  7357  01647C  0E9C               	movlw	156
  7358  01647E  0101               	movlb	1	; () banked
  7359  016480  6F83               	movwf	(___aldiv@dividend+2)& (0+255),b
  7360  016482  0E00               	movlw	0
  7361  016484  0101               	movlb	1	; () banked
  7362  016486  6F84               	movwf	(___aldiv@dividend+3)& (0+255),b
  7363  016488  C18F  F17B         	movff	SetFreq@freq,___wmul@multiplier
  7364  01648C  C190  F17C         	movff	SetFreq@freq+1,___wmul@multiplier+1
  7365  016490  0E03               	movlw	3
  7366  016492  0101               	movlb	1	; () banked
  7367  016494  6F7E               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7368  016496  0EE8               	movlw	232
  7369  016498  0101               	movlb	1	; () banked
  7370  01649A  6F7D               	movwf	___wmul@multiplicand& (0+255),b
  7371  01649C  EC12  F0B5         	call	___wmul	;wreg free
  7372  0164A0  0101               	movlb	1	; () banked
  7373  0164A2  C17B  F185         	movff	?___wmul,___aldiv@divisor
  7374  0164A6  0101               	movlb	1	; () banked
  7375  0164A8  C17C  F186         	movff	?___wmul+1,___aldiv@divisor+1
  7376  0164AC  0101               	movlb	1	; () banked
  7377  0164AE  6B87               	clrf	(___aldiv@divisor+2)& (0+255),b
  7378  0164B0  0101               	movlb	1	; () banked
  7379  0164B2  6B88               	clrf	(___aldiv@divisor+3)& (0+255),b
  7380  0164B4  EC07  F0A3         	call	___aldiv	;wreg free
  7381  0164B8  C181  F191         	movff	?___aldiv,??_SetFreq
  7382  0164BC  C182  F192         	movff	?___aldiv+1,??_SetFreq+1
  7383  0164C0  C183  F193         	movff	?___aldiv+2,??_SetFreq+2
  7384  0164C4  C184  F194         	movff	?___aldiv+3,??_SetFreq+3
  7385  0164C8  0101               	movlb	1	; () banked
  7386  0164CA  0591               	decf	??_SetFreq& (0+255),w,b
  7387  0164CC  0101               	movlb	1	; () banked
  7388  0164CE  6F95               	movwf	SetFreq@temp& (0+255),b
  7389                           
  7390                           ; BSR set to: 1
  7391                           ;PWM.c: 96: PR2 = temp;
  7392  0164D0  C195  FFCB         	movff	SetFreq@temp,4043	;volatile
  7393                           
  7394                           ; BSR set to: 1
  7395  0164D4  0012               	return	
  7396  0164D6                     __end_of_SetFreq:
  7397                           	opt stack 0
  7398                           tblptru	equ	0xFF8
  7399                           tblptrh	equ	0xFF7
  7400                           tblptrl	equ	0xFF6
  7401                           tablat	equ	0xFF5
  7402                           prodl	equ	0xFF3
  7403                           postinc0	equ	0xFEE
  7404                           wreg	equ	0xFE8
  7405                           postdec1	equ	0xFE5
  7406                           fsr1l	equ	0xFE1
  7407                           status	equ	0xFD8
  7408                           
  7409 ;; *************** function ___aldiv *****************
  7410 ;; Defined at:
  7411 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;  dividend        4   20[BANK1 ] long 
  7414 ;;  divisor         4   24[BANK1 ] long 
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;  quotient        4   30[BANK1 ] long 
  7417 ;;  sign            1   29[BANK1 ] unsigned char 
  7418 ;;  counter         1   28[BANK1 ] unsigned char 
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  4   20[BANK1 ] long 
  7421 ;; Registers used:
  7422 ;;		wreg, status,2, status,0
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7428 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7429 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7431 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  7432 ;;Total ram usage:       14 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:    6
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		_SetFreq
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text8
  7443  01460E                     __ptext8:
  7444                           	opt stack 0
  7445  01460E                     ___aldiv:
  7446                           	opt stack 21
  7447                           
  7448                           ; BSR set to: 1
  7449                           ;incstack = 0
  7450  01460E  0E00               	movlw	0
  7451  014610  0101               	movlb	1	; () banked
  7452  014612  6F8A               	movwf	___aldiv@sign& (0+255),b
  7453                           
  7454                           ; BSR set to: 1
  7455  014614  0101               	movlb	1	; () banked
  7456  014616  5188               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7457  014618  0A80               	xorlw	128
  7458  01461A  0F80               	addlw	128
  7459  01461C  E10B               	bnz	u7325
  7460  01461E  0E00               	movlw	0
  7461  014620  0101               	movlb	1	; () banked
  7462  014622  5D87               	subwf	(___aldiv@divisor+2)& (0+255),w,b
  7463  014624  E107               	bnz	u7325
  7464  014626  0E00               	movlw	0
  7465  014628  0101               	movlb	1	; () banked
  7466  01462A  5D86               	subwf	(___aldiv@divisor+1)& (0+255),w,b
  7467  01462C  E103               	bnz	u7325
  7468  01462E  0E00               	movlw	0
  7469  014630  0101               	movlb	1	; () banked
  7470  014632  5D85               	subwf	___aldiv@divisor& (0+255),w,b
  7471  014634                     u7325:
  7472  014634  B0D8               	btfsc	status,0,c
  7473  014636  D012               	goto	l6458
  7474                           
  7475                           ; BSR set to: 1
  7476  014638  0101               	movlb	1	; () banked
  7477  01463A  1F88               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7478  01463C  0101               	movlb	1	; () banked
  7479  01463E  1F87               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7480  014640  0101               	movlb	1	; () banked
  7481  014642  1F86               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7482  014644  0101               	movlb	1	; () banked
  7483  014646  6D85               	negf	___aldiv@divisor& (0+255),b
  7484  014648  0E00               	movlw	0
  7485  01464A  0101               	movlb	1	; () banked
  7486  01464C  2386               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7487  01464E  0101               	movlb	1	; () banked
  7488  014650  2387               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7489  014652  0101               	movlb	1	; () banked
  7490  014654  2388               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7491                           
  7492                           ; BSR set to: 1
  7493  014656  0E01               	movlw	1
  7494  014658  0101               	movlb	1	; () banked
  7495  01465A  6F8A               	movwf	___aldiv@sign& (0+255),b
  7496  01465C                     l6458:
  7497                           
  7498                           ; BSR set to: 1
  7499  01465C  0101               	movlb	1	; () banked
  7500  01465E  5184               	movf	(___aldiv@dividend+3)& (0+255),w,b
  7501  014660  0A80               	xorlw	128
  7502  014662  0F80               	addlw	128
  7503  014664  E10B               	bnz	u7335
  7504  014666  0E00               	movlw	0
  7505  014668  0101               	movlb	1	; () banked
  7506  01466A  5D83               	subwf	(___aldiv@dividend+2)& (0+255),w,b
  7507  01466C  E107               	bnz	u7335
  7508  01466E  0E00               	movlw	0
  7509  014670  0101               	movlb	1	; () banked
  7510  014672  5D82               	subwf	(___aldiv@dividend+1)& (0+255),w,b
  7511  014674  E103               	bnz	u7335
  7512  014676  0E00               	movlw	0
  7513  014678  0101               	movlb	1	; () banked
  7514  01467A  5D81               	subwf	___aldiv@dividend& (0+255),w,b
  7515  01467C                     u7335:
  7516  01467C  B0D8               	btfsc	status,0,c
  7517  01467E  D012               	goto	l6464
  7518                           
  7519                           ; BSR set to: 1
  7520  014680  0101               	movlb	1	; () banked
  7521  014682  1F84               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7522  014684  0101               	movlb	1	; () banked
  7523  014686  1F83               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7524  014688  0101               	movlb	1	; () banked
  7525  01468A  1F82               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7526  01468C  0101               	movlb	1	; () banked
  7527  01468E  6D81               	negf	___aldiv@dividend& (0+255),b
  7528  014690  0E00               	movlw	0
  7529  014692  0101               	movlb	1	; () banked
  7530  014694  2382               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7531  014696  0101               	movlb	1	; () banked
  7532  014698  2383               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7533  01469A  0101               	movlb	1	; () banked
  7534  01469C  2384               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7535                           
  7536                           ; BSR set to: 1
  7537  01469E  0E01               	movlw	1
  7538  0146A0  0101               	movlb	1	; () banked
  7539  0146A2  1B8A               	xorwf	___aldiv@sign& (0+255),f,b
  7540  0146A4                     l6464:
  7541                           
  7542                           ; BSR set to: 1
  7543  0146A4  0E00               	movlw	0
  7544  0146A6  0101               	movlb	1	; () banked
  7545  0146A8  6F8B               	movwf	___aldiv@quotient& (0+255),b
  7546  0146AA  0E00               	movlw	0
  7547  0146AC  0101               	movlb	1	; () banked
  7548  0146AE  6F8C               	movwf	(___aldiv@quotient+1)& (0+255),b
  7549  0146B0  0E00               	movlw	0
  7550  0146B2  0101               	movlb	1	; () banked
  7551  0146B4  6F8D               	movwf	(___aldiv@quotient+2)& (0+255),b
  7552  0146B6  0E00               	movlw	0
  7553  0146B8  0101               	movlb	1	; () banked
  7554  0146BA  6F8E               	movwf	(___aldiv@quotient+3)& (0+255),b
  7555                           
  7556                           ; BSR set to: 1
  7557  0146BC  0101               	movlb	1	; () banked
  7558  0146BE  5188               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7559  0146C0  1185               	iorwf	___aldiv@divisor& (0+255),w,b
  7560  0146C2  1186               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7561  0146C4  1187               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7562  0146C6  B4D8               	btfsc	status,2,c
  7563  0146C8  D04E               	goto	l6486
  7564                           
  7565                           ; BSR set to: 1
  7566  0146CA  0E01               	movlw	1
  7567  0146CC  0101               	movlb	1	; () banked
  7568  0146CE  6F89               	movwf	___aldiv@counter& (0+255),b
  7569  0146D0  D00C               	goto	l6472
  7570  0146D2                     l6470:
  7571                           
  7572                           ; BSR set to: 1
  7573  0146D2  0101               	movlb	1	; () banked
  7574  0146D4  90D8               	bcf	status,0,c
  7575  0146D6  0101               	movlb	1	; () banked
  7576  0146D8  3785               	rlcf	___aldiv@divisor& (0+255),f,b
  7577  0146DA  0101               	movlb	1	; () banked
  7578  0146DC  3786               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7579  0146DE  0101               	movlb	1	; () banked
  7580  0146E0  3787               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7581  0146E2  0101               	movlb	1	; () banked
  7582  0146E4  3788               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7583  0146E6  0101               	movlb	1	; () banked
  7584  0146E8  2B89               	incf	___aldiv@counter& (0+255),f,b
  7585  0146EA                     l6472:
  7586                           
  7587                           ; BSR set to: 1
  7588  0146EA  0101               	movlb	1	; () banked
  7589  0146EC  AF88               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7590  0146EE  D7F1               	goto	l6470
  7591  0146F0                     l6474:
  7592                           
  7593                           ; BSR set to: 1
  7594  0146F0  0101               	movlb	1	; () banked
  7595  0146F2  90D8               	bcf	status,0,c
  7596  0146F4  0101               	movlb	1	; () banked
  7597  0146F6  378B               	rlcf	___aldiv@quotient& (0+255),f,b
  7598  0146F8  0101               	movlb	1	; () banked
  7599  0146FA  378C               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7600  0146FC  0101               	movlb	1	; () banked
  7601  0146FE  378D               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7602  014700  0101               	movlb	1	; () banked
  7603  014702  378E               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7604                           
  7605                           ; BSR set to: 1
  7606  014704  0101               	movlb	1	; () banked
  7607  014706  5185               	movf	___aldiv@divisor& (0+255),w,b
  7608  014708  0101               	movlb	1	; () banked
  7609  01470A  5D81               	subwf	___aldiv@dividend& (0+255),w,b
  7610  01470C  0101               	movlb	1	; () banked
  7611  01470E  5186               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7612  014710  0101               	movlb	1	; () banked
  7613  014712  5982               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7614  014714  0101               	movlb	1	; () banked
  7615  014716  5187               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7616  014718  0101               	movlb	1	; () banked
  7617  01471A  5983               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7618  01471C  0101               	movlb	1	; () banked
  7619  01471E  5188               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7620  014720  0101               	movlb	1	; () banked
  7621  014722  5984               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7622  014724  A0D8               	btfss	status,0,c
  7623  014726  D012               	goto	l6482
  7624                           
  7625                           ; BSR set to: 1
  7626  014728  0101               	movlb	1	; () banked
  7627  01472A  5185               	movf	___aldiv@divisor& (0+255),w,b
  7628  01472C  0101               	movlb	1	; () banked
  7629  01472E  5F81               	subwf	___aldiv@dividend& (0+255),f,b
  7630  014730  0101               	movlb	1	; () banked
  7631  014732  5186               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7632  014734  0101               	movlb	1	; () banked
  7633  014736  5B82               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7634  014738  0101               	movlb	1	; () banked
  7635  01473A  5187               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7636  01473C  0101               	movlb	1	; () banked
  7637  01473E  5B83               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7638  014740  0101               	movlb	1	; () banked
  7639  014742  5188               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7640  014744  0101               	movlb	1	; () banked
  7641  014746  5B84               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7642                           
  7643                           ; BSR set to: 1
  7644  014748  0101               	movlb	1	; () banked
  7645  01474A  818B               	bsf	___aldiv@quotient& (0+255),0,b
  7646  01474C                     l6482:
  7647                           
  7648                           ; BSR set to: 1
  7649  01474C  0101               	movlb	1	; () banked
  7650  01474E  90D8               	bcf	status,0,c
  7651  014750  0101               	movlb	1	; () banked
  7652  014752  3388               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7653  014754  0101               	movlb	1	; () banked
  7654  014756  3387               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7655  014758  0101               	movlb	1	; () banked
  7656  01475A  3386               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7657  01475C  0101               	movlb	1	; () banked
  7658  01475E  3385               	rrcf	___aldiv@divisor& (0+255),f,b
  7659                           
  7660                           ; BSR set to: 1
  7661  014760  0101               	movlb	1	; () banked
  7662  014762  2F89               	decfsz	___aldiv@counter& (0+255),f,b
  7663  014764  D7C5               	goto	l6474
  7664  014766                     l6486:
  7665                           
  7666                           ; BSR set to: 1
  7667  014766  0101               	movlb	1	; () banked
  7668  014768  518A               	movf	___aldiv@sign& (0+255),w,b
  7669  01476A  B4D8               	btfsc	status,2,c
  7670  01476C  D00F               	goto	l6490
  7671                           
  7672                           ; BSR set to: 1
  7673  01476E  0101               	movlb	1	; () banked
  7674  014770  1F8E               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7675  014772  0101               	movlb	1	; () banked
  7676  014774  1F8D               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7677  014776  0101               	movlb	1	; () banked
  7678  014778  1F8C               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7679  01477A  0101               	movlb	1	; () banked
  7680  01477C  6D8B               	negf	___aldiv@quotient& (0+255),b
  7681  01477E  0E00               	movlw	0
  7682  014780  0101               	movlb	1	; () banked
  7683  014782  238C               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7684  014784  0101               	movlb	1	; () banked
  7685  014786  238D               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7686  014788  0101               	movlb	1	; () banked
  7687  01478A  238E               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7688  01478C                     l6490:
  7689                           
  7690                           ; BSR set to: 1
  7691  01478C  C18B  F181         	movff	___aldiv@quotient,?___aldiv
  7692  014790  C18C  F182         	movff	___aldiv@quotient+1,?___aldiv+1
  7693  014794  C18D  F183         	movff	___aldiv@quotient+2,?___aldiv+2
  7694  014798  C18E  F184         	movff	___aldiv@quotient+3,?___aldiv+3
  7695  01479C  0012               	return	
  7696  01479E                     __end_of___aldiv:
  7697                           	opt stack 0
  7698                           tblptru	equ	0xFF8
  7699                           tblptrh	equ	0xFF7
  7700                           tblptrl	equ	0xFF6
  7701                           tablat	equ	0xFF5
  7702                           prodl	equ	0xFF3
  7703                           postinc0	equ	0xFEE
  7704                           wreg	equ	0xFE8
  7705                           postdec1	equ	0xFE5
  7706                           fsr1l	equ	0xFE1
  7707                           status	equ	0xFD8
  7708                           
  7709 ;; *************** function _LCDScreenUpdate *****************
  7710 ;; Defined at:
  7711 ;;		line 216 in file "LCD.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;		None
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;		None
  7716 ;; Return value:  Size  Location     Type
  7717 ;;		None               void
  7718 ;; Registers used:
  7719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7727 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7728 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7729 ;;Total ram usage:        4 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:   10
  7732 ;; This function calls:
  7733 ;;		_ClearLCD
  7734 ;;		_LCDPrintChar
  7735 ;;		_LCDPrintString
  7736 ;;		_SetLCDcursor
  7737 ;;		_cleanBuffer
  7738 ;;		_delayUS
  7739 ;; This function is called by:
  7740 ;;		_main
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text9
  7745  012F8C                     __ptext9:
  7746                           	opt stack 0
  7747  012F8C                     _LCDScreenUpdate:
  7748                           	opt stack 19
  7749                           
  7750                           ;LCD.c: 219: delayUS(10);
  7751                           
  7752                           ; BSR set to: 1
  7753                           ;incstack = 0
  7754  012F8C  0E0A               	movlw	10
  7755  012F8E  0101               	movlb	1	; () banked
  7756  012F90  6F7B               	movwf	delayUS@US& (0+255),b
  7757  012F92  0E00               	movlw	0
  7758  012F94  0101               	movlb	1	; () banked
  7759  012F96  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  7760  012F98  0E00               	movlw	0
  7761  012F9A  0101               	movlb	1	; () banked
  7762  012F9C  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  7763  012F9E  0E00               	movlw	0
  7764  012FA0  0101               	movlb	1	; () banked
  7765  012FA2  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  7766  012FA4  ECC0  F0B1         	call	_delayUS	;wreg free
  7767                           
  7768                           ;LCD.c: 220: if(LCDclearCount<(25000-1))
  7769  012FA8  0EA7               	movlw	167
  7770  012FAA  0101               	movlb	1	; () banked
  7771  012FAC  6F8D               	movwf	??_LCDScreenUpdate& (0+255),b
  7772  012FAE  0E61               	movlw	97
  7773  012FB0  6F8E               	movwf	(??_LCDScreenUpdate+1)& (0+255),b
  7774  012FB2  0E00               	movlw	0
  7775  012FB4  6F8F               	movwf	(??_LCDScreenUpdate+2)& (0+255),b
  7776  012FB6  0E00               	movlw	0
  7777  012FB8  6F90               	movwf	(??_LCDScreenUpdate+3)& (0+255),b
  7778  012FBA  0101               	movlb	1	; () banked
  7779  012FBC  518D               	movf	??_LCDScreenUpdate& (0+255),w,b
  7780  012FBE  0101               	movlb	1	; () banked
  7781  012FC0  5DC8               	subwf	_LCDclearCount& (0+255),w,b
  7782  012FC2  0101               	movlb	1	; () banked
  7783  012FC4  518E               	movf	(??_LCDScreenUpdate+1)& (0+255),w,b
  7784  012FC6  0101               	movlb	1	; () banked
  7785  012FC8  59C9               	subwfb	(_LCDclearCount+1)& (0+255),w,b
  7786  012FCA  0101               	movlb	1	; () banked
  7787  012FCC  518F               	movf	(??_LCDScreenUpdate+2)& (0+255),w,b
  7788  012FCE  0101               	movlb	1	; () banked
  7789  012FD0  59CA               	subwfb	(_LCDclearCount+2)& (0+255),w,b
  7790  012FD2  0101               	movlb	1	; () banked
  7791  012FD4  5190               	movf	(??_LCDScreenUpdate+3)& (0+255),w,b
  7792  012FD6  0101               	movlb	1	; () banked
  7793  012FD8  59CB               	subwfb	(_LCDclearCount+3)& (0+255),w,b
  7794  012FDA  B0D8               	btfsc	status,0,c
  7795  012FDC  D00E               	goto	l11124
  7796                           
  7797                           ; BSR set to: 1
  7798                           ;LCD.c: 221: {
  7799                           ;LCD.c: 222: LCDclearCount++;
  7800  012FDE  0E01               	movlw	1
  7801  012FE0  0101               	movlb	1	; () banked
  7802  012FE2  27C8               	addwf	_LCDclearCount& (0+255),f,b
  7803  012FE4  0E00               	movlw	0
  7804  012FE6  0101               	movlb	1	; () banked
  7805  012FE8  23C9               	addwfc	(_LCDclearCount+1)& (0+255),f,b
  7806  012FEA  0101               	movlb	1	; () banked
  7807  012FEC  23CA               	addwfc	(_LCDclearCount+2)& (0+255),f,b
  7808  012FEE  0101               	movlb	1	; () banked
  7809  012FF0  23CB               	addwfc	(_LCDclearCount+3)& (0+255),f,b
  7810                           
  7811                           ; BSR set to: 1
  7812                           ;LCD.c: 223: LCDwait = 1;
  7813  012FF2  0E01               	movlw	1
  7814  012FF4  0101               	movlb	1	; () banked
  7815  012FF6  6F09               	movwf	_LCDwait& (0+255),b
  7816                           
  7817                           ;LCD.c: 224: }
  7818  012FF8  0012               	return	
  7819  012FFA                     l11124:
  7820                           
  7821                           ; BSR set to: 1
  7822                           ;LCD.c: 225: else if(LCDclearCount == (25000-1))
  7823  012FFA  0101               	movlb	1	; () banked
  7824  012FFC  51C9               	movf	(_LCDclearCount+1)& (0+255),w,b
  7825  012FFE  0A61               	xorlw	97
  7826  013000  0EA7               	movlw	167
  7827  013002  B4D8               	btfsc	status,2,c
  7828  013004  19C8               	xorwf	_LCDclearCount& (0+255),w,b
  7829  013006  11CA               	iorwf	(_LCDclearCount+2)& (0+255),w,b
  7830  013008  11CB               	iorwf	(_LCDclearCount+3)& (0+255),w,b
  7831  01300A  A4D8               	btfss	status,2,c
  7832  01300C  0012               	return	
  7833                           
  7834                           ; BSR set to: 1
  7835                           ;LCD.c: 226: {
  7836                           ;LCD.c: 227: LCDclearCount++;
  7837  01300E  0E01               	movlw	1
  7838  013010  0101               	movlb	1	; () banked
  7839  013012  27C8               	addwf	_LCDclearCount& (0+255),f,b
  7840  013014  0E00               	movlw	0
  7841  013016  0101               	movlb	1	; () banked
  7842  013018  23C9               	addwfc	(_LCDclearCount+1)& (0+255),f,b
  7843  01301A  0101               	movlb	1	; () banked
  7844  01301C  23CA               	addwfc	(_LCDclearCount+2)& (0+255),f,b
  7845  01301E  0101               	movlb	1	; () banked
  7846  013020  23CB               	addwfc	(_LCDclearCount+3)& (0+255),f,b
  7847                           
  7848                           ; BSR set to: 1
  7849                           ;LCD.c: 228: LCDwait = 0;
  7850  013022  0E00               	movlw	0
  7851  013024  0101               	movlb	1	; () banked
  7852  013026  6F09               	movwf	_LCDwait& (0+255),b
  7853                           
  7854                           ; BSR set to: 1
  7855                           ;LCD.c: 229: if(ScrollFIFOCount == 0)
  7856  013028  0101               	movlb	1	; () banked
  7857  01302A  670B               	tstfsz	_ScrollFIFOCount& (0+255),b
  7858  01302C  D00F               	goto	l11140
  7859                           
  7860                           ; BSR set to: 1
  7861                           ;LCD.c: 230: {
  7862                           ;LCD.c: 231: ScrollDisplayPosition = 0;
  7863  01302E  0E00               	movlw	0
  7864  013030  0101               	movlb	1	; () banked
  7865  013032  6F0A               	movwf	_ScrollDisplayPosition& (0+255),b
  7866                           
  7867                           ; BSR set to: 1
  7868                           ;LCD.c: 232: ClearLCD();
  7869  013034  EC39  F0B6         	call	_ClearLCD	;wreg free
  7870                           
  7871                           ;LCD.c: 233: SetLCDcursor(0, 0);
  7872  013038  0E00               	movlw	0
  7873  01303A  0101               	movlb	1	; () banked
  7874  01303C  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  7875  01303E  0E00               	movlw	0
  7876  013040  EC2D  F0B5         	call	_SetLCDcursor
  7877                           
  7878                           ;LCD.c: 234: LCDPrintChar('>');
  7879  013044  0E3E               	movlw	62
  7880  013046  EC5C  F0B6         	call	_LCDPrintChar
  7881                           
  7882                           ;LCD.c: 235: }
  7883  01304A  0012               	return	
  7884  01304C                     l11140:
  7885                           
  7886                           ;LCD.c: 236: else
  7887                           ;LCD.c: 237: {
  7888                           ;LCD.c: 238: ScrollDisplayPosition++;
  7889  01304C  0101               	movlb	1	; () banked
  7890  01304E  2B0A               	incf	_ScrollDisplayPosition& (0+255),f,b
  7891                           
  7892                           ; BSR set to: 1
  7893                           ;LCD.c: 239: if(ScrollDisplayPosition == 1)
  7894  013050  0101               	movlb	1	; () banked
  7895  013052  050A               	decf	_ScrollDisplayPosition& (0+255),w,b
  7896  013054  A4D8               	btfss	status,2,c
  7897  013056  D013               	goto	l11148
  7898                           
  7899                           ; BSR set to: 1
  7900                           ;LCD.c: 240: {
  7901                           ;LCD.c: 241: ClearLCD();
  7902  013058  EC39  F0B6         	call	_ClearLCD	;wreg free
  7903                           
  7904                           ;LCD.c: 242: SetLCDcursor(1, 0);
  7905  01305C  0E00               	movlw	0
  7906  01305E  0101               	movlb	1	; () banked
  7907  013060  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  7908  013062  0E01               	movlw	1
  7909  013064  EC2D  F0B5         	call	_SetLCDcursor
  7910                           
  7911                           ;LCD.c: 243: LCDPrintString(Scroll_1);
  7912  013068  0101               	movlb	1	; () banked
  7913  01306A  0E01               	movlw	high _Scroll_1
  7914  01306C  0101               	movlb	1	; () banked
  7915  01306E  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7916  013070  0101               	movlb	1	; () banked
  7917  013072  0E0D               	movlw	low _Scroll_1
  7918  013074  0101               	movlb	1	; () banked
  7919  013076  6F89               	movwf	LCDPrintString@Text& (0+255),b
  7920  013078  EC46  F0B1         	call	_LCDPrintString	;wreg free
  7921                           
  7922                           ;LCD.c: 244: }
  7923  01307C  D213               	goto	l11246
  7924  01307E                     l11148:
  7925                           
  7926                           ;LCD.c: 245: else if(ScrollDisplayPosition == 2)
  7927  01307E  0101               	movlb	1	; () banked
  7928  013080  510A               	movf	_ScrollDisplayPosition& (0+255),w,b
  7929  013082  0A02               	xorlw	2
  7930  013084  A4D8               	btfss	status,2,c
  7931  013086  D033               	goto	l11158
  7932                           
  7933                           ; BSR set to: 1
  7934                           ;LCD.c: 246: {
  7935                           ;LCD.c: 247: ClearLCD();
  7936  013088  EC39  F0B6         	call	_ClearLCD	;wreg free
  7937                           
  7938                           ;LCD.c: 248: SetLCDcursor(0, 0);
  7939  01308C  0E00               	movlw	0
  7940  01308E  0101               	movlb	1	; () banked
  7941  013090  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  7942  013092  0E00               	movlw	0
  7943  013094  EC2D  F0B5         	call	_SetLCDcursor
  7944                           
  7945                           ;LCD.c: 249: LCDPrintString(Scroll_1);
  7946  013098  0101               	movlb	1	; () banked
  7947  01309A  0E01               	movlw	high _Scroll_1
  7948  01309C  0101               	movlb	1	; () banked
  7949  01309E  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7950  0130A0  0101               	movlb	1	; () banked
  7951  0130A2  0E0D               	movlw	low _Scroll_1
  7952  0130A4  0101               	movlb	1	; () banked
  7953  0130A6  6F89               	movwf	LCDPrintString@Text& (0+255),b
  7954  0130A8  EC46  F0B1         	call	_LCDPrintString	;wreg free
  7955                           
  7956                           ;LCD.c: 250: SetLCDcursor(1, 0);
  7957  0130AC  0E00               	movlw	0
  7958  0130AE  0101               	movlb	1	; () banked
  7959  0130B0  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  7960  0130B2  0E01               	movlw	1
  7961  0130B4  EC2D  F0B5         	call	_SetLCDcursor
  7962                           
  7963                           ;LCD.c: 251: LCDPrintString(Scroll_2);
  7964  0130B8  0101               	movlb	1	; () banked
  7965  0130BA  0E01               	movlw	high _Scroll_2
  7966  0130BC  0101               	movlb	1	; () banked
  7967  0130BE  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7968  0130C0  0101               	movlb	1	; () banked
  7969  0130C2  0E1D               	movlw	low _Scroll_2
  7970  0130C4  0101               	movlb	1	; () banked
  7971  0130C6  6F89               	movwf	LCDPrintString@Text& (0+255),b
  7972  0130C8  EC46  F0B1         	call	_LCDPrintString	;wreg free
  7973                           
  7974                           ;LCD.c: 252: cleanBuffer(Scroll_1, 16);
  7975  0130CC  0101               	movlb	1	; () banked
  7976  0130CE  0E01               	movlw	high _Scroll_1
  7977  0130D0  0101               	movlb	1	; () banked
  7978  0130D2  6F7C               	movwf	(cleanBuffer@data+1)& (0+255),b
  7979  0130D4  0101               	movlb	1	; () banked
  7980  0130D6  0E0D               	movlw	low _Scroll_1
  7981  0130D8  0101               	movlb	1	; () banked
  7982  0130DA  6F7B               	movwf	cleanBuffer@data& (0+255),b
  7983  0130DC  0E00               	movlw	0
  7984  0130DE  0101               	movlb	1	; () banked
  7985  0130E0  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
  7986  0130E2  0E10               	movlw	16
  7987  0130E4  0101               	movlb	1	; () banked
  7988  0130E6  6F7D               	movwf	cleanBuffer@count& (0+255),b
  7989  0130E8  ECCC  F0B3         	call	_cleanBuffer	;wreg free
  7990                           
  7991                           ;LCD.c: 253: }
  7992  0130EC  D1DB               	goto	l11246
  7993  0130EE                     l11158:
  7994                           
  7995                           ;LCD.c: 254: else if(ScrollDisplayPosition == 3)
  7996  0130EE  0101               	movlb	1	; () banked
  7997  0130F0  510A               	movf	_ScrollDisplayPosition& (0+255),w,b
  7998  0130F2  0A03               	xorlw	3
  7999  0130F4  A4D8               	btfss	status,2,c
  8000  0130F6  D033               	goto	l11168
  8001                           
  8002                           ; BSR set to: 1
  8003                           ;LCD.c: 255: {
  8004                           ;LCD.c: 256: ClearLCD();
  8005  0130F8  EC39  F0B6         	call	_ClearLCD	;wreg free
  8006                           
  8007                           ;LCD.c: 257: SetLCDcursor(0, 0);
  8008  0130FC  0E00               	movlw	0
  8009  0130FE  0101               	movlb	1	; () banked
  8010  013100  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8011  013102  0E00               	movlw	0
  8012  013104  EC2D  F0B5         	call	_SetLCDcursor
  8013                           
  8014                           ;LCD.c: 258: LCDPrintString(Scroll_2);
  8015  013108  0101               	movlb	1	; () banked
  8016  01310A  0E01               	movlw	high _Scroll_2
  8017  01310C  0101               	movlb	1	; () banked
  8018  01310E  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8019  013110  0101               	movlb	1	; () banked
  8020  013112  0E1D               	movlw	low _Scroll_2
  8021  013114  0101               	movlb	1	; () banked
  8022  013116  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8023  013118  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8024                           
  8025                           ;LCD.c: 259: SetLCDcursor(1, 0);
  8026  01311C  0E00               	movlw	0
  8027  01311E  0101               	movlb	1	; () banked
  8028  013120  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8029  013122  0E01               	movlw	1
  8030  013124  EC2D  F0B5         	call	_SetLCDcursor
  8031                           
  8032                           ;LCD.c: 260: LCDPrintString(Scroll_3);
  8033  013128  0101               	movlb	1	; () banked
  8034  01312A  0E01               	movlw	high _Scroll_3
  8035  01312C  0101               	movlb	1	; () banked
  8036  01312E  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8037  013130  0101               	movlb	1	; () banked
  8038  013132  0E2D               	movlw	low _Scroll_3
  8039  013134  0101               	movlb	1	; () banked
  8040  013136  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8041  013138  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8042                           
  8043                           ;LCD.c: 261: cleanBuffer(Scroll_2, 16);
  8044  01313C  0101               	movlb	1	; () banked
  8045  01313E  0E01               	movlw	high _Scroll_2
  8046  013140  0101               	movlb	1	; () banked
  8047  013142  6F7C               	movwf	(cleanBuffer@data+1)& (0+255),b
  8048  013144  0101               	movlb	1	; () banked
  8049  013146  0E1D               	movlw	low _Scroll_2
  8050  013148  0101               	movlb	1	; () banked
  8051  01314A  6F7B               	movwf	cleanBuffer@data& (0+255),b
  8052  01314C  0E00               	movlw	0
  8053  01314E  0101               	movlb	1	; () banked
  8054  013150  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
  8055  013152  0E10               	movlw	16
  8056  013154  0101               	movlb	1	; () banked
  8057  013156  6F7D               	movwf	cleanBuffer@count& (0+255),b
  8058  013158  ECCC  F0B3         	call	_cleanBuffer	;wreg free
  8059                           
  8060                           ;LCD.c: 262: }
  8061  01315C  D1A3               	goto	l11246
  8062  01315E                     l11168:
  8063                           
  8064                           ;LCD.c: 263: else if(ScrollDisplayPosition == 4)
  8065  01315E  0101               	movlb	1	; () banked
  8066  013160  510A               	movf	_ScrollDisplayPosition& (0+255),w,b
  8067  013162  0A04               	xorlw	4
  8068  013164  A4D8               	btfss	status,2,c
  8069  013166  D033               	goto	l11178
  8070                           
  8071                           ; BSR set to: 1
  8072                           ;LCD.c: 264: {
  8073                           ;LCD.c: 265: ClearLCD();
  8074  013168  EC39  F0B6         	call	_ClearLCD	;wreg free
  8075                           
  8076                           ;LCD.c: 266: SetLCDcursor(0, 0);
  8077  01316C  0E00               	movlw	0
  8078  01316E  0101               	movlb	1	; () banked
  8079  013170  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8080  013172  0E00               	movlw	0
  8081  013174  EC2D  F0B5         	call	_SetLCDcursor
  8082                           
  8083                           ;LCD.c: 267: LCDPrintString(Scroll_3);
  8084  013178  0101               	movlb	1	; () banked
  8085  01317A  0E01               	movlw	high _Scroll_3
  8086  01317C  0101               	movlb	1	; () banked
  8087  01317E  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8088  013180  0101               	movlb	1	; () banked
  8089  013182  0E2D               	movlw	low _Scroll_3
  8090  013184  0101               	movlb	1	; () banked
  8091  013186  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8092  013188  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8093                           
  8094                           ;LCD.c: 268: SetLCDcursor(1, 0);
  8095  01318C  0E00               	movlw	0
  8096  01318E  0101               	movlb	1	; () banked
  8097  013190  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8098  013192  0E01               	movlw	1
  8099  013194  EC2D  F0B5         	call	_SetLCDcursor
  8100                           
  8101                           ;LCD.c: 269: LCDPrintString(Scroll_4);
  8102  013198  0101               	movlb	1	; () banked
  8103  01319A  0E01               	movlw	high _Scroll_4
  8104  01319C  0101               	movlb	1	; () banked
  8105  01319E  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8106  0131A0  0101               	movlb	1	; () banked
  8107  0131A2  0E3D               	movlw	low _Scroll_4
  8108  0131A4  0101               	movlb	1	; () banked
  8109  0131A6  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8110  0131A8  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8111                           
  8112                           ;LCD.c: 270: cleanBuffer(Scroll_3, 16);
  8113  0131AC  0101               	movlb	1	; () banked
  8114  0131AE  0E01               	movlw	high _Scroll_3
  8115  0131B0  0101               	movlb	1	; () banked
  8116  0131B2  6F7C               	movwf	(cleanBuffer@data+1)& (0+255),b
  8117  0131B4  0101               	movlb	1	; () banked
  8118  0131B6  0E2D               	movlw	low _Scroll_3
  8119  0131B8  0101               	movlb	1	; () banked
  8120  0131BA  6F7B               	movwf	cleanBuffer@data& (0+255),b
  8121  0131BC  0E00               	movlw	0
  8122  0131BE  0101               	movlb	1	; () banked
  8123  0131C0  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
  8124  0131C2  0E10               	movlw	16
  8125  0131C4  0101               	movlb	1	; () banked
  8126  0131C6  6F7D               	movwf	cleanBuffer@count& (0+255),b
  8127  0131C8  ECCC  F0B3         	call	_cleanBuffer	;wreg free
  8128                           
  8129                           ;LCD.c: 271: }
  8130  0131CC  D16B               	goto	l11246
  8131  0131CE                     l11178:
  8132                           
  8133                           ;LCD.c: 272: else if(ScrollDisplayPosition == 5)
  8134  0131CE  0101               	movlb	1	; () banked
  8135  0131D0  510A               	movf	_ScrollDisplayPosition& (0+255),w,b
  8136  0131D2  0A05               	xorlw	5
  8137  0131D4  A4D8               	btfss	status,2,c
  8138  0131D6  D033               	goto	l11188
  8139                           
  8140                           ; BSR set to: 1
  8141                           ;LCD.c: 273: {
  8142                           ;LCD.c: 274: ClearLCD();
  8143  0131D8  EC39  F0B6         	call	_ClearLCD	;wreg free
  8144                           
  8145                           ;LCD.c: 275: SetLCDcursor(0, 0);
  8146  0131DC  0E00               	movlw	0
  8147  0131DE  0101               	movlb	1	; () banked
  8148  0131E0  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8149  0131E2  0E00               	movlw	0
  8150  0131E4  EC2D  F0B5         	call	_SetLCDcursor
  8151                           
  8152                           ;LCD.c: 276: LCDPrintString(Scroll_4);
  8153  0131E8  0101               	movlb	1	; () banked
  8154  0131EA  0E01               	movlw	high _Scroll_4
  8155  0131EC  0101               	movlb	1	; () banked
  8156  0131EE  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8157  0131F0  0101               	movlb	1	; () banked
  8158  0131F2  0E3D               	movlw	low _Scroll_4
  8159  0131F4  0101               	movlb	1	; () banked
  8160  0131F6  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8161  0131F8  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8162                           
  8163                           ;LCD.c: 277: SetLCDcursor(1, 0);
  8164  0131FC  0E00               	movlw	0
  8165  0131FE  0101               	movlb	1	; () banked
  8166  013200  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8167  013202  0E01               	movlw	1
  8168  013204  EC2D  F0B5         	call	_SetLCDcursor
  8169                           
  8170                           ;LCD.c: 278: LCDPrintString(Scroll_5);
  8171  013208  0101               	movlb	1	; () banked
  8172  01320A  0E01               	movlw	high _Scroll_5
  8173  01320C  0101               	movlb	1	; () banked
  8174  01320E  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8175  013210  0101               	movlb	1	; () banked
  8176  013212  0E4D               	movlw	low _Scroll_5
  8177  013214  0101               	movlb	1	; () banked
  8178  013216  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8179  013218  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8180                           
  8181                           ;LCD.c: 279: cleanBuffer(Scroll_4, 16);
  8182  01321C  0101               	movlb	1	; () banked
  8183  01321E  0E01               	movlw	high _Scroll_4
  8184  013220  0101               	movlb	1	; () banked
  8185  013222  6F7C               	movwf	(cleanBuffer@data+1)& (0+255),b
  8186  013224  0101               	movlb	1	; () banked
  8187  013226  0E3D               	movlw	low _Scroll_4
  8188  013228  0101               	movlb	1	; () banked
  8189  01322A  6F7B               	movwf	cleanBuffer@data& (0+255),b
  8190  01322C  0E00               	movlw	0
  8191  01322E  0101               	movlb	1	; () banked
  8192  013230  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
  8193  013232  0E10               	movlw	16
  8194  013234  0101               	movlb	1	; () banked
  8195  013236  6F7D               	movwf	cleanBuffer@count& (0+255),b
  8196  013238  ECCC  F0B3         	call	_cleanBuffer	;wreg free
  8197                           
  8198                           ;LCD.c: 280: }
  8199  01323C  D133               	goto	l11246
  8200  01323E                     l11188:
  8201                           
  8202                           ;LCD.c: 281: else if(ScrollDisplayPosition == 6)
  8203  01323E  0101               	movlb	1	; () banked
  8204  013240  510A               	movf	_ScrollDisplayPosition& (0+255),w,b
  8205  013242  0A06               	xorlw	6
  8206  013244  A4D8               	btfss	status,2,c
  8207  013246  D033               	goto	l11198
  8208                           
  8209                           ; BSR set to: 1
  8210                           ;LCD.c: 282: {
  8211                           ;LCD.c: 283: ClearLCD();
  8212  013248  EC39  F0B6         	call	_ClearLCD	;wreg free
  8213                           
  8214                           ;LCD.c: 284: SetLCDcursor(0, 0);
  8215  01324C  0E00               	movlw	0
  8216  01324E  0101               	movlb	1	; () banked
  8217  013250  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8218  013252  0E00               	movlw	0
  8219  013254  EC2D  F0B5         	call	_SetLCDcursor
  8220                           
  8221                           ;LCD.c: 285: LCDPrintString(Scroll_5);
  8222  013258  0101               	movlb	1	; () banked
  8223  01325A  0E01               	movlw	high _Scroll_5
  8224  01325C  0101               	movlb	1	; () banked
  8225  01325E  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8226  013260  0101               	movlb	1	; () banked
  8227  013262  0E4D               	movlw	low _Scroll_5
  8228  013264  0101               	movlb	1	; () banked
  8229  013266  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8230  013268  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8231                           
  8232                           ;LCD.c: 286: SetLCDcursor(1, 0);
  8233  01326C  0E00               	movlw	0
  8234  01326E  0101               	movlb	1	; () banked
  8235  013270  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8236  013272  0E01               	movlw	1
  8237  013274  EC2D  F0B5         	call	_SetLCDcursor
  8238                           
  8239                           ;LCD.c: 287: LCDPrintString(Scroll_6);
  8240  013278  0101               	movlb	1	; () banked
  8241  01327A  0E01               	movlw	high _Scroll_6
  8242  01327C  0101               	movlb	1	; () banked
  8243  01327E  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8244  013280  0101               	movlb	1	; () banked
  8245  013282  0E5D               	movlw	low _Scroll_6
  8246  013284  0101               	movlb	1	; () banked
  8247  013286  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8248  013288  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8249                           
  8250                           ;LCD.c: 288: cleanBuffer(Scroll_5, 16);
  8251  01328C  0101               	movlb	1	; () banked
  8252  01328E  0E01               	movlw	high _Scroll_5
  8253  013290  0101               	movlb	1	; () banked
  8254  013292  6F7C               	movwf	(cleanBuffer@data+1)& (0+255),b
  8255  013294  0101               	movlb	1	; () banked
  8256  013296  0E4D               	movlw	low _Scroll_5
  8257  013298  0101               	movlb	1	; () banked
  8258  01329A  6F7B               	movwf	cleanBuffer@data& (0+255),b
  8259  01329C  0E00               	movlw	0
  8260  01329E  0101               	movlb	1	; () banked
  8261  0132A0  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
  8262  0132A2  0E10               	movlw	16
  8263  0132A4  0101               	movlb	1	; () banked
  8264  0132A6  6F7D               	movwf	cleanBuffer@count& (0+255),b
  8265  0132A8  ECCC  F0B3         	call	_cleanBuffer	;wreg free
  8266                           
  8267                           ;LCD.c: 289: }
  8268  0132AC  D0FB               	goto	l11246
  8269  0132AE                     l11198:
  8270                           
  8271                           ;LCD.c: 290: else if(ScrollDisplayPosition == 7)
  8272  0132AE  0101               	movlb	1	; () banked
  8273  0132B0  510A               	movf	_ScrollDisplayPosition& (0+255),w,b
  8274  0132B2  0A07               	xorlw	7
  8275  0132B4  A4D8               	btfss	status,2,c
  8276  0132B6  D031               	goto	l11208
  8277                           
  8278                           ; BSR set to: 1
  8279                           ;LCD.c: 291: {
  8280                           ;LCD.c: 292: ClearLCD();
  8281  0132B8  EC39  F0B6         	call	_ClearLCD	;wreg free
  8282                           
  8283                           ;LCD.c: 293: SetLCDcursor(0, 0);
  8284  0132BC  0E00               	movlw	0
  8285  0132BE  0101               	movlb	1	; () banked
  8286  0132C0  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8287  0132C2  0E00               	movlw	0
  8288  0132C4  EC2D  F0B5         	call	_SetLCDcursor
  8289                           
  8290                           ;LCD.c: 294: LCDPrintString(Scroll_6);
  8291  0132C8  0101               	movlb	1	; () banked
  8292  0132CA  0E01               	movlw	high _Scroll_6
  8293  0132CC  0101               	movlb	1	; () banked
  8294  0132CE  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8295  0132D0  0101               	movlb	1	; () banked
  8296  0132D2  0E5D               	movlw	low _Scroll_6
  8297  0132D4  0101               	movlb	1	; () banked
  8298  0132D6  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8299  0132D8  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8300                           
  8301                           ;LCD.c: 295: SetLCDcursor(1, 0);
  8302  0132DC  0E00               	movlw	0
  8303  0132DE  0101               	movlb	1	; () banked
  8304  0132E0  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8305  0132E2  0E01               	movlw	1
  8306  0132E4  EC2D  F0B5         	call	_SetLCDcursor
  8307                           
  8308                           ;LCD.c: 296: LCDPrintString(Scroll_7);
  8309  0132E8  0E00               	movlw	high _Scroll_7
  8310  0132EA  0101               	movlb	1	; () banked
  8311  0132EC  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8312  0132EE  0E27               	movlw	low _Scroll_7
  8313  0132F0  0101               	movlb	1	; () banked
  8314  0132F2  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8315  0132F4  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8316                           
  8317                           ;LCD.c: 297: cleanBuffer(Scroll_6, 16);
  8318  0132F8  0101               	movlb	1	; () banked
  8319  0132FA  0E01               	movlw	high _Scroll_6
  8320  0132FC  0101               	movlb	1	; () banked
  8321  0132FE  6F7C               	movwf	(cleanBuffer@data+1)& (0+255),b
  8322  013300  0101               	movlb	1	; () banked
  8323  013302  0E5D               	movlw	low _Scroll_6
  8324  013304  0101               	movlb	1	; () banked
  8325  013306  6F7B               	movwf	cleanBuffer@data& (0+255),b
  8326  013308  0E00               	movlw	0
  8327  01330A  0101               	movlb	1	; () banked
  8328  01330C  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
  8329  01330E  0E10               	movlw	16
  8330  013310  0101               	movlb	1	; () banked
  8331  013312  6F7D               	movwf	cleanBuffer@count& (0+255),b
  8332  013314  ECCC  F0B3         	call	_cleanBuffer	;wreg free
  8333                           
  8334                           ;LCD.c: 298: }
  8335  013318  D0C5               	goto	l11246
  8336  01331A                     l11208:
  8337                           
  8338                           ;LCD.c: 299: else if(ScrollDisplayPosition == 8)
  8339  01331A  0101               	movlb	1	; () banked
  8340  01331C  510A               	movf	_ScrollDisplayPosition& (0+255),w,b
  8341  01331E  0A08               	xorlw	8
  8342  013320  A4D8               	btfss	status,2,c
  8343  013322  D02D               	goto	l11218
  8344                           
  8345                           ; BSR set to: 1
  8346                           ;LCD.c: 300: {
  8347                           ;LCD.c: 301: ClearLCD();
  8348  013324  EC39  F0B6         	call	_ClearLCD	;wreg free
  8349                           
  8350                           ;LCD.c: 302: SetLCDcursor(0, 0);
  8351  013328  0E00               	movlw	0
  8352  01332A  0101               	movlb	1	; () banked
  8353  01332C  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8354  01332E  0E00               	movlw	0
  8355  013330  EC2D  F0B5         	call	_SetLCDcursor
  8356                           
  8357                           ;LCD.c: 303: LCDPrintString(Scroll_7);
  8358  013334  0E00               	movlw	high _Scroll_7
  8359  013336  0101               	movlb	1	; () banked
  8360  013338  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8361  01333A  0E27               	movlw	low _Scroll_7
  8362  01333C  0101               	movlb	1	; () banked
  8363  01333E  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8364  013340  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8365                           
  8366                           ;LCD.c: 304: SetLCDcursor(1, 0);
  8367  013344  0E00               	movlw	0
  8368  013346  0101               	movlb	1	; () banked
  8369  013348  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8370  01334A  0E01               	movlw	1
  8371  01334C  EC2D  F0B5         	call	_SetLCDcursor
  8372                           
  8373                           ;LCD.c: 305: LCDPrintString(Scroll_8);
  8374  013350  0E00               	movlw	high _Scroll_8
  8375  013352  0101               	movlb	1	; () banked
  8376  013354  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8377  013356  0E37               	movlw	low _Scroll_8
  8378  013358  0101               	movlb	1	; () banked
  8379  01335A  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8380  01335C  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8381                           
  8382                           ;LCD.c: 306: cleanBuffer(Scroll_7, 16);
  8383  013360  0E00               	movlw	high _Scroll_7
  8384  013362  0101               	movlb	1	; () banked
  8385  013364  6F7C               	movwf	(cleanBuffer@data+1)& (0+255),b
  8386  013366  0E27               	movlw	low _Scroll_7
  8387  013368  0101               	movlb	1	; () banked
  8388  01336A  6F7B               	movwf	cleanBuffer@data& (0+255),b
  8389  01336C  0E00               	movlw	0
  8390  01336E  0101               	movlb	1	; () banked
  8391  013370  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
  8392  013372  0E10               	movlw	16
  8393  013374  0101               	movlb	1	; () banked
  8394  013376  6F7D               	movwf	cleanBuffer@count& (0+255),b
  8395  013378  ECCC  F0B3         	call	_cleanBuffer	;wreg free
  8396                           
  8397                           ;LCD.c: 307: }
  8398  01337C  D093               	goto	l11246
  8399  01337E                     l11218:
  8400                           
  8401                           ;LCD.c: 308: else if(ScrollDisplayPosition == 9)
  8402  01337E  0101               	movlb	1	; () banked
  8403  013380  510A               	movf	_ScrollDisplayPosition& (0+255),w,b
  8404  013382  0A09               	xorlw	9
  8405  013384  A4D8               	btfss	status,2,c
  8406  013386  D02F               	goto	l11228
  8407                           
  8408                           ; BSR set to: 1
  8409                           ;LCD.c: 309: {
  8410                           ;LCD.c: 310: ClearLCD();
  8411  013388  EC39  F0B6         	call	_ClearLCD	;wreg free
  8412                           
  8413                           ;LCD.c: 311: SetLCDcursor(0, 0);
  8414  01338C  0E00               	movlw	0
  8415  01338E  0101               	movlb	1	; () banked
  8416  013390  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8417  013392  0E00               	movlw	0
  8418  013394  EC2D  F0B5         	call	_SetLCDcursor
  8419                           
  8420                           ;LCD.c: 312: LCDPrintString(Scroll_8);
  8421  013398  0E00               	movlw	high _Scroll_8
  8422  01339A  0101               	movlb	1	; () banked
  8423  01339C  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8424  01339E  0E37               	movlw	low _Scroll_8
  8425  0133A0  0101               	movlb	1	; () banked
  8426  0133A2  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8427  0133A4  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8428                           
  8429                           ;LCD.c: 313: SetLCDcursor(1, 0);
  8430  0133A8  0E00               	movlw	0
  8431  0133AA  0101               	movlb	1	; () banked
  8432  0133AC  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8433  0133AE  0E01               	movlw	1
  8434  0133B0  EC2D  F0B5         	call	_SetLCDcursor
  8435                           
  8436                           ;LCD.c: 314: LCDPrintString(Scroll_9);
  8437  0133B4  0100               	movlb	0	; () banked
  8438  0133B6  0E00               	movlw	high _Scroll_9
  8439  0133B8  0101               	movlb	1	; () banked
  8440  0133BA  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8441  0133BC  0100               	movlb	0	; () banked
  8442  0133BE  0EE9               	movlw	low _Scroll_9
  8443  0133C0  0101               	movlb	1	; () banked
  8444  0133C2  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8445  0133C4  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8446                           
  8447                           ;LCD.c: 315: cleanBuffer(Scroll_8, 16);
  8448  0133C8  0E00               	movlw	high _Scroll_8
  8449  0133CA  0101               	movlb	1	; () banked
  8450  0133CC  6F7C               	movwf	(cleanBuffer@data+1)& (0+255),b
  8451  0133CE  0E37               	movlw	low _Scroll_8
  8452  0133D0  0101               	movlb	1	; () banked
  8453  0133D2  6F7B               	movwf	cleanBuffer@data& (0+255),b
  8454  0133D4  0E00               	movlw	0
  8455  0133D6  0101               	movlb	1	; () banked
  8456  0133D8  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
  8457  0133DA  0E10               	movlw	16
  8458  0133DC  0101               	movlb	1	; () banked
  8459  0133DE  6F7D               	movwf	cleanBuffer@count& (0+255),b
  8460  0133E0  ECCC  F0B3         	call	_cleanBuffer	;wreg free
  8461                           
  8462                           ;LCD.c: 316: }
  8463  0133E4  D05F               	goto	l11246
  8464  0133E6                     l11228:
  8465                           
  8466                           ;LCD.c: 317: else if(ScrollDisplayPosition == 10)
  8467  0133E6  0101               	movlb	1	; () banked
  8468  0133E8  510A               	movf	_ScrollDisplayPosition& (0+255),w,b
  8469  0133EA  0A0A               	xorlw	10
  8470  0133EC  A4D8               	btfss	status,2,c
  8471  0133EE  D033               	goto	l11238
  8472                           
  8473                           ; BSR set to: 1
  8474                           ;LCD.c: 318: {
  8475                           ;LCD.c: 319: ClearLCD();
  8476  0133F0  EC39  F0B6         	call	_ClearLCD	;wreg free
  8477                           
  8478                           ;LCD.c: 320: SetLCDcursor(0, 0);
  8479  0133F4  0E00               	movlw	0
  8480  0133F6  0101               	movlb	1	; () banked
  8481  0133F8  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8482  0133FA  0E00               	movlw	0
  8483  0133FC  EC2D  F0B5         	call	_SetLCDcursor
  8484                           
  8485                           ;LCD.c: 321: LCDPrintString(Scroll_9);
  8486  013400  0100               	movlb	0	; () banked
  8487  013402  0E00               	movlw	high _Scroll_9
  8488  013404  0101               	movlb	1	; () banked
  8489  013406  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8490  013408  0100               	movlb	0	; () banked
  8491  01340A  0EE9               	movlw	low _Scroll_9
  8492  01340C  0101               	movlb	1	; () banked
  8493  01340E  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8494  013410  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8495                           
  8496                           ;LCD.c: 322: SetLCDcursor(1, 0);
  8497  013414  0E00               	movlw	0
  8498  013416  0101               	movlb	1	; () banked
  8499  013418  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8500  01341A  0E01               	movlw	1
  8501  01341C  EC2D  F0B5         	call	_SetLCDcursor
  8502                           
  8503                           ;LCD.c: 323: LCDPrintString(Scroll_10);
  8504  013420  0100               	movlb	0	; () banked
  8505  013422  0E00               	movlw	high _Scroll_10
  8506  013424  0101               	movlb	1	; () banked
  8507  013426  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8508  013428  0100               	movlb	0	; () banked
  8509  01342A  0ED9               	movlw	low _Scroll_10
  8510  01342C  0101               	movlb	1	; () banked
  8511  01342E  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8512  013430  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8513                           
  8514                           ;LCD.c: 324: cleanBuffer(Scroll_9, 16);
  8515  013434  0100               	movlb	0	; () banked
  8516  013436  0E00               	movlw	high _Scroll_9
  8517  013438  0101               	movlb	1	; () banked
  8518  01343A  6F7C               	movwf	(cleanBuffer@data+1)& (0+255),b
  8519  01343C  0100               	movlb	0	; () banked
  8520  01343E  0EE9               	movlw	low _Scroll_9
  8521  013440  0101               	movlb	1	; () banked
  8522  013442  6F7B               	movwf	cleanBuffer@data& (0+255),b
  8523  013444  0E00               	movlw	0
  8524  013446  0101               	movlb	1	; () banked
  8525  013448  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
  8526  01344A  0E10               	movlw	16
  8527  01344C  0101               	movlb	1	; () banked
  8528  01344E  6F7D               	movwf	cleanBuffer@count& (0+255),b
  8529  013450  ECCC  F0B3         	call	_cleanBuffer	;wreg free
  8530                           
  8531                           ;LCD.c: 325: }
  8532  013454  D027               	goto	l11246
  8533  013456                     l11238:
  8534                           
  8535                           ;LCD.c: 326: else if(ScrollDisplayPosition == 11)
  8536  013456  0101               	movlb	1	; () banked
  8537  013458  510A               	movf	_ScrollDisplayPosition& (0+255),w,b
  8538  01345A  0A0B               	xorlw	11
  8539  01345C  A4D8               	btfss	status,2,c
  8540  01345E  D022               	goto	l11246
  8541                           
  8542                           ; BSR set to: 1
  8543                           ;LCD.c: 327: {
  8544                           ;LCD.c: 328: ClearLCD();
  8545  013460  EC39  F0B6         	call	_ClearLCD	;wreg free
  8546                           
  8547                           ;LCD.c: 329: SetLCDcursor(0, 0);
  8548  013464  0E00               	movlw	0
  8549  013466  0101               	movlb	1	; () banked
  8550  013468  6F89               	movwf	SetLCDcursor@Col& (0+255),b
  8551  01346A  0E00               	movlw	0
  8552  01346C  EC2D  F0B5         	call	_SetLCDcursor
  8553                           
  8554                           ;LCD.c: 330: LCDPrintString(Scroll_10);
  8555  013470  0100               	movlb	0	; () banked
  8556  013472  0E00               	movlw	high _Scroll_10
  8557  013474  0101               	movlb	1	; () banked
  8558  013476  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8559  013478  0100               	movlb	0	; () banked
  8560  01347A  0ED9               	movlw	low _Scroll_10
  8561  01347C  0101               	movlb	1	; () banked
  8562  01347E  6F89               	movwf	LCDPrintString@Text& (0+255),b
  8563  013480  EC46  F0B1         	call	_LCDPrintString	;wreg free
  8564                           
  8565                           ;LCD.c: 331: cleanBuffer(Scroll_10, 16);
  8566  013484  0100               	movlb	0	; () banked
  8567  013486  0E00               	movlw	high _Scroll_10
  8568  013488  0101               	movlb	1	; () banked
  8569  01348A  6F7C               	movwf	(cleanBuffer@data+1)& (0+255),b
  8570  01348C  0100               	movlb	0	; () banked
  8571  01348E  0ED9               	movlw	low _Scroll_10
  8572  013490  0101               	movlb	1	; () banked
  8573  013492  6F7B               	movwf	cleanBuffer@data& (0+255),b
  8574  013494  0E00               	movlw	0
  8575  013496  0101               	movlb	1	; () banked
  8576  013498  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
  8577  01349A  0E10               	movlw	16
  8578  01349C  0101               	movlb	1	; () banked
  8579  01349E  6F7D               	movwf	cleanBuffer@count& (0+255),b
  8580  0134A0  ECCC  F0B3         	call	_cleanBuffer	;wreg free
  8581  0134A4                     l11246:
  8582                           
  8583                           ;LCD.c: 332: }
  8584                           ;LCD.c: 333: if(ScrollDisplayPosition > ScrollFIFOCount)
  8585  0134A4  0101               	movlb	1	; () banked
  8586  0134A6  510A               	movf	_ScrollDisplayPosition& (0+255),w,b
  8587  0134A8  0101               	movlb	1	; () banked
  8588  0134AA  5D0B               	subwf	_ScrollFIFOCount& (0+255),w,b
  8589  0134AC  B0D8               	btfsc	status,0,c
  8590  0134AE  D006               	goto	l922
  8591                           
  8592                           ; BSR set to: 1
  8593                           ;LCD.c: 334: {
  8594                           ;LCD.c: 335: ScrollFIFOCount=0;
  8595  0134B0  0E00               	movlw	0
  8596  0134B2  0101               	movlb	1	; () banked
  8597  0134B4  6F0B               	movwf	_ScrollFIFOCount& (0+255),b
  8598                           
  8599                           ;LCD.c: 336: ScrollDisplayPosition=0;
  8600  0134B6  0E00               	movlw	0
  8601  0134B8  0101               	movlb	1	; () banked
  8602  0134BA  6F0A               	movwf	_ScrollDisplayPosition& (0+255),b
  8603  0134BC                     l922:
  8604                           
  8605                           ; BSR set to: 1
  8606                           ;LCD.c: 337: }
  8607                           ;LCD.c: 338: LCDclearCount = 15000;
  8608  0134BC  0E98               	movlw	152
  8609  0134BE  0101               	movlb	1	; () banked
  8610  0134C0  6FC8               	movwf	_LCDclearCount& (0+255),b
  8611  0134C2  0E3A               	movlw	58
  8612  0134C4  0101               	movlb	1	; () banked
  8613  0134C6  6FC9               	movwf	(_LCDclearCount+1)& (0+255),b
  8614  0134C8  0E00               	movlw	0
  8615  0134CA  0101               	movlb	1	; () banked
  8616  0134CC  6FCA               	movwf	(_LCDclearCount+2)& (0+255),b
  8617  0134CE  0E00               	movlw	0
  8618  0134D0  0101               	movlb	1	; () banked
  8619  0134D2  6FCB               	movwf	(_LCDclearCount+3)& (0+255),b
  8620  0134D4  0012               	return	
  8621  0134D6                     __end_of_LCDScreenUpdate:
  8622                           	opt stack 0
  8623                           tblptru	equ	0xFF8
  8624                           tblptrh	equ	0xFF7
  8625                           tblptrl	equ	0xFF6
  8626                           tablat	equ	0xFF5
  8627                           prodl	equ	0xFF3
  8628                           postinc0	equ	0xFEE
  8629                           wreg	equ	0xFE8
  8630                           postdec1	equ	0xFE5
  8631                           fsr1l	equ	0xFE1
  8632                           status	equ	0xFD8
  8633                           
  8634 ;; *************** function _LCDPrintChar *****************
  8635 ;; Defined at:
  8636 ;;		line 211 in file "LCD.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;  character       1    wreg     unsigned char 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;  character       1   28[BANK1 ] unsigned char 
  8641 ;; Return value:  Size  Location     Type
  8642 ;;		None               void
  8643 ;; Registers used:
  8644 ;;		wreg, status,2, status,0, cstack
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;Total ram usage:        1 bytes
  8655 ;; Hardware stack levels used:    1
  8656 ;; Hardware stack levels required when called:    9
  8657 ;; This function calls:
  8658 ;;		_SendLCDbyte
  8659 ;; This function is called by:
  8660 ;;		_main
  8661 ;;		_LCDScreenUpdate
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text10
  8666  016CB8                     __ptext10:
  8667                           	opt stack 0
  8668  016CB8                     _LCDPrintChar:
  8669                           	opt stack 19
  8670                           
  8671                           ;incstack = 0
  8672                           ;LCDPrintChar@character stored from wreg
  8673  016CB8  0101               	movlb	1	; () banked
  8674  016CBA  6F89               	movwf	LCDPrintChar@character& (0+255),b
  8675                           
  8676                           ; BSR set to: 1
  8677                           ;LCD.c: 213: SendLCDbyte(character, 1);
  8678  016CBC  0E01               	movlw	1
  8679  016CBE  0101               	movlb	1	; () banked
  8680  016CC0  6F85               	movwf	SendLCDbyte@isCommand& (0+255),b
  8681  016CC2  0101               	movlb	1	; () banked
  8682  016CC4  5189               	movf	LCDPrintChar@character& (0+255),w,b
  8683  016CC6  EC71  F0AA         	call	_SendLCDbyte
  8684  016CCA  0012               	return	
  8685  016CCC                     __end_of_LCDPrintChar:
  8686                           	opt stack 0
  8687                           tblptru	equ	0xFF8
  8688                           tblptrh	equ	0xFF7
  8689                           tblptrl	equ	0xFF6
  8690                           tablat	equ	0xFF5
  8691                           prodl	equ	0xFF3
  8692                           postinc0	equ	0xFEE
  8693                           wreg	equ	0xFE8
  8694                           postdec1	equ	0xFE5
  8695                           fsr1l	equ	0xFE1
  8696                           status	equ	0xFD8
  8697                           
  8698 ;; *************** function _InitUART *****************
  8699 ;; Defined at:
  8700 ;;		line 32 in file "UART.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;		None
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  spbrg           2   23[BANK1 ] unsigned int 
  8705 ;;  temp            2   21[BANK1 ] int 
  8706 ;;  config          1   26[BANK1 ] unsigned char 
  8707 ;;  baudconfig      1   25[BANK1 ] unsigned char 
  8708 ;; Return value:  Size  Location     Type
  8709 ;;		None               void
  8710 ;; Registers used:
  8711 ;;		wreg, status,2, status,0, cstack
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8720 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  8721 ;;Total ram usage:        7 bytes
  8722 ;; Hardware stack levels used:    1
  8723 ;; Hardware stack levels required when called:    7
  8724 ;; This function calls:
  8725 ;;		_OpenUSART
  8726 ;;		_ReadUSART
  8727 ;;		_baudUSART
  8728 ;; This function is called by:
  8729 ;;		_main
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           	psect	text11
  8734  0158BE                     __ptext11:
  8735                           	opt stack 0
  8736  0158BE                     _InitUART:
  8737                           	opt stack 22
  8738                           
  8739                           ;UART.c: 34: int temp;
  8740                           ;UART.c: 35: unsigned char config;
  8741                           ;UART.c: 36: unsigned int spbrg;
  8742                           ;UART.c: 37: unsigned char baudconfig;
  8743                           ;UART.c: 38: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  8744                           
  8745                           ;incstack = 0
  8746  0158BE  0E4F               	movlw	79
  8747  0158C0  16AB               	andwf	4011,f,c	;volatile
  8748  0158C2  9AAC               	bcf	4012,5,c	;volatile
  8749  0158C4  0ECF               	movlw	207
  8750  0158C6  169D               	andwf	3997,f,c	;volatile
  8751                           
  8752                           ;UART.c: 39: config =0;
  8753  0158C8  0E00               	movlw	0
  8754  0158CA  0101               	movlb	1	; () banked
  8755  0158CC  6F87               	movwf	InitUART@config& (0+255),b
  8756                           
  8757                           ; BSR set to: 1
  8758                           ;UART.c: 40: baudconfig =0;
  8759  0158CE  0E00               	movlw	0
  8760  0158D0  0101               	movlb	1	; () banked
  8761  0158D2  6F86               	movwf	InitUART@baudconfig& (0+255),b
  8762                           
  8763                           ; BSR set to: 1
  8764                           ;UART.c: 43: config |= 0b01000000;
  8765  0158D4  0101               	movlb	1	; () banked
  8766  0158D6  8D87               	bsf	InitUART@config& (0+255),6,b
  8767                           
  8768                           ; BSR set to: 1
  8769                           ;UART.c: 46: config |= 0b00001000;
  8770  0158D8  0101               	movlb	1	; () banked
  8771  0158DA  8787               	bsf	InitUART@config& (0+255),3,b
  8772                           
  8773                           ; BSR set to: 1
  8774                           ;UART.c: 48: spbrg = 66;
  8775  0158DC  0E00               	movlw	0
  8776  0158DE  0101               	movlb	1	; () banked
  8777  0158E0  6F85               	movwf	(InitUART@spbrg+1)& (0+255),b
  8778  0158E2  0E42               	movlw	66
  8779  0158E4  0101               	movlb	1	; () banked
  8780  0158E6  6F84               	movwf	InitUART@spbrg& (0+255),b
  8781                           
  8782                           ; BSR set to: 1
  8783                           ;UART.c: 49: BAUDCON =0;
  8784  0158E8  0E00               	movlw	0
  8785  0158EA  6EB8               	movwf	4024,c	;volatile
  8786                           
  8787                           ; BSR set to: 1
  8788                           ;UART.c: 53: OpenUSART(config, spbrg);
  8789  0158EC  C184  F17B         	movff	InitUART@spbrg,OpenUSART@spbrg
  8790  0158F0  C185  F17C         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
  8791  0158F4  0101               	movlb	1	; () banked
  8792  0158F6  5187               	movf	InitUART@config& (0+255),w,b
  8793  0158F8  ECFB  F0B1         	call	_OpenUSART
  8794                           
  8795                           ;UART.c: 54: baudUSART(baudconfig);
  8796  0158FC  0101               	movlb	1	; () banked
  8797  0158FE  5186               	movf	InitUART@baudconfig& (0+255),w,b
  8798  015900  EC8E  F0B6         	call	_baudUSART
  8799                           
  8800                           ;UART.c: 55: temp = ReadUSART();
  8801  015904  EC60  F0B5         	call	_ReadUSART	;wreg free
  8802  015908  0101               	movlb	1	; () banked
  8803  01590A  6F81               	movwf	??_InitUART& (0+255),b
  8804  01590C  0101               	movlb	1	; () banked
  8805  01590E  5181               	movf	??_InitUART& (0+255),w,b
  8806  015910  0101               	movlb	1	; () banked
  8807  015912  6F82               	movwf	InitUART@temp& (0+255),b
  8808  015914  0101               	movlb	1	; () banked
  8809  015916  6B83               	clrf	(InitUART@temp+1)& (0+255),b
  8810                           
  8811                           ; BSR set to: 1
  8812                           ;UART.c: 56: temp = ReadUSART();
  8813  015918  EC60  F0B5         	call	_ReadUSART	;wreg free
  8814  01591C  0101               	movlb	1	; () banked
  8815  01591E  6F81               	movwf	??_InitUART& (0+255),b
  8816  015920  0101               	movlb	1	; () banked
  8817  015922  5181               	movf	??_InitUART& (0+255),w,b
  8818  015924  0101               	movlb	1	; () banked
  8819  015926  6F82               	movwf	InitUART@temp& (0+255),b
  8820  015928  0101               	movlb	1	; () banked
  8821  01592A  6B83               	clrf	(InitUART@temp+1)& (0+255),b
  8822                           
  8823                           ; BSR set to: 1
  8824                           ;UART.c: 57: temp = ReadUSART();
  8825  01592C  EC60  F0B5         	call	_ReadUSART	;wreg free
  8826  015930  0101               	movlb	1	; () banked
  8827  015932  6F81               	movwf	??_InitUART& (0+255),b
  8828  015934  0101               	movlb	1	; () banked
  8829  015936  5181               	movf	??_InitUART& (0+255),w,b
  8830  015938  0101               	movlb	1	; () banked
  8831  01593A  6F82               	movwf	InitUART@temp& (0+255),b
  8832  01593C  0101               	movlb	1	; () banked
  8833  01593E  6B83               	clrf	(InitUART@temp+1)& (0+255),b
  8834                           
  8835                           ; BSR set to: 1
  8836                           ;UART.c: 58: temp = ReadUSART();
  8837  015940  EC60  F0B5         	call	_ReadUSART	;wreg free
  8838  015944  0101               	movlb	1	; () banked
  8839  015946  6F81               	movwf	??_InitUART& (0+255),b
  8840  015948  0101               	movlb	1	; () banked
  8841  01594A  5181               	movf	??_InitUART& (0+255),w,b
  8842  01594C  0101               	movlb	1	; () banked
  8843  01594E  6F82               	movwf	InitUART@temp& (0+255),b
  8844  015950  0101               	movlb	1	; () banked
  8845  015952  6B83               	clrf	(InitUART@temp+1)& (0+255),b
  8846                           
  8847                           ; BSR set to: 1
  8848                           ;UART.c: 59: temp = ReadUSART();
  8849  015954  EC60  F0B5         	call	_ReadUSART	;wreg free
  8850  015958  0101               	movlb	1	; () banked
  8851  01595A  6F81               	movwf	??_InitUART& (0+255),b
  8852  01595C  0101               	movlb	1	; () banked
  8853  01595E  5181               	movf	??_InitUART& (0+255),w,b
  8854  015960  0101               	movlb	1	; () banked
  8855  015962  6F82               	movwf	InitUART@temp& (0+255),b
  8856  015964  0101               	movlb	1	; () banked
  8857  015966  6B83               	clrf	(InitUART@temp+1)& (0+255),b
  8858                           
  8859                           ; BSR set to: 1
  8860                           ;UART.c: 61: IPR1bits.RCIP = 0;
  8861  015968  9A9F               	bcf	3999,5,c	;volatile
  8862                           
  8863                           ; BSR set to: 1
  8864                           ;UART.c: 62: PIE1bits.RCIE = 1;
  8865  01596A  8A9D               	bsf	3997,5,c	;volatile
  8866                           
  8867                           ; BSR set to: 1
  8868                           ;UART.c: 63: PIR1bits.RCIF = 0;
  8869  01596C  9A9E               	bcf	3998,5,c	;volatile
  8870                           
  8871                           ; BSR set to: 1
  8872  01596E  0012               	return	
  8873  015970                     __end_of_InitUART:
  8874                           	opt stack 0
  8875                           tblptru	equ	0xFF8
  8876                           tblptrh	equ	0xFF7
  8877                           tblptrl	equ	0xFF6
  8878                           tablat	equ	0xFF5
  8879                           prodl	equ	0xFF3
  8880                           postinc0	equ	0xFEE
  8881                           wreg	equ	0xFE8
  8882                           postdec1	equ	0xFE5
  8883                           fsr1l	equ	0xFE1
  8884                           status	equ	0xFD8
  8885                           
  8886 ;; *************** function _baudUSART *****************
  8887 ;; Defined at:
  8888 ;;		line 66 in file "UART.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;  baudconfig      1    wreg     unsigned char 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;  baudconfig      1   14[BANK1 ] unsigned char 
  8893 ;; Return value:  Size  Location     Type
  8894 ;;		None               void
  8895 ;; Registers used:
  8896 ;;		wreg
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;Total ram usage:        1 bytes
  8907 ;; Hardware stack levels used:    1
  8908 ;; Hardware stack levels required when called:    6
  8909 ;; This function calls:
  8910 ;;		Nothing
  8911 ;; This function is called by:
  8912 ;;		_InitUART
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           	psect	text12
  8917  016D1C                     __ptext12:
  8918                           	opt stack 0
  8919  016D1C                     _baudUSART:
  8920                           	opt stack 22
  8921                           
  8922                           ; BSR set to: 1
  8923                           ;incstack = 0
  8924                           ;baudUSART@baudconfig stored from wreg
  8925  016D1C  0101               	movlb	1	; () banked
  8926  016D1E  6F7B               	movwf	baudUSART@baudconfig& (0+255),b
  8927                           
  8928                           ; BSR set to: 1
  8929                           ;UART.c: 68: BAUDCON = baudconfig;
  8930  016D20  C17B  FFB8         	movff	baudUSART@baudconfig,4024	;volatile
  8931                           
  8932                           ; BSR set to: 1
  8933  016D24  0012               	return	
  8934  016D26                     __end_of_baudUSART:
  8935                           	opt stack 0
  8936                           tblptru	equ	0xFF8
  8937                           tblptrh	equ	0xFF7
  8938                           tblptrl	equ	0xFF6
  8939                           tablat	equ	0xFF5
  8940                           prodl	equ	0xFF3
  8941                           postinc0	equ	0xFEE
  8942                           wreg	equ	0xFE8
  8943                           postdec1	equ	0xFE5
  8944                           fsr1l	equ	0xFE1
  8945                           status	equ	0xFD8
  8946                           
  8947 ;; *************** function _ReadUSART *****************
  8948 ;; Defined at:
  8949 ;;		line 144 in file "UART.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;		None
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;  data            1   14[BANK1 ] unsigned char 
  8954 ;; Return value:  Size  Location     Type
  8955 ;;                  1    wreg      unsigned char 
  8956 ;; Registers used:
  8957 ;;		wreg, status,2, status,0
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/0
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8964 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8966 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8967 ;;Total ram usage:        1 bytes
  8968 ;; Hardware stack levels used:    1
  8969 ;; Hardware stack levels required when called:    6
  8970 ;; This function calls:
  8971 ;;		Nothing
  8972 ;; This function is called by:
  8973 ;;		_main
  8974 ;;		_InitUART
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           	psect	text13
  8979  016AC0                     __ptext13:
  8980                           	opt stack 0
  8981  016AC0                     _ReadUSART:
  8982                           	opt stack 23
  8983                           
  8984                           ;UART.c: 146: char data;
  8985                           ;UART.c: 148: USART_Status.val &= 0xf2;
  8986                           
  8987                           ; BSR set to: 1
  8988                           ;incstack = 0
  8989  016AC0  0EF2               	movlw	242
  8990  016AC2  0101               	movlb	1	; () banked
  8991  016AC4  170C               	andwf	_USART_Status& (0+255),f,b
  8992                           
  8993                           ; BSR set to: 1
  8994                           ;UART.c: 150: if(RCSTAbits.RX9)
  8995  016AC6  ACAB               	btfss	4011,6,c	;volatile
  8996  016AC8  D006               	goto	l389
  8997                           
  8998                           ; BSR set to: 1
  8999                           ;UART.c: 151: {
  9000                           ;UART.c: 152: USART_Status.RX_NINE = 0;
  9001  016ACA  0101               	movlb	1	; () banked
  9002  016ACC  910C               	bcf	_USART_Status& (0+255),0,b
  9003                           
  9004                           ;UART.c: 153: if(RCSTAbits.RX9D)
  9005  016ACE  A0AB               	btfss	4011,0,c	;volatile
  9006  016AD0  D002               	goto	l389
  9007                           
  9008                           ; BSR set to: 1
  9009                           ;UART.c: 154: USART_Status.RX_NINE = 1;
  9010  016AD2  0101               	movlb	1	; () banked
  9011  016AD4  810C               	bsf	_USART_Status& (0+255),0,b
  9012  016AD6                     l389:
  9013                           
  9014                           ; BSR set to: 1
  9015                           ;UART.c: 155: }
  9016                           ;UART.c: 157: if(RCSTAbits.FERR)
  9017  016AD6  A4AB               	btfss	4011,2,c	;volatile
  9018  016AD8  D002               	goto	l391
  9019                           
  9020                           ; BSR set to: 1
  9021                           ;UART.c: 158: USART_Status.FRAME_ERROR = 1;
  9022  016ADA  0101               	movlb	1	; () banked
  9023  016ADC  850C               	bsf	_USART_Status& (0+255),2,b
  9024  016ADE                     l391:
  9025                           
  9026                           ; BSR set to: 1
  9027                           ;UART.c: 160: if(RCSTAbits.OERR)
  9028  016ADE  A2AB               	btfss	4011,1,c	;volatile
  9029  016AE0  D002               	goto	l392
  9030                           
  9031                           ; BSR set to: 1
  9032                           ;UART.c: 161: USART_Status.OVERRUN_ERROR = 1;
  9033  016AE2  0101               	movlb	1	; () banked
  9034  016AE4  870C               	bsf	_USART_Status& (0+255),3,b
  9035  016AE6                     l392:
  9036                           
  9037                           ; BSR set to: 1
  9038                           ;UART.c: 163: data = RCREG;
  9039  016AE6  CFAE F17B          	movff	4014,ReadUSART@data	;volatile
  9040                           
  9041                           ; BSR set to: 1
  9042                           ;UART.c: 165: return (data);
  9043  016AEA  0101               	movlb	1	; () banked
  9044  016AEC  517B               	movf	ReadUSART@data& (0+255),w,b
  9045  016AEE  0012               	return	
  9046  016AF0                     __end_of_ReadUSART:
  9047                           	opt stack 0
  9048                           tblptru	equ	0xFF8
  9049                           tblptrh	equ	0xFF7
  9050                           tblptrl	equ	0xFF6
  9051                           tablat	equ	0xFF5
  9052                           prodl	equ	0xFF3
  9053                           postinc0	equ	0xFEE
  9054                           wreg	equ	0xFE8
  9055                           postdec1	equ	0xFE5
  9056                           fsr1l	equ	0xFE1
  9057                           status	equ	0xFD8
  9058                           
  9059 ;; *************** function _OpenUSART *****************
  9060 ;; Defined at:
  9061 ;;		line 71 in file "UART.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  config          1    wreg     unsigned char 
  9064 ;;  spbrg           2   14[BANK1 ] unsigned int 
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;  config          1   19[BANK1 ] unsigned char 
  9067 ;; Return value:  Size  Location     Type
  9068 ;;		None               void
  9069 ;; Registers used:
  9070 ;;		wreg, status,2
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9076 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;Total ram usage:        6 bytes
  9081 ;; Hardware stack levels used:    1
  9082 ;; Hardware stack levels required when called:    6
  9083 ;; This function calls:
  9084 ;;		Nothing
  9085 ;; This function is called by:
  9086 ;;		_InitUART
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090                           	psect	text14
  9091  0163F6                     __ptext14:
  9092                           	opt stack 0
  9093  0163F6                     _OpenUSART:
  9094                           	opt stack 22
  9095                           
  9096                           ; BSR set to: 1
  9097                           ;incstack = 0
  9098                           ;OpenUSART@config stored from wreg
  9099  0163F6  0101               	movlb	1	; () banked
  9100  0163F8  6F80               	movwf	OpenUSART@config& (0+255),b
  9101                           
  9102                           ; BSR set to: 1
  9103                           ;UART.c: 73: TXSTA = 0;
  9104  0163FA  0E00               	movlw	0
  9105  0163FC  6EAC               	movwf	4012,c	;volatile
  9106                           
  9107                           ;UART.c: 74: RCSTA = 0;
  9108  0163FE  0E00               	movlw	0
  9109  016400  6EAB               	movwf	4011,c	;volatile
  9110                           
  9111                           ; BSR set to: 1
  9112                           ;UART.c: 76: if(config&0x01)
  9113  016402  0101               	movlb	1	; () banked
  9114  016404  B180               	btfsc	OpenUSART@config& (0+255),0,b
  9115                           
  9116                           ; BSR set to: 1
  9117                           ;UART.c: 77: TXSTAbits.SYNC = 1;
  9118  016406  88AC               	bsf	4012,4,c	;volatile
  9119                           
  9120                           ; BSR set to: 1
  9121                           ;UART.c: 79: if(config&0x02)
  9122                           
  9123                           ; BSR set to: 1
  9124  016408  0101               	movlb	1	; () banked
  9125  01640A  A380               	btfss	OpenUSART@config& (0+255),1,b
  9126  01640C  D002               	goto	l7034
  9127                           
  9128                           ; BSR set to: 1
  9129                           ;UART.c: 80: {
  9130                           ;UART.c: 81: TXSTAbits.TX9 = 1;
  9131  01640E  8CAC               	bsf	4012,6,c	;volatile
  9132                           
  9133                           ;UART.c: 82: RCSTAbits.RX9 = 1;
  9134  016410  8CAB               	bsf	4011,6,c	;volatile
  9135  016412                     l7034:
  9136                           
  9137                           ; BSR set to: 1
  9138                           ;UART.c: 83: }
  9139                           ;UART.c: 85: if(config&0x04)
  9140  016412  0101               	movlb	1	; () banked
  9141  016414  B580               	btfsc	OpenUSART@config& (0+255),2,b
  9142                           
  9143                           ; BSR set to: 1
  9144                           ;UART.c: 86: TXSTAbits.CSRC = 1;
  9145  016416  8EAC               	bsf	4012,7,c	;volatile
  9146                           
  9147                           ; BSR set to: 1
  9148                           ;UART.c: 88: if(config&0x08)
  9149                           
  9150                           ; BSR set to: 1
  9151  016418  0101               	movlb	1	; () banked
  9152  01641A  A780               	btfss	OpenUSART@config& (0+255),3,b
  9153  01641C  D002               	goto	l364
  9154                           
  9155                           ; BSR set to: 1
  9156                           ;UART.c: 89: RCSTAbits.CREN = 1;
  9157  01641E  88AB               	bsf	4011,4,c	;volatile
  9158  016420  D001               	goto	l7042
  9159  016422                     l364:
  9160                           
  9161                           ; BSR set to: 1
  9162                           ;UART.c: 90: else
  9163                           ;UART.c: 91: RCSTAbits.SREN = 1;
  9164  016422  8AAB               	bsf	4011,5,c	;volatile
  9165  016424                     l7042:
  9166                           
  9167                           ; BSR set to: 1
  9168                           ;UART.c: 93: if(config&0x10)
  9169  016424  0101               	movlb	1	; () banked
  9170  016426  B980               	btfsc	OpenUSART@config& (0+255),4,b
  9171                           
  9172                           ; BSR set to: 1
  9173                           ;UART.c: 94: TXSTAbits.BRGH = 1;
  9174  016428  84AC               	bsf	4012,2,c	;volatile
  9175                           
  9176                           ; BSR set to: 1
  9177                           ;UART.c: 96: PIR1bits.TXIF = 0;
  9178  01642A  989E               	bcf	3998,4,c	;volatile
  9179                           
  9180                           ; BSR set to: 1
  9181                           ;UART.c: 98: if(config&0x20)
  9182  01642C  0101               	movlb	1	; () banked
  9183  01642E  BB80               	btfsc	OpenUSART@config& (0+255),5,b
  9184                           
  9185                           ; BSR set to: 1
  9186                           ;UART.c: 99: RCSTAbits.ADEN = 1;
  9187  016430  86AB               	bsf	4011,3,c	;volatile
  9188                           
  9189                           ; BSR set to: 1
  9190                           ;UART.c: 101: if(config&0x40)
  9191                           
  9192                           ; BSR set to: 1
  9193  016432  0101               	movlb	1	; () banked
  9194  016434  AD80               	btfss	OpenUSART@config& (0+255),6,b
  9195  016436  D002               	goto	l368
  9196                           
  9197                           ; BSR set to: 1
  9198                           ;UART.c: 102: PIE1bits.RCIE = 1;
  9199  016438  8A9D               	bsf	3997,5,c	;volatile
  9200  01643A  D001               	goto	l369
  9201  01643C                     l368:
  9202                           
  9203                           ; BSR set to: 1
  9204                           ;UART.c: 103: else
  9205                           ;UART.c: 104: PIE1bits.RCIE = 0;
  9206  01643C  9A9D               	bcf	3997,5,c	;volatile
  9207  01643E                     l369:
  9208                           
  9209                           ; BSR set to: 1
  9210                           ;UART.c: 106: PIR1bits.RCIF = 0;
  9211  01643E  9A9E               	bcf	3998,5,c	;volatile
  9212                           
  9213                           ; BSR set to: 1
  9214                           ;UART.c: 108: if(config&0x80)
  9215  016440  0101               	movlb	1	; () banked
  9216  016442  AF80               	btfss	OpenUSART@config& (0+255),7,b
  9217  016444  D002               	goto	l370
  9218                           
  9219                           ; BSR set to: 1
  9220                           ;UART.c: 109: PIE1bits.TXIE = 1;
  9221  016446  889D               	bsf	3997,4,c	;volatile
  9222  016448  D001               	goto	l371
  9223  01644A                     l370:
  9224                           
  9225                           ; BSR set to: 1
  9226                           ;UART.c: 110: else
  9227                           ;UART.c: 111: PIE1bits.TXIE = 0;
  9228  01644A  989D               	bcf	3997,4,c	;volatile
  9229  01644C                     l371:
  9230                           
  9231                           ; BSR set to: 1
  9232                           ;UART.c: 113: SPBRG = spbrg;
  9233  01644C  C17B  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  9234                           
  9235                           ; BSR set to: 1
  9236                           ;UART.c: 114: SPBRGH = spbrg >> 8;
  9237  016450  0101               	movlb	1	; () banked
  9238  016452  C17C  F17D         	movff	OpenUSART@spbrg+1,??_OpenUSART
  9239  016456  C17D  F17E         	movff	??_OpenUSART,??_OpenUSART+1
  9240  01645A  0101               	movlb	1	; () banked
  9241  01645C  6B7F               	clrf	(??_OpenUSART+2)& (0+255),b
  9242  01645E  0101               	movlb	1	; () banked
  9243  016460  517E               	movf	(??_OpenUSART+1)& (0+255),w,b
  9244  016462  6EB0               	movwf	4016,c	;volatile
  9245                           
  9246                           ; BSR set to: 1
  9247                           ;UART.c: 116: TXSTAbits.TXEN = 1;
  9248  016464  8AAC               	bsf	4012,5,c	;volatile
  9249                           
  9250                           ; BSR set to: 1
  9251                           ;UART.c: 117: RCSTAbits.SPEN = 1;
  9252  016466  8EAB               	bsf	4011,7,c	;volatile
  9253                           
  9254                           ; BSR set to: 1
  9255  016468  0012               	return	
  9256  01646A                     __end_of_OpenUSART:
  9257                           	opt stack 0
  9258                           tblptru	equ	0xFF8
  9259                           tblptrh	equ	0xFF7
  9260                           tblptrl	equ	0xFF6
  9261                           tablat	equ	0xFF5
  9262                           prodl	equ	0xFF3
  9263                           postinc0	equ	0xFEE
  9264                           wreg	equ	0xFE8
  9265                           postdec1	equ	0xFE5
  9266                           fsr1l	equ	0xFE1
  9267                           status	equ	0xFD8
  9268                           
  9269 ;; *************** function _InitApp *****************
  9270 ;; Defined at:
  9271 ;;		line 27 in file "user.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;		None
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;		None
  9276 ;; Return value:  Size  Location     Type
  9277 ;;		None               void
  9278 ;; Registers used:
  9279 ;;		wreg, status,2, status,0, cstack
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;Total ram usage:        0 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; Hardware stack levels required when called:    7
  9292 ;; This function calls:
  9293 ;;		_delayUS
  9294 ;; This function is called by:
  9295 ;;		_main
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text15
  9300  01673A                     __ptext15:
  9301                           	opt stack 0
  9302  01673A                     _InitApp:
  9303                           	opt stack 22
  9304                           
  9305                           ;user.c: 29: TRISDbits.TRISD1 = 0;
  9306                           
  9307                           ; BSR set to: 1
  9308                           ;incstack = 0
  9309  01673A  9295               	bcf	3989,1,c	;volatile
  9310                           
  9311                           ;user.c: 30: TRISDbits.TRISD2 = 0;
  9312  01673C  9495               	bcf	3989,2,c	;volatile
  9313                           
  9314                           ;user.c: 31: TRISDbits.TRISD0 = 0;
  9315  01673E  9095               	bcf	3989,0,c	;volatile
  9316                           
  9317                           ;user.c: 32: TRISAbits.TRISA0 = 1;
  9318  016740  8092               	bsf	3986,0,c	;volatile
  9319                           
  9320                           ;user.c: 33: TRISCbits.TRISC2 = 0;
  9321  016742  9494               	bcf	3988,2,c	;volatile
  9322                           
  9323                           ;user.c: 34: TRISCbits.TRISC1 = 0;
  9324  016744  9294               	bcf	3988,1,c	;volatile
  9325                           
  9326                           ;user.c: 35: TRISEbits.TRISE2 = 1;
  9327  016746  8496               	bsf	3990,2,c	;volatile
  9328                           
  9329                           ;user.c: 36: TRISEbits.TRISE1 = 0;
  9330  016748  9296               	bcf	3990,1,c	;volatile
  9331                           
  9332                           ;user.c: 38: TRISCbits.TRISC3 = 0;
  9333  01674A  9694               	bcf	3988,3,c	;volatile
  9334                           
  9335                           ;user.c: 39: TRISCbits.TRISC4 = 0;
  9336  01674C  9894               	bcf	3988,4,c	;volatile
  9337                           
  9338                           ;user.c: 41: LATC &= ~0b00001000;
  9339  01674E  968B               	bcf	3979,3,c	;volatile
  9340                           
  9341                           ;user.c: 42: delayUS(200);
  9342  016750  0EC8               	movlw	200
  9343  016752  0101               	movlb	1	; () banked
  9344  016754  6F7B               	movwf	delayUS@US& (0+255),b
  9345  016756  0E00               	movlw	0
  9346  016758  0101               	movlb	1	; () banked
  9347  01675A  6F7C               	movwf	(delayUS@US+1)& (0+255),b
  9348  01675C  0E00               	movlw	0
  9349  01675E  0101               	movlb	1	; () banked
  9350  016760  6F7D               	movwf	(delayUS@US+2)& (0+255),b
  9351  016762  0E00               	movlw	0
  9352  016764  0101               	movlb	1	; () banked
  9353  016766  6F7E               	movwf	(delayUS@US+3)& (0+255),b
  9354  016768  ECC0  F0B1         	call	_delayUS	;wreg free
  9355                           
  9356                           ;user.c: 43: TRISCbits.TRISC3 = 1;
  9357  01676C  8694               	bsf	3988,3,c	;volatile
  9358                           
  9359                           ;user.c: 45: LATD &= ~(0b00000010 + 0b00000100 + 0b00000001);
  9360  01676E  0EF8               	movlw	248
  9361  016770  168C               	andwf	3980,f,c	;volatile
  9362                           
  9363                           ;user.c: 46: LATE &= ~0b00000010;
  9364  016772  928D               	bcf	3981,1,c	;volatile
  9365                           
  9366                           ;user.c: 47: LATC &= ~(0b00000010);
  9367  016774  928B               	bcf	3979,1,c	;volatile
  9368                           
  9369                           ;user.c: 50: TRISAbits.TRISA3 = 0;
  9370  016776  9692               	bcf	3986,3,c	;volatile
  9371                           
  9372                           ;user.c: 51: TRISAbits.TRISA4 = 0;
  9373  016778  9892               	bcf	3986,4,c	;volatile
  9374                           
  9375                           ;user.c: 52: TRISAbits.TRISA5 = 0;
  9376  01677A  9A92               	bcf	3986,5,c	;volatile
  9377                           
  9378                           ;user.c: 53: TRISEbits.TRISE0 = 0;
  9379  01677C  9096               	bcf	3990,0,c	;volatile
  9380                           
  9381                           ;user.c: 54: TRISDbits.TRISD4 = 0;
  9382  01677E  9895               	bcf	3989,4,c	;volatile
  9383                           
  9384                           ;user.c: 55: TRISDbits.TRISD7 = 0;
  9385  016780  9E95               	bcf	3989,7,c	;volatile
  9386                           
  9387                           ;user.c: 56: TRISDbits.TRISD6 = 0;
  9388  016782  9C95               	bcf	3989,6,c	;volatile
  9389                           
  9390                           ;user.c: 57: TRISDbits.TRISD5 = 0;
  9391  016784  9A95               	bcf	3989,5,c	;volatile
  9392                           
  9393                           ;user.c: 59: LATA &= ~(0b00001000+0b00010000+0b00100000);
  9394  016786  0EC7               	movlw	199
  9395  016788  1689               	andwf	3977,f,c	;volatile
  9396                           
  9397                           ;user.c: 60: LATD &= ~(0b10000000 + 0b00100000 + 0b01000000);
  9398  01678A  0E1F               	movlw	31
  9399  01678C  168C               	andwf	3980,f,c	;volatile
  9400                           
  9401                           ;user.c: 61: LATE &= ~0b00000001;
  9402  01678E  908D               	bcf	3981,0,c	;volatile
  9403                           
  9404                           ;user.c: 63: RCONbits.IPEN = 1;
  9405  016790  8ED0               	bsf	4048,7,c	;volatile
  9406                           
  9407                           ;user.c: 64: INTCONbits.PEIE = 1;
  9408  016792  8CF2               	bsf	intcon,6,c	;volatile
  9409                           
  9410                           ;user.c: 65: INTCONbits.GIE = 1;
  9411  016794  8EF2               	bsf	intcon,7,c	;volatile
  9412  016796  0012               	return	
  9413  016798                     __end_of_InitApp:
  9414                           	opt stack 0
  9415                           tblptru	equ	0xFF8
  9416                           tblptrh	equ	0xFF7
  9417                           tblptrl	equ	0xFF6
  9418                           tablat	equ	0xFF5
  9419                           prodl	equ	0xFF3
  9420                           intcon	equ	0xFF2
  9421                           postinc0	equ	0xFEE
  9422                           wreg	equ	0xFE8
  9423                           postdec1	equ	0xFE5
  9424                           fsr1l	equ	0xFE1
  9425                           status	equ	0xFD8
  9426                           
  9427 ;; *************** function _EnableInternalADC *****************
  9428 ;; Defined at:
  9429 ;;		line 25 in file "ADC.c"
  9430 ;; Parameters:    Size  Location     Type
  9431 ;;  channels        1    wreg     unsigned char 
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;  channels        1   15[BANK1 ] unsigned char 
  9434 ;;  config          1   14[BANK1 ] unsigned char 
  9435 ;; Return value:  Size  Location     Type
  9436 ;;		None               void
  9437 ;; Registers used:
  9438 ;;		wreg, status,2, status,0
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9447 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9448 ;;Total ram usage:        2 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:    6
  9451 ;; This function calls:
  9452 ;;		Nothing
  9453 ;; This function is called by:
  9454 ;;		_main
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           	psect	text16
  9459  015A20                     __ptext16:
  9460                           	opt stack 0
  9461  015A20                     _EnableInternalADC:
  9462                           	opt stack 23
  9463                           
  9464                           ;incstack = 0
  9465                           ;EnableInternalADC@channels stored from wreg
  9466  015A20  0101               	movlb	1	; () banked
  9467  015A22  6F7C               	movwf	EnableInternalADC@channels& (0+255),b
  9468                           
  9469                           ; BSR set to: 1
  9470                           ;ADC.c: 27: unsigned char config =0;
  9471  015A24  0E00               	movlw	0
  9472  015A26  0101               	movlb	1	; () banked
  9473  015A28  6F7B               	movwf	EnableInternalADC@config& (0+255),b
  9474                           
  9475                           ; BSR set to: 1
  9476                           ;ADC.c: 29: if(channels == 1)
  9477  015A2A  0101               	movlb	1	; () banked
  9478  015A2C  057C               	decf	EnableInternalADC@channels& (0+255),w,b
  9479  015A2E  A4D8               	btfss	status,2,c
  9480  015A30  D002               	goto	l7768
  9481                           
  9482                           ; BSR set to: 1
  9483                           ;ADC.c: 30: {
  9484                           ;ADC.c: 31: config |= 0b00001110;
  9485  015A32  0E0E               	movlw	14
  9486  015A34  D03F               	goto	L10
  9487  015A36                     l7768:
  9488                           
  9489                           ; BSR set to: 1
  9490                           ;ADC.c: 33: else if(channels ==2)
  9491  015A36  0101               	movlb	1	; () banked
  9492  015A38  517C               	movf	EnableInternalADC@channels& (0+255),w,b
  9493  015A3A  0A02               	xorlw	2
  9494  015A3C  A4D8               	btfss	status,2,c
  9495  015A3E  D002               	goto	l7772
  9496                           
  9497                           ; BSR set to: 1
  9498                           ;ADC.c: 34: {
  9499                           ;ADC.c: 35: config |= 0b00001101;
  9500  015A40  0E0D               	movlw	13
  9501  015A42  D038               	goto	L10
  9502  015A44                     l7772:
  9503                           
  9504                           ; BSR set to: 1
  9505                           ;ADC.c: 37: else if(channels ==3)
  9506  015A44  0101               	movlb	1	; () banked
  9507  015A46  517C               	movf	EnableInternalADC@channels& (0+255),w,b
  9508  015A48  0A03               	xorlw	3
  9509  015A4A  A4D8               	btfss	status,2,c
  9510  015A4C  D002               	goto	l7776
  9511                           
  9512                           ; BSR set to: 1
  9513                           ;ADC.c: 38: {
  9514                           ;ADC.c: 39: config |= 0b00001100;
  9515  015A4E  0E0C               	movlw	12
  9516  015A50  D031               	goto	L10
  9517  015A52                     l7776:
  9518                           
  9519                           ; BSR set to: 1
  9520                           ;ADC.c: 41: else if(channels ==4)
  9521  015A52  0101               	movlb	1	; () banked
  9522  015A54  517C               	movf	EnableInternalADC@channels& (0+255),w,b
  9523  015A56  0A04               	xorlw	4
  9524  015A58  A4D8               	btfss	status,2,c
  9525  015A5A  D002               	goto	l7780
  9526                           
  9527                           ; BSR set to: 1
  9528                           ;ADC.c: 42: {
  9529                           ;ADC.c: 43: config |= 0b00001011;
  9530  015A5C  0E0B               	movlw	11
  9531  015A5E  D02A               	goto	L10
  9532  015A60                     l7780:
  9533                           
  9534                           ; BSR set to: 1
  9535                           ;ADC.c: 45: else if(channels ==5)
  9536  015A60  0101               	movlb	1	; () banked
  9537  015A62  517C               	movf	EnableInternalADC@channels& (0+255),w,b
  9538  015A64  0A05               	xorlw	5
  9539  015A66  A4D8               	btfss	status,2,c
  9540  015A68  D002               	goto	l7784
  9541                           
  9542                           ; BSR set to: 1
  9543                           ;ADC.c: 46: {
  9544                           ;ADC.c: 47: config |= 0b00001010;
  9545  015A6A  0E0A               	movlw	10
  9546  015A6C  D023               	goto	L10
  9547  015A6E                     l7784:
  9548                           
  9549                           ; BSR set to: 1
  9550                           ;ADC.c: 49: else if(channels ==6)
  9551  015A6E  0101               	movlb	1	; () banked
  9552  015A70  517C               	movf	EnableInternalADC@channels& (0+255),w,b
  9553  015A72  0A06               	xorlw	6
  9554  015A74  A4D8               	btfss	status,2,c
  9555  015A76  D002               	goto	l7788
  9556                           
  9557                           ; BSR set to: 1
  9558                           ;ADC.c: 50: {
  9559                           ;ADC.c: 51: config |= 0b00001001;
  9560  015A78  0E09               	movlw	9
  9561  015A7A  D01C               	goto	L10
  9562  015A7C                     l7788:
  9563                           
  9564                           ; BSR set to: 1
  9565                           ;ADC.c: 53: else if(channels ==7)
  9566  015A7C  0101               	movlb	1	; () banked
  9567  015A7E  517C               	movf	EnableInternalADC@channels& (0+255),w,b
  9568  015A80  0A07               	xorlw	7
  9569  015A82  A4D8               	btfss	status,2,c
  9570  015A84  D003               	goto	l7792
  9571                           
  9572                           ; BSR set to: 1
  9573                           ;ADC.c: 54: {
  9574                           ;ADC.c: 55: config |= 0b00001000;
  9575  015A86  0101               	movlb	1	; () banked
  9576  015A88  877B               	bsf	EnableInternalADC@config& (0+255),3,b
  9577                           
  9578                           ;ADC.c: 56: }
  9579  015A8A  D019               	goto	l7806
  9580  015A8C                     l7792:
  9581                           
  9582                           ; BSR set to: 1
  9583                           ;ADC.c: 57: else if(channels ==8)
  9584  015A8C  0101               	movlb	1	; () banked
  9585  015A8E  517C               	movf	EnableInternalADC@channels& (0+255),w,b
  9586  015A90  0A08               	xorlw	8
  9587  015A92  A4D8               	btfss	status,2,c
  9588  015A94  D002               	goto	l7796
  9589                           
  9590                           ; BSR set to: 1
  9591                           ;ADC.c: 58: {
  9592                           ;ADC.c: 59: config |= 0b00000111;
  9593  015A96  0E07               	movlw	7
  9594  015A98  D00D               	goto	L10
  9595  015A9A                     l7796:
  9596                           
  9597                           ; BSR set to: 1
  9598                           ;ADC.c: 61: else if(channels ==9)
  9599  015A9A  0101               	movlb	1	; () banked
  9600  015A9C  517C               	movf	EnableInternalADC@channels& (0+255),w,b
  9601  015A9E  0A09               	xorlw	9
  9602  015AA0  A4D8               	btfss	status,2,c
  9603  015AA2  D002               	goto	l7800
  9604                           
  9605                           ; BSR set to: 1
  9606                           ;ADC.c: 62: {
  9607                           ;ADC.c: 63: config |= 0b00000110;
  9608  015AA4  0E06               	movlw	6
  9609  015AA6  D006               	goto	L10
  9610  015AA8                     l7800:
  9611                           
  9612                           ; BSR set to: 1
  9613                           ;ADC.c: 65: else if(channels ==10)
  9614  015AA8  0101               	movlb	1	; () banked
  9615  015AAA  517C               	movf	EnableInternalADC@channels& (0+255),w,b
  9616  015AAC  0A0A               	xorlw	10
  9617  015AAE  A4D8               	btfss	status,2,c
  9618  015AB0  D004               	goto	l7804
  9619                           
  9620                           ; BSR set to: 1
  9621                           ;ADC.c: 66: {
  9622                           ;ADC.c: 67: config |= 0b00000101;
  9623  015AB2  0E05               	movlw	5
  9624  015AB4                     L10:
  9625  015AB4  0101               	movlb	1	; () banked
  9626  015AB6  137B               	iorwf	EnableInternalADC@config& (0+255),f,b
  9627                           
  9628                           ;ADC.c: 68: }
  9629  015AB8  D002               	goto	l7806
  9630  015ABA                     l7804:
  9631                           
  9632                           ; BSR set to: 1
  9633                           ;ADC.c: 69: else
  9634                           ;ADC.c: 70: {
  9635                           ;ADC.c: 71: config |= 0b00000100;
  9636  015ABA  0101               	movlb	1	; () banked
  9637  015ABC  857B               	bsf	EnableInternalADC@config& (0+255),2,b
  9638  015ABE                     l7806:
  9639                           
  9640                           ; BSR set to: 1
  9641                           ;ADC.c: 72: }
  9642                           ;ADC.c: 74: ADCON1 = config;
  9643  015ABE  C17B  FFC1         	movff	EnableInternalADC@config,4033	;volatile
  9644                           
  9645                           ; BSR set to: 1
  9646  015AC2  0012               	return	
  9647  015AC4                     __end_of_EnableInternalADC:
  9648                           	opt stack 0
  9649                           tblptru	equ	0xFF8
  9650                           tblptrh	equ	0xFF7
  9651                           tblptrl	equ	0xFF6
  9652                           tablat	equ	0xFF5
  9653                           prodl	equ	0xFF3
  9654                           intcon	equ	0xFF2
  9655                           postinc0	equ	0xFEE
  9656                           wreg	equ	0xFE8
  9657                           postdec1	equ	0xFE5
  9658                           fsr1l	equ	0xFE1
  9659                           status	equ	0xFD8
  9660                           
  9661 ;; *************** function _ContrastPWM_init *****************
  9662 ;; Defined at:
  9663 ;;		line 45 in file "PWM.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;		None
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;		None
  9668 ;; Return value:  Size  Location     Type
  9669 ;;		None               void
  9670 ;; Registers used:
  9671 ;;		wreg, status,2, status,0, cstack
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9681 ;;Total ram usage:        0 bytes
  9682 ;; Hardware stack levels used:    1
  9683 ;; Hardware stack levels required when called:    9
  9684 ;; This function calls:
  9685 ;;		_SetDuty
  9686 ;; This function is called by:
  9687 ;;		_main
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691                           	psect	text17
  9692  016D10                     __ptext17:
  9693                           	opt stack 0
  9694  016D10                     _ContrastPWM_init:
  9695                           	opt stack 20
  9696                           
  9697                           ;PWM.c: 49: SetDuty(0);
  9698                           
  9699                           ; BSR set to: 1
  9700                           ;incstack = 0
  9701  016D10  0E00               	movlw	0
  9702  016D12  ECDE  F0AA         	call	_SetDuty
  9703                           
  9704                           ;PWM.c: 50: ECCP1CON |= 0b00001100;
  9705  016D16  0E0C               	movlw	12
  9706  016D18  12BA               	iorwf	4026,f,c	;volatile
  9707  016D1A  0012               	return	
  9708  016D1C                     __end_of_ContrastPWM_init:
  9709                           	opt stack 0
  9710                           tblptru	equ	0xFF8
  9711                           tblptrh	equ	0xFF7
  9712                           tblptrl	equ	0xFF6
  9713                           tablat	equ	0xFF5
  9714                           prodl	equ	0xFF3
  9715                           intcon	equ	0xFF2
  9716                           postinc0	equ	0xFEE
  9717                           wreg	equ	0xFE8
  9718                           postdec1	equ	0xFE5
  9719                           fsr1l	equ	0xFE1
  9720                           status	equ	0xFD8
  9721                           
  9722 ;; *************** function _ConfigureOscillator *****************
  9723 ;; Defined at:
  9724 ;;		line 24 in file "system.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;		None
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;		None
  9729 ;; Return value:  Size  Location     Type
  9730 ;;		None               void
  9731 ;; Registers used:
  9732 ;;		None
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9742 ;;Total ram usage:        0 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; Hardware stack levels required when called:    6
  9745 ;; This function calls:
  9746 ;;		Nothing
  9747 ;; This function is called by:
  9748 ;;		_main
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           	psect	text18
  9753  016D2A                     __ptext18:
  9754                           	opt stack 0
  9755  016D2A                     _ConfigureOscillator:
  9756                           	opt stack 23
  9757                           
  9758                           ;incstack = 0
  9759  016D2A  0012               	return	
  9760  016D2C                     __end_of_ConfigureOscillator:
  9761                           	opt stack 0
  9762                           tblptru	equ	0xFF8
  9763                           tblptrh	equ	0xFF7
  9764                           tblptrl	equ	0xFF6
  9765                           tablat	equ	0xFF5
  9766                           prodl	equ	0xFF3
  9767                           intcon	equ	0xFF2
  9768                           postinc0	equ	0xFEE
  9769                           wreg	equ	0xFE8
  9770                           postdec1	equ	0xFE5
  9771                           fsr1l	equ	0xFE1
  9772                           status	equ	0xFD8
  9773                           
  9774 ;; *************** function _Command *****************
  9775 ;; Defined at:
  9776 ;;		line 32 in file "StringCommand.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;  Input           2   83[BANK1 ] PTR unsigned char 
  9779 ;;		 -> Rxdata(100), 
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;  buf           200    0[BANK5 ] unsigned char [200]
  9782 ;;  duty            2  212[BANK5 ] int 
  9783 ;;  channel         2  210[BANK5 ] int 
  9784 ;;  contrast        2  208[BANK5 ] int 
  9785 ;;  RTC_Battery_    2  206[BANK5 ] unsigned int 
  9786 ;;  RTC_Battery_    2  204[BANK5 ] unsigned int 
  9787 ;;  RTC_Battery_    2  202[BANK5 ] unsigned int 
  9788 ;;  ADC_Value       2  200[BANK5 ] unsigned int 
  9789 ;; Return value:  Size  Location     Type
  9790 ;;		None               void
  9791 ;; Registers used:
  9792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9798 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9799 ;;      Locals:         0       0       0       0       0       0     214       0       0       0       0       0       
      +0       0
  9800 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9801 ;;      Totals:         0       0       6       0       0       0     214       0       0       0       0       0       
      +0       0
  9802 ;;Total ram usage:      220 bytes
  9803 ;; Hardware stack levels used:    1
  9804 ;; Hardware stack levels required when called:   11
  9805 ;; This function calls:
  9806 ;;		_GetEnteredNumber
  9807 ;;		_InternalADC_Read
  9808 ;;		_LCDPrintString
  9809 ;;		_LCD_Scroll
  9810 ;;		_LCDdisplayFeedback
  9811 ;;		_Parse_Time
  9812 ;;		_READ_RTC_TIME
  9813 ;;		_RemoveSpaces
  9814 ;;		_SET_RTC_TIME
  9815 ;;		_Send_Config1
  9816 ;;		_Send_Config2
  9817 ;;		_SetContrast
  9818 ;;		_SetDuty
  9819 ;;		_SetLCDcursor
  9820 ;;		_SprintDate
  9821 ;;		_StartsWith
  9822 ;;		_StringAddEqual
  9823 ;;		_StringContains
  9824 ;;		_StringMatch
  9825 ;;		_UARTstring
  9826 ;;		___ftdiv
  9827 ;;		___ftmul
  9828 ;;		___fttol
  9829 ;;		___lwmod
  9830 ;;		___lwtoft
  9831 ;;		_cleanBuffer
  9832 ;;		_delayUS
  9833 ;;		_lowercase
  9834 ;;		_sprintf
  9835 ;; This function is called by:
  9836 ;;		_main
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text19
  9841  010000                     __ptext19:
  9842                           	opt stack 0
  9843  010000                     _Command:
  9844                           	opt stack 18
  9845                           
  9846                           ;StringCommand.c: 34: int channel = 20;
  9847                           
  9848                           ;incstack = 0
  9849  010000  0E00               	movlw	0
  9850  010002  0105               	movlb	5	; () banked
  9851  010004  6FD3               	movwf	(Command@channel+1)& (0+255),b
  9852  010006  0E14               	movlw	20
  9853  010008  0105               	movlb	5	; () banked
  9854  01000A  6FD2               	movwf	Command@channel& (0+255),b
  9855                           
  9856                           ;StringCommand.c: 35: unsigned int ADC_Value = 0;
  9857  01000C  0E00               	movlw	0
  9858  01000E  0105               	movlb	5	; () banked
  9859  010010  6FC9               	movwf	(Command@ADC_Value+1)& (0+255),b
  9860  010012  0E00               	movlw	0
  9861  010014  0105               	movlb	5	; () banked
  9862  010016  6FC8               	movwf	Command@ADC_Value& (0+255),b
  9863                           
  9864                           ;StringCommand.c: 36: unsigned int RTC_Battery_Value =0;
  9865  010018  0E00               	movlw	0
  9866  01001A  0105               	movlb	5	; () banked
  9867  01001C  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
  9868  01001E  0E00               	movlw	0
  9869  010020  0105               	movlb	5	; () banked
  9870  010022  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
  9871                           
  9872                           ;StringCommand.c: 37: unsigned int RTC_Battery_Value_HIGH_decimal =0;
  9873  010024  0E00               	movlw	0
  9874  010026  0105               	movlb	5	; () banked
  9875  010028  6FCD               	movwf	(Command@RTC_Battery_Value_HIGH_decimal+1)& (0+255),b
  9876  01002A  0E00               	movlw	0
  9877  01002C  0105               	movlb	5	; () banked
  9878  01002E  6FCC               	movwf	Command@RTC_Battery_Value_HIGH_decimal& (0+255),b
  9879                           
  9880                           ;StringCommand.c: 38: unsigned int RTC_Battery_Value_LOW_decimal =0;
  9881  010030  0E00               	movlw	0
  9882  010032  0105               	movlb	5	; () banked
  9883  010034  6FCF               	movwf	(Command@RTC_Battery_Value_LOW_decimal+1)& (0+255),b
  9884  010036  0E00               	movlw	0
  9885  010038  0105               	movlb	5	; () banked
  9886  01003A  6FCE               	movwf	Command@RTC_Battery_Value_LOW_decimal& (0+255),b
  9887                           
  9888                           ;StringCommand.c: 39: int duty = 0;
  9889  01003C  0E00               	movlw	0
  9890  01003E  0105               	movlb	5	; () banked
  9891  010040  6FD5               	movwf	(Command@duty+1)& (0+255),b
  9892  010042  0E00               	movlw	0
  9893  010044  0105               	movlb	5	; () banked
  9894  010046  6FD4               	movwf	Command@duty& (0+255),b
  9895                           
  9896                           ;StringCommand.c: 40: int contrast = 0;
  9897  010048  0E00               	movlw	0
  9898  01004A  0105               	movlb	5	; () banked
  9899  01004C  6FD1               	movwf	(Command@contrast+1)& (0+255),b
  9900  01004E  0E00               	movlw	0
  9901  010050  0105               	movlb	5	; () banked
  9902  010052  6FD0               	movwf	Command@contrast& (0+255),b
  9903                           
  9904                           ; BSR set to: 5
  9905                           ;StringCommand.c: 41: unsigned char buf[200];
  9906                           ;StringCommand.c: 43: UARTstring("\r\n\n");
  9907  010054  0EF1               	movlw	high (STR_226+65)
  9908  010056  0101               	movlb	1	; () banked
  9909  010058  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
  9910  01005A  0E5B               	movlw	low (STR_226+65)
  9911  01005C  0101               	movlb	1	; () banked
  9912  01005E  6F7C               	movwf	UARTstring@data& (0+255),b
  9913  010060  ECB3  F0AD         	call	_UARTstring	;wreg free
  9914                           
  9915                           ;StringCommand.c: 44: lowercase(Input);
  9916  010064  0101               	movlb	1	; () banked
  9917  010066  C1C1  F17C         	movff	Command@Input+1,lowercase@Input+1
  9918  01006A  0101               	movlb	1	; () banked
  9919  01006C  C1C0  F17B         	movff	Command@Input,lowercase@Input
  9920  010070  EC72  F0AF         	call	_lowercase	;wreg free
  9921                           
  9922                           ;StringCommand.c: 45: RemoveSpaces(Input);
  9923  010074  0101               	movlb	1	; () banked
  9924  010076  C1C1  F18B         	movff	Command@Input+1,RemoveSpaces@This+1
  9925  01007A  0101               	movlb	1	; () banked
  9926  01007C  C1C0  F18A         	movff	Command@Input,RemoveSpaces@This
  9927  010080  EC05  F0AC         	call	_RemoveSpaces	;wreg free
  9928                           
  9929                           ;StringCommand.c: 48: if (StartsWith(Input, "led"))
  9930  010084  0101               	movlb	1	; () banked
  9931  010086  C1C1  F17C         	movff	Command@Input+1,StartsWith@This+1
  9932  01008A  0101               	movlb	1	; () banked
  9933  01008C  C1C0  F17B         	movff	Command@Input,StartsWith@This
  9934  010090  0EFF               	movlw	high (STR_141+3)
  9935  010092  0101               	movlb	1	; () banked
  9936  010094  6F7E               	movwf	(StartsWith@That+1)& (0+255),b
  9937  010096  0E85               	movlw	low (STR_141+3)
  9938  010098  0101               	movlb	1	; () banked
  9939  01009A  6F7D               	movwf	StartsWith@That& (0+255),b
  9940  01009C  EC4C  F0AE         	call	_StartsWith	;wreg free
  9941  0100A0  0900               	iorlw	0
  9942  0100A2  B4D8               	btfsc	status,2,c
  9943  0100A4  D14F               	goto	l11322
  9944                           
  9945                           ;StringCommand.c: 49: {
  9946                           ;StringCommand.c: 50: if (!StringContains(Input, "?"))
  9947  0100A6  0101               	movlb	1	; () banked
  9948  0100A8  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
  9949  0100AC  0101               	movlb	1	; () banked
  9950  0100AE  C1C0  F17B         	movff	Command@Input,StringContains@This
  9951  0100B2  0EFA               	movlw	high (STR_64+14)
  9952  0100B4  0101               	movlb	1	; () banked
  9953  0100B6  6F7E               	movwf	(StringContains@That+1)& (0+255),b
  9954  0100B8  0EA6               	movlw	low (STR_64+14)
  9955  0100BA  0101               	movlb	1	; () banked
  9956  0100BC  6F7D               	movwf	StringContains@That& (0+255),b
  9957  0100BE  ECC9  F0B0         	call	_StringContains	;wreg free
  9958  0100C2  0900               	iorlw	0
  9959  0100C4  A4D8               	btfss	status,2,c
  9960  0100C6  D0EC               	goto	l11312
  9961                           
  9962                           ;StringCommand.c: 51: {
  9963                           ;StringCommand.c: 52: if (StringMatch(Input, "led0"))
  9964  0100C8  0101               	movlb	1	; () banked
  9965  0100CA  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
  9966  0100CE  0101               	movlb	1	; () banked
  9967  0100D0  C1C0  F17B         	movff	Command@Input,StringMatch@This
  9968  0100D4  0EFF               	movlw	high STR_21
  9969  0100D6  0101               	movlb	1	; () banked
  9970  0100D8  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
  9971  0100DA  0EBE               	movlw	low STR_21
  9972  0100DC  0101               	movlb	1	; () banked
  9973  0100DE  6F7D               	movwf	StringMatch@That& (0+255),b
  9974  0100E0  EC08  F0B1         	call	_StringMatch	;wreg free
  9975  0100E4  0900               	iorlw	0
  9976  0100E6  B4D8               	btfsc	status,2,c
  9977  0100E8  D014               	goto	l11270
  9978                           
  9979                           ;StringCommand.c: 53: {
  9980                           ;StringCommand.c: 54: LATD ^= 0b00000010;
  9981  0100EA  0E02               	movlw	2
  9982  0100EC  1A8C               	xorwf	3980,f,c	;volatile
  9983                           
  9984                           ;StringCommand.c: 55: UARTstring("LED0 Toggled");
  9985  0100EE  0EFD               	movlw	high STR_22
  9986  0100F0  0101               	movlb	1	; () banked
  9987  0100F2  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
  9988  0100F4  0E74               	movlw	low STR_22
  9989  0100F6  0101               	movlb	1	; () banked
  9990  0100F8  6F7C               	movwf	UARTstring@data& (0+255),b
  9991  0100FA  ECB3  F0AD         	call	_UARTstring	;wreg free
  9992                           
  9993                           ;StringCommand.c: 56: LCDdisplayFeedback("LED0 Toggled");
  9994  0100FE  0EFD               	movlw	high STR_22
  9995  010100  0101               	movlb	1	; () banked
  9996  010102  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
  9997  010104  0E74               	movlw	low STR_22
  9998  010106  0101               	movlb	1	; () banked
  9999  010108  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10000  01010A  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 10001                           
 10002                           ;StringCommand.c: 57: }
 10003  01010E  EF28  F092         	goto	l513
 10004  010112                     l11270:
 10005                           
 10006                           ;StringCommand.c: 58: else if (StringMatch(Input, "led0=on"))
 10007  010112  0101               	movlb	1	; () banked
 10008  010114  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 10009  010118  0101               	movlb	1	; () banked
 10010  01011A  C1C0  F17B         	movff	Command@Input,StringMatch@This
 10011  01011E  0EFF               	movlw	high STR_24
 10012  010120  0101               	movlb	1	; () banked
 10013  010122  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 10014  010124  0E3F               	movlw	low STR_24
 10015  010126  0101               	movlb	1	; () banked
 10016  010128  6F7D               	movwf	StringMatch@That& (0+255),b
 10017  01012A  EC08  F0B1         	call	_StringMatch	;wreg free
 10018  01012E  0900               	iorlw	0
 10019  010130  B4D8               	btfsc	status,2,c
 10020  010132  D013               	goto	l11278
 10021                           
 10022                           ;StringCommand.c: 59: {
 10023                           ;StringCommand.c: 60: LATD |= 0b00000010;
 10024  010134  828C               	bsf	3980,1,c	;volatile
 10025                           
 10026                           ;StringCommand.c: 61: UARTstring("LED0 On");
 10027  010136  0EFF               	movlw	high STR_25
 10028  010138  0101               	movlb	1	; () banked
 10029  01013A  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10030  01013C  0E2F               	movlw	low STR_25
 10031  01013E  0101               	movlb	1	; () banked
 10032  010140  6F7C               	movwf	UARTstring@data& (0+255),b
 10033  010142  ECB3  F0AD         	call	_UARTstring	;wreg free
 10034                           
 10035                           ;StringCommand.c: 62: LCDdisplayFeedback("LED0 On");
 10036  010146  0EFF               	movlw	high STR_25
 10037  010148  0101               	movlb	1	; () banked
 10038  01014A  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10039  01014C  0E2F               	movlw	low STR_25
 10040  01014E  0101               	movlb	1	; () banked
 10041  010150  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10042  010152  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 10043                           
 10044                           ;StringCommand.c: 63: }
 10045  010156  EF28  F092         	goto	l513
 10046  01015A                     l11278:
 10047                           
 10048                           ;StringCommand.c: 64: else if (StringMatch(Input, "led0=off"))
 10049  01015A  0101               	movlb	1	; () banked
 10050  01015C  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 10051  010160  0101               	movlb	1	; () banked
 10052  010162  C1C0  F17B         	movff	Command@Input,StringMatch@This
 10053  010166  0EFE               	movlw	high STR_27
 10054  010168  0101               	movlb	1	; () banked
 10055  01016A  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 10056  01016C  0ED8               	movlw	low STR_27
 10057  01016E  0101               	movlb	1	; () banked
 10058  010170  6F7D               	movwf	StringMatch@That& (0+255),b
 10059  010172  EC08  F0B1         	call	_StringMatch	;wreg free
 10060  010176  0900               	iorlw	0
 10061  010178  B4D8               	btfsc	status,2,c
 10062  01017A  D013               	goto	l11286
 10063                           
 10064                           ;StringCommand.c: 65: {
 10065                           ;StringCommand.c: 66: LATD &= ~0b00000010;
 10066  01017C  928C               	bcf	3980,1,c	;volatile
 10067                           
 10068                           ;StringCommand.c: 67: UARTstring("LED0 Off");
 10069  01017E  0EFE               	movlw	high STR_28
 10070  010180  0101               	movlb	1	; () banked
 10071  010182  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10072  010184  0EC6               	movlw	low STR_28
 10073  010186  0101               	movlb	1	; () banked
 10074  010188  6F7C               	movwf	UARTstring@data& (0+255),b
 10075  01018A  ECB3  F0AD         	call	_UARTstring	;wreg free
 10076                           
 10077                           ;StringCommand.c: 68: LCDdisplayFeedback("LED0 Off");
 10078  01018E  0EFE               	movlw	high STR_28
 10079  010190  0101               	movlb	1	; () banked
 10080  010192  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10081  010194  0EC6               	movlw	low STR_28
 10082  010196  0101               	movlb	1	; () banked
 10083  010198  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10084  01019A  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 10085                           
 10086                           ;StringCommand.c: 69: }
 10087  01019E  EF28  F092         	goto	l513
 10088  0101A2                     l11286:
 10089                           
 10090                           ;StringCommand.c: 70: else if (StringMatch(Input, "led1"))
 10091  0101A2  0101               	movlb	1	; () banked
 10092  0101A4  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 10093  0101A8  0101               	movlb	1	; () banked
 10094  0101AA  C1C0  F17B         	movff	Command@Input,StringMatch@This
 10095  0101AE  0EFF               	movlw	high STR_30
 10096  0101B0  0101               	movlb	1	; () banked
 10097  0101B2  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 10098  0101B4  0EC8               	movlw	low STR_30
 10099  0101B6  0101               	movlb	1	; () banked
 10100  0101B8  6F7D               	movwf	StringMatch@That& (0+255),b
 10101  0101BA  EC08  F0B1         	call	_StringMatch	;wreg free
 10102  0101BE  0900               	iorlw	0
 10103  0101C0  B4D8               	btfsc	status,2,c
 10104  0101C2  D014               	goto	l11294
 10105                           
 10106                           ;StringCommand.c: 71: {
 10107                           ;StringCommand.c: 72: LATD ^= 0b00000100;
 10108  0101C4  0E04               	movlw	4
 10109  0101C6  1A8C               	xorwf	3980,f,c	;volatile
 10110                           
 10111                           ;StringCommand.c: 73: UARTstring("LED1 Toggled");
 10112  0101C8  0EFD               	movlw	high STR_31
 10113  0101CA  0101               	movlb	1	; () banked
 10114  0101CC  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10115  0101CE  0E81               	movlw	low STR_31
 10116  0101D0  0101               	movlb	1	; () banked
 10117  0101D2  6F7C               	movwf	UARTstring@data& (0+255),b
 10118  0101D4  ECB3  F0AD         	call	_UARTstring	;wreg free
 10119                           
 10120                           ;StringCommand.c: 74: LCDdisplayFeedback("LED1 Toggled");
 10121  0101D8  0EFD               	movlw	high STR_31
 10122  0101DA  0101               	movlb	1	; () banked
 10123  0101DC  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10124  0101DE  0E81               	movlw	low STR_31
 10125  0101E0  0101               	movlb	1	; () banked
 10126  0101E2  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10127  0101E4  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 10128                           
 10129                           ;StringCommand.c: 75: }
 10130  0101E8  EF28  F092         	goto	l513
 10131  0101EC                     l11294:
 10132                           
 10133                           ;StringCommand.c: 76: else if (StringMatch(Input, "led1=on"))
 10134  0101EC  0101               	movlb	1	; () banked
 10135  0101EE  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 10136  0101F2  0101               	movlb	1	; () banked
 10137  0101F4  C1C0  F17B         	movff	Command@Input,StringMatch@This
 10138  0101F8  0EFF               	movlw	high STR_33
 10139  0101FA  0101               	movlb	1	; () banked
 10140  0101FC  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 10141  0101FE  0E47               	movlw	low STR_33
 10142  010200  0101               	movlb	1	; () banked
 10143  010202  6F7D               	movwf	StringMatch@That& (0+255),b
 10144  010204  EC08  F0B1         	call	_StringMatch	;wreg free
 10145  010208  0900               	iorlw	0
 10146  01020A  B4D8               	btfsc	status,2,c
 10147  01020C  D013               	goto	l11302
 10148                           
 10149                           ;StringCommand.c: 77: {
 10150                           ;StringCommand.c: 78: LATD |= 0b00000100;
 10151  01020E  848C               	bsf	3980,2,c	;volatile
 10152                           
 10153                           ;StringCommand.c: 79: UARTstring("LED1 On");
 10154  010210  0EFF               	movlw	high STR_34
 10155  010212  0101               	movlb	1	; () banked
 10156  010214  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10157  010216  0E37               	movlw	low STR_34
 10158  010218  0101               	movlb	1	; () banked
 10159  01021A  6F7C               	movwf	UARTstring@data& (0+255),b
 10160  01021C  ECB3  F0AD         	call	_UARTstring	;wreg free
 10161                           
 10162                           ;StringCommand.c: 80: LCDdisplayFeedback("LED1 On");
 10163  010220  0EFF               	movlw	high STR_34
 10164  010222  0101               	movlb	1	; () banked
 10165  010224  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10166  010226  0E37               	movlw	low STR_34
 10167  010228  0101               	movlb	1	; () banked
 10168  01022A  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10169  01022C  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 10170                           
 10171                           ;StringCommand.c: 81: }
 10172  010230  EF28  F092         	goto	l513
 10173  010234                     l11302:
 10174                           
 10175                           ;StringCommand.c: 82: else if (StringMatch(Input, "led1=off"))
 10176  010234  0101               	movlb	1	; () banked
 10177  010236  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 10178  01023A  0101               	movlb	1	; () banked
 10179  01023C  C1C0  F17B         	movff	Command@Input,StringMatch@This
 10180  010240  0EFE               	movlw	high STR_36
 10181  010242  0101               	movlb	1	; () banked
 10182  010244  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 10183  010246  0EE1               	movlw	low STR_36
 10184  010248  0101               	movlb	1	; () banked
 10185  01024A  6F7D               	movwf	StringMatch@That& (0+255),b
 10186  01024C  EC08  F0B1         	call	_StringMatch	;wreg free
 10187  010250  0900               	iorlw	0
 10188  010252  B4D8               	btfsc	status,2,c
 10189  010254  D013               	goto	l11310
 10190                           
 10191                           ;StringCommand.c: 83: {
 10192                           ;StringCommand.c: 84: LATD &= ~0b00000100;
 10193  010256  948C               	bcf	3980,2,c	;volatile
 10194                           
 10195                           ;StringCommand.c: 85: UARTstring("LED1 Off");
 10196  010258  0EFE               	movlw	high STR_37
 10197  01025A  0101               	movlb	1	; () banked
 10198  01025C  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10199  01025E  0ECF               	movlw	low STR_37
 10200  010260  0101               	movlb	1	; () banked
 10201  010262  6F7C               	movwf	UARTstring@data& (0+255),b
 10202  010264  ECB3  F0AD         	call	_UARTstring	;wreg free
 10203                           
 10204                           ;StringCommand.c: 86: LCDdisplayFeedback("LED1 Off");
 10205  010268  0EFE               	movlw	high STR_37
 10206  01026A  0101               	movlb	1	; () banked
 10207  01026C  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10208  01026E  0ECF               	movlw	low STR_37
 10209  010270  0101               	movlb	1	; () banked
 10210  010272  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10211  010274  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 10212                           
 10213                           ;StringCommand.c: 87: }
 10214  010278  EF28  F092         	goto	l513
 10215  01027C                     l11310:
 10216                           
 10217                           ;StringCommand.c: 88: else
 10218                           ;StringCommand.c: 89: {
 10219                           ;StringCommand.c: 90: UARTstring("LED What???");
 10220  01027C  0EFA               	movlw	high (STR_154+4)
 10221  01027E  0101               	movlb	1	; () banked
 10222  010280  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10223  010282  0ECC               	movlw	low (STR_154+4)
 10224  010284  0101               	movlb	1	; () banked
 10225  010286  6F7C               	movwf	UARTstring@data& (0+255),b
 10226  010288  ECB3  F0AD         	call	_UARTstring	;wreg free
 10227                           
 10228                           ;StringCommand.c: 91: LCDdisplayFeedback("LED What???");
 10229  01028C  0EFA               	movlw	high (STR_154+4)
 10230  01028E  0101               	movlb	1	; () banked
 10231  010290  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10232  010292  0ECC               	movlw	low (STR_154+4)
 10233  010294  0101               	movlb	1	; () banked
 10234  010296  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10235  010298  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 10236  01029C  EF28  F092         	goto	l513
 10237  0102A0                     l11312:
 10238                           
 10239                           ;StringCommand.c: 94: else
 10240                           ;StringCommand.c: 95: {
 10241                           ;StringCommand.c: 96: UARTstring("LED Help Menu\r\n\n");
 10242  0102A0  0EF9               	movlw	high STR_41
 10243  0102A2  0101               	movlb	1	; () banked
 10244  0102A4  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10245  0102A6  0E9B               	movlw	low STR_41
 10246  0102A8  0101               	movlb	1	; () banked
 10247  0102AA  6F7C               	movwf	UARTstring@data& (0+255),b
 10248  0102AC  ECB3  F0AD         	call	_UARTstring	;wreg free
 10249                           
 10250                           ;StringCommand.c: 97: UARTstring("Devices:\r\n");
 10251  0102B0  0EFD               	movlw	high STR_42
 10252  0102B2  0101               	movlb	1	; () banked
 10253  0102B4  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10254  0102B6  0EF1               	movlw	low STR_42
 10255  0102B8  0101               	movlb	1	; () banked
 10256  0102BA  6F7C               	movwf	UARTstring@data& (0+255),b
 10257  0102BC  ECB3  F0AD         	call	_UARTstring	;wreg free
 10258                           
 10259                           ;StringCommand.c: 98: UARTstring("LED0\r\n");
 10260  0102C0  0EFF               	movlw	high STR_43
 10261  0102C2  0101               	movlb	1	; () banked
 10262  0102C4  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10263  0102C6  0E74               	movlw	low STR_43
 10264  0102C8  0101               	movlb	1	; () banked
 10265  0102CA  6F7C               	movwf	UARTstring@data& (0+255),b
 10266  0102CC  ECB3  F0AD         	call	_UARTstring	;wreg free
 10267                           
 10268                           ;StringCommand.c: 99: UARTstring("LED1\r\n\n");
 10269  0102D0  0EFF               	movlw	high STR_44
 10270  0102D2  0101               	movlb	1	; () banked
 10271  0102D4  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10272  0102D6  0E17               	movlw	low STR_44
 10273  0102D8  0101               	movlb	1	; () banked
 10274  0102DA  6F7C               	movwf	UARTstring@data& (0+255),b
 10275  0102DC  ECB3  F0AD         	call	_UARTstring	;wreg free
 10276                           
 10277                           ;StringCommand.c: 100: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 10278  0102E0  0EF1               	movlw	high STR_45
 10279  0102E2  0101               	movlb	1	; () banked
 10280  0102E4  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10281  0102E6  0E5F               	movlw	low STR_45
 10282  0102E8  0101               	movlb	1	; () banked
 10283  0102EA  6F7C               	movwf	UARTstring@data& (0+255),b
 10284  0102EC  ECB3  F0AD         	call	_UARTstring	;wreg free
 10285                           
 10286                           ;StringCommand.c: 101: UARTstring("i.e. LED1 = On\r\n");
 10287  0102F0  0EF9               	movlw	high STR_46
 10288  0102F2  0101               	movlb	1	; () banked
 10289  0102F4  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10290  0102F6  0ECE               	movlw	low STR_46
 10291  0102F8  0101               	movlb	1	; () banked
 10292  0102FA  6F7C               	movwf	UARTstring@data& (0+255),b
 10293  0102FC  ECB3  F0AD         	call	_UARTstring	;wreg free
 10294                           
 10295                           ;StringCommand.c: 102: LCD_Scroll("LED Menu");
 10296  010300  0EFF               	movlw	high STR_47
 10297  010302  0101               	movlb	1	; () banked
 10298  010304  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10299  010306  0E05               	movlw	low STR_47
 10300  010308  0101               	movlb	1	; () banked
 10301  01030A  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 10302  01030C  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 10303                           
 10304                           ;StringCommand.c: 103: LCD_Scroll("Devices:");
 10305  010310  0EFE               	movlw	high STR_48
 10306  010312  0101               	movlb	1	; () banked
 10307  010314  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10308  010316  0EB4               	movlw	low STR_48
 10309  010318  0101               	movlb	1	; () banked
 10310  01031A  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 10311  01031C  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 10312                           
 10313                           ;StringCommand.c: 104: LCD_Scroll("LED0");
 10314  010320  0EFF               	movlw	high STR_49
 10315  010322  0101               	movlb	1	; () banked
 10316  010324  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10317  010326  0EB9               	movlw	low STR_49
 10318  010328  0101               	movlb	1	; () banked
 10319  01032A  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 10320  01032C  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 10321                           
 10322                           ;StringCommand.c: 105: LCD_Scroll("LED1");
 10323  010330  0EFF               	movlw	high STR_50
 10324  010332  0101               	movlb	1	; () banked
 10325  010334  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10326  010336  0EC3               	movlw	low STR_50
 10327  010338  0101               	movlb	1	; () banked
 10328  01033A  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 10329  01033C  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 10330  010340  EF28  F092         	goto	l513
 10331  010344                     l11322:
 10332                           
 10333                           ;StringCommand.c: 109: else if (StartsWith(Input, "livingroom"))
 10334  010344  0101               	movlb	1	; () banked
 10335  010346  C1C1  F17C         	movff	Command@Input+1,StartsWith@This+1
 10336  01034A  0101               	movlb	1	; () banked
 10337  01034C  C1C0  F17B         	movff	Command@Input,StartsWith@This
 10338  010350  0EFE               	movlw	high STR_51
 10339  010352  0101               	movlb	1	; () banked
 10340  010354  6F7E               	movwf	(StartsWith@That+1)& (0+255),b
 10341  010356  0E1D               	movlw	low STR_51
 10342  010358  0101               	movlb	1	; () banked
 10343  01035A  6F7D               	movwf	StartsWith@That& (0+255),b
 10344  01035C  EC4C  F0AE         	call	_StartsWith	;wreg free
 10345  010360  0900               	iorlw	0
 10346  010362  B4D8               	btfsc	status,2,c
 10347  010364  D1D5               	goto	l11374
 10348                           
 10349                           ;StringCommand.c: 110: {
 10350                           ;StringCommand.c: 111: if (!StringContains(Input, "?"))
 10351  010366  0101               	movlb	1	; () banked
 10352  010368  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 10353  01036C  0101               	movlb	1	; () banked
 10354  01036E  C1C0  F17B         	movff	Command@Input,StringContains@This
 10355  010372  0EFA               	movlw	high (STR_64+14)
 10356  010374  0101               	movlb	1	; () banked
 10357  010376  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 10358  010378  0EA6               	movlw	low (STR_64+14)
 10359  01037A  0101               	movlb	1	; () banked
 10360  01037C  6F7D               	movwf	StringContains@That& (0+255),b
 10361  01037E  ECC9  F0B0         	call	_StringContains	;wreg free
 10362  010382  0900               	iorlw	0
 10363  010384  A4D8               	btfss	status,2,c
 10364  010386  D16A               	goto	l11364
 10365                           
 10366                           ;StringCommand.c: 112: {
 10367                           ;StringCommand.c: 113: if (StringMatch(Input, "livingroomlight=on") || StringMatch(Input
      +                          , "livingroomlight=off"))
 10368  010388  0101               	movlb	1	; () banked
 10369  01038A  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 10370  01038E  0101               	movlb	1	; () banked
 10371  010390  C1C0  F17B         	movff	Command@Input,StringMatch@This
 10372  010394  0EF8               	movlw	high STR_53
 10373  010396  0101               	movlb	1	; () banked
 10374  010398  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 10375  01039A  0ED7               	movlw	low STR_53
 10376  01039C  0101               	movlb	1	; () banked
 10377  01039E  6F7D               	movwf	StringMatch@That& (0+255),b
 10378  0103A0  EC08  F0B1         	call	_StringMatch	;wreg free
 10379  0103A4  0900               	iorlw	0
 10380  0103A6  A4D8               	btfss	status,2,c
 10381  0103A8  D011               	goto	l518
 10382  0103AA  0101               	movlb	1	; () banked
 10383  0103AC  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 10384  0103B0  0101               	movlb	1	; () banked
 10385  0103B2  C1C0  F17B         	movff	Command@Input,StringMatch@This
 10386  0103B6  0EF8               	movlw	high STR_54
 10387  0103B8  0101               	movlb	1	; () banked
 10388  0103BA  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 10389  0103BC  0E63               	movlw	low STR_54
 10390  0103BE  0101               	movlb	1	; () banked
 10391  0103C0  6F7D               	movwf	StringMatch@That& (0+255),b
 10392  0103C2  EC08  F0B1         	call	_StringMatch	;wreg free
 10393  0103C6  0900               	iorlw	0
 10394  0103C8  B4D8               	btfsc	status,2,c
 10395  0103CA  D053               	goto	l11338
 10396  0103CC                     l518:
 10397                           
 10398                           ;StringCommand.c: 114: {
 10399                           ;StringCommand.c: 115: INTCONbits.GIE = 0;
 10400  0103CC  9EF2               	bcf	intcon,7,c	;volatile
 10401                           
 10402                           ;StringCommand.c: 116: Send_Config1(0b00000001, TXdataD);
 10403  0103CE  0EF0               	movlw	high _TXdataD
 10404  0103D0  0101               	movlb	1	; () banked
 10405  0103D2  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 10406  0103D4  0EAD               	movlw	low _TXdataD
 10407  0103D6  0101               	movlb	1	; () banked
 10408  0103D8  6F86               	movwf	Send_Config1@data& (0+255),b
 10409  0103DA  0E01               	movlw	1
 10410  0103DC  EC33  F0A8         	call	_Send_Config1
 10411                           
 10412                           ;StringCommand.c: 117: Send_Config1(0b00000001, TXdataD);
 10413  0103E0  0EF0               	movlw	high _TXdataD
 10414  0103E2  0101               	movlb	1	; () banked
 10415  0103E4  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 10416  0103E6  0EAD               	movlw	low _TXdataD
 10417  0103E8  0101               	movlb	1	; () banked
 10418  0103EA  6F86               	movwf	Send_Config1@data& (0+255),b
 10419  0103EC  0E01               	movlw	1
 10420  0103EE  EC33  F0A8         	call	_Send_Config1
 10421                           
 10422                           ;StringCommand.c: 118: Send_Config1(0b00000001, TXdataD);
 10423  0103F2  0EF0               	movlw	high _TXdataD
 10424  0103F4  0101               	movlb	1	; () banked
 10425  0103F6  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 10426  0103F8  0EAD               	movlw	low _TXdataD
 10427  0103FA  0101               	movlb	1	; () banked
 10428  0103FC  6F86               	movwf	Send_Config1@data& (0+255),b
 10429  0103FE  0E01               	movlw	1
 10430  010400  EC33  F0A8         	call	_Send_Config1
 10431                           
 10432                           ;StringCommand.c: 119: Send_Config1(0b00000001, TXdataD);
 10433  010404  0EF0               	movlw	high _TXdataD
 10434  010406  0101               	movlb	1	; () banked
 10435  010408  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 10436  01040A  0EAD               	movlw	low _TXdataD
 10437  01040C  0101               	movlb	1	; () banked
 10438  01040E  6F86               	movwf	Send_Config1@data& (0+255),b
 10439  010410  0E01               	movlw	1
 10440  010412  EC33  F0A8         	call	_Send_Config1
 10441                           
 10442                           ;StringCommand.c: 120: Send_Config1(0b00000001, TXdataD);
 10443  010416  0EF0               	movlw	high _TXdataD
 10444  010418  0101               	movlb	1	; () banked
 10445  01041A  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 10446  01041C  0EAD               	movlw	low _TXdataD
 10447  01041E  0101               	movlb	1	; () banked
 10448  010420  6F86               	movwf	Send_Config1@data& (0+255),b
 10449  010422  0E01               	movlw	1
 10450  010424  EC33  F0A8         	call	_Send_Config1
 10451                           
 10452                           ;StringCommand.c: 121: Send_Config1(0b00000001, TXdataD);
 10453  010428  0EF0               	movlw	high _TXdataD
 10454  01042A  0101               	movlb	1	; () banked
 10455  01042C  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 10456  01042E  0EAD               	movlw	low _TXdataD
 10457  010430  0101               	movlb	1	; () banked
 10458  010432  6F86               	movwf	Send_Config1@data& (0+255),b
 10459  010434  0E01               	movlw	1
 10460  010436  EC33  F0A8         	call	_Send_Config1
 10461                           
 10462                           ;StringCommand.c: 122: Send_Config1(0b00000001, TXdataD);
 10463  01043A  0EF0               	movlw	high _TXdataD
 10464  01043C  0101               	movlb	1	; () banked
 10465  01043E  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 10466  010440  0EAD               	movlw	low _TXdataD
 10467  010442  0101               	movlb	1	; () banked
 10468  010444  6F86               	movwf	Send_Config1@data& (0+255),b
 10469  010446  0E01               	movlw	1
 10470  010448  EC33  F0A8         	call	_Send_Config1
 10471                           
 10472                           ;StringCommand.c: 123: INTCONbits.GIE = 1;
 10473  01044C  8EF2               	bsf	intcon,7,c	;volatile
 10474                           
 10475                           ;StringCommand.c: 124: UARTstring("Livingroom Light Toggled");
 10476  01044E  0EF7               	movlw	high STR_55
 10477  010450  0101               	movlb	1	; () banked
 10478  010452  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10479  010454  0E29               	movlw	low STR_55
 10480  010456  0101               	movlb	1	; () banked
 10481  010458  6F7C               	movwf	UARTstring@data& (0+255),b
 10482  01045A  ECB3  F0AD         	call	_UARTstring	;wreg free
 10483                           
 10484                           ;StringCommand.c: 125: LCDdisplayFeedback("LVNG Rm Lt TGLD");
 10485  01045E  0EFB               	movlw	high STR_56
 10486  010460  0101               	movlb	1	; () banked
 10487  010462  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10488  010464  0E08               	movlw	low STR_56
 10489  010466  0101               	movlb	1	; () banked
 10490  010468  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10491  01046A  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 10492                           
 10493                           ;StringCommand.c: 126: }
 10494  01046E  EF28  F092         	goto	l513
 10495  010472                     l11338:
 10496                           
 10497                           ;StringCommand.c: 127: else if (StringMatch(Input, "livingroomfan=on"))
 10498  010472  0101               	movlb	1	; () banked
 10499  010474  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 10500  010478  0101               	movlb	1	; () banked
 10501  01047A  C1C0  F17B         	movff	Command@Input,StringMatch@This
 10502  01047E  0EFA               	movlw	high STR_57
 10503  010480  0101               	movlb	1	; () banked
 10504  010482  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 10505  010484  0E12               	movlw	low STR_57
 10506  010486  0101               	movlb	1	; () banked
 10507  010488  6F7D               	movwf	StringMatch@That& (0+255),b
 10508  01048A  EC08  F0B1         	call	_StringMatch	;wreg free
 10509  01048E  0900               	iorlw	0
 10510  010490  B4D8               	btfsc	status,2,c
 10511  010492  D05C               	goto	l11350
 10512                           
 10513                           ;StringCommand.c: 128: {
 10514                           ;StringCommand.c: 129: INTCONbits.GIE = 0;
 10515  010494  9EF2               	bcf	intcon,7,c	;volatile
 10516                           
 10517                           ;StringCommand.c: 130: Send_Config2(0b00000001, fanON);
 10518  010496  0EF0               	movlw	high _fanON
 10519  010498  0101               	movlb	1	; () banked
 10520  01049A  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10521  01049C  0E9D               	movlw	low _fanON
 10522  01049E  0101               	movlb	1	; () banked
 10523  0104A0  6F86               	movwf	Send_Config2@data& (0+255),b
 10524  0104A2  0E01               	movlw	1
 10525  0104A4  ECFF  F0AF         	call	_Send_Config2
 10526                           
 10527                           ;StringCommand.c: 131: Send_Config2(0b00000001, fanON);
 10528  0104A8  0EF0               	movlw	high _fanON
 10529  0104AA  0101               	movlb	1	; () banked
 10530  0104AC  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10531  0104AE  0E9D               	movlw	low _fanON
 10532  0104B0  0101               	movlb	1	; () banked
 10533  0104B2  6F86               	movwf	Send_Config2@data& (0+255),b
 10534  0104B4  0E01               	movlw	1
 10535  0104B6  ECFF  F0AF         	call	_Send_Config2
 10536                           
 10537                           ;StringCommand.c: 132: Send_Config2(0b00000001, fanON);
 10538  0104BA  0EF0               	movlw	high _fanON
 10539  0104BC  0101               	movlb	1	; () banked
 10540  0104BE  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10541  0104C0  0E9D               	movlw	low _fanON
 10542  0104C2  0101               	movlb	1	; () banked
 10543  0104C4  6F86               	movwf	Send_Config2@data& (0+255),b
 10544  0104C6  0E01               	movlw	1
 10545  0104C8  ECFF  F0AF         	call	_Send_Config2
 10546                           
 10547                           ;StringCommand.c: 133: Send_Config2(0b00000001, fanON);
 10548  0104CC  0EF0               	movlw	high _fanON
 10549  0104CE  0101               	movlb	1	; () banked
 10550  0104D0  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10551  0104D2  0E9D               	movlw	low _fanON
 10552  0104D4  0101               	movlb	1	; () banked
 10553  0104D6  6F86               	movwf	Send_Config2@data& (0+255),b
 10554  0104D8  0E01               	movlw	1
 10555  0104DA  ECFF  F0AF         	call	_Send_Config2
 10556                           
 10557                           ;StringCommand.c: 134: Send_Config2(0b00000001, fanON);
 10558  0104DE  0EF0               	movlw	high _fanON
 10559  0104E0  0101               	movlb	1	; () banked
 10560  0104E2  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10561  0104E4  0E9D               	movlw	low _fanON
 10562  0104E6  0101               	movlb	1	; () banked
 10563  0104E8  6F86               	movwf	Send_Config2@data& (0+255),b
 10564  0104EA  0E01               	movlw	1
 10565  0104EC  ECFF  F0AF         	call	_Send_Config2
 10566                           
 10567                           ;StringCommand.c: 135: Send_Config2(0b00000001, fanON);
 10568  0104F0  0EF0               	movlw	high _fanON
 10569  0104F2  0101               	movlb	1	; () banked
 10570  0104F4  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10571  0104F6  0E9D               	movlw	low _fanON
 10572  0104F8  0101               	movlb	1	; () banked
 10573  0104FA  6F86               	movwf	Send_Config2@data& (0+255),b
 10574  0104FC  0E01               	movlw	1
 10575  0104FE  ECFF  F0AF         	call	_Send_Config2
 10576                           
 10577                           ;StringCommand.c: 136: Send_Config2(0b00000001, fanON);
 10578  010502  0EF0               	movlw	high _fanON
 10579  010504  0101               	movlb	1	; () banked
 10580  010506  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10581  010508  0E9D               	movlw	low _fanON
 10582  01050A  0101               	movlb	1	; () banked
 10583  01050C  6F86               	movwf	Send_Config2@data& (0+255),b
 10584  01050E  0E01               	movlw	1
 10585  010510  ECFF  F0AF         	call	_Send_Config2
 10586                           
 10587                           ;StringCommand.c: 137: Send_Config2(0b00000001, fanON);
 10588  010514  0EF0               	movlw	high _fanON
 10589  010516  0101               	movlb	1	; () banked
 10590  010518  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10591  01051A  0E9D               	movlw	low _fanON
 10592  01051C  0101               	movlb	1	; () banked
 10593  01051E  6F86               	movwf	Send_Config2@data& (0+255),b
 10594  010520  0E01               	movlw	1
 10595  010522  ECFF  F0AF         	call	_Send_Config2
 10596                           
 10597                           ;StringCommand.c: 138: INTCONbits.GIE = 1;
 10598  010526  8EF2               	bsf	intcon,7,c	;volatile
 10599                           
 10600                           ;StringCommand.c: 139: UARTstring("Livingroom Fan On");
 10601  010528  0EF9               	movlw	high STR_58
 10602  01052A  0101               	movlb	1	; () banked
 10603  01052C  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10604  01052E  0E44               	movlw	low STR_58
 10605  010530  0101               	movlb	1	; () banked
 10606  010532  6F7C               	movwf	UARTstring@data& (0+255),b
 10607  010534  ECB3  F0AD         	call	_UARTstring	;wreg free
 10608                           
 10609                           ;StringCommand.c: 140: LCDdisplayFeedback("LVNG Rm Lt On");
 10610  010538  0EFC               	movlw	high STR_59
 10611  01053A  0101               	movlb	1	; () banked
 10612  01053C  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10613  01053E  0ED2               	movlw	low STR_59
 10614  010540  0101               	movlb	1	; () banked
 10615  010542  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10616  010544  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 10617                           
 10618                           ;StringCommand.c: 141: }
 10619  010548  EF28  F092         	goto	l513
 10620  01054C                     l11350:
 10621                           
 10622                           ;StringCommand.c: 142: else if (StringMatch(Input, "livingroomfan=off"))
 10623  01054C  0101               	movlb	1	; () banked
 10624  01054E  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 10625  010552  0101               	movlb	1	; () banked
 10626  010554  C1C0  F17B         	movff	Command@Input,StringMatch@This
 10627  010558  0EF9               	movlw	high STR_60
 10628  01055A  0101               	movlb	1	; () banked
 10629  01055C  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 10630  01055E  0E0E               	movlw	low STR_60
 10631  010560  0101               	movlb	1	; () banked
 10632  010562  6F7D               	movwf	StringMatch@That& (0+255),b
 10633  010564  EC08  F0B1         	call	_StringMatch	;wreg free
 10634  010568  0900               	iorlw	0
 10635  01056A  B4D8               	btfsc	status,2,c
 10636  01056C  D065               	goto	l11362
 10637                           
 10638                           ;StringCommand.c: 143: {
 10639                           ;StringCommand.c: 144: INTCONbits.GIE = 0;
 10640  01056E  9EF2               	bcf	intcon,7,c	;volatile
 10641                           
 10642                           ;StringCommand.c: 145: Send_Config2(0b00000001, fanOFF);
 10643  010570  0EF0               	movlw	high _fanOFF
 10644  010572  0101               	movlb	1	; () banked
 10645  010574  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10646  010576  0E8D               	movlw	low _fanOFF
 10647  010578  0101               	movlb	1	; () banked
 10648  01057A  6F86               	movwf	Send_Config2@data& (0+255),b
 10649  01057C  0E01               	movlw	1
 10650  01057E  ECFF  F0AF         	call	_Send_Config2
 10651                           
 10652                           ;StringCommand.c: 146: Send_Config2(0b00000001, fanOFF);
 10653  010582  0EF0               	movlw	high _fanOFF
 10654  010584  0101               	movlb	1	; () banked
 10655  010586  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10656  010588  0E8D               	movlw	low _fanOFF
 10657  01058A  0101               	movlb	1	; () banked
 10658  01058C  6F86               	movwf	Send_Config2@data& (0+255),b
 10659  01058E  0E01               	movlw	1
 10660  010590  ECFF  F0AF         	call	_Send_Config2
 10661                           
 10662                           ;StringCommand.c: 147: Send_Config2(0b00000001, fanOFF);
 10663  010594  0EF0               	movlw	high _fanOFF
 10664  010596  0101               	movlb	1	; () banked
 10665  010598  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10666  01059A  0E8D               	movlw	low _fanOFF
 10667  01059C  0101               	movlb	1	; () banked
 10668  01059E  6F86               	movwf	Send_Config2@data& (0+255),b
 10669  0105A0  0E01               	movlw	1
 10670  0105A2  ECFF  F0AF         	call	_Send_Config2
 10671                           
 10672                           ;StringCommand.c: 148: Send_Config2(0b00000001, fanOFF);
 10673  0105A6  0EF0               	movlw	high _fanOFF
 10674  0105A8  0101               	movlb	1	; () banked
 10675  0105AA  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10676  0105AC  0E8D               	movlw	low _fanOFF
 10677  0105AE  0101               	movlb	1	; () banked
 10678  0105B0  6F86               	movwf	Send_Config2@data& (0+255),b
 10679  0105B2  0E01               	movlw	1
 10680  0105B4  ECFF  F0AF         	call	_Send_Config2
 10681                           
 10682                           ;StringCommand.c: 149: Send_Config2(0b00000001, fanOFF);
 10683  0105B8  0EF0               	movlw	high _fanOFF
 10684  0105BA  0101               	movlb	1	; () banked
 10685  0105BC  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10686  0105BE  0E8D               	movlw	low _fanOFF
 10687  0105C0  0101               	movlb	1	; () banked
 10688  0105C2  6F86               	movwf	Send_Config2@data& (0+255),b
 10689  0105C4  0E01               	movlw	1
 10690  0105C6  ECFF  F0AF         	call	_Send_Config2
 10691                           
 10692                           ;StringCommand.c: 150: Send_Config2(0b00000001, fanOFF);
 10693  0105CA  0EF0               	movlw	high _fanOFF
 10694  0105CC  0101               	movlb	1	; () banked
 10695  0105CE  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10696  0105D0  0E8D               	movlw	low _fanOFF
 10697  0105D2  0101               	movlb	1	; () banked
 10698  0105D4  6F86               	movwf	Send_Config2@data& (0+255),b
 10699  0105D6  0E01               	movlw	1
 10700  0105D8  ECFF  F0AF         	call	_Send_Config2
 10701                           
 10702                           ;StringCommand.c: 151: Send_Config2(0b00000001, fanOFF);
 10703  0105DC  0EF0               	movlw	high _fanOFF
 10704  0105DE  0101               	movlb	1	; () banked
 10705  0105E0  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10706  0105E2  0E8D               	movlw	low _fanOFF
 10707  0105E4  0101               	movlb	1	; () banked
 10708  0105E6  6F86               	movwf	Send_Config2@data& (0+255),b
 10709  0105E8  0E01               	movlw	1
 10710  0105EA  ECFF  F0AF         	call	_Send_Config2
 10711                           
 10712                           ;StringCommand.c: 152: Send_Config2(0b00000001, fanOFF);
 10713  0105EE  0EF0               	movlw	high _fanOFF
 10714  0105F0  0101               	movlb	1	; () banked
 10715  0105F2  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10716  0105F4  0E8D               	movlw	low _fanOFF
 10717  0105F6  0101               	movlb	1	; () banked
 10718  0105F8  6F86               	movwf	Send_Config2@data& (0+255),b
 10719  0105FA  0E01               	movlw	1
 10720  0105FC  ECFF  F0AF         	call	_Send_Config2
 10721                           
 10722                           ;StringCommand.c: 153: Send_Config2(0b00000001, fanOFF);
 10723  010600  0EF0               	movlw	high _fanOFF
 10724  010602  0101               	movlb	1	; () banked
 10725  010604  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 10726  010606  0E8D               	movlw	low _fanOFF
 10727  010608  0101               	movlb	1	; () banked
 10728  01060A  6F86               	movwf	Send_Config2@data& (0+255),b
 10729  01060C  0E01               	movlw	1
 10730  01060E  ECFF  F0AF         	call	_Send_Config2
 10731                           
 10732                           ;StringCommand.c: 154: INTCONbits.GIE = 1;
 10733  010612  8EF2               	bsf	intcon,7,c	;volatile
 10734                           
 10735                           ;StringCommand.c: 155: UARTstring("Livingroom Fan Off");
 10736  010614  0EF8               	movlw	high STR_61
 10737  010616  0101               	movlb	1	; () banked
 10738  010618  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10739  01061A  0EB1               	movlw	low STR_61
 10740  01061C  0101               	movlb	1	; () banked
 10741  01061E  6F7C               	movwf	UARTstring@data& (0+255),b
 10742  010620  ECB3  F0AD         	call	_UARTstring	;wreg free
 10743                           
 10744                           ;StringCommand.c: 156: LCDdisplayFeedback("LVNG Rm Lt Off");
 10745  010624  0EFC               	movlw	high STR_62
 10746  010626  0101               	movlb	1	; () banked
 10747  010628  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10748  01062A  0E13               	movlw	low STR_62
 10749  01062C  0101               	movlb	1	; () banked
 10750  01062E  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10751  010630  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 10752                           
 10753                           ;StringCommand.c: 157: }
 10754  010634  EF28  F092         	goto	l513
 10755  010638                     l11362:
 10756                           
 10757                           ;StringCommand.c: 158: else
 10758                           ;StringCommand.c: 159: {
 10759                           ;StringCommand.c: 160: UARTstring("Livingroom Task???");
 10760  010638  0EF8               	movlw	high STR_63
 10761  01063A  0101               	movlb	1	; () banked
 10762  01063C  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10763  01063E  0E8B               	movlw	low STR_63
 10764  010640  0101               	movlb	1	; () banked
 10765  010642  6F7C               	movwf	UARTstring@data& (0+255),b
 10766  010644  ECB3  F0AD         	call	_UARTstring	;wreg free
 10767                           
 10768                           ;StringCommand.c: 161: LCDdisplayFeedback("LVNG Rm Task???");
 10769  010648  0EFA               	movlw	high STR_64
 10770  01064A  0101               	movlb	1	; () banked
 10771  01064C  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10772  01064E  0E98               	movlw	low STR_64
 10773  010650  0101               	movlb	1	; () banked
 10774  010652  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10775  010654  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 10776  010658  EF28  F092         	goto	l513
 10777  01065C                     l11364:
 10778                           
 10779                           ;StringCommand.c: 164: else
 10780                           ;StringCommand.c: 165: {
 10781                           ;StringCommand.c: 166: UARTstring("Livingroom Help Menu\r\n\n");
 10782  01065C  0EF7               	movlw	high STR_65
 10783  01065E  0101               	movlb	1	; () banked
 10784  010660  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10785  010662  0E42               	movlw	low STR_65
 10786  010664  0101               	movlb	1	; () banked
 10787  010666  6F7C               	movwf	UARTstring@data& (0+255),b
 10788  010668  ECB3  F0AD         	call	_UARTstring	;wreg free
 10789                           
 10790                           ;StringCommand.c: 167: UARTstring("Devices:\r\n");
 10791  01066C  0EFD               	movlw	high STR_42
 10792  01066E  0101               	movlb	1	; () banked
 10793  010670  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10794  010672  0EF1               	movlw	low STR_42
 10795  010674  0101               	movlb	1	; () banked
 10796  010676  6F7C               	movwf	UARTstring@data& (0+255),b
 10797  010678  ECB3  F0AD         	call	_UARTstring	;wreg free
 10798                           
 10799                           ;StringCommand.c: 168: UARTstring("light\r\n");
 10800  01067C  0EFF               	movlw	high STR_67
 10801  01067E  0101               	movlb	1	; () banked
 10802  010680  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10803  010682  0E1F               	movlw	low STR_67
 10804  010684  0101               	movlb	1	; () banked
 10805  010686  6F7C               	movwf	UARTstring@data& (0+255),b
 10806  010688  ECB3  F0AD         	call	_UARTstring	;wreg free
 10807                           
 10808                           ;StringCommand.c: 169: UARTstring("fan\r\n\n");
 10809  01068C  0EFF               	movlw	high STR_68
 10810  01068E  0101               	movlb	1	; () banked
 10811  010690  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10812  010692  0E66               	movlw	low STR_68
 10813  010694  0101               	movlb	1	; () banked
 10814  010696  6F7C               	movwf	UARTstring@data& (0+255),b
 10815  010698  ECB3  F0AD         	call	_UARTstring	;wreg free
 10816                           
 10817                           ;StringCommand.c: 170: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 10818  01069C  0EF1               	movlw	high STR_45
 10819  01069E  0101               	movlb	1	; () banked
 10820  0106A0  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10821  0106A2  0E5F               	movlw	low STR_45
 10822  0106A4  0101               	movlb	1	; () banked
 10823  0106A6  6F7C               	movwf	UARTstring@data& (0+255),b
 10824  0106A8  ECB3  F0AD         	call	_UARTstring	;wreg free
 10825                           
 10826                           ;StringCommand.c: 171: UARTstring("i.e. Livingroom fan = On\r\n");
 10827  0106AC  0EF6               	movlw	high STR_70
 10828  0106AE  0101               	movlb	1	; () banked
 10829  0106B0  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 10830  0106B2  0E8E               	movlw	low STR_70
 10831  0106B4  0101               	movlb	1	; () banked
 10832  0106B6  6F7C               	movwf	UARTstring@data& (0+255),b
 10833  0106B8  ECB3  F0AD         	call	_UARTstring	;wreg free
 10834                           
 10835                           ;StringCommand.c: 172: LCDdisplayFeedback("LVNG Rm Lt help");
 10836  0106BC  0EFB               	movlw	high STR_71
 10837  0106BE  0101               	movlb	1	; () banked
 10838  0106C0  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10839  0106C2  0EA8               	movlw	low STR_71
 10840  0106C4  0101               	movlb	1	; () banked
 10841  0106C6  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10842  0106C8  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 10843                           
 10844                           ;StringCommand.c: 173: LCD_Scroll("LVNGroom Menu");
 10845  0106CC  0EFD               	movlw	high STR_72
 10846  0106CE  0101               	movlb	1	; () banked
 10847  0106D0  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10848  0106D2  0E0A               	movlw	low STR_72
 10849  0106D4  0101               	movlb	1	; () banked
 10850  0106D6  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 10851  0106D8  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 10852                           
 10853                           ;StringCommand.c: 174: LCD_Scroll("Devices:");
 10854  0106DC  0EFE               	movlw	high STR_48
 10855  0106DE  0101               	movlb	1	; () banked
 10856  0106E0  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10857  0106E2  0EB4               	movlw	low STR_48
 10858  0106E4  0101               	movlb	1	; () banked
 10859  0106E6  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 10860  0106E8  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 10861                           
 10862                           ;StringCommand.c: 175: LCD_Scroll("Light");
 10863  0106EC  0EFF               	movlw	high STR_74
 10864  0106EE  0101               	movlb	1	; () banked
 10865  0106F0  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10866  0106F2  0EA8               	movlw	low STR_74
 10867  0106F4  0101               	movlb	1	; () banked
 10868  0106F6  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 10869  0106F8  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 10870                           
 10871                           ;StringCommand.c: 176: LCD_Scroll("Fan");
 10872  0106FC  0EFF               	movlw	high STR_75
 10873  0106FE  0101               	movlb	1	; () banked
 10874  010700  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10875  010702  0EED               	movlw	low STR_75
 10876  010704  0101               	movlb	1	; () banked
 10877  010706  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 10878  010708  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 10879  01070C  EF28  F092         	goto	l513
 10880  010710                     l11374:
 10881                           
 10882                           ;StringCommand.c: 180: else if (StartsWith(Input, "bedroom"))
 10883  010710  0101               	movlb	1	; () banked
 10884  010712  C1C1  F17C         	movff	Command@Input+1,StartsWith@This+1
 10885  010716  0101               	movlb	1	; () banked
 10886  010718  C1C0  F17B         	movff	Command@Input,StartsWith@This
 10887  01071C  0EFF               	movlw	high STR_76
 10888  01071E  0101               	movlb	1	; () banked
 10889  010720  6F7E               	movwf	(StartsWith@That+1)& (0+255),b
 10890  010722  0E27               	movlw	low STR_76
 10891  010724  0101               	movlb	1	; () banked
 10892  010726  6F7D               	movwf	StartsWith@That& (0+255),b
 10893  010728  EC4C  F0AE         	call	_StartsWith	;wreg free
 10894  01072C  0900               	iorlw	0
 10895  01072E  B4D8               	btfsc	status,2,c
 10896  010730  D2E2               	goto	l11456
 10897                           
 10898                           ;StringCommand.c: 181: {
 10899                           ;StringCommand.c: 182: if (!StringContains(Input, "?"))
 10900  010732  0101               	movlb	1	; () banked
 10901  010734  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 10902  010738  0101               	movlb	1	; () banked
 10903  01073A  C1C0  F17B         	movff	Command@Input,StringContains@This
 10904  01073E  0EFA               	movlw	high (STR_64+14)
 10905  010740  0101               	movlb	1	; () banked
 10906  010742  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 10907  010744  0EA6               	movlw	low (STR_64+14)
 10908  010746  0101               	movlb	1	; () banked
 10909  010748  6F7D               	movwf	StringContains@That& (0+255),b
 10910  01074A  ECC9  F0B0         	call	_StringContains	;wreg free
 10911  01074E  0900               	iorlw	0
 10912  010750  A4D8               	btfss	status,2,c
 10913  010752  D267               	goto	l11444
 10914                           
 10915                           ;StringCommand.c: 183: {
 10916                           ;StringCommand.c: 184: if (StringContains(Input, "light") || StringContains(Input, "fan"
      +                          ))
 10917  010754  0101               	movlb	1	; () banked
 10918  010756  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 10919  01075A  0101               	movlb	1	; () banked
 10920  01075C  C1C0  F17B         	movff	Command@Input,StringContains@This
 10921  010760  0EFF               	movlw	high STR_78
 10922  010762  0101               	movlb	1	; () banked
 10923  010764  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 10924  010766  0EAE               	movlw	low STR_78
 10925  010768  0101               	movlb	1	; () banked
 10926  01076A  6F7D               	movwf	StringContains@That& (0+255),b
 10927  01076C  ECC9  F0B0         	call	_StringContains	;wreg free
 10928  010770  0900               	iorlw	0
 10929  010772  A4D8               	btfss	status,2,c
 10930  010774  D011               	goto	l11382
 10931  010776  0101               	movlb	1	; () banked
 10932  010778  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 10933  01077C  0101               	movlb	1	; () banked
 10934  01077E  C1C0  F17B         	movff	Command@Input,StringContains@This
 10935  010782  0EFF               	movlw	high STR_79
 10936  010784  0101               	movlb	1	; () banked
 10937  010786  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 10938  010788  0EF1               	movlw	low STR_79
 10939  01078A  0101               	movlb	1	; () banked
 10940  01078C  6F7D               	movwf	StringContains@That& (0+255),b
 10941  01078E  ECC9  F0B0         	call	_StringContains	;wreg free
 10942  010792  0900               	iorlw	0
 10943  010794  B4D8               	btfsc	status,2,c
 10944  010796  D233               	goto	l11442
 10945  010798                     l11382:
 10946                           
 10947                           ;StringCommand.c: 185: {
 10948                           ;StringCommand.c: 186: if (StringMatch(Input, "bedroomlight=on") || StringMatch(Input, "
      +                          bedroomlight=off"))
 10949  010798  0101               	movlb	1	; () banked
 10950  01079A  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 10951  01079E  0101               	movlb	1	; () banked
 10952  0107A0  C1C0  F17B         	movff	Command@Input,StringMatch@This
 10953  0107A4  0EFB               	movlw	high STR_80
 10954  0107A6  0101               	movlb	1	; () banked
 10955  0107A8  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 10956  0107AA  0E98               	movlw	low STR_80
 10957  0107AC  0101               	movlb	1	; () banked
 10958  0107AE  6F7D               	movwf	StringMatch@That& (0+255),b
 10959  0107B0  EC08  F0B1         	call	_StringMatch	;wreg free
 10960  0107B4  0900               	iorlw	0
 10961  0107B6  A4D8               	btfss	status,2,c
 10962  0107B8  D011               	goto	l533
 10963  0107BA  0101               	movlb	1	; () banked
 10964  0107BC  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 10965  0107C0  0101               	movlb	1	; () banked
 10966  0107C2  C1C0  F17B         	movff	Command@Input,StringMatch@This
 10967  0107C6  0EF9               	movlw	high STR_81
 10968  0107C8  0101               	movlb	1	; () banked
 10969  0107CA  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 10970  0107CC  0EF0               	movlw	low STR_81
 10971  0107CE  0101               	movlb	1	; () banked
 10972  0107D0  6F7D               	movwf	StringMatch@That& (0+255),b
 10973  0107D2  EC08  F0B1         	call	_StringMatch	;wreg free
 10974  0107D6  0900               	iorlw	0
 10975  0107D8  B4D8               	btfsc	status,2,c
 10976  0107DA  D053               	goto	l11394
 10977  0107DC                     l533:
 10978                           
 10979                           ;StringCommand.c: 187: {
 10980                           ;StringCommand.c: 188: INTCONbits.GIE = 0;
 10981  0107DC  9EF2               	bcf	intcon,7,c	;volatile
 10982                           
 10983                           ;StringCommand.c: 189: Send_Config1(0b00000001, TXdataE);
 10984  0107DE  0EF0               	movlw	high _TXdataE
 10985  0107E0  0101               	movlb	1	; () banked
 10986  0107E2  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 10987  0107E4  0EB9               	movlw	low _TXdataE
 10988  0107E6  0101               	movlb	1	; () banked
 10989  0107E8  6F86               	movwf	Send_Config1@data& (0+255),b
 10990  0107EA  0E01               	movlw	1
 10991  0107EC  EC33  F0A8         	call	_Send_Config1
 10992                           
 10993                           ;StringCommand.c: 190: Send_Config1(0b00000001, TXdataE);
 10994  0107F0  0EF0               	movlw	high _TXdataE
 10995  0107F2  0101               	movlb	1	; () banked
 10996  0107F4  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 10997  0107F6  0EB9               	movlw	low _TXdataE
 10998  0107F8  0101               	movlb	1	; () banked
 10999  0107FA  6F86               	movwf	Send_Config1@data& (0+255),b
 11000  0107FC  0E01               	movlw	1
 11001  0107FE  EC33  F0A8         	call	_Send_Config1
 11002                           
 11003                           ;StringCommand.c: 191: Send_Config1(0b00000001, TXdataE);
 11004  010802  0EF0               	movlw	high _TXdataE
 11005  010804  0101               	movlb	1	; () banked
 11006  010806  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 11007  010808  0EB9               	movlw	low _TXdataE
 11008  01080A  0101               	movlb	1	; () banked
 11009  01080C  6F86               	movwf	Send_Config1@data& (0+255),b
 11010  01080E  0E01               	movlw	1
 11011  010810  EC33  F0A8         	call	_Send_Config1
 11012                           
 11013                           ;StringCommand.c: 192: Send_Config1(0b00000001, TXdataE);
 11014  010814  0EF0               	movlw	high _TXdataE
 11015  010816  0101               	movlb	1	; () banked
 11016  010818  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 11017  01081A  0EB9               	movlw	low _TXdataE
 11018  01081C  0101               	movlb	1	; () banked
 11019  01081E  6F86               	movwf	Send_Config1@data& (0+255),b
 11020  010820  0E01               	movlw	1
 11021  010822  EC33  F0A8         	call	_Send_Config1
 11022                           
 11023                           ;StringCommand.c: 193: Send_Config1(0b00000001, TXdataE);
 11024  010826  0EF0               	movlw	high _TXdataE
 11025  010828  0101               	movlb	1	; () banked
 11026  01082A  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 11027  01082C  0EB9               	movlw	low _TXdataE
 11028  01082E  0101               	movlb	1	; () banked
 11029  010830  6F86               	movwf	Send_Config1@data& (0+255),b
 11030  010832  0E01               	movlw	1
 11031  010834  EC33  F0A8         	call	_Send_Config1
 11032                           
 11033                           ;StringCommand.c: 194: Send_Config1(0b00000001, TXdataE);
 11034  010838  0EF0               	movlw	high _TXdataE
 11035  01083A  0101               	movlb	1	; () banked
 11036  01083C  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 11037  01083E  0EB9               	movlw	low _TXdataE
 11038  010840  0101               	movlb	1	; () banked
 11039  010842  6F86               	movwf	Send_Config1@data& (0+255),b
 11040  010844  0E01               	movlw	1
 11041  010846  EC33  F0A8         	call	_Send_Config1
 11042                           
 11043                           ;StringCommand.c: 195: Send_Config1(0b00000001, TXdataE);
 11044  01084A  0EF0               	movlw	high _TXdataE
 11045  01084C  0101               	movlb	1	; () banked
 11046  01084E  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 11047  010850  0EB9               	movlw	low _TXdataE
 11048  010852  0101               	movlb	1	; () banked
 11049  010854  6F86               	movwf	Send_Config1@data& (0+255),b
 11050  010856  0E01               	movlw	1
 11051  010858  EC33  F0A8         	call	_Send_Config1
 11052                           
 11053                           ;StringCommand.c: 196: INTCONbits.GIE = 1;
 11054  01085C  8EF2               	bsf	intcon,7,c	;volatile
 11055                           
 11056                           ;StringCommand.c: 197: UARTstring("Bedroom Light Toggled");
 11057  01085E  0EF7               	movlw	high STR_82
 11058  010860  0101               	movlb	1	; () banked
 11059  010862  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11060  010864  0EFB               	movlw	low STR_82
 11061  010866  0101               	movlb	1	; () banked
 11062  010868  6F7C               	movwf	UARTstring@data& (0+255),b
 11063  01086A  ECB3  F0AD         	call	_UARTstring	;wreg free
 11064                           
 11065                           ;StringCommand.c: 198: LCDdisplayFeedback("Bedroom Lt TGLD");
 11066  01086E  0EFB               	movlw	high STR_83
 11067  010870  0101               	movlb	1	; () banked
 11068  010872  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11069  010874  0E18               	movlw	low STR_83
 11070  010876  0101               	movlb	1	; () banked
 11071  010878  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11072  01087A  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 11073                           
 11074                           ;StringCommand.c: 199: }
 11075  01087E  EF28  F092         	goto	l513
 11076  010882                     l11394:
 11077                           
 11078                           ;StringCommand.c: 200: else if (StringMatch(Input, "bedroomfan=on"))
 11079  010882  0101               	movlb	1	; () banked
 11080  010884  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 11081  010888  0101               	movlb	1	; () banked
 11082  01088A  C1C0  F17B         	movff	Command@Input,StringMatch@This
 11083  01088E  0EFC               	movlw	high STR_84
 11084  010890  0101               	movlb	1	; () banked
 11085  010892  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 11086  010894  0EEE               	movlw	low STR_84
 11087  010896  0101               	movlb	1	; () banked
 11088  010898  6F7D               	movwf	StringMatch@That& (0+255),b
 11089  01089A  EC08  F0B1         	call	_StringMatch	;wreg free
 11090  01089E  0900               	iorlw	0
 11091  0108A0  B4D8               	btfsc	status,2,c
 11092  0108A2  D05C               	goto	l11406
 11093                           
 11094                           ;StringCommand.c: 201: {
 11095                           ;StringCommand.c: 202: INTCONbits.GIE = 0;
 11096  0108A4  9EF2               	bcf	intcon,7,c	;volatile
 11097                           
 11098                           ;StringCommand.c: 203: Send_Config2(0b00000001, AuxON);
 11099  0108A6  0EF0               	movlw	high _AuxON
 11100  0108A8  0101               	movlb	1	; () banked
 11101  0108AA  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11102  0108AC  0E3D               	movlw	low _AuxON
 11103  0108AE  0101               	movlb	1	; () banked
 11104  0108B0  6F86               	movwf	Send_Config2@data& (0+255),b
 11105  0108B2  0E01               	movlw	1
 11106  0108B4  ECFF  F0AF         	call	_Send_Config2
 11107                           
 11108                           ;StringCommand.c: 204: Send_Config2(0b00000001, AuxON);
 11109  0108B8  0EF0               	movlw	high _AuxON
 11110  0108BA  0101               	movlb	1	; () banked
 11111  0108BC  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11112  0108BE  0E3D               	movlw	low _AuxON
 11113  0108C0  0101               	movlb	1	; () banked
 11114  0108C2  6F86               	movwf	Send_Config2@data& (0+255),b
 11115  0108C4  0E01               	movlw	1
 11116  0108C6  ECFF  F0AF         	call	_Send_Config2
 11117                           
 11118                           ;StringCommand.c: 205: Send_Config2(0b00000001, AuxON);
 11119  0108CA  0EF0               	movlw	high _AuxON
 11120  0108CC  0101               	movlb	1	; () banked
 11121  0108CE  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11122  0108D0  0E3D               	movlw	low _AuxON
 11123  0108D2  0101               	movlb	1	; () banked
 11124  0108D4  6F86               	movwf	Send_Config2@data& (0+255),b
 11125  0108D6  0E01               	movlw	1
 11126  0108D8  ECFF  F0AF         	call	_Send_Config2
 11127                           
 11128                           ;StringCommand.c: 206: Send_Config2(0b00000001, AuxON);
 11129  0108DC  0EF0               	movlw	high _AuxON
 11130  0108DE  0101               	movlb	1	; () banked
 11131  0108E0  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11132  0108E2  0E3D               	movlw	low _AuxON
 11133  0108E4  0101               	movlb	1	; () banked
 11134  0108E6  6F86               	movwf	Send_Config2@data& (0+255),b
 11135  0108E8  0E01               	movlw	1
 11136  0108EA  ECFF  F0AF         	call	_Send_Config2
 11137                           
 11138                           ;StringCommand.c: 207: Send_Config2(0b00000001, AuxON);
 11139  0108EE  0EF0               	movlw	high _AuxON
 11140  0108F0  0101               	movlb	1	; () banked
 11141  0108F2  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11142  0108F4  0E3D               	movlw	low _AuxON
 11143  0108F6  0101               	movlb	1	; () banked
 11144  0108F8  6F86               	movwf	Send_Config2@data& (0+255),b
 11145  0108FA  0E01               	movlw	1
 11146  0108FC  ECFF  F0AF         	call	_Send_Config2
 11147                           
 11148                           ;StringCommand.c: 208: Send_Config2(0b00000001, AuxON);
 11149  010900  0EF0               	movlw	high _AuxON
 11150  010902  0101               	movlb	1	; () banked
 11151  010904  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11152  010906  0E3D               	movlw	low _AuxON
 11153  010908  0101               	movlb	1	; () banked
 11154  01090A  6F86               	movwf	Send_Config2@data& (0+255),b
 11155  01090C  0E01               	movlw	1
 11156  01090E  ECFF  F0AF         	call	_Send_Config2
 11157                           
 11158                           ;StringCommand.c: 209: Send_Config2(0b00000001, AuxON);
 11159  010912  0EF0               	movlw	high _AuxON
 11160  010914  0101               	movlb	1	; () banked
 11161  010916  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11162  010918  0E3D               	movlw	low _AuxON
 11163  01091A  0101               	movlb	1	; () banked
 11164  01091C  6F86               	movwf	Send_Config2@data& (0+255),b
 11165  01091E  0E01               	movlw	1
 11166  010920  ECFF  F0AF         	call	_Send_Config2
 11167                           
 11168                           ;StringCommand.c: 210: Send_Config2(0b00000001, AuxON);
 11169  010924  0EF0               	movlw	high _AuxON
 11170  010926  0101               	movlb	1	; () banked
 11171  010928  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11172  01092A  0E3D               	movlw	low _AuxON
 11173  01092C  0101               	movlb	1	; () banked
 11174  01092E  6F86               	movwf	Send_Config2@data& (0+255),b
 11175  010930  0E01               	movlw	1
 11176  010932  ECFF  F0AF         	call	_Send_Config2
 11177                           
 11178                           ;StringCommand.c: 211: INTCONbits.GIE = 1;
 11179  010936  8EF2               	bsf	intcon,7,c	;volatile
 11180                           
 11181                           ;StringCommand.c: 212: UARTstring("Bedroom Fan On");
 11182  010938  0EFC               	movlw	high STR_85
 11183  01093A  0101               	movlb	1	; () banked
 11184  01093C  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11185  01093E  0E4F               	movlw	low STR_85
 11186  010940  0101               	movlb	1	; () banked
 11187  010942  6F7C               	movwf	UARTstring@data& (0+255),b
 11188  010944  ECB3  F0AD         	call	_UARTstring	;wreg free
 11189                           
 11190                           ;StringCommand.c: 213: LCDdisplayFeedback("Bedroom Lt On");
 11191  010948  0EFC               	movlw	high STR_86
 11192  01094A  0101               	movlb	1	; () banked
 11193  01094C  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11194  01094E  0EE0               	movlw	low STR_86
 11195  010950  0101               	movlb	1	; () banked
 11196  010952  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11197  010954  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 11198                           
 11199                           ;StringCommand.c: 214: }
 11200  010958  EF28  F092         	goto	l513
 11201  01095C                     l11406:
 11202                           
 11203                           ;StringCommand.c: 215: else if (StringMatch(Input, "bedroomfan=off"))
 11204  01095C  0101               	movlb	1	; () banked
 11205  01095E  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 11206  010962  0101               	movlb	1	; () banked
 11207  010964  C1C0  F17B         	movff	Command@Input,StringMatch@This
 11208  010968  0EFC               	movlw	high STR_87
 11209  01096A  0101               	movlb	1	; () banked
 11210  01096C  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 11211  01096E  0E31               	movlw	low STR_87
 11212  010970  0101               	movlb	1	; () banked
 11213  010972  6F7D               	movwf	StringMatch@That& (0+255),b
 11214  010974  EC08  F0B1         	call	_StringMatch	;wreg free
 11215  010978  0900               	iorlw	0
 11216  01097A  B4D8               	btfsc	status,2,c
 11217  01097C  D065               	goto	l11418
 11218                           
 11219                           ;StringCommand.c: 216: {
 11220                           ;StringCommand.c: 217: INTCONbits.GIE = 0;
 11221  01097E  9EF2               	bcf	intcon,7,c	;volatile
 11222                           
 11223                           ;StringCommand.c: 218: Send_Config2(0b00000001, AuxOFF);
 11224  010980  0EF0               	movlw	high _AuxOFF
 11225  010982  0101               	movlb	1	; () banked
 11226  010984  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11227  010986  0E2D               	movlw	low _AuxOFF
 11228  010988  0101               	movlb	1	; () banked
 11229  01098A  6F86               	movwf	Send_Config2@data& (0+255),b
 11230  01098C  0E01               	movlw	1
 11231  01098E  ECFF  F0AF         	call	_Send_Config2
 11232                           
 11233                           ;StringCommand.c: 219: Send_Config2(0b00000001, AuxOFF);
 11234  010992  0EF0               	movlw	high _AuxOFF
 11235  010994  0101               	movlb	1	; () banked
 11236  010996  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11237  010998  0E2D               	movlw	low _AuxOFF
 11238  01099A  0101               	movlb	1	; () banked
 11239  01099C  6F86               	movwf	Send_Config2@data& (0+255),b
 11240  01099E  0E01               	movlw	1
 11241  0109A0  ECFF  F0AF         	call	_Send_Config2
 11242                           
 11243                           ;StringCommand.c: 220: Send_Config2(0b00000001, AuxOFF);
 11244  0109A4  0EF0               	movlw	high _AuxOFF
 11245  0109A6  0101               	movlb	1	; () banked
 11246  0109A8  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11247  0109AA  0E2D               	movlw	low _AuxOFF
 11248  0109AC  0101               	movlb	1	; () banked
 11249  0109AE  6F86               	movwf	Send_Config2@data& (0+255),b
 11250  0109B0  0E01               	movlw	1
 11251  0109B2  ECFF  F0AF         	call	_Send_Config2
 11252                           
 11253                           ;StringCommand.c: 221: Send_Config2(0b00000001, AuxOFF);
 11254  0109B6  0EF0               	movlw	high _AuxOFF
 11255  0109B8  0101               	movlb	1	; () banked
 11256  0109BA  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11257  0109BC  0E2D               	movlw	low _AuxOFF
 11258  0109BE  0101               	movlb	1	; () banked
 11259  0109C0  6F86               	movwf	Send_Config2@data& (0+255),b
 11260  0109C2  0E01               	movlw	1
 11261  0109C4  ECFF  F0AF         	call	_Send_Config2
 11262                           
 11263                           ;StringCommand.c: 222: Send_Config2(0b00000001, AuxOFF);
 11264  0109C8  0EF0               	movlw	high _AuxOFF
 11265  0109CA  0101               	movlb	1	; () banked
 11266  0109CC  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11267  0109CE  0E2D               	movlw	low _AuxOFF
 11268  0109D0  0101               	movlb	1	; () banked
 11269  0109D2  6F86               	movwf	Send_Config2@data& (0+255),b
 11270  0109D4  0E01               	movlw	1
 11271  0109D6  ECFF  F0AF         	call	_Send_Config2
 11272                           
 11273                           ;StringCommand.c: 223: Send_Config2(0b00000001, AuxOFF);
 11274  0109DA  0EF0               	movlw	high _AuxOFF
 11275  0109DC  0101               	movlb	1	; () banked
 11276  0109DE  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11277  0109E0  0E2D               	movlw	low _AuxOFF
 11278  0109E2  0101               	movlb	1	; () banked
 11279  0109E4  6F86               	movwf	Send_Config2@data& (0+255),b
 11280  0109E6  0E01               	movlw	1
 11281  0109E8  ECFF  F0AF         	call	_Send_Config2
 11282                           
 11283                           ;StringCommand.c: 224: Send_Config2(0b00000001, AuxOFF);
 11284  0109EC  0EF0               	movlw	high _AuxOFF
 11285  0109EE  0101               	movlb	1	; () banked
 11286  0109F0  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11287  0109F2  0E2D               	movlw	low _AuxOFF
 11288  0109F4  0101               	movlb	1	; () banked
 11289  0109F6  6F86               	movwf	Send_Config2@data& (0+255),b
 11290  0109F8  0E01               	movlw	1
 11291  0109FA  ECFF  F0AF         	call	_Send_Config2
 11292                           
 11293                           ;StringCommand.c: 225: Send_Config2(0b00000001, AuxOFF);
 11294  0109FE  0EF0               	movlw	high _AuxOFF
 11295  010A00  0101               	movlb	1	; () banked
 11296  010A02  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11297  010A04  0E2D               	movlw	low _AuxOFF
 11298  010A06  0101               	movlb	1	; () banked
 11299  010A08  6F86               	movwf	Send_Config2@data& (0+255),b
 11300  010A0A  0E01               	movlw	1
 11301  010A0C  ECFF  F0AF         	call	_Send_Config2
 11302                           
 11303                           ;StringCommand.c: 226: Send_Config2(0b00000001, AuxOFF);
 11304  010A10  0EF0               	movlw	high _AuxOFF
 11305  010A12  0101               	movlb	1	; () banked
 11306  010A14  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11307  010A16  0E2D               	movlw	low _AuxOFF
 11308  010A18  0101               	movlb	1	; () banked
 11309  010A1A  6F86               	movwf	Send_Config2@data& (0+255),b
 11310  010A1C  0E01               	movlw	1
 11311  010A1E  ECFF  F0AF         	call	_Send_Config2
 11312                           
 11313                           ;StringCommand.c: 227: INTCONbits.GIE = 1;
 11314  010A22  8EF2               	bsf	intcon,7,c	;volatile
 11315                           
 11316                           ;StringCommand.c: 228: UARTstring("Bedroom Fan Off");
 11317  010A24  0EFB               	movlw	high STR_88
 11318  010A26  0101               	movlb	1	; () banked
 11319  010A28  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11320  010A2A  0E68               	movlw	low STR_88
 11321  010A2C  0101               	movlb	1	; () banked
 11322  010A2E  6F7C               	movwf	UARTstring@data& (0+255),b
 11323  010A30  ECB3  F0AD         	call	_UARTstring	;wreg free
 11324                           
 11325                           ;StringCommand.c: 229: LCDdisplayFeedback("Bedroom Lt Off");
 11326  010A34  0EFC               	movlw	high STR_89
 11327  010A36  0101               	movlb	1	; () banked
 11328  010A38  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11329  010A3A  0E22               	movlw	low STR_89
 11330  010A3C  0101               	movlb	1	; () banked
 11331  010A3E  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11332  010A40  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 11333                           
 11334                           ;StringCommand.c: 230: }
 11335  010A44  EF28  F092         	goto	l513
 11336  010A48                     l11418:
 11337                           
 11338                           ;StringCommand.c: 231: else if (StringMatch(Input, "bedroomshaker=on"))
 11339  010A48  0101               	movlb	1	; () banked
 11340  010A4A  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 11341  010A4E  0101               	movlb	1	; () banked
 11342  010A50  C1C0  F17B         	movff	Command@Input,StringMatch@This
 11343  010A54  0EFA               	movlw	high STR_90
 11344  010A56  0101               	movlb	1	; () banked
 11345  010A58  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 11346  010A5A  0E23               	movlw	low STR_90
 11347  010A5C  0101               	movlb	1	; () banked
 11348  010A5E  6F7D               	movwf	StringMatch@That& (0+255),b
 11349  010A60  EC08  F0B1         	call	_StringMatch	;wreg free
 11350  010A64  0900               	iorlw	0
 11351  010A66  B4D8               	btfsc	status,2,c
 11352  010A68  D05C               	goto	l11430
 11353                           
 11354                           ;StringCommand.c: 232: {
 11355                           ;StringCommand.c: 233: INTCONbits.GIE = 0;
 11356  010A6A  9EF2               	bcf	intcon,7,c	;volatile
 11357                           
 11358                           ;StringCommand.c: 234: Send_Config2(0b00000001, BedON);
 11359  010A6C  0EF0               	movlw	high _BedON
 11360  010A6E  0101               	movlb	1	; () banked
 11361  010A70  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11362  010A72  0E5D               	movlw	low _BedON
 11363  010A74  0101               	movlb	1	; () banked
 11364  010A76  6F86               	movwf	Send_Config2@data& (0+255),b
 11365  010A78  0E01               	movlw	1
 11366  010A7A  ECFF  F0AF         	call	_Send_Config2
 11367                           
 11368                           ;StringCommand.c: 235: Send_Config2(0b00000001, BedON);
 11369  010A7E  0EF0               	movlw	high _BedON
 11370  010A80  0101               	movlb	1	; () banked
 11371  010A82  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11372  010A84  0E5D               	movlw	low _BedON
 11373  010A86  0101               	movlb	1	; () banked
 11374  010A88  6F86               	movwf	Send_Config2@data& (0+255),b
 11375  010A8A  0E01               	movlw	1
 11376  010A8C  ECFF  F0AF         	call	_Send_Config2
 11377                           
 11378                           ;StringCommand.c: 236: Send_Config2(0b00000001, BedON);
 11379  010A90  0EF0               	movlw	high _BedON
 11380  010A92  0101               	movlb	1	; () banked
 11381  010A94  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11382  010A96  0E5D               	movlw	low _BedON
 11383  010A98  0101               	movlb	1	; () banked
 11384  010A9A  6F86               	movwf	Send_Config2@data& (0+255),b
 11385  010A9C  0E01               	movlw	1
 11386  010A9E  ECFF  F0AF         	call	_Send_Config2
 11387                           
 11388                           ;StringCommand.c: 237: Send_Config2(0b00000001, BedON);
 11389  010AA2  0EF0               	movlw	high _BedON
 11390  010AA4  0101               	movlb	1	; () banked
 11391  010AA6  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11392  010AA8  0E5D               	movlw	low _BedON
 11393  010AAA  0101               	movlb	1	; () banked
 11394  010AAC  6F86               	movwf	Send_Config2@data& (0+255),b
 11395  010AAE  0E01               	movlw	1
 11396  010AB0  ECFF  F0AF         	call	_Send_Config2
 11397                           
 11398                           ;StringCommand.c: 238: Send_Config2(0b00000001, BedON);
 11399  010AB4  0EF0               	movlw	high _BedON
 11400  010AB6  0101               	movlb	1	; () banked
 11401  010AB8  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11402  010ABA  0E5D               	movlw	low _BedON
 11403  010ABC  0101               	movlb	1	; () banked
 11404  010ABE  6F86               	movwf	Send_Config2@data& (0+255),b
 11405  010AC0  0E01               	movlw	1
 11406  010AC2  ECFF  F0AF         	call	_Send_Config2
 11407                           
 11408                           ;StringCommand.c: 239: Send_Config2(0b00000001, BedON);
 11409  010AC6  0EF0               	movlw	high _BedON
 11410  010AC8  0101               	movlb	1	; () banked
 11411  010ACA  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11412  010ACC  0E5D               	movlw	low _BedON
 11413  010ACE  0101               	movlb	1	; () banked
 11414  010AD0  6F86               	movwf	Send_Config2@data& (0+255),b
 11415  010AD2  0E01               	movlw	1
 11416  010AD4  ECFF  F0AF         	call	_Send_Config2
 11417                           
 11418                           ;StringCommand.c: 240: Send_Config2(0b00000001, BedON);
 11419  010AD8  0EF0               	movlw	high _BedON
 11420  010ADA  0101               	movlb	1	; () banked
 11421  010ADC  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11422  010ADE  0E5D               	movlw	low _BedON
 11423  010AE0  0101               	movlb	1	; () banked
 11424  010AE2  6F86               	movwf	Send_Config2@data& (0+255),b
 11425  010AE4  0E01               	movlw	1
 11426  010AE6  ECFF  F0AF         	call	_Send_Config2
 11427                           
 11428                           ;StringCommand.c: 241: Send_Config2(0b00000001, BedON);
 11429  010AEA  0EF0               	movlw	high _BedON
 11430  010AEC  0101               	movlb	1	; () banked
 11431  010AEE  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11432  010AF0  0E5D               	movlw	low _BedON
 11433  010AF2  0101               	movlb	1	; () banked
 11434  010AF4  6F86               	movwf	Send_Config2@data& (0+255),b
 11435  010AF6  0E01               	movlw	1
 11436  010AF8  ECFF  F0AF         	call	_Send_Config2
 11437                           
 11438                           ;StringCommand.c: 242: INTCONbits.GIE = 1;
 11439  010AFC  8EF2               	bsf	intcon,7,c	;volatile
 11440                           
 11441                           ;StringCommand.c: 243: UARTstring("Bedroom Shaker On");
 11442  010AFE  0EF9               	movlw	high STR_91
 11443  010B00  0101               	movlb	1	; () banked
 11444  010B02  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11445  010B04  0E56               	movlw	low STR_91
 11446  010B06  0101               	movlb	1	; () banked
 11447  010B08  6F7C               	movwf	UARTstring@data& (0+255),b
 11448  010B0A  ECB3  F0AD         	call	_UARTstring	;wreg free
 11449                           
 11450                           ;StringCommand.c: 244: LCDdisplayFeedback("Bedroom SKR On");
 11451  010B0E  0EFC               	movlw	high STR_92
 11452  010B10  0101               	movlb	1	; () banked
 11453  010B12  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11454  010B14  0E40               	movlw	low STR_92
 11455  010B16  0101               	movlb	1	; () banked
 11456  010B18  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11457  010B1A  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 11458                           
 11459                           ;StringCommand.c: 245: }
 11460  010B1E  EF28  F092         	goto	l513
 11461  010B22                     l11430:
 11462                           
 11463                           ;StringCommand.c: 246: else if (StringMatch(Input, "bedroomshaker=off"))
 11464  010B22  0101               	movlb	1	; () banked
 11465  010B24  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 11466  010B28  0101               	movlb	1	; () banked
 11467  010B2A  C1C0  F17B         	movff	Command@Input,StringMatch@This
 11468  010B2E  0EF9               	movlw	high STR_93
 11469  010B30  0101               	movlb	1	; () banked
 11470  010B32  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 11471  010B34  0E20               	movlw	low STR_93
 11472  010B36  0101               	movlb	1	; () banked
 11473  010B38  6F7D               	movwf	StringMatch@That& (0+255),b
 11474  010B3A  EC08  F0B1         	call	_StringMatch	;wreg free
 11475  010B3E  0900               	iorlw	0
 11476  010B40  B4D8               	btfsc	status,2,c
 11477  010B42  EF28  F092         	goto	l513
 11478                           
 11479                           ;StringCommand.c: 247: {
 11480                           ;StringCommand.c: 248: INTCONbits.GIE = 0;
 11481  010B46  9EF2               	bcf	intcon,7,c	;volatile
 11482                           
 11483                           ;StringCommand.c: 249: Send_Config2(0b00000001, BedOFF);
 11484  010B48  0EF0               	movlw	high _BedOFF
 11485  010B4A  0101               	movlb	1	; () banked
 11486  010B4C  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11487  010B4E  0E4D               	movlw	low _BedOFF
 11488  010B50  0101               	movlb	1	; () banked
 11489  010B52  6F86               	movwf	Send_Config2@data& (0+255),b
 11490  010B54  0E01               	movlw	1
 11491  010B56  ECFF  F0AF         	call	_Send_Config2
 11492                           
 11493                           ;StringCommand.c: 250: Send_Config2(0b00000001, BedOFF);
 11494  010B5A  0EF0               	movlw	high _BedOFF
 11495  010B5C  0101               	movlb	1	; () banked
 11496  010B5E  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11497  010B60  0E4D               	movlw	low _BedOFF
 11498  010B62  0101               	movlb	1	; () banked
 11499  010B64  6F86               	movwf	Send_Config2@data& (0+255),b
 11500  010B66  0E01               	movlw	1
 11501  010B68  ECFF  F0AF         	call	_Send_Config2
 11502                           
 11503                           ;StringCommand.c: 251: Send_Config2(0b00000001, BedOFF);
 11504  010B6C  0EF0               	movlw	high _BedOFF
 11505  010B6E  0101               	movlb	1	; () banked
 11506  010B70  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11507  010B72  0E4D               	movlw	low _BedOFF
 11508  010B74  0101               	movlb	1	; () banked
 11509  010B76  6F86               	movwf	Send_Config2@data& (0+255),b
 11510  010B78  0E01               	movlw	1
 11511  010B7A  ECFF  F0AF         	call	_Send_Config2
 11512                           
 11513                           ;StringCommand.c: 252: Send_Config2(0b00000001, BedOFF);
 11514  010B7E  0EF0               	movlw	high _BedOFF
 11515  010B80  0101               	movlb	1	; () banked
 11516  010B82  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11517  010B84  0E4D               	movlw	low _BedOFF
 11518  010B86  0101               	movlb	1	; () banked
 11519  010B88  6F86               	movwf	Send_Config2@data& (0+255),b
 11520  010B8A  0E01               	movlw	1
 11521  010B8C  ECFF  F0AF         	call	_Send_Config2
 11522                           
 11523                           ;StringCommand.c: 253: Send_Config2(0b00000001, BedOFF);
 11524  010B90  0EF0               	movlw	high _BedOFF
 11525  010B92  0101               	movlb	1	; () banked
 11526  010B94  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11527  010B96  0E4D               	movlw	low _BedOFF
 11528  010B98  0101               	movlb	1	; () banked
 11529  010B9A  6F86               	movwf	Send_Config2@data& (0+255),b
 11530  010B9C  0E01               	movlw	1
 11531  010B9E  ECFF  F0AF         	call	_Send_Config2
 11532                           
 11533                           ;StringCommand.c: 254: Send_Config2(0b00000001, BedOFF);
 11534  010BA2  0EF0               	movlw	high _BedOFF
 11535  010BA4  0101               	movlb	1	; () banked
 11536  010BA6  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11537  010BA8  0E4D               	movlw	low _BedOFF
 11538  010BAA  0101               	movlb	1	; () banked
 11539  010BAC  6F86               	movwf	Send_Config2@data& (0+255),b
 11540  010BAE  0E01               	movlw	1
 11541  010BB0  ECFF  F0AF         	call	_Send_Config2
 11542                           
 11543                           ;StringCommand.c: 255: Send_Config2(0b00000001, BedOFF);
 11544  010BB4  0EF0               	movlw	high _BedOFF
 11545  010BB6  0101               	movlb	1	; () banked
 11546  010BB8  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11547  010BBA  0E4D               	movlw	low _BedOFF
 11548  010BBC  0101               	movlb	1	; () banked
 11549  010BBE  6F86               	movwf	Send_Config2@data& (0+255),b
 11550  010BC0  0E01               	movlw	1
 11551  010BC2  ECFF  F0AF         	call	_Send_Config2
 11552                           
 11553                           ;StringCommand.c: 256: Send_Config2(0b00000001, BedOFF);
 11554  010BC6  0EF0               	movlw	high _BedOFF
 11555  010BC8  0101               	movlb	1	; () banked
 11556  010BCA  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11557  010BCC  0E4D               	movlw	low _BedOFF
 11558  010BCE  0101               	movlb	1	; () banked
 11559  010BD0  6F86               	movwf	Send_Config2@data& (0+255),b
 11560  010BD2  0E01               	movlw	1
 11561  010BD4  ECFF  F0AF         	call	_Send_Config2
 11562                           
 11563                           ;StringCommand.c: 257: INTCONbits.GIE = 1;
 11564  010BD8  8EF2               	bsf	intcon,7,c	;volatile
 11565                           
 11566                           ;StringCommand.c: 258: UARTstring("Bedroom Shaker Off");
 11567  010BDA  0EF8               	movlw	high STR_94
 11568  010BDC  0101               	movlb	1	; () banked
 11569  010BDE  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11570  010BE0  0EC4               	movlw	low STR_94
 11571  010BE2  0101               	movlb	1	; () banked
 11572  010BE4  6F7C               	movwf	UARTstring@data& (0+255),b
 11573  010BE6  ECB3  F0AD         	call	_UARTstring	;wreg free
 11574                           
 11575                           ;StringCommand.c: 259: LCDdisplayFeedback("Bedroom SKR Off");
 11576  010BEA  0EFB               	movlw	high STR_95
 11577  010BEC  0101               	movlb	1	; () banked
 11578  010BEE  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11579  010BF0  0E58               	movlw	low STR_95
 11580  010BF2  0101               	movlb	1	; () banked
 11581  010BF4  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11582  010BF6  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 11583  010BFA  EF28  F092         	goto	l513
 11584  010BFE                     l11442:
 11585                           
 11586                           ;StringCommand.c: 262: else
 11587                           ;StringCommand.c: 263: {
 11588                           ;StringCommand.c: 264: UARTstring("Bedroom Task???");
 11589  010BFE  0EFA               	movlw	high STR_96
 11590  010C00  0101               	movlb	1	; () banked
 11591  010C02  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11592  010C04  0EA8               	movlw	low STR_96
 11593  010C06  0101               	movlb	1	; () banked
 11594  010C08  6F7C               	movwf	UARTstring@data& (0+255),b
 11595  010C0A  ECB3  F0AD         	call	_UARTstring	;wreg free
 11596                           
 11597                           ;StringCommand.c: 265: LCDdisplayFeedback("Bedroom Task???");
 11598  010C0E  0EFA               	movlw	high STR_96
 11599  010C10  0101               	movlb	1	; () banked
 11600  010C12  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11601  010C14  0EA8               	movlw	low STR_96
 11602  010C16  0101               	movlb	1	; () banked
 11603  010C18  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11604  010C1A  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 11605  010C1E  EF28  F092         	goto	l513
 11606  010C22                     l11444:
 11607                           
 11608                           ;StringCommand.c: 268: else
 11609                           ;StringCommand.c: 269: {
 11610                           ;StringCommand.c: 270: UARTstring("Bedroom Help Menu\r\n\n");
 11611  010C22  0EF8               	movlw	high STR_98
 11612  010C24  0101               	movlb	1	; () banked
 11613  010C26  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11614  010C28  0E11               	movlw	low STR_98
 11615  010C2A  0101               	movlb	1	; () banked
 11616  010C2C  6F7C               	movwf	UARTstring@data& (0+255),b
 11617  010C2E  ECB3  F0AD         	call	_UARTstring	;wreg free
 11618                           
 11619                           ;StringCommand.c: 271: UARTstring("Devices:\r\n");
 11620  010C32  0EFD               	movlw	high STR_42
 11621  010C34  0101               	movlb	1	; () banked
 11622  010C36  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11623  010C38  0EF1               	movlw	low STR_42
 11624  010C3A  0101               	movlb	1	; () banked
 11625  010C3C  6F7C               	movwf	UARTstring@data& (0+255),b
 11626  010C3E  ECB3  F0AD         	call	_UARTstring	;wreg free
 11627                           
 11628                           ;StringCommand.c: 272: UARTstring("light\r\n");
 11629  010C42  0EFF               	movlw	high STR_67
 11630  010C44  0101               	movlb	1	; () banked
 11631  010C46  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11632  010C48  0E1F               	movlw	low STR_67
 11633  010C4A  0101               	movlb	1	; () banked
 11634  010C4C  6F7C               	movwf	UARTstring@data& (0+255),b
 11635  010C4E  ECB3  F0AD         	call	_UARTstring	;wreg free
 11636                           
 11637                           ;StringCommand.c: 273: UARTstring("fan\r\n");
 11638  010C52  0EFF               	movlw	high STR_101
 11639  010C54  0101               	movlb	1	; () banked
 11640  010C56  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11641  010C58  0E96               	movlw	low STR_101
 11642  010C5A  0101               	movlb	1	; () banked
 11643  010C5C  6F7C               	movwf	UARTstring@data& (0+255),b
 11644  010C5E  ECB3  F0AD         	call	_UARTstring	;wreg free
 11645                           
 11646                           ;StringCommand.c: 274: UARTstring("shaker\r\n\n");
 11647  010C62  0EFE               	movlw	high STR_102
 11648  010C64  0101               	movlb	1	; () banked
 11649  010C66  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11650  010C68  0E33               	movlw	low STR_102
 11651  010C6A  0101               	movlb	1	; () banked
 11652  010C6C  6F7C               	movwf	UARTstring@data& (0+255),b
 11653  010C6E  ECB3  F0AD         	call	_UARTstring	;wreg free
 11654                           
 11655                           ;StringCommand.c: 275: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 11656  010C72  0EF1               	movlw	high STR_45
 11657  010C74  0101               	movlb	1	; () banked
 11658  010C76  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11659  010C78  0E5F               	movlw	low STR_45
 11660  010C7A  0101               	movlb	1	; () banked
 11661  010C7C  6F7C               	movwf	UARTstring@data& (0+255),b
 11662  010C7E  ECB3  F0AD         	call	_UARTstring	;wreg free
 11663                           
 11664                           ;StringCommand.c: 276: UARTstring("i.e. Bedroom fan = On\r\n");
 11665  010C82  0EF7               	movlw	high STR_104
 11666  010C84  0101               	movlb	1	; () banked
 11667  010C86  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11668  010C88  0E72               	movlw	low STR_104
 11669  010C8A  0101               	movlb	1	; () banked
 11670  010C8C  6F7C               	movwf	UARTstring@data& (0+255),b
 11671  010C8E  ECB3  F0AD         	call	_UARTstring	;wreg free
 11672                           
 11673                           ;StringCommand.c: 277: LCDdisplayFeedback("Bedroom Help???");
 11674  010C92  0EFA               	movlw	high STR_105
 11675  010C94  0101               	movlb	1	; () banked
 11676  010C96  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11677  010C98  0EB8               	movlw	low STR_105
 11678  010C9A  0101               	movlb	1	; () banked
 11679  010C9C  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11680  010C9E  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 11681                           
 11682                           ;StringCommand.c: 278: LCD_Scroll("Bedroom Menu");
 11683  010CA2  0EFD               	movlw	high STR_106
 11684  010CA4  0101               	movlb	1	; () banked
 11685  010CA6  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11686  010CA8  0E9B               	movlw	low STR_106
 11687  010CAA  0101               	movlb	1	; () banked
 11688  010CAC  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 11689  010CAE  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 11690                           
 11691                           ;StringCommand.c: 279: LCD_Scroll("Devices:");
 11692  010CB2  0EFE               	movlw	high STR_48
 11693  010CB4  0101               	movlb	1	; () banked
 11694  010CB6  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11695  010CB8  0EB4               	movlw	low STR_48
 11696  010CBA  0101               	movlb	1	; () banked
 11697  010CBC  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 11698  010CBE  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 11699                           
 11700                           ;StringCommand.c: 280: LCD_Scroll("Light");
 11701  010CC2  0EFF               	movlw	high STR_74
 11702  010CC4  0101               	movlb	1	; () banked
 11703  010CC6  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11704  010CC8  0EA8               	movlw	low STR_74
 11705  010CCA  0101               	movlb	1	; () banked
 11706  010CCC  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 11707  010CCE  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 11708                           
 11709                           ;StringCommand.c: 281: LCD_Scroll("Fan");
 11710  010CD2  0EFF               	movlw	high STR_75
 11711  010CD4  0101               	movlb	1	; () banked
 11712  010CD6  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11713  010CD8  0EED               	movlw	low STR_75
 11714  010CDA  0101               	movlb	1	; () banked
 11715  010CDC  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 11716  010CDE  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 11717                           
 11718                           ;StringCommand.c: 282: LCD_Scroll("Shaker");
 11719  010CE2  0EFF               	movlw	high STR_110
 11720  010CE4  0101               	movlb	1	; () banked
 11721  010CE6  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11722  010CE8  0E89               	movlw	low STR_110
 11723  010CEA  0101               	movlb	1	; () banked
 11724  010CEC  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 11725  010CEE  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 11726  010CF2  EF28  F092         	goto	l513
 11727  010CF6                     l11456:
 11728                           
 11729                           ;StringCommand.c: 286: else if (StringContains(Input, "color") || StringContains(Input, 
      +                          "white") || StringContains(Input, "christmas"))
 11730  010CF6  0101               	movlb	1	; () banked
 11731  010CF8  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 11732  010CFC  0101               	movlb	1	; () banked
 11733  010CFE  C1C0  F17B         	movff	Command@Input,StringContains@This
 11734  010D02  0EFF               	movlw	high STR_111
 11735  010D04  0101               	movlb	1	; () banked
 11736  010D06  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 11737  010D08  0EA2               	movlw	low STR_111
 11738  010D0A  0101               	movlb	1	; () banked
 11739  010D0C  6F7D               	movwf	StringContains@That& (0+255),b
 11740  010D0E  ECC9  F0B0         	call	_StringContains	;wreg free
 11741  010D12  0900               	iorlw	0
 11742  010D14  A4D8               	btfss	status,2,c
 11743  010D16  D022               	goto	l11462
 11744  010D18  0101               	movlb	1	; () banked
 11745  010D1A  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 11746  010D1E  0101               	movlb	1	; () banked
 11747  010D20  C1C0  F17B         	movff	Command@Input,StringContains@This
 11748  010D24  0EFF               	movlw	high STR_112
 11749  010D26  0101               	movlb	1	; () banked
 11750  010D28  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 11751  010D2A  0E9C               	movlw	low STR_112
 11752  010D2C  0101               	movlb	1	; () banked
 11753  010D2E  6F7D               	movwf	StringContains@That& (0+255),b
 11754  010D30  ECC9  F0B0         	call	_StringContains	;wreg free
 11755  010D34  0900               	iorlw	0
 11756  010D36  A4D8               	btfss	status,2,c
 11757  010D38  D011               	goto	l11462
 11758  010D3A  0101               	movlb	1	; () banked
 11759  010D3C  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 11760  010D40  0101               	movlb	1	; () banked
 11761  010D42  C1C0  F17B         	movff	Command@Input,StringContains@This
 11762  010D46  0EFE               	movlw	high STR_113
 11763  010D48  0101               	movlb	1	; () banked
 11764  010D4A  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 11765  010D4C  0E79               	movlw	low STR_113
 11766  010D4E  0101               	movlb	1	; () banked
 11767  010D50  6F7D               	movwf	StringContains@That& (0+255),b
 11768  010D52  ECC9  F0B0         	call	_StringContains	;wreg free
 11769  010D56  0900               	iorlw	0
 11770  010D58  B4D8               	btfsc	status,2,c
 11771  010D5A  D1D4               	goto	l11518
 11772  010D5C                     l11462:
 11773                           
 11774                           ;StringCommand.c: 287: {
 11775                           ;StringCommand.c: 288: if (!StringContains(Input, "?"))
 11776  010D5C  0101               	movlb	1	; () banked
 11777  010D5E  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 11778  010D62  0101               	movlb	1	; () banked
 11779  010D64  C1C0  F17B         	movff	Command@Input,StringContains@This
 11780  010D68  0EFA               	movlw	high (STR_64+14)
 11781  010D6A  0101               	movlb	1	; () banked
 11782  010D6C  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 11783  010D6E  0EA6               	movlw	low (STR_64+14)
 11784  010D70  0101               	movlb	1	; () banked
 11785  010D72  6F7D               	movwf	StringContains@That& (0+255),b
 11786  010D74  ECC9  F0B0         	call	_StringContains	;wreg free
 11787  010D78  0900               	iorlw	0
 11788  010D7A  A4D8               	btfss	status,2,c
 11789  010D7C  D171               	goto	l11508
 11790                           
 11791                           ;StringCommand.c: 289: {
 11792                           ;StringCommand.c: 290: if (StringContains(Input, "color") && StringContains(Input, "="))
 11793  010D7E  0101               	movlb	1	; () banked
 11794  010D80  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 11795  010D84  0101               	movlb	1	; () banked
 11796  010D86  C1C0  F17B         	movff	Command@Input,StringContains@This
 11797  010D8A  0EFF               	movlw	high STR_111
 11798  010D8C  0101               	movlb	1	; () banked
 11799  010D8E  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 11800  010D90  0EA2               	movlw	low STR_111
 11801  010D92  0101               	movlb	1	; () banked
 11802  010D94  6F7D               	movwf	StringContains@That& (0+255),b
 11803  010D96  ECC9  F0B0         	call	_StringContains	;wreg free
 11804  010D9A  0900               	iorlw	0
 11805  010D9C  B4D8               	btfsc	status,2,c
 11806  010D9E  D064               	goto	l11478
 11807  010DA0  0101               	movlb	1	; () banked
 11808  010DA2  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 11809  010DA6  0101               	movlb	1	; () banked
 11810  010DA8  C1C0  F17B         	movff	Command@Input,StringContains@This
 11811  010DAC  0EFD               	movlw	high (STR_182+11)
 11812  010DAE  0101               	movlb	1	; () banked
 11813  010DB0  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 11814  010DB2  0E58               	movlw	low (STR_182+11)
 11815  010DB4  0101               	movlb	1	; () banked
 11816  010DB6  6F7D               	movwf	StringContains@That& (0+255),b
 11817  010DB8  ECC9  F0B0         	call	_StringContains	;wreg free
 11818  010DBC  0900               	iorlw	0
 11819  010DBE  B4D8               	btfsc	status,2,c
 11820  010DC0  D053               	goto	l11478
 11821                           
 11822                           ;StringCommand.c: 291: {
 11823                           ;StringCommand.c: 292: INTCONbits.GIE = 0;
 11824  010DC2  9EF2               	bcf	intcon,7,c	;volatile
 11825                           
 11826                           ;StringCommand.c: 293: Send_Config1(0b00000001, TXdataF);
 11827  010DC4  0EF0               	movlw	high _TXdataF
 11828  010DC6  0101               	movlb	1	; () banked
 11829  010DC8  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 11830  010DCA  0EC5               	movlw	low _TXdataF
 11831  010DCC  0101               	movlb	1	; () banked
 11832  010DCE  6F86               	movwf	Send_Config1@data& (0+255),b
 11833  010DD0  0E01               	movlw	1
 11834  010DD2  EC33  F0A8         	call	_Send_Config1
 11835                           
 11836                           ;StringCommand.c: 294: Send_Config1(0b00000001, TXdataF);
 11837  010DD6  0EF0               	movlw	high _TXdataF
 11838  010DD8  0101               	movlb	1	; () banked
 11839  010DDA  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 11840  010DDC  0EC5               	movlw	low _TXdataF
 11841  010DDE  0101               	movlb	1	; () banked
 11842  010DE0  6F86               	movwf	Send_Config1@data& (0+255),b
 11843  010DE2  0E01               	movlw	1
 11844  010DE4  EC33  F0A8         	call	_Send_Config1
 11845                           
 11846                           ;StringCommand.c: 295: Send_Config1(0b00000001, TXdataF);
 11847  010DE8  0EF0               	movlw	high _TXdataF
 11848  010DEA  0101               	movlb	1	; () banked
 11849  010DEC  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 11850  010DEE  0EC5               	movlw	low _TXdataF
 11851  010DF0  0101               	movlb	1	; () banked
 11852  010DF2  6F86               	movwf	Send_Config1@data& (0+255),b
 11853  010DF4  0E01               	movlw	1
 11854  010DF6  EC33  F0A8         	call	_Send_Config1
 11855                           
 11856                           ;StringCommand.c: 296: Send_Config1(0b00000001, TXdataF);
 11857  010DFA  0EF0               	movlw	high _TXdataF
 11858  010DFC  0101               	movlb	1	; () banked
 11859  010DFE  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 11860  010E00  0EC5               	movlw	low _TXdataF
 11861  010E02  0101               	movlb	1	; () banked
 11862  010E04  6F86               	movwf	Send_Config1@data& (0+255),b
 11863  010E06  0E01               	movlw	1
 11864  010E08  EC33  F0A8         	call	_Send_Config1
 11865                           
 11866                           ;StringCommand.c: 297: Send_Config1(0b00000001, TXdataF);
 11867  010E0C  0EF0               	movlw	high _TXdataF
 11868  010E0E  0101               	movlb	1	; () banked
 11869  010E10  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 11870  010E12  0EC5               	movlw	low _TXdataF
 11871  010E14  0101               	movlb	1	; () banked
 11872  010E16  6F86               	movwf	Send_Config1@data& (0+255),b
 11873  010E18  0E01               	movlw	1
 11874  010E1A  EC33  F0A8         	call	_Send_Config1
 11875                           
 11876                           ;StringCommand.c: 298: Send_Config1(0b00000001, TXdataF);
 11877  010E1E  0EF0               	movlw	high _TXdataF
 11878  010E20  0101               	movlb	1	; () banked
 11879  010E22  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 11880  010E24  0EC5               	movlw	low _TXdataF
 11881  010E26  0101               	movlb	1	; () banked
 11882  010E28  6F86               	movwf	Send_Config1@data& (0+255),b
 11883  010E2A  0E01               	movlw	1
 11884  010E2C  EC33  F0A8         	call	_Send_Config1
 11885                           
 11886                           ;StringCommand.c: 299: Send_Config1(0b00000001, TXdataF);
 11887  010E30  0EF0               	movlw	high _TXdataF
 11888  010E32  0101               	movlb	1	; () banked
 11889  010E34  6F87               	movwf	(Send_Config1@data+1)& (0+255),b
 11890  010E36  0EC5               	movlw	low _TXdataF
 11891  010E38  0101               	movlb	1	; () banked
 11892  010E3A  6F86               	movwf	Send_Config1@data& (0+255),b
 11893  010E3C  0E01               	movlw	1
 11894  010E3E  EC33  F0A8         	call	_Send_Config1
 11895                           
 11896                           ;StringCommand.c: 300: INTCONbits.GIE = 1;
 11897  010E42  8EF2               	bsf	intcon,7,c	;volatile
 11898                           
 11899                           ;StringCommand.c: 301: UARTstring("Christmas Tree Colored Lights Toggled");
 11900  010E44  0EF3               	movlw	high STR_117
 11901  010E46  0101               	movlb	1	; () banked
 11902  010E48  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 11903  010E4A  0E6E               	movlw	low STR_117
 11904  010E4C  0101               	movlb	1	; () banked
 11905  010E4E  6F7C               	movwf	UARTstring@data& (0+255),b
 11906  010E50  ECB3  F0AD         	call	_UARTstring	;wreg free
 11907                           
 11908                           ;StringCommand.c: 302: LCDdisplayFeedback("XMAS Color TGLD");
 11909  010E54  0EFA               	movlw	high STR_118
 11910  010E56  0101               	movlb	1	; () banked
 11911  010E58  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11912  010E5A  0EF8               	movlw	low STR_118
 11913  010E5C  0101               	movlb	1	; () banked
 11914  010E5E  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11915  010E60  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 11916                           
 11917                           ;StringCommand.c: 303: }
 11918  010E64  EF28  F092         	goto	l513
 11919  010E68                     l11478:
 11920                           
 11921                           ;StringCommand.c: 304: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=on"))
 11922  010E68  0101               	movlb	1	; () banked
 11923  010E6A  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 11924  010E6E  0101               	movlb	1	; () banked
 11925  010E70  C1C0  F17B         	movff	Command@Input,StringContains@This
 11926  010E74  0EFF               	movlw	high STR_112
 11927  010E76  0101               	movlb	1	; () banked
 11928  010E78  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 11929  010E7A  0E9C               	movlw	low STR_112
 11930  010E7C  0101               	movlb	1	; () banked
 11931  010E7E  6F7D               	movwf	StringContains@That& (0+255),b
 11932  010E80  ECC9  F0B0         	call	_StringContains	;wreg free
 11933  010E84  0900               	iorlw	0
 11934  010E86  B4D8               	btfsc	status,2,c
 11935  010E88  D064               	goto	l11492
 11936  010E8A  0101               	movlb	1	; () banked
 11937  010E8C  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 11938  010E90  0101               	movlb	1	; () banked
 11939  010E92  C1C0  F17B         	movff	Command@Input,StringContains@This
 11940  010E96  0EFF               	movlw	high (STR_24+4)
 11941  010E98  0101               	movlb	1	; () banked
 11942  010E9A  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 11943  010E9C  0E43               	movlw	low (STR_24+4)
 11944  010E9E  0101               	movlb	1	; () banked
 11945  010EA0  6F7D               	movwf	StringContains@That& (0+255),b
 11946  010EA2  ECC9  F0B0         	call	_StringContains	;wreg free
 11947  010EA6  0900               	iorlw	0
 11948  010EA8  B4D8               	btfsc	status,2,c
 11949  010EAA  D053               	goto	l11492
 11950                           
 11951                           ;StringCommand.c: 305: {
 11952                           ;StringCommand.c: 306: INTCONbits.GIE = 0;
 11953  010EAC  9EF2               	bcf	intcon,7,c	;volatile
 11954                           
 11955                           ;StringCommand.c: 307: Send_Config2(0b00000001, Aux2ON);
 11956  010EAE  0EF0               	movlw	high _Aux2ON
 11957  010EB0  0101               	movlb	1	; () banked
 11958  010EB2  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11959  010EB4  0E1D               	movlw	low _Aux2ON
 11960  010EB6  0101               	movlb	1	; () banked
 11961  010EB8  6F86               	movwf	Send_Config2@data& (0+255),b
 11962  010EBA  0E01               	movlw	1
 11963  010EBC  ECFF  F0AF         	call	_Send_Config2
 11964                           
 11965                           ;StringCommand.c: 308: Send_Config2(0b00000001, Aux2ON);
 11966  010EC0  0EF0               	movlw	high _Aux2ON
 11967  010EC2  0101               	movlb	1	; () banked
 11968  010EC4  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11969  010EC6  0E1D               	movlw	low _Aux2ON
 11970  010EC8  0101               	movlb	1	; () banked
 11971  010ECA  6F86               	movwf	Send_Config2@data& (0+255),b
 11972  010ECC  0E01               	movlw	1
 11973  010ECE  ECFF  F0AF         	call	_Send_Config2
 11974                           
 11975                           ;StringCommand.c: 309: Send_Config2(0b00000001, Aux2ON);
 11976  010ED2  0EF0               	movlw	high _Aux2ON
 11977  010ED4  0101               	movlb	1	; () banked
 11978  010ED6  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11979  010ED8  0E1D               	movlw	low _Aux2ON
 11980  010EDA  0101               	movlb	1	; () banked
 11981  010EDC  6F86               	movwf	Send_Config2@data& (0+255),b
 11982  010EDE  0E01               	movlw	1
 11983  010EE0  ECFF  F0AF         	call	_Send_Config2
 11984                           
 11985                           ;StringCommand.c: 310: Send_Config2(0b00000001, Aux2ON);
 11986  010EE4  0EF0               	movlw	high _Aux2ON
 11987  010EE6  0101               	movlb	1	; () banked
 11988  010EE8  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11989  010EEA  0E1D               	movlw	low _Aux2ON
 11990  010EEC  0101               	movlb	1	; () banked
 11991  010EEE  6F86               	movwf	Send_Config2@data& (0+255),b
 11992  010EF0  0E01               	movlw	1
 11993  010EF2  ECFF  F0AF         	call	_Send_Config2
 11994                           
 11995                           ;StringCommand.c: 311: Send_Config2(0b00000001, Aux2ON);
 11996  010EF6  0EF0               	movlw	high _Aux2ON
 11997  010EF8  0101               	movlb	1	; () banked
 11998  010EFA  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 11999  010EFC  0E1D               	movlw	low _Aux2ON
 12000  010EFE  0101               	movlb	1	; () banked
 12001  010F00  6F86               	movwf	Send_Config2@data& (0+255),b
 12002  010F02  0E01               	movlw	1
 12003  010F04  ECFF  F0AF         	call	_Send_Config2
 12004                           
 12005                           ;StringCommand.c: 312: Send_Config2(0b00000001, Aux2ON);
 12006  010F08  0EF0               	movlw	high _Aux2ON
 12007  010F0A  0101               	movlb	1	; () banked
 12008  010F0C  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 12009  010F0E  0E1D               	movlw	low _Aux2ON
 12010  010F10  0101               	movlb	1	; () banked
 12011  010F12  6F86               	movwf	Send_Config2@data& (0+255),b
 12012  010F14  0E01               	movlw	1
 12013  010F16  ECFF  F0AF         	call	_Send_Config2
 12014                           
 12015                           ;StringCommand.c: 313: Send_Config2(0b00000001, Aux2ON);
 12016  010F1A  0EF0               	movlw	high _Aux2ON
 12017  010F1C  0101               	movlb	1	; () banked
 12018  010F1E  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 12019  010F20  0E1D               	movlw	low _Aux2ON
 12020  010F22  0101               	movlb	1	; () banked
 12021  010F24  6F86               	movwf	Send_Config2@data& (0+255),b
 12022  010F26  0E01               	movlw	1
 12023  010F28  ECFF  F0AF         	call	_Send_Config2
 12024                           
 12025                           ;StringCommand.c: 314: INTCONbits.GIE = 1;
 12026  010F2C  8EF2               	bsf	intcon,7,c	;volatile
 12027                           
 12028                           ;StringCommand.c: 315: UARTstring("Christmas Tree White Lights On");
 12029  010F2E  0EF5               	movlw	high STR_121
 12030  010F30  0101               	movlb	1	; () banked
 12031  010F32  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12032  010F34  0E53               	movlw	low STR_121
 12033  010F36  0101               	movlb	1	; () banked
 12034  010F38  6F7C               	movwf	UARTstring@data& (0+255),b
 12035  010F3A  ECB3  F0AD         	call	_UARTstring	;wreg free
 12036                           
 12037                           ;StringCommand.c: 316: LCDdisplayFeedback("XMAS White On");
 12038  010F3E  0EFC               	movlw	high STR_122
 12039  010F40  0101               	movlb	1	; () banked
 12040  010F42  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12041  010F44  0EC4               	movlw	low STR_122
 12042  010F46  0101               	movlb	1	; () banked
 12043  010F48  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12044  010F4A  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 12045                           
 12046                           ;StringCommand.c: 317: }
 12047  010F4E  EF28  F092         	goto	l513
 12048  010F52                     l11492:
 12049                           
 12050                           ;StringCommand.c: 318: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=off"))
 12051  010F52  0101               	movlb	1	; () banked
 12052  010F54  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 12053  010F58  0101               	movlb	1	; () banked
 12054  010F5A  C1C0  F17B         	movff	Command@Input,StringContains@This
 12055  010F5E  0EFF               	movlw	high STR_112
 12056  010F60  0101               	movlb	1	; () banked
 12057  010F62  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 12058  010F64  0E9C               	movlw	low STR_112
 12059  010F66  0101               	movlb	1	; () banked
 12060  010F68  6F7D               	movwf	StringContains@That& (0+255),b
 12061  010F6A  ECC9  F0B0         	call	_StringContains	;wreg free
 12062  010F6E  0900               	iorlw	0
 12063  010F70  B4D8               	btfsc	status,2,c
 12064  010F72  D064               	goto	l11506
 12065  010F74  0101               	movlb	1	; () banked
 12066  010F76  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 12067  010F7A  0101               	movlb	1	; () banked
 12068  010F7C  C1C0  F17B         	movff	Command@Input,StringContains@This
 12069  010F80  0EFE               	movlw	high (STR_27+4)
 12070  010F82  0101               	movlb	1	; () banked
 12071  010F84  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 12072  010F86  0EDC               	movlw	low (STR_27+4)
 12073  010F88  0101               	movlb	1	; () banked
 12074  010F8A  6F7D               	movwf	StringContains@That& (0+255),b
 12075  010F8C  ECC9  F0B0         	call	_StringContains	;wreg free
 12076  010F90  0900               	iorlw	0
 12077  010F92  B4D8               	btfsc	status,2,c
 12078  010F94  D053               	goto	l11506
 12079                           
 12080                           ;StringCommand.c: 319: {
 12081                           ;StringCommand.c: 320: INTCONbits.GIE = 0;
 12082  010F96  9EF2               	bcf	intcon,7,c	;volatile
 12083                           
 12084                           ;StringCommand.c: 321: Send_Config2(0b00000001, Aux2OFF);
 12085  010F98  0EF0               	movlw	high _Aux2OFF
 12086  010F9A  0101               	movlb	1	; () banked
 12087  010F9C  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 12088  010F9E  0E0D               	movlw	low _Aux2OFF
 12089  010FA0  0101               	movlb	1	; () banked
 12090  010FA2  6F86               	movwf	Send_Config2@data& (0+255),b
 12091  010FA4  0E01               	movlw	1
 12092  010FA6  ECFF  F0AF         	call	_Send_Config2
 12093                           
 12094                           ;StringCommand.c: 322: Send_Config2(0b00000001, Aux2OFF);
 12095  010FAA  0EF0               	movlw	high _Aux2OFF
 12096  010FAC  0101               	movlb	1	; () banked
 12097  010FAE  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 12098  010FB0  0E0D               	movlw	low _Aux2OFF
 12099  010FB2  0101               	movlb	1	; () banked
 12100  010FB4  6F86               	movwf	Send_Config2@data& (0+255),b
 12101  010FB6  0E01               	movlw	1
 12102  010FB8  ECFF  F0AF         	call	_Send_Config2
 12103                           
 12104                           ;StringCommand.c: 323: Send_Config2(0b00000001, Aux2OFF);
 12105  010FBC  0EF0               	movlw	high _Aux2OFF
 12106  010FBE  0101               	movlb	1	; () banked
 12107  010FC0  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 12108  010FC2  0E0D               	movlw	low _Aux2OFF
 12109  010FC4  0101               	movlb	1	; () banked
 12110  010FC6  6F86               	movwf	Send_Config2@data& (0+255),b
 12111  010FC8  0E01               	movlw	1
 12112  010FCA  ECFF  F0AF         	call	_Send_Config2
 12113                           
 12114                           ;StringCommand.c: 324: Send_Config2(0b00000001, Aux2OFF);
 12115  010FCE  0EF0               	movlw	high _Aux2OFF
 12116  010FD0  0101               	movlb	1	; () banked
 12117  010FD2  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 12118  010FD4  0E0D               	movlw	low _Aux2OFF
 12119  010FD6  0101               	movlb	1	; () banked
 12120  010FD8  6F86               	movwf	Send_Config2@data& (0+255),b
 12121  010FDA  0E01               	movlw	1
 12122  010FDC  ECFF  F0AF         	call	_Send_Config2
 12123                           
 12124                           ;StringCommand.c: 325: Send_Config2(0b00000001, Aux2OFF);
 12125  010FE0  0EF0               	movlw	high _Aux2OFF
 12126  010FE2  0101               	movlb	1	; () banked
 12127  010FE4  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 12128  010FE6  0E0D               	movlw	low _Aux2OFF
 12129  010FE8  0101               	movlb	1	; () banked
 12130  010FEA  6F86               	movwf	Send_Config2@data& (0+255),b
 12131  010FEC  0E01               	movlw	1
 12132  010FEE  ECFF  F0AF         	call	_Send_Config2
 12133                           
 12134                           ;StringCommand.c: 326: Send_Config2(0b00000001, Aux2OFF);
 12135  010FF2  0EF0               	movlw	high _Aux2OFF
 12136  010FF4  0101               	movlb	1	; () banked
 12137  010FF6  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 12138  010FF8  0E0D               	movlw	low _Aux2OFF
 12139  010FFA  0101               	movlb	1	; () banked
 12140  010FFC  6F86               	movwf	Send_Config2@data& (0+255),b
 12141  010FFE  0E01               	movlw	1
 12142  011000  ECFF  F0AF         	call	_Send_Config2
 12143                           
 12144                           ;StringCommand.c: 327: Send_Config2(0b00000001, Aux2OFF);
 12145  011004  0EF0               	movlw	high _Aux2OFF
 12146  011006  0101               	movlb	1	; () banked
 12147  011008  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 12148  01100A  0E0D               	movlw	low _Aux2OFF
 12149  01100C  0101               	movlb	1	; () banked
 12150  01100E  6F86               	movwf	Send_Config2@data& (0+255),b
 12151  011010  0E01               	movlw	1
 12152  011012  ECFF  F0AF         	call	_Send_Config2
 12153                           
 12154                           ;StringCommand.c: 328: INTCONbits.GIE = 1;
 12155  011016  8EF2               	bsf	intcon,7,c	;volatile
 12156                           
 12157                           ;StringCommand.c: 329: UARTstring("Christmas Tree White Lights Off");
 12158  011018  0EF5               	movlw	high STR_125
 12159  01101A  0101               	movlb	1	; () banked
 12160  01101C  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12161  01101E  0E33               	movlw	low STR_125
 12162  011020  0101               	movlb	1	; () banked
 12163  011022  6F7C               	movwf	UARTstring@data& (0+255),b
 12164  011024  ECB3  F0AD         	call	_UARTstring	;wreg free
 12165                           
 12166                           ;StringCommand.c: 330: LCDdisplayFeedback("XMAS White Off");
 12167  011028  0EFC               	movlw	high STR_126
 12168  01102A  0101               	movlb	1	; () banked
 12169  01102C  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12170  01102E  0E04               	movlw	low STR_126
 12171  011030  0101               	movlb	1	; () banked
 12172  011032  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12173  011034  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 12174                           
 12175                           ;StringCommand.c: 331: }
 12176  011038  EF28  F092         	goto	l513
 12177  01103C                     l11506:
 12178                           
 12179                           ;StringCommand.c: 332: else
 12180                           ;StringCommand.c: 333: {
 12181                           ;StringCommand.c: 334: UARTstring("Christmas What???");
 12182  01103C  0EF8               	movlw	high STR_127
 12183  01103E  0101               	movlb	1	; () banked
 12184  011040  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12185  011042  0EFC               	movlw	low STR_127
 12186  011044  0101               	movlb	1	; () banked
 12187  011046  6F7C               	movwf	UARTstring@data& (0+255),b
 12188  011048  ECB3  F0AD         	call	_UARTstring	;wreg free
 12189                           
 12190                           ;StringCommand.c: 335: LCDdisplayFeedback("XMAS What???");
 12191  01104C  0EFD               	movlw	high STR_128
 12192  01104E  0101               	movlb	1	; () banked
 12193  011050  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12194  011052  0E5A               	movlw	low STR_128
 12195  011054  0101               	movlb	1	; () banked
 12196  011056  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12197  011058  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 12198  01105C  EF28  F092         	goto	l513
 12199  011060                     l11508:
 12200                           
 12201                           ;StringCommand.c: 338: else
 12202                           ;StringCommand.c: 339: {
 12203                           ;StringCommand.c: 340: UARTstring("Christmas tree Help Menu\r\n\n");
 12204  011060  0EF5               	movlw	high STR_129
 12205  011062  0101               	movlb	1	; () banked
 12206  011064  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12207  011066  0EE7               	movlw	low STR_129
 12208  011068  0101               	movlb	1	; () banked
 12209  01106A  6F7C               	movwf	UARTstring@data& (0+255),b
 12210  01106C  ECB3  F0AD         	call	_UARTstring	;wreg free
 12211                           
 12212                           ;StringCommand.c: 341: UARTstring("Devices:\r\n");
 12213  011070  0EFD               	movlw	high STR_42
 12214  011072  0101               	movlb	1	; () banked
 12215  011074  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12216  011076  0EF1               	movlw	low STR_42
 12217  011078  0101               	movlb	1	; () banked
 12218  01107A  6F7C               	movwf	UARTstring@data& (0+255),b
 12219  01107C  ECB3  F0AD         	call	_UARTstring	;wreg free
 12220                           
 12221                           ;StringCommand.c: 342: UARTstring("white lights\r\n");
 12222  011080  0EFB               	movlw	high STR_131
 12223  011082  0101               	movlb	1	; () banked
 12224  011084  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12225  011086  0ED7               	movlw	low STR_131
 12226  011088  0101               	movlb	1	; () banked
 12227  01108A  6F7C               	movwf	UARTstring@data& (0+255),b
 12228  01108C  ECB3  F0AD         	call	_UARTstring	;wreg free
 12229                           
 12230                           ;StringCommand.c: 343: UARTstring("colored lights\r\n\n");
 12231  011090  0EF8               	movlw	high STR_132
 12232  011092  0101               	movlb	1	; () banked
 12233  011094  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12234  011096  0EEA               	movlw	low STR_132
 12235  011098  0101               	movlb	1	; () banked
 12236  01109A  6F7C               	movwf	UARTstring@data& (0+255),b
 12237  01109C  ECB3  F0AD         	call	_UARTstring	;wreg free
 12238                           
 12239                           ;StringCommand.c: 344: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 12240  0110A0  0EF1               	movlw	high STR_45
 12241  0110A2  0101               	movlb	1	; () banked
 12242  0110A4  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12243  0110A6  0E5F               	movlw	low STR_45
 12244  0110A8  0101               	movlb	1	; () banked
 12245  0110AA  6F7C               	movwf	UARTstring@data& (0+255),b
 12246  0110AC  ECB3  F0AD         	call	_UARTstring	;wreg free
 12247                           
 12248                           ;StringCommand.c: 345: UARTstring("i.e. Christmas Colored lights = On\r\n");
 12249  0110B0  0EF3               	movlw	high STR_134
 12250  0110B2  0101               	movlb	1	; () banked
 12251  0110B4  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12252  0110B6  0EBA               	movlw	low STR_134
 12253  0110B8  0101               	movlb	1	; () banked
 12254  0110BA  6F7C               	movwf	UARTstring@data& (0+255),b
 12255  0110BC  ECB3  F0AD         	call	_UARTstring	;wreg free
 12256                           
 12257                           ;StringCommand.c: 346: LCD_Scroll("XMAS Menu");
 12258  0110C0  0EFE               	movlw	high STR_135
 12259  0110C2  0101               	movlb	1	; () banked
 12260  0110C4  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12261  0110C6  0E83               	movlw	low STR_135
 12262  0110C8  0101               	movlb	1	; () banked
 12263  0110CA  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 12264  0110CC  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 12265                           
 12266                           ;StringCommand.c: 347: LCD_Scroll("Devices:");
 12267  0110D0  0EFE               	movlw	high STR_48
 12268  0110D2  0101               	movlb	1	; () banked
 12269  0110D4  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12270  0110D6  0EB4               	movlw	low STR_48
 12271  0110D8  0101               	movlb	1	; () banked
 12272  0110DA  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 12273  0110DC  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 12274                           
 12275                           ;StringCommand.c: 348: LCD_Scroll("white");
 12276  0110E0  0EFF               	movlw	high STR_112
 12277  0110E2  0101               	movlb	1	; () banked
 12278  0110E4  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12279  0110E6  0E9C               	movlw	low STR_112
 12280  0110E8  0101               	movlb	1	; () banked
 12281  0110EA  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 12282  0110EC  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 12283                           
 12284                           ;StringCommand.c: 349: LCD_Scroll("color");
 12285  0110F0  0EFF               	movlw	high STR_111
 12286  0110F2  0101               	movlb	1	; () banked
 12287  0110F4  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12288  0110F6  0EA2               	movlw	low STR_111
 12289  0110F8  0101               	movlb	1	; () banked
 12290  0110FA  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 12291  0110FC  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 12292  011100  EF28  F092         	goto	l513
 12293  011104                     l11518:
 12294                           
 12295                           ;StringCommand.c: 353: else if (StartsWith(Input, "red"))
 12296  011104  0101               	movlb	1	; () banked
 12297  011106  C1C1  F17C         	movff	Command@Input+1,StartsWith@This+1
 12298  01110A  0101               	movlb	1	; () banked
 12299  01110C  C1C0  F17B         	movff	Command@Input,StartsWith@This
 12300  011110  0EF5               	movlw	high (STR_187+25)
 12301  011112  0101               	movlb	1	; () banked
 12302  011114  6F7E               	movwf	(StartsWith@That+1)& (0+255),b
 12303  011116  0EC6               	movlw	low (STR_187+25)
 12304  011118  0101               	movlb	1	; () banked
 12305  01111A  6F7D               	movwf	StartsWith@That& (0+255),b
 12306  01111C  EC4C  F0AE         	call	_StartsWith	;wreg free
 12307  011120  0900               	iorlw	0
 12308  011122  B4D8               	btfsc	status,2,c
 12309  011124  D131               	goto	l11564
 12310                           
 12311                           ;StringCommand.c: 354: {
 12312                           ;StringCommand.c: 355: if (!StringContains(Input, "?"))
 12313  011126  0101               	movlb	1	; () banked
 12314  011128  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 12315  01112C  0101               	movlb	1	; () banked
 12316  01112E  C1C0  F17B         	movff	Command@Input,StringContains@This
 12317  011132  0EFA               	movlw	high (STR_64+14)
 12318  011134  0101               	movlb	1	; () banked
 12319  011136  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 12320  011138  0EA6               	movlw	low (STR_64+14)
 12321  01113A  0101               	movlb	1	; () banked
 12322  01113C  6F7D               	movwf	StringContains@That& (0+255),b
 12323  01113E  ECC9  F0B0         	call	_StringContains	;wreg free
 12324  011142  0900               	iorlw	0
 12325  011144  A4D8               	btfss	status,2,c
 12326  011146  D0EE               	goto	l11556
 12327                           
 12328                           ;StringCommand.c: 356: {
 12329                           ;StringCommand.c: 357: if (StartsWith(Input, "redled") || StartsWith(Input, "redledbrigh
      +                          tness"))
 12330  011148  0101               	movlb	1	; () banked
 12331  01114A  C1C1  F17C         	movff	Command@Input+1,StartsWith@This+1
 12332  01114E  0101               	movlb	1	; () banked
 12333  011150  C1C0  F17B         	movff	Command@Input,StartsWith@This
 12334  011154  0EFF               	movlw	high STR_141
 12335  011156  0101               	movlb	1	; () banked
 12336  011158  6F7E               	movwf	(StartsWith@That+1)& (0+255),b
 12337  01115A  0E82               	movlw	low STR_141
 12338  01115C  0101               	movlb	1	; () banked
 12339  01115E  6F7D               	movwf	StartsWith@That& (0+255),b
 12340  011160  EC4C  F0AE         	call	_StartsWith	;wreg free
 12341  011164  0900               	iorlw	0
 12342  011166  A4D8               	btfss	status,2,c
 12343  011168  D011               	goto	l11526
 12344  01116A  0101               	movlb	1	; () banked
 12345  01116C  C1C1  F17C         	movff	Command@Input+1,StartsWith@This+1
 12346  011170  0101               	movlb	1	; () banked
 12347  011172  C1C0  F17B         	movff	Command@Input,StartsWith@This
 12348  011176  0EFA               	movlw	high STR_142
 12349  011178  0101               	movlb	1	; () banked
 12350  01117A  6F7E               	movwf	(StartsWith@That+1)& (0+255),b
 12351  01117C  0E45               	movlw	low STR_142
 12352  01117E  0101               	movlb	1	; () banked
 12353  011180  6F7D               	movwf	StartsWith@That& (0+255),b
 12354  011182  EC4C  F0AE         	call	_StartsWith	;wreg free
 12355  011186  0900               	iorlw	0
 12356  011188  B4D8               	btfsc	status,2,c
 12357  01118A  D0BA               	goto	l11554
 12358  01118C                     l11526:
 12359                           
 12360                           ;StringCommand.c: 358: {
 12361                           ;StringCommand.c: 359: if (!StringContains(Input, "="))
 12362  01118C  0101               	movlb	1	; () banked
 12363  01118E  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 12364  011192  0101               	movlb	1	; () banked
 12365  011194  C1C0  F17B         	movff	Command@Input,StringContains@This
 12366  011198  0EFD               	movlw	high (STR_182+11)
 12367  01119A  0101               	movlb	1	; () banked
 12368  01119C  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 12369  01119E  0E58               	movlw	low (STR_182+11)
 12370  0111A0  0101               	movlb	1	; () banked
 12371  0111A2  6F7D               	movwf	StringContains@That& (0+255),b
 12372  0111A4  ECC9  F0B0         	call	_StringContains	;wreg free
 12373  0111A8  0900               	iorlw	0
 12374  0111AA  A4D8               	btfss	status,2,c
 12375  0111AC  D008               	goto	l11530
 12376                           
 12377                           ;StringCommand.c: 360: {
 12378                           ;StringCommand.c: 361: UARTstring("there is no question mark\r\n");
 12379  0111AE  0EF6               	movlw	high STR_144
 12380  0111B0  0101               	movlb	1	; () banked
 12381  0111B2  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12382  0111B4  0E1F               	movlw	low STR_144
 12383  0111B6  0101               	movlb	1	; () banked
 12384  0111B8  6F7C               	movwf	UARTstring@data& (0+255),b
 12385  0111BA  ECB3  F0AD         	call	_UARTstring	;wreg free
 12386  0111BE                     l11530:
 12387                           
 12388                           ;StringCommand.c: 362: }
 12389                           ;StringCommand.c: 363: duty = GetEnteredNumber(Input);
 12390  0111BE  0101               	movlb	1	; () banked
 12391  0111C0  C1C1  F182         	movff	Command@Input+1,GetEnteredNumber@This+1
 12392  0111C4  0101               	movlb	1	; () banked
 12393  0111C6  C1C0  F181         	movff	Command@Input,GetEnteredNumber@This
 12394  0111CA  EC38  F0A2         	call	_GetEnteredNumber	;wreg free
 12395  0111CE  0101               	movlb	1	; () banked
 12396  0111D0  C181  F5D4         	movff	?_GetEnteredNumber,Command@duty
 12397  0111D4  0101               	movlb	1	; () banked
 12398  0111D6  C182  F5D5         	movff	?_GetEnteredNumber+1,Command@duty+1
 12399                           
 12400                           ; BSR set to: 1
 12401                           ;StringCommand.c: 364: if (duty == 32001)
 12402  0111DA  0105               	movlb	5	; () banked
 12403  0111DC  05D4               	decf	Command@duty& (0+255),w,b
 12404  0111DE  0E7D               	movlw	125
 12405  0111E0  B4D8               	btfsc	status,2,c
 12406  0111E2  19D5               	xorwf	(Command@duty+1)& (0+255),w,b
 12407  0111E4  A4D8               	btfss	status,2,c
 12408  0111E6  D012               	goto	l11536
 12409                           
 12410                           ; BSR set to: 5
 12411                           ;StringCommand.c: 365: {
 12412                           ;StringCommand.c: 366: UARTstring("Error: No number entered\r\n");
 12413  0111E8  0EF6               	movlw	high STR_145
 12414  0111EA  0101               	movlb	1	; () banked
 12415  0111EC  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12416  0111EE  0E73               	movlw	low STR_145
 12417  0111F0  0101               	movlb	1	; () banked
 12418  0111F2  6F7C               	movwf	UARTstring@data& (0+255),b
 12419  0111F4  ECB3  F0AD         	call	_UARTstring	;wreg free
 12420                           
 12421                           ;StringCommand.c: 367: LCDdisplayFeedback("ERR: no number");
 12422  0111F8  0EFC               	movlw	high STR_146
 12423  0111FA  0101               	movlb	1	; () banked
 12424  0111FC  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12425  0111FE  0E7C               	movlw	low STR_146
 12426  011200  0101               	movlb	1	; () banked
 12427  011202  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12428  011204  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 12429                           
 12430                           ;StringCommand.c: 368: }
 12431  011208  EF28  F092         	goto	l513
 12432  01120C                     l11536:
 12433                           
 12434                           ;StringCommand.c: 369: else if (duty > 100)
 12435  01120C  0105               	movlb	5	; () banked
 12436  01120E  51D5               	movf	(Command@duty+1)& (0+255),w,b
 12437  011210  0A80               	xorlw	128
 12438  011212  0F80               	addlw	-128
 12439  011214  0E65               	movlw	101
 12440  011216  B4D8               	btfsc	status,2,c
 12441  011218  5DD4               	subwf	Command@duty& (0+255),w,b
 12442  01121A  A0D8               	btfss	status,0,c
 12443  01121C  D012               	goto	l11540
 12444                           
 12445                           ; BSR set to: 5
 12446                           ;StringCommand.c: 370: {
 12447                           ;StringCommand.c: 371: UARTstring("Invalid Dutycycle: Greater than 100\r\n");
 12448  01121E  0EF3               	movlw	high STR_147
 12449  011220  0101               	movlb	1	; () banked
 12450  011222  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12451  011224  0E48               	movlw	low STR_147
 12452  011226  0101               	movlb	1	; () banked
 12453  011228  6F7C               	movwf	UARTstring@data& (0+255),b
 12454  01122A  ECB3  F0AD         	call	_UARTstring	;wreg free
 12455                           
 12456                           ;StringCommand.c: 372: LCDdisplayFeedback("ERR: Duty > 100");
 12457  01122E  0EFA               	movlw	high STR_148
 12458  011230  0101               	movlb	1	; () banked
 12459  011232  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12460  011234  0E88               	movlw	low STR_148
 12461  011236  0101               	movlb	1	; () banked
 12462  011238  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12463  01123A  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 12464                           
 12465                           ;StringCommand.c: 373: }
 12466  01123E  EF28  F092         	goto	l513
 12467  011242                     l11540:
 12468                           
 12469                           ;StringCommand.c: 374: else if (duty < 0)
 12470  011242  0105               	movlb	5	; () banked
 12471  011244  51D5               	movf	(Command@duty+1)& (0+255),w,b
 12472  011246  0A80               	xorlw	128
 12473  011248  6EF3               	movwf	prodl,c
 12474  01124A  0E80               	movlw	128
 12475  01124C  5CF3               	subwf	prodl,w,c
 12476  01124E  0E00               	movlw	0
 12477  011250  B4D8               	btfsc	status,2,c
 12478  011252  5DD4               	subwf	Command@duty& (0+255),w,b
 12479  011254  B0D8               	btfsc	status,0,c
 12480  011256  D012               	goto	l11544
 12481                           
 12482                           ; BSR set to: 5
 12483                           ;StringCommand.c: 375: {
 12484                           ;StringCommand.c: 376: UARTstring("Invalid Dutycycle: Less than 0\r\n");
 12485  011258  0EF4               	movlw	high STR_149
 12486  01125A  0101               	movlb	1	; () banked
 12487  01125C  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12488  01125E  0E90               	movlw	low STR_149
 12489  011260  0101               	movlb	1	; () banked
 12490  011262  6F7C               	movwf	UARTstring@data& (0+255),b
 12491  011264  ECB3  F0AD         	call	_UARTstring	;wreg free
 12492                           
 12493                           ;StringCommand.c: 377: LCDdisplayFeedback("ERR: Duty < 0");
 12494  011268  0EFC               	movlw	high STR_150
 12495  01126A  0101               	movlb	1	; () banked
 12496  01126C  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12497  01126E  0EA8               	movlw	low STR_150
 12498  011270  0101               	movlb	1	; () banked
 12499  011272  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12500  011274  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 12501                           
 12502                           ;StringCommand.c: 378: }
 12503  011278  EF28  F092         	goto	l513
 12504  01127C                     l11544:
 12505                           
 12506                           ;StringCommand.c: 379: else
 12507                           ;StringCommand.c: 380: {
 12508                           ;StringCommand.c: 381: SetDuty(duty);
 12509  01127C  0105               	movlb	5	; () banked
 12510  01127E  51D4               	movf	Command@duty& (0+255),w,b
 12511  011280  ECDE  F0AA         	call	_SetDuty
 12512                           
 12513                           ;StringCommand.c: 382: sprintf(buf, "Dutycycle set to %d\r\n", duty);
 12514  011284  0105               	movlb	5	; () banked
 12515  011286  0E05               	movlw	high Command@buf
 12516  011288  0101               	movlb	1	; () banked
 12517  01128A  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 12518  01128C  0105               	movlb	5	; () banked
 12519  01128E  0E00               	movlw	low Command@buf
 12520  011290  0101               	movlb	1	; () banked
 12521  011292  6F87               	movwf	sprintf@sp& (0+255),b
 12522  011294  0EF7               	movlw	high STR_151
 12523  011296  0101               	movlb	1	; () banked
 12524  011298  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 12525  01129A  0EE5               	movlw	low STR_151
 12526  01129C  0101               	movlb	1	; () banked
 12527  01129E  6F89               	movwf	sprintf@f& (0+255),b
 12528  0112A0  C5D4  F18B         	movff	Command@duty,?_sprintf+4
 12529  0112A4  C5D5  F18C         	movff	Command@duty+1,?_sprintf+5
 12530  0112A8  EC31  F092         	call	_sprintf	;wreg free
 12531                           
 12532                           ;StringCommand.c: 383: UARTstring(buf);
 12533  0112AC  0105               	movlb	5	; () banked
 12534  0112AE  0E05               	movlw	high Command@buf
 12535  0112B0  0101               	movlb	1	; () banked
 12536  0112B2  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12537  0112B4  0105               	movlb	5	; () banked
 12538  0112B6  0E00               	movlw	low Command@buf
 12539  0112B8  0101               	movlb	1	; () banked
 12540  0112BA  6F7C               	movwf	UARTstring@data& (0+255),b
 12541  0112BC  ECB3  F0AD         	call	_UARTstring	;wreg free
 12542                           
 12543                           ;StringCommand.c: 384: sprintf(buf, "Duty set to %d", duty);
 12544  0112C0  0105               	movlb	5	; () banked
 12545  0112C2  0E05               	movlw	high Command@buf
 12546  0112C4  0101               	movlb	1	; () banked
 12547  0112C6  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 12548  0112C8  0105               	movlb	5	; () banked
 12549  0112CA  0E00               	movlw	low Command@buf
 12550  0112CC  0101               	movlb	1	; () banked
 12551  0112CE  6F87               	movwf	sprintf@sp& (0+255),b
 12552  0112D0  0EFB               	movlw	high STR_152
 12553  0112D2  0101               	movlb	1	; () banked
 12554  0112D4  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 12555  0112D6  0EF5               	movlw	low STR_152
 12556  0112D8  0101               	movlb	1	; () banked
 12557  0112DA  6F89               	movwf	sprintf@f& (0+255),b
 12558  0112DC  C5D4  F18B         	movff	Command@duty,?_sprintf+4
 12559  0112E0  C5D5  F18C         	movff	Command@duty+1,?_sprintf+5
 12560  0112E4  EC31  F092         	call	_sprintf	;wreg free
 12561                           
 12562                           ;StringCommand.c: 385: LCDdisplayFeedback(buf);
 12563  0112E8  0105               	movlb	5	; () banked
 12564  0112EA  0E05               	movlw	high Command@buf
 12565  0112EC  0101               	movlb	1	; () banked
 12566  0112EE  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12567  0112F0  0105               	movlb	5	; () banked
 12568  0112F2  0E00               	movlw	low Command@buf
 12569  0112F4  0101               	movlb	1	; () banked
 12570  0112F6  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12571  0112F8  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 12572  0112FC  EF28  F092         	goto	l513
 12573  011300                     l11554:
 12574                           
 12575                           ;StringCommand.c: 388: else
 12576                           ;StringCommand.c: 389: {
 12577                           ;StringCommand.c: 390: UARTstring("redled what??? Do you mean Red Led Brightness???");
 12578  011300  0EF2               	movlw	high STR_153
 12579  011302  0101               	movlb	1	; () banked
 12580  011304  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12581  011306  0E92               	movlw	low STR_153
 12582  011308  0101               	movlb	1	; () banked
 12583  01130A  6F7C               	movwf	UARTstring@data& (0+255),b
 12584  01130C  ECB3  F0AD         	call	_UARTstring	;wreg free
 12585                           
 12586                           ;StringCommand.c: 391: LCDdisplayFeedback("Red LED What???");
 12587  011310  0EFA               	movlw	high STR_154
 12588  011312  0101               	movlb	1	; () banked
 12589  011314  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12590  011316  0EC8               	movlw	low STR_154
 12591  011318  0101               	movlb	1	; () banked
 12592  01131A  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12593  01131C  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 12594  011320  EF28  F092         	goto	l513
 12595  011324                     l11556:
 12596                           
 12597                           ;StringCommand.c: 394: else
 12598                           ;StringCommand.c: 395: {
 12599                           ;StringCommand.c: 396: UARTstring("Red LED PWM Help Menu\r\n\n");
 12600  011324  0EF6               	movlw	high STR_155
 12601  011326  0101               	movlb	1	; () banked
 12602  011328  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12603  01132A  0EF7               	movlw	low STR_155
 12604  01132C  0101               	movlb	1	; () banked
 12605  01132E  6F7C               	movwf	UARTstring@data& (0+255),b
 12606  011330  ECB3  F0AD         	call	_UARTstring	;wreg free
 12607                           
 12608                           ;StringCommand.c: 397: UARTstring("To set te PWM brightness enter 'Red LED brightness = 
      +                          dutycycle'\r\n");
 12609  011334  0EF1               	movlw	high STR_156
 12610  011336  0101               	movlb	1	; () banked
 12611  011338  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12612  01133A  0EA3               	movlw	low STR_156
 12613  01133C  0101               	movlb	1	; () banked
 12614  01133E  6F7C               	movwf	UARTstring@data& (0+255),b
 12615  011340  ECB3  F0AD         	call	_UARTstring	;wreg free
 12616                           
 12617                           ;StringCommand.c: 398: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 12618  011344  0EF3               	movlw	high STR_157
 12619  011346  0101               	movlb	1	; () banked
 12620  011348  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12621  01134A  0E1E               	movlw	low STR_157
 12622  01134C  0101               	movlb	1	; () banked
 12623  01134E  6F7C               	movwf	UARTstring@data& (0+255),b
 12624  011350  ECB3  F0AD         	call	_UARTstring	;wreg free
 12625                           
 12626                           ;StringCommand.c: 399: LCD_Scroll("Red LED Contrast");
 12627  011354  0EFA               	movlw	high STR_158
 12628  011356  0101               	movlb	1	; () banked
 12629  011358  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12630  01135A  0E56               	movlw	low STR_158
 12631  01135C  0101               	movlb	1	; () banked
 12632  01135E  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 12633  011360  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 12634                           
 12635                           ;StringCommand.c: 400: LCD_Scroll("Commands:");
 12636  011364  0EFE               	movlw	high STR_159
 12637  011366  0101               	movlb	1	; () banked
 12638  011368  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12639  01136A  0E65               	movlw	low STR_159
 12640  01136C  0101               	movlb	1	; () banked
 12641  01136E  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 12642  011370  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 12643                           
 12644                           ;StringCommand.c: 401: LCD_Scroll("Red LED=#");
 12645  011374  0EFE               	movlw	high STR_160
 12646  011376  0101               	movlb	1	; () banked
 12647  011378  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12648  01137A  0E51               	movlw	low STR_160
 12649  01137C  0101               	movlb	1	; () banked
 12650  01137E  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 12651  011380  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 12652  011384  EF28  F092         	goto	l513
 12653  011388                     l11564:
 12654                           
 12655                           ;StringCommand.c: 405: else if (StartsWith(Input, "contrast"))
 12656  011388  0101               	movlb	1	; () banked
 12657  01138A  C1C1  F17C         	movff	Command@Input+1,StartsWith@This+1
 12658  01138E  0101               	movlb	1	; () banked
 12659  011390  C1C0  F17B         	movff	Command@Input,StartsWith@This
 12660  011394  0EFE               	movlw	high STR_161
 12661  011396  0101               	movlb	1	; () banked
 12662  011398  6F7E               	movwf	(StartsWith@That+1)& (0+255),b
 12663  01139A  0EEA               	movlw	low STR_161
 12664  01139C  0101               	movlb	1	; () banked
 12665  01139E  6F7D               	movwf	StartsWith@That& (0+255),b
 12666  0113A0  EC4C  F0AE         	call	_StartsWith	;wreg free
 12667  0113A4  0900               	iorlw	0
 12668  0113A6  B4D8               	btfsc	status,2,c
 12669  0113A8  D0FD               	goto	l11604
 12670                           
 12671                           ;StringCommand.c: 406: {
 12672                           ;StringCommand.c: 407: if (!StringContains(Input, "?"))
 12673  0113AA  0101               	movlb	1	; () banked
 12674  0113AC  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 12675  0113B0  0101               	movlb	1	; () banked
 12676  0113B2  C1C0  F17B         	movff	Command@Input,StringContains@This
 12677  0113B6  0EFA               	movlw	high (STR_64+14)
 12678  0113B8  0101               	movlb	1	; () banked
 12679  0113BA  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 12680  0113BC  0EA6               	movlw	low (STR_64+14)
 12681  0113BE  0101               	movlb	1	; () banked
 12682  0113C0  6F7D               	movwf	StringContains@That& (0+255),b
 12683  0113C2  ECC9  F0B0         	call	_StringContains	;wreg free
 12684  0113C6  0900               	iorlw	0
 12685  0113C8  A4D8               	btfss	status,2,c
 12686  0113CA  D0BA               	goto	l11596
 12687                           
 12688                           ;StringCommand.c: 408: {
 12689                           ;StringCommand.c: 409: if (!StringContains(Input, "="))
 12690  0113CC  0101               	movlb	1	; () banked
 12691  0113CE  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 12692  0113D2  0101               	movlb	1	; () banked
 12693  0113D4  C1C0  F17B         	movff	Command@Input,StringContains@This
 12694  0113D8  0EFD               	movlw	high (STR_182+11)
 12695  0113DA  0101               	movlb	1	; () banked
 12696  0113DC  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 12697  0113DE  0E58               	movlw	low (STR_182+11)
 12698  0113E0  0101               	movlb	1	; () banked
 12699  0113E2  6F7D               	movwf	StringContains@That& (0+255),b
 12700  0113E4  ECC9  F0B0         	call	_StringContains	;wreg free
 12701  0113E8  0900               	iorlw	0
 12702  0113EA  A4D8               	btfss	status,2,c
 12703  0113EC  D008               	goto	l11572
 12704                           
 12705                           ;StringCommand.c: 410: {
 12706                           ;StringCommand.c: 411: StringAddEqual(Input);
 12707  0113EE  0101               	movlb	1	; () banked
 12708  0113F0  C1C1  F18B         	movff	Command@Input+1,StringAddEqual@Input+1
 12709  0113F4  0101               	movlb	1	; () banked
 12710  0113F6  C1C0  F18A         	movff	Command@Input,StringAddEqual@Input
 12711  0113FA  EC5C  F0A1         	call	_StringAddEqual	;wreg free
 12712  0113FE                     l11572:
 12713                           
 12714                           ;StringCommand.c: 412: }
 12715                           ;StringCommand.c: 413: contrast = GetEnteredNumber(Input);
 12716  0113FE  0101               	movlb	1	; () banked
 12717  011400  C1C1  F182         	movff	Command@Input+1,GetEnteredNumber@This+1
 12718  011404  0101               	movlb	1	; () banked
 12719  011406  C1C0  F181         	movff	Command@Input,GetEnteredNumber@This
 12720  01140A  EC38  F0A2         	call	_GetEnteredNumber	;wreg free
 12721  01140E  0101               	movlb	1	; () banked
 12722  011410  C181  F5D0         	movff	?_GetEnteredNumber,Command@contrast
 12723  011414  0101               	movlb	1	; () banked
 12724  011416  C182  F5D1         	movff	?_GetEnteredNumber+1,Command@contrast+1
 12725                           
 12726                           ; BSR set to: 1
 12727                           ;StringCommand.c: 414: if (contrast == 32001)
 12728  01141A  0105               	movlb	5	; () banked
 12729  01141C  05D0               	decf	Command@contrast& (0+255),w,b
 12730  01141E  0E7D               	movlw	125
 12731  011420  B4D8               	btfsc	status,2,c
 12732  011422  19D1               	xorwf	(Command@contrast+1)& (0+255),w,b
 12733  011424  A4D8               	btfss	status,2,c
 12734  011426  D012               	goto	l11578
 12735                           
 12736                           ; BSR set to: 5
 12737                           ;StringCommand.c: 415: {
 12738                           ;StringCommand.c: 416: UARTstring("Error: No number entered\r\n");
 12739  011428  0EF6               	movlw	high STR_145
 12740  01142A  0101               	movlb	1	; () banked
 12741  01142C  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12742  01142E  0E73               	movlw	low STR_145
 12743  011430  0101               	movlb	1	; () banked
 12744  011432  6F7C               	movwf	UARTstring@data& (0+255),b
 12745  011434  ECB3  F0AD         	call	_UARTstring	;wreg free
 12746                           
 12747                           ;StringCommand.c: 417: LCDdisplayFeedback("ERR: No number");
 12748  011438  0EFC               	movlw	high STR_165
 12749  01143A  0101               	movlb	1	; () banked
 12750  01143C  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12751  01143E  0E6D               	movlw	low STR_165
 12752  011440  0101               	movlb	1	; () banked
 12753  011442  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12754  011444  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 12755                           
 12756                           ;StringCommand.c: 418: }
 12757  011448  EF28  F092         	goto	l513
 12758  01144C                     l11578:
 12759                           
 12760                           ;StringCommand.c: 419: else if (contrast > 100)
 12761  01144C  0105               	movlb	5	; () banked
 12762  01144E  51D1               	movf	(Command@contrast+1)& (0+255),w,b
 12763  011450  0A80               	xorlw	128
 12764  011452  0F80               	addlw	-128
 12765  011454  0E65               	movlw	101
 12766  011456  B4D8               	btfsc	status,2,c
 12767  011458  5DD0               	subwf	Command@contrast& (0+255),w,b
 12768  01145A  A0D8               	btfss	status,0,c
 12769  01145C  D012               	goto	l11582
 12770                           
 12771                           ; BSR set to: 5
 12772                           ;StringCommand.c: 420: {
 12773                           ;StringCommand.c: 421: UARTstring("Invalid Contrast Duty cycle: Greater than 100\r\n");
 12774  01145E  0EF2               	movlw	high STR_166
 12775  011460  0101               	movlb	1	; () banked
 12776  011462  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12777  011464  0EC3               	movlw	low STR_166
 12778  011466  0101               	movlb	1	; () banked
 12779  011468  6F7C               	movwf	UARTstring@data& (0+255),b
 12780  01146A  ECB3  F0AD         	call	_UARTstring	;wreg free
 12781                           
 12782                           ;StringCommand.c: 422: LCDdisplayFeedback("ERR: CNST > 100");
 12783  01146E  0EFA               	movlw	high STR_167
 12784  011470  0101               	movlb	1	; () banked
 12785  011472  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12786  011474  0E78               	movlw	low STR_167
 12787  011476  0101               	movlb	1	; () banked
 12788  011478  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12789  01147A  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 12790                           
 12791                           ;StringCommand.c: 423: }
 12792  01147E  EF28  F092         	goto	l513
 12793  011482                     l11582:
 12794                           
 12795                           ;StringCommand.c: 424: else if (contrast < 0)
 12796  011482  0105               	movlb	5	; () banked
 12797  011484  51D1               	movf	(Command@contrast+1)& (0+255),w,b
 12798  011486  0A80               	xorlw	128
 12799  011488  6EF3               	movwf	prodl,c
 12800  01148A  0E80               	movlw	128
 12801  01148C  5CF3               	subwf	prodl,w,c
 12802  01148E  0E00               	movlw	0
 12803  011490  B4D8               	btfsc	status,2,c
 12804  011492  5DD0               	subwf	Command@contrast& (0+255),w,b
 12805  011494  B0D8               	btfsc	status,0,c
 12806  011496  D012               	goto	l11586
 12807                           
 12808                           ; BSR set to: 5
 12809                           ;StringCommand.c: 425: {
 12810                           ;StringCommand.c: 426: UARTstring("Invalid Contrast Duty Cycle: Less than 0\r\n");
 12811  011498  0EF2               	movlw	high STR_168
 12812  01149A  0101               	movlb	1	; () banked
 12813  01149C  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12814  01149E  0EF3               	movlw	low STR_168
 12815  0114A0  0101               	movlb	1	; () banked
 12816  0114A2  6F7C               	movwf	UARTstring@data& (0+255),b
 12817  0114A4  ECB3  F0AD         	call	_UARTstring	;wreg free
 12818                           
 12819                           ;StringCommand.c: 427: LCDdisplayFeedback("ERR: CNST < 0");
 12820  0114A8  0EFC               	movlw	high STR_169
 12821  0114AA  0101               	movlb	1	; () banked
 12822  0114AC  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12823  0114AE  0E9A               	movlw	low STR_169
 12824  0114B0  0101               	movlb	1	; () banked
 12825  0114B2  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12826  0114B4  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 12827                           
 12828                           ;StringCommand.c: 428: }
 12829  0114B8  EF28  F092         	goto	l513
 12830  0114BC                     l11586:
 12831                           
 12832                           ;StringCommand.c: 429: else
 12833                           ;StringCommand.c: 430: {
 12834                           ;StringCommand.c: 431: SetContrast(contrast);
 12835  0114BC  0105               	movlb	5	; () banked
 12836  0114BE  51D0               	movf	Command@contrast& (0+255),w,b
 12837  0114C0  ECAA  F0A8         	call	_SetContrast
 12838                           
 12839                           ;StringCommand.c: 432: sprintf(buf, "Contrast Duty Cycle set to %d\r\n", contrast);
 12840  0114C4  0105               	movlb	5	; () banked
 12841  0114C6  0E05               	movlw	high Command@buf
 12842  0114C8  0101               	movlb	1	; () banked
 12843  0114CA  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 12844  0114CC  0105               	movlb	5	; () banked
 12845  0114CE  0E00               	movlw	low Command@buf
 12846  0114D0  0101               	movlb	1	; () banked
 12847  0114D2  6F87               	movwf	sprintf@sp& (0+255),b
 12848  0114D4  0EF5               	movlw	high STR_170
 12849  0114D6  0101               	movlb	1	; () banked
 12850  0114D8  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 12851  0114DA  0E13               	movlw	low STR_170
 12852  0114DC  0101               	movlb	1	; () banked
 12853  0114DE  6F89               	movwf	sprintf@f& (0+255),b
 12854  0114E0  C5D0  F18B         	movff	Command@contrast,?_sprintf+4
 12855  0114E4  C5D1  F18C         	movff	Command@contrast+1,?_sprintf+5
 12856  0114E8  EC31  F092         	call	_sprintf	;wreg free
 12857                           
 12858                           ;StringCommand.c: 433: UARTstring(buf);
 12859  0114EC  0105               	movlb	5	; () banked
 12860  0114EE  0E05               	movlw	high Command@buf
 12861  0114F0  0101               	movlb	1	; () banked
 12862  0114F2  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12863  0114F4  0105               	movlb	5	; () banked
 12864  0114F6  0E00               	movlw	low Command@buf
 12865  0114F8  0101               	movlb	1	; () banked
 12866  0114FA  6F7C               	movwf	UARTstring@data& (0+255),b
 12867  0114FC  ECB3  F0AD         	call	_UARTstring	;wreg free
 12868                           
 12869                           ;StringCommand.c: 434: sprintf(buf, "CNST set to %d", duty);
 12870  011500  0105               	movlb	5	; () banked
 12871  011502  0E05               	movlw	high Command@buf
 12872  011504  0101               	movlb	1	; () banked
 12873  011506  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 12874  011508  0105               	movlb	5	; () banked
 12875  01150A  0E00               	movlw	low Command@buf
 12876  01150C  0101               	movlb	1	; () banked
 12877  01150E  6F87               	movwf	sprintf@sp& (0+255),b
 12878  011510  0EFB               	movlw	high STR_171
 12879  011512  0101               	movlb	1	; () banked
 12880  011514  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 12881  011516  0EE6               	movlw	low STR_171
 12882  011518  0101               	movlb	1	; () banked
 12883  01151A  6F89               	movwf	sprintf@f& (0+255),b
 12884  01151C  C5D4  F18B         	movff	Command@duty,?_sprintf+4
 12885  011520  C5D5  F18C         	movff	Command@duty+1,?_sprintf+5
 12886  011524  EC31  F092         	call	_sprintf	;wreg free
 12887                           
 12888                           ;StringCommand.c: 435: LCDdisplayFeedback(buf);
 12889  011528  0105               	movlb	5	; () banked
 12890  01152A  0E05               	movlw	high Command@buf
 12891  01152C  0101               	movlb	1	; () banked
 12892  01152E  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12893  011530  0105               	movlb	5	; () banked
 12894  011532  0E00               	movlw	low Command@buf
 12895  011534  0101               	movlb	1	; () banked
 12896  011536  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12897  011538  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 12898  01153C  EF28  F092         	goto	l513
 12899  011540                     l11596:
 12900                           
 12901                           ;StringCommand.c: 438: else
 12902                           ;StringCommand.c: 439: {
 12903                           ;StringCommand.c: 440: UARTstring("Contrast PWM Help Menu\r\n\n");
 12904  011540  0EF6               	movlw	high STR_172
 12905  011542  0101               	movlb	1	; () banked
 12906  011544  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12907  011546  0EC3               	movlw	low STR_172
 12908  011548  0101               	movlb	1	; () banked
 12909  01154A  6F7C               	movwf	UARTstring@data& (0+255),b
 12910  01154C  ECB3  F0AD         	call	_UARTstring	;wreg free
 12911                           
 12912                           ;StringCommand.c: 441: UARTstring("To set Contrast PWM brightness enter 'Contrast = duty
      +                          cycle'\r\n");
 12913  011550  0EF1               	movlw	high STR_173
 12914  011552  0101               	movlb	1	; () banked
 12915  011554  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12916  011556  0EE5               	movlw	low STR_173
 12917  011558  0101               	movlb	1	; () banked
 12918  01155A  6F7C               	movwf	UARTstring@data& (0+255),b
 12919  01155C  ECB3  F0AD         	call	_UARTstring	;wreg free
 12920                           
 12921                           ;StringCommand.c: 442: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 12922  011560  0EF3               	movlw	high STR_157
 12923  011562  0101               	movlb	1	; () banked
 12924  011564  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 12925  011566  0E1E               	movlw	low STR_157
 12926  011568  0101               	movlb	1	; () banked
 12927  01156A  6F7C               	movwf	UARTstring@data& (0+255),b
 12928  01156C  ECB3  F0AD         	call	_UARTstring	;wreg free
 12929                           
 12930                           ;StringCommand.c: 443: LCD_Scroll("LCD Contrast");
 12931  011570  0EFD               	movlw	high STR_175
 12932  011572  0101               	movlb	1	; () banked
 12933  011574  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12934  011576  0E8E               	movlw	low STR_175
 12935  011578  0101               	movlb	1	; () banked
 12936  01157A  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 12937  01157C  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 12938                           
 12939                           ;StringCommand.c: 444: LCD_Scroll("Commands:");
 12940  011580  0EFE               	movlw	high STR_159
 12941  011582  0101               	movlb	1	; () banked
 12942  011584  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12943  011586  0E65               	movlw	low STR_159
 12944  011588  0101               	movlb	1	; () banked
 12945  01158A  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 12946  01158C  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 12947                           
 12948                           ;StringCommand.c: 445: LCD_Scroll("Contrast#");
 12949  011590  0EFE               	movlw	high STR_177
 12950  011592  0101               	movlb	1	; () banked
 12951  011594  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12952  011596  0E5B               	movlw	low STR_177
 12953  011598  0101               	movlb	1	; () banked
 12954  01159A  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 12955  01159C  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 12956  0115A0  EF28  F092         	goto	l513
 12957  0115A4                     l11604:
 12958                           
 12959                           ;StringCommand.c: 449: else if (StartsWith(Input, "adc"))
 12960  0115A4  0101               	movlb	1	; () banked
 12961  0115A6  C1C1  F17C         	movff	Command@Input+1,StartsWith@This+1
 12962  0115AA  0101               	movlb	1	; () banked
 12963  0115AC  C1C0  F17B         	movff	Command@Input,StartsWith@This
 12964  0115B0  0EFF               	movlw	high STR_178
 12965  0115B2  0101               	movlb	1	; () banked
 12966  0115B4  6F7E               	movwf	(StartsWith@That+1)& (0+255),b
 12967  0115B6  0EE1               	movlw	low STR_178
 12968  0115B8  0101               	movlb	1	; () banked
 12969  0115BA  6F7D               	movwf	StartsWith@That& (0+255),b
 12970  0115BC  EC4C  F0AE         	call	_StartsWith	;wreg free
 12971  0115C0  0900               	iorlw	0
 12972  0115C2  B4D8               	btfsc	status,2,c
 12973  0115C4  D16F               	goto	l11658
 12974                           
 12975                           ;StringCommand.c: 450: {
 12976                           ;StringCommand.c: 451: if (!StringContains(Input, "?"))
 12977  0115C6  0101               	movlb	1	; () banked
 12978  0115C8  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 12979  0115CC  0101               	movlb	1	; () banked
 12980  0115CE  C1C0  F17B         	movff	Command@Input,StringContains@This
 12981  0115D2  0EFA               	movlw	high (STR_64+14)
 12982  0115D4  0101               	movlb	1	; () banked
 12983  0115D6  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 12984  0115D8  0EA6               	movlw	low (STR_64+14)
 12985  0115DA  0101               	movlb	1	; () banked
 12986  0115DC  6F7D               	movwf	StringContains@That& (0+255),b
 12987  0115DE  ECC9  F0B0         	call	_StringContains	;wreg free
 12988  0115E2  0900               	iorlw	0
 12989  0115E4  A4D8               	btfss	status,2,c
 12990  0115E6  D11C               	goto	l11650
 12991                           
 12992                           ;StringCommand.c: 452: {
 12993                           ;StringCommand.c: 453: if (!StringContains(Input, "="))
 12994  0115E8  0101               	movlb	1	; () banked
 12995  0115EA  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 12996  0115EE  0101               	movlb	1	; () banked
 12997  0115F0  C1C0  F17B         	movff	Command@Input,StringContains@This
 12998  0115F4  0EFD               	movlw	high (STR_182+11)
 12999  0115F6  0101               	movlb	1	; () banked
 13000  0115F8  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 13001  0115FA  0E58               	movlw	low (STR_182+11)
 13002  0115FC  0101               	movlb	1	; () banked
 13003  0115FE  6F7D               	movwf	StringContains@That& (0+255),b
 13004  011600  ECC9  F0B0         	call	_StringContains	;wreg free
 13005  011604  0900               	iorlw	0
 13006  011606  A4D8               	btfss	status,2,c
 13007  011608  D008               	goto	l11612
 13008                           
 13009                           ;StringCommand.c: 454: {
 13010                           ;StringCommand.c: 455: StringAddEqual(Input);
 13011  01160A  0101               	movlb	1	; () banked
 13012  01160C  C1C1  F18B         	movff	Command@Input+1,StringAddEqual@Input+1
 13013  011610  0101               	movlb	1	; () banked
 13014  011612  C1C0  F18A         	movff	Command@Input,StringAddEqual@Input
 13015  011616  EC5C  F0A1         	call	_StringAddEqual	;wreg free
 13016  01161A                     l11612:
 13017                           
 13018                           ;StringCommand.c: 456: }
 13019                           ;StringCommand.c: 457: channel = GetEnteredNumber(Input);
 13020  01161A  0101               	movlb	1	; () banked
 13021  01161C  C1C1  F182         	movff	Command@Input+1,GetEnteredNumber@This+1
 13022  011620  0101               	movlb	1	; () banked
 13023  011622  C1C0  F181         	movff	Command@Input,GetEnteredNumber@This
 13024  011626  EC38  F0A2         	call	_GetEnteredNumber	;wreg free
 13025  01162A  0101               	movlb	1	; () banked
 13026  01162C  C181  F5D2         	movff	?_GetEnteredNumber,Command@channel
 13027  011630  0101               	movlb	1	; () banked
 13028  011632  C182  F5D3         	movff	?_GetEnteredNumber+1,Command@channel+1
 13029                           
 13030                           ; BSR set to: 1
 13031                           ;StringCommand.c: 458: if (channel == 32002) {
 13032  011636  0105               	movlb	5	; () banked
 13033  011638  51D3               	movf	(Command@channel+1)& (0+255),w,b
 13034  01163A  0A7D               	xorlw	125
 13035  01163C  0E02               	movlw	2
 13036  01163E  B4D8               	btfsc	status,2,c
 13037  011640  19D2               	xorwf	Command@channel& (0+255),w,b
 13038  011642  A4D8               	btfss	status,2,c
 13039  011644  D012               	goto	l11618
 13040                           
 13041                           ; BSR set to: 5
 13042                           ;StringCommand.c: 459: UARTstring("Error: only use one equal sign\r\n");
 13043  011646  0EF4               	movlw	high STR_181
 13044  011648  0101               	movlb	1	; () banked
 13045  01164A  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13046  01164C  0ED2               	movlw	low STR_181
 13047  01164E  0101               	movlb	1	; () banked
 13048  011650  6F7C               	movwf	UARTstring@data& (0+255),b
 13049  011652  ECB3  F0AD         	call	_UARTstring	;wreg free
 13050                           
 13051                           ;StringCommand.c: 460: LCDdisplayFeedback("ERR: Use 1 =");
 13052  011656  0EFD               	movlw	high STR_182
 13053  011658  0101               	movlb	1	; () banked
 13054  01165A  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13055  01165C  0E4D               	movlw	low STR_182
 13056  01165E  0101               	movlb	1	; () banked
 13057  011660  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13058  011662  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 13059                           
 13060                           ;StringCommand.c: 461: }
 13061  011666  EF28  F092         	goto	l513
 13062  01166A                     l11618:
 13063                           
 13064                           ;StringCommand.c: 462: else if (channel < 0)
 13065  01166A  0105               	movlb	5	; () banked
 13066  01166C  51D3               	movf	(Command@channel+1)& (0+255),w,b
 13067  01166E  0A80               	xorlw	128
 13068  011670  6EF3               	movwf	prodl,c
 13069  011672  0E80               	movlw	128
 13070  011674  5CF3               	subwf	prodl,w,c
 13071  011676  0E00               	movlw	0
 13072  011678  B4D8               	btfsc	status,2,c
 13073  01167A  5DD2               	subwf	Command@channel& (0+255),w,b
 13074  01167C  B0D8               	btfsc	status,0,c
 13075  01167E  D012               	goto	l11622
 13076                           
 13077                           ; BSR set to: 5
 13078                           ;StringCommand.c: 463: {
 13079                           ;StringCommand.c: 464: UARTstring("Error: No negative channels\r\n");
 13080  011680  0EF5               	movlw	high STR_183
 13081  011682  0101               	movlb	1	; () banked
 13082  011684  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13083  011686  0E72               	movlw	low STR_183
 13084  011688  0101               	movlb	1	; () banked
 13085  01168A  6F7C               	movwf	UARTstring@data& (0+255),b
 13086  01168C  ECB3  F0AD         	call	_UARTstring	;wreg free
 13087                           
 13088                           ;StringCommand.c: 465: LCDdisplayFeedback("ERR: Use + Chnl");
 13089  011690  0EFB               	movlw	high STR_184
 13090  011692  0101               	movlb	1	; () banked
 13091  011694  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13092  011696  0E88               	movlw	low STR_184
 13093  011698  0101               	movlb	1	; () banked
 13094  01169A  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13095  01169C  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 13096                           
 13097                           ;StringCommand.c: 466: }
 13098  0116A0  EF28  F092         	goto	l513
 13099  0116A4                     l11622:
 13100                           
 13101                           ;StringCommand.c: 467: else if (channel >= 32000)
 13102  0116A4  0105               	movlb	5	; () banked
 13103  0116A6  51D3               	movf	(Command@channel+1)& (0+255),w,b
 13104  0116A8  0A80               	xorlw	128
 13105  0116AA  0F03               	addlw	-253
 13106  0116AC  0E00               	movlw	0
 13107  0116AE  B4D8               	btfsc	status,2,c
 13108  0116B0  5DD2               	subwf	Command@channel& (0+255),w,b
 13109  0116B2  A0D8               	btfss	status,0,c
 13110  0116B4  D012               	goto	l11626
 13111                           
 13112                           ; BSR set to: 5
 13113                           ;StringCommand.c: 468: {
 13114                           ;StringCommand.c: 469: UARTstring("Error: in parsing command\r\n");
 13115  0116B6  0EF6               	movlw	high STR_185
 13116  0116B8  0101               	movlb	1	; () banked
 13117  0116BA  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13118  0116BC  0E03               	movlw	low STR_185
 13119  0116BE  0101               	movlb	1	; () banked
 13120  0116C0  6F7C               	movwf	UARTstring@data& (0+255),b
 13121  0116C2  ECB3  F0AD         	call	_UARTstring	;wreg free
 13122                           
 13123                           ;StringCommand.c: 470: LCDdisplayFeedback("ERR: Cant parse");
 13124  0116C6  0EFB               	movlw	high STR_186
 13125  0116C8  0101               	movlb	1	; () banked
 13126  0116CA  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13127  0116CC  0E48               	movlw	low STR_186
 13128  0116CE  0101               	movlb	1	; () banked
 13129  0116D0  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13130  0116D2  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 13131                           
 13132                           ;StringCommand.c: 471: }
 13133  0116D6  EF28  F092         	goto	l513
 13134  0116DA                     l11626:
 13135                           
 13136                           ;StringCommand.c: 472: else if (channel != 0)
 13137  0116DA  0105               	movlb	5	; () banked
 13138  0116DC  51D3               	movf	(Command@channel+1)& (0+255),w,b
 13139  0116DE  11D2               	iorwf	Command@channel& (0+255),w,b
 13140  0116E0  B4D8               	btfsc	status,2,c
 13141  0116E2  D03E               	goto	l11634
 13142                           
 13143                           ; BSR set to: 5
 13144                           ;StringCommand.c: 473: {
 13145                           ;StringCommand.c: 474: sprintf(buf, "Channel %d is not configured", channel);
 13146  0116E4  0105               	movlb	5	; () banked
 13147  0116E6  0E05               	movlw	high Command@buf
 13148  0116E8  0101               	movlb	1	; () banked
 13149  0116EA  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 13150  0116EC  0105               	movlb	5	; () banked
 13151  0116EE  0E00               	movlw	low Command@buf
 13152  0116F0  0101               	movlb	1	; () banked
 13153  0116F2  6F87               	movwf	sprintf@sp& (0+255),b
 13154  0116F4  0EF5               	movlw	high STR_187
 13155  0116F6  0101               	movlb	1	; () banked
 13156  0116F8  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 13157  0116FA  0EAD               	movlw	low STR_187
 13158  0116FC  0101               	movlb	1	; () banked
 13159  0116FE  6F89               	movwf	sprintf@f& (0+255),b
 13160  011700  C5D2  F18B         	movff	Command@channel,?_sprintf+4
 13161  011704  C5D3  F18C         	movff	Command@channel+1,?_sprintf+5
 13162  011708  EC31  F092         	call	_sprintf	;wreg free
 13163                           
 13164                           ;StringCommand.c: 475: UARTstring(buf);
 13165  01170C  0105               	movlb	5	; () banked
 13166  01170E  0E05               	movlw	high Command@buf
 13167  011710  0101               	movlb	1	; () banked
 13168  011712  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13169  011714  0105               	movlb	5	; () banked
 13170  011716  0E00               	movlw	low Command@buf
 13171  011718  0101               	movlb	1	; () banked
 13172  01171A  6F7C               	movwf	UARTstring@data& (0+255),b
 13173  01171C  ECB3  F0AD         	call	_UARTstring	;wreg free
 13174                           
 13175                           ;StringCommand.c: 476: sprintf(buf, "Chnl set to %d\r\n", duty);
 13176  011720  0105               	movlb	5	; () banked
 13177  011722  0E05               	movlw	high Command@buf
 13178  011724  0101               	movlb	1	; () banked
 13179  011726  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 13180  011728  0105               	movlb	5	; () banked
 13181  01172A  0E00               	movlw	low Command@buf
 13182  01172C  0101               	movlb	1	; () banked
 13183  01172E  6F87               	movwf	sprintf@sp& (0+255),b
 13184  011730  0EF9               	movlw	high STR_188
 13185  011732  0101               	movlb	1	; () banked
 13186  011734  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 13187  011736  0EAC               	movlw	low STR_188
 13188  011738  0101               	movlb	1	; () banked
 13189  01173A  6F89               	movwf	sprintf@f& (0+255),b
 13190  01173C  C5D4  F18B         	movff	Command@duty,?_sprintf+4
 13191  011740  C5D5  F18C         	movff	Command@duty+1,?_sprintf+5
 13192  011744  EC31  F092         	call	_sprintf	;wreg free
 13193                           
 13194                           ;StringCommand.c: 477: LCDdisplayFeedback(buf);
 13195  011748  0105               	movlb	5	; () banked
 13196  01174A  0E05               	movlw	high Command@buf
 13197  01174C  0101               	movlb	1	; () banked
 13198  01174E  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13199  011750  0105               	movlb	5	; () banked
 13200  011752  0E00               	movlw	low Command@buf
 13201  011754  0101               	movlb	1	; () banked
 13202  011756  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13203  011758  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 13204                           
 13205                           ;StringCommand.c: 478: }
 13206  01175C  EF28  F092         	goto	l513
 13207  011760                     l11634:
 13208                           
 13209                           ;StringCommand.c: 479: else
 13210                           ;StringCommand.c: 480: {
 13211                           ;StringCommand.c: 481: LATE |= 0b00000010;
 13212  011760  828D               	bsf	3981,1,c	;volatile
 13213                           
 13214                           ;StringCommand.c: 482: delayUS(1000);
 13215  011762  0EE8               	movlw	232
 13216  011764  0101               	movlb	1	; () banked
 13217  011766  6F7B               	movwf	delayUS@US& (0+255),b
 13218  011768  0E03               	movlw	3
 13219  01176A  0101               	movlb	1	; () banked
 13220  01176C  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 13221  01176E  0E00               	movlw	0
 13222  011770  0101               	movlb	1	; () banked
 13223  011772  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 13224  011774  0E00               	movlw	0
 13225  011776  0101               	movlb	1	; () banked
 13226  011778  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 13227  01177A  ECC0  F0B1         	call	_delayUS	;wreg free
 13228                           
 13229                           ;StringCommand.c: 483: ADC_Value = InternalADC_Read(channel);
 13230  01177E  0105               	movlb	5	; () banked
 13231  011780  51D2               	movf	Command@channel& (0+255),w,b
 13232  011782  ECD5  F0B2         	call	_InternalADC_Read
 13233  011786  0101               	movlb	1	; () banked
 13234  011788  C180  F5C8         	movff	?_InternalADC_Read,Command@ADC_Value
 13235  01178C  0101               	movlb	1	; () banked
 13236  01178E  C181  F5C9         	movff	?_InternalADC_Read+1,Command@ADC_Value+1
 13237                           
 13238                           ; BSR set to: 1
 13239                           ;StringCommand.c: 484: sprintf(buf, "ADC channel %d = %d", channel, ADC_Value);
 13240  011792  0105               	movlb	5	; () banked
 13241  011794  0E05               	movlw	high Command@buf
 13242  011796  0101               	movlb	1	; () banked
 13243  011798  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 13244  01179A  0105               	movlb	5	; () banked
 13245  01179C  0E00               	movlw	low Command@buf
 13246  01179E  0101               	movlb	1	; () banked
 13247  0117A0  6F87               	movwf	sprintf@sp& (0+255),b
 13248  0117A2  0EF8               	movlw	high STR_189
 13249  0117A4  0101               	movlb	1	; () banked
 13250  0117A6  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 13251  0117A8  0E3B               	movlw	low STR_189
 13252  0117AA  0101               	movlb	1	; () banked
 13253  0117AC  6F89               	movwf	sprintf@f& (0+255),b
 13254  0117AE  C5D2  F18B         	movff	Command@channel,?_sprintf+4
 13255  0117B2  C5D3  F18C         	movff	Command@channel+1,?_sprintf+5
 13256  0117B6  C5C8  F18D         	movff	Command@ADC_Value,?_sprintf+6
 13257  0117BA  C5C9  F18E         	movff	Command@ADC_Value+1,?_sprintf+7
 13258  0117BE  EC31  F092         	call	_sprintf	;wreg free
 13259                           
 13260                           ;StringCommand.c: 485: LATE &= ~0b00000010;
 13261  0117C2  928D               	bcf	3981,1,c	;volatile
 13262                           
 13263                           ;StringCommand.c: 486: UARTstring(buf);
 13264  0117C4  0105               	movlb	5	; () banked
 13265  0117C6  0E05               	movlw	high Command@buf
 13266  0117C8  0101               	movlb	1	; () banked
 13267  0117CA  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13268  0117CC  0105               	movlb	5	; () banked
 13269  0117CE  0E00               	movlw	low Command@buf
 13270  0117D0  0101               	movlb	1	; () banked
 13271  0117D2  6F7C               	movwf	UARTstring@data& (0+255),b
 13272  0117D4  ECB3  F0AD         	call	_UARTstring	;wreg free
 13273                           
 13274                           ;StringCommand.c: 487: sprintf(buf, "Chnl %d = %d", channel, ADC_Value);
 13275  0117D8  0105               	movlb	5	; () banked
 13276  0117DA  0E05               	movlw	high Command@buf
 13277  0117DC  0101               	movlb	1	; () banked
 13278  0117DE  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 13279  0117E0  0105               	movlb	5	; () banked
 13280  0117E2  0E00               	movlw	low Command@buf
 13281  0117E4  0101               	movlb	1	; () banked
 13282  0117E6  6F87               	movwf	sprintf@sp& (0+255),b
 13283  0117E8  0EFD               	movlw	high STR_190
 13284  0117EA  0101               	movlb	1	; () banked
 13285  0117EC  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 13286  0117EE  0E67               	movlw	low STR_190
 13287  0117F0  0101               	movlb	1	; () banked
 13288  0117F2  6F89               	movwf	sprintf@f& (0+255),b
 13289  0117F4  C5D2  F18B         	movff	Command@channel,?_sprintf+4
 13290  0117F8  C5D3  F18C         	movff	Command@channel+1,?_sprintf+5
 13291  0117FC  C5C8  F18D         	movff	Command@ADC_Value,?_sprintf+6
 13292  011800  C5C9  F18E         	movff	Command@ADC_Value+1,?_sprintf+7
 13293  011804  EC31  F092         	call	_sprintf	;wreg free
 13294                           
 13295                           ;StringCommand.c: 488: LCDdisplayFeedback(buf);
 13296  011808  0105               	movlb	5	; () banked
 13297  01180A  0E05               	movlw	high Command@buf
 13298  01180C  0101               	movlb	1	; () banked
 13299  01180E  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13300  011810  0105               	movlb	5	; () banked
 13301  011812  0E00               	movlw	low Command@buf
 13302  011814  0101               	movlb	1	; () banked
 13303  011816  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13304  011818  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 13305  01181C  EF28  F092         	goto	l513
 13306  011820                     l11650:
 13307                           
 13308                           ;StringCommand.c: 491: else
 13309                           ;StringCommand.c: 492: {
 13310                           ;StringCommand.c: 493: UARTstring("ADC Help Menu\r\n\n");
 13311  011820  0EF9               	movlw	high STR_191
 13312  011822  0101               	movlb	1	; () banked
 13313  011824  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13314  011826  0E8A               	movlw	low STR_191
 13315  011828  0101               	movlb	1	; () banked
 13316  01182A  6F7C               	movwf	UARTstring@data& (0+255),b
 13317  01182C  ECB3  F0AD         	call	_UARTstring	;wreg free
 13318                           
 13319                           ;StringCommand.c: 494: UARTstring("Channels:\r\n");
 13320  011830  0EFD               	movlw	high STR_192
 13321  011832  0101               	movlb	1	; () banked
 13322  011834  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13323  011836  0EC1               	movlw	low STR_192
 13324  011838  0101               	movlb	1	; () banked
 13325  01183A  6F7C               	movwf	UARTstring@data& (0+255),b
 13326  01183C  ECB3  F0AD         	call	_UARTstring	;wreg free
 13327                           
 13328                           ;StringCommand.c: 495: UARTstring("0\r\n\n");
 13329  011840  0EFF               	movlw	high STR_193
 13330  011842  0101               	movlb	1	; () banked
 13331  011844  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13332  011846  0EB4               	movlw	low STR_193
 13333  011848  0101               	movlb	1	; () banked
 13334  01184A  6F7C               	movwf	UARTstring@data& (0+255),b
 13335  01184C  ECB3  F0AD         	call	_UARTstring	;wreg free
 13336                           
 13337                           ;StringCommand.c: 496: UARTstring("To read and adc channel, type the command\r\n ADC"
 13338                           ;StringCommand.c: 497: " followed by 'Channel' \r\n");
 13339  011850  0EF0               	movlw	high STR_194
 13340  011852  0101               	movlb	1	; () banked
 13341  011854  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13342  011856  0ED1               	movlw	low STR_194
 13343  011858  0101               	movlb	1	; () banked
 13344  01185A  6F7C               	movwf	UARTstring@data& (0+255),b
 13345  01185C  ECB3  F0AD         	call	_UARTstring	;wreg free
 13346                           
 13347                           ;StringCommand.c: 498: UARTstring("i.e. ADC 0\r\n");
 13348  011860  0EFD               	movlw	high STR_195
 13349  011862  0101               	movlb	1	; () banked
 13350  011864  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13351  011866  0E26               	movlw	low STR_195
 13352  011868  0101               	movlb	1	; () banked
 13353  01186A  6F7C               	movwf	UARTstring@data& (0+255),b
 13354  01186C  ECB3  F0AD         	call	_UARTstring	;wreg free
 13355                           
 13356                           ;StringCommand.c: 499: LCD_Scroll("ADC Menu");
 13357  011870  0EFE               	movlw	high STR_196
 13358  011872  0101               	movlb	1	; () banked
 13359  011874  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13360  011876  0EF3               	movlw	low STR_196
 13361  011878  0101               	movlb	1	; () banked
 13362  01187A  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 13363  01187C  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 13364                           
 13365                           ;StringCommand.c: 500: LCD_Scroll("Commands:");
 13366  011880  0EFE               	movlw	high STR_159
 13367  011882  0101               	movlb	1	; () banked
 13368  011884  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13369  011886  0E65               	movlw	low STR_159
 13370  011888  0101               	movlb	1	; () banked
 13371  01188A  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 13372  01188C  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 13373                           
 13374                           ;StringCommand.c: 501: LCD_Scroll("0");
 13375  011890  0EFC               	movlw	high (STR_169+12)
 13376  011892  0101               	movlb	1	; () banked
 13377  011894  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13378  011896  0EA6               	movlw	low (STR_169+12)
 13379  011898  0101               	movlb	1	; () banked
 13380  01189A  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 13381  01189C  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 13382  0118A0  EF28  F092         	goto	l513
 13383  0118A4                     l11658:
 13384                           
 13385                           ;StringCommand.c: 505: else if (StartsWith(Input, "rtc"))
 13386  0118A4  0101               	movlb	1	; () banked
 13387  0118A6  C1C1  F17C         	movff	Command@Input+1,StartsWith@This+1
 13388  0118AA  0101               	movlb	1	; () banked
 13389  0118AC  C1C0  F17B         	movff	Command@Input,StartsWith@This
 13390  0118B0  0EFF               	movlw	high STR_199
 13391  0118B2  0101               	movlb	1	; () banked
 13392  0118B4  6F7E               	movwf	(StartsWith@That+1)& (0+255),b
 13393  0118B6  0EE5               	movlw	low STR_199
 13394  0118B8  0101               	movlb	1	; () banked
 13395  0118BA  6F7D               	movwf	StartsWith@That& (0+255),b
 13396  0118BC  EC4C  F0AE         	call	_StartsWith	;wreg free
 13397  0118C0  0900               	iorlw	0
 13398  0118C2  B4D8               	btfsc	status,2,c
 13399  0118C4  D2E8               	goto	l11754
 13400                           
 13401                           ;StringCommand.c: 506: {
 13402                           ;StringCommand.c: 507: if (!StringContains(Input, "?"))
 13403  0118C6  0101               	movlb	1	; () banked
 13404  0118C8  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 13405  0118CC  0101               	movlb	1	; () banked
 13406  0118CE  C1C0  F17B         	movff	Command@Input,StringContains@This
 13407  0118D2  0EFA               	movlw	high (STR_64+14)
 13408  0118D4  0101               	movlb	1	; () banked
 13409  0118D6  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 13410  0118D8  0EA6               	movlw	low (STR_64+14)
 13411  0118DA  0101               	movlb	1	; () banked
 13412  0118DC  6F7D               	movwf	StringContains@That& (0+255),b
 13413  0118DE  ECC9  F0B0         	call	_StringContains	;wreg free
 13414  0118E2  0900               	iorlw	0
 13415  0118E4  A4D8               	btfss	status,2,c
 13416  0118E6  D26E               	goto	l11742
 13417                           
 13418                           ;StringCommand.c: 508: {
 13419                           ;StringCommand.c: 509: if (StringContains(Input, "battery"))
 13420  0118E8  0101               	movlb	1	; () banked
 13421  0118EA  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 13422  0118EE  0101               	movlb	1	; () banked
 13423  0118F0  C1C0  F17B         	movff	Command@Input,StringContains@This
 13424  0118F4  0EFF               	movlw	high STR_201
 13425  0118F6  0101               	movlb	1	; () banked
 13426  0118F8  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 13427  0118FA  0E57               	movlw	low STR_201
 13428  0118FC  0101               	movlb	1	; () banked
 13429  0118FE  6F7D               	movwf	StringContains@That& (0+255),b
 13430  011900  ECC9  F0B0         	call	_StringContains	;wreg free
 13431  011904  0900               	iorlw	0
 13432  011906  B4D8               	btfsc	status,2,c
 13433  011908  D0DD               	goto	l11680
 13434                           
 13435                           ;StringCommand.c: 510: {
 13436                           ;StringCommand.c: 511: RTC_Battery_Value = (InternalADC_Read(2) + 8);
 13437  01190A  0E02               	movlw	2
 13438  01190C  ECD5  F0B2         	call	_InternalADC_Read
 13439  011910  0E08               	movlw	8
 13440  011912  0101               	movlb	1	; () banked
 13441  011914  2580               	addwf	?_InternalADC_Read& (0+255),w,b
 13442  011916  0105               	movlb	5	; () banked
 13443  011918  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
 13444  01191A  0E00               	movlw	0
 13445  01191C  0101               	movlb	1	; () banked
 13446  01191E  2181               	addwfc	(?_InternalADC_Read+1)& (0+255),w,b
 13447  011920  0105               	movlb	5	; () banked
 13448  011922  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
 13449                           
 13450                           ; BSR set to: 5
 13451                           ;StringCommand.c: 512: RTC_Battery_Value_HIGH_decimal = (unsigned int)(((float)RTC_Batte
      +                          ry_Value / 1024) * 5);
 13452  011924  0E00               	movlw	0
 13453  011926  0101               	movlb	1	; () banked
 13454  011928  6F99               	movwf	___ftmul@f2& (0+255),b
 13455  01192A  0EA0               	movlw	160
 13456  01192C  0101               	movlb	1	; () banked
 13457  01192E  6F9A               	movwf	(___ftmul@f2+1)& (0+255),b
 13458  011930  0E40               	movlw	64
 13459  011932  0101               	movlb	1	; () banked
 13460  011934  6F9B               	movwf	(___ftmul@f2+2)& (0+255),b
 13461  011936  0E00               	movlw	0
 13462  011938  0101               	movlb	1	; () banked
 13463  01193A  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13464  01193C  0E80               	movlw	128
 13465  01193E  0101               	movlb	1	; () banked
 13466  011940  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13467  011942  0E44               	movlw	68
 13468  011944  0101               	movlb	1	; () banked
 13469  011946  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13470  011948  C5CA  F183         	movff	Command@RTC_Battery_Value,___lwtoft@c
 13471  01194C  C5CB  F184         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 13472  011950  EC90  F0B5         	call	___lwtoft	;wreg free
 13473  011954  C183  F187         	movff	?___lwtoft,___ftdiv@f1
 13474  011958  C184  F188         	movff	?___lwtoft+1,___ftdiv@f1+1
 13475  01195C  C185  F189         	movff	?___lwtoft+2,___ftdiv@f1+2
 13476  011960  EC48  F0A5         	call	___ftdiv	;wreg free
 13477  011964  C187  F196         	movff	?___ftdiv,___ftmul@f1
 13478  011968  C188  F197         	movff	?___ftdiv+1,___ftmul@f1+1
 13479  01196C  C189  F198         	movff	?___ftdiv+2,___ftmul@f1+2
 13480  011970  EC8D  F0A4         	call	___ftmul	;wreg free
 13481  011974  C196  F1A5         	movff	?___ftmul,___fttol@f1
 13482  011978  C197  F1A6         	movff	?___ftmul+1,___fttol@f1+1
 13483  01197C  C198  F1A7         	movff	?___ftmul+2,___fttol@f1+2
 13484  011980  ECCF  F0A3         	call	___fttol	;wreg free
 13485  011984  C1A5  F1C2         	movff	?___fttol,??_Command
 13486  011988  C1A6  F1C3         	movff	?___fttol+1,??_Command+1
 13487  01198C  C1A7  F1C4         	movff	?___fttol+2,??_Command+2
 13488  011990  C1A8  F1C5         	movff	?___fttol+3,??_Command+3
 13489  011994  C1C2  F5CC         	movff	??_Command,Command@RTC_Battery_Value_HIGH_decimal
 13490  011998  C1C3  F5CD         	movff	??_Command+1,Command@RTC_Battery_Value_HIGH_decimal+1
 13491                           
 13492                           ;StringCommand.c: 513: RTC_Battery_Value_LOW_decimal = (unsigned int)((((float)RTC_Batte
      +                          ry_Value / 1024) * 500));
 13493  01199C  0E00               	movlw	0
 13494  01199E  0101               	movlb	1	; () banked
 13495  0119A0  6F99               	movwf	___ftmul@f2& (0+255),b
 13496  0119A2  0EFA               	movlw	250
 13497  0119A4  0101               	movlb	1	; () banked
 13498  0119A6  6F9A               	movwf	(___ftmul@f2+1)& (0+255),b
 13499  0119A8  0E43               	movlw	67
 13500  0119AA  0101               	movlb	1	; () banked
 13501  0119AC  6F9B               	movwf	(___ftmul@f2+2)& (0+255),b
 13502  0119AE  0E00               	movlw	0
 13503  0119B0  0101               	movlb	1	; () banked
 13504  0119B2  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13505  0119B4  0E80               	movlw	128
 13506  0119B6  0101               	movlb	1	; () banked
 13507  0119B8  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13508  0119BA  0E44               	movlw	68
 13509  0119BC  0101               	movlb	1	; () banked
 13510  0119BE  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13511  0119C0  C5CA  F183         	movff	Command@RTC_Battery_Value,___lwtoft@c
 13512  0119C4  C5CB  F184         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 13513  0119C8  EC90  F0B5         	call	___lwtoft	;wreg free
 13514  0119CC  C183  F187         	movff	?___lwtoft,___ftdiv@f1
 13515  0119D0  C184  F188         	movff	?___lwtoft+1,___ftdiv@f1+1
 13516  0119D4  C185  F189         	movff	?___lwtoft+2,___ftdiv@f1+2
 13517  0119D8  EC48  F0A5         	call	___ftdiv	;wreg free
 13518  0119DC  C187  F196         	movff	?___ftdiv,___ftmul@f1
 13519  0119E0  C188  F197         	movff	?___ftdiv+1,___ftmul@f1+1
 13520  0119E4  C189  F198         	movff	?___ftdiv+2,___ftmul@f1+2
 13521  0119E8  EC8D  F0A4         	call	___ftmul	;wreg free
 13522  0119EC  C196  F1A5         	movff	?___ftmul,___fttol@f1
 13523  0119F0  C197  F1A6         	movff	?___ftmul+1,___fttol@f1+1
 13524  0119F4  C198  F1A7         	movff	?___ftmul+2,___fttol@f1+2
 13525  0119F8  ECCF  F0A3         	call	___fttol	;wreg free
 13526  0119FC  C1A5  F1C2         	movff	?___fttol,??_Command
 13527  011A00  C1A6  F1C3         	movff	?___fttol+1,??_Command+1
 13528  011A04  C1A7  F1C4         	movff	?___fttol+2,??_Command+2
 13529  011A08  C1A8  F1C5         	movff	?___fttol+3,??_Command+3
 13530  011A0C  C1C2  F5CE         	movff	??_Command,Command@RTC_Battery_Value_LOW_decimal
 13531  011A10  C1C3  F5CF         	movff	??_Command+1,Command@RTC_Battery_Value_LOW_decimal+1
 13532                           
 13533                           ;StringCommand.c: 514: RTC_Battery_Value_LOW_decimal = RTC_Battery_Value_LOW_decimal % 1
      +                          00;
 13534  011A14  C5CE  F182         	movff	Command@RTC_Battery_Value_LOW_decimal,___lwmod@dividend
 13535  011A18  C5CF  F183         	movff	Command@RTC_Battery_Value_LOW_decimal+1,___lwmod@dividend+1
 13536  011A1C  0E00               	movlw	0
 13537  011A1E  0101               	movlb	1	; () banked
 13538  011A20  6F85               	movwf	(___lwmod@divisor+1)& (0+255),b
 13539  011A22  0E64               	movlw	100
 13540  011A24  0101               	movlb	1	; () banked
 13541  011A26  6F84               	movwf	___lwmod@divisor& (0+255),b
 13542  011A28  EC6D  F0B3         	call	___lwmod	;wreg free
 13543  011A2C  0101               	movlb	1	; () banked
 13544  011A2E  C182  F5CE         	movff	?___lwmod,Command@RTC_Battery_Value_LOW_decimal
 13545  011A32  0101               	movlb	1	; () banked
 13546  011A34  C183  F5CF         	movff	?___lwmod+1,Command@RTC_Battery_Value_LOW_decimal+1
 13547                           
 13548                           ; BSR set to: 1
 13549                           ;StringCommand.c: 515: sprintf(buf, " 3 Volt RTC Battery Voltage = %d.%d",
 13550                           ;StringCommand.c: 516: RTC_Battery_Value_HIGH_decimal, RTC_Battery_Value_LOW_decimal);
 13551  011A38  0105               	movlb	5	; () banked
 13552  011A3A  0E05               	movlw	high Command@buf
 13553  011A3C  0101               	movlb	1	; () banked
 13554  011A3E  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 13555  011A40  0105               	movlb	5	; () banked
 13556  011A42  0E00               	movlw	low Command@buf
 13557  011A44  0101               	movlb	1	; () banked
 13558  011A46  6F87               	movwf	sprintf@sp& (0+255),b
 13559  011A48  0EF4               	movlw	high STR_202
 13560  011A4A  0101               	movlb	1	; () banked
 13561  011A4C  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 13562  011A4E  0E04               	movlw	low STR_202
 13563  011A50  0101               	movlb	1	; () banked
 13564  011A52  6F89               	movwf	sprintf@f& (0+255),b
 13565  011A54  C5CC  F18B         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 13566  011A58  C5CD  F18C         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 13567  011A5C  C5CE  F18D         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 13568  011A60  C5CF  F18E         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 13569  011A64  EC31  F092         	call	_sprintf	;wreg free
 13570                           
 13571                           ;StringCommand.c: 517: UARTstring(buf);
 13572  011A68  0105               	movlb	5	; () banked
 13573  011A6A  0E05               	movlw	high Command@buf
 13574  011A6C  0101               	movlb	1	; () banked
 13575  011A6E  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13576  011A70  0105               	movlb	5	; () banked
 13577  011A72  0E00               	movlw	low Command@buf
 13578  011A74  0101               	movlb	1	; () banked
 13579  011A76  6F7C               	movwf	UARTstring@data& (0+255),b
 13580  011A78  ECB3  F0AD         	call	_UARTstring	;wreg free
 13581                           
 13582                           ;StringCommand.c: 518: sprintf(buf, "RTC Bty = %d.%d", RTC_Battery_Value_HIGH_decimal,
 13583                           ;StringCommand.c: 519: RTC_Battery_Value_LOW_decimal);
 13584  011A7C  0105               	movlb	5	; () banked
 13585  011A7E  0E05               	movlw	high Command@buf
 13586  011A80  0101               	movlb	1	; () banked
 13587  011A82  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 13588  011A84  0105               	movlb	5	; () banked
 13589  011A86  0E00               	movlw	low Command@buf
 13590  011A88  0101               	movlb	1	; () banked
 13591  011A8A  6F87               	movwf	sprintf@sp& (0+255),b
 13592  011A8C  0EFB               	movlw	high STR_203
 13593  011A8E  0101               	movlb	1	; () banked
 13594  011A90  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 13595  011A92  0E28               	movlw	low STR_203
 13596  011A94  0101               	movlb	1	; () banked
 13597  011A96  6F89               	movwf	sprintf@f& (0+255),b
 13598  011A98  C5CC  F18B         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 13599  011A9C  C5CD  F18C         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 13600  011AA0  C5CE  F18D         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 13601  011AA4  C5CF  F18E         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 13602  011AA8  EC31  F092         	call	_sprintf	;wreg free
 13603                           
 13604                           ;StringCommand.c: 520: LCDdisplayFeedback(buf);
 13605  011AAC  0105               	movlb	5	; () banked
 13606  011AAE  0E05               	movlw	high Command@buf
 13607  011AB0  0101               	movlb	1	; () banked
 13608  011AB2  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13609  011AB4  0105               	movlb	5	; () banked
 13610  011AB6  0E00               	movlw	low Command@buf
 13611  011AB8  0101               	movlb	1	; () banked
 13612  011ABA  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13613  011ABC  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 13614                           
 13615                           ;StringCommand.c: 521: }
 13616  011AC0  EF28  F092         	goto	l513
 13617  011AC4                     l11680:
 13618                           
 13619                           ;StringCommand.c: 522: else if(StringContains(Input, "read"))
 13620  011AC4  0101               	movlb	1	; () banked
 13621  011AC6  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 13622  011ACA  0101               	movlb	1	; () banked
 13623  011ACC  C1C0  F17B         	movff	Command@Input,StringContains@This
 13624  011AD0  0EFF               	movlw	high STR_204
 13625  011AD2  0101               	movlb	1	; () banked
 13626  011AD4  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 13627  011AD6  0EDC               	movlw	low STR_204
 13628  011AD8  0101               	movlb	1	; () banked
 13629  011ADA  6F7D               	movwf	StringContains@That& (0+255),b
 13630  011ADC  ECC9  F0B0         	call	_StringContains	;wreg free
 13631  011AE0  0900               	iorlw	0
 13632  011AE2  B4D8               	btfsc	status,2,c
 13633  011AE4  D0BA               	goto	l11712
 13634                           
 13635                           ;StringCommand.c: 523: {
 13636                           ;StringCommand.c: 524: if(!READ_RTC_TIME())
 13637  011AE6  EC1E  F0A9         	call	_READ_RTC_TIME	;wreg free
 13638  011AEA  0900               	iorlw	0
 13639  011AEC  A4D8               	btfss	status,2,c
 13640  011AEE  D09E               	goto	l11704
 13641                           
 13642                           ;StringCommand.c: 525: {
 13643                           ;StringCommand.c: 526: SprintDate(buf, NowTime, 0);
 13644  011AF0  0105               	movlb	5	; () banked
 13645  011AF2  0E05               	movlw	high Command@buf
 13646  011AF4  0101               	movlb	1	; () banked
 13647  011AF6  6FAF               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 13648  011AF8  0105               	movlb	5	; () banked
 13649  011AFA  0E00               	movlw	low Command@buf
 13650  011AFC  0101               	movlb	1	; () banked
 13651  011AFE  6FAE               	movwf	SprintDate@ReturnBuf& (0+255),b
 13652  011B00  EE21  F000         	lfsr	2,_NowTime
 13653  011B04  EE11  F0B0         	lfsr	1,SprintDate@DisplayTime
 13654  011B08  0E09               	movlw	9
 13655  011B0A                     u15021:
 13656  011B0A  CFDE FFE6          	movff	postinc2,postinc1
 13657  011B0E  2EE8               	decfsz	wreg,f,c
 13658  011B10  D7FC               	goto	u15021
 13659  011B12  0E00               	movlw	0
 13660  011B14  0101               	movlb	1	; () banked
 13661  011B16  6FB9               	movwf	SprintDate@Military& (0+255),b
 13662  011B18  EC21  F0A7         	call	_SprintDate	;wreg free
 13663                           
 13664                           ;StringCommand.c: 527: UARTstring(buf);
 13665  011B1C  0105               	movlb	5	; () banked
 13666  011B1E  0E05               	movlw	high Command@buf
 13667  011B20  0101               	movlb	1	; () banked
 13668  011B22  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13669  011B24  0105               	movlb	5	; () banked
 13670  011B26  0E00               	movlw	low Command@buf
 13671  011B28  0101               	movlb	1	; () banked
 13672  011B2A  6F7C               	movwf	UARTstring@data& (0+255),b
 13673  011B2C  ECB3  F0AD         	call	_UARTstring	;wreg free
 13674                           
 13675                           ;StringCommand.c: 528: UARTstring("\r\n");
 13676  011B30  0EF7               	movlw	high (STR_262+19)
 13677  011B32  0101               	movlb	1	; () banked
 13678  011B34  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13679  011B36  0EE2               	movlw	low (STR_262+19)
 13680  011B38  0101               	movlb	1	; () banked
 13681  011B3A  6F7C               	movwf	UARTstring@data& (0+255),b
 13682  011B3C  ECB3  F0AD         	call	_UARTstring	;wreg free
 13683                           
 13684                           ;StringCommand.c: 529: SetLCDcursor(0, 0);
 13685  011B40  0E00               	movlw	0
 13686  011B42  0101               	movlb	1	; () banked
 13687  011B44  6F89               	movwf	SetLCDcursor@Col& (0+255),b
 13688  011B46  0E00               	movlw	0
 13689  011B48  EC2D  F0B5         	call	_SetLCDcursor
 13690                           
 13691                           ;StringCommand.c: 530: LCDPrintString("RTC Time is:    ");
 13692  011B4C  0EF9               	movlw	high STR_206
 13693  011B4E  0101               	movlb	1	; () banked
 13694  011B50  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
 13695  011B52  0EDF               	movlw	low STR_206
 13696  011B54  0101               	movlb	1	; () banked
 13697  011B56  6F89               	movwf	LCDPrintString@Text& (0+255),b
 13698  011B58  EC46  F0B1         	call	_LCDPrintString	;wreg free
 13699                           
 13700                           ;StringCommand.c: 531: if(NowTime.HoursAM_PM)
 13701  011B5C  0101               	movlb	1	; () banked
 13702  011B5E  5104               	movf	(_NowTime+4)& (0+255),w,b
 13703  011B60  B4D8               	btfsc	status,2,c
 13704  011B62  D02A               	goto	l11698
 13705                           
 13706                           ; BSR set to: 1
 13707                           ;StringCommand.c: 532: {
 13708                           ;StringCommand.c: 533: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 13709  011B64  0105               	movlb	5	; () banked
 13710  011B66  0E05               	movlw	high Command@buf
 13711  011B68  0101               	movlb	1	; () banked
 13712  011B6A  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 13713  011B6C  0105               	movlb	5	; () banked
 13714  011B6E  0E00               	movlw	low Command@buf
 13715  011B70  0101               	movlb	1	; () banked
 13716  011B72  6F87               	movwf	sprintf@sp& (0+255),b
 13717  011B74  0EF7               	movlw	high STR_207
 13718  011B76  0101               	movlb	1	; () banked
 13719  011B78  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 13720  011B7A  0EB8               	movlw	low STR_207
 13721  011B7C  0101               	movlb	1	; () banked
 13722  011B7E  6F89               	movwf	sprintf@f& (0+255),b
 13723  011B80  0101               	movlb	1	; () banked
 13724  011B82  C107  F18B         	movff	_NowTime+7,?_sprintf+4
 13725  011B86  0101               	movlb	1	; () banked
 13726  011B88  6B8C               	clrf	(?_sprintf+5)& (0+255),b
 13727  011B8A  0101               	movlb	1	; () banked
 13728  011B8C  C106  F18D         	movff	_NowTime+6,?_sprintf+6
 13729  011B90  0101               	movlb	1	; () banked
 13730  011B92  6B8E               	clrf	(?_sprintf+7)& (0+255),b
 13731  011B94  0101               	movlb	1	; () banked
 13732  011B96  C102  F18F         	movff	_NowTime+2,?_sprintf+8
 13733  011B9A  0101               	movlb	1	; () banked
 13734  011B9C  6B90               	clrf	(?_sprintf+9)& (0+255),b
 13735  011B9E  0101               	movlb	1	; () banked
 13736  011BA0  C101  F191         	movff	_NowTime+1,?_sprintf+10
 13737  011BA4  0101               	movlb	1	; () banked
 13738  011BA6  6B92               	clrf	(?_sprintf+11)& (0+255),b
 13739  011BA8  0101               	movlb	1	; () banked
 13740  011BAA  C100  F193         	movff	_NowTime,?_sprintf+12
 13741  011BAE  0101               	movlb	1	; () banked
 13742  011BB0  6B94               	clrf	(?_sprintf+13)& (0+255),b
 13743  011BB2  EC31  F092         	call	_sprintf	;wreg free
 13744                           
 13745                           ;StringCommand.c: 534: }
 13746  011BB6  D029               	goto	l11700
 13747  011BB8                     l11698:
 13748                           
 13749                           ;StringCommand.c: 535: else
 13750                           ;StringCommand.c: 536: {
 13751                           ;StringCommand.c: 537: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 13752  011BB8  0105               	movlb	5	; () banked
 13753  011BBA  0E05               	movlw	high Command@buf
 13754  011BBC  0101               	movlb	1	; () banked
 13755  011BBE  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 13756  011BC0  0105               	movlb	5	; () banked
 13757  011BC2  0E00               	movlw	low Command@buf
 13758  011BC4  0101               	movlb	1	; () banked
 13759  011BC6  6F87               	movwf	sprintf@sp& (0+255),b
 13760  011BC8  0EF7               	movlw	high STR_208
 13761  011BCA  0101               	movlb	1	; () banked
 13762  011BCC  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 13763  011BCE  0EA1               	movlw	low STR_208
 13764  011BD0  0101               	movlb	1	; () banked
 13765  011BD2  6F89               	movwf	sprintf@f& (0+255),b
 13766  011BD4  0101               	movlb	1	; () banked
 13767  011BD6  C107  F18B         	movff	_NowTime+7,?_sprintf+4
 13768  011BDA  0101               	movlb	1	; () banked
 13769  011BDC  6B8C               	clrf	(?_sprintf+5)& (0+255),b
 13770  011BDE  0101               	movlb	1	; () banked
 13771  011BE0  C106  F18D         	movff	_NowTime+6,?_sprintf+6
 13772  011BE4  0101               	movlb	1	; () banked
 13773  011BE6  6B8E               	clrf	(?_sprintf+7)& (0+255),b
 13774  011BE8  0101               	movlb	1	; () banked
 13775  011BEA  C102  F18F         	movff	_NowTime+2,?_sprintf+8
 13776  011BEE  0101               	movlb	1	; () banked
 13777  011BF0  6B90               	clrf	(?_sprintf+9)& (0+255),b
 13778  011BF2  0101               	movlb	1	; () banked
 13779  011BF4  C101  F191         	movff	_NowTime+1,?_sprintf+10
 13780  011BF8  0101               	movlb	1	; () banked
 13781  011BFA  6B92               	clrf	(?_sprintf+11)& (0+255),b
 13782  011BFC  0101               	movlb	1	; () banked
 13783  011BFE  C100  F193         	movff	_NowTime,?_sprintf+12
 13784  011C02  0101               	movlb	1	; () banked
 13785  011C04  6B94               	clrf	(?_sprintf+13)& (0+255),b
 13786  011C06  EC31  F092         	call	_sprintf	;wreg free
 13787  011C0A                     l11700:
 13788                           
 13789                           ;StringCommand.c: 538: }
 13790                           ;StringCommand.c: 539: SetLCDcursor(1, 0);
 13791  011C0A  0E00               	movlw	0
 13792  011C0C  0101               	movlb	1	; () banked
 13793  011C0E  6F89               	movwf	SetLCDcursor@Col& (0+255),b
 13794  011C10  0E01               	movlw	1
 13795  011C12  EC2D  F0B5         	call	_SetLCDcursor
 13796                           
 13797                           ;StringCommand.c: 540: LCDPrintString(buf);
 13798  011C16  0105               	movlb	5	; () banked
 13799  011C18  0E05               	movlw	high Command@buf
 13800  011C1A  0101               	movlb	1	; () banked
 13801  011C1C  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
 13802  011C1E  0105               	movlb	5	; () banked
 13803  011C20  0E00               	movlw	low Command@buf
 13804  011C22  0101               	movlb	1	; () banked
 13805  011C24  6F89               	movwf	LCDPrintString@Text& (0+255),b
 13806  011C26  EC46  F0B1         	call	_LCDPrintString	;wreg free
 13807                           
 13808                           ;StringCommand.c: 541: }
 13809  011C2A  D3F5               	goto	l11840
 13810  011C2C                     l11704:
 13811                           
 13812                           ;StringCommand.c: 542: else
 13813                           ;StringCommand.c: 543: {
 13814                           ;StringCommand.c: 544: UARTstring("ERROR: Can't Read RTC\r\n");
 13815  011C2C  0EF7               	movlw	high STR_209
 13816  011C2E  0101               	movlb	1	; () banked
 13817  011C30  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13818  011C32  0E5A               	movlw	low STR_209
 13819  011C34  0101               	movlb	1	; () banked
 13820  011C36  6F7C               	movwf	UARTstring@data& (0+255),b
 13821  011C38  ECB3  F0AD         	call	_UARTstring	;wreg free
 13822                           
 13823                           ;StringCommand.c: 545: SetLCDcursor(1, 0);
 13824  011C3C  0E00               	movlw	0
 13825  011C3E  0101               	movlb	1	; () banked
 13826  011C40  6F89               	movwf	SetLCDcursor@Col& (0+255),b
 13827  011C42  0E01               	movlw	1
 13828  011C44  EC2D  F0B5         	call	_SetLCDcursor
 13829                           
 13830                           ;StringCommand.c: 546: LCDPrintString("RTC isnt working");
 13831  011C48  0EFA               	movlw	high STR_210
 13832  011C4A  0101               	movlb	1	; () banked
 13833  011C4C  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
 13834  011C4E  0E01               	movlw	low STR_210
 13835  011C50  0101               	movlb	1	; () banked
 13836  011C52  6F89               	movwf	LCDPrintString@Text& (0+255),b
 13837  011C54  EC46  F0B1         	call	_LCDPrintString	;wreg free
 13838  011C58  D3DE               	goto	l11840
 13839  011C5A                     l11712:
 13840                           
 13841                           ;StringCommand.c: 550: else if(StringContains(Input, "set"))
 13842  011C5A  0101               	movlb	1	; () banked
 13843  011C5C  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 13844  011C60  0101               	movlb	1	; () banked
 13845  011C62  C1C0  F17B         	movff	Command@Input,StringContains@This
 13846  011C66  0EFF               	movlw	high STR_211
 13847  011C68  0101               	movlb	1	; () banked
 13848  011C6A  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 13849  011C6C  0EF9               	movlw	low STR_211
 13850  011C6E  0101               	movlb	1	; () banked
 13851  011C70  6F7D               	movwf	StringContains@That& (0+255),b
 13852  011C72  ECC9  F0B0         	call	_StringContains	;wreg free
 13853  011C76  0900               	iorlw	0
 13854  011C78  B4D8               	btfsc	status,2,c
 13855  011C7A  D09B               	goto	l11740
 13856                           
 13857                           ;StringCommand.c: 551: {
 13858                           ;StringCommand.c: 552: UARTstring("Enter Time MM/DD/YY HH:MM:SS AM or\r\n");
 13859  011C7C  0EF3               	movlw	high STR_212
 13860  011C7E  0101               	movlb	1	; () banked
 13861  011C80  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13862  011C82  0EDF               	movlw	low STR_212
 13863  011C84  0101               	movlb	1	; () banked
 13864  011C86  6F7C               	movwf	UARTstring@data& (0+255),b
 13865  011C88  ECB3  F0AD         	call	_UARTstring	;wreg free
 13866                           
 13867                           ;StringCommand.c: 553: UARTstring("Enter Time MM/DD/YY HH:MM:SS PM\r\n");
 13868  011C8C  0EF4               	movlw	high STR_213
 13869  011C8E  0101               	movlb	1	; () banked
 13870  011C90  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13871  011C92  0E6E               	movlw	low STR_213
 13872  011C94  0101               	movlb	1	; () banked
 13873  011C96  6F7C               	movwf	UARTstring@data& (0+255),b
 13874  011C98  ECB3  F0AD         	call	_UARTstring	;wreg free
 13875                           
 13876                           ;StringCommand.c: 554: cleanBuffer(Input, 100);
 13877  011C9C  0101               	movlb	1	; () banked
 13878  011C9E  C1C1  F17C         	movff	Command@Input+1,cleanBuffer@data+1
 13879  011CA2  0101               	movlb	1	; () banked
 13880  011CA4  C1C0  F17B         	movff	Command@Input,cleanBuffer@data
 13881  011CA8  0E00               	movlw	0
 13882  011CAA  0101               	movlb	1	; () banked
 13883  011CAC  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
 13884  011CAE  0E64               	movlw	100
 13885  011CB0  0101               	movlb	1	; () banked
 13886  011CB2  6F7D               	movwf	cleanBuffer@count& (0+255),b
 13887  011CB4  ECCC  F0B3         	call	_cleanBuffer	;wreg free
 13888                           
 13889                           ;StringCommand.c: 555: UARTstring(">");
 13890  011CB8  0EF5               	movlw	high (STR_16+27)
 13891  011CBA  0101               	movlb	1	; () banked
 13892  011CBC  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13893  011CBE  0EE5               	movlw	low (STR_16+27)
 13894  011CC0  0101               	movlb	1	; () banked
 13895  011CC2  6F7C               	movwf	UARTstring@data& (0+255),b
 13896  011CC4  ECB3  F0AD         	call	_UARTstring	;wreg free
 13897  011CC8                     l11720:
 13898                           
 13899                           ;StringCommand.c: 557: {
 13900                           ;StringCommand.c: 558: if(Input[0] != 0)
 13901  011CC8  C1C0  FFD9         	movff	Command@Input,fsr2l
 13902  011CCC  C1C1  FFDA         	movff	Command@Input+1,fsr2h
 13903  011CD0  50DF               	movf	indf2,w,c
 13904  011CD2  B4D8               	btfsc	status,2,c
 13905  011CD4  D7F9               	goto	l11720
 13906                           
 13907                           ;StringCommand.c: 559: {
 13908                           ;StringCommand.c: 560: lowercase(Input);
 13909  011CD6  0101               	movlb	1	; () banked
 13910  011CD8  C1C1  F17C         	movff	Command@Input+1,lowercase@Input+1
 13911  011CDC  0101               	movlb	1	; () banked
 13912  011CDE  C1C0  F17B         	movff	Command@Input,lowercase@Input
 13913  011CE2  EC72  F0AF         	call	_lowercase	;wreg free
 13914                           
 13915                           ;StringCommand.c: 561: if(Parse_Time(Input))
 13916  011CE6  0101               	movlb	1	; () banked
 13917  011CE8  C1C1  F17C         	movff	Command@Input+1,Parse_Time@This+1
 13918  011CEC  0101               	movlb	1	; () banked
 13919  011CEE  C1C0  F17B         	movff	Command@Input,Parse_Time@This
 13920  011CF2  EC6B  F09A         	call	_Parse_Time	;wreg free
 13921  011CF6  0900               	iorlw	0
 13922  011CF8  B4D8               	btfsc	status,2,c
 13923  011CFA  D04A               	goto	l11738
 13924                           
 13925                           ;StringCommand.c: 562: {
 13926                           ;StringCommand.c: 563: if(!SET_RTC_TIME(NowTime))
 13927  011CFC  EE21  F000         	lfsr	2,_NowTime
 13928  011D00  EE11  F083         	lfsr	1,SET_RTC_TIME@SetTime
 13929  011D04  0E09               	movlw	9
 13930  011D06                     u15071:
 13931  011D06  CFDE FFE6          	movff	postinc2,postinc1
 13932  011D0A  2EE8               	decfsz	wreg,f,c
 13933  011D0C  D7FC               	goto	u15071
 13934  011D0E  ECD6  F09E         	call	_SET_RTC_TIME	;wreg free
 13935  011D12  0900               	iorlw	0
 13936  011D14  A4D8               	btfss	status,2,c
 13937  011D16  D033               	goto	l11736
 13938                           
 13939                           ;StringCommand.c: 564: {
 13940                           ;StringCommand.c: 565: UARTstring("\r\nTime Set Successfully\r\n");
 13941  011D18  0EF6               	movlw	high STR_215
 13942  011D1A  0101               	movlb	1	; () banked
 13943  011D1C  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13944  011D1E  0EDD               	movlw	low STR_215
 13945  011D20  0101               	movlb	1	; () banked
 13946  011D22  6F7C               	movwf	UARTstring@data& (0+255),b
 13947  011D24  ECB3  F0AD         	call	_UARTstring	;wreg free
 13948                           
 13949                           ;StringCommand.c: 566: READ_RTC_TIME();
 13950  011D28  EC1E  F0A9         	call	_READ_RTC_TIME	;wreg free
 13951                           
 13952                           ;StringCommand.c: 567: SprintDate(buf, NowTime, 0);
 13953  011D2C  0105               	movlb	5	; () banked
 13954  011D2E  0E05               	movlw	high Command@buf
 13955  011D30  0101               	movlb	1	; () banked
 13956  011D32  6FAF               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 13957  011D34  0105               	movlb	5	; () banked
 13958  011D36  0E00               	movlw	low Command@buf
 13959  011D38  0101               	movlb	1	; () banked
 13960  011D3A  6FAE               	movwf	SprintDate@ReturnBuf& (0+255),b
 13961  011D3C  EE21  F000         	lfsr	2,_NowTime
 13962  011D40  EE11  F0B0         	lfsr	1,SprintDate@DisplayTime
 13963  011D44  0E09               	movlw	9
 13964  011D46                     u15091:
 13965  011D46  CFDE FFE6          	movff	postinc2,postinc1
 13966  011D4A  2EE8               	decfsz	wreg,f,c
 13967  011D4C  D7FC               	goto	u15091
 13968  011D4E  0E00               	movlw	0
 13969  011D50  0101               	movlb	1	; () banked
 13970  011D52  6FB9               	movwf	SprintDate@Military& (0+255),b
 13971  011D54  EC21  F0A7         	call	_SprintDate	;wreg free
 13972                           
 13973                           ;StringCommand.c: 568: UARTstring(buf);
 13974  011D58  0105               	movlb	5	; () banked
 13975  011D5A  0E05               	movlw	high Command@buf
 13976  011D5C  0101               	movlb	1	; () banked
 13977  011D5E  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13978  011D60  0105               	movlb	5	; () banked
 13979  011D62  0E00               	movlw	low Command@buf
 13980  011D64  0101               	movlb	1	; () banked
 13981  011D66  6F7C               	movwf	UARTstring@data& (0+255),b
 13982  011D68  ECB3  F0AD         	call	_UARTstring	;wreg free
 13983                           
 13984                           ;StringCommand.c: 569: UARTstring("\r\n");
 13985  011D6C  0EF7               	movlw	high (STR_262+19)
 13986  011D6E  0101               	movlb	1	; () banked
 13987  011D70  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 13988  011D72  0EE2               	movlw	low (STR_262+19)
 13989  011D74  0101               	movlb	1	; () banked
 13990  011D76  6F7C               	movwf	UARTstring@data& (0+255),b
 13991  011D78  ECB3  F0AD         	call	_UARTstring	;wreg free
 13992                           
 13993                           ;StringCommand.c: 570: }
 13994  011D7C  D369               	goto	l513
 13995  011D7E                     l11736:
 13996                           
 13997                           ;StringCommand.c: 571: else
 13998                           ;StringCommand.c: 572: {
 13999                           ;StringCommand.c: 573: UARTstring("\r\nTime Not Set Successfully");
 14000  011D7E  0EF6               	movlw	high STR_217
 14001  011D80  0101               	movlb	1	; () banked
 14002  011D82  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14003  011D84  0E57               	movlw	low STR_217
 14004  011D86  0101               	movlb	1	; () banked
 14005  011D88  6F7C               	movwf	UARTstring@data& (0+255),b
 14006  011D8A  ECB3  F0AD         	call	_UARTstring	;wreg free
 14007  011D8E  D360               	goto	l513
 14008  011D90                     l11738:
 14009                           
 14010                           ;StringCommand.c: 576: else
 14011                           ;StringCommand.c: 577: {
 14012                           ;StringCommand.c: 578: UARTstring("\r\nInvalid Time Entered\r\n");
 14013  011D90  0EF7               	movlw	high STR_218
 14014  011D92  0101               	movlb	1	; () banked
 14015  011D94  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14016  011D96  0E10               	movlw	low STR_218
 14017  011D98  0101               	movlb	1	; () banked
 14018  011D9A  6F7C               	movwf	UARTstring@data& (0+255),b
 14019  011D9C  ECB3  F0AD         	call	_UARTstring	;wreg free
 14020                           
 14021                           ;StringCommand.c: 579: UARTstring("Format is MM/DD/YY HH:MM:SS AM\r\n");
 14022  011DA0  0EF4               	movlw	high STR_219
 14023  011DA2  0101               	movlb	1	; () banked
 14024  011DA4  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14025  011DA6  0EB1               	movlw	low STR_219
 14026  011DA8  0101               	movlb	1	; () banked
 14027  011DAA  6F7C               	movwf	UARTstring@data& (0+255),b
 14028  011DAC  ECB3  F0AD         	call	_UARTstring	;wreg free
 14029  011DB0  D34F               	goto	l513
 14030  011DB2                     l11740:
 14031                           
 14032                           ;StringCommand.c: 585: else
 14033                           ;StringCommand.c: 586: {
 14034                           ;StringCommand.c: 587: UARTstring("RTC What???\n");
 14035  011DB2  0EFD               	movlw	high STR_220
 14036  011DB4  0101               	movlb	1	; () banked
 14037  011DB6  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14038  011DB8  0E40               	movlw	low STR_220
 14039  011DBA  0101               	movlb	1	; () banked
 14040  011DBC  6F7C               	movwf	UARTstring@data& (0+255),b
 14041  011DBE  ECB3  F0AD         	call	_UARTstring	;wreg free
 14042  011DC2  D346               	goto	l513
 14043  011DC4                     l11742:
 14044                           
 14045                           ;StringCommand.c: 590: else
 14046                           ;StringCommand.c: 591: {
 14047                           ;StringCommand.c: 592: UARTstring("Real Time Clock Help Menu\r\n\n");
 14048  011DC4  0EF5               	movlw	high STR_221
 14049  011DC6  0101               	movlb	1	; () banked
 14050  011DC8  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14051  011DCA  0E90               	movlw	low STR_221
 14052  011DCC  0101               	movlb	1	; () banked
 14053  011DCE  6F7C               	movwf	UARTstring@data& (0+255),b
 14054  011DD0  ECB3  F0AD         	call	_UARTstring	;wreg free
 14055                           
 14056                           ;StringCommand.c: 593: UARTstring("Actions:\r\n");
 14057  011DD4  0EFD               	movlw	high STR_222
 14058  011DD6  0101               	movlb	1	; () banked
 14059  011DD8  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14060  011DDA  0EFC               	movlw	low STR_222
 14061  011DDC  0101               	movlb	1	; () banked
 14062  011DDE  6F7C               	movwf	UARTstring@data& (0+255),b
 14063  011DE0  ECB3  F0AD         	call	_UARTstring	;wreg free
 14064                           
 14065                           ;StringCommand.c: 594: UARTstring("Battery\r\n");
 14066  011DE4  0EFE               	movlw	high STR_223
 14067  011DE6  0101               	movlb	1	; () banked
 14068  011DE8  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14069  011DEA  0E47               	movlw	low STR_223
 14070  011DEC  0101               	movlb	1	; () banked
 14071  011DEE  6F7C               	movwf	UARTstring@data& (0+255),b
 14072  011DF0  ECB3  F0AD         	call	_UARTstring	;wreg free
 14073                           
 14074                           ;StringCommand.c: 595: UARTstring("Read\r\n");
 14075  011DF4  0EFF               	movlw	high STR_224
 14076  011DF6  0101               	movlb	1	; () banked
 14077  011DF8  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14078  011DFA  0E7B               	movlw	low STR_224
 14079  011DFC  0101               	movlb	1	; () banked
 14080  011DFE  6F7C               	movwf	UARTstring@data& (0+255),b
 14081  011E00  ECB3  F0AD         	call	_UARTstring	;wreg free
 14082                           
 14083                           ;StringCommand.c: 596: UARTstring("Set\r\n\n");
 14084  011E04  0EFF               	movlw	high STR_225
 14085  011E06  0101               	movlb	1	; () banked
 14086  011E08  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14087  011E0A  0E6D               	movlw	low STR_225
 14088  011E0C  0101               	movlb	1	; () banked
 14089  011E0E  6F7C               	movwf	UARTstring@data& (0+255),b
 14090  011E10  ECB3  F0AD         	call	_UARTstring	;wreg free
 14091                           
 14092                           ;StringCommand.c: 597: UARTstring("To command the RTC, type the action\r\n followed by"
 14093                           ;StringCommand.c: 598: " the parameters \r\n\n");
 14094  011E14  0EF1               	movlw	high STR_226
 14095  011E16  0101               	movlb	1	; () banked
 14096  011E18  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14097  011E1A  0E1A               	movlw	low STR_226
 14098  011E1C  0101               	movlb	1	; () banked
 14099  011E1E  6F7C               	movwf	UARTstring@data& (0+255),b
 14100  011E20  ECB3  F0AD         	call	_UARTstring	;wreg free
 14101                           
 14102                           ;StringCommand.c: 599: UARTstring("further sub menus available by entering the action an
      +                          d a '?'");
 14103  011E24  0EF2               	movlw	high STR_227
 14104  011E26  0101               	movlb	1	; () banked
 14105  011E28  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14106  011E2A  0E23               	movlw	low STR_227
 14107  011E2C  0101               	movlb	1	; () banked
 14108  011E2E  6F7C               	movwf	UARTstring@data& (0+255),b
 14109  011E30  ECB3  F0AD         	call	_UARTstring	;wreg free
 14110                           
 14111                           ;StringCommand.c: 600: UARTstring("i.e. RTC Set Time?\r\n");
 14112  011E34  0EF8               	movlw	high STR_228
 14113  011E36  0101               	movlb	1	; () banked
 14114  011E38  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14115  011E3A  0E26               	movlw	low STR_228
 14116  011E3C  0101               	movlb	1	; () banked
 14117  011E3E  6F7C               	movwf	UARTstring@data& (0+255),b
 14118  011E40  ECB3  F0AD         	call	_UARTstring	;wreg free
 14119                           
 14120                           ;StringCommand.c: 601: LCD_Scroll("RTC Menu");
 14121  011E44  0EFE               	movlw	high STR_229
 14122  011E46  0101               	movlb	1	; () banked
 14123  011E48  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14124  011E4A  0EFC               	movlw	low STR_229
 14125  011E4C  0101               	movlb	1	; () banked
 14126  011E4E  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14127  011E50  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14128                           
 14129                           ;StringCommand.c: 602: LCD_Scroll("Commands:");
 14130  011E54  0EFE               	movlw	high STR_159
 14131  011E56  0101               	movlb	1	; () banked
 14132  011E58  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14133  011E5A  0E65               	movlw	low STR_159
 14134  011E5C  0101               	movlb	1	; () banked
 14135  011E5E  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14136  011E60  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14137                           
 14138                           ;StringCommand.c: 603: LCD_Scroll("Battery");
 14139  011E64  0EFF               	movlw	high STR_231
 14140  011E66  0101               	movlb	1	; () banked
 14141  011E68  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14142  011E6A  0E4F               	movlw	low STR_231
 14143  011E6C  0101               	movlb	1	; () banked
 14144  011E6E  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14145  011E70  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14146                           
 14147                           ;StringCommand.c: 604: LCD_Scroll("Read");
 14148  011E74  0EFF               	movlw	high STR_232
 14149  011E76  0101               	movlb	1	; () banked
 14150  011E78  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14151  011E7A  0ED7               	movlw	low STR_232
 14152  011E7C  0101               	movlb	1	; () banked
 14153  011E7E  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14154  011E80  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14155                           
 14156                           ;StringCommand.c: 605: LCD_Scroll("Set");
 14157  011E84  0EFF               	movlw	high STR_233
 14158  011E86  0101               	movlb	1	; () banked
 14159  011E88  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14160  011E8A  0EF5               	movlw	low STR_233
 14161  011E8C  0101               	movlb	1	; () banked
 14162  011E8E  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14163  011E90  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14164  011E94  D2DD               	goto	l513
 14165  011E96                     l11754:
 14166                           
 14167                           ;StringCommand.c: 610: else if (StartsWith(Input, "joe"))
 14168  011E96  0101               	movlb	1	; () banked
 14169  011E98  C1C1  F17C         	movff	Command@Input+1,StartsWith@This+1
 14170  011E9C  0101               	movlb	1	; () banked
 14171  011E9E  C1C0  F17B         	movff	Command@Input,StartsWith@This
 14172  011EA2  0EFF               	movlw	high STR_234
 14173  011EA4  0101               	movlb	1	; () banked
 14174  011EA6  6F7E               	movwf	(StartsWith@That+1)& (0+255),b
 14175  011EA8  0EE9               	movlw	low STR_234
 14176  011EAA  0101               	movlb	1	; () banked
 14177  011EAC  6F7D               	movwf	StartsWith@That& (0+255),b
 14178  011EAE  EC4C  F0AE         	call	_StartsWith	;wreg free
 14179  011EB2  0900               	iorlw	0
 14180  011EB4  B4D8               	btfsc	status,2,c
 14181  011EB6  D14D               	goto	l11792
 14182                           
 14183                           ;StringCommand.c: 611: {
 14184                           ;StringCommand.c: 612: if (!StringContains(Input, "?"))
 14185  011EB8  0101               	movlb	1	; () banked
 14186  011EBA  C1C1  F17C         	movff	Command@Input+1,StringContains@This+1
 14187  011EBE  0101               	movlb	1	; () banked
 14188  011EC0  C1C0  F17B         	movff	Command@Input,StringContains@This
 14189  011EC4  0EFA               	movlw	high (STR_64+14)
 14190  011EC6  0101               	movlb	1	; () banked
 14191  011EC8  6F7E               	movwf	(StringContains@That+1)& (0+255),b
 14192  011ECA  0EA6               	movlw	low (STR_64+14)
 14193  011ECC  0101               	movlb	1	; () banked
 14194  011ECE  6F7D               	movwf	StringContains@That& (0+255),b
 14195  011ED0  ECC9  F0B0         	call	_StringContains	;wreg free
 14196  011ED4  0900               	iorlw	0
 14197  011ED6  A4D8               	btfss	status,2,c
 14198  011ED8  D0FB               	goto	l11784
 14199                           
 14200                           ;StringCommand.c: 613: {
 14201                           ;StringCommand.c: 614: if (StringMatch(Input, "joesroomlight=on"))
 14202  011EDA  0101               	movlb	1	; () banked
 14203  011EDC  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 14204  011EE0  0101               	movlb	1	; () banked
 14205  011EE2  C1C0  F17B         	movff	Command@Input,StringMatch@This
 14206  011EE6  0EFA               	movlw	high STR_236
 14207  011EE8  0101               	movlb	1	; () banked
 14208  011EEA  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 14209  011EEC  0E34               	movlw	low STR_236
 14210  011EEE  0101               	movlb	1	; () banked
 14211  011EF0  6F7D               	movwf	StringMatch@That& (0+255),b
 14212  011EF2  EC08  F0B1         	call	_StringMatch	;wreg free
 14213  011EF6  0900               	iorlw	0
 14214  011EF8  B4D8               	btfsc	status,2,c
 14215  011EFA  D064               	goto	l11770
 14216                           
 14217                           ;StringCommand.c: 615: {
 14218                           ;StringCommand.c: 616: INTCONbits.GIE = 0;
 14219  011EFC  9EF2               	bcf	intcon,7,c	;volatile
 14220                           
 14221                           ;StringCommand.c: 617: Send_Config2(0b00000001, SubLightON);
 14222  011EFE  0EF0               	movlw	high _SubLightON
 14223  011F00  0101               	movlb	1	; () banked
 14224  011F02  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14225  011F04  0E7D               	movlw	low _SubLightON
 14226  011F06  0101               	movlb	1	; () banked
 14227  011F08  6F86               	movwf	Send_Config2@data& (0+255),b
 14228  011F0A  0E01               	movlw	1
 14229  011F0C  ECFF  F0AF         	call	_Send_Config2
 14230                           
 14231                           ;StringCommand.c: 618: Send_Config2(0b00000001, SubLightON);
 14232  011F10  0EF0               	movlw	high _SubLightON
 14233  011F12  0101               	movlb	1	; () banked
 14234  011F14  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14235  011F16  0E7D               	movlw	low _SubLightON
 14236  011F18  0101               	movlb	1	; () banked
 14237  011F1A  6F86               	movwf	Send_Config2@data& (0+255),b
 14238  011F1C  0E01               	movlw	1
 14239  011F1E  ECFF  F0AF         	call	_Send_Config2
 14240                           
 14241                           ;StringCommand.c: 619: Send_Config2(0b00000001, SubLightON);
 14242  011F22  0EF0               	movlw	high _SubLightON
 14243  011F24  0101               	movlb	1	; () banked
 14244  011F26  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14245  011F28  0E7D               	movlw	low _SubLightON
 14246  011F2A  0101               	movlb	1	; () banked
 14247  011F2C  6F86               	movwf	Send_Config2@data& (0+255),b
 14248  011F2E  0E01               	movlw	1
 14249  011F30  ECFF  F0AF         	call	_Send_Config2
 14250                           
 14251                           ;StringCommand.c: 620: Send_Config2(0b00000001, SubLightON);
 14252  011F34  0EF0               	movlw	high _SubLightON
 14253  011F36  0101               	movlb	1	; () banked
 14254  011F38  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14255  011F3A  0E7D               	movlw	low _SubLightON
 14256  011F3C  0101               	movlb	1	; () banked
 14257  011F3E  6F86               	movwf	Send_Config2@data& (0+255),b
 14258  011F40  0E01               	movlw	1
 14259  011F42  ECFF  F0AF         	call	_Send_Config2
 14260                           
 14261                           ;StringCommand.c: 621: Send_Config2(0b00000001, SubLightON);
 14262  011F46  0EF0               	movlw	high _SubLightON
 14263  011F48  0101               	movlb	1	; () banked
 14264  011F4A  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14265  011F4C  0E7D               	movlw	low _SubLightON
 14266  011F4E  0101               	movlb	1	; () banked
 14267  011F50  6F86               	movwf	Send_Config2@data& (0+255),b
 14268  011F52  0E01               	movlw	1
 14269  011F54  ECFF  F0AF         	call	_Send_Config2
 14270                           
 14271                           ;StringCommand.c: 622: Send_Config2(0b00000001, SubLightON);
 14272  011F58  0EF0               	movlw	high _SubLightON
 14273  011F5A  0101               	movlb	1	; () banked
 14274  011F5C  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14275  011F5E  0E7D               	movlw	low _SubLightON
 14276  011F60  0101               	movlb	1	; () banked
 14277  011F62  6F86               	movwf	Send_Config2@data& (0+255),b
 14278  011F64  0E01               	movlw	1
 14279  011F66  ECFF  F0AF         	call	_Send_Config2
 14280                           
 14281                           ;StringCommand.c: 623: Send_Config2(0b00000001, SubLightON);
 14282  011F6A  0EF0               	movlw	high _SubLightON
 14283  011F6C  0101               	movlb	1	; () banked
 14284  011F6E  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14285  011F70  0E7D               	movlw	low _SubLightON
 14286  011F72  0101               	movlb	1	; () banked
 14287  011F74  6F86               	movwf	Send_Config2@data& (0+255),b
 14288  011F76  0E01               	movlw	1
 14289  011F78  ECFF  F0AF         	call	_Send_Config2
 14290                           
 14291                           ;StringCommand.c: 624: Send_Config2(0b00000001, SubLightON);
 14292  011F7C  0EF0               	movlw	high _SubLightON
 14293  011F7E  0101               	movlb	1	; () banked
 14294  011F80  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14295  011F82  0E7D               	movlw	low _SubLightON
 14296  011F84  0101               	movlb	1	; () banked
 14297  011F86  6F86               	movwf	Send_Config2@data& (0+255),b
 14298  011F88  0E01               	movlw	1
 14299  011F8A  ECFF  F0AF         	call	_Send_Config2
 14300                           
 14301                           ;StringCommand.c: 625: Send_Config2(0b00000001, SubLightON);
 14302  011F8E  0EF0               	movlw	high _SubLightON
 14303  011F90  0101               	movlb	1	; () banked
 14304  011F92  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14305  011F94  0E7D               	movlw	low _SubLightON
 14306  011F96  0101               	movlb	1	; () banked
 14307  011F98  6F86               	movwf	Send_Config2@data& (0+255),b
 14308  011F9A  0E01               	movlw	1
 14309  011F9C  ECFF  F0AF         	call	_Send_Config2
 14310                           
 14311                           ;StringCommand.c: 626: INTCONbits.GIE = 1;
 14312  011FA0  8EF2               	bsf	intcon,7,c	;volatile
 14313                           
 14314                           ;StringCommand.c: 627: UARTstring("Joe's room light On");
 14315  011FA2  0EF8               	movlw	high STR_237
 14316  011FA4  0101               	movlb	1	; () banked
 14317  011FA6  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14318  011FA8  0E77               	movlw	low STR_237
 14319  011FAA  0101               	movlb	1	; () banked
 14320  011FAC  6F7C               	movwf	UARTstring@data& (0+255),b
 14321  011FAE  ECB3  F0AD         	call	_UARTstring	;wreg free
 14322                           
 14323                           ;StringCommand.c: 628: LCDdisplayFeedback("Joe room lt On");
 14324  011FB2  0EFC               	movlw	high STR_238
 14325  011FB4  0101               	movlb	1	; () banked
 14326  011FB6  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14327  011FB8  0E5E               	movlw	low STR_238
 14328  011FBA  0101               	movlb	1	; () banked
 14329  011FBC  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14330  011FBE  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 14331                           
 14332                           ;StringCommand.c: 629: }
 14333  011FC2  D246               	goto	l513
 14334  011FC4                     l11770:
 14335                           
 14336                           ;StringCommand.c: 630: else if (StringMatch(Input, "joesroomlight=off"))
 14337  011FC4  0101               	movlb	1	; () banked
 14338  011FC6  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 14339  011FCA  0101               	movlb	1	; () banked
 14340  011FCC  C1C0  F17B         	movff	Command@Input,StringMatch@This
 14341  011FD0  0EF9               	movlw	high STR_239
 14342  011FD2  0101               	movlb	1	; () banked
 14343  011FD4  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 14344  011FD6  0E32               	movlw	low STR_239
 14345  011FD8  0101               	movlb	1	; () banked
 14346  011FDA  6F7D               	movwf	StringMatch@That& (0+255),b
 14347  011FDC  EC08  F0B1         	call	_StringMatch	;wreg free
 14348  011FE0  0900               	iorlw	0
 14349  011FE2  B4D8               	btfsc	status,2,c
 14350  011FE4  D064               	goto	l11782
 14351                           
 14352                           ;StringCommand.c: 631: {
 14353                           ;StringCommand.c: 632: INTCONbits.GIE = 0;
 14354  011FE6  9EF2               	bcf	intcon,7,c	;volatile
 14355                           
 14356                           ;StringCommand.c: 633: Send_Config2(0b00000001, SubLightOFF);
 14357  011FE8  0EF0               	movlw	high _SubLightOFF
 14358  011FEA  0101               	movlb	1	; () banked
 14359  011FEC  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14360  011FEE  0E6D               	movlw	low _SubLightOFF
 14361  011FF0  0101               	movlb	1	; () banked
 14362  011FF2  6F86               	movwf	Send_Config2@data& (0+255),b
 14363  011FF4  0E01               	movlw	1
 14364  011FF6  ECFF  F0AF         	call	_Send_Config2
 14365                           
 14366                           ;StringCommand.c: 634: Send_Config2(0b00000001, SubLightOFF);
 14367  011FFA  0EF0               	movlw	high _SubLightOFF
 14368  011FFC  0101               	movlb	1	; () banked
 14369  011FFE  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14370  012000  0E6D               	movlw	low _SubLightOFF
 14371  012002  0101               	movlb	1	; () banked
 14372  012004  6F86               	movwf	Send_Config2@data& (0+255),b
 14373  012006  0E01               	movlw	1
 14374  012008  ECFF  F0AF         	call	_Send_Config2
 14375                           
 14376                           ;StringCommand.c: 635: Send_Config2(0b00000001, SubLightOFF);
 14377  01200C  0EF0               	movlw	high _SubLightOFF
 14378  01200E  0101               	movlb	1	; () banked
 14379  012010  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14380  012012  0E6D               	movlw	low _SubLightOFF
 14381  012014  0101               	movlb	1	; () banked
 14382  012016  6F86               	movwf	Send_Config2@data& (0+255),b
 14383  012018  0E01               	movlw	1
 14384  01201A  ECFF  F0AF         	call	_Send_Config2
 14385                           
 14386                           ;StringCommand.c: 636: Send_Config2(0b00000001, SubLightOFF);
 14387  01201E  0EF0               	movlw	high _SubLightOFF
 14388  012020  0101               	movlb	1	; () banked
 14389  012022  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14390  012024  0E6D               	movlw	low _SubLightOFF
 14391  012026  0101               	movlb	1	; () banked
 14392  012028  6F86               	movwf	Send_Config2@data& (0+255),b
 14393  01202A  0E01               	movlw	1
 14394  01202C  ECFF  F0AF         	call	_Send_Config2
 14395                           
 14396                           ;StringCommand.c: 637: Send_Config2(0b00000001, SubLightOFF);
 14397  012030  0EF0               	movlw	high _SubLightOFF
 14398  012032  0101               	movlb	1	; () banked
 14399  012034  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14400  012036  0E6D               	movlw	low _SubLightOFF
 14401  012038  0101               	movlb	1	; () banked
 14402  01203A  6F86               	movwf	Send_Config2@data& (0+255),b
 14403  01203C  0E01               	movlw	1
 14404  01203E  ECFF  F0AF         	call	_Send_Config2
 14405                           
 14406                           ;StringCommand.c: 638: Send_Config2(0b00000001, SubLightOFF);
 14407  012042  0EF0               	movlw	high _SubLightOFF
 14408  012044  0101               	movlb	1	; () banked
 14409  012046  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14410  012048  0E6D               	movlw	low _SubLightOFF
 14411  01204A  0101               	movlb	1	; () banked
 14412  01204C  6F86               	movwf	Send_Config2@data& (0+255),b
 14413  01204E  0E01               	movlw	1
 14414  012050  ECFF  F0AF         	call	_Send_Config2
 14415                           
 14416                           ;StringCommand.c: 639: Send_Config2(0b00000001, SubLightOFF);
 14417  012054  0EF0               	movlw	high _SubLightOFF
 14418  012056  0101               	movlb	1	; () banked
 14419  012058  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14420  01205A  0E6D               	movlw	low _SubLightOFF
 14421  01205C  0101               	movlb	1	; () banked
 14422  01205E  6F86               	movwf	Send_Config2@data& (0+255),b
 14423  012060  0E01               	movlw	1
 14424  012062  ECFF  F0AF         	call	_Send_Config2
 14425                           
 14426                           ;StringCommand.c: 640: Send_Config2(0b00000001, SubLightOFF);
 14427  012066  0EF0               	movlw	high _SubLightOFF
 14428  012068  0101               	movlb	1	; () banked
 14429  01206A  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14430  01206C  0E6D               	movlw	low _SubLightOFF
 14431  01206E  0101               	movlb	1	; () banked
 14432  012070  6F86               	movwf	Send_Config2@data& (0+255),b
 14433  012072  0E01               	movlw	1
 14434  012074  ECFF  F0AF         	call	_Send_Config2
 14435                           
 14436                           ;StringCommand.c: 641: Send_Config2(0b00000001, SubLightOFF);
 14437  012078  0EF0               	movlw	high _SubLightOFF
 14438  01207A  0101               	movlb	1	; () banked
 14439  01207C  6F87               	movwf	(Send_Config2@data+1)& (0+255),b
 14440  01207E  0E6D               	movlw	low _SubLightOFF
 14441  012080  0101               	movlb	1	; () banked
 14442  012082  6F86               	movwf	Send_Config2@data& (0+255),b
 14443  012084  0E01               	movlw	1
 14444  012086  ECFF  F0AF         	call	_Send_Config2
 14445                           
 14446                           ;StringCommand.c: 642: INTCONbits.GIE = 1;
 14447  01208A  8EF2               	bsf	intcon,7,c	;volatile
 14448                           
 14449                           ;StringCommand.c: 643: UARTstring("Joes room light Off");
 14450  01208C  0EF8               	movlw	high STR_240
 14451  01208E  0101               	movlb	1	; () banked
 14452  012090  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14453  012092  0E4F               	movlw	low STR_240
 14454  012094  0101               	movlb	1	; () banked
 14455  012096  6F7C               	movwf	UARTstring@data& (0+255),b
 14456  012098  ECB3  F0AD         	call	_UARTstring	;wreg free
 14457                           
 14458                           ;StringCommand.c: 644: LCDdisplayFeedback("Joe room lt Off");
 14459  01209C  0EFB               	movlw	high STR_241
 14460  01209E  0101               	movlb	1	; () banked
 14461  0120A0  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14462  0120A2  0E78               	movlw	low STR_241
 14463  0120A4  0101               	movlb	1	; () banked
 14464  0120A6  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14465  0120A8  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 14466                           
 14467                           ;StringCommand.c: 645: }
 14468  0120AC  D1D1               	goto	l513
 14469  0120AE                     l11782:
 14470                           
 14471                           ;StringCommand.c: 646: else
 14472                           ;StringCommand.c: 647: {
 14473                           ;StringCommand.c: 648: UARTstring("Joe's room what???");
 14474  0120AE  0EF8               	movlw	high STR_242
 14475  0120B0  0101               	movlb	1	; () banked
 14476  0120B2  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14477  0120B4  0E9E               	movlw	low STR_242
 14478  0120B6  0101               	movlb	1	; () banked
 14479  0120B8  6F7C               	movwf	UARTstring@data& (0+255),b
 14480  0120BA  ECB3  F0AD         	call	_UARTstring	;wreg free
 14481                           
 14482                           ;StringCommand.c: 649: LCDdisplayFeedback("Joe room what??");
 14483  0120BE  0EFA               	movlw	high STR_243
 14484  0120C0  0101               	movlb	1	; () banked
 14485  0120C2  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14486  0120C4  0ED8               	movlw	low STR_243
 14487  0120C6  0101               	movlb	1	; () banked
 14488  0120C8  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14489  0120CA  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 14490  0120CE  D1C0               	goto	l513
 14491  0120D0                     l11784:
 14492                           
 14493                           ;StringCommand.c: 652: else
 14494                           ;StringCommand.c: 653: {
 14495                           ;StringCommand.c: 654: UARTstring("Joes Room Help Menu\r\n\n");
 14496  0120D0  0EF7               	movlw	high STR_244
 14497  0120D2  0101               	movlb	1	; () banked
 14498  0120D4  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14499  0120D6  0E8A               	movlw	low STR_244
 14500  0120D8  0101               	movlb	1	; () banked
 14501  0120DA  6F7C               	movwf	UARTstring@data& (0+255),b
 14502  0120DC  ECB3  F0AD         	call	_UARTstring	;wreg free
 14503                           
 14504                           ;StringCommand.c: 655: UARTstring("Devices:\r\n");
 14505  0120E0  0EFD               	movlw	high STR_42
 14506  0120E2  0101               	movlb	1	; () banked
 14507  0120E4  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14508  0120E6  0EF1               	movlw	low STR_42
 14509  0120E8  0101               	movlb	1	; () banked
 14510  0120EA  6F7C               	movwf	UARTstring@data& (0+255),b
 14511  0120EC  ECB3  F0AD         	call	_UARTstring	;wreg free
 14512                           
 14513                           ;StringCommand.c: 656: UARTstring("Light\r\n\n");
 14514  0120F0  0EFE               	movlw	high STR_246
 14515  0120F2  0101               	movlb	1	; () banked
 14516  0120F4  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14517  0120F6  0EAB               	movlw	low STR_246
 14518  0120F8  0101               	movlb	1	; () banked
 14519  0120FA  6F7C               	movwf	UARTstring@data& (0+255),b
 14520  0120FC  ECB3  F0AD         	call	_UARTstring	;wreg free
 14521                           
 14522                           ;StringCommand.c: 657: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 14523  012100  0EF1               	movlw	high STR_45
 14524  012102  0101               	movlb	1	; () banked
 14525  012104  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14526  012106  0E5F               	movlw	low STR_45
 14527  012108  0101               	movlb	1	; () banked
 14528  01210A  6F7C               	movwf	UARTstring@data& (0+255),b
 14529  01210C  ECB3  F0AD         	call	_UARTstring	;wreg free
 14530                           
 14531                           ;StringCommand.c: 658: UARTstring("i.e. Joes room light = On\r\n");
 14532  012110  0EF6               	movlw	high STR_248
 14533  012112  0101               	movlb	1	; () banked
 14534  012114  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14535  012116  0E3B               	movlw	low STR_248
 14536  012118  0101               	movlb	1	; () banked
 14537  01211A  6F7C               	movwf	UARTstring@data& (0+255),b
 14538  01211C  ECB3  F0AD         	call	_UARTstring	;wreg free
 14539                           
 14540                           ;StringCommand.c: 659: LCD_Scroll("Joe room Menu");
 14541  012120  0EFC               	movlw	high STR_249
 14542  012122  0101               	movlb	1	; () banked
 14543  012124  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14544  012126  0EFC               	movlw	low STR_249
 14545  012128  0101               	movlb	1	; () banked
 14546  01212A  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14547  01212C  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14548                           
 14549                           ;StringCommand.c: 660: LCD_Scroll("Devices:");
 14550  012130  0EFE               	movlw	high STR_48
 14551  012132  0101               	movlb	1	; () banked
 14552  012134  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14553  012136  0EB4               	movlw	low STR_48
 14554  012138  0101               	movlb	1	; () banked
 14555  01213A  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14556  01213C  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14557                           
 14558                           ;StringCommand.c: 661: LCD_Scroll("Light");
 14559  012140  0EFF               	movlw	high STR_74
 14560  012142  0101               	movlb	1	; () banked
 14561  012144  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14562  012146  0EA8               	movlw	low STR_74
 14563  012148  0101               	movlb	1	; () banked
 14564  01214A  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14565  01214C  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14566  012150  D17F               	goto	l513
 14567  012152                     l11792:
 14568                           
 14569                           ;StringCommand.c: 665: else if (StringMatch(Input, "?"))
 14570  012152  0101               	movlb	1	; () banked
 14571  012154  C1C1  F17C         	movff	Command@Input+1,StringMatch@This+1
 14572  012158  0101               	movlb	1	; () banked
 14573  01215A  C1C0  F17B         	movff	Command@Input,StringMatch@This
 14574  01215E  0EFA               	movlw	high (STR_64+14)
 14575  012160  0101               	movlb	1	; () banked
 14576  012162  6F7E               	movwf	(StringMatch@That+1)& (0+255),b
 14577  012164  0EA6               	movlw	low (STR_64+14)
 14578  012166  0101               	movlb	1	; () banked
 14579  012168  6F7D               	movwf	StringMatch@That& (0+255),b
 14580  01216A  EC08  F0B1         	call	_StringMatch	;wreg free
 14581  01216E  0900               	iorlw	0
 14582  012170  B4D8               	btfsc	status,2,c
 14583  012172  D15E               	goto	l11842
 14584                           
 14585                           ;StringCommand.c: 666: {
 14586                           ;StringCommand.c: 667: UARTstring("Devices:\r\n\n");
 14587  012174  0EFD               	movlw	high STR_253
 14588  012176  0101               	movlb	1	; () banked
 14589  012178  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14590  01217A  0EB5               	movlw	low STR_253
 14591  01217C  0101               	movlb	1	; () banked
 14592  01217E  6F7C               	movwf	UARTstring@data& (0+255),b
 14593  012180  ECB3  F0AD         	call	_UARTstring	;wreg free
 14594                           
 14595                           ;StringCommand.c: 668: UARTstring("Bedroom\r\n");
 14596  012184  0EFE               	movlw	high STR_254
 14597  012186  0101               	movlb	1	; () banked
 14598  012188  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14599  01218A  0E3D               	movlw	low STR_254
 14600  01218C  0101               	movlb	1	; () banked
 14601  01218E  6F7C               	movwf	UARTstring@data& (0+255),b
 14602  012190  ECB3  F0AD         	call	_UARTstring	;wreg free
 14603                           
 14604                           ;StringCommand.c: 669: UARTstring("Livingroom\r\n");
 14605  012194  0EFD               	movlw	high STR_255
 14606  012196  0101               	movlb	1	; () banked
 14607  012198  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14608  01219A  0E33               	movlw	low STR_255
 14609  01219C  0101               	movlb	1	; () banked
 14610  01219E  6F7C               	movwf	UARTstring@data& (0+255),b
 14611  0121A0  ECB3  F0AD         	call	_UARTstring	;wreg free
 14612                           
 14613                           ;StringCommand.c: 670: UARTstring("Joes room\r\n");
 14614  0121A4  0EFD               	movlw	high STR_256
 14615  0121A6  0101               	movlb	1	; () banked
 14616  0121A8  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14617  0121AA  0ECD               	movlw	low STR_256
 14618  0121AC  0101               	movlb	1	; () banked
 14619  0121AE  6F7C               	movwf	UARTstring@data& (0+255),b
 14620  0121B0  ECB3  F0AD         	call	_UARTstring	;wreg free
 14621                           
 14622                           ;StringCommand.c: 671: UARTstring("Christmas Tree\r\n");
 14623  0121B4  0EF9               	movlw	high STR_257
 14624  0121B6  0101               	movlb	1	; () banked
 14625  0121B8  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14626  0121BA  0EBD               	movlw	low STR_257
 14627  0121BC  0101               	movlb	1	; () banked
 14628  0121BE  6F7C               	movwf	UARTstring@data& (0+255),b
 14629  0121C0  ECB3  F0AD         	call	_UARTstring	;wreg free
 14630                           
 14631                           ;StringCommand.c: 672: UARTstring("Contrast\r\n");
 14632  0121C4  0EFE               	movlw	high STR_258
 14633  0121C6  0101               	movlb	1	; () banked
 14634  0121C8  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14635  0121CA  0E07               	movlw	low STR_258
 14636  0121CC  0101               	movlb	1	; () banked
 14637  0121CE  6F7C               	movwf	UARTstring@data& (0+255),b
 14638  0121D0  ECB3  F0AD         	call	_UARTstring	;wreg free
 14639                           
 14640                           ;StringCommand.c: 673: UARTstring("ADC\r\n");
 14641  0121D4  0EFF               	movlw	high STR_259
 14642  0121D6  0101               	movlb	1	; () banked
 14643  0121D8  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14644  0121DA  0E90               	movlw	low STR_259
 14645  0121DC  0101               	movlb	1	; () banked
 14646  0121DE  6F7C               	movwf	UARTstring@data& (0+255),b
 14647  0121E0  ECB3  F0AD         	call	_UARTstring	;wreg free
 14648                           
 14649                           ;StringCommand.c: 674: UARTstring("RTC\r\n\n");
 14650  0121E4  0EFF               	movlw	high STR_260
 14651  0121E6  0101               	movlb	1	; () banked
 14652  0121E8  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14653  0121EA  0E5F               	movlw	low STR_260
 14654  0121EC  0101               	movlb	1	; () banked
 14655  0121EE  6F7C               	movwf	UARTstring@data& (0+255),b
 14656  0121F0  ECB3  F0AD         	call	_UARTstring	;wreg free
 14657                           
 14658                           ;StringCommand.c: 675: UARTstring("For Device help enter device followed by a '?' \r\n")
      +                          ;
 14659  0121F4  0EF2               	movlw	high STR_261
 14660  0121F6  0101               	movlb	1	; () banked
 14661  0121F8  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14662  0121FA  0E60               	movlw	low STR_261
 14663  0121FC  0101               	movlb	1	; () banked
 14664  0121FE  6F7C               	movwf	UARTstring@data& (0+255),b
 14665  012200  ECB3  F0AD         	call	_UARTstring	;wreg free
 14666                           
 14667                           ;StringCommand.c: 676: UARTstring("i.e.  Livingroom?\r\n\r\n");
 14668  012204  0EF7               	movlw	high STR_262
 14669  012206  0101               	movlb	1	; () banked
 14670  012208  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14671  01220A  0ECF               	movlw	low STR_262
 14672  01220C  0101               	movlb	1	; () banked
 14673  01220E  6F7C               	movwf	UARTstring@data& (0+255),b
 14674  012210  ECB3  F0AD         	call	_UARTstring	;wreg free
 14675                           
 14676                           ;StringCommand.c: 677: UARTstring("Current Time\r\n");
 14677  012214  0EFB               	movlw	high STR_263
 14678  012216  0101               	movlb	1	; () banked
 14679  012218  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14680  01221A  0EC8               	movlw	low STR_263
 14681  01221C  0101               	movlb	1	; () banked
 14682  01221E  6F7C               	movwf	UARTstring@data& (0+255),b
 14683  012220  ECB3  F0AD         	call	_UARTstring	;wreg free
 14684                           
 14685                           ;StringCommand.c: 678: SetLCDcursor(0, 0);
 14686  012224  0E00               	movlw	0
 14687  012226  0101               	movlb	1	; () banked
 14688  012228  6F89               	movwf	SetLCDcursor@Col& (0+255),b
 14689  01222A  0E00               	movlw	0
 14690  01222C  EC2D  F0B5         	call	_SetLCDcursor
 14691                           
 14692                           ;StringCommand.c: 679: LCDPrintString("Help Menu");
 14693  012230  0EFE               	movlw	high STR_264
 14694  012232  0101               	movlb	1	; () banked
 14695  012234  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
 14696  012236  0E8D               	movlw	low STR_264
 14697  012238  0101               	movlb	1	; () banked
 14698  01223A  6F89               	movwf	LCDPrintString@Text& (0+255),b
 14699  01223C  EC46  F0B1         	call	_LCDPrintString	;wreg free
 14700                           
 14701                           ;StringCommand.c: 680: if(!READ_RTC_TIME())
 14702  012240  EC1E  F0A9         	call	_READ_RTC_TIME	;wreg free
 14703  012244  0900               	iorlw	0
 14704  012246  A4D8               	btfss	status,2,c
 14705  012248  D0D0               	goto	l11834
 14706                           
 14707                           ;StringCommand.c: 681: {
 14708                           ;StringCommand.c: 682: SprintDate(buf, NowTime, 0);
 14709  01224A  0105               	movlb	5	; () banked
 14710  01224C  0E05               	movlw	high Command@buf
 14711  01224E  0101               	movlb	1	; () banked
 14712  012250  6FAF               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 14713  012252  0105               	movlb	5	; () banked
 14714  012254  0E00               	movlw	low Command@buf
 14715  012256  0101               	movlb	1	; () banked
 14716  012258  6FAE               	movwf	SprintDate@ReturnBuf& (0+255),b
 14717  01225A  EE21  F000         	lfsr	2,_NowTime
 14718  01225E  EE11  F0B0         	lfsr	1,SprintDate@DisplayTime
 14719  012262  0E09               	movlw	9
 14720  012264                     u15161:
 14721  012264  CFDE FFE6          	movff	postinc2,postinc1
 14722  012268  2EE8               	decfsz	wreg,f,c
 14723  01226A  D7FC               	goto	u15161
 14724  01226C  0E00               	movlw	0
 14725  01226E  0101               	movlb	1	; () banked
 14726  012270  6FB9               	movwf	SprintDate@Military& (0+255),b
 14727  012272  EC21  F0A7         	call	_SprintDate	;wreg free
 14728                           
 14729                           ;StringCommand.c: 683: UARTstring(buf);
 14730  012276  0105               	movlb	5	; () banked
 14731  012278  0E05               	movlw	high Command@buf
 14732  01227A  0101               	movlb	1	; () banked
 14733  01227C  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14734  01227E  0105               	movlb	5	; () banked
 14735  012280  0E00               	movlw	low Command@buf
 14736  012282  0101               	movlb	1	; () banked
 14737  012284  6F7C               	movwf	UARTstring@data& (0+255),b
 14738  012286  ECB3  F0AD         	call	_UARTstring	;wreg free
 14739                           
 14740                           ;StringCommand.c: 684: UARTstring("\r\n");
 14741  01228A  0EF7               	movlw	high (STR_262+19)
 14742  01228C  0101               	movlb	1	; () banked
 14743  01228E  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14744  012290  0EE2               	movlw	low (STR_262+19)
 14745  012292  0101               	movlb	1	; () banked
 14746  012294  6F7C               	movwf	UARTstring@data& (0+255),b
 14747  012296  ECB3  F0AD         	call	_UARTstring	;wreg free
 14748                           
 14749                           ;StringCommand.c: 686: if(NowTime.HoursAM_PM)
 14750  01229A  0101               	movlb	1	; () banked
 14751  01229C  5104               	movf	(_NowTime+4)& (0+255),w,b
 14752  01229E  B4D8               	btfsc	status,2,c
 14753  0122A0  D02A               	goto	l11812
 14754                           
 14755                           ; BSR set to: 1
 14756                           ;StringCommand.c: 687: {
 14757                           ;StringCommand.c: 688: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 14758  0122A2  0105               	movlb	5	; () banked
 14759  0122A4  0E05               	movlw	high Command@buf
 14760  0122A6  0101               	movlb	1	; () banked
 14761  0122A8  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 14762  0122AA  0105               	movlb	5	; () banked
 14763  0122AC  0E00               	movlw	low Command@buf
 14764  0122AE  0101               	movlb	1	; () banked
 14765  0122B0  6F87               	movwf	sprintf@sp& (0+255),b
 14766  0122B2  0EF7               	movlw	high STR_207
 14767  0122B4  0101               	movlb	1	; () banked
 14768  0122B6  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 14769  0122B8  0EB8               	movlw	low STR_207
 14770  0122BA  0101               	movlb	1	; () banked
 14771  0122BC  6F89               	movwf	sprintf@f& (0+255),b
 14772  0122BE  0101               	movlb	1	; () banked
 14773  0122C0  C107  F18B         	movff	_NowTime+7,?_sprintf+4
 14774  0122C4  0101               	movlb	1	; () banked
 14775  0122C6  6B8C               	clrf	(?_sprintf+5)& (0+255),b
 14776  0122C8  0101               	movlb	1	; () banked
 14777  0122CA  C106  F18D         	movff	_NowTime+6,?_sprintf+6
 14778  0122CE  0101               	movlb	1	; () banked
 14779  0122D0  6B8E               	clrf	(?_sprintf+7)& (0+255),b
 14780  0122D2  0101               	movlb	1	; () banked
 14781  0122D4  C102  F18F         	movff	_NowTime+2,?_sprintf+8
 14782  0122D8  0101               	movlb	1	; () banked
 14783  0122DA  6B90               	clrf	(?_sprintf+9)& (0+255),b
 14784  0122DC  0101               	movlb	1	; () banked
 14785  0122DE  C101  F191         	movff	_NowTime+1,?_sprintf+10
 14786  0122E2  0101               	movlb	1	; () banked
 14787  0122E4  6B92               	clrf	(?_sprintf+11)& (0+255),b
 14788  0122E6  0101               	movlb	1	; () banked
 14789  0122E8  C100  F193         	movff	_NowTime,?_sprintf+12
 14790  0122EC  0101               	movlb	1	; () banked
 14791  0122EE  6B94               	clrf	(?_sprintf+13)& (0+255),b
 14792  0122F0  EC31  F092         	call	_sprintf	;wreg free
 14793                           
 14794                           ;StringCommand.c: 689: }
 14795  0122F4  D029               	goto	l11814
 14796  0122F6                     l11812:
 14797                           
 14798                           ;StringCommand.c: 690: else
 14799                           ;StringCommand.c: 691: {
 14800                           ;StringCommand.c: 692: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 14801  0122F6  0105               	movlb	5	; () banked
 14802  0122F8  0E05               	movlw	high Command@buf
 14803  0122FA  0101               	movlb	1	; () banked
 14804  0122FC  6F88               	movwf	(sprintf@sp+1)& (0+255),b
 14805  0122FE  0105               	movlb	5	; () banked
 14806  012300  0E00               	movlw	low Command@buf
 14807  012302  0101               	movlb	1	; () banked
 14808  012304  6F87               	movwf	sprintf@sp& (0+255),b
 14809  012306  0EF7               	movlw	high STR_208
 14810  012308  0101               	movlb	1	; () banked
 14811  01230A  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 14812  01230C  0EA1               	movlw	low STR_208
 14813  01230E  0101               	movlb	1	; () banked
 14814  012310  6F89               	movwf	sprintf@f& (0+255),b
 14815  012312  0101               	movlb	1	; () banked
 14816  012314  C107  F18B         	movff	_NowTime+7,?_sprintf+4
 14817  012318  0101               	movlb	1	; () banked
 14818  01231A  6B8C               	clrf	(?_sprintf+5)& (0+255),b
 14819  01231C  0101               	movlb	1	; () banked
 14820  01231E  C106  F18D         	movff	_NowTime+6,?_sprintf+6
 14821  012322  0101               	movlb	1	; () banked
 14822  012324  6B8E               	clrf	(?_sprintf+7)& (0+255),b
 14823  012326  0101               	movlb	1	; () banked
 14824  012328  C102  F18F         	movff	_NowTime+2,?_sprintf+8
 14825  01232C  0101               	movlb	1	; () banked
 14826  01232E  6B90               	clrf	(?_sprintf+9)& (0+255),b
 14827  012330  0101               	movlb	1	; () banked
 14828  012332  C101  F191         	movff	_NowTime+1,?_sprintf+10
 14829  012336  0101               	movlb	1	; () banked
 14830  012338  6B92               	clrf	(?_sprintf+11)& (0+255),b
 14831  01233A  0101               	movlb	1	; () banked
 14832  01233C  C100  F193         	movff	_NowTime,?_sprintf+12
 14833  012340  0101               	movlb	1	; () banked
 14834  012342  6B94               	clrf	(?_sprintf+13)& (0+255),b
 14835  012344  EC31  F092         	call	_sprintf	;wreg free
 14836  012348                     l11814:
 14837                           
 14838                           ;StringCommand.c: 693: }
 14839                           ;StringCommand.c: 694: SetLCDcursor(1, 0);
 14840  012348  0E00               	movlw	0
 14841  01234A  0101               	movlb	1	; () banked
 14842  01234C  6F89               	movwf	SetLCDcursor@Col& (0+255),b
 14843  01234E  0E01               	movlw	1
 14844  012350  EC2D  F0B5         	call	_SetLCDcursor
 14845                           
 14846                           ;StringCommand.c: 695: LCDPrintString(buf);
 14847  012354  0105               	movlb	5	; () banked
 14848  012356  0E05               	movlw	high Command@buf
 14849  012358  0101               	movlb	1	; () banked
 14850  01235A  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
 14851  01235C  0105               	movlb	5	; () banked
 14852  01235E  0E00               	movlw	low Command@buf
 14853  012360  0101               	movlb	1	; () banked
 14854  012362  6F89               	movwf	LCDPrintString@Text& (0+255),b
 14855  012364  EC46  F0B1         	call	_LCDPrintString	;wreg free
 14856                           
 14857                           ;StringCommand.c: 696: LCD_Scroll("Device Menus:");
 14858  012368  0EFC               	movlw	high STR_268
 14859  01236A  0101               	movlb	1	; () banked
 14860  01236C  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14861  01236E  0EB6               	movlw	low STR_268
 14862  012370  0101               	movlb	1	; () banked
 14863  012372  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14864  012374  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14865                           
 14866                           ;StringCommand.c: 697: LCD_Scroll("Bedroom?");
 14867  012378  0EFE               	movlw	high STR_269
 14868  01237A  0101               	movlb	1	; () banked
 14869  01237C  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14870  01237E  0EBD               	movlw	low STR_269
 14871  012380  0101               	movlb	1	; () banked
 14872  012382  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14873  012384  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14874                           
 14875                           ;StringCommand.c: 698: LCD_Scroll("Livingroom?");
 14876  012388  0EFD               	movlw	high STR_270
 14877  01238A  0101               	movlb	1	; () banked
 14878  01238C  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14879  01238E  0ED9               	movlw	low STR_270
 14880  012390  0101               	movlb	1	; () banked
 14881  012392  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14882  012394  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14883                           
 14884                           ;StringCommand.c: 699: LCD_Scroll("Joes Room?");
 14885  012398  0EFE               	movlw	high STR_271
 14886  01239A  0101               	movlb	1	; () banked
 14887  01239C  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14888  01239E  0E12               	movlw	low STR_271
 14889  0123A0  0101               	movlb	1	; () banked
 14890  0123A2  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14891  0123A4  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14892                           
 14893                           ;StringCommand.c: 700: LCD_Scroll("Christmas Tree?");
 14894  0123A8  0EFA               	movlw	high STR_272
 14895  0123AA  0101               	movlb	1	; () banked
 14896  0123AC  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14897  0123AE  0EE8               	movlw	low STR_272
 14898  0123B0  0101               	movlb	1	; () banked
 14899  0123B2  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14900  0123B4  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14901                           
 14902                           ;StringCommand.c: 701: LCD_Scroll("Contrast?");
 14903  0123B8  0EFE               	movlw	high STR_273
 14904  0123BA  0101               	movlb	1	; () banked
 14905  0123BC  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14906  0123BE  0E6F               	movlw	low STR_273
 14907  0123C0  0101               	movlb	1	; () banked
 14908  0123C2  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14909  0123C4  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14910                           
 14911                           ;StringCommand.c: 702: LCD_Scroll("ADC?");
 14912  0123C8  0EFF               	movlw	high STR_274
 14913  0123CA  0101               	movlb	1	; () banked
 14914  0123CC  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14915  0123CE  0ECD               	movlw	low STR_274
 14916  0123D0  0101               	movlb	1	; () banked
 14917  0123D2  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14918  0123D4  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14919                           
 14920                           ;StringCommand.c: 703: LCD_Scroll("RTC?");
 14921  0123D8  0EFF               	movlw	high STR_275
 14922  0123DA  0101               	movlb	1	; () banked
 14923  0123DC  6F8B               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14924  0123DE  0ED2               	movlw	low STR_275
 14925  0123E0  0101               	movlb	1	; () banked
 14926  0123E2  6F8A               	movwf	LCD_Scroll@This& (0+255),b
 14927  0123E4  EC38  F0A0         	call	_LCD_Scroll	;wreg free
 14928                           
 14929                           ;StringCommand.c: 704: }
 14930  0123E8  D016               	goto	l11840
 14931  0123EA                     l11834:
 14932                           
 14933                           ;StringCommand.c: 705: else
 14934                           ;StringCommand.c: 706: {
 14935                           ;StringCommand.c: 707: UARTstring("ERROR: Can't Read RTC\r\n");
 14936  0123EA  0EF7               	movlw	high STR_209
 14937  0123EC  0101               	movlb	1	; () banked
 14938  0123EE  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14939  0123F0  0E5A               	movlw	low STR_209
 14940  0123F2  0101               	movlb	1	; () banked
 14941  0123F4  6F7C               	movwf	UARTstring@data& (0+255),b
 14942  0123F6  ECB3  F0AD         	call	_UARTstring	;wreg free
 14943                           
 14944                           ;StringCommand.c: 708: SetLCDcursor(1, 0);
 14945  0123FA  0E00               	movlw	0
 14946  0123FC  0101               	movlb	1	; () banked
 14947  0123FE  6F89               	movwf	SetLCDcursor@Col& (0+255),b
 14948  012400  0E01               	movlw	1
 14949  012402  EC2D  F0B5         	call	_SetLCDcursor
 14950                           
 14951                           ;StringCommand.c: 709: LCDPrintString("RTC isnt working");
 14952  012406  0EFA               	movlw	high STR_210
 14953  012408  0101               	movlb	1	; () banked
 14954  01240A  6F8A               	movwf	(LCDPrintString@Text+1)& (0+255),b
 14955  01240C  0E01               	movlw	low STR_210
 14956  01240E  0101               	movlb	1	; () banked
 14957  012410  6F89               	movwf	LCDPrintString@Text& (0+255),b
 14958  012412  EC46  F0B1         	call	_LCDPrintString	;wreg free
 14959  012416                     l11840:
 14960                           
 14961                           ;StringCommand.c: 710: }
 14962                           ;StringCommand.c: 711: LCDclearCount =0;
 14963  012416  0E00               	movlw	0
 14964  012418  0101               	movlb	1	; () banked
 14965  01241A  6FC8               	movwf	_LCDclearCount& (0+255),b
 14966  01241C  0E00               	movlw	0
 14967  01241E  0101               	movlb	1	; () banked
 14968  012420  6FC9               	movwf	(_LCDclearCount+1)& (0+255),b
 14969  012422  0E00               	movlw	0
 14970  012424  0101               	movlb	1	; () banked
 14971  012426  6FCA               	movwf	(_LCDclearCount+2)& (0+255),b
 14972  012428  0E00               	movlw	0
 14973  01242A  0101               	movlb	1	; () banked
 14974  01242C  6FCB               	movwf	(_LCDclearCount+3)& (0+255),b
 14975                           
 14976                           ;StringCommand.c: 712: }
 14977  01242E  D010               	goto	l513
 14978  012430                     l11842:
 14979                           
 14980                           ;StringCommand.c: 714: else
 14981                           ;StringCommand.c: 715: {
 14982                           ;StringCommand.c: 716: UARTstring("Invalid Command");
 14983  012430  0EFB               	movlw	high STR_278
 14984  012432  0101               	movlb	1	; () banked
 14985  012434  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 14986  012436  0E38               	movlw	low STR_278
 14987  012438  0101               	movlb	1	; () banked
 14988  01243A  6F7C               	movwf	UARTstring@data& (0+255),b
 14989  01243C  ECB3  F0AD         	call	_UARTstring	;wreg free
 14990                           
 14991                           ;StringCommand.c: 717: LCDdisplayFeedback("Invalid Command");
 14992  012440  0EFB               	movlw	high STR_278
 14993  012442  0101               	movlb	1	; () banked
 14994  012444  6F8E               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14995  012446  0E38               	movlw	low STR_278
 14996  012448  0101               	movlb	1	; () banked
 14997  01244A  6F8D               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14998  01244C  ECB5  F0B4         	call	_LCDdisplayFeedback	;wreg free
 14999  012450                     l513:
 15000                           
 15001                           ;StringCommand.c: 718: }
 15002                           ;StringCommand.c: 720: UARTstring("\r\n\r\n");
 15003  012450  0EF7               	movlw	high (STR_262+17)
 15004  012452  0101               	movlb	1	; () banked
 15005  012454  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 15006  012456  0EE0               	movlw	low (STR_262+17)
 15007  012458  0101               	movlb	1	; () banked
 15008  01245A  6F7C               	movwf	UARTstring@data& (0+255),b
 15009  01245C  ECB3  F0AD         	call	_UARTstring	;wreg free
 15010  012460  0012               	return	
 15011  012462                     __end_of_Command:
 15012                           	opt stack 0
 15013                           tblptru	equ	0xFF8
 15014                           tblptrh	equ	0xFF7
 15015                           tblptrl	equ	0xFF6
 15016                           tablat	equ	0xFF5
 15017                           prodl	equ	0xFF3
 15018                           intcon	equ	0xFF2
 15019                           postinc0	equ	0xFEE
 15020                           wreg	equ	0xFE8
 15021                           postinc1	equ	0xFE6
 15022                           postdec1	equ	0xFE5
 15023                           fsr1l	equ	0xFE1
 15024                           indf2	equ	0xFDF
 15025                           postinc2	equ	0xFDE
 15026                           fsr2h	equ	0xFDA
 15027                           fsr2l	equ	0xFD9
 15028                           status	equ	0xFD8
 15029                           
 15030 ;; *************** function _lowercase *****************
 15031 ;; Defined at:
 15032 ;;		line 222 in file "MISC.c"
 15033 ;; Parameters:    Size  Location     Type
 15034 ;;  Input           2   14[BANK1 ] PTR unsigned char 
 15035 ;;		 -> Rxdata(100), 
 15036 ;; Auto vars:     Size  Location     Type
 15037 ;;  i               1   17[BANK1 ] unsigned char 
 15038 ;; Return value:  Size  Location     Type
 15039 ;;		None               void
 15040 ;; Registers used:
 15041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15047 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15048 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15049 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15050 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15051 ;;Total ram usage:        4 bytes
 15052 ;; Hardware stack levels used:    1
 15053 ;; Hardware stack levels required when called:    6
 15054 ;; This function calls:
 15055 ;;		Nothing
 15056 ;; This function is called by:
 15057 ;;		_Command
 15058 ;; This function uses a non-reentrant model
 15059 ;;
 15060                           
 15061                           	psect	text20
 15062  015EE4                     __ptext20:
 15063                           	opt stack 0
 15064  015EE4                     _lowercase:
 15065                           	opt stack 22
 15066                           
 15067                           ;MISC.c: 224: unsigned char i =0;
 15068                           
 15069                           ;incstack = 0
 15070  015EE4  0E00               	movlw	0
 15071  015EE6  0101               	movlb	1	; () banked
 15072  015EE8  6F7E               	movwf	lowercase@i& (0+255),b
 15073                           
 15074                           ;MISC.c: 225: while((Input[i]!= 0) && (i < 100))
 15075  015EEA  D030               	goto	l10340
 15076  015EEC                     l10332:
 15077                           
 15078                           ; BSR set to: 1
 15079                           ;MISC.c: 226: {
 15080                           ;MISC.c: 227: if((Input[i] >= 65) && (Input[i] <= 90 ))
 15081  015EEC  0101               	movlb	1	; () banked
 15082  015EEE  517E               	movf	lowercase@i& (0+255),w,b
 15083  015EF0  0D01               	mullw	1
 15084  015EF2  50F3               	movf	prodl,w,c
 15085  015EF4  0101               	movlb	1	; () banked
 15086  015EF6  257B               	addwf	lowercase@Input& (0+255),w,b
 15087  015EF8  6ED9               	movwf	fsr2l,c
 15088  015EFA  50F4               	movf	prodh,w,c
 15089  015EFC  0101               	movlb	1	; () banked
 15090  015EFE  217C               	addwfc	(lowercase@Input+1)& (0+255),w,b
 15091  015F00  6EDA               	movwf	fsr2h,c
 15092  015F02  0E40               	movlw	64
 15093  015F04  64DF               	cpfsgt	indf2,c
 15094  015F06  D020               	goto	l10338
 15095                           
 15096                           ; BSR set to: 1
 15097  015F08  0101               	movlb	1	; () banked
 15098  015F0A  517E               	movf	lowercase@i& (0+255),w,b
 15099  015F0C  0D01               	mullw	1
 15100  015F0E  50F3               	movf	prodl,w,c
 15101  015F10  0101               	movlb	1	; () banked
 15102  015F12  257B               	addwf	lowercase@Input& (0+255),w,b
 15103  015F14  6ED9               	movwf	fsr2l,c
 15104  015F16  50F4               	movf	prodh,w,c
 15105  015F18  0101               	movlb	1	; () banked
 15106  015F1A  217C               	addwfc	(lowercase@Input+1)& (0+255),w,b
 15107  015F1C  6EDA               	movwf	fsr2h,c
 15108  015F1E  50DF               	movf	indf2,w,c
 15109  015F20  0101               	movlb	1	; () banked
 15110  015F22  6F7D               	movwf	??_lowercase& (0+255),b
 15111  015F24  0E5B               	movlw	91
 15112  015F26  0101               	movlb	1	; () banked
 15113  015F28  5D7D               	subwf	??_lowercase& (0+255),w,b
 15114  015F2A  B0D8               	btfsc	status,0,c
 15115  015F2C  D00D               	goto	l10338
 15116                           
 15117                           ; BSR set to: 1
 15118                           ;MISC.c: 228: {
 15119                           ;MISC.c: 229: Input[i] += 32;
 15120  015F2E  0101               	movlb	1	; () banked
 15121  015F30  517E               	movf	lowercase@i& (0+255),w,b
 15122  015F32  0D01               	mullw	1
 15123  015F34  50F3               	movf	prodl,w,c
 15124  015F36  0101               	movlb	1	; () banked
 15125  015F38  257B               	addwf	lowercase@Input& (0+255),w,b
 15126  015F3A  6ED9               	movwf	fsr2l,c
 15127  015F3C  50F4               	movf	prodh,w,c
 15128  015F3E  0101               	movlb	1	; () banked
 15129  015F40  217C               	addwfc	(lowercase@Input+1)& (0+255),w,b
 15130  015F42  6EDA               	movwf	fsr2h,c
 15131  015F44  0E20               	movlw	32
 15132  015F46  26DF               	addwf	indf2,f,c
 15133  015F48                     l10338:
 15134                           
 15135                           ; BSR set to: 1
 15136                           ;MISC.c: 230: }
 15137                           ;MISC.c: 231: i++;
 15138  015F48  0101               	movlb	1	; () banked
 15139  015F4A  2B7E               	incf	lowercase@i& (0+255),f,b
 15140  015F4C                     l10340:
 15141                           
 15142                           ; BSR set to: 1
 15143  015F4C  0101               	movlb	1	; () banked
 15144  015F4E  517E               	movf	lowercase@i& (0+255),w,b
 15145  015F50  0D01               	mullw	1
 15146  015F52  50F3               	movf	prodl,w,c
 15147  015F54  0101               	movlb	1	; () banked
 15148  015F56  257B               	addwf	lowercase@Input& (0+255),w,b
 15149  015F58  6ED9               	movwf	fsr2l,c
 15150  015F5A  50F4               	movf	prodh,w,c
 15151  015F5C  0101               	movlb	1	; () banked
 15152  015F5E  217C               	addwfc	(lowercase@Input+1)& (0+255),w,b
 15153  015F60  6EDA               	movwf	fsr2h,c
 15154  015F62  50DF               	movf	indf2,w,c
 15155  015F64  B4D8               	btfsc	status,2,c
 15156  015F66  0012               	return	
 15157                           
 15158                           ; BSR set to: 1
 15159  015F68  0E63               	movlw	99
 15160  015F6A  0101               	movlb	1	; () banked
 15161  015F6C  657E               	cpfsgt	lowercase@i& (0+255),b
 15162  015F6E  D7BE               	goto	l10332
 15163  015F70  0012               	return	
 15164  015F72                     __end_of_lowercase:
 15165                           	opt stack 0
 15166                           tblptru	equ	0xFF8
 15167                           tblptrh	equ	0xFF7
 15168                           tblptrl	equ	0xFF6
 15169                           tablat	equ	0xFF5
 15170                           prodh	equ	0xFF4
 15171                           prodl	equ	0xFF3
 15172                           intcon	equ	0xFF2
 15173                           postinc0	equ	0xFEE
 15174                           wreg	equ	0xFE8
 15175                           postinc1	equ	0xFE6
 15176                           postdec1	equ	0xFE5
 15177                           fsr1l	equ	0xFE1
 15178                           indf2	equ	0xFDF
 15179                           postinc2	equ	0xFDE
 15180                           fsr2h	equ	0xFDA
 15181                           fsr2l	equ	0xFD9
 15182                           status	equ	0xFD8
 15183                           
 15184 ;; *************** function ___lwtoft *****************
 15185 ;; Defined at:
 15186 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
 15187 ;; Parameters:    Size  Location     Type
 15188 ;;  c               2   22[BANK1 ] unsigned int 
 15189 ;; Auto vars:     Size  Location     Type
 15190 ;;		None
 15191 ;; Return value:  Size  Location     Type
 15192 ;;                  3   22[BANK1 ] float 
 15193 ;; Registers used:
 15194 ;;		wreg, status,2, status,0, cstack
 15195 ;; Tracked objects:
 15196 ;;		On entry : 0/0
 15197 ;;		On exit  : 0/0
 15198 ;;		Unchanged: 0/0
 15199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15200 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15203 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15204 ;;Total ram usage:        3 bytes
 15205 ;; Hardware stack levels used:    1
 15206 ;; Hardware stack levels required when called:    7
 15207 ;; This function calls:
 15208 ;;		___ftpack
 15209 ;; This function is called by:
 15210 ;;		_Command
 15211 ;; This function uses a non-reentrant model
 15212 ;;
 15213                           
 15214                           	psect	text21
 15215  016B20                     __ptext21:
 15216                           	opt stack 0
 15217  016B20                     ___lwtoft:
 15218                           	opt stack 21
 15219                           
 15220                           ; BSR set to: 1
 15221                           ;incstack = 0
 15222  016B20  0101               	movlb	1	; () banked
 15223  016B22  C183  F17B         	movff	___lwtoft@c,___ftpack@arg
 15224  016B26  0101               	movlb	1	; () banked
 15225  016B28  C184  F17C         	movff	___lwtoft@c+1,___ftpack@arg+1
 15226  016B2C  0101               	movlb	1	; () banked
 15227  016B2E  6B7D               	clrf	(___ftpack@arg+2)& (0+255),b
 15228  016B30  0E8E               	movlw	142
 15229  016B32  0101               	movlb	1	; () banked
 15230  016B34  6F7E               	movwf	___ftpack@exp& (0+255),b
 15231  016B36  0E00               	movlw	0
 15232  016B38  0101               	movlb	1	; () banked
 15233  016B3A  6F7F               	movwf	___ftpack@sign& (0+255),b
 15234  016B3C  ECAE  F0A7         	call	___ftpack	;wreg free
 15235  016B40  C17B  F183         	movff	?___ftpack,?___lwtoft
 15236  016B44  C17C  F184         	movff	?___ftpack+1,?___lwtoft+1
 15237  016B48  C17D  F185         	movff	?___ftpack+2,?___lwtoft+2
 15238  016B4C  0012               	return	
 15239  016B4E                     __end_of___lwtoft:
 15240                           	opt stack 0
 15241                           tblptru	equ	0xFF8
 15242                           tblptrh	equ	0xFF7
 15243                           tblptrl	equ	0xFF6
 15244                           tablat	equ	0xFF5
 15245                           prodh	equ	0xFF4
 15246                           prodl	equ	0xFF3
 15247                           intcon	equ	0xFF2
 15248                           postinc0	equ	0xFEE
 15249                           wreg	equ	0xFE8
 15250                           postinc1	equ	0xFE6
 15251                           postdec1	equ	0xFE5
 15252                           fsr1l	equ	0xFE1
 15253                           indf2	equ	0xFDF
 15254                           postinc2	equ	0xFDE
 15255                           fsr2h	equ	0xFDA
 15256                           fsr2l	equ	0xFD9
 15257                           status	equ	0xFD8
 15258                           
 15259 ;; *************** function _StringMatch *****************
 15260 ;; Defined at:
 15261 ;;		line 70 in file "MISC.c"
 15262 ;; Parameters:    Size  Location     Type
 15263 ;;  This            2   14[BANK1 ] PTR unsigned char 
 15264 ;;		 -> Rxdata(100), 
 15265 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 15266 ;;		 -> STR_252(2), STR_239(18), STR_236(17), STR_93(18), 
 15267 ;;		 -> STR_90(17), STR_87(15), STR_84(14), STR_81(17), 
 15268 ;;		 -> STR_80(16), STR_60(18), STR_57(17), STR_54(20), 
 15269 ;;		 -> STR_53(19), STR_36(9), STR_33(8), STR_30(5), 
 15270 ;;		 -> STR_27(9), STR_24(8), STR_21(5), 
 15271 ;; Auto vars:     Size  Location     Type
 15272 ;;		None
 15273 ;; Return value:  Size  Location     Type
 15274 ;;                  1    wreg      unsigned char 
 15275 ;; Registers used:
 15276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15277 ;; Tracked objects:
 15278 ;;		On entry : 0/0
 15279 ;;		On exit  : 0/0
 15280 ;;		Unchanged: 0/0
 15281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15282 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15285 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15286 ;;Total ram usage:        4 bytes
 15287 ;; Hardware stack levels used:    1
 15288 ;; Hardware stack levels required when called:    6
 15289 ;; This function calls:
 15290 ;;		Nothing
 15291 ;; This function is called by:
 15292 ;;		_Command
 15293 ;; This function uses a non-reentrant model
 15294 ;;
 15295                           
 15296                           	psect	text22
 15297  016210                     __ptext22:
 15298                           	opt stack 0
 15299  016210                     _StringMatch:
 15300                           	opt stack 22
 15301                           
 15302                           ;MISC.c: 72: while(*This != 0)
 15303                           
 15304                           ;incstack = 0
 15305  016210  D025               	goto	l10166
 15306  016212                     l10156:
 15307                           
 15308                           ;MISC.c: 73: {
 15309                           ;MISC.c: 74: if(*This != *That || *That == 0)
 15310  016212  0101               	movlb	1	; () banked
 15311  016214  C17D  FFF6         	movff	StringMatch@That,tblptrl
 15312  016218  0101               	movlb	1	; () banked
 15313  01621A  C17E  FFF7         	movff	StringMatch@That+1,tblptrh
 15314  01621E                     	if	0	;tblptru may be non-zero
 15315  01621E                     	endif
 15316  01621E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15317  01621E  0E00               	movlw	low (__mediumconst shr (0+16))
 15318  016220  6EF8               	movwf	tblptru,c
 15319  016222                     	endif
 15320  016222  0008               	tblrd		*
 15321  016224  50F5               	movf	tablat,w,c
 15322  016226  C17B  FFD9         	movff	StringMatch@This,fsr2l
 15323  01622A  C17C  FFDA         	movff	StringMatch@This+1,fsr2h
 15324  01622E  62DF               	cpfseq	indf2,c
 15325  016230  D00D               	goto	l10160
 15326                           
 15327                           ; BSR set to: 1
 15328  016232  0101               	movlb	1	; () banked
 15329  016234  C17D  FFF6         	movff	StringMatch@That,tblptrl
 15330  016238  0101               	movlb	1	; () banked
 15331  01623A  C17E  FFF7         	movff	StringMatch@That+1,tblptrh
 15332  01623E                     	if	0	;tblptru may be non-zero
 15333  01623E                     	endif
 15334  01623E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15335  01623E  0E00               	movlw	low (__mediumconst shr (0+16))
 15336  016240  6EF8               	movwf	tblptru,c
 15337  016242                     	endif
 15338  016242  0008               	tblrd		*
 15339  016244  50F5               	movf	tablat,w,c
 15340  016246  0900               	iorlw	0
 15341  016248  A4D8               	btfss	status,2,c
 15342  01624A  D002               	goto	l10164
 15343  01624C                     l10160:
 15344                           
 15345                           ; BSR set to: 1
 15346                           ;MISC.c: 75: {
 15347                           ;MISC.c: 76: return 0;
 15348  01624C  0E00               	movlw	0
 15349  01624E  0012               	return	
 15350  016250                     l10164:
 15351                           
 15352                           ; BSR set to: 1
 15353                           ;MISC.c: 77: }
 15354                           ;MISC.c: 78: This++;
 15355  016250  0101               	movlb	1	; () banked
 15356  016252  4B7B               	infsnz	StringMatch@This& (0+255),f,b
 15357  016254  2B7C               	incf	(StringMatch@This+1)& (0+255),f,b
 15358                           
 15359                           ;MISC.c: 79: That++;
 15360  016256  0101               	movlb	1	; () banked
 15361  016258  4B7D               	infsnz	StringMatch@That& (0+255),f,b
 15362  01625A  2B7E               	incf	(StringMatch@That+1)& (0+255),f,b
 15363  01625C                     l10166:
 15364  01625C  C17B  FFD9         	movff	StringMatch@This,fsr2l
 15365  016260  C17C  FFDA         	movff	StringMatch@This+1,fsr2h
 15366  016264  50DF               	movf	indf2,w,c
 15367  016266  A4D8               	btfss	status,2,c
 15368  016268  D7D4               	goto	l10156
 15369                           
 15370                           ;MISC.c: 80: }
 15371                           ;MISC.c: 81: if(*That == 0)
 15372  01626A  0101               	movlb	1	; () banked
 15373  01626C  C17D  FFF6         	movff	StringMatch@That,tblptrl
 15374  016270  0101               	movlb	1	; () banked
 15375  016272  C17E  FFF7         	movff	StringMatch@That+1,tblptrh
 15376  016276                     	if	0	;tblptru may be non-zero
 15377  016276                     	endif
 15378  016276                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15379  016276  0E00               	movlw	low (__mediumconst shr (0+16))
 15380  016278  6EF8               	movwf	tblptru,c
 15381  01627A                     	endif
 15382  01627A  0008               	tblrd		*
 15383  01627C  50F5               	movf	tablat,w,c
 15384  01627E  0900               	iorlw	0
 15385  016280  A4D8               	btfss	status,2,c
 15386  016282  D002               	goto	l10176
 15387                           
 15388                           ; BSR set to: 1
 15389                           ;MISC.c: 82: {
 15390                           ;MISC.c: 83: return 1;
 15391  016284  0E01               	movlw	1
 15392  016286  0012               	return	
 15393  016288                     l10176:
 15394                           
 15395                           ; BSR set to: 1
 15396                           ;MISC.c: 85: else
 15397                           ;MISC.c: 86: {
 15398                           ;MISC.c: 87: return 0;
 15399  016288  0E00               	movlw	0
 15400  01628A  0012               	return	
 15401  01628C                     __end_of_StringMatch:
 15402                           	opt stack 0
 15403                           tblptru	equ	0xFF8
 15404                           tblptrh	equ	0xFF7
 15405                           tblptrl	equ	0xFF6
 15406                           tablat	equ	0xFF5
 15407                           prodh	equ	0xFF4
 15408                           prodl	equ	0xFF3
 15409                           intcon	equ	0xFF2
 15410                           postinc0	equ	0xFEE
 15411                           wreg	equ	0xFE8
 15412                           postinc1	equ	0xFE6
 15413                           postdec1	equ	0xFE5
 15414                           fsr1l	equ	0xFE1
 15415                           indf2	equ	0xFDF
 15416                           postinc2	equ	0xFDE
 15417                           fsr2h	equ	0xFDA
 15418                           fsr2l	equ	0xFD9
 15419                           status	equ	0xFD8
 15420                           
 15421 ;; *************** function _StringContains *****************
 15422 ;; Defined at:
 15423 ;;		line 91 in file "MISC.c"
 15424 ;; Parameters:    Size  Location     Type
 15425 ;;  This            2   14[BANK1 ] PTR unsigned char 
 15426 ;;		 -> Rxdata(100), 
 15427 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 15428 ;;		 -> STR_235(2), STR_211(4), STR_204(5), STR_201(8), 
 15429 ;;		 -> STR_200(2), STR_180(2), STR_179(2), STR_163(2), 
 15430 ;;		 -> STR_162(2), STR_143(2), STR_140(2), STR_124(5), 
 15431 ;;		 -> STR_123(6), STR_120(4), STR_119(6), STR_116(2), 
 15432 ;;		 -> STR_115(6), STR_114(2), STR_113(10), STR_112(6), 
 15433 ;;		 -> STR_111(6), STR_79(4), STR_78(6), STR_77(2), 
 15434 ;;		 -> STR_52(2), STR_20(2), 
 15435 ;; Auto vars:     Size  Location     Type
 15436 ;;		None
 15437 ;; Return value:  Size  Location     Type
 15438 ;;                  1    wreg      unsigned char 
 15439 ;; Registers used:
 15440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15441 ;; Tracked objects:
 15442 ;;		On entry : 0/0
 15443 ;;		On exit  : 0/0
 15444 ;;		Unchanged: 0/0
 15445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15446 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15448 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15449 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 15450 ;;Total ram usage:        5 bytes
 15451 ;; Hardware stack levels used:    1
 15452 ;; Hardware stack levels required when called:    6
 15453 ;; This function calls:
 15454 ;;		Nothing
 15455 ;; This function is called by:
 15456 ;;		_Command
 15457 ;; This function uses a non-reentrant model
 15458 ;;
 15459                           
 15460                           	psect	text23
 15461  016192                     __ptext23:
 15462                           	opt stack 0
 15463  016192                     _StringContains:
 15464                           	opt stack 22
 15465                           
 15466                           ;MISC.c: 93: while(*This != 0)
 15467                           
 15468                           ; BSR set to: 1
 15469                           ;incstack = 0
 15470  016192  D035               	goto	l10200
 15471  016194                     l10182:
 15472                           
 15473                           ;MISC.c: 96: {
 15474                           ;MISC.c: 97: That++;
 15475  016194  0101               	movlb	1	; () banked
 15476  016196  4B7D               	infsnz	StringContains@That& (0+255),f,b
 15477  016198  2B7E               	incf	(StringContains@That+1)& (0+255),f,b
 15478                           
 15479                           ;MISC.c: 98: This++;
 15480  01619A  0101               	movlb	1	; () banked
 15481  01619C  4B7B               	infsnz	StringContains@This& (0+255),f,b
 15482  01619E  2B7C               	incf	(StringContains@This+1)& (0+255),f,b
 15483                           
 15484                           ; BSR set to: 1
 15485                           ;MISC.c: 99: if(*That == 0)
 15486  0161A0  0101               	movlb	1	; () banked
 15487  0161A2  C17D  FFF6         	movff	StringContains@That,tblptrl
 15488  0161A6  0101               	movlb	1	; () banked
 15489  0161A8  C17E  FFF7         	movff	StringContains@That+1,tblptrh
 15490  0161AC                     	if	0	;tblptru may be non-zero
 15491  0161AC                     	endif
 15492  0161AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15493  0161AC  0E00               	movlw	low (__mediumconst shr (0+16))
 15494  0161AE  6EF8               	movwf	tblptru,c
 15495  0161B0                     	endif
 15496  0161B0  0008               	tblrd		*
 15497  0161B2  50F5               	movf	tablat,w,c
 15498  0161B4  0900               	iorlw	0
 15499  0161B6  A4D8               	btfss	status,2,c
 15500  0161B8  D002               	goto	l10190
 15501                           
 15502                           ; BSR set to: 1
 15503                           ;MISC.c: 100: {
 15504                           ;MISC.c: 101: return 1;
 15505  0161BA  0E01               	movlw	1
 15506  0161BC  0012               	return	
 15507  0161BE                     l10190:
 15508                           
 15509                           ; BSR set to: 1
 15510                           ;MISC.c: 102: }
 15511                           ;MISC.c: 103: if(*This == 0)
 15512  0161BE  C17B  FFD9         	movff	StringContains@This,fsr2l
 15513  0161C2  C17C  FFDA         	movff	StringContains@This+1,fsr2h
 15514  0161C6  50DF               	movf	indf2,w,c
 15515  0161C8  A4D8               	btfss	status,2,c
 15516  0161CA  D002               	goto	l10196
 15517                           
 15518                           ; BSR set to: 1
 15519                           ;MISC.c: 104: {
 15520                           ;MISC.c: 105: return 0;
 15521  0161CC  0E00               	movlw	0
 15522  0161CE  0012               	return	
 15523  0161D0                     l10196:
 15524  0161D0  0101               	movlb	1	; () banked
 15525  0161D2  C17D  FFF6         	movff	StringContains@That,tblptrl
 15526  0161D6  0101               	movlb	1	; () banked
 15527  0161D8  C17E  FFF7         	movff	StringContains@That+1,tblptrh
 15528  0161DC                     	if	0	;tblptru may be non-zero
 15529  0161DC                     	endif
 15530  0161DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15531  0161DC  0E00               	movlw	low (__mediumconst shr (0+16))
 15532  0161DE  6EF8               	movwf	tblptru,c
 15533  0161E0                     	endif
 15534  0161E0  0008               	tblrd		*
 15535  0161E2  CFF5 F17F          	movff	tablat,??_StringContains
 15536  0161E6  C17B  FFD9         	movff	StringContains@This,fsr2l
 15537  0161EA  C17C  FFDA         	movff	StringContains@This+1,fsr2h
 15538  0161EE  50DF               	movf	indf2,w,c
 15539  0161F0  0101               	movlb	1	; () banked
 15540  0161F2  197F               	xorwf	??_StringContains& (0+255),w,b
 15541  0161F4  B4D8               	btfsc	status,2,c
 15542  0161F6  D7CE               	goto	l10182
 15543                           
 15544                           ; BSR set to: 1
 15545                           ;MISC.c: 106: }
 15546                           ;MISC.c: 107: }
 15547                           ;MISC.c: 108: This++;
 15548                           
 15549                           ; BSR set to: 1
 15550  0161F8  0101               	movlb	1	; () banked
 15551  0161FA  4B7B               	infsnz	StringContains@This& (0+255),f,b
 15552  0161FC  2B7C               	incf	(StringContains@This+1)& (0+255),f,b
 15553  0161FE                     l10200:
 15554  0161FE  C17B  FFD9         	movff	StringContains@This,fsr2l
 15555  016202  C17C  FFDA         	movff	StringContains@This+1,fsr2h
 15556  016206  50DF               	movf	indf2,w,c
 15557  016208  A4D8               	btfss	status,2,c
 15558  01620A  D7E2               	goto	l10196
 15559                           
 15560                           ;MISC.c: 109: }
 15561                           ;MISC.c: 110: return 0;
 15562  01620C  0E00               	movlw	0
 15563  01620E  0012               	return	
 15564  016210                     __end_of_StringContains:
 15565                           	opt stack 0
 15566                           tblptru	equ	0xFF8
 15567                           tblptrh	equ	0xFF7
 15568                           tblptrl	equ	0xFF6
 15569                           tablat	equ	0xFF5
 15570                           prodh	equ	0xFF4
 15571                           prodl	equ	0xFF3
 15572                           intcon	equ	0xFF2
 15573                           postinc0	equ	0xFEE
 15574                           wreg	equ	0xFE8
 15575                           postinc1	equ	0xFE6
 15576                           postdec1	equ	0xFE5
 15577                           fsr1l	equ	0xFE1
 15578                           indf2	equ	0xFDF
 15579                           postinc2	equ	0xFDE
 15580                           fsr2h	equ	0xFDA
 15581                           fsr2l	equ	0xFD9
 15582                           status	equ	0xFD8
 15583                           
 15584 ;; *************** function _StringAddEqual *****************
 15585 ;; Defined at:
 15586 ;;		line 234 in file "MISC.c"
 15587 ;; Parameters:    Size  Location     Type
 15588 ;;  Input           2   29[BANK1 ] PTR unsigned char 
 15589 ;;		 -> Rxdata(100), 
 15590 ;; Auto vars:     Size  Location     Type
 15591 ;;  temp          100    0[BANK2 ] unsigned char [100]
 15592 ;;  j               1  102[BANK2 ] unsigned char 
 15593 ;;  i               1  101[BANK2 ] unsigned char 
 15594 ;;  firstnumber     1  100[BANK2 ] unsigned char 
 15595 ;; Return value:  Size  Location     Type
 15596 ;;                  1    wreg      unsigned char 
 15597 ;; Registers used:
 15598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15599 ;; Tracked objects:
 15600 ;;		On entry : 0/0
 15601 ;;		On exit  : 0/0
 15602 ;;		Unchanged: 0/0
 15603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15604 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15605 ;;      Locals:         0       0       0     103       0       0       0       0       0       0       0       0       
      +0       0
 15606 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15607 ;;      Totals:         0       0       4     103       0       0       0       0       0       0       0       0       
      +0       0
 15608 ;;Total ram usage:      107 bytes
 15609 ;; Hardware stack levels used:    1
 15610 ;; Hardware stack levels required when called:    8
 15611 ;; This function calls:
 15612 ;;		_BufferCopy
 15613 ;;		_cleanBuffer
 15614 ;; This function is called by:
 15615 ;;		_Command
 15616 ;; This function uses a non-reentrant model
 15617 ;;
 15618                           
 15619                           	psect	text24
 15620  0142B8                     __ptext24:
 15621                           	opt stack 0
 15622  0142B8                     _StringAddEqual:
 15623                           	opt stack 20
 15624                           
 15625                           ;MISC.c: 236: unsigned char i =0;
 15626                           
 15627                           ;incstack = 0
 15628  0142B8  0E00               	movlw	0
 15629  0142BA  0102               	movlb	2	; () banked
 15630  0142BC  6F65               	movwf	StringAddEqual@i& (0+255),b
 15631                           
 15632                           ;MISC.c: 237: unsigned char j =0;
 15633  0142BE  0E00               	movlw	0
 15634  0142C0  0102               	movlb	2	; () banked
 15635  0142C2  6F66               	movwf	StringAddEqual@j& (0+255),b
 15636                           
 15637                           ;MISC.c: 238: unsigned char firstnumber =200;
 15638  0142C4  0EC8               	movlw	200
 15639  0142C6  0102               	movlb	2	; () banked
 15640  0142C8  6F64               	movwf	StringAddEqual@firstnumber& (0+255),b
 15641                           
 15642                           ; BSR set to: 2
 15643                           ;MISC.c: 239: unsigned char temp[100];
 15644                           ;MISC.c: 240: cleanBuffer(temp,100);
 15645  0142CA  0102               	movlb	2	; () banked
 15646  0142CC  0E02               	movlw	high StringAddEqual@temp
 15647  0142CE  0101               	movlb	1	; () banked
 15648  0142D0  6F7C               	movwf	(cleanBuffer@data+1)& (0+255),b
 15649  0142D2  0102               	movlb	2	; () banked
 15650  0142D4  0E00               	movlw	low StringAddEqual@temp
 15651  0142D6  0101               	movlb	1	; () banked
 15652  0142D8  6F7B               	movwf	cleanBuffer@data& (0+255),b
 15653  0142DA  0E00               	movlw	0
 15654  0142DC  0101               	movlb	1	; () banked
 15655  0142DE  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
 15656  0142E0  0E64               	movlw	100
 15657  0142E2  0101               	movlb	1	; () banked
 15658  0142E4  6F7D               	movwf	cleanBuffer@count& (0+255),b
 15659  0142E6  ECCC  F0B3         	call	_cleanBuffer	;wreg free
 15660                           
 15661                           ;MISC.c: 241: while(Input[i] != 0)
 15662  0142EA  D02F               	goto	l10356
 15663  0142EC                     l10348:
 15664                           
 15665                           ;MISC.c: 242: {
 15666                           ;MISC.c: 243: if((Input[i] >= 48) && (Input[i] <= 57) || (Input[i] == '-'))
 15667  0142EC  0102               	movlb	2	; () banked
 15668  0142EE  5165               	movf	StringAddEqual@i& (0+255),w,b
 15669  0142F0  0D01               	mullw	1
 15670  0142F2  50F3               	movf	prodl,w,c
 15671  0142F4  0101               	movlb	1	; () banked
 15672  0142F6  258A               	addwf	StringAddEqual@Input& (0+255),w,b
 15673  0142F8  6ED9               	movwf	fsr2l,c
 15674  0142FA  50F4               	movf	prodh,w,c
 15675  0142FC  0101               	movlb	1	; () banked
 15676  0142FE  218B               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15677  014300  6EDA               	movwf	fsr2h,c
 15678  014302  0E2F               	movlw	47
 15679  014304  64DF               	cpfsgt	indf2,c
 15680  014306  D00E               	goto	l10352
 15681                           
 15682                           ; BSR set to: 1
 15683  014308  0102               	movlb	2	; () banked
 15684  01430A  5165               	movf	StringAddEqual@i& (0+255),w,b
 15685  01430C  0D01               	mullw	1
 15686  01430E  50F3               	movf	prodl,w,c
 15687  014310  0101               	movlb	1	; () banked
 15688  014312  258A               	addwf	StringAddEqual@Input& (0+255),w,b
 15689  014314  6ED9               	movwf	fsr2l,c
 15690  014316  50F4               	movf	prodh,w,c
 15691  014318  0101               	movlb	1	; () banked
 15692  01431A  218B               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15693  01431C  6EDA               	movwf	fsr2h,c
 15694  01431E  0E39               	movlw	57
 15695  014320  64DF               	cpfsgt	indf2,c
 15696  014322  D00E               	goto	l301
 15697  014324                     l10352:
 15698                           
 15699                           ; BSR set to: 1
 15700  014324  0102               	movlb	2	; () banked
 15701  014326  5165               	movf	StringAddEqual@i& (0+255),w,b
 15702  014328  0D01               	mullw	1
 15703  01432A  50F3               	movf	prodl,w,c
 15704  01432C  0101               	movlb	1	; () banked
 15705  01432E  258A               	addwf	StringAddEqual@Input& (0+255),w,b
 15706  014330  6ED9               	movwf	fsr2l,c
 15707  014332  50F4               	movf	prodh,w,c
 15708  014334  0101               	movlb	1	; () banked
 15709  014336  218B               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15710  014338  6EDA               	movwf	fsr2h,c
 15711  01433A  0E2D               	movlw	45
 15712  01433C  62DF               	cpfseq	indf2,c
 15713  01433E  D003               	goto	l10354
 15714  014340                     l301:
 15715                           
 15716                           ; BSR set to: 1
 15717                           ;MISC.c: 244: {
 15718                           ;MISC.c: 245: firstnumber=i;
 15719  014340  C265  F264         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 15720                           
 15721                           ;MISC.c: 246: break;
 15722  014344  D010               	goto	l10358
 15723  014346                     l10354:
 15724                           
 15725                           ; BSR set to: 1
 15726                           ;MISC.c: 247: }
 15727                           ;MISC.c: 248: i++;
 15728  014346  0102               	movlb	2	; () banked
 15729  014348  2B65               	incf	StringAddEqual@i& (0+255),f,b
 15730  01434A                     l10356:
 15731  01434A  0102               	movlb	2	; () banked
 15732  01434C  5165               	movf	StringAddEqual@i& (0+255),w,b
 15733  01434E  0D01               	mullw	1
 15734  014350  50F3               	movf	prodl,w,c
 15735  014352  0101               	movlb	1	; () banked
 15736  014354  258A               	addwf	StringAddEqual@Input& (0+255),w,b
 15737  014356  6ED9               	movwf	fsr2l,c
 15738  014358  50F4               	movf	prodh,w,c
 15739  01435A  0101               	movlb	1	; () banked
 15740  01435C  218B               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15741  01435E  6EDA               	movwf	fsr2h,c
 15742  014360  50DF               	movf	indf2,w,c
 15743  014362  A4D8               	btfss	status,2,c
 15744  014364  D7C3               	goto	l10348
 15745  014366                     l10358:
 15746                           
 15747                           ; BSR set to: 1
 15748                           ;MISC.c: 249: }
 15749                           ;MISC.c: 250: if(firstnumber ==200)
 15750  014366  0102               	movlb	2	; () banked
 15751  014368  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 15752  01436A  0AC8               	xorlw	200
 15753  01436C  B4D8               	btfsc	status,2,c
 15754  01436E  0012               	return	
 15755                           
 15756                           ; BSR set to: 2
 15757                           ;MISC.c: 253: }
 15758                           ;MISC.c: 254: for(j=0;j<firstnumber;j++)
 15759                           
 15760                           ; BSR set to: 2
 15761                           
 15762                           ; BSR set to: 2
 15763                           ;MISC.c: 251: {
 15764                           ;MISC.c: 252: return 0;
 15765                           ;	Return value of _StringAddEqual is never used
 15766  014370  0E00               	movlw	0
 15767  014372  0102               	movlb	2	; () banked
 15768  014374  6F66               	movwf	StringAddEqual@j& (0+255),b
 15769  014376  D01A               	goto	l10368
 15770  014378                     l10364:
 15771                           
 15772                           ; BSR set to: 2
 15773                           ;MISC.c: 255: {
 15774                           ;MISC.c: 256: temp[j] = Input[j];
 15775  014378  0102               	movlb	2	; () banked
 15776  01437A  5166               	movf	StringAddEqual@j& (0+255),w,b
 15777  01437C  0D01               	mullw	1
 15778  01437E  50F3               	movf	prodl,w,c
 15779  014380  0101               	movlb	1	; () banked
 15780  014382  258A               	addwf	StringAddEqual@Input& (0+255),w,b
 15781  014384  6ED9               	movwf	fsr2l,c
 15782  014386  50F4               	movf	prodh,w,c
 15783  014388  0101               	movlb	1	; () banked
 15784  01438A  218B               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15785  01438C  6EDA               	movwf	fsr2h,c
 15786  01438E  0102               	movlb	2	; () banked
 15787  014390  5166               	movf	StringAddEqual@j& (0+255),w,b
 15788  014392  0D01               	mullw	1
 15789  014394  0102               	movlb	2	; () banked
 15790  014396  0E00               	movlw	low StringAddEqual@temp
 15791  014398  24F3               	addwf	prodl,w,c
 15792  01439A  6EE1               	movwf	fsr1l,c
 15793  01439C  0102               	movlb	2	; () banked
 15794  01439E  0E02               	movlw	high StringAddEqual@temp
 15795  0143A0  20F4               	addwfc	prodh,w,c
 15796  0143A2  6EE2               	movwf	fsr1h,c
 15797  0143A4  CFDF FFE7          	movff	indf2,indf1
 15798                           
 15799                           ; BSR set to: 2
 15800  0143A8  0102               	movlb	2	; () banked
 15801  0143AA  2B66               	incf	StringAddEqual@j& (0+255),f,b
 15802  0143AC                     l10368:
 15803                           
 15804                           ; BSR set to: 2
 15805  0143AC  0102               	movlb	2	; () banked
 15806  0143AE  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 15807  0143B0  0102               	movlb	2	; () banked
 15808  0143B2  5D66               	subwf	StringAddEqual@j& (0+255),w,b
 15809  0143B4  A0D8               	btfss	status,0,c
 15810  0143B6  D7E0               	goto	l10364
 15811                           
 15812                           ; BSR set to: 2
 15813                           ;MISC.c: 257: }
 15814                           ;MISC.c: 258: temp[firstnumber] = '=';
 15815                           
 15816                           ; BSR set to: 2
 15817  0143B8  0102               	movlb	2	; () banked
 15818  0143BA  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 15819  0143BC  0D01               	mullw	1
 15820  0143BE  0102               	movlb	2	; () banked
 15821  0143C0  0E00               	movlw	low StringAddEqual@temp
 15822  0143C2  24F3               	addwf	prodl,w,c
 15823  0143C4  6ED9               	movwf	fsr2l,c
 15824  0143C6  0102               	movlb	2	; () banked
 15825  0143C8  0E02               	movlw	high StringAddEqual@temp
 15826  0143CA  20F4               	addwfc	prodh,w,c
 15827  0143CC  6EDA               	movwf	fsr2h,c
 15828  0143CE  0E3D               	movlw	61
 15829  0143D0  6EDF               	movwf	indf2,c
 15830                           
 15831                           ; BSR set to: 2
 15832                           ;MISC.c: 259: for(j = (firstnumber);j<99;j++)
 15833  0143D2  C264  F266         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 15834  0143D6  D031               	goto	L11
 15835  0143D8                     l10378:
 15836                           
 15837                           ; BSR set to: 2
 15838                           ;MISC.c: 260: {
 15839                           ;MISC.c: 261: temp[j+1] = Input[j];
 15840  0143D8  0102               	movlb	2	; () banked
 15841  0143DA  5166               	movf	StringAddEqual@j& (0+255),w,b
 15842  0143DC  0D01               	mullw	1
 15843  0143DE  50F3               	movf	prodl,w,c
 15844  0143E0  0101               	movlb	1	; () banked
 15845  0143E2  258A               	addwf	StringAddEqual@Input& (0+255),w,b
 15846  0143E4  6ED9               	movwf	fsr2l,c
 15847  0143E6  50F4               	movf	prodh,w,c
 15848  0143E8  0101               	movlb	1	; () banked
 15849  0143EA  218B               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15850  0143EC  6EDA               	movwf	fsr2h,c
 15851  0143EE  0102               	movlb	2	; () banked
 15852  0143F0  5166               	movf	StringAddEqual@j& (0+255),w,b
 15853  0143F2  0101               	movlb	1	; () banked
 15854  0143F4  6F8C               	movwf	??_StringAddEqual& (0+255),b
 15855  0143F6  6B8D               	clrf	(??_StringAddEqual+1)& (0+255),b
 15856  0143F8  0E01               	movlw	1
 15857  0143FA  0101               	movlb	1	; () banked
 15858  0143FC  278C               	addwf	??_StringAddEqual& (0+255),f,b
 15859  0143FE  0E00               	movlw	0
 15860  014400  238D               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 15861  014402  0102               	movlb	2	; () banked
 15862  014404  0E00               	movlw	low StringAddEqual@temp
 15863  014406  0101               	movlb	1	; () banked
 15864  014408  258C               	addwf	??_StringAddEqual& (0+255),w,b
 15865  01440A  6EE1               	movwf	fsr1l,c
 15866  01440C  0102               	movlb	2	; () banked
 15867  01440E  0E02               	movlw	high StringAddEqual@temp
 15868  014410  0101               	movlb	1	; () banked
 15869  014412  218D               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 15870  014414  6EE2               	movwf	fsr1h,c
 15871  014416  CFDF FFE7          	movff	indf2,indf1
 15872                           
 15873                           ; BSR set to: 1
 15874                           ;MISC.c: 262: if(Input[j] ==0)
 15875  01441A  0102               	movlb	2	; () banked
 15876  01441C  5166               	movf	StringAddEqual@j& (0+255),w,b
 15877  01441E  0D01               	mullw	1
 15878  014420  50F3               	movf	prodl,w,c
 15879  014422  0101               	movlb	1	; () banked
 15880  014424  258A               	addwf	StringAddEqual@Input& (0+255),w,b
 15881  014426  6ED9               	movwf	fsr2l,c
 15882  014428  50F4               	movf	prodh,w,c
 15883  01442A  0101               	movlb	1	; () banked
 15884  01442C  218B               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15885  01442E  6EDA               	movwf	fsr2h,c
 15886  014430  50DF               	movf	indf2,w,c
 15887  014432  B4D8               	btfsc	status,2,c
 15888  014434  D006               	goto	l10388
 15889                           
 15890                           ; BSR set to: 1
 15891                           
 15892                           ; BSR set to: 1
 15893                           
 15894                           ; BSR set to: 1
 15895                           ;MISC.c: 263: {
 15896                           ;MISC.c: 264: break;
 15897  014436  0102               	movlb	2	; () banked
 15898  014438  2B66               	incf	StringAddEqual@j& (0+255),f,b
 15899  01443A                     L11:
 15900                           
 15901                           ; BSR set to: 2
 15902  01443A  0E62               	movlw	98
 15903  01443C  0102               	movlb	2	; () banked
 15904  01443E  6566               	cpfsgt	StringAddEqual@j& (0+255),b
 15905  014440  D7CB               	goto	l10378
 15906  014442                     l10388:
 15907                           
 15908                           ;MISC.c: 265: }
 15909                           ;MISC.c: 266: }
 15910                           ;MISC.c: 267: BufferCopy(temp,Input,100, 0);
 15911  014442  0102               	movlb	2	; () banked
 15912  014444  0E02               	movlw	high StringAddEqual@temp
 15913  014446  0101               	movlb	1	; () banked
 15914  014448  6F84               	movwf	(BufferCopy@from+1)& (0+255),b
 15915  01444A  0102               	movlb	2	; () banked
 15916  01444C  0E00               	movlw	low StringAddEqual@temp
 15917  01444E  0101               	movlb	1	; () banked
 15918  014450  6F83               	movwf	BufferCopy@from& (0+255),b
 15919  014452  0101               	movlb	1	; () banked
 15920  014454  C18B  F186         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 15921  014458  0101               	movlb	1	; () banked
 15922  01445A  C18A  F185         	movff	StringAddEqual@Input,BufferCopy@to
 15923  01445E  0E64               	movlw	100
 15924  014460  0101               	movlb	1	; () banked
 15925  014462  6F87               	movwf	BufferCopy@count& (0+255),b
 15926  014464  0E00               	movlw	0
 15927  014466  0101               	movlb	1	; () banked
 15928  014468  6F88               	movwf	BufferCopy@shift& (0+255),b
 15929  01446A  ECA9  F0AB         	call	_BufferCopy	;wreg free
 15930  01446E  0012               	return	
 15931  014470                     __end_of_StringAddEqual:
 15932                           	opt stack 0
 15933                           tblptru	equ	0xFF8
 15934                           tblptrh	equ	0xFF7
 15935                           tblptrl	equ	0xFF6
 15936                           tablat	equ	0xFF5
 15937                           prodh	equ	0xFF4
 15938                           prodl	equ	0xFF3
 15939                           intcon	equ	0xFF2
 15940                           postinc0	equ	0xFEE
 15941                           wreg	equ	0xFE8
 15942                           indf1	equ	0xFE7
 15943                           postinc1	equ	0xFE6
 15944                           postdec1	equ	0xFE5
 15945                           fsr1h	equ	0xFE2
 15946                           fsr1l	equ	0xFE1
 15947                           indf2	equ	0xFDF
 15948                           postinc2	equ	0xFDE
 15949                           fsr2h	equ	0xFDA
 15950                           fsr2l	equ	0xFD9
 15951                           status	equ	0xFD8
 15952                           
 15953 ;; *************** function _StartsWith *****************
 15954 ;; Defined at:
 15955 ;;		line 113 in file "MISC.c"
 15956 ;; Parameters:    Size  Location     Type
 15957 ;;  This            2   14[BANK1 ] PTR unsigned char 
 15958 ;;		 -> Rxdata(100), 
 15959 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 15960 ;;		 -> STR_234(4), STR_199(4), STR_178(4), STR_161(9), 
 15961 ;;		 -> STR_142(17), STR_141(7), STR_139(4), STR_76(8), 
 15962 ;;		 -> STR_51(11), STR_19(4), 
 15963 ;; Auto vars:     Size  Location     Type
 15964 ;;		None
 15965 ;; Return value:  Size  Location     Type
 15966 ;;                  1    wreg      unsigned char 
 15967 ;; Registers used:
 15968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15969 ;; Tracked objects:
 15970 ;;		On entry : 0/0
 15971 ;;		On exit  : 0/0
 15972 ;;		Unchanged: 0/0
 15973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15974 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15976 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15977 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 15978 ;;Total ram usage:        5 bytes
 15979 ;; Hardware stack levels used:    1
 15980 ;; Hardware stack levels required when called:    6
 15981 ;; This function calls:
 15982 ;;		Nothing
 15983 ;; This function is called by:
 15984 ;;		_Command
 15985 ;; This function uses a non-reentrant model
 15986 ;;
 15987                           
 15988                           	psect	text25
 15989  015C98                     __ptext25:
 15990                           	opt stack 0
 15991  015C98                     _StartsWith:
 15992                           	opt stack 22
 15993                           
 15994                           ;MISC.c: 115: while(*This != 0)
 15995                           
 15996                           ;incstack = 0
 15997  015C98  D02B               	goto	l10224
 15998  015C9A                     l10208:
 15999                           
 16000                           ;MISC.c: 116: {
 16001                           ;MISC.c: 117: if(*This != *That)
 16002  015C9A  0101               	movlb	1	; () banked
 16003  015C9C  C17D  FFF6         	movff	StartsWith@That,tblptrl
 16004  015CA0  0101               	movlb	1	; () banked
 16005  015CA2  C17E  FFF7         	movff	StartsWith@That+1,tblptrh
 16006  015CA6                     	if	0	;tblptru may be non-zero
 16007  015CA6                     	endif
 16008  015CA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16009  015CA6  0E00               	movlw	low (__mediumconst shr (0+16))
 16010  015CA8  6EF8               	movwf	tblptru,c
 16011  015CAA                     	endif
 16012  015CAA  0008               	tblrd		*
 16013  015CAC  CFF5 F17F          	movff	tablat,??_StartsWith
 16014  015CB0  C17B  FFD9         	movff	StartsWith@This,fsr2l
 16015  015CB4  C17C  FFDA         	movff	StartsWith@This+1,fsr2h
 16016  015CB8  50DF               	movf	indf2,w,c
 16017  015CBA  0101               	movlb	1	; () banked
 16018  015CBC  197F               	xorwf	??_StartsWith& (0+255),w,b
 16019  015CBE  B4D8               	btfsc	status,2,c
 16020  015CC0  D011               	goto	l10222
 16021                           
 16022                           ; BSR set to: 1
 16023                           ;MISC.c: 118: {
 16024                           ;MISC.c: 119: if(*That != 0)
 16025  015CC2  0101               	movlb	1	; () banked
 16026  015CC4  C17D  FFF6         	movff	StartsWith@That,tblptrl
 16027  015CC8  0101               	movlb	1	; () banked
 16028  015CCA  C17E  FFF7         	movff	StartsWith@That+1,tblptrh
 16029  015CCE                     	if	0	;tblptru may be non-zero
 16030  015CCE                     	endif
 16031  015CCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16032  015CCE  0E00               	movlw	low (__mediumconst shr (0+16))
 16033  015CD0  6EF8               	movwf	tblptru,c
 16034  015CD2                     	endif
 16035  015CD2  0008               	tblrd		*
 16036  015CD4  50F5               	movf	tablat,w,c
 16037  015CD6  0900               	iorlw	0
 16038  015CD8  B4D8               	btfsc	status,2,c
 16039  015CDA  D002               	goto	l10218
 16040                           
 16041                           ; BSR set to: 1
 16042                           ;MISC.c: 120: {
 16043                           ;MISC.c: 121: return 0;
 16044  015CDC  0E00               	movlw	0
 16045  015CDE  0012               	return	
 16046  015CE0                     l10218:
 16047                           
 16048                           ; BSR set to: 1
 16049                           ;MISC.c: 123: else
 16050                           ;MISC.c: 124: {
 16051                           ;MISC.c: 125: return 1;
 16052  015CE0  0E01               	movlw	1
 16053  015CE2  0012               	return	
 16054  015CE4                     l10222:
 16055                           
 16056                           ; BSR set to: 1
 16057                           ;MISC.c: 126: }
 16058                           ;MISC.c: 127: }
 16059                           ;MISC.c: 128: This++;
 16060  015CE4  0101               	movlb	1	; () banked
 16061  015CE6  4B7B               	infsnz	StartsWith@This& (0+255),f,b
 16062  015CE8  2B7C               	incf	(StartsWith@This+1)& (0+255),f,b
 16063                           
 16064                           ;MISC.c: 129: That++;
 16065  015CEA  0101               	movlb	1	; () banked
 16066  015CEC  4B7D               	infsnz	StartsWith@That& (0+255),f,b
 16067  015CEE  2B7E               	incf	(StartsWith@That+1)& (0+255),f,b
 16068  015CF0                     l10224:
 16069  015CF0  C17B  FFD9         	movff	StartsWith@This,fsr2l
 16070  015CF4  C17C  FFDA         	movff	StartsWith@This+1,fsr2h
 16071  015CF8  50DF               	movf	indf2,w,c
 16072  015CFA  A4D8               	btfss	status,2,c
 16073  015CFC  D7CE               	goto	l10208
 16074                           
 16075                           ;MISC.c: 130: }
 16076                           ;MISC.c: 131: if(*This == 0 && *That == 0)
 16077  015CFE  C17B  FFD9         	movff	StartsWith@This,fsr2l
 16078  015D02  C17C  FFDA         	movff	StartsWith@This+1,fsr2h
 16079  015D06  50DF               	movf	indf2,w,c
 16080  015D08  A4D8               	btfss	status,2,c
 16081  015D0A  D00F               	goto	l10236
 16082  015D0C  0101               	movlb	1	; () banked
 16083  015D0E  C17D  FFF6         	movff	StartsWith@That,tblptrl
 16084  015D12  0101               	movlb	1	; () banked
 16085  015D14  C17E  FFF7         	movff	StartsWith@That+1,tblptrh
 16086  015D18                     	if	0	;tblptru may be non-zero
 16087  015D18                     	endif
 16088  015D18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16089  015D18  0E00               	movlw	low (__mediumconst shr (0+16))
 16090  015D1A  6EF8               	movwf	tblptru,c
 16091  015D1C                     	endif
 16092  015D1C  0008               	tblrd		*
 16093  015D1E  50F5               	movf	tablat,w,c
 16094  015D20  0900               	iorlw	0
 16095  015D22  A4D8               	btfss	status,2,c
 16096  015D24  D002               	goto	l10236
 16097                           
 16098                           ; BSR set to: 1
 16099                           ;MISC.c: 132: {
 16100                           ;MISC.c: 133: return 1;
 16101  015D26  0E01               	movlw	1
 16102  015D28  0012               	return	
 16103  015D2A                     l10236:
 16104                           
 16105                           ;MISC.c: 135: else
 16106                           ;MISC.c: 136: {
 16107                           ;MISC.c: 137: return 0;
 16108  015D2A  0E00               	movlw	0
 16109  015D2C  0012               	return	
 16110  015D2E                     __end_of_StartsWith:
 16111                           	opt stack 0
 16112                           tblptru	equ	0xFF8
 16113                           tblptrh	equ	0xFF7
 16114                           tblptrl	equ	0xFF6
 16115                           tablat	equ	0xFF5
 16116                           prodh	equ	0xFF4
 16117                           prodl	equ	0xFF3
 16118                           intcon	equ	0xFF2
 16119                           postinc0	equ	0xFEE
 16120                           wreg	equ	0xFE8
 16121                           indf1	equ	0xFE7
 16122                           postinc1	equ	0xFE6
 16123                           postdec1	equ	0xFE5
 16124                           fsr1h	equ	0xFE2
 16125                           fsr1l	equ	0xFE1
 16126                           indf2	equ	0xFDF
 16127                           postinc2	equ	0xFDE
 16128                           fsr2h	equ	0xFDA
 16129                           fsr2l	equ	0xFD9
 16130                           status	equ	0xFD8
 16131                           
 16132 ;; *************** function _SprintDate *****************
 16133 ;; Defined at:
 16134 ;;		line 183 in file "RTC.c"
 16135 ;; Parameters:    Size  Location     Type
 16136 ;;  ReturnBuf       2   65[BANK1 ] PTR unsigned char 
 16137 ;;		 -> Command@buf(200), 
 16138 ;;  DisplayTime     9   67[BANK1 ] struct TIME
 16139 ;;  Military        1   76[BANK1 ] unsigned char 
 16140 ;; Auto vars:     Size  Location     Type
 16141 ;;		None
 16142 ;; Return value:  Size  Location     Type
 16143 ;;		None               void
 16144 ;; Registers used:
 16145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16146 ;; Tracked objects:
 16147 ;;		On entry : 0/0
 16148 ;;		On exit  : 0/0
 16149 ;;		Unchanged: 0/0
 16150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16151 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 16152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16154 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 16155 ;;Total ram usage:       12 bytes
 16156 ;; Hardware stack levels used:    1
 16157 ;; Hardware stack levels required when called:    8
 16158 ;; This function calls:
 16159 ;;		_sprintf
 16160 ;; This function is called by:
 16161 ;;		_Command
 16162 ;; This function uses a non-reentrant model
 16163 ;;
 16164                           
 16165                           	psect	text26
 16166  014E42                     __ptext26:
 16167                           	opt stack 0
 16168  014E42                     _SprintDate:
 16169                           	opt stack 20
 16170                           
 16171                           ;RTC.c: 185: if(!Military)
 16172                           
 16173                           ;incstack = 0
 16174  014E42  0101               	movlb	1	; () banked
 16175  014E44  67B9               	tstfsz	SprintDate@Military& (0+255),b
 16176  014E46  D05D               	goto	l10546
 16177                           
 16178                           ; BSR set to: 1
 16179                           ;RTC.c: 186: {
 16180                           ;RTC.c: 187: if(!DisplayTime.HoursAM_PM)
 16181  014E48  0101               	movlb	1	; () banked
 16182  014E4A  67B4               	tstfsz	(SprintDate@DisplayTime+4)& (0+255),b
 16183  014E4C  D02D               	goto	l10544
 16184                           
 16185                           ; BSR set to: 1
 16186                           ;RTC.c: 188: {
 16187                           ;RTC.c: 189: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d AM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 16188  014E4E  0101               	movlb	1	; () banked
 16189  014E50  C1AF  F188         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 16190  014E54  0101               	movlb	1	; () banked
 16191  014E56  C1AE  F187         	movff	SprintDate@ReturnBuf,sprintf@sp
 16192  014E5A  0EF4               	movlw	high STR_282
 16193  014E5C  0101               	movlb	1	; () banked
 16194  014E5E  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 16195  014E60  0E28               	movlw	low STR_282
 16196  014E62  0101               	movlb	1	; () banked
 16197  014E64  6F89               	movwf	sprintf@f& (0+255),b
 16198  014E66  0101               	movlb	1	; () banked
 16199  014E68  C1B7  F18B         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 16200  014E6C  0101               	movlb	1	; () banked
 16201  014E6E  6B8C               	clrf	(?_sprintf+5)& (0+255),b
 16202  014E70  0101               	movlb	1	; () banked
 16203  014E72  C1B6  F18D         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 16204  014E76  0101               	movlb	1	; () banked
 16205  014E78  6B8E               	clrf	(?_sprintf+7)& (0+255),b
 16206  014E7A  0101               	movlb	1	; () banked
 16207  014E7C  C1B8  F18F         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 16208  014E80  0101               	movlb	1	; () banked
 16209  014E82  6B90               	clrf	(?_sprintf+9)& (0+255),b
 16210  014E84  0101               	movlb	1	; () banked
 16211  014E86  C1B2  F191         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 16212  014E8A  0101               	movlb	1	; () banked
 16213  014E8C  6B92               	clrf	(?_sprintf+11)& (0+255),b
 16214  014E8E  0101               	movlb	1	; () banked
 16215  014E90  C1B1  F193         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 16216  014E94  0101               	movlb	1	; () banked
 16217  014E96  6B94               	clrf	(?_sprintf+13)& (0+255),b
 16218  014E98  0101               	movlb	1	; () banked
 16219  014E9A  C1B0  F195         	movff	SprintDate@DisplayTime,?_sprintf+14
 16220  014E9E  0101               	movlb	1	; () banked
 16221  014EA0  6B96               	clrf	(?_sprintf+15)& (0+255),b
 16222  014EA2  EC31  F092         	call	_sprintf	;wreg free
 16223                           
 16224                           ;RTC.c: 190: }
 16225  014EA6  0012               	return	
 16226  014EA8                     l10544:
 16227                           
 16228                           ;RTC.c: 191: else
 16229                           ;RTC.c: 192: {
 16230                           ;RTC.c: 193: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d PM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 16231  014EA8  0101               	movlb	1	; () banked
 16232  014EAA  C1AF  F188         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 16233  014EAE  0101               	movlb	1	; () banked
 16234  014EB0  C1AE  F187         	movff	SprintDate@ReturnBuf,sprintf@sp
 16235  014EB4  0EF4               	movlw	high STR_283
 16236  014EB6  0101               	movlb	1	; () banked
 16237  014EB8  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 16238  014EBA  0E4B               	movlw	low STR_283
 16239  014EBC  0101               	movlb	1	; () banked
 16240  014EBE  6F89               	movwf	sprintf@f& (0+255),b
 16241  014EC0  0101               	movlb	1	; () banked
 16242  014EC2  C1B7  F18B         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 16243  014EC6  0101               	movlb	1	; () banked
 16244  014EC8  6B8C               	clrf	(?_sprintf+5)& (0+255),b
 16245  014ECA  0101               	movlb	1	; () banked
 16246  014ECC  C1B6  F18D         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 16247  014ED0  0101               	movlb	1	; () banked
 16248  014ED2  6B8E               	clrf	(?_sprintf+7)& (0+255),b
 16249  014ED4  0101               	movlb	1	; () banked
 16250  014ED6  C1B8  F18F         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 16251  014EDA  0101               	movlb	1	; () banked
 16252  014EDC  6B90               	clrf	(?_sprintf+9)& (0+255),b
 16253  014EDE  0101               	movlb	1	; () banked
 16254  014EE0  C1B2  F191         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 16255  014EE4  0101               	movlb	1	; () banked
 16256  014EE6  6B92               	clrf	(?_sprintf+11)& (0+255),b
 16257  014EE8  0101               	movlb	1	; () banked
 16258  014EEA  C1B1  F193         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 16259  014EEE  0101               	movlb	1	; () banked
 16260  014EF0  6B94               	clrf	(?_sprintf+13)& (0+255),b
 16261  014EF2  0101               	movlb	1	; () banked
 16262  014EF4  C1B0  F195         	movff	SprintDate@DisplayTime,?_sprintf+14
 16263  014EF8  0101               	movlb	1	; () banked
 16264  014EFA  6B96               	clrf	(?_sprintf+15)& (0+255),b
 16265  014EFC  EC31  F092         	call	_sprintf	;wreg free
 16266  014F00  0012               	return	
 16267  014F02                     l10546:
 16268                           
 16269                           ;RTC.c: 196: else
 16270                           ;RTC.c: 197: {
 16271                           ;RTC.c: 198: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d", DisplayTime.Month, Dis
      +                          playTime.Date, DisplayTime.Year, DisplayTime.HoursMilitary, DisplayTime.Minutes, Display
      +                          Time.Seconds);
 16272  014F02  0101               	movlb	1	; () banked
 16273  014F04  C1AF  F188         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 16274  014F08  0101               	movlb	1	; () banked
 16275  014F0A  C1AE  F187         	movff	SprintDate@ReturnBuf,sprintf@sp
 16276  014F0E  0EF4               	movlw	high STR_284
 16277  014F10  0101               	movlb	1	; () banked
 16278  014F12  6F8A               	movwf	(sprintf@f+1)& (0+255),b
 16279  014F14  0EF3               	movlw	low STR_284
 16280  014F16  0101               	movlb	1	; () banked
 16281  014F18  6F89               	movwf	sprintf@f& (0+255),b
 16282  014F1A  0101               	movlb	1	; () banked
 16283  014F1C  C1B7  F18B         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 16284  014F20  0101               	movlb	1	; () banked
 16285  014F22  6B8C               	clrf	(?_sprintf+5)& (0+255),b
 16286  014F24  0101               	movlb	1	; () banked
 16287  014F26  C1B6  F18D         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 16288  014F2A  0101               	movlb	1	; () banked
 16289  014F2C  6B8E               	clrf	(?_sprintf+7)& (0+255),b
 16290  014F2E  0101               	movlb	1	; () banked
 16291  014F30  C1B8  F18F         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 16292  014F34  0101               	movlb	1	; () banked
 16293  014F36  6B90               	clrf	(?_sprintf+9)& (0+255),b
 16294  014F38  0101               	movlb	1	; () banked
 16295  014F3A  C1B3  F191         	movff	SprintDate@DisplayTime+3,?_sprintf+10
 16296  014F3E  0101               	movlb	1	; () banked
 16297  014F40  6B92               	clrf	(?_sprintf+11)& (0+255),b
 16298  014F42  0101               	movlb	1	; () banked
 16299  014F44  C1B1  F193         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 16300  014F48  0101               	movlb	1	; () banked
 16301  014F4A  6B94               	clrf	(?_sprintf+13)& (0+255),b
 16302  014F4C  0101               	movlb	1	; () banked
 16303  014F4E  C1B0  F195         	movff	SprintDate@DisplayTime,?_sprintf+14
 16304  014F52  0101               	movlb	1	; () banked
 16305  014F54  6B96               	clrf	(?_sprintf+15)& (0+255),b
 16306  014F56  EC31  F092         	call	_sprintf	;wreg free
 16307  014F5A  0012               	return	
 16308  014F5C                     __end_of_SprintDate:
 16309                           	opt stack 0
 16310                           tblptru	equ	0xFF8
 16311                           tblptrh	equ	0xFF7
 16312                           tblptrl	equ	0xFF6
 16313                           tablat	equ	0xFF5
 16314                           prodh	equ	0xFF4
 16315                           prodl	equ	0xFF3
 16316                           intcon	equ	0xFF2
 16317                           postinc0	equ	0xFEE
 16318                           wreg	equ	0xFE8
 16319                           indf1	equ	0xFE7
 16320                           postinc1	equ	0xFE6
 16321                           postdec1	equ	0xFE5
 16322                           fsr1h	equ	0xFE2
 16323                           fsr1l	equ	0xFE1
 16324                           indf2	equ	0xFDF
 16325                           postinc2	equ	0xFDE
 16326                           fsr2h	equ	0xFDA
 16327                           fsr2l	equ	0xFD9
 16328                           status	equ	0xFD8
 16329                           
 16330 ;; *************** function _sprintf *****************
 16331 ;; Defined at:
 16332 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 16333 ;; Parameters:    Size  Location     Type
 16334 ;;  sp              2   26[BANK1 ] PTR unsigned char 
 16335 ;;		 -> Command@buf(200), 
 16336 ;;  f               2   28[BANK1 ] PTR const unsigned char 
 16337 ;;		 -> STR_284(32), STR_283(35), STR_282(35), STR_267(23), 
 16338 ;;		 -> STR_266(23), STR_208(23), STR_207(23), STR_203(16), 
 16339 ;;		 -> STR_202(36), STR_190(13), STR_189(20), STR_188(17), 
 16340 ;;		 -> STR_187(29), STR_171(15), STR_170(32), STR_152(15), 
 16341 ;;		 -> STR_151(22), 
 16342 ;; Auto vars:     Size  Location     Type
 16343 ;;  idx             1   46[BANK1 ] unsigned char 
 16344 ;;  _val            4   58[BANK1 ] struct .
 16345 ;;  flag            2   63[BANK1 ] unsigned short 
 16346 ;;  width           2   56[BANK1 ] int 
 16347 ;;  ap              2   53[BANK1 ] PTR void [1]
 16348 ;;		 -> ?_sprintf(2), 
 16349 ;;  c               1   62[BANK1 ] char 
 16350 ;;  prec            1   55[BANK1 ] char 
 16351 ;; Return value:  Size  Location     Type
 16352 ;;                  2   26[BANK1 ] int 
 16353 ;; Registers used:
 16354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16355 ;; Tracked objects:
 16356 ;;		On entry : 0/0
 16357 ;;		On exit  : 0/0
 16358 ;;		Unchanged: 0/0
 16359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16360 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 16361 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
 16362 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16363 ;;      Totals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0
 16364 ;;Total ram usage:       39 bytes
 16365 ;; Hardware stack levels used:    1
 16366 ;; Hardware stack levels required when called:    7
 16367 ;; This function calls:
 16368 ;;		___lwdiv
 16369 ;;		___lwmod
 16370 ;;		___wmul
 16371 ;;		_isdigit
 16372 ;; This function is called by:
 16373 ;;		_Command
 16374 ;;		_SprintDate
 16375 ;; This function uses a non-reentrant model
 16376 ;;
 16377                           
 16378                           	psect	text27
 16379  012462                     __ptext27:
 16380                           	opt stack 0
 16381  012462                     _sprintf:
 16382                           	opt stack 21
 16383                           
 16384                           ;doprnt.c: 494: va_list ap;
 16385                           ;doprnt.c: 499: signed char c;
 16386                           ;doprnt.c: 501: int width;
 16387                           ;doprnt.c: 506: signed char prec;
 16388                           ;doprnt.c: 508: unsigned short flag;
 16389                           ;doprnt.c: 527: union {
 16390                           ;doprnt.c: 528: unsigned int _val;
 16391                           ;doprnt.c: 529: struct {
 16392                           ;doprnt.c: 530: const char * _cp;
 16393                           ;doprnt.c: 531: unsigned _len;
 16394                           ;doprnt.c: 532: } _str;
 16395                           ;doprnt.c: 533: } _val;
 16396                           ;doprnt.c: 542: *ap = __va_start();
 16397                           
 16398                           ;incstack = 0
 16399  012462  0101               	movlb	1	; () banked
 16400  012464  0E01               	movlw	high (?_sprintf+4)
 16401  012466  0101               	movlb	1	; () banked
 16402  012468  6FA3               	movwf	(sprintf@ap+1)& (0+255),b
 16403  01246A  0101               	movlb	1	; () banked
 16404  01246C  0E8B               	movlw	low (?_sprintf+4)
 16405  01246E  0101               	movlb	1	; () banked
 16406  012470  6FA2               	movwf	sprintf@ap& (0+255),b
 16407                           
 16408                           ;doprnt.c: 545: while(c = *f++) {
 16409  012472  EFAC  F097         	goto	l9650
 16410  012476                     l9310:
 16411                           
 16412                           ; BSR set to: 1
 16413                           ;doprnt.c: 547: if(c != '%')
 16414  012476  0101               	movlb	1	; () banked
 16415  012478  51AB               	movf	sprintf@c& (0+255),w,b
 16416  01247A  0A25               	xorlw	37
 16417  01247C  B4D8               	btfsc	status,2,c
 16418  01247E  D00C               	goto	l9316
 16419                           
 16420                           ; BSR set to: 1
 16421                           ;doprnt.c: 549: {
 16422                           ;doprnt.c: 550: ((*sp++ = (c)));
 16423  012480  C187  FFD9         	movff	sprintf@sp,fsr2l
 16424  012484  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 16425  012488  0101               	movlb	1	; () banked
 16426  01248A  C1AB  FFDF         	movff	sprintf@c,indf2
 16427                           
 16428                           ; BSR set to: 1
 16429  01248E  0101               	movlb	1	; () banked
 16430  012490  4B87               	infsnz	sprintf@sp& (0+255),f,b
 16431  012492  2B88               	incf	(sprintf@sp+1)& (0+255),f,b
 16432                           
 16433                           ;doprnt.c: 551: continue;
 16434  012494  EFAC  F097         	goto	l9650
 16435  012498                     l9316:
 16436                           
 16437                           ; BSR set to: 1
 16438                           ;doprnt.c: 552: }
 16439                           ;doprnt.c: 555: width = 0;
 16440  012498  0E00               	movlw	0
 16441  01249A  0101               	movlb	1	; () banked
 16442  01249C  6FA6               	movwf	(sprintf@width+1)& (0+255),b
 16443  01249E  0E00               	movlw	0
 16444  0124A0  0101               	movlb	1	; () banked
 16445  0124A2  6FA5               	movwf	sprintf@width& (0+255),b
 16446                           
 16447                           ;doprnt.c: 557: flag = 0;
 16448  0124A4  0E00               	movlw	0
 16449  0124A6  0101               	movlb	1	; () banked
 16450  0124A8  6FAD               	movwf	(sprintf@flag+1)& (0+255),b
 16451  0124AA  0E00               	movlw	0
 16452  0124AC  0101               	movlb	1	; () banked
 16453  0124AE  6FAC               	movwf	sprintf@flag& (0+255),b
 16454  0124B0  D00E               	goto	l9328
 16455  0124B2                     l9318:
 16456                           
 16457                           ; BSR set to: 1
 16458                           ;doprnt.c: 563: flag |= 0x08;
 16459  0124B2  0101               	movlb	1	; () banked
 16460  0124B4  87AC               	bsf	sprintf@flag& (0+255),3,b
 16461  0124B6  D008               	goto	L14
 16462  0124B8                     l9320:
 16463                           
 16464                           ; BSR set to: 1
 16465                           ;doprnt.c: 570: flag |= 0x01;
 16466  0124B8  0101               	movlb	1	; () banked
 16467  0124BA  81AC               	bsf	sprintf@flag& (0+255),0,b
 16468  0124BC  D005               	goto	L14
 16469  0124BE                     l9322:
 16470                           
 16471                           ; BSR set to: 1
 16472                           ;doprnt.c: 583: flag |= 0x800;
 16473  0124BE  0101               	movlb	1	; () banked
 16474  0124C0  87AD               	bsf	(sprintf@flag+1)& (0+255),3,b
 16475  0124C2  D002               	goto	L14
 16476  0124C4                     l9324:
 16477                           
 16478                           ; BSR set to: 1
 16479                           ;doprnt.c: 589: flag |= 0x04;
 16480  0124C4  0101               	movlb	1	; () banked
 16481  0124C6  85AC               	bsf	sprintf@flag& (0+255),2,b
 16482  0124C8                     L14:
 16483                           
 16484                           ;doprnt.c: 590: f++;
 16485  0124C8  0101               	movlb	1	; () banked
 16486  0124CA  4B89               	infsnz	sprintf@f& (0+255),f,b
 16487  0124CC  2B8A               	incf	(sprintf@f+1)& (0+255),f,b
 16488  0124CE                     l9328:
 16489                           
 16490                           ; BSR set to: 1
 16491  0124CE  0101               	movlb	1	; () banked
 16492  0124D0  C189  FFF6         	movff	sprintf@f,tblptrl
 16493  0124D4  0101               	movlb	1	; () banked
 16494  0124D6  C18A  FFF7         	movff	sprintf@f+1,tblptrh
 16495  0124DA                     	if	0	;tblptru may be non-zero
 16496  0124DA                     	endif
 16497  0124DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16498  0124DA  0E00               	movlw	low (__mediumconst shr (0+16))
 16499  0124DC  6EF8               	movwf	tblptru,c
 16500  0124DE                     	endif
 16501  0124DE  0008               	tblrd		*
 16502  0124E0  50F5               	movf	tablat,w,c
 16503                           
 16504                           ; Switch size 1, requested type "space"
 16505                           ; Number of cases is 4, Range of values is 32 to 48
 16506                           ; switch strategies available:
 16507                           ; Name         Instructions Cycles
 16508                           ; simple_byte           13     7 (average)
 16509                           ;	Chosen strategy is simple_byte
 16510  0124E2  0A20               	xorlw	32	; case 32
 16511  0124E4  B4D8               	btfsc	status,2,c
 16512  0124E6  D7E8               	goto	l9320
 16513  0124E8  0A03               	xorlw	3	; case 35
 16514  0124EA  B4D8               	btfsc	status,2,c
 16515  0124EC  D7E8               	goto	l9322
 16516  0124EE  0A0E               	xorlw	14	; case 45
 16517  0124F0  B4D8               	btfsc	status,2,c
 16518  0124F2  D7DF               	goto	l9318
 16519  0124F4  0A1D               	xorlw	29	; case 48
 16520  0124F6  B4D8               	btfsc	status,2,c
 16521  0124F8  D7E5               	goto	l9324
 16522                           
 16523                           ; BSR set to: 1
 16524                           ;doprnt.c: 602: if(flag & 0x08)
 16525                           
 16526                           ; BSR set to: 1
 16527                           ;doprnt.c: 595: }
 16528                           
 16529                           ; BSR set to: 1
 16530                           ;doprnt.c: 594: break;
 16531  0124FA  0101               	movlb	1	; () banked
 16532  0124FC  A7AC               	btfss	sprintf@flag& (0+255),3,b
 16533  0124FE  D002               	goto	l9332
 16534                           
 16535                           ; BSR set to: 1
 16536                           ;doprnt.c: 603: flag &= ~0x04;
 16537  012500  0101               	movlb	1	; () banked
 16538  012502  95AC               	bcf	sprintf@flag& (0+255),2,b
 16539  012504                     l9332:
 16540                           
 16541                           ; BSR set to: 1
 16542                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 16543  012504  0101               	movlb	1	; () banked
 16544  012506  C189  FFF6         	movff	sprintf@f,tblptrl
 16545  01250A  0101               	movlb	1	; () banked
 16546  01250C  C18A  FFF7         	movff	sprintf@f+1,tblptrh
 16547  012510                     	if	0	;tblptru may be non-zero
 16548  012510                     	endif
 16549  012510                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16550  012510  0E00               	movlw	low (__mediumconst shr (0+16))
 16551  012512  6EF8               	movwf	tblptru,c
 16552  012514                     	endif
 16553  012514  0008               	tblrd		*
 16554  012516  50F5               	movf	tablat,w,c
 16555  012518  ECD5  F0B5         	call	_isdigit
 16556  01251C  A0D8               	btfss	status,0,c
 16557  01251E  D04C               	goto	l9344
 16558                           
 16559                           ;doprnt.c: 607: width = 0;
 16560  012520  0E00               	movlw	0
 16561  012522  0101               	movlb	1	; () banked
 16562  012524  6FA6               	movwf	(sprintf@width+1)& (0+255),b
 16563  012526  0E00               	movlw	0
 16564  012528  0101               	movlb	1	; () banked
 16565  01252A  6FA5               	movwf	sprintf@width& (0+255),b
 16566  01252C                     l9336:
 16567                           
 16568                           ;doprnt.c: 609: width *= 10;
 16569  01252C  C1A5  F17B         	movff	sprintf@width,___wmul@multiplier
 16570  012530  C1A6  F17C         	movff	sprintf@width+1,___wmul@multiplier+1
 16571  012534  0E00               	movlw	0
 16572  012536  0101               	movlb	1	; () banked
 16573  012538  6F7E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16574  01253A  0E0A               	movlw	10
 16575  01253C  0101               	movlb	1	; () banked
 16576  01253E  6F7D               	movwf	___wmul@multiplicand& (0+255),b
 16577  012540  EC12  F0B5         	call	___wmul	;wreg free
 16578  012544  0101               	movlb	1	; () banked
 16579  012546  C17B  F1A5         	movff	?___wmul,sprintf@width
 16580  01254A  0101               	movlb	1	; () banked
 16581  01254C  C17C  F1A6         	movff	?___wmul+1,sprintf@width+1
 16582                           
 16583                           ; BSR set to: 1
 16584                           ;doprnt.c: 610: width += *f++ - '0';
 16585  012550  0ED0               	movlw	208
 16586  012552  0101               	movlb	1	; () banked
 16587  012554  6F97               	movwf	??_sprintf& (0+255),b
 16588  012556  0EFF               	movlw	255
 16589  012558  6F98               	movwf	(??_sprintf+1)& (0+255),b
 16590  01255A  0101               	movlb	1	; () banked
 16591  01255C  C189  FFF6         	movff	sprintf@f,tblptrl
 16592  012560  0101               	movlb	1	; () banked
 16593  012562  C18A  FFF7         	movff	sprintf@f+1,tblptrh
 16594  012566                     	if	0	;tblptru may be non-zero
 16595  012566                     	endif
 16596  012566                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16597  012566  0E00               	movlw	low (__mediumconst shr (0+16))
 16598  012568  6EF8               	movwf	tblptru,c
 16599  01256A                     	endif
 16600  01256A  0008               	tblrd		*
 16601  01256C  50F5               	movf	tablat,w,c
 16602  01256E  0101               	movlb	1	; () banked
 16603  012570  6F99               	movwf	(??_sprintf+2)& (0+255),b
 16604  012572  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 16605  012574  0101               	movlb	1	; () banked
 16606  012576  5197               	movf	??_sprintf& (0+255),w,b
 16607  012578  0101               	movlb	1	; () banked
 16608  01257A  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 16609  01257C  0101               	movlb	1	; () banked
 16610  01257E  5198               	movf	(??_sprintf+1)& (0+255),w,b
 16611  012580  0101               	movlb	1	; () banked
 16612  012582  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 16613  012584  0101               	movlb	1	; () banked
 16614  012586  5199               	movf	(??_sprintf+2)& (0+255),w,b
 16615  012588  0101               	movlb	1	; () banked
 16616  01258A  27A5               	addwf	sprintf@width& (0+255),f,b
 16617  01258C  0101               	movlb	1	; () banked
 16618  01258E  519A               	movf	(??_sprintf+3)& (0+255),w,b
 16619  012590  0101               	movlb	1	; () banked
 16620  012592  23A6               	addwfc	(sprintf@width+1)& (0+255),f,b
 16621                           
 16622                           ; BSR set to: 1
 16623  012594  0101               	movlb	1	; () banked
 16624  012596  4B89               	infsnz	sprintf@f& (0+255),f,b
 16625  012598  2B8A               	incf	(sprintf@f+1)& (0+255),f,b
 16626                           
 16627                           ; BSR set to: 1
 16628                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 16629  01259A  0101               	movlb	1	; () banked
 16630  01259C  C189  FFF6         	movff	sprintf@f,tblptrl
 16631  0125A0  0101               	movlb	1	; () banked
 16632  0125A2  C18A  FFF7         	movff	sprintf@f+1,tblptrh
 16633  0125A6                     	if	0	;tblptru may be non-zero
 16634  0125A6                     	endif
 16635  0125A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16636  0125A6  0E00               	movlw	low (__mediumconst shr (0+16))
 16637  0125A8  6EF8               	movwf	tblptru,c
 16638  0125AA                     	endif
 16639  0125AA  0008               	tblrd		*
 16640  0125AC  50F5               	movf	tablat,w,c
 16641  0125AE  ECD5  F0B5         	call	_isdigit
 16642  0125B2  A0D8               	btfss	status,0,c
 16643  0125B4  D021               	goto	l9352
 16644  0125B6  D7BA               	goto	l9336
 16645  0125B8                     l9344:
 16646  0125B8  0101               	movlb	1	; () banked
 16647  0125BA  C189  FFF6         	movff	sprintf@f,tblptrl
 16648  0125BE  0101               	movlb	1	; () banked
 16649  0125C0  C18A  FFF7         	movff	sprintf@f+1,tblptrh
 16650  0125C4                     	if	0	;tblptru may be non-zero
 16651  0125C4                     	endif
 16652  0125C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16653  0125C4  0E00               	movlw	low (__mediumconst shr (0+16))
 16654  0125C6  6EF8               	movwf	tblptru,c
 16655  0125C8                     	endif
 16656  0125C8  0008               	tblrd		*
 16657  0125CA  50F5               	movf	tablat,w,c
 16658  0125CC  0A2A               	xorlw	42
 16659  0125CE  A4D8               	btfss	status,2,c
 16660  0125D0  D013               	goto	l9352
 16661                           
 16662                           ; BSR set to: 1
 16663                           ;doprnt.c: 614: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 16664  0125D2  C1A2  FFD9         	movff	sprintf@ap,fsr2l
 16665  0125D6  C1A3  FFDA         	movff	sprintf@ap+1,fsr2h
 16666  0125DA  0101               	movlb	1	; () banked
 16667  0125DC  CFDE F1A5          	movff	postinc2,sprintf@width
 16668  0125E0  0101               	movlb	1	; () banked
 16669  0125E2  CFDD F1A6          	movff	postdec2,sprintf@width+1
 16670                           
 16671                           ; BSR set to: 1
 16672  0125E6  0E02               	movlw	2
 16673  0125E8  0101               	movlb	1	; () banked
 16674  0125EA  27A2               	addwf	sprintf@ap& (0+255),f,b
 16675  0125EC  0E00               	movlw	0
 16676  0125EE  0101               	movlb	1	; () banked
 16677  0125F0  23A3               	addwfc	(sprintf@ap+1)& (0+255),f,b
 16678                           
 16679                           ; BSR set to: 1
 16680                           ;doprnt.c: 615: f++;
 16681  0125F2  0101               	movlb	1	; () banked
 16682  0125F4  4B89               	infsnz	sprintf@f& (0+255),f,b
 16683  0125F6  2B8A               	incf	(sprintf@f+1)& (0+255),f,b
 16684  0125F8                     l9352:
 16685                           
 16686                           ;doprnt.c: 617: }
 16687                           ;doprnt.c: 620: if(*f == '.') {
 16688  0125F8  0101               	movlb	1	; () banked
 16689  0125FA  C189  FFF6         	movff	sprintf@f,tblptrl
 16690  0125FE  0101               	movlb	1	; () banked
 16691  012600  C18A  FFF7         	movff	sprintf@f+1,tblptrh
 16692  012604                     	if	0	;tblptru may be non-zero
 16693  012604                     	endif
 16694  012604                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16695  012604  0E00               	movlw	low (__mediumconst shr (0+16))
 16696  012606  6EF8               	movwf	tblptru,c
 16697  012608                     	endif
 16698  012608  0008               	tblrd		*
 16699  01260A  50F5               	movf	tablat,w,c
 16700  01260C  0A2E               	xorlw	46
 16701  01260E  A4D8               	btfss	status,2,c
 16702  012610  D04D               	goto	l9372
 16703                           
 16704                           ; BSR set to: 1
 16705                           ;doprnt.c: 621: flag |= 0x4000;
 16706  012612  0101               	movlb	1	; () banked
 16707  012614  8DAD               	bsf	(sprintf@flag+1)& (0+255),6,b
 16708                           
 16709                           ;doprnt.c: 622: f++;
 16710  012616  0101               	movlb	1	; () banked
 16711  012618  4B89               	infsnz	sprintf@f& (0+255),f,b
 16712  01261A  2B8A               	incf	(sprintf@f+1)& (0+255),f,b
 16713                           
 16714                           ; BSR set to: 1
 16715                           ;doprnt.c: 624: if(*f == '*') {
 16716  01261C  0101               	movlb	1	; () banked
 16717  01261E  C189  FFF6         	movff	sprintf@f,tblptrl
 16718  012622  0101               	movlb	1	; () banked
 16719  012624  C18A  FFF7         	movff	sprintf@f+1,tblptrh
 16720  012628                     	if	0	;tblptru may be non-zero
 16721  012628                     	endif
 16722  012628                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16723  012628  0E00               	movlw	low (__mediumconst shr (0+16))
 16724  01262A  6EF8               	movwf	tblptru,c
 16725  01262C                     	endif
 16726  01262C  0008               	tblrd		*
 16727  01262E  50F5               	movf	tablat,w,c
 16728  012630  0A2A               	xorlw	42
 16729  012632  A4D8               	btfss	status,2,c
 16730  012634  D011               	goto	l9364
 16731                           
 16732                           ; BSR set to: 1
 16733                           ;doprnt.c: 625: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 16734  012636  C1A2  FFD9         	movff	sprintf@ap,fsr2l
 16735  01263A  C1A3  FFDA         	movff	sprintf@ap+1,fsr2h
 16736  01263E  50DF               	movf	indf2,w,c
 16737  012640  0101               	movlb	1	; () banked
 16738  012642  6FA4               	movwf	sprintf@prec& (0+255),b
 16739                           
 16740                           ; BSR set to: 1
 16741  012644  0E02               	movlw	2
 16742  012646  0101               	movlb	1	; () banked
 16743  012648  27A2               	addwf	sprintf@ap& (0+255),f,b
 16744  01264A  0E00               	movlw	0
 16745  01264C  0101               	movlb	1	; () banked
 16746  01264E  23A3               	addwfc	(sprintf@ap+1)& (0+255),f,b
 16747                           
 16748                           ; BSR set to: 1
 16749                           ;doprnt.c: 626: f++;
 16750  012650  0101               	movlb	1	; () banked
 16751  012652  4B89               	infsnz	sprintf@f& (0+255),f,b
 16752  012654  2B8A               	incf	(sprintf@f+1)& (0+255),f,b
 16753                           
 16754                           ;doprnt.c: 627: } else
 16755  012656  D0D8               	goto	l9428
 16756  012658                     l9364:
 16757                           
 16758                           ; BSR set to: 1
 16759                           ;doprnt.c: 629: {
 16760                           ;doprnt.c: 630: prec = 0;
 16761  012658  0E00               	movlw	0
 16762  01265A  0101               	movlb	1	; () banked
 16763  01265C  6FA4               	movwf	sprintf@prec& (0+255),b
 16764                           
 16765                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 16766  01265E  D017               	goto	l9370
 16767  012660                     l9366:
 16768                           
 16769                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 16770  012660  0101               	movlb	1	; () banked
 16771  012662  C189  FFF6         	movff	sprintf@f,tblptrl
 16772  012666  0101               	movlb	1	; () banked
 16773  012668  C18A  FFF7         	movff	sprintf@f+1,tblptrh
 16774  01266C                     	if	0	;tblptru may be non-zero
 16775  01266C                     	endif
 16776  01266C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16777  01266C  0E00               	movlw	low (__mediumconst shr (0+16))
 16778  01266E  6EF8               	movwf	tblptru,c
 16779  012670                     	endif
 16780  012670  0008               	tblrd		*
 16781  012672  CFF5 F197          	movff	tablat,??_sprintf
 16782  012676  0101               	movlb	1	; () banked
 16783  012678  51A4               	movf	sprintf@prec& (0+255),w,b
 16784  01267A  0D0A               	mullw	10
 16785  01267C  50F3               	movf	prodl,w,c
 16786  01267E  0101               	movlb	1	; () banked
 16787  012680  2597               	addwf	??_sprintf& (0+255),w,b
 16788  012682  0FD0               	addlw	208
 16789  012684  0101               	movlb	1	; () banked
 16790  012686  6FA4               	movwf	sprintf@prec& (0+255),b
 16791                           
 16792                           ; BSR set to: 1
 16793  012688  0101               	movlb	1	; () banked
 16794  01268A  4B89               	infsnz	sprintf@f& (0+255),f,b
 16795  01268C  2B8A               	incf	(sprintf@f+1)& (0+255),f,b
 16796  01268E                     l9370:
 16797                           
 16798                           ; BSR set to: 1
 16799  01268E  0101               	movlb	1	; () banked
 16800  012690  C189  FFF6         	movff	sprintf@f,tblptrl
 16801  012694  0101               	movlb	1	; () banked
 16802  012696  C18A  FFF7         	movff	sprintf@f+1,tblptrh
 16803  01269A                     	if	0	;tblptru may be non-zero
 16804  01269A                     	endif
 16805  01269A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16806  01269A  0E00               	movlw	low (__mediumconst shr (0+16))
 16807  01269C  6EF8               	movwf	tblptru,c
 16808  01269E                     	endif
 16809  01269E  0008               	tblrd		*
 16810  0126A0  50F5               	movf	tablat,w,c
 16811  0126A2  ECD5  F0B5         	call	_isdigit
 16812  0126A6  A0D8               	btfss	status,0,c
 16813  0126A8  D0AF               	goto	l9428
 16814  0126AA  D7DA               	goto	l9366
 16815  0126AC                     l9372:
 16816                           
 16817                           ;doprnt.c: 635: prec = 0;
 16818  0126AC  0E00               	movlw	0
 16819  0126AE  0101               	movlb	1	; () banked
 16820  0126B0  6FA4               	movwf	sprintf@prec& (0+255),b
 16821  0126B2  D0AA               	goto	l9428
 16822  0126B4                     l9374:
 16823                           
 16824                           ; BSR set to: 1
 16825                           ;doprnt.c: 700: flag |= 0x40;
 16826  0126B4  0101               	movlb	1	; () banked
 16827  0126B6  8DAC               	bsf	sprintf@flag& (0+255),6,b
 16828                           
 16829                           ;doprnt.c: 702: break;
 16830  0126B8  D0D1               	goto	l9430
 16831  0126BA                     l9376:
 16832                           
 16833                           ; BSR set to: 1
 16834                           ;doprnt.c: 723: flag |= 0x20;
 16835  0126BA  0101               	movlb	1	; () banked
 16836  0126BC  8BAC               	bsf	sprintf@flag& (0+255),5,b
 16837  0126BE                     l1371:
 16838                           
 16839                           ; BSR set to: 1
 16840                           ;doprnt.c: 730: flag |= 0x80;
 16841  0126BE  0101               	movlb	1	; () banked
 16842  0126C0  8FAC               	bsf	sprintf@flag& (0+255),7,b
 16843                           
 16844                           ;doprnt.c: 732: break;
 16845  0126C2  D0CC               	goto	l9430
 16846  0126C4                     l9378:
 16847                           
 16848                           ; BSR set to: 1
 16849                           ;doprnt.c: 762: if(prec && prec < _val._str._len)
 16850  0126C4  0101               	movlb	1	; () banked
 16851  0126C6  51A4               	movf	sprintf@prec& (0+255),w,b
 16852  0126C8  B4D8               	btfsc	status,2,c
 16853  0126CA  D01A               	goto	l9384
 16854                           
 16855                           ; BSR set to: 1
 16856  0126CC  0101               	movlb	1	; () banked
 16857  0126CE  C1A4  F197         	movff	sprintf@prec,??_sprintf
 16858  0126D2  0101               	movlb	1	; () banked
 16859  0126D4  6B98               	clrf	(??_sprintf+1)& (0+255),b
 16860  0126D6  BF97               	btfsc	??_sprintf& (0+255),7,b
 16861  0126D8  0798               	decf	(??_sprintf+1)& (0+255),f,b
 16862  0126DA  0101               	movlb	1	; () banked
 16863  0126DC  51A9               	movf	(sprintf@_val+2)& (0+255),w,b
 16864  0126DE  0101               	movlb	1	; () banked
 16865  0126E0  5D97               	subwf	??_sprintf& (0+255),w,b
 16866  0126E2  0101               	movlb	1	; () banked
 16867  0126E4  51AA               	movf	(sprintf@_val+3)& (0+255),w,b
 16868  0126E6  0101               	movlb	1	; () banked
 16869  0126E8  5998               	subwfb	(??_sprintf+1)& (0+255),w,b
 16870  0126EA  B0D8               	btfsc	status,0,c
 16871  0126EC  D009               	goto	l9384
 16872                           
 16873                           ; BSR set to: 1
 16874                           ;doprnt.c: 763: _val._str._len = prec;
 16875  0126EE  0101               	movlb	1	; () banked
 16876  0126F0  51A4               	movf	sprintf@prec& (0+255),w,b
 16877  0126F2  0101               	movlb	1	; () banked
 16878  0126F4  6FA9               	movwf	(sprintf@_val+2)& (0+255),b
 16879  0126F6  0101               	movlb	1	; () banked
 16880  0126F8  6BAA               	clrf	(sprintf@_val+3)& (0+255),b
 16881  0126FA  0101               	movlb	1	; () banked
 16882  0126FC  BFA9               	btfsc	(sprintf@_val+2)& (0+255),7,b
 16883  0126FE  07AA               	decf	(sprintf@_val+3)& (0+255),f,b
 16884  012700                     l9384:
 16885                           
 16886                           ; BSR set to: 1
 16887                           ;doprnt.c: 766: if(width > _val._str._len)
 16888  012700  0101               	movlb	1	; () banked
 16889  012702  51A5               	movf	sprintf@width& (0+255),w,b
 16890  012704  0101               	movlb	1	; () banked
 16891  012706  5DA9               	subwf	(sprintf@_val+2)& (0+255),w,b
 16892  012708  0101               	movlb	1	; () banked
 16893  01270A  51A6               	movf	(sprintf@width+1)& (0+255),w,b
 16894  01270C  0101               	movlb	1	; () banked
 16895  01270E  59AA               	subwfb	(sprintf@_val+3)& (0+255),w,b
 16896  012710  B0D8               	btfsc	status,0,c
 16897  012712  D00A               	goto	l9388
 16898                           
 16899                           ; BSR set to: 1
 16900                           ;doprnt.c: 767: width -= _val._str._len;
 16901  012714  0101               	movlb	1	; () banked
 16902  012716  EE21  F0A9         	lfsr	2,sprintf@_val+2
 16903  01271A  50DE               	movf	postinc2,w,c
 16904  01271C  0101               	movlb	1	; () banked
 16905  01271E  5FA5               	subwf	sprintf@width& (0+255),f,b
 16906  012720  50DD               	movf	postdec2,w,c
 16907  012722  0101               	movlb	1	; () banked
 16908  012724  5BA6               	subwfb	(sprintf@width+1)& (0+255),f,b
 16909  012726  D006               	goto	l9390
 16910  012728                     l9388:
 16911                           
 16912                           ; BSR set to: 1
 16913                           ;doprnt.c: 768: else
 16914                           ;doprnt.c: 769: width = 0;
 16915  012728  0E00               	movlw	0
 16916  01272A  0101               	movlb	1	; () banked
 16917  01272C  6FA6               	movwf	(sprintf@width+1)& (0+255),b
 16918  01272E  0E00               	movlw	0
 16919  012730  0101               	movlb	1	; () banked
 16920  012732  6FA5               	movwf	sprintf@width& (0+255),b
 16921  012734                     l9390:
 16922                           
 16923                           ; BSR set to: 1
 16924                           ;doprnt.c: 771: if(!(flag & 0x08))
 16925  012734  0101               	movlb	1	; () banked
 16926  012736  A7AC               	btfss	sprintf@flag& (0+255),3,b
 16927  012738  D00A               	goto	l9398
 16928  01273A  D024               	goto	l9406
 16929  01273C                     l9394:
 16930                           
 16931                           ; BSR set to: 1
 16932                           ;doprnt.c: 774: ((*sp++ = (' ')));
 16933  01273C  C187  FFD9         	movff	sprintf@sp,fsr2l
 16934  012740  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 16935  012744  0E20               	movlw	32
 16936  012746  6EDF               	movwf	indf2,c
 16937                           
 16938                           ; BSR set to: 1
 16939  012748  0101               	movlb	1	; () banked
 16940  01274A  4B87               	infsnz	sprintf@sp& (0+255),f,b
 16941  01274C  2B88               	incf	(sprintf@sp+1)& (0+255),f,b
 16942  01274E                     l9398:
 16943                           
 16944                           ; BSR set to: 1
 16945  01274E  0101               	movlb	1	; () banked
 16946  012750  07A5               	decf	sprintf@width& (0+255),f,b
 16947  012752  A0D8               	btfss	status,0,c
 16948  012754  07A6               	decf	(sprintf@width+1)& (0+255),f,b
 16949  012756  0101               	movlb	1	; () banked
 16950  012758  29A5               	incf	sprintf@width& (0+255),w,b
 16951  01275A  B4D8               	btfsc	status,2,c
 16952  01275C  29A6               	incf	(sprintf@width+1)& (0+255),w,b
 16953  01275E  B4D8               	btfsc	status,2,c
 16954  012760  D011               	goto	l9406
 16955  012762  D7EC               	goto	l9394
 16956  012764                     l9400:
 16957                           
 16958                           ; BSR set to: 1
 16959                           ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)));
 16960  012764  C1A7  FFD9         	movff	sprintf@_val,fsr2l
 16961  012768  C1A8  FFDA         	movff	sprintf@_val+1,fsr2h
 16962  01276C  C187  FFE1         	movff	sprintf@sp,fsr1l
 16963  012770  C188  FFE2         	movff	sprintf@sp+1,fsr1h
 16964  012774  CFDF FFE7          	movff	indf2,indf1
 16965                           
 16966                           ; BSR set to: 1
 16967  012778  0101               	movlb	1	; () banked
 16968  01277A  4BA7               	infsnz	sprintf@_val& (0+255),f,b
 16969  01277C  2BA8               	incf	(sprintf@_val+1)& (0+255),f,b
 16970                           
 16971                           ; BSR set to: 1
 16972  01277E  0101               	movlb	1	; () banked
 16973  012780  4B87               	infsnz	sprintf@sp& (0+255),f,b
 16974  012782  2B88               	incf	(sprintf@sp+1)& (0+255),f,b
 16975  012784                     l9406:
 16976                           
 16977                           ; BSR set to: 1
 16978  012784  0101               	movlb	1	; () banked
 16979  012786  07A9               	decf	(sprintf@_val+2)& (0+255),f,b
 16980  012788  A0D8               	btfss	status,0,c
 16981  01278A  07AA               	decf	(sprintf@_val+3)& (0+255),f,b
 16982  01278C  0101               	movlb	1	; () banked
 16983  01278E  29A9               	incf	(sprintf@_val+2)& (0+255),w,b
 16984  012790  B4D8               	btfsc	status,2,c
 16985  012792  29AA               	incf	(sprintf@_val+3)& (0+255),w,b
 16986  012794  A4D8               	btfss	status,2,c
 16987  012796  D7E6               	goto	l9400
 16988                           
 16989                           ; BSR set to: 1
 16990                           ;doprnt.c: 779: if(flag & 0x08)
 16991  012798  0101               	movlb	1	; () banked
 16992  01279A  B7AC               	btfsc	sprintf@flag& (0+255),3,b
 16993  01279C  D00A               	goto	l9414
 16994  01279E  D3DC               	goto	l9650
 16995  0127A0                     l9410:
 16996                           
 16997                           ; BSR set to: 1
 16998                           ;doprnt.c: 781: ((*sp++ = (' ')));
 16999  0127A0  C187  FFD9         	movff	sprintf@sp,fsr2l
 17000  0127A4  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 17001  0127A8  0E20               	movlw	32
 17002  0127AA  6EDF               	movwf	indf2,c
 17003                           
 17004                           ; BSR set to: 1
 17005  0127AC  0101               	movlb	1	; () banked
 17006  0127AE  4B87               	infsnz	sprintf@sp& (0+255),f,b
 17007  0127B0  2B88               	incf	(sprintf@sp+1)& (0+255),f,b
 17008  0127B2                     l9414:
 17009                           
 17010                           ; BSR set to: 1
 17011  0127B2  0101               	movlb	1	; () banked
 17012  0127B4  07A5               	decf	sprintf@width& (0+255),f,b
 17013  0127B6  A0D8               	btfss	status,0,c
 17014  0127B8  07A6               	decf	(sprintf@width+1)& (0+255),f,b
 17015  0127BA  0101               	movlb	1	; () banked
 17016  0127BC  29A5               	incf	sprintf@width& (0+255),w,b
 17017  0127BE  B4D8               	btfsc	status,2,c
 17018  0127C0  29A6               	incf	(sprintf@width+1)& (0+255),w,b
 17019  0127C2  B4D8               	btfsc	status,2,c
 17020  0127C4  D3C9               	goto	l9650
 17021  0127C6  D7EC               	goto	l9410
 17022  0127C8                     l9416:
 17023                           
 17024                           ; BSR set to: 1
 17025                           ;doprnt.c: 808: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 17026  0127C8  C1A2  FFD9         	movff	sprintf@ap,fsr2l
 17027  0127CC  C1A3  FFDA         	movff	sprintf@ap+1,fsr2h
 17028  0127D0  50DF               	movf	indf2,w,c
 17029  0127D2  0101               	movlb	1	; () banked
 17030  0127D4  6FAB               	movwf	sprintf@c& (0+255),b
 17031                           
 17032                           ; BSR set to: 1
 17033  0127D6  0E02               	movlw	2
 17034  0127D8  0101               	movlb	1	; () banked
 17035  0127DA  27A2               	addwf	sprintf@ap& (0+255),f,b
 17036  0127DC  0E00               	movlw	0
 17037  0127DE  0101               	movlb	1	; () banked
 17038  0127E0  23A3               	addwfc	(sprintf@ap+1)& (0+255),f,b
 17039  0127E2                     l9420:
 17040                           
 17041                           ; BSR set to: 1
 17042                           ;doprnt.c: 814: _val._str._cp = (char *)&c;
 17043  0127E2  0101               	movlb	1	; () banked
 17044  0127E4  0E01               	movlw	high sprintf@c
 17045  0127E6  0101               	movlb	1	; () banked
 17046  0127E8  6FA8               	movwf	(sprintf@_val+1)& (0+255),b
 17047  0127EA  0101               	movlb	1	; () banked
 17048  0127EC  0EAB               	movlw	low sprintf@c
 17049  0127EE  0101               	movlb	1	; () banked
 17050  0127F0  6FA7               	movwf	sprintf@_val& (0+255),b
 17051                           
 17052                           ; BSR set to: 1
 17053                           ;doprnt.c: 815: _val._str._len = 1;
 17054  0127F2  0E00               	movlw	0
 17055  0127F4  0101               	movlb	1	; () banked
 17056  0127F6  6FAA               	movwf	(sprintf@_val+3)& (0+255),b
 17057  0127F8  0E01               	movlw	1
 17058  0127FA  0101               	movlb	1	; () banked
 17059  0127FC  6FA9               	movwf	(sprintf@_val+2)& (0+255),b
 17060                           
 17061                           ;doprnt.c: 816: goto dostring;
 17062  0127FE  D762               	goto	l9378
 17063  012800                     l9424:
 17064                           
 17065                           ; BSR set to: 1
 17066                           ;doprnt.c: 827: flag |= 0xC0;
 17067  012800  0EC0               	movlw	192
 17068  012802  0101               	movlb	1	; () banked
 17069  012804  13AC               	iorwf	sprintf@flag& (0+255),f,b
 17070                           
 17071                           ;doprnt.c: 828: break;
 17072  012806  D02A               	goto	l9430
 17073  012808                     l9428:
 17074  012808  0101               	movlb	1	; () banked
 17075  01280A  C189  FFF6         	movff	sprintf@f,tblptrl
 17076  01280E  0101               	movlb	1	; () banked
 17077  012810  C18A  FFF7         	movff	sprintf@f+1,tblptrh
 17078  012814  0101               	movlb	1	; () banked
 17079  012816  4B89               	infsnz	sprintf@f& (0+255),f,b
 17080  012818  2B8A               	incf	(sprintf@f+1)& (0+255),f,b
 17081  01281A                     	if	0	;tblptru may be non-zero
 17082  01281A                     	endif
 17083  01281A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17084  01281A  0E00               	movlw	low (__mediumconst shr (0+16))
 17085  01281C  6EF8               	movwf	tblptru,c
 17086  01281E                     	endif
 17087  01281E  0008               	tblrd		*
 17088  012820  0101               	movlb	1	; () banked
 17089  012822  CFF5 F1AB          	movff	tablat,sprintf@c
 17090  012826  0101               	movlb	1	; () banked
 17091  012828  51AB               	movf	sprintf@c& (0+255),w,b
 17092                           
 17093                           ; Switch size 1, requested type "space"
 17094                           ; Number of cases is 8, Range of values is 0 to 120
 17095                           ; switch strategies available:
 17096                           ; Name         Instructions Cycles
 17097                           ; simple_byte           25    13 (average)
 17098                           ;	Chosen strategy is simple_byte
 17099  01282A  0A00               	xorlw	0	; case 0
 17100  01282C  B4D8               	btfsc	status,2,c
 17101  01282E  D3A7               	goto	l9652
 17102  012830  0A58               	xorlw	88	; case 88
 17103  012832  B4D8               	btfsc	status,2,c
 17104  012834  D742               	goto	l9376
 17105  012836  0A3B               	xorlw	59	; case 99
 17106  012838  B4D8               	btfsc	status,2,c
 17107  01283A  D7C6               	goto	l9416
 17108  01283C  0A07               	xorlw	7	; case 100
 17109  01283E  B4D8               	btfsc	status,2,c
 17110  012840  D00D               	goto	l9430
 17111  012842  0A0D               	xorlw	13	; case 105
 17112  012844  B4D8               	btfsc	status,2,c
 17113  012846  D00A               	goto	l9430
 17114  012848  0A06               	xorlw	6	; case 111
 17115  01284A  B4D8               	btfsc	status,2,c
 17116  01284C  D733               	goto	l9374
 17117  01284E  0A1A               	xorlw	26	; case 117
 17118  012850  B4D8               	btfsc	status,2,c
 17119  012852  D7D6               	goto	l9424
 17120  012854  0A0D               	xorlw	13	; case 120
 17121  012856  B4D8               	btfsc	status,2,c
 17122  012858  D732               	goto	l1371
 17123  01285A  D7C3               	goto	l9420
 17124  01285C                     l9430:
 17125                           
 17126                           ; BSR set to: 1
 17127                           ;doprnt.c: 1260: if((flag & (0xC0)) == 0x00)
 17128  01285C  0EC0               	movlw	192
 17129  01285E  0101               	movlb	1	; () banked
 17130  012860  15AC               	andwf	sprintf@flag& (0+255),w,b
 17131  012862  0101               	movlb	1	; () banked
 17132  012864  6F97               	movwf	??_sprintf& (0+255),b
 17133  012866  0E00               	movlw	0
 17134  012868  0101               	movlb	1	; () banked
 17135  01286A  15AD               	andwf	(sprintf@flag+1)& (0+255),w,b
 17136  01286C  0101               	movlb	1	; () banked
 17137  01286E  6F98               	movwf	(??_sprintf+1)& (0+255),b
 17138  012870  0101               	movlb	1	; () banked
 17139  012872  5198               	movf	(??_sprintf+1)& (0+255),w,b
 17140  012874  1197               	iorwf	??_sprintf& (0+255),w,b
 17141  012876  A4D8               	btfss	status,2,c
 17142  012878  D025               	goto	l9442
 17143                           
 17144                           ; BSR set to: 1
 17145                           ;doprnt.c: 1262: {
 17146                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 17147  01287A  C1A2  FFD9         	movff	sprintf@ap,fsr2l
 17148  01287E  C1A3  FFDA         	movff	sprintf@ap+1,fsr2h
 17149  012882  0101               	movlb	1	; () banked
 17150  012884  CFDE F1A7          	movff	postinc2,sprintf@_val
 17151  012888  0101               	movlb	1	; () banked
 17152  01288A  CFDD F1A8          	movff	postdec2,sprintf@_val+1
 17153                           
 17154                           ; BSR set to: 1
 17155  01288E  0E02               	movlw	2
 17156  012890  0101               	movlb	1	; () banked
 17157  012892  27A2               	addwf	sprintf@ap& (0+255),f,b
 17158  012894  0E00               	movlw	0
 17159  012896  0101               	movlb	1	; () banked
 17160  012898  23A3               	addwfc	(sprintf@ap+1)& (0+255),f,b
 17161                           
 17162                           ; BSR set to: 1
 17163                           ;doprnt.c: 1270: if((int)_val._val < 0) {
 17164  01289A  0101               	movlb	1	; () banked
 17165  01289C  51A8               	movf	(sprintf@_val+1)& (0+255),w,b
 17166  01289E  0A80               	xorlw	128
 17167  0128A0  6EF3               	movwf	prodl,c
 17168  0128A2  0E80               	movlw	128
 17169  0128A4  5CF3               	subwf	prodl,w,c
 17170  0128A6  0E00               	movlw	0
 17171  0128A8  B4D8               	btfsc	status,2,c
 17172  0128AA  5DA7               	subwf	sprintf@_val& (0+255),w,b
 17173  0128AC  B0D8               	btfsc	status,0,c
 17174  0128AE  D01A               	goto	l9446
 17175                           
 17176                           ; BSR set to: 1
 17177                           ;doprnt.c: 1271: flag |= 0x03;
 17178  0128B0  0E03               	movlw	3
 17179  0128B2  0101               	movlb	1	; () banked
 17180  0128B4  13AC               	iorwf	sprintf@flag& (0+255),f,b
 17181                           
 17182                           ; BSR set to: 1
 17183                           ;doprnt.c: 1272: _val._val = -_val._val;
 17184  0128B6  0101               	movlb	1	; () banked
 17185  0128B8  6DA7               	negf	sprintf@_val& (0+255),b
 17186  0128BA  0101               	movlb	1	; () banked
 17187  0128BC  1FA8               	comf	(sprintf@_val+1)& (0+255),f,b
 17188  0128BE  B0D8               	btfsc	status,0,c
 17189  0128C0  2BA8               	incf	(sprintf@_val+1)& (0+255),f,b
 17190  0128C2  D010               	goto	l9446
 17191  0128C4                     l9442:
 17192                           
 17193                           ; BSR set to: 1
 17194                           ;doprnt.c: 1277: else
 17195                           ;doprnt.c: 1282: {
 17196                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 17197  0128C4  C1A2  FFD9         	movff	sprintf@ap,fsr2l
 17198  0128C8  C1A3  FFDA         	movff	sprintf@ap+1,fsr2h
 17199  0128CC  0101               	movlb	1	; () banked
 17200  0128CE  CFDE F1A7          	movff	postinc2,sprintf@_val
 17201  0128D2  0101               	movlb	1	; () banked
 17202  0128D4  CFDD F1A8          	movff	postdec2,sprintf@_val+1
 17203                           
 17204                           ; BSR set to: 1
 17205  0128D8  0E02               	movlw	2
 17206  0128DA  0101               	movlb	1	; () banked
 17207  0128DC  27A2               	addwf	sprintf@ap& (0+255),f,b
 17208  0128DE  0E00               	movlw	0
 17209  0128E0  0101               	movlb	1	; () banked
 17210  0128E2  23A3               	addwfc	(sprintf@ap+1)& (0+255),f,b
 17211  0128E4                     l9446:
 17212                           
 17213                           ; BSR set to: 1
 17214                           ;doprnt.c: 1296: }
 17215                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
 17216  0128E4  0101               	movlb	1	; () banked
 17217  0128E6  67A4               	tstfsz	sprintf@prec& (0+255),b
 17218  0128E8  D07D               	goto	l9496
 17219                           
 17220                           ; BSR set to: 1
 17221  0128EA  0101               	movlb	1	; () banked
 17222  0128EC  51A8               	movf	(sprintf@_val+1)& (0+255),w,b
 17223  0128EE  11A7               	iorwf	sprintf@_val& (0+255),w,b
 17224  0128F0  A4D8               	btfss	status,2,c
 17225  0128F2  D078               	goto	l9496
 17226                           
 17227                           ; BSR set to: 1
 17228                           ;doprnt.c: 1300: prec++;
 17229  0128F4  0101               	movlb	1	; () banked
 17230  0128F6  2BA4               	incf	sprintf@prec& (0+255),f,b
 17231  0128F8  D075               	goto	l9496
 17232  0128FA                     l9452:
 17233                           
 17234                           ; BSR set to: 1
 17235                           ;doprnt.c: 1311: case 0xC0:
 17236                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 17237  0128FA  0E01               	movlw	1
 17238  0128FC  0101               	movlb	1	; () banked
 17239  0128FE  6FAB               	movwf	sprintf@c& (0+255),b
 17240  012900                     
 17241                           ; BSR set to: 1
 17242  012900  0101               	movlb	1	; () banked
 17243  012902  51AB               	movf	sprintf@c& (0+255),w,b
 17244  012904  0A05               	xorlw	5
 17245  012906  B4D8               	btfsc	status,2,c
 17246  012908  D07C               	goto	l9498
 17247                           
 17248                           ; BSR set to: 1
 17249                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
 17250                           
 17251                           ; BSR set to: 1
 17252                           
 17253                           ; BSR set to: 1
 17254  01290A  0101               	movlb	1	; () banked
 17255  01290C  51AB               	movf	sprintf@c& (0+255),w,b
 17256  01290E  0D02               	mullw	2
 17257  012910  0EFB               	movlw	low _dpowers
 17258  012912  24F3               	addwf	prodl,w,c
 17259  012914  6EF6               	movwf	tblptrl,c
 17260  012916  0EEF               	movlw	high _dpowers
 17261  012918  20F4               	addwfc	prodh,w,c
 17262  01291A  6EF7               	movwf	tblptrh,c
 17263  01291C                     	if	1	;There are 3 active tblptr bytes
 17264  01291C  6AF8               	clrf	tblptru,c
 17265  01291E  0E00               	movlw	low (__mediumconst shr (0+16))
 17266  012920  22F8               	addwfc	tblptru,f,c
 17267  012922                     	endif
 17268  012922  0009               	tblrd		*+
 17269  012924  CFF5 F197          	movff	tablat,??_sprintf
 17270  012928  0009               	tblrd		*+
 17271  01292A  CFF5 F198          	movff	tablat,??_sprintf+1
 17272  01292E  0101               	movlb	1	; () banked
 17273  012930  5197               	movf	??_sprintf& (0+255),w,b
 17274  012932  0101               	movlb	1	; () banked
 17275  012934  5DA7               	subwf	sprintf@_val& (0+255),w,b
 17276  012936  0101               	movlb	1	; () banked
 17277  012938  5198               	movf	(??_sprintf+1)& (0+255),w,b
 17278  01293A  0101               	movlb	1	; () banked
 17279  01293C  59A8               	subwfb	(sprintf@_val+1)& (0+255),w,b
 17280  01293E  A0D8               	btfss	status,0,c
 17281  012940  D060               	goto	l9498
 17282                           
 17283                           ; BSR set to: 1
 17284                           
 17285                           ; BSR set to: 1
 17286                           
 17287                           ; BSR set to: 1
 17288                           ;doprnt.c: 1316: break;
 17289  012942  0101               	movlb	1	; () banked
 17290  012944  2BAB               	incf	sprintf@c& (0+255),f,b
 17291  012946  D7DC               	goto	L15
 17292  012948                     l9466:
 17293                           
 17294                           ; BSR set to: 1
 17295                           ;doprnt.c: 1325: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 17296  012948  0E01               	movlw	1
 17297  01294A  0101               	movlb	1	; () banked
 17298  01294C  6FAB               	movwf	sprintf@c& (0+255),b
 17299  01294E                     
 17300                           ; BSR set to: 1
 17301  01294E  0101               	movlb	1	; () banked
 17302  012950  51AB               	movf	sprintf@c& (0+255),w,b
 17303  012952  0A04               	xorlw	4
 17304  012954  B4D8               	btfsc	status,2,c
 17305  012956  D055               	goto	l9498
 17306                           
 17307                           ; BSR set to: 1
 17308                           ;doprnt.c: 1326: if(_val._val < hexpowers[c])
 17309                           
 17310                           ; BSR set to: 1
 17311                           
 17312                           ; BSR set to: 1
 17313  012958  0101               	movlb	1	; () banked
 17314  01295A  51AB               	movf	sprintf@c& (0+255),w,b
 17315  01295C  0D02               	mullw	2
 17316  01295E  0E05               	movlw	low _hexpowers
 17317  012960  24F3               	addwf	prodl,w,c
 17318  012962  6EF6               	movwf	tblptrl,c
 17319  012964  0EF0               	movlw	high _hexpowers
 17320  012966  20F4               	addwfc	prodh,w,c
 17321  012968  6EF7               	movwf	tblptrh,c
 17322  01296A                     	if	1	;There are 3 active tblptr bytes
 17323  01296A  6AF8               	clrf	tblptru,c
 17324  01296C  0E00               	movlw	low (__mediumconst shr (0+16))
 17325  01296E  22F8               	addwfc	tblptru,f,c
 17326  012970                     	endif
 17327  012970  0009               	tblrd		*+
 17328  012972  CFF5 F197          	movff	tablat,??_sprintf
 17329  012976  0009               	tblrd		*+
 17330  012978  CFF5 F198          	movff	tablat,??_sprintf+1
 17331  01297C  0101               	movlb	1	; () banked
 17332  01297E  5197               	movf	??_sprintf& (0+255),w,b
 17333  012980  0101               	movlb	1	; () banked
 17334  012982  5DA7               	subwf	sprintf@_val& (0+255),w,b
 17335  012984  0101               	movlb	1	; () banked
 17336  012986  5198               	movf	(??_sprintf+1)& (0+255),w,b
 17337  012988  0101               	movlb	1	; () banked
 17338  01298A  59A8               	subwfb	(sprintf@_val+1)& (0+255),w,b
 17339  01298C  A0D8               	btfss	status,0,c
 17340  01298E  D039               	goto	l9498
 17341                           
 17342                           ; BSR set to: 1
 17343                           
 17344                           ; BSR set to: 1
 17345                           
 17346                           ; BSR set to: 1
 17347                           ;doprnt.c: 1327: break;
 17348  012990  0101               	movlb	1	; () banked
 17349  012992  2BAB               	incf	sprintf@c& (0+255),f,b
 17350  012994  D7DC               	goto	L16
 17351  012996                     l9480:
 17352                           
 17353                           ; BSR set to: 1
 17354                           ;doprnt.c: 1337: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 17355  012996  0E01               	movlw	1
 17356  012998  0101               	movlb	1	; () banked
 17357  01299A  6FAB               	movwf	sprintf@c& (0+255),b
 17358  01299C                     
 17359                           ; BSR set to: 1
 17360  01299C  0101               	movlb	1	; () banked
 17361  01299E  51AB               	movf	sprintf@c& (0+255),w,b
 17362  0129A0  0A06               	xorlw	6
 17363  0129A2  B4D8               	btfsc	status,2,c
 17364  0129A4  D02E               	goto	l9498
 17365                           
 17366                           ; BSR set to: 1
 17367                           ;doprnt.c: 1338: if(_val._val < octpowers[c])
 17368                           
 17369                           ; BSR set to: 1
 17370                           
 17371                           ; BSR set to: 1
 17372  0129A6  0101               	movlb	1	; () banked
 17373  0129A8  51AB               	movf	sprintf@c& (0+255),w,b
 17374  0129AA  0D02               	mullw	2
 17375  0129AC  0EEF               	movlw	low _octpowers
 17376  0129AE  24F3               	addwf	prodl,w,c
 17377  0129B0  6EF6               	movwf	tblptrl,c
 17378  0129B2  0EEF               	movlw	high _octpowers
 17379  0129B4  20F4               	addwfc	prodh,w,c
 17380  0129B6  6EF7               	movwf	tblptrh,c
 17381  0129B8                     	if	1	;There are 3 active tblptr bytes
 17382  0129B8  6AF8               	clrf	tblptru,c
 17383  0129BA  0E00               	movlw	low (__mediumconst shr (0+16))
 17384  0129BC  22F8               	addwfc	tblptru,f,c
 17385  0129BE                     	endif
 17386  0129BE  0009               	tblrd		*+
 17387  0129C0  CFF5 F197          	movff	tablat,??_sprintf
 17388  0129C4  0009               	tblrd		*+
 17389  0129C6  CFF5 F198          	movff	tablat,??_sprintf+1
 17390  0129CA  0101               	movlb	1	; () banked
 17391  0129CC  5197               	movf	??_sprintf& (0+255),w,b
 17392  0129CE  0101               	movlb	1	; () banked
 17393  0129D0  5DA7               	subwf	sprintf@_val& (0+255),w,b
 17394  0129D2  0101               	movlb	1	; () banked
 17395  0129D4  5198               	movf	(??_sprintf+1)& (0+255),w,b
 17396  0129D6  0101               	movlb	1	; () banked
 17397  0129D8  59A8               	subwfb	(sprintf@_val+1)& (0+255),w,b
 17398  0129DA  A0D8               	btfss	status,0,c
 17399  0129DC  D012               	goto	l9498
 17400                           
 17401                           ; BSR set to: 1
 17402                           
 17403                           ; BSR set to: 1
 17404                           
 17405                           ; BSR set to: 1
 17406                           ;doprnt.c: 1339: break;
 17407  0129DE  0101               	movlb	1	; () banked
 17408  0129E0  2BAB               	incf	sprintf@c& (0+255),f,b
 17409  0129E2  D7DC               	goto	L17
 17410  0129E4                     l9496:
 17411                           
 17412                           ; BSR set to: 1
 17413  0129E4  0101               	movlb	1	; () banked
 17414  0129E6  51AC               	movf	sprintf@flag& (0+255),w,b
 17415  0129E8  0BC0               	andlw	192
 17416                           
 17417                           ; Switch size 1, requested type "space"
 17418                           ; Number of cases is 4, Range of values is 0 to 192
 17419                           ; switch strategies available:
 17420                           ; Name         Instructions Cycles
 17421                           ; simple_byte           13     7 (average)
 17422                           ;	Chosen strategy is simple_byte
 17423  0129EA  0A00               	xorlw	0	; case 0
 17424  0129EC  B4D8               	btfsc	status,2,c
 17425  0129EE  D785               	goto	l9452
 17426  0129F0  0A40               	xorlw	64	; case 64
 17427  0129F2  B4D8               	btfsc	status,2,c
 17428  0129F4  D7D0               	goto	l9480
 17429  0129F6  0AC0               	xorlw	192	; case 128
 17430  0129F8  B4D8               	btfsc	status,2,c
 17431  0129FA  D7A6               	goto	l9466
 17432  0129FC  0A40               	xorlw	64	; case 192
 17433  0129FE  B4D8               	btfsc	status,2,c
 17434  012A00  D77C               	goto	l9452
 17435  012A02                     l9498:
 17436                           
 17437                           ; BSR set to: 1
 17438                           ;doprnt.c: 1348: if(c < prec)
 17439  012A02  0101               	movlb	1	; () banked
 17440  012A04  51AB               	movf	sprintf@c& (0+255),w,b
 17441  012A06  0A80               	xorlw	128
 17442  012A08  0101               	movlb	1	; () banked
 17443  012A0A  6F97               	movwf	??_sprintf& (0+255),b
 17444  012A0C  0101               	movlb	1	; () banked
 17445  012A0E  51A4               	movf	sprintf@prec& (0+255),w,b
 17446  012A10  0A80               	xorlw	128
 17447  012A12  0101               	movlb	1	; () banked
 17448  012A14  5D97               	subwf	??_sprintf& (0+255),w,b
 17449  012A16  B0D8               	btfsc	status,0,c
 17450  012A18  D003               	goto	l9502
 17451                           
 17452                           ; BSR set to: 1
 17453                           ;doprnt.c: 1349: c = prec;
 17454  012A1A  C1A4  F1AB         	movff	sprintf@prec,sprintf@c
 17455  012A1E  D00D               	goto	l9506
 17456  012A20                     l9502:
 17457                           
 17458                           ; BSR set to: 1
 17459                           ;doprnt.c: 1350: else if(prec < c)
 17460  012A20  0101               	movlb	1	; () banked
 17461  012A22  51A4               	movf	sprintf@prec& (0+255),w,b
 17462  012A24  0A80               	xorlw	128
 17463  012A26  0101               	movlb	1	; () banked
 17464  012A28  6F97               	movwf	??_sprintf& (0+255),b
 17465  012A2A  0101               	movlb	1	; () banked
 17466  012A2C  51AB               	movf	sprintf@c& (0+255),w,b
 17467  012A2E  0A80               	xorlw	128
 17468  012A30  0101               	movlb	1	; () banked
 17469  012A32  5D97               	subwf	??_sprintf& (0+255),w,b
 17470  012A34  A0D8               	btfss	status,0,c
 17471                           
 17472                           ; BSR set to: 1
 17473                           ;doprnt.c: 1351: prec = c;
 17474  012A36  C1AB  F1A4         	movff	sprintf@c,sprintf@prec
 17475  012A3A                     l9506:
 17476                           
 17477                           ; BSR set to: 1
 17478                           ;doprnt.c: 1354: if(width && flag & 0x03)
 17479  012A3A  0101               	movlb	1	; () banked
 17480  012A3C  51A6               	movf	(sprintf@width+1)& (0+255),w,b
 17481  012A3E  11A5               	iorwf	sprintf@width& (0+255),w,b
 17482  012A40  B4D8               	btfsc	status,2,c
 17483  012A42  D013               	goto	l9512
 17484                           
 17485                           ; BSR set to: 1
 17486  012A44  0E03               	movlw	3
 17487  012A46  0101               	movlb	1	; () banked
 17488  012A48  15AC               	andwf	sprintf@flag& (0+255),w,b
 17489  012A4A  0101               	movlb	1	; () banked
 17490  012A4C  6F97               	movwf	??_sprintf& (0+255),b
 17491  012A4E  0E00               	movlw	0
 17492  012A50  0101               	movlb	1	; () banked
 17493  012A52  15AD               	andwf	(sprintf@flag+1)& (0+255),w,b
 17494  012A54  0101               	movlb	1	; () banked
 17495  012A56  6F98               	movwf	(??_sprintf+1)& (0+255),b
 17496  012A58  0101               	movlb	1	; () banked
 17497  012A5A  5198               	movf	(??_sprintf+1)& (0+255),w,b
 17498  012A5C  1197               	iorwf	??_sprintf& (0+255),w,b
 17499  012A5E  B4D8               	btfsc	status,2,c
 17500  012A60  D004               	goto	l9512
 17501                           
 17502                           ; BSR set to: 1
 17503                           ;doprnt.c: 1355: width--;
 17504  012A62  0101               	movlb	1	; () banked
 17505  012A64  07A5               	decf	sprintf@width& (0+255),f,b
 17506  012A66  A0D8               	btfss	status,0,c
 17507  012A68  07A6               	decf	(sprintf@width+1)& (0+255),f,b
 17508  012A6A                     l9512:
 17509                           
 17510                           ; BSR set to: 1
 17511                           ;doprnt.c: 1357: if(flag & 0x4000) {
 17512  012A6A  0101               	movlb	1	; () banked
 17513  012A6C  ADAD               	btfss	(sprintf@flag+1)& (0+255),6,b
 17514  012A6E  D022               	goto	l9520
 17515                           
 17516                           ; BSR set to: 1
 17517                           ;doprnt.c: 1358: if(width > prec)
 17518  012A70  0E80               	movlw	128
 17519  012A72  0101               	movlb	1	; () banked
 17520  012A74  BFA4               	btfsc	sprintf@prec& (0+255),7,b
 17521  012A76  0E7F               	movlw	127
 17522  012A78  0101               	movlb	1	; () banked
 17523  012A7A  6F97               	movwf	??_sprintf& (0+255),b
 17524  012A7C  0101               	movlb	1	; () banked
 17525  012A7E  51A5               	movf	sprintf@width& (0+255),w,b
 17526  012A80  0101               	movlb	1	; () banked
 17527  012A82  5DA4               	subwf	sprintf@prec& (0+255),w,b
 17528  012A84  0101               	movlb	1	; () banked
 17529  012A86  51A6               	movf	(sprintf@width+1)& (0+255),w,b
 17530  012A88  0A80               	xorlw	128
 17531  012A8A  0101               	movlb	1	; () banked
 17532  012A8C  5997               	subwfb	??_sprintf& (0+255),w,b
 17533  012A8E  B0D8               	btfsc	status,0,c
 17534  012A90  D00B               	goto	l9518
 17535                           
 17536                           ; BSR set to: 1
 17537                           ;doprnt.c: 1359: width -= prec;
 17538  012A92  0101               	movlb	1	; () banked
 17539  012A94  51A4               	movf	sprintf@prec& (0+255),w,b
 17540  012A96  0101               	movlb	1	; () banked
 17541  012A98  5FA5               	subwf	sprintf@width& (0+255),f,b
 17542  012A9A  0E00               	movlw	0
 17543  012A9C  0101               	movlb	1	; () banked
 17544  012A9E  BFA4               	btfsc	sprintf@prec& (0+255),7,b
 17545  012AA0  0EFF               	movlw	255
 17546  012AA2  0101               	movlb	1	; () banked
 17547  012AA4  5BA6               	subwfb	(sprintf@width+1)& (0+255),f,b
 17548  012AA6  D006               	goto	l9520
 17549  012AA8                     l9518:
 17550                           
 17551                           ; BSR set to: 1
 17552                           ;doprnt.c: 1360: else
 17553                           ;doprnt.c: 1361: width = 0;
 17554  012AA8  0E00               	movlw	0
 17555  012AAA  0101               	movlb	1	; () banked
 17556  012AAC  6FA6               	movwf	(sprintf@width+1)& (0+255),b
 17557  012AAE  0E00               	movlw	0
 17558  012AB0  0101               	movlb	1	; () banked
 17559  012AB2  6FA5               	movwf	sprintf@width& (0+255),b
 17560  012AB4                     l9520:
 17561                           
 17562                           ; BSR set to: 1
 17563                           ;doprnt.c: 1362: }
 17564                           ;doprnt.c: 1366: if((flag & (
 17565                           ;doprnt.c: 1368: 0x04|
 17566                           ;doprnt.c: 1370: (0xC0)|0x800)) == (0x40|0x800)) {
 17567  012AB4  0EC4               	movlw	196
 17568  012AB6  0101               	movlb	1	; () banked
 17569  012AB8  6F97               	movwf	??_sprintf& (0+255),b
 17570  012ABA  0E08               	movlw	8
 17571  012ABC  6F98               	movwf	(??_sprintf+1)& (0+255),b
 17572  012ABE  0101               	movlb	1	; () banked
 17573  012AC0  C1AC  F199         	movff	sprintf@flag,??_sprintf+2
 17574  012AC4  0101               	movlb	1	; () banked
 17575  012AC6  C1AD  F19A         	movff	sprintf@flag+1,??_sprintf+3
 17576  012ACA  0101               	movlb	1	; () banked
 17577  012ACC  5197               	movf	??_sprintf& (0+255),w,b
 17578  012ACE  0101               	movlb	1	; () banked
 17579  012AD0  1799               	andwf	(??_sprintf+2)& (0+255),f,b
 17580  012AD2  0101               	movlb	1	; () banked
 17581  012AD4  5198               	movf	(??_sprintf+1)& (0+255),w,b
 17582  012AD6  0101               	movlb	1	; () banked
 17583  012AD8  179A               	andwf	(??_sprintf+3)& (0+255),f,b
 17584  012ADA  0101               	movlb	1	; () banked
 17585  012ADC  519A               	movf	(??_sprintf+3)& (0+255),w,b
 17586  012ADE  0A08               	xorlw	8
 17587  012AE0  0E40               	movlw	64
 17588  012AE2  B4D8               	btfsc	status,2,c
 17589  012AE4  1999               	xorwf	(??_sprintf+2)& (0+255),w,b
 17590  012AE6  A4D8               	btfss	status,2,c
 17591  012AE8  D00A               	goto	l9526
 17592                           
 17593                           ; BSR set to: 1
 17594                           ;doprnt.c: 1371: if(width)
 17595  012AEA  0101               	movlb	1	; () banked
 17596  012AEC  51A6               	movf	(sprintf@width+1)& (0+255),w,b
 17597  012AEE  11A5               	iorwf	sprintf@width& (0+255),w,b
 17598  012AF0  B4D8               	btfsc	status,2,c
 17599  012AF2  D037               	goto	l9534
 17600                           
 17601                           ; BSR set to: 1
 17602                           ;doprnt.c: 1372: width--;
 17603  012AF4  0101               	movlb	1	; () banked
 17604  012AF6  07A5               	decf	sprintf@width& (0+255),f,b
 17605  012AF8  A0D8               	btfss	status,0,c
 17606  012AFA  07A6               	decf	(sprintf@width+1)& (0+255),f,b
 17607  012AFC  D032               	goto	l9534
 17608  012AFE                     l9526:
 17609                           
 17610                           ; BSR set to: 1
 17611                           ;doprnt.c: 1377: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 17612  012AFE  0EC0               	movlw	192
 17613  012B00  0101               	movlb	1	; () banked
 17614  012B02  6F97               	movwf	??_sprintf& (0+255),b
 17615  012B04  0E08               	movlw	8
 17616  012B06  6F98               	movwf	(??_sprintf+1)& (0+255),b
 17617  012B08  0101               	movlb	1	; () banked
 17618  012B0A  C1AC  F199         	movff	sprintf@flag,??_sprintf+2
 17619  012B0E  0101               	movlb	1	; () banked
 17620  012B10  C1AD  F19A         	movff	sprintf@flag+1,??_sprintf+3
 17621  012B14  0101               	movlb	1	; () banked
 17622  012B16  5197               	movf	??_sprintf& (0+255),w,b
 17623  012B18  0101               	movlb	1	; () banked
 17624  012B1A  1799               	andwf	(??_sprintf+2)& (0+255),f,b
 17625  012B1C  0101               	movlb	1	; () banked
 17626  012B1E  5198               	movf	(??_sprintf+1)& (0+255),w,b
 17627  012B20  0101               	movlb	1	; () banked
 17628  012B22  179A               	andwf	(??_sprintf+3)& (0+255),f,b
 17629  012B24  0101               	movlb	1	; () banked
 17630  012B26  519A               	movf	(??_sprintf+3)& (0+255),w,b
 17631  012B28  0A08               	xorlw	8
 17632  012B2A  0E80               	movlw	128
 17633  012B2C  B4D8               	btfsc	status,2,c
 17634  012B2E  1999               	xorwf	(??_sprintf+2)& (0+255),w,b
 17635  012B30  A4D8               	btfss	status,2,c
 17636  012B32  D017               	goto	l9534
 17637                           
 17638                           ; BSR set to: 1
 17639                           ;doprnt.c: 1381: if(width > 2)
 17640  012B34  0101               	movlb	1	; () banked
 17641  012B36  51A6               	movf	(sprintf@width+1)& (0+255),w,b
 17642  012B38  0A80               	xorlw	128
 17643  012B3A  0F80               	addlw	-128
 17644  012B3C  0E03               	movlw	3
 17645  012B3E  B4D8               	btfsc	status,2,c
 17646  012B40  5DA5               	subwf	sprintf@width& (0+255),w,b
 17647  012B42  A0D8               	btfss	status,0,c
 17648  012B44  D008               	goto	l9532
 17649                           
 17650                           ; BSR set to: 1
 17651                           ;doprnt.c: 1382: width -= 2;
 17652  012B46  0101               	movlb	1	; () banked
 17653  012B48  0EFE               	movlw	254
 17654  012B4A  0101               	movlb	1	; () banked
 17655  012B4C  27A5               	addwf	sprintf@width& (0+255),f,b
 17656  012B4E  0EFF               	movlw	255
 17657  012B50  0101               	movlb	1	; () banked
 17658  012B52  23A6               	addwfc	(sprintf@width+1)& (0+255),f,b
 17659  012B54  D006               	goto	l9534
 17660  012B56                     l9532:
 17661                           
 17662                           ; BSR set to: 1
 17663                           ;doprnt.c: 1383: else
 17664                           ;doprnt.c: 1384: width = 0;
 17665  012B56  0E00               	movlw	0
 17666  012B58  0101               	movlb	1	; () banked
 17667  012B5A  6FA6               	movwf	(sprintf@width+1)& (0+255),b
 17668  012B5C  0E00               	movlw	0
 17669  012B5E  0101               	movlb	1	; () banked
 17670  012B60  6FA5               	movwf	sprintf@width& (0+255),b
 17671  012B62                     l9534:
 17672                           
 17673                           ; BSR set to: 1
 17674                           ;doprnt.c: 1385: }
 17675                           ;doprnt.c: 1390: if(width > c)
 17676  012B62  0E80               	movlw	128
 17677  012B64  0101               	movlb	1	; () banked
 17678  012B66  BFAB               	btfsc	sprintf@c& (0+255),7,b
 17679  012B68  0E7F               	movlw	127
 17680  012B6A  0101               	movlb	1	; () banked
 17681  012B6C  6F97               	movwf	??_sprintf& (0+255),b
 17682  012B6E  0101               	movlb	1	; () banked
 17683  012B70  51A5               	movf	sprintf@width& (0+255),w,b
 17684  012B72  0101               	movlb	1	; () banked
 17685  012B74  5DAB               	subwf	sprintf@c& (0+255),w,b
 17686  012B76  0101               	movlb	1	; () banked
 17687  012B78  51A6               	movf	(sprintf@width+1)& (0+255),w,b
 17688  012B7A  0A80               	xorlw	128
 17689  012B7C  0101               	movlb	1	; () banked
 17690  012B7E  5997               	subwfb	??_sprintf& (0+255),w,b
 17691  012B80  B0D8               	btfsc	status,0,c
 17692  012B82  D00B               	goto	l9538
 17693                           
 17694                           ; BSR set to: 1
 17695                           ;doprnt.c: 1391: width -= c;
 17696  012B84  0101               	movlb	1	; () banked
 17697  012B86  51AB               	movf	sprintf@c& (0+255),w,b
 17698  012B88  0101               	movlb	1	; () banked
 17699  012B8A  5FA5               	subwf	sprintf@width& (0+255),f,b
 17700  012B8C  0E00               	movlw	0
 17701  012B8E  0101               	movlb	1	; () banked
 17702  012B90  BFAB               	btfsc	sprintf@c& (0+255),7,b
 17703  012B92  0EFF               	movlw	255
 17704  012B94  0101               	movlb	1	; () banked
 17705  012B96  5BA6               	subwfb	(sprintf@width+1)& (0+255),f,b
 17706  012B98  D006               	goto	l9540
 17707  012B9A                     l9538:
 17708                           
 17709                           ; BSR set to: 1
 17710                           ;doprnt.c: 1392: else
 17711                           ;doprnt.c: 1393: width = 0;
 17712  012B9A  0E00               	movlw	0
 17713  012B9C  0101               	movlb	1	; () banked
 17714  012B9E  6FA6               	movwf	(sprintf@width+1)& (0+255),b
 17715  012BA0  0E00               	movlw	0
 17716  012BA2  0101               	movlb	1	; () banked
 17717  012BA4  6FA5               	movwf	sprintf@width& (0+255),b
 17718  012BA6                     l9540:
 17719                           
 17720                           ; BSR set to: 1
 17721                           ;doprnt.c: 1396: if(flag & 0x04) {
 17722  012BA6  0101               	movlb	1	; () banked
 17723  012BA8  A5AC               	btfss	sprintf@flag& (0+255),2,b
 17724  012BAA  D06F               	goto	l9576
 17725                           
 17726                           ; BSR set to: 1
 17727                           ;doprnt.c: 1401: if(flag & 0x03)
 17728  012BAC  0E03               	movlw	3
 17729  012BAE  0101               	movlb	1	; () banked
 17730  012BB0  15AC               	andwf	sprintf@flag& (0+255),w,b
 17731  012BB2  0101               	movlb	1	; () banked
 17732  012BB4  6F97               	movwf	??_sprintf& (0+255),b
 17733  012BB6  0E00               	movlw	0
 17734  012BB8  0101               	movlb	1	; () banked
 17735  012BBA  15AD               	andwf	(sprintf@flag+1)& (0+255),w,b
 17736  012BBC  0101               	movlb	1	; () banked
 17737  012BBE  6F98               	movwf	(??_sprintf+1)& (0+255),b
 17738  012BC0  0101               	movlb	1	; () banked
 17739  012BC2  5198               	movf	(??_sprintf+1)& (0+255),w,b
 17740  012BC4  1197               	iorwf	??_sprintf& (0+255),w,b
 17741  012BC6  B4D8               	btfsc	status,2,c
 17742  012BC8  D006               	goto	l1425
 17743                           
 17744                           ; BSR set to: 1
 17745                           ;doprnt.c: 1402: ((*sp++ = ('-')));
 17746  012BCA  C187  FFD9         	movff	sprintf@sp,fsr2l
 17747  012BCE  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 17748  012BD2  0E2D               	movlw	45
 17749  012BD4  D008               	goto	L18
 17750  012BD6                     l1425:
 17751                           
 17752                           ; BSR set to: 1
 17753                           ;doprnt.c: 1405: else
 17754                           ;doprnt.c: 1408: if(flag & 0x01)
 17755  012BD6  0101               	movlb	1	; () banked
 17756  012BD8  A1AC               	btfss	sprintf@flag& (0+255),0,b
 17757  012BDA  D007               	goto	l9552
 17758                           
 17759                           ; BSR set to: 1
 17760                           ;doprnt.c: 1409: ((*sp++ = (' ')));
 17761  012BDC  C187  FFD9         	movff	sprintf@sp,fsr2l
 17762  012BE0  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 17763  012BE4  0E20               	movlw	32
 17764  012BE6                     L18:
 17765  012BE6  6EDF               	movwf	indf2,c
 17766  012BE8  D039               	goto	L19
 17767  012BEA                     l9552:
 17768                           
 17769                           ; BSR set to: 1
 17770                           ;doprnt.c: 1412: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 17771  012BEA  0EC0               	movlw	192
 17772  012BEC  0101               	movlb	1	; () banked
 17773  012BEE  6F97               	movwf	??_sprintf& (0+255),b
 17774  012BF0  0E08               	movlw	8
 17775  012BF2  6F98               	movwf	(??_sprintf+1)& (0+255),b
 17776  012BF4  0101               	movlb	1	; () banked
 17777  012BF6  C1AC  F199         	movff	sprintf@flag,??_sprintf+2
 17778  012BFA  0101               	movlb	1	; () banked
 17779  012BFC  C1AD  F19A         	movff	sprintf@flag+1,??_sprintf+3
 17780  012C00  0101               	movlb	1	; () banked
 17781  012C02  5197               	movf	??_sprintf& (0+255),w,b
 17782  012C04  0101               	movlb	1	; () banked
 17783  012C06  1799               	andwf	(??_sprintf+2)& (0+255),f,b
 17784  012C08  0101               	movlb	1	; () banked
 17785  012C0A  5198               	movf	(??_sprintf+1)& (0+255),w,b
 17786  012C0C  0101               	movlb	1	; () banked
 17787  012C0E  179A               	andwf	(??_sprintf+3)& (0+255),f,b
 17788  012C10  0101               	movlb	1	; () banked
 17789  012C12  519A               	movf	(??_sprintf+3)& (0+255),w,b
 17790  012C14  0A08               	xorlw	8
 17791  012C16  0E80               	movlw	128
 17792  012C18  B4D8               	btfsc	status,2,c
 17793  012C1A  1999               	xorwf	(??_sprintf+2)& (0+255),w,b
 17794  012C1C  A4D8               	btfss	status,2,c
 17795  012C1E  D021               	goto	l9568
 17796                           
 17797                           ; BSR set to: 1
 17798                           ;doprnt.c: 1413: ((*sp++ = ('0')));
 17799  012C20  C187  FFD9         	movff	sprintf@sp,fsr2l
 17800  012C24  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 17801  012C28  0E30               	movlw	48
 17802  012C2A  6EDF               	movwf	indf2,c
 17803                           
 17804                           ; BSR set to: 1
 17805  012C2C  0101               	movlb	1	; () banked
 17806  012C2E  4B87               	infsnz	sprintf@sp& (0+255),f,b
 17807  012C30  2B88               	incf	(sprintf@sp+1)& (0+255),f,b
 17808                           
 17809                           ; BSR set to: 1
 17810                           ;doprnt.c: 1415: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 17811  012C32  0101               	movlb	1	; () banked
 17812  012C34  BBAC               	btfsc	sprintf@flag& (0+255),5,b
 17813  012C36  D005               	goto	l9562
 17814                           
 17815                           ; BSR set to: 1
 17816  012C38  0E00               	movlw	0
 17817  012C3A  0101               	movlb	1	; () banked
 17818  012C3C  6F9D               	movwf	(_sprintf$2213+1)& (0+255),b
 17819  012C3E  0E78               	movlw	120
 17820  012C40  D004               	goto	L20
 17821  012C42                     l9562:
 17822                           
 17823                           ; BSR set to: 1
 17824  012C42  0E00               	movlw	0
 17825  012C44  0101               	movlb	1	; () banked
 17826  012C46  6F9D               	movwf	(_sprintf$2213+1)& (0+255),b
 17827  012C48  0E58               	movlw	88
 17828  012C4A                     L20:
 17829  012C4A  0101               	movlb	1	; () banked
 17830  012C4C  6F9C               	movwf	_sprintf$2213& (0+255),b
 17831                           
 17832                           ; BSR set to: 1
 17833                           
 17834                           ; BSR set to: 1
 17835  012C4E  C187  FFD9         	movff	sprintf@sp,fsr2l
 17836  012C52  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 17837  012C56  0101               	movlb	1	; () banked
 17838  012C58  C19C  FFDF         	movff	_sprintf$2213,indf2
 17839  012C5C                     L19:
 17840                           
 17841                           ; BSR set to: 1
 17842  012C5C  0101               	movlb	1	; () banked
 17843  012C5E  4B87               	infsnz	sprintf@sp& (0+255),f,b
 17844  012C60  2B88               	incf	(sprintf@sp+1)& (0+255),f,b
 17845  012C62                     l9568:
 17846                           
 17847                           ; BSR set to: 1
 17848                           ;doprnt.c: 1421: }
 17849                           ;doprnt.c: 1424: if(width)
 17850  012C62  0101               	movlb	1	; () banked
 17851  012C64  0101               	movlb	1	; () banked
 17852  012C66  51A6               	movf	(sprintf@width+1)& (0+255),w,b
 17853  012C68  11A5               	iorwf	sprintf@width& (0+255),w,b
 17854  012C6A  B4D8               	btfsc	status,2,c
 17855  012C6C  D151               	goto	l9640
 17856                           
 17857                           ; BSR set to: 1
 17858                           ;doprnt.c: 1426: ((*sp++ = ('0')));
 17859                           
 17860                           ; BSR set to: 1
 17861                           
 17862                           ;doprnt.c: 1425: do
 17863  012C6E  C187  FFD9         	movff	sprintf@sp,fsr2l
 17864  012C72  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 17865  012C76  0E30               	movlw	48
 17866  012C78  6EDF               	movwf	indf2,c
 17867                           
 17868                           ; BSR set to: 1
 17869  012C7A  0101               	movlb	1	; () banked
 17870  012C7C  4B87               	infsnz	sprintf@sp& (0+255),f,b
 17871  012C7E  2B88               	incf	(sprintf@sp+1)& (0+255),f,b
 17872                           
 17873                           ; BSR set to: 1
 17874                           ;doprnt.c: 1427: while(--width);
 17875  012C80  0101               	movlb	1	; () banked
 17876  012C82  07A5               	decf	sprintf@width& (0+255),f,b
 17877  012C84  A0D8               	btfss	status,0,c
 17878  012C86  07A6               	decf	(sprintf@width+1)& (0+255),f,b
 17879  012C88  D7ED               	goto	L27
 17880  012C8A                     l9576:
 17881                           
 17882                           ; BSR set to: 1
 17883                           ;doprnt.c: 1431: {
 17884                           ;doprnt.c: 1433: if(width
 17885                           ;doprnt.c: 1435: && !(flag & 0x08)
 17886                           ;doprnt.c: 1437: )
 17887  012C8A  0101               	movlb	1	; () banked
 17888  012C8C  51A6               	movf	(sprintf@width+1)& (0+255),w,b
 17889  012C8E  11A5               	iorwf	sprintf@width& (0+255),w,b
 17890  012C90  B4D8               	btfsc	status,2,c
 17891  012C92  D015               	goto	l9586
 17892                           
 17893                           ; BSR set to: 1
 17894  012C94  0101               	movlb	1	; () banked
 17895  012C96  B7AC               	btfsc	sprintf@flag& (0+255),3,b
 17896  012C98  D012               	goto	l9586
 17897  012C9A                     l9580:
 17898                           
 17899                           ; BSR set to: 1
 17900                           ;doprnt.c: 1439: ((*sp++ = (' ')));
 17901  012C9A  C187  FFD9         	movff	sprintf@sp,fsr2l
 17902  012C9E  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 17903  012CA2  0E20               	movlw	32
 17904  012CA4  6EDF               	movwf	indf2,c
 17905                           
 17906                           ; BSR set to: 1
 17907  012CA6  0101               	movlb	1	; () banked
 17908  012CA8  4B87               	infsnz	sprintf@sp& (0+255),f,b
 17909  012CAA  2B88               	incf	(sprintf@sp+1)& (0+255),f,b
 17910                           
 17911                           ; BSR set to: 1
 17912                           ;doprnt.c: 1440: while(--width);
 17913  012CAC  0101               	movlb	1	; () banked
 17914  012CAE  07A5               	decf	sprintf@width& (0+255),f,b
 17915  012CB0  A0D8               	btfss	status,0,c
 17916  012CB2  07A6               	decf	(sprintf@width+1)& (0+255),f,b
 17917  012CB4  0101               	movlb	1	; () banked
 17918  012CB6  51A6               	movf	(sprintf@width+1)& (0+255),w,b
 17919  012CB8  11A5               	iorwf	sprintf@width& (0+255),w,b
 17920  012CBA  A4D8               	btfss	status,2,c
 17921  012CBC  D7EE               	goto	l9580
 17922  012CBE                     l9586:
 17923                           
 17924                           ; BSR set to: 1
 17925                           ;doprnt.c: 1447: if(flag & 0x03)
 17926  012CBE  0E03               	movlw	3
 17927  012CC0  0101               	movlb	1	; () banked
 17928  012CC2  15AC               	andwf	sprintf@flag& (0+255),w,b
 17929  012CC4  0101               	movlb	1	; () banked
 17930  012CC6  6F97               	movwf	??_sprintf& (0+255),b
 17931  012CC8  0E00               	movlw	0
 17932  012CCA  0101               	movlb	1	; () banked
 17933  012CCC  15AD               	andwf	(sprintf@flag+1)& (0+255),w,b
 17934  012CCE  0101               	movlb	1	; () banked
 17935  012CD0  6F98               	movwf	(??_sprintf+1)& (0+255),b
 17936  012CD2  0101               	movlb	1	; () banked
 17937  012CD4  5198               	movf	(??_sprintf+1)& (0+255),w,b
 17938  012CD6  1197               	iorwf	??_sprintf& (0+255),w,b
 17939  012CD8  B4D8               	btfsc	status,2,c
 17940  012CDA  D006               	goto	l1441
 17941                           
 17942                           ; BSR set to: 1
 17943                           ;doprnt.c: 1448: ((*sp++ = ('-')));
 17944  012CDC  C187  FFD9         	movff	sprintf@sp,fsr2l
 17945  012CE0  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 17946  012CE4  0E2D               	movlw	45
 17947  012CE6  D008               	goto	L21
 17948  012CE8                     l1441:
 17949                           
 17950                           ; BSR set to: 1
 17951                           ;doprnt.c: 1452: else if(flag & 0x01)
 17952  012CE8  0101               	movlb	1	; () banked
 17953  012CEA  A1AC               	btfss	sprintf@flag& (0+255),0,b
 17954  012CEC  D009               	goto	l9596
 17955                           
 17956                           ; BSR set to: 1
 17957                           ;doprnt.c: 1453: ((*sp++ = (' ')));
 17958  012CEE  C187  FFD9         	movff	sprintf@sp,fsr2l
 17959  012CF2  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 17960  012CF6  0E20               	movlw	32
 17961  012CF8                     L21:
 17962  012CF8  6EDF               	movwf	indf2,c
 17963                           
 17964                           ; BSR set to: 1
 17965  012CFA  0101               	movlb	1	; () banked
 17966  012CFC  4B87               	infsnz	sprintf@sp& (0+255),f,b
 17967  012CFE  2B88               	incf	(sprintf@sp+1)& (0+255),f,b
 17968  012D00                     l9596:
 17969                           
 17970                           ; BSR set to: 1
 17971                           ;doprnt.c: 1457: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 17972  012D00  0EC0               	movlw	192
 17973  012D02  0101               	movlb	1	; () banked
 17974  012D04  6F97               	movwf	??_sprintf& (0+255),b
 17975  012D06  0E08               	movlw	8
 17976  012D08  6F98               	movwf	(??_sprintf+1)& (0+255),b
 17977  012D0A  0101               	movlb	1	; () banked
 17978  012D0C  C1AC  F199         	movff	sprintf@flag,??_sprintf+2
 17979  012D10  0101               	movlb	1	; () banked
 17980  012D12  C1AD  F19A         	movff	sprintf@flag+1,??_sprintf+3
 17981  012D16  0101               	movlb	1	; () banked
 17982  012D18  5197               	movf	??_sprintf& (0+255),w,b
 17983  012D1A  0101               	movlb	1	; () banked
 17984  012D1C  1799               	andwf	(??_sprintf+2)& (0+255),f,b
 17985  012D1E  0101               	movlb	1	; () banked
 17986  012D20  5198               	movf	(??_sprintf+1)& (0+255),w,b
 17987  012D22  0101               	movlb	1	; () banked
 17988  012D24  179A               	andwf	(??_sprintf+3)& (0+255),f,b
 17989  012D26  0101               	movlb	1	; () banked
 17990  012D28  519A               	movf	(??_sprintf+3)& (0+255),w,b
 17991  012D2A  0A08               	xorlw	8
 17992  012D2C  0E40               	movlw	64
 17993  012D2E  B4D8               	btfsc	status,2,c
 17994  012D30  1999               	xorwf	(??_sprintf+2)& (0+255),w,b
 17995  012D32  A4D8               	btfss	status,2,c
 17996  012D34  D007               	goto	l9602
 17997                           
 17998                           ; BSR set to: 1
 17999                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 18000  012D36  C187  FFD9         	movff	sprintf@sp,fsr2l
 18001  012D3A  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 18002  012D3E  0E30               	movlw	48
 18003  012D40  6EDF               	movwf	indf2,c
 18004  012D42  D0E3               	goto	L24
 18005  012D44                     l9602:
 18006                           
 18007                           ; BSR set to: 1
 18008                           ;doprnt.c: 1459: else
 18009                           ;doprnt.c: 1463: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 18010  012D44  0EC0               	movlw	192
 18011  012D46  0101               	movlb	1	; () banked
 18012  012D48  6F97               	movwf	??_sprintf& (0+255),b
 18013  012D4A  0E08               	movlw	8
 18014  012D4C  6F98               	movwf	(??_sprintf+1)& (0+255),b
 18015  012D4E  0101               	movlb	1	; () banked
 18016  012D50  C1AC  F199         	movff	sprintf@flag,??_sprintf+2
 18017  012D54  0101               	movlb	1	; () banked
 18018  012D56  C1AD  F19A         	movff	sprintf@flag+1,??_sprintf+3
 18019  012D5A  0101               	movlb	1	; () banked
 18020  012D5C  5197               	movf	??_sprintf& (0+255),w,b
 18021  012D5E  0101               	movlb	1	; () banked
 18022  012D60  1799               	andwf	(??_sprintf+2)& (0+255),f,b
 18023  012D62  0101               	movlb	1	; () banked
 18024  012D64  5198               	movf	(??_sprintf+1)& (0+255),w,b
 18025  012D66  0101               	movlb	1	; () banked
 18026  012D68  179A               	andwf	(??_sprintf+3)& (0+255),f,b
 18027  012D6A  0101               	movlb	1	; () banked
 18028  012D6C  519A               	movf	(??_sprintf+3)& (0+255),w,b
 18029  012D6E  0A08               	xorlw	8
 18030  012D70  0E80               	movlw	128
 18031  012D72  B4D8               	btfsc	status,2,c
 18032  012D74  1999               	xorwf	(??_sprintf+2)& (0+255),w,b
 18033  012D76  A4D8               	btfss	status,2,c
 18034  012D78  D0CB               	goto	l9640
 18035                           
 18036                           ; BSR set to: 1
 18037                           ;doprnt.c: 1467: ((*sp++ = ('0')));
 18038  012D7A  C187  FFD9         	movff	sprintf@sp,fsr2l
 18039  012D7E  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 18040  012D82  0E30               	movlw	48
 18041  012D84  6EDF               	movwf	indf2,c
 18042                           
 18043                           ; BSR set to: 1
 18044  012D86  0101               	movlb	1	; () banked
 18045  012D88  4B87               	infsnz	sprintf@sp& (0+255),f,b
 18046  012D8A  2B88               	incf	(sprintf@sp+1)& (0+255),f,b
 18047                           
 18048                           ; BSR set to: 1
 18049                           ;doprnt.c: 1469: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 18050  012D8C  0101               	movlb	1	; () banked
 18051  012D8E  BBAC               	btfsc	sprintf@flag& (0+255),5,b
 18052  012D90  D005               	goto	l9612
 18053                           
 18054                           ; BSR set to: 1
 18055  012D92  0E00               	movlw	0
 18056  012D94  0101               	movlb	1	; () banked
 18057  012D96  6F9F               	movwf	(_sprintf$2214+1)& (0+255),b
 18058  012D98  0E78               	movlw	120
 18059  012D9A  D004               	goto	L23
 18060  012D9C                     l9612:
 18061                           
 18062                           ; BSR set to: 1
 18063  012D9C  0E00               	movlw	0
 18064  012D9E  0101               	movlb	1	; () banked
 18065  012DA0  6F9F               	movwf	(_sprintf$2214+1)& (0+255),b
 18066  012DA2  0E58               	movlw	88
 18067  012DA4                     L23:
 18068  012DA4  0101               	movlb	1	; () banked
 18069  012DA6  6F9E               	movwf	_sprintf$2214& (0+255),b
 18070                           
 18071                           ; BSR set to: 1
 18072                           
 18073                           ; BSR set to: 1
 18074  012DA8  C187  FFD9         	movff	sprintf@sp,fsr2l
 18075  012DAC  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 18076  012DB0  0101               	movlb	1	; () banked
 18077  012DB2  C19E  FFDF         	movff	_sprintf$2214,indf2
 18078  012DB6  D0A9               	goto	L24
 18079  012DB8                     l9618:
 18080                           
 18081                           ; BSR set to: 1
 18082                           ;doprnt.c: 1495: case 0xC0:
 18083                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
 18084  012DB8  0101               	movlb	1	; () banked
 18085  012DBA  51A4               	movf	sprintf@prec& (0+255),w,b
 18086  012DBC  0D02               	mullw	2
 18087  012DBE  0EFB               	movlw	low _dpowers
 18088  012DC0  24F3               	addwf	prodl,w,c
 18089  012DC2  6EF6               	movwf	tblptrl,c
 18090  012DC4  0EEF               	movlw	high _dpowers
 18091  012DC6  20F4               	addwfc	prodh,w,c
 18092  012DC8  6EF7               	movwf	tblptrh,c
 18093  012DCA                     	if	1	;There are 3 active tblptr bytes
 18094  012DCA  6AF8               	clrf	tblptru,c
 18095  012DCC  0E00               	movlw	low (__mediumconst shr (0+16))
 18096  012DCE  22F8               	addwfc	tblptru,f,c
 18097  012DD0                     	endif
 18098  012DD0  0009               	tblrd		*+
 18099  012DD2  0101               	movlb	1	; () banked
 18100  012DD4  CFF5 F17D          	movff	tablat,___lwdiv@divisor
 18101  012DD8  000A               	tblrd		*-
 18102  012DDA  0101               	movlb	1	; () banked
 18103  012DDC  CFF5 F17E          	movff	tablat,___lwdiv@divisor+1
 18104  012DE0  C1A7  F17B         	movff	sprintf@_val,___lwdiv@dividend
 18105  012DE4  C1A8  F17C         	movff	sprintf@_val+1,___lwdiv@dividend+1
 18106  012DE8  EC84  F0B1         	call	___lwdiv	;wreg free
 18107  012DEC  0101               	movlb	1	; () banked
 18108  012DEE  C17B  F182         	movff	?___lwdiv,___lwmod@dividend
 18109  012DF2  0101               	movlb	1	; () banked
 18110  012DF4  C17C  F183         	movff	?___lwdiv+1,___lwmod@dividend+1
 18111  012DF8  0E00               	movlw	0
 18112  012DFA  0101               	movlb	1	; () banked
 18113  012DFC  6F85               	movwf	(___lwmod@divisor+1)& (0+255),b
 18114  012DFE  0E0A               	movlw	10
 18115  012E00  0101               	movlb	1	; () banked
 18116  012E02  6F84               	movwf	___lwmod@divisor& (0+255),b
 18117  012E04  EC6D  F0B3         	call	___lwmod	;wreg free
 18118  012E08  0101               	movlb	1	; () banked
 18119  012E0A  5182               	movf	?___lwmod& (0+255),w,b
 18120  012E0C  D064               	goto	L25
 18121  012E0E                     l9620:
 18122                           
 18123                           ; BSR set to: 1
 18124                           ;doprnt.c: 1508: {
 18125                           ;doprnt.c: 1509: unsigned char idx = (_val._val / hexpowers[prec]) & 0xF;
 18126  012E0E  C1A7  F17B         	movff	sprintf@_val,___lwdiv@dividend
 18127  012E12  C1A8  F17C         	movff	sprintf@_val+1,___lwdiv@dividend+1
 18128  012E16  0101               	movlb	1	; () banked
 18129  012E18  51A4               	movf	sprintf@prec& (0+255),w,b
 18130  012E1A  0D02               	mullw	2
 18131  012E1C  0E05               	movlw	low _hexpowers
 18132  012E1E  24F3               	addwf	prodl,w,c
 18133  012E20  6EF6               	movwf	tblptrl,c
 18134  012E22  0EF0               	movlw	high _hexpowers
 18135  012E24  20F4               	addwfc	prodh,w,c
 18136  012E26  6EF7               	movwf	tblptrh,c
 18137  012E28                     	if	1	;There are 3 active tblptr bytes
 18138  012E28  6AF8               	clrf	tblptru,c
 18139  012E2A  0E00               	movlw	low (__mediumconst shr (0+16))
 18140  012E2C  22F8               	addwfc	tblptru,f,c
 18141  012E2E                     	endif
 18142  012E2E  0009               	tblrd		*+
 18143  012E30  0101               	movlb	1	; () banked
 18144  012E32  CFF5 F17D          	movff	tablat,___lwdiv@divisor
 18145  012E36  000A               	tblrd		*-
 18146  012E38  0101               	movlb	1	; () banked
 18147  012E3A  CFF5 F17E          	movff	tablat,___lwdiv@divisor+1
 18148  012E3E  EC84  F0B1         	call	___lwdiv	;wreg free
 18149  012E42  0101               	movlb	1	; () banked
 18150  012E44  517B               	movf	?___lwdiv& (0+255),w,b
 18151  012E46  0B0F               	andlw	15
 18152  012E48  0101               	movlb	1	; () banked
 18153  012E4A  6F9B               	movwf	sprintf@idx& (0+255),b
 18154                           
 18155                           ; BSR set to: 1
 18156                           ;doprnt.c: 1511: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 18157  012E4C  0101               	movlb	1	; () banked
 18158  012E4E  BBAC               	btfsc	sprintf@flag& (0+255),5,b
 18159  012E50  D005               	goto	l9626
 18160                           
 18161                           ; BSR set to: 1
 18162  012E52  0EF9               	movlw	high STR_286
 18163  012E54  0101               	movlb	1	; () banked
 18164  012E56  6FA1               	movwf	(_sprintf$2220+1)& (0+255),b
 18165  012E58  0E79               	movlw	low STR_286
 18166  012E5A  D004               	goto	L26
 18167  012E5C                     l9626:
 18168                           
 18169                           ; BSR set to: 1
 18170  012E5C  0EF9               	movlw	high STR_285
 18171  012E5E  0101               	movlb	1	; () banked
 18172  012E60  6FA1               	movwf	(_sprintf$2220+1)& (0+255),b
 18173  012E62  0E68               	movlw	low STR_285
 18174  012E64                     L26:
 18175  012E64  0101               	movlb	1	; () banked
 18176  012E66  6FA0               	movwf	_sprintf$2220& (0+255),b
 18177                           
 18178                           ; BSR set to: 1
 18179                           
 18180                           ; BSR set to: 1
 18181  012E68  0101               	movlb	1	; () banked
 18182  012E6A  519B               	movf	sprintf@idx& (0+255),w,b
 18183  012E6C  0D01               	mullw	1
 18184  012E6E  0101               	movlb	1	; () banked
 18185  012E70  C1A0  F197         	movff	_sprintf$2220,??_sprintf
 18186  012E74  0101               	movlb	1	; () banked
 18187  012E76  C1A1  F198         	movff	_sprintf$2220+1,??_sprintf+1
 18188  012E7A  50F3               	movf	prodl,w,c
 18189  012E7C  0101               	movlb	1	; () banked
 18190  012E7E  2797               	addwf	??_sprintf& (0+255),f,b
 18191  012E80  50F4               	movf	prodh,w,c
 18192  012E82  0101               	movlb	1	; () banked
 18193  012E84  2398               	addwfc	(??_sprintf+1)& (0+255),f,b
 18194  012E86  C197  FFF6         	movff	??_sprintf,tblptrl
 18195  012E8A  C198  FFF7         	movff	??_sprintf+1,tblptrh
 18196  012E8E                     	if	0	;tblptru may be non-zero
 18197  012E8E                     	endif
 18198  012E8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18199  012E8E  0E00               	movlw	low (__mediumconst shr (0+16))
 18200  012E90  6EF8               	movwf	tblptru,c
 18201  012E92                     	endif
 18202  012E92  0008               	tblrd		*
 18203  012E94  0101               	movlb	1	; () banked
 18204  012E96  CFF5 F1AB          	movff	tablat,sprintf@c
 18205                           
 18206                           ;doprnt.c: 1517: }
 18207                           ;doprnt.c: 1519: break;
 18208  012E9A  D030               	goto	l9636
 18209  012E9C                     l9630:
 18210                           
 18211                           ; BSR set to: 1
 18212                           ;doprnt.c: 1527: c = ((_val._val / octpowers[prec]) & 07) + '0';
 18213  012E9C  C1A7  F17B         	movff	sprintf@_val,___lwdiv@dividend
 18214  012EA0  C1A8  F17C         	movff	sprintf@_val+1,___lwdiv@dividend+1
 18215  012EA4  0101               	movlb	1	; () banked
 18216  012EA6  51A4               	movf	sprintf@prec& (0+255),w,b
 18217  012EA8  0D02               	mullw	2
 18218  012EAA  0EEF               	movlw	low _octpowers
 18219  012EAC  24F3               	addwf	prodl,w,c
 18220  012EAE  6EF6               	movwf	tblptrl,c
 18221  012EB0  0EEF               	movlw	high _octpowers
 18222  012EB2  20F4               	addwfc	prodh,w,c
 18223  012EB4  6EF7               	movwf	tblptrh,c
 18224  012EB6                     	if	1	;There are 3 active tblptr bytes
 18225  012EB6  6AF8               	clrf	tblptru,c
 18226  012EB8  0E00               	movlw	low (__mediumconst shr (0+16))
 18227  012EBA  22F8               	addwfc	tblptru,f,c
 18228  012EBC                     	endif
 18229  012EBC  0009               	tblrd		*+
 18230  012EBE  0101               	movlb	1	; () banked
 18231  012EC0  CFF5 F17D          	movff	tablat,___lwdiv@divisor
 18232  012EC4  000A               	tblrd		*-
 18233  012EC6  0101               	movlb	1	; () banked
 18234  012EC8  CFF5 F17E          	movff	tablat,___lwdiv@divisor+1
 18235  012ECC  EC84  F0B1         	call	___lwdiv	;wreg free
 18236  012ED0  0101               	movlb	1	; () banked
 18237  012ED2  517B               	movf	?___lwdiv& (0+255),w,b
 18238  012ED4  0B07               	andlw	7
 18239  012ED6                     L25:
 18240  012ED6  0F30               	addlw	48
 18241  012ED8  0101               	movlb	1	; () banked
 18242  012EDA  6FAB               	movwf	sprintf@c& (0+255),b
 18243                           
 18244                           ;doprnt.c: 1529: break;
 18245  012EDC  D00F               	goto	l9636
 18246  012EDE                     l9634:
 18247                           
 18248                           ; BSR set to: 1
 18249  012EDE  0101               	movlb	1	; () banked
 18250  012EE0  51AC               	movf	sprintf@flag& (0+255),w,b
 18251  012EE2  0BC0               	andlw	192
 18252                           
 18253                           ; Switch size 1, requested type "space"
 18254                           ; Number of cases is 4, Range of values is 0 to 192
 18255                           ; switch strategies available:
 18256                           ; Name         Instructions Cycles
 18257                           ; simple_byte           13     7 (average)
 18258                           ;	Chosen strategy is simple_byte
 18259  012EE4  0A00               	xorlw	0	; case 0
 18260  012EE6  B4D8               	btfsc	status,2,c
 18261  012EE8  D767               	goto	l9618
 18262  012EEA  0A40               	xorlw	64	; case 64
 18263  012EEC  B4D8               	btfsc	status,2,c
 18264  012EEE  D7D6               	goto	l9630
 18265  012EF0  0AC0               	xorlw	192	; case 128
 18266  012EF2  B4D8               	btfsc	status,2,c
 18267  012EF4  D78C               	goto	l9620
 18268  012EF6  0A40               	xorlw	64	; case 192
 18269  012EF8  B4D8               	btfsc	status,2,c
 18270  012EFA  D75E               	goto	l9618
 18271  012EFC                     l9636:
 18272                           
 18273                           ; BSR set to: 1
 18274                           ;doprnt.c: 1533: ((*sp++ = (c)));
 18275  012EFC  C187  FFD9         	movff	sprintf@sp,fsr2l
 18276  012F00  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 18277  012F04  0101               	movlb	1	; () banked
 18278  012F06  C1AB  FFDF         	movff	sprintf@c,indf2
 18279  012F0A                     L24:
 18280                           
 18281                           ; BSR set to: 1
 18282  012F0A  0101               	movlb	1	; () banked
 18283  012F0C  4B87               	infsnz	sprintf@sp& (0+255),f,b
 18284  012F0E  2B88               	incf	(sprintf@sp+1)& (0+255),f,b
 18285  012F10                     l9640:
 18286                           
 18287                           ; BSR set to: 1
 18288  012F10  0101               	movlb	1	; () banked
 18289  012F12  07A4               	decf	sprintf@prec& (0+255),f,b
 18290  012F14  0101               	movlb	1	; () banked
 18291  012F16  29A4               	incf	sprintf@prec& (0+255),w,b
 18292  012F18  A4D8               	btfss	status,2,c
 18293  012F1A  D7E1               	goto	l9634
 18294                           
 18295                           ; BSR set to: 1
 18296                           ;doprnt.c: 1534: }
 18297                           ;doprnt.c: 1537: if((flag & 0x08) && width > 0)
 18298  012F1C  0101               	movlb	1	; () banked
 18299  012F1E  A7AC               	btfss	sprintf@flag& (0+255),3,b
 18300  012F20  D01B               	goto	l9650
 18301                           
 18302                           ; BSR set to: 1
 18303  012F22  0101               	movlb	1	; () banked
 18304  012F24  51A6               	movf	(sprintf@width+1)& (0+255),w,b
 18305  012F26  0A80               	xorlw	128
 18306  012F28  0F80               	addlw	-128
 18307  012F2A  0E01               	movlw	1
 18308  012F2C  B4D8               	btfsc	status,2,c
 18309  012F2E  5DA5               	subwf	sprintf@width& (0+255),w,b
 18310  012F30  A0D8               	btfss	status,0,c
 18311  012F32  D012               	goto	l9650
 18312  012F34                     l9644:
 18313                           
 18314                           ; BSR set to: 1
 18315                           ;doprnt.c: 1539: ((*sp++ = (' ')));
 18316  012F34  C187  FFD9         	movff	sprintf@sp,fsr2l
 18317  012F38  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 18318  012F3C  0E20               	movlw	32
 18319  012F3E  6EDF               	movwf	indf2,c
 18320                           
 18321                           ; BSR set to: 1
 18322  012F40  0101               	movlb	1	; () banked
 18323  012F42  4B87               	infsnz	sprintf@sp& (0+255),f,b
 18324  012F44  2B88               	incf	(sprintf@sp+1)& (0+255),f,b
 18325                           
 18326                           ; BSR set to: 1
 18327                           ;doprnt.c: 1540: while(--width);
 18328  012F46  0101               	movlb	1	; () banked
 18329  012F48  07A5               	decf	sprintf@width& (0+255),f,b
 18330  012F4A  A0D8               	btfss	status,0,c
 18331  012F4C  07A6               	decf	(sprintf@width+1)& (0+255),f,b
 18332  012F4E  0101               	movlb	1	; () banked
 18333  012F50  51A6               	movf	(sprintf@width+1)& (0+255),w,b
 18334  012F52  11A5               	iorwf	sprintf@width& (0+255),w,b
 18335  012F54  A4D8               	btfss	status,2,c
 18336  012F56  D7EE               	goto	l9644
 18337  012F58                     l9650:
 18338                           
 18339                           ; BSR set to: 1
 18340  012F58  0101               	movlb	1	; () banked
 18341  012F5A  C189  FFF6         	movff	sprintf@f,tblptrl
 18342  012F5E  0101               	movlb	1	; () banked
 18343  012F60  C18A  FFF7         	movff	sprintf@f+1,tblptrh
 18344  012F64  0101               	movlb	1	; () banked
 18345  012F66  4B89               	infsnz	sprintf@f& (0+255),f,b
 18346  012F68  2B8A               	incf	(sprintf@f+1)& (0+255),f,b
 18347  012F6A                     	if	0	;tblptru may be non-zero
 18348  012F6A                     	endif
 18349  012F6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18350  012F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 18351  012F6C  6EF8               	movwf	tblptru,c
 18352  012F6E                     	endif
 18353  012F6E  0008               	tblrd		*
 18354  012F70  0101               	movlb	1	; () banked
 18355  012F72  CFF5 F1AB          	movff	tablat,sprintf@c
 18356  012F76  0101               	movlb	1	; () banked
 18357  012F78  67AB               	tstfsz	sprintf@c& (0+255),b
 18358  012F7A  EF3B  F092         	goto	l9310
 18359  012F7E                     l9652:
 18360                           
 18361                           ; BSR set to: 1
 18362                           ;doprnt.c: 1547: *sp = 0;
 18363  012F7E  C187  FFD9         	movff	sprintf@sp,fsr2l
 18364  012F82  C188  FFDA         	movff	sprintf@sp+1,fsr2h
 18365  012F86  0E00               	movlw	0
 18366  012F88  6EDF               	movwf	indf2,c
 18367  012F8A  0012               	return	
 18368  012F8C                     __end_of_sprintf:
 18369                           	opt stack 0
 18370                           tblptru	equ	0xFF8
 18371                           tblptrh	equ	0xFF7
 18372                           tblptrl	equ	0xFF6
 18373                           tablat	equ	0xFF5
 18374                           prodh	equ	0xFF4
 18375                           prodl	equ	0xFF3
 18376                           intcon	equ	0xFF2
 18377                           postinc0	equ	0xFEE
 18378                           wreg	equ	0xFE8
 18379                           indf1	equ	0xFE7
 18380                           postinc1	equ	0xFE6
 18381                           postdec1	equ	0xFE5
 18382                           fsr1h	equ	0xFE2
 18383                           fsr1l	equ	0xFE1
 18384                           indf2	equ	0xFDF
 18385                           postinc2	equ	0xFDE
 18386                           postdec2	equ	0xFDD
 18387                           fsr2h	equ	0xFDA
 18388                           fsr2l	equ	0xFD9
 18389                           status	equ	0xFD8
 18390                           
 18391 ;; *************** function _isdigit *****************
 18392 ;; Defined at:
 18393 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
 18394 ;; Parameters:    Size  Location     Type
 18395 ;;  c               1    wreg     unsigned char 
 18396 ;; Auto vars:     Size  Location     Type
 18397 ;;  c               1   16[BANK1 ] unsigned char 
 18398 ;; Return value:  Size  Location     Type
 18399 ;;		None               void
 18400 ;; Registers used:
 18401 ;;		wreg, status,2, status,0
 18402 ;; Tracked objects:
 18403 ;;		On entry : 0/0
 18404 ;;		On exit  : 0/0
 18405 ;;		Unchanged: 0/0
 18406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18408 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18409 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18410 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18411 ;;Total ram usage:        3 bytes
 18412 ;; Hardware stack levels used:    1
 18413 ;; Hardware stack levels required when called:    6
 18414 ;; This function calls:
 18415 ;;		Nothing
 18416 ;; This function is called by:
 18417 ;;		_sprintf
 18418 ;; This function uses a non-reentrant model
 18419 ;;
 18420                           
 18421                           	psect	text28
 18422  016BAA                     __ptext28:
 18423                           	opt stack 0
 18424  016BAA                     _isdigit:
 18425                           	opt stack 21
 18426                           
 18427                           ; BSR set to: 1
 18428                           ;incstack = 0
 18429                           ;isdigit@c stored from wreg
 18430  016BAA  0101               	movlb	1	; () banked
 18431  016BAC  6F7D               	movwf	isdigit@c& (0+255),b
 18432                           
 18433                           ; BSR set to: 1
 18434  016BAE  0E00               	movlw	0
 18435  016BB0  0101               	movlb	1	; () banked
 18436  016BB2  6F7C               	movwf	_isdigit$2562& (0+255),b
 18437                           
 18438                           ; BSR set to: 1
 18439  016BB4  0E3A               	movlw	58
 18440  016BB6  0101               	movlb	1	; () banked
 18441  016BB8  5D7D               	subwf	isdigit@c& (0+255),w,b
 18442  016BBA  B0D8               	btfsc	status,0,c
 18443  016BBC  D007               	goto	l9152
 18444                           
 18445                           ; BSR set to: 1
 18446  016BBE  0E2F               	movlw	47
 18447  016BC0  0101               	movlb	1	; () banked
 18448  016BC2  657D               	cpfsgt	isdigit@c& (0+255),b
 18449  016BC4  D003               	goto	l9152
 18450                           
 18451                           ; BSR set to: 1
 18452  016BC6  0E01               	movlw	1
 18453  016BC8  0101               	movlb	1	; () banked
 18454  016BCA  6F7C               	movwf	_isdigit$2562& (0+255),b
 18455  016BCC                     l9152:
 18456                           
 18457                           ; BSR set to: 1
 18458  016BCC  C17C  F17B         	movff	_isdigit$2562,??_isdigit
 18459  016BD0  0101               	movlb	1	; () banked
 18460  016BD2  317B               	rrcf	??_isdigit& (0+255),w,b
 18461  016BD4  0012               	return	
 18462  016BD6                     __end_of_isdigit:
 18463                           	opt stack 0
 18464                           tblptru	equ	0xFF8
 18465                           tblptrh	equ	0xFF7
 18466                           tblptrl	equ	0xFF6
 18467                           tablat	equ	0xFF5
 18468                           prodh	equ	0xFF4
 18469                           prodl	equ	0xFF3
 18470                           intcon	equ	0xFF2
 18471                           postinc0	equ	0xFEE
 18472                           wreg	equ	0xFE8
 18473                           indf1	equ	0xFE7
 18474                           postinc1	equ	0xFE6
 18475                           postdec1	equ	0xFE5
 18476                           fsr1h	equ	0xFE2
 18477                           fsr1l	equ	0xFE1
 18478                           indf2	equ	0xFDF
 18479                           postinc2	equ	0xFDE
 18480                           postdec2	equ	0xFDD
 18481                           fsr2h	equ	0xFDA
 18482                           fsr2l	equ	0xFD9
 18483                           status	equ	0xFD8
 18484                           
 18485 ;; *************** function ___lwmod *****************
 18486 ;; Defined at:
 18487 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
 18488 ;; Parameters:    Size  Location     Type
 18489 ;;  dividend        2   21[BANK1 ] unsigned int 
 18490 ;;  divisor         2   23[BANK1 ] unsigned int 
 18491 ;; Auto vars:     Size  Location     Type
 18492 ;;  counter         1   25[BANK1 ] unsigned char 
 18493 ;; Return value:  Size  Location     Type
 18494 ;;                  2   21[BANK1 ] unsigned int 
 18495 ;; Registers used:
 18496 ;;		wreg, status,2, status,0
 18497 ;; Tracked objects:
 18498 ;;		On entry : 0/0
 18499 ;;		On exit  : 0/0
 18500 ;;		Unchanged: 0/0
 18501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18502 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18503 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18505 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 18506 ;;Total ram usage:        5 bytes
 18507 ;; Hardware stack levels used:    1
 18508 ;; Hardware stack levels required when called:    6
 18509 ;; This function calls:
 18510 ;;		Nothing
 18511 ;; This function is called by:
 18512 ;;		_Command
 18513 ;;		_sprintf
 18514 ;; This function uses a non-reentrant model
 18515 ;;
 18516                           
 18517                           	psect	text29
 18518  0166DA                     __ptext29:
 18519                           	opt stack 0
 18520  0166DA                     ___lwmod:
 18521                           	opt stack 21
 18522                           
 18523                           ; BSR set to: 1
 18524                           ;incstack = 0
 18525  0166DA  0101               	movlb	1	; () banked
 18526  0166DC  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18527  0166DE  1184               	iorwf	___lwmod@divisor& (0+255),w,b
 18528  0166E0  B4D8               	btfsc	status,2,c
 18529  0166E2  D026               	goto	l2011
 18530                           
 18531                           ; BSR set to: 1
 18532  0166E4  0E01               	movlw	1
 18533  0166E6  0101               	movlb	1	; () banked
 18534  0166E8  6F86               	movwf	___lwmod@counter& (0+255),b
 18535  0166EA  D006               	goto	l9224
 18536  0166EC                     l9222:
 18537                           
 18538                           ; BSR set to: 1
 18539  0166EC  0101               	movlb	1	; () banked
 18540  0166EE  90D8               	bcf	status,0,c
 18541  0166F0  3784               	rlcf	___lwmod@divisor& (0+255),f,b
 18542  0166F2  3785               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18543  0166F4  0101               	movlb	1	; () banked
 18544  0166F6  2B86               	incf	___lwmod@counter& (0+255),f,b
 18545  0166F8                     l9224:
 18546                           
 18547                           ; BSR set to: 1
 18548  0166F8  0101               	movlb	1	; () banked
 18549  0166FA  AF85               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18550  0166FC  D7F7               	goto	l9222
 18551  0166FE                     l9226:
 18552                           
 18553                           ; BSR set to: 1
 18554  0166FE  0101               	movlb	1	; () banked
 18555  016700  5184               	movf	___lwmod@divisor& (0+255),w,b
 18556  016702  0101               	movlb	1	; () banked
 18557  016704  5D82               	subwf	___lwmod@dividend& (0+255),w,b
 18558  016706  0101               	movlb	1	; () banked
 18559  016708  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18560  01670A  0101               	movlb	1	; () banked
 18561  01670C  5983               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18562  01670E  A0D8               	btfss	status,0,c
 18563  016710  D008               	goto	l9230
 18564                           
 18565                           ; BSR set to: 1
 18566  016712  0101               	movlb	1	; () banked
 18567  016714  5184               	movf	___lwmod@divisor& (0+255),w,b
 18568  016716  0101               	movlb	1	; () banked
 18569  016718  5F82               	subwf	___lwmod@dividend& (0+255),f,b
 18570  01671A  0101               	movlb	1	; () banked
 18571  01671C  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18572  01671E  0101               	movlb	1	; () banked
 18573  016720  5B83               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18574  016722                     l9230:
 18575                           
 18576                           ; BSR set to: 1
 18577  016722  0101               	movlb	1	; () banked
 18578  016724  90D8               	bcf	status,0,c
 18579  016726  3385               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18580  016728  3384               	rrcf	___lwmod@divisor& (0+255),f,b
 18581                           
 18582                           ; BSR set to: 1
 18583  01672A  0101               	movlb	1	; () banked
 18584  01672C  2F86               	decfsz	___lwmod@counter& (0+255),f,b
 18585  01672E  D7E7               	goto	l9226
 18586  016730                     l2011:
 18587                           
 18588                           ; BSR set to: 1
 18589  016730  C182  F182         	movff	___lwmod@dividend,?___lwmod
 18590  016734  C183  F183         	movff	___lwmod@dividend+1,?___lwmod+1
 18591                           
 18592                           ; BSR set to: 1
 18593  016738  0012               	return	
 18594  01673A                     __end_of___lwmod:
 18595                           	opt stack 0
 18596                           tblptru	equ	0xFF8
 18597                           tblptrh	equ	0xFF7
 18598                           tblptrl	equ	0xFF6
 18599                           tablat	equ	0xFF5
 18600                           prodh	equ	0xFF4
 18601                           prodl	equ	0xFF3
 18602                           intcon	equ	0xFF2
 18603                           postinc0	equ	0xFEE
 18604                           wreg	equ	0xFE8
 18605                           indf1	equ	0xFE7
 18606                           postinc1	equ	0xFE6
 18607                           postdec1	equ	0xFE5
 18608                           fsr1h	equ	0xFE2
 18609                           fsr1l	equ	0xFE1
 18610                           indf2	equ	0xFDF
 18611                           postinc2	equ	0xFDE
 18612                           postdec2	equ	0xFDD
 18613                           fsr2h	equ	0xFDA
 18614                           fsr2l	equ	0xFD9
 18615                           status	equ	0xFD8
 18616                           
 18617 ;; *************** function ___lwdiv *****************
 18618 ;; Defined at:
 18619 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
 18620 ;; Parameters:    Size  Location     Type
 18621 ;;  dividend        2   14[BANK1 ] unsigned int 
 18622 ;;  divisor         2   16[BANK1 ] unsigned int 
 18623 ;; Auto vars:     Size  Location     Type
 18624 ;;  quotient        2   19[BANK1 ] unsigned int 
 18625 ;;  counter         1   18[BANK1 ] unsigned char 
 18626 ;; Return value:  Size  Location     Type
 18627 ;;                  2   14[BANK1 ] unsigned int 
 18628 ;; Registers used:
 18629 ;;		wreg, status,2, status,0
 18630 ;; Tracked objects:
 18631 ;;		On entry : 0/0
 18632 ;;		On exit  : 0/0
 18633 ;;		Unchanged: 0/0
 18634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18635 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18636 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18638 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 18639 ;;Total ram usage:        7 bytes
 18640 ;; Hardware stack levels used:    1
 18641 ;; Hardware stack levels required when called:    6
 18642 ;; This function calls:
 18643 ;;		Nothing
 18644 ;; This function is called by:
 18645 ;;		_sprintf
 18646 ;; This function uses a non-reentrant model
 18647 ;;
 18648                           
 18649                           	psect	text30
 18650  016308                     __ptext30:
 18651                           	opt stack 0
 18652  016308                     ___lwdiv:
 18653                           	opt stack 21
 18654                           
 18655                           ; BSR set to: 1
 18656                           ;incstack = 0
 18657  016308  0E00               	movlw	0
 18658  01630A  0101               	movlb	1	; () banked
 18659  01630C  6F81               	movwf	(___lwdiv@quotient+1)& (0+255),b
 18660  01630E  0E00               	movlw	0
 18661  016310  0101               	movlb	1	; () banked
 18662  016312  6F80               	movwf	___lwdiv@quotient& (0+255),b
 18663                           
 18664                           ; BSR set to: 1
 18665  016314  0101               	movlb	1	; () banked
 18666  016316  517E               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 18667  016318  117D               	iorwf	___lwdiv@divisor& (0+255),w,b
 18668  01631A  B4D8               	btfsc	status,2,c
 18669  01631C  D02C               	goto	l2001
 18670                           
 18671                           ; BSR set to: 1
 18672  01631E  0E01               	movlw	1
 18673  016320  0101               	movlb	1	; () banked
 18674  016322  6F7F               	movwf	___lwdiv@counter& (0+255),b
 18675  016324  D006               	goto	l9204
 18676  016326                     l9202:
 18677                           
 18678                           ; BSR set to: 1
 18679  016326  0101               	movlb	1	; () banked
 18680  016328  90D8               	bcf	status,0,c
 18681  01632A  377D               	rlcf	___lwdiv@divisor& (0+255),f,b
 18682  01632C  377E               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 18683  01632E  0101               	movlb	1	; () banked
 18684  016330  2B7F               	incf	___lwdiv@counter& (0+255),f,b
 18685  016332                     l9204:
 18686                           
 18687                           ; BSR set to: 1
 18688  016332  0101               	movlb	1	; () banked
 18689  016334  AF7E               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 18690  016336  D7F7               	goto	l9202
 18691  016338                     l9206:
 18692                           
 18693                           ; BSR set to: 1
 18694  016338  0101               	movlb	1	; () banked
 18695  01633A  90D8               	bcf	status,0,c
 18696  01633C  3780               	rlcf	___lwdiv@quotient& (0+255),f,b
 18697  01633E  3781               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 18698                           
 18699                           ; BSR set to: 1
 18700  016340  0101               	movlb	1	; () banked
 18701  016342  517D               	movf	___lwdiv@divisor& (0+255),w,b
 18702  016344  0101               	movlb	1	; () banked
 18703  016346  5D7B               	subwf	___lwdiv@dividend& (0+255),w,b
 18704  016348  0101               	movlb	1	; () banked
 18705  01634A  517E               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 18706  01634C  0101               	movlb	1	; () banked
 18707  01634E  597C               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 18708  016350  A0D8               	btfss	status,0,c
 18709  016352  D00A               	goto	l9214
 18710                           
 18711                           ; BSR set to: 1
 18712  016354  0101               	movlb	1	; () banked
 18713  016356  517D               	movf	___lwdiv@divisor& (0+255),w,b
 18714  016358  0101               	movlb	1	; () banked
 18715  01635A  5F7B               	subwf	___lwdiv@dividend& (0+255),f,b
 18716  01635C  0101               	movlb	1	; () banked
 18717  01635E  517E               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 18718  016360  0101               	movlb	1	; () banked
 18719  016362  5B7C               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 18720                           
 18721                           ; BSR set to: 1
 18722  016364  0101               	movlb	1	; () banked
 18723  016366  8180               	bsf	___lwdiv@quotient& (0+255),0,b
 18724  016368                     l9214:
 18725                           
 18726                           ; BSR set to: 1
 18727  016368  0101               	movlb	1	; () banked
 18728  01636A  90D8               	bcf	status,0,c
 18729  01636C  337E               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 18730  01636E  337D               	rrcf	___lwdiv@divisor& (0+255),f,b
 18731                           
 18732                           ; BSR set to: 1
 18733  016370  0101               	movlb	1	; () banked
 18734  016372  2F7F               	decfsz	___lwdiv@counter& (0+255),f,b
 18735  016374  D7E1               	goto	l9206
 18736  016376                     l2001:
 18737                           
 18738                           ; BSR set to: 1
 18739  016376  C180  F17B         	movff	___lwdiv@quotient,?___lwdiv
 18740  01637A  C181  F17C         	movff	___lwdiv@quotient+1,?___lwdiv+1
 18741                           
 18742                           ; BSR set to: 1
 18743  01637E  0012               	return	
 18744  016380                     __end_of___lwdiv:
 18745                           	opt stack 0
 18746                           tblptru	equ	0xFF8
 18747                           tblptrh	equ	0xFF7
 18748                           tblptrl	equ	0xFF6
 18749                           tablat	equ	0xFF5
 18750                           prodh	equ	0xFF4
 18751                           prodl	equ	0xFF3
 18752                           intcon	equ	0xFF2
 18753                           postinc0	equ	0xFEE
 18754                           wreg	equ	0xFE8
 18755                           indf1	equ	0xFE7
 18756                           postinc1	equ	0xFE6
 18757                           postdec1	equ	0xFE5
 18758                           fsr1h	equ	0xFE2
 18759                           fsr1l	equ	0xFE1
 18760                           indf2	equ	0xFDF
 18761                           postinc2	equ	0xFDE
 18762                           postdec2	equ	0xFDD
 18763                           fsr2h	equ	0xFDA
 18764                           fsr2l	equ	0xFD9
 18765                           status	equ	0xFD8
 18766                           
 18767 ;; *************** function _SetDuty *****************
 18768 ;; Defined at:
 18769 ;;		line 72 in file "PWM.c"
 18770 ;; Parameters:    Size  Location     Type
 18771 ;;  Duty            1    wreg     unsigned char 
 18772 ;; Auto vars:     Size  Location     Type
 18773 ;;  Duty            1   75[BANK1 ] unsigned char 
 18774 ;;  tempPR2         3   76[BANK1 ] float 
 18775 ;;  temp            2   81[BANK1 ] unsigned int 
 18776 ;;  LSB             1   80[BANK1 ] unsigned char 
 18777 ;;  MSB             1   79[BANK1 ] unsigned char 
 18778 ;; Return value:  Size  Location     Type
 18779 ;;		None               void
 18780 ;; Registers used:
 18781 ;;		wreg, status,2, status,0, cstack
 18782 ;; Tracked objects:
 18783 ;;		On entry : 0/0
 18784 ;;		On exit  : 0/0
 18785 ;;		Unchanged: 0/0
 18786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18788 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 18789 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18790 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 18791 ;;Total ram usage:       12 bytes
 18792 ;; Hardware stack levels used:    1
 18793 ;; Hardware stack levels required when called:    8
 18794 ;; This function calls:
 18795 ;;		___ftdiv
 18796 ;;		___ftmul
 18797 ;;		___fttol
 18798 ;;		___lbtoft
 18799 ;; This function is called by:
 18800 ;;		_main
 18801 ;;		_Command
 18802 ;;		_PWM_init
 18803 ;;		_ContrastPWM_init
 18804 ;; This function uses a non-reentrant model
 18805 ;;
 18806                           
 18807                           	psect	text31
 18808  0155BC                     __ptext31:
 18809                           	opt stack 0
 18810  0155BC                     _SetDuty:
 18811                           	opt stack 21
 18812                           
 18813                           ; BSR set to: 1
 18814                           ;incstack = 0
 18815                           ;SetDuty@Duty stored from wreg
 18816  0155BC  0101               	movlb	1	; () banked
 18817  0155BE  6FB8               	movwf	SetDuty@Duty& (0+255),b
 18818                           
 18819                           ; BSR set to: 1
 18820                           ;PWM.c: 74: unsigned int temp=0;
 18821  0155C0  0E00               	movlw	0
 18822  0155C2  0101               	movlb	1	; () banked
 18823  0155C4  6FBF               	movwf	(SetDuty@temp+1)& (0+255),b
 18824  0155C6  0E00               	movlw	0
 18825  0155C8  0101               	movlb	1	; () banked
 18826  0155CA  6FBE               	movwf	SetDuty@temp& (0+255),b
 18827                           
 18828                           ; BSR set to: 1
 18829                           ;PWM.c: 75: float tempPR2=0;
 18830  0155CC  0E00               	movlw	0
 18831  0155CE  0101               	movlb	1	; () banked
 18832  0155D0  6FB9               	movwf	SetDuty@tempPR2& (0+255),b
 18833  0155D2  0E00               	movlw	0
 18834  0155D4  0101               	movlb	1	; () banked
 18835  0155D6  6FBA               	movwf	(SetDuty@tempPR2+1)& (0+255),b
 18836  0155D8  0E00               	movlw	0
 18837  0155DA  0101               	movlb	1	; () banked
 18838  0155DC  6FBB               	movwf	(SetDuty@tempPR2+2)& (0+255),b
 18839                           
 18840                           ; BSR set to: 1
 18841                           ;PWM.c: 76: unsigned char MSB,LSB;
 18842                           ;PWM.c: 78: tempPR2 = (float) PR2;
 18843  0155DE  50CB               	movf	4043,w,c	;volatile
 18844  0155E0  EC47  F0B5         	call	___lbtoft
 18845  0155E4  C183  F1B9         	movff	?___lbtoft,SetDuty@tempPR2
 18846  0155E8  C184  F1BA         	movff	?___lbtoft+1,SetDuty@tempPR2+1
 18847  0155EC  C185  F1BB         	movff	?___lbtoft+2,SetDuty@tempPR2+2
 18848                           
 18849                           ;PWM.c: 80: temp = (int)(tempPR2 * ((float)Duty/100));
 18850  0155F0  C1B9  F199         	movff	SetDuty@tempPR2,___ftmul@f2
 18851  0155F4  C1BA  F19A         	movff	SetDuty@tempPR2+1,___ftmul@f2+1
 18852  0155F8  C1BB  F19B         	movff	SetDuty@tempPR2+2,___ftmul@f2+2
 18853  0155FC  0E00               	movlw	0
 18854  0155FE  0101               	movlb	1	; () banked
 18855  015600  6F8A               	movwf	___ftdiv@f2& (0+255),b
 18856  015602  0EC8               	movlw	200
 18857  015604  0101               	movlb	1	; () banked
 18858  015606  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 18859  015608  0E42               	movlw	66
 18860  01560A  0101               	movlb	1	; () banked
 18861  01560C  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 18862  01560E  0101               	movlb	1	; () banked
 18863  015610  51B8               	movf	SetDuty@Duty& (0+255),w,b
 18864  015612  EC47  F0B5         	call	___lbtoft
 18865  015616  C183  F187         	movff	?___lbtoft,___ftdiv@f1
 18866  01561A  C184  F188         	movff	?___lbtoft+1,___ftdiv@f1+1
 18867  01561E  C185  F189         	movff	?___lbtoft+2,___ftdiv@f1+2
 18868  015622  EC48  F0A5         	call	___ftdiv	;wreg free
 18869  015626  C187  F196         	movff	?___ftdiv,___ftmul@f1
 18870  01562A  C188  F197         	movff	?___ftdiv+1,___ftmul@f1+1
 18871  01562E  C189  F198         	movff	?___ftdiv+2,___ftmul@f1+2
 18872  015632  EC8D  F0A4         	call	___ftmul	;wreg free
 18873  015636  C196  F1A5         	movff	?___ftmul,___fttol@f1
 18874  01563A  C197  F1A6         	movff	?___ftmul+1,___fttol@f1+1
 18875  01563E  C198  F1A7         	movff	?___ftmul+2,___fttol@f1+2
 18876  015642  ECCF  F0A3         	call	___fttol	;wreg free
 18877  015646  C1A5  F1B4         	movff	?___fttol,??_SetDuty
 18878  01564A  C1A6  F1B5         	movff	?___fttol+1,??_SetDuty+1
 18879  01564E  C1A7  F1B6         	movff	?___fttol+2,??_SetDuty+2
 18880  015652  C1A8  F1B7         	movff	?___fttol+3,??_SetDuty+3
 18881  015656  C1B4  F1BE         	movff	??_SetDuty,SetDuty@temp
 18882  01565A  C1B5  F1BF         	movff	??_SetDuty+1,SetDuty@temp+1
 18883                           
 18884                           ;PWM.c: 81: MSB = (temp & 0x300)>>8;
 18885  01565E  0101               	movlb	1	; () banked
 18886  015660  C1BF  F1B4         	movff	SetDuty@temp+1,??_SetDuty
 18887  015664  C1B4  F1B5         	movff	??_SetDuty,??_SetDuty+1
 18888  015668  0101               	movlb	1	; () banked
 18889  01566A  6BB6               	clrf	(??_SetDuty+2)& (0+255),b
 18890  01566C  0101               	movlb	1	; () banked
 18891  01566E  51B5               	movf	(??_SetDuty+1)& (0+255),w,b
 18892  015670  0B03               	andlw	3
 18893  015672  0101               	movlb	1	; () banked
 18894  015674  6FBC               	movwf	SetDuty@MSB& (0+255),b
 18895                           
 18896                           ; BSR set to: 1
 18897                           ;PWM.c: 82: LSB = temp & 0xff;
 18898  015676  C1BE  F1BD         	movff	SetDuty@temp,SetDuty@LSB
 18899                           
 18900                           ; BSR set to: 1
 18901                           ;PWM.c: 84: CCP1CON &= ~(0b00110000);
 18902  01567A  0ECF               	movlw	207
 18903  01567C  16BD               	andwf	4029,f,c	;volatile
 18904                           
 18905                           ; BSR set to: 1
 18906                           ;PWM.c: 85: CCP1CON |= MSB << 4;
 18907  01567E  0101               	movlb	1	; () banked
 18908  015680  39BC               	swapf	SetDuty@MSB& (0+255),w,b
 18909  015682  0BF0               	andlw	240
 18910  015684  12BD               	iorwf	4029,f,c	;volatile
 18911                           
 18912                           ; BSR set to: 1
 18913                           ;PWM.c: 86: CCPR1L = LSB;
 18914  015686  C1BD  FFBE         	movff	SetDuty@LSB,4030	;volatile
 18915                           
 18916                           ; BSR set to: 1
 18917                           ;PWM.c: 87: __nop();
 18918  01568A  F000               	nop	
 18919  01568C  0012               	return	
 18920  01568E                     __end_of_SetDuty:
 18921                           	opt stack 0
 18922                           tblptru	equ	0xFF8
 18923                           tblptrh	equ	0xFF7
 18924                           tblptrl	equ	0xFF6
 18925                           tablat	equ	0xFF5
 18926                           prodh	equ	0xFF4
 18927                           prodl	equ	0xFF3
 18928                           intcon	equ	0xFF2
 18929                           postinc0	equ	0xFEE
 18930                           wreg	equ	0xFE8
 18931                           indf1	equ	0xFE7
 18932                           postinc1	equ	0xFE6
 18933                           postdec1	equ	0xFE5
 18934                           fsr1h	equ	0xFE2
 18935                           fsr1l	equ	0xFE1
 18936                           indf2	equ	0xFDF
 18937                           postinc2	equ	0xFDE
 18938                           postdec2	equ	0xFDD
 18939                           fsr2h	equ	0xFDA
 18940                           fsr2l	equ	0xFD9
 18941                           status	equ	0xFD8
 18942                           
 18943 ;; *************** function _SetContrast *****************
 18944 ;; Defined at:
 18945 ;;		line 52 in file "PWM.c"
 18946 ;; Parameters:    Size  Location     Type
 18947 ;;  Duty            1    wreg     unsigned char 
 18948 ;; Auto vars:     Size  Location     Type
 18949 ;;  Duty            1   82[BANK1 ] unsigned char 
 18950 ;;  tempPR2         3   75[BANK1 ] float 
 18951 ;;  temp            2   80[BANK1 ] unsigned int 
 18952 ;;  LSB             1   79[BANK1 ] unsigned char 
 18953 ;;  MSB             1   78[BANK1 ] unsigned char 
 18954 ;; Return value:  Size  Location     Type
 18955 ;;		None               void
 18956 ;; Registers used:
 18957 ;;		wreg, status,2, status,0, cstack
 18958 ;; Tracked objects:
 18959 ;;		On entry : 0/0
 18960 ;;		On exit  : 0/0
 18961 ;;		Unchanged: 0/0
 18962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18964 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 18965 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18966 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 18967 ;;Total ram usage:       12 bytes
 18968 ;; Hardware stack levels used:    1
 18969 ;; Hardware stack levels required when called:    8
 18970 ;; This function calls:
 18971 ;;		___ftdiv
 18972 ;;		___ftmul
 18973 ;;		___fttol
 18974 ;;		___lbtoft
 18975 ;; This function is called by:
 18976 ;;		_main
 18977 ;;		_Command
 18978 ;; This function uses a non-reentrant model
 18979 ;;
 18980                           
 18981                           	psect	text32
 18982  015154                     __ptext32:
 18983                           	opt stack 0
 18984  015154                     _SetContrast:
 18985                           	opt stack 21
 18986                           
 18987                           ;incstack = 0
 18988                           ;SetContrast@Duty stored from wreg
 18989  015154  0101               	movlb	1	; () banked
 18990  015156  6FBF               	movwf	SetContrast@Duty& (0+255),b
 18991                           
 18992                           ; BSR set to: 1
 18993                           ;PWM.c: 54: unsigned int temp=0;
 18994  015158  0E00               	movlw	0
 18995  01515A  0101               	movlb	1	; () banked
 18996  01515C  6FBE               	movwf	(SetContrast@temp+1)& (0+255),b
 18997  01515E  0E00               	movlw	0
 18998  015160  0101               	movlb	1	; () banked
 18999  015162  6FBD               	movwf	SetContrast@temp& (0+255),b
 19000                           
 19001                           ; BSR set to: 1
 19002                           ;PWM.c: 55: float tempPR2=0;
 19003  015164  0E00               	movlw	0
 19004  015166  0101               	movlb	1	; () banked
 19005  015168  6FB8               	movwf	SetContrast@tempPR2& (0+255),b
 19006  01516A  0E00               	movlw	0
 19007  01516C  0101               	movlb	1	; () banked
 19008  01516E  6FB9               	movwf	(SetContrast@tempPR2+1)& (0+255),b
 19009  015170  0E00               	movlw	0
 19010  015172  0101               	movlb	1	; () banked
 19011  015174  6FBA               	movwf	(SetContrast@tempPR2+2)& (0+255),b
 19012                           
 19013                           ; BSR set to: 1
 19014                           ;PWM.c: 56: unsigned char MSB,LSB;
 19015                           ;PWM.c: 58: Duty = 100 - Duty;
 19016  015176  0101               	movlb	1	; () banked
 19017  015178  51BF               	movf	SetContrast@Duty& (0+255),w,b
 19018  01517A  0800               	sublw	0
 19019  01517C  0F64               	addlw	100
 19020  01517E  0101               	movlb	1	; () banked
 19021  015180  6FBF               	movwf	SetContrast@Duty& (0+255),b
 19022                           
 19023                           ; BSR set to: 1
 19024                           ;PWM.c: 59: Duty = (Duty>>1);
 19025  015182  0101               	movlb	1	; () banked
 19026  015184  90D8               	bcf	status,0,c
 19027  015186  31BF               	rrcf	SetContrast@Duty& (0+255),w,b
 19028  015188  0101               	movlb	1	; () banked
 19029  01518A  6FBF               	movwf	SetContrast@Duty& (0+255),b
 19030                           
 19031                           ; BSR set to: 1
 19032                           ;PWM.c: 61: tempPR2 = (float) PR2;
 19033  01518C  50CB               	movf	4043,w,c	;volatile
 19034  01518E  EC47  F0B5         	call	___lbtoft
 19035  015192  C183  F1B8         	movff	?___lbtoft,SetContrast@tempPR2
 19036  015196  C184  F1B9         	movff	?___lbtoft+1,SetContrast@tempPR2+1
 19037  01519A  C185  F1BA         	movff	?___lbtoft+2,SetContrast@tempPR2+2
 19038                           
 19039                           ;PWM.c: 63: temp = (int)(tempPR2 * ((float)Duty/100));
 19040  01519E  C1B8  F199         	movff	SetContrast@tempPR2,___ftmul@f2
 19041  0151A2  C1B9  F19A         	movff	SetContrast@tempPR2+1,___ftmul@f2+1
 19042  0151A6  C1BA  F19B         	movff	SetContrast@tempPR2+2,___ftmul@f2+2
 19043  0151AA  0E00               	movlw	0
 19044  0151AC  0101               	movlb	1	; () banked
 19045  0151AE  6F8A               	movwf	___ftdiv@f2& (0+255),b
 19046  0151B0  0EC8               	movlw	200
 19047  0151B2  0101               	movlb	1	; () banked
 19048  0151B4  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 19049  0151B6  0E42               	movlw	66
 19050  0151B8  0101               	movlb	1	; () banked
 19051  0151BA  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 19052  0151BC  0101               	movlb	1	; () banked
 19053  0151BE  51BF               	movf	SetContrast@Duty& (0+255),w,b
 19054  0151C0  EC47  F0B5         	call	___lbtoft
 19055  0151C4  C183  F187         	movff	?___lbtoft,___ftdiv@f1
 19056  0151C8  C184  F188         	movff	?___lbtoft+1,___ftdiv@f1+1
 19057  0151CC  C185  F189         	movff	?___lbtoft+2,___ftdiv@f1+2
 19058  0151D0  EC48  F0A5         	call	___ftdiv	;wreg free
 19059  0151D4  C187  F196         	movff	?___ftdiv,___ftmul@f1
 19060  0151D8  C188  F197         	movff	?___ftdiv+1,___ftmul@f1+1
 19061  0151DC  C189  F198         	movff	?___ftdiv+2,___ftmul@f1+2
 19062  0151E0  EC8D  F0A4         	call	___ftmul	;wreg free
 19063  0151E4  C196  F1A5         	movff	?___ftmul,___fttol@f1
 19064  0151E8  C197  F1A6         	movff	?___ftmul+1,___fttol@f1+1
 19065  0151EC  C198  F1A7         	movff	?___ftmul+2,___fttol@f1+2
 19066  0151F0  ECCF  F0A3         	call	___fttol	;wreg free
 19067  0151F4  C1A5  F1B4         	movff	?___fttol,??_SetContrast
 19068  0151F8  C1A6  F1B5         	movff	?___fttol+1,??_SetContrast+1
 19069  0151FC  C1A7  F1B6         	movff	?___fttol+2,??_SetContrast+2
 19070  015200  C1A8  F1B7         	movff	?___fttol+3,??_SetContrast+3
 19071  015204  C1B4  F1BD         	movff	??_SetContrast,SetContrast@temp
 19072  015208  C1B5  F1BE         	movff	??_SetContrast+1,SetContrast@temp+1
 19073                           
 19074                           ;PWM.c: 64: MSB = (temp & 0x300)>>8;
 19075  01520C  0101               	movlb	1	; () banked
 19076  01520E  C1BE  F1B4         	movff	SetContrast@temp+1,??_SetContrast
 19077  015212  C1B4  F1B5         	movff	??_SetContrast,??_SetContrast+1
 19078  015216  0101               	movlb	1	; () banked
 19079  015218  6BB6               	clrf	(??_SetContrast+2)& (0+255),b
 19080  01521A  0101               	movlb	1	; () banked
 19081  01521C  51B5               	movf	(??_SetContrast+1)& (0+255),w,b
 19082  01521E  0B03               	andlw	3
 19083  015220  0101               	movlb	1	; () banked
 19084  015222  6FBB               	movwf	SetContrast@MSB& (0+255),b
 19085                           
 19086                           ; BSR set to: 1
 19087                           ;PWM.c: 65: LSB = temp & 0xff;
 19088  015224  C1BD  F1BC         	movff	SetContrast@temp,SetContrast@LSB
 19089                           
 19090                           ; BSR set to: 1
 19091                           ;PWM.c: 67: ECCP1CON &= ~0b00110000;
 19092  015228  0ECF               	movlw	207
 19093  01522A  16BA               	andwf	4026,f,c	;volatile
 19094                           
 19095                           ; BSR set to: 1
 19096                           ;PWM.c: 68: ECCP1CON |= MSB << 4;
 19097  01522C  0101               	movlb	1	; () banked
 19098  01522E  39BB               	swapf	SetContrast@MSB& (0+255),w,b
 19099  015230  0BF0               	andlw	240
 19100  015232  12BA               	iorwf	4026,f,c	;volatile
 19101                           
 19102                           ; BSR set to: 1
 19103                           ;PWM.c: 69: ECCPR1L = LSB;
 19104  015234  C1BC  FFBB         	movff	SetContrast@LSB,4027	;volatile
 19105                           
 19106                           ; BSR set to: 1
 19107                           ;PWM.c: 70: __nop();
 19108  015238  F000               	nop	
 19109  01523A  0012               	return	
 19110  01523C                     __end_of_SetContrast:
 19111                           	opt stack 0
 19112                           tblptru	equ	0xFF8
 19113                           tblptrh	equ	0xFF7
 19114                           tblptrl	equ	0xFF6
 19115                           tablat	equ	0xFF5
 19116                           prodh	equ	0xFF4
 19117                           prodl	equ	0xFF3
 19118                           intcon	equ	0xFF2
 19119                           postinc0	equ	0xFEE
 19120                           wreg	equ	0xFE8
 19121                           indf1	equ	0xFE7
 19122                           postinc1	equ	0xFE6
 19123                           postdec1	equ	0xFE5
 19124                           fsr1h	equ	0xFE2
 19125                           fsr1l	equ	0xFE1
 19126                           indf2	equ	0xFDF
 19127                           postinc2	equ	0xFDE
 19128                           postdec2	equ	0xFDD
 19129                           fsr2h	equ	0xFDA
 19130                           fsr2l	equ	0xFD9
 19131                           status	equ	0xFD8
 19132                           
 19133 ;; *************** function ___lbtoft *****************
 19134 ;; Defined at:
 19135 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lbtoft.c"
 19136 ;; Parameters:    Size  Location     Type
 19137 ;;  c               1    wreg     unsigned char 
 19138 ;; Auto vars:     Size  Location     Type
 19139 ;;  c               1   25[BANK1 ] unsigned char 
 19140 ;; Return value:  Size  Location     Type
 19141 ;;                  3   22[BANK1 ] float 
 19142 ;; Registers used:
 19143 ;;		wreg, status,2, status,0, cstack
 19144 ;; Tracked objects:
 19145 ;;		On entry : 0/0
 19146 ;;		On exit  : 0/0
 19147 ;;		Unchanged: 0/0
 19148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19149 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19150 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19152 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19153 ;;Total ram usage:        4 bytes
 19154 ;; Hardware stack levels used:    1
 19155 ;; Hardware stack levels required when called:    7
 19156 ;; This function calls:
 19157 ;;		___ftpack
 19158 ;; This function is called by:
 19159 ;;		_SetContrast
 19160 ;;		_SetDuty
 19161 ;; This function uses a non-reentrant model
 19162 ;;
 19163                           
 19164                           	psect	text33
 19165  016A8E                     __ptext33:
 19166                           	opt stack 0
 19167  016A8E                     ___lbtoft:
 19168                           	opt stack 21
 19169                           
 19170                           ;incstack = 0
 19171                           ;___lbtoft@c stored from wreg
 19172  016A8E  0101               	movlb	1	; () banked
 19173  016A90  6F86               	movwf	___lbtoft@c& (0+255),b
 19174                           
 19175                           ; BSR set to: 1
 19176  016A92  0101               	movlb	1	; () banked
 19177  016A94  5186               	movf	___lbtoft@c& (0+255),w,b
 19178  016A96  0101               	movlb	1	; () banked
 19179  016A98  6F7B               	movwf	___ftpack@arg& (0+255),b
 19180  016A9A  0101               	movlb	1	; () banked
 19181  016A9C  6B7C               	clrf	(___ftpack@arg+1)& (0+255),b
 19182  016A9E  0101               	movlb	1	; () banked
 19183  016AA0  6B7D               	clrf	(___ftpack@arg+2)& (0+255),b
 19184  016AA2  0E8E               	movlw	142
 19185  016AA4  0101               	movlb	1	; () banked
 19186  016AA6  6F7E               	movwf	___ftpack@exp& (0+255),b
 19187  016AA8  0E00               	movlw	0
 19188  016AAA  0101               	movlb	1	; () banked
 19189  016AAC  6F7F               	movwf	___ftpack@sign& (0+255),b
 19190  016AAE  ECAE  F0A7         	call	___ftpack	;wreg free
 19191  016AB2  C17B  F183         	movff	?___ftpack,?___lbtoft
 19192  016AB6  C17C  F184         	movff	?___ftpack+1,?___lbtoft+1
 19193  016ABA  C17D  F185         	movff	?___ftpack+2,?___lbtoft+2
 19194  016ABE  0012               	return	
 19195  016AC0                     __end_of___lbtoft:
 19196                           	opt stack 0
 19197                           tblptru	equ	0xFF8
 19198                           tblptrh	equ	0xFF7
 19199                           tblptrl	equ	0xFF6
 19200                           tablat	equ	0xFF5
 19201                           prodh	equ	0xFF4
 19202                           prodl	equ	0xFF3
 19203                           intcon	equ	0xFF2
 19204                           postinc0	equ	0xFEE
 19205                           wreg	equ	0xFE8
 19206                           indf1	equ	0xFE7
 19207                           postinc1	equ	0xFE6
 19208                           postdec1	equ	0xFE5
 19209                           fsr1h	equ	0xFE2
 19210                           fsr1l	equ	0xFE1
 19211                           indf2	equ	0xFDF
 19212                           postinc2	equ	0xFDE
 19213                           postdec2	equ	0xFDD
 19214                           fsr2h	equ	0xFDA
 19215                           fsr2l	equ	0xFD9
 19216                           status	equ	0xFD8
 19217                           
 19218 ;; *************** function ___fttol *****************
 19219 ;; Defined at:
 19220 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
 19221 ;; Parameters:    Size  Location     Type
 19222 ;;  f1              3   56[BANK1 ] float 
 19223 ;; Auto vars:     Size  Location     Type
 19224 ;;  lval            4   66[BANK1 ] unsigned long 
 19225 ;;  exp1            1   70[BANK1 ] unsigned char 
 19226 ;;  sign1           1   65[BANK1 ] unsigned char 
 19227 ;; Return value:  Size  Location     Type
 19228 ;;                  4   56[BANK1 ] long 
 19229 ;; Registers used:
 19230 ;;		wreg, status,2, status,0
 19231 ;; Tracked objects:
 19232 ;;		On entry : 0/0
 19233 ;;		On exit  : 0/0
 19234 ;;		Unchanged: 0/0
 19235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19236 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19237 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19238 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 19239 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 19240 ;;Total ram usage:       15 bytes
 19241 ;; Hardware stack levels used:    1
 19242 ;; Hardware stack levels required when called:    6
 19243 ;; This function calls:
 19244 ;;		Nothing
 19245 ;; This function is called by:
 19246 ;;		_Command
 19247 ;;		_SetContrast
 19248 ;;		_SetDuty
 19249 ;; This function uses a non-reentrant model
 19250 ;;
 19251                           
 19252                           	psect	text34
 19253  01479E                     __ptext34:
 19254                           	opt stack 0
 19255  01479E                     ___fttol:
 19256                           	opt stack 22
 19257                           
 19258                           ;incstack = 0
 19259  01479E  0101               	movlb	1	; () banked
 19260  0147A0  C1A7  F1A9         	movff	___fttol@f1+2,??___fttol
 19261  0147A4  0101               	movlb	1	; () banked
 19262  0147A6  6BAA               	clrf	(??___fttol+1)& (0+255),b
 19263  0147A8  6BAB               	clrf	(??___fttol+2)& (0+255),b
 19264  0147AA  0101               	movlb	1	; () banked
 19265  0147AC  35A6               	rlcf	(___fttol@f1+1)& (0+255),w,b
 19266  0147AE  0101               	movlb	1	; () banked
 19267  0147B0  37A9               	rlcf	??___fttol& (0+255),f,b
 19268  0147B2  E301               	bnc	u12861
 19269  0147B4  81AA               	bsf	(??___fttol+1)& (0+255),0,b
 19270  0147B6                     u12861:
 19271  0147B6  0101               	movlb	1	; () banked
 19272  0147B8  51A9               	movf	??___fttol& (0+255),w,b
 19273  0147BA  0101               	movlb	1	; () banked
 19274  0147BC  6FB3               	movwf	___fttol@exp1& (0+255),b
 19275  0147BE  0101               	movlb	1	; () banked
 19276  0147C0  67B3               	tstfsz	___fttol@exp1& (0+255),b
 19277  0147C2  D00D               	goto	l10058
 19278                           
 19279                           ; BSR set to: 1
 19280  0147C4  0E00               	movlw	0
 19281  0147C6  0101               	movlb	1	; () banked
 19282  0147C8  6FA5               	movwf	?___fttol& (0+255),b
 19283  0147CA  0E00               	movlw	0
 19284  0147CC  0101               	movlb	1	; () banked
 19285  0147CE  6FA6               	movwf	(?___fttol+1)& (0+255),b
 19286  0147D0  0E00               	movlw	0
 19287  0147D2  0101               	movlb	1	; () banked
 19288  0147D4  6FA7               	movwf	(?___fttol+2)& (0+255),b
 19289  0147D6  0E00               	movlw	0
 19290  0147D8  0101               	movlb	1	; () banked
 19291  0147DA  6FA8               	movwf	(?___fttol+3)& (0+255),b
 19292  0147DC  0012               	return	
 19293  0147DE                     l10058:
 19294                           
 19295                           ; BSR set to: 1
 19296  0147DE  0E17               	movlw	23
 19297  0147E0  0101               	movlb	1	; () banked
 19298  0147E2  6FA9               	movwf	??___fttol& (0+255),b
 19299  0147E4  0101               	movlb	1	; () banked
 19300  0147E6  C1A5  F1AA         	movff	___fttol@f1,??___fttol+1
 19301  0147EA  0101               	movlb	1	; () banked
 19302  0147EC  C1A6  F1AB         	movff	___fttol@f1+1,??___fttol+2
 19303  0147F0  0101               	movlb	1	; () banked
 19304  0147F2  C1A7  F1AC         	movff	___fttol@f1+2,??___fttol+3
 19305  0147F6  0101               	movlb	1	; () banked
 19306  0147F8  29A9               	incf	??___fttol& (0+255),w,b
 19307  0147FA  0101               	movlb	1	; () banked
 19308  0147FC  6FAD               	movwf	(??___fttol+4)& (0+255),b
 19309  0147FE  D005               	goto	u12880
 19310  014800                     u12885:
 19311  014800  0101               	movlb	1	; () banked
 19312  014802  90D8               	bcf	status,0,c
 19313  014804  33AC               	rrcf	(??___fttol+3)& (0+255),f,b
 19314  014806  33AB               	rrcf	(??___fttol+2)& (0+255),f,b
 19315  014808  33AA               	rrcf	(??___fttol+1)& (0+255),f,b
 19316  01480A                     u12880:
 19317  01480A  0101               	movlb	1	; () banked
 19318  01480C  2FAD               	decfsz	(??___fttol+4)& (0+255),f,b
 19319  01480E  D7F8               	goto	u12885
 19320  014810  0101               	movlb	1	; () banked
 19321  014812  51AA               	movf	(??___fttol+1)& (0+255),w,b
 19322  014814  0101               	movlb	1	; () banked
 19323  014816  6FAE               	movwf	___fttol@sign1& (0+255),b
 19324                           
 19325                           ; BSR set to: 1
 19326  014818  0101               	movlb	1	; () banked
 19327  01481A  8FA6               	bsf	(___fttol@f1+1)& (0+255),7,b
 19328                           
 19329                           ; BSR set to: 1
 19330  01481C  0EFF               	movlw	255
 19331  01481E  0101               	movlb	1	; () banked
 19332  014820  17A5               	andwf	___fttol@f1& (0+255),f,b
 19333  014822  0EFF               	movlw	255
 19334  014824  0101               	movlb	1	; () banked
 19335  014826  17A6               	andwf	(___fttol@f1+1)& (0+255),f,b
 19336  014828  0E00               	movlw	0
 19337  01482A  0101               	movlb	1	; () banked
 19338  01482C  17A7               	andwf	(___fttol@f1+2)& (0+255),f,b
 19339                           
 19340                           ; BSR set to: 1
 19341  01482E  0101               	movlb	1	; () banked
 19342  014830  51A5               	movf	___fttol@f1& (0+255),w,b
 19343  014832  0101               	movlb	1	; () banked
 19344  014834  6FAF               	movwf	___fttol@lval& (0+255),b
 19345  014836  0101               	movlb	1	; () banked
 19346  014838  51A6               	movf	(___fttol@f1+1)& (0+255),w,b
 19347  01483A  0101               	movlb	1	; () banked
 19348  01483C  6FB0               	movwf	(___fttol@lval+1)& (0+255),b
 19349  01483E  0101               	movlb	1	; () banked
 19350  014840  51A7               	movf	(___fttol@f1+2)& (0+255),w,b
 19351  014842  0101               	movlb	1	; () banked
 19352  014844  6FB1               	movwf	(___fttol@lval+2)& (0+255),b
 19353  014846  0101               	movlb	1	; () banked
 19354  014848  6BB2               	clrf	(___fttol@lval+3)& (0+255),b
 19355                           
 19356                           ; BSR set to: 1
 19357  01484A  0E8E               	movlw	142
 19358  01484C  0101               	movlb	1	; () banked
 19359  01484E  5FB3               	subwf	___fttol@exp1& (0+255),f,b
 19360                           
 19361                           ; BSR set to: 1
 19362  014850  0101               	movlb	1	; () banked
 19363  014852  AFB3               	btfss	___fttol@exp1& (0+255),7,b
 19364  014854  D026               	goto	l10080
 19365                           
 19366                           ; BSR set to: 1
 19367  014856  0101               	movlb	1	; () banked
 19368  014858  51B3               	movf	___fttol@exp1& (0+255),w,b
 19369  01485A  0A80               	xorlw	128
 19370  01485C  0101               	movlb	1	; () banked
 19371  01485E  6FA9               	movwf	??___fttol& (0+255),b
 19372  014860  0EF1               	movlw	241
 19373  014862  0A80               	xorlw	128
 19374  014864  0101               	movlb	1	; () banked
 19375  014866  5DA9               	subwf	??___fttol& (0+255),w,b
 19376  014868  B0D8               	btfsc	status,0,c
 19377  01486A  D00D               	goto	l10076
 19378                           
 19379                           ; BSR set to: 1
 19380  01486C  0E00               	movlw	0
 19381  01486E  0101               	movlb	1	; () banked
 19382  014870  6FA5               	movwf	?___fttol& (0+255),b
 19383  014872  0E00               	movlw	0
 19384  014874  0101               	movlb	1	; () banked
 19385  014876  6FA6               	movwf	(?___fttol+1)& (0+255),b
 19386  014878  0E00               	movlw	0
 19387  01487A  0101               	movlb	1	; () banked
 19388  01487C  6FA7               	movwf	(?___fttol+2)& (0+255),b
 19389  01487E  0E00               	movlw	0
 19390  014880  0101               	movlb	1	; () banked
 19391  014882  6FA8               	movwf	(?___fttol+3)& (0+255),b
 19392  014884  0012               	return	
 19393  014886                     l10076:
 19394                           
 19395                           ; BSR set to: 1
 19396  014886  0101               	movlb	1	; () banked
 19397  014888  90D8               	bcf	status,0,c
 19398  01488A  0101               	movlb	1	; () banked
 19399  01488C  33B2               	rrcf	(___fttol@lval+3)& (0+255),f,b
 19400  01488E  0101               	movlb	1	; () banked
 19401  014890  33B1               	rrcf	(___fttol@lval+2)& (0+255),f,b
 19402  014892  0101               	movlb	1	; () banked
 19403  014894  33B0               	rrcf	(___fttol@lval+1)& (0+255),f,b
 19404  014896  0101               	movlb	1	; () banked
 19405  014898  33AF               	rrcf	___fttol@lval& (0+255),f,b
 19406                           
 19407                           ; BSR set to: 1
 19408  01489A  0101               	movlb	1	; () banked
 19409  01489C  3FB3               	incfsz	___fttol@exp1& (0+255),f,b
 19410  01489E  D7F3               	goto	l10076
 19411  0148A0  D020               	goto	l10090
 19412  0148A2                     l10080:
 19413                           
 19414                           ; BSR set to: 1
 19415  0148A2  0E17               	movlw	23
 19416  0148A4  0101               	movlb	1	; () banked
 19417  0148A6  65B3               	cpfsgt	___fttol@exp1& (0+255),b
 19418  0148A8  D019               	goto	l10088
 19419                           
 19420                           ; BSR set to: 1
 19421  0148AA  0E00               	movlw	0
 19422  0148AC  0101               	movlb	1	; () banked
 19423  0148AE  6FA5               	movwf	?___fttol& (0+255),b
 19424  0148B0  0E00               	movlw	0
 19425  0148B2  0101               	movlb	1	; () banked
 19426  0148B4  6FA6               	movwf	(?___fttol+1)& (0+255),b
 19427  0148B6  0E00               	movlw	0
 19428  0148B8  0101               	movlb	1	; () banked
 19429  0148BA  6FA7               	movwf	(?___fttol+2)& (0+255),b
 19430  0148BC  0E00               	movlw	0
 19431  0148BE  0101               	movlb	1	; () banked
 19432  0148C0  6FA8               	movwf	(?___fttol+3)& (0+255),b
 19433  0148C2  0012               	return	
 19434  0148C4                     l10086:
 19435                           
 19436                           ; BSR set to: 1
 19437  0148C4  0101               	movlb	1	; () banked
 19438  0148C6  90D8               	bcf	status,0,c
 19439  0148C8  0101               	movlb	1	; () banked
 19440  0148CA  37AF               	rlcf	___fttol@lval& (0+255),f,b
 19441  0148CC  0101               	movlb	1	; () banked
 19442  0148CE  37B0               	rlcf	(___fttol@lval+1)& (0+255),f,b
 19443  0148D0  0101               	movlb	1	; () banked
 19444  0148D2  37B1               	rlcf	(___fttol@lval+2)& (0+255),f,b
 19445  0148D4  0101               	movlb	1	; () banked
 19446  0148D6  37B2               	rlcf	(___fttol@lval+3)& (0+255),f,b
 19447  0148D8  0101               	movlb	1	; () banked
 19448  0148DA  07B3               	decf	___fttol@exp1& (0+255),f,b
 19449  0148DC                     l10088:
 19450                           
 19451                           ; BSR set to: 1
 19452  0148DC  0101               	movlb	1	; () banked
 19453  0148DE  67B3               	tstfsz	___fttol@exp1& (0+255),b
 19454  0148E0  D7F1               	goto	l10086
 19455  0148E2                     l10090:
 19456                           
 19457                           ; BSR set to: 1
 19458  0148E2  0101               	movlb	1	; () banked
 19459  0148E4  51AE               	movf	___fttol@sign1& (0+255),w,b
 19460  0148E6  B4D8               	btfsc	status,2,c
 19461  0148E8  D00F               	goto	l10094
 19462                           
 19463                           ; BSR set to: 1
 19464  0148EA  0101               	movlb	1	; () banked
 19465  0148EC  1FB2               	comf	(___fttol@lval+3)& (0+255),f,b
 19466  0148EE  0101               	movlb	1	; () banked
 19467  0148F0  1FB1               	comf	(___fttol@lval+2)& (0+255),f,b
 19468  0148F2  0101               	movlb	1	; () banked
 19469  0148F4  1FB0               	comf	(___fttol@lval+1)& (0+255),f,b
 19470  0148F6  0101               	movlb	1	; () banked
 19471  0148F8  6DAF               	negf	___fttol@lval& (0+255),b
 19472  0148FA  0E00               	movlw	0
 19473  0148FC  0101               	movlb	1	; () banked
 19474  0148FE  23B0               	addwfc	(___fttol@lval+1)& (0+255),f,b
 19475  014900  0101               	movlb	1	; () banked
 19476  014902  23B1               	addwfc	(___fttol@lval+2)& (0+255),f,b
 19477  014904  0101               	movlb	1	; () banked
 19478  014906  23B2               	addwfc	(___fttol@lval+3)& (0+255),f,b
 19479  014908                     l10094:
 19480                           
 19481                           ; BSR set to: 1
 19482  014908  C1AF  F1A5         	movff	___fttol@lval,?___fttol
 19483  01490C  C1B0  F1A6         	movff	___fttol@lval+1,?___fttol+1
 19484  014910  C1B1  F1A7         	movff	___fttol@lval+2,?___fttol+2
 19485  014914  C1B2  F1A8         	movff	___fttol@lval+3,?___fttol+3
 19486  014918  0012               	return	
 19487  01491A                     __end_of___fttol:
 19488                           	opt stack 0
 19489                           tblptru	equ	0xFF8
 19490                           tblptrh	equ	0xFF7
 19491                           tblptrl	equ	0xFF6
 19492                           tablat	equ	0xFF5
 19493                           prodh	equ	0xFF4
 19494                           prodl	equ	0xFF3
 19495                           intcon	equ	0xFF2
 19496                           postinc0	equ	0xFEE
 19497                           wreg	equ	0xFE8
 19498                           indf1	equ	0xFE7
 19499                           postinc1	equ	0xFE6
 19500                           postdec1	equ	0xFE5
 19501                           fsr1h	equ	0xFE2
 19502                           fsr1l	equ	0xFE1
 19503                           indf2	equ	0xFDF
 19504                           postinc2	equ	0xFDE
 19505                           postdec2	equ	0xFDD
 19506                           fsr2h	equ	0xFDA
 19507                           fsr2l	equ	0xFD9
 19508                           status	equ	0xFD8
 19509                           
 19510 ;; *************** function ___ftmul *****************
 19511 ;; Defined at:
 19512 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
 19513 ;; Parameters:    Size  Location     Type
 19514 ;;  f1              3   41[BANK1 ] float 
 19515 ;;  f2              3   44[BANK1 ] float 
 19516 ;; Auto vars:     Size  Location     Type
 19517 ;;  f3_as_produc    3   51[BANK1 ] unsigned um
 19518 ;;  sign            1   55[BANK1 ] unsigned char 
 19519 ;;  cntr            1   54[BANK1 ] unsigned char 
 19520 ;;  exp             1   50[BANK1 ] unsigned char 
 19521 ;; Return value:  Size  Location     Type
 19522 ;;                  3   41[BANK1 ] float 
 19523 ;; Registers used:
 19524 ;;		wreg, status,2, status,0, cstack
 19525 ;; Tracked objects:
 19526 ;;		On entry : 0/0
 19527 ;;		On exit  : 0/0
 19528 ;;		Unchanged: 0/0
 19529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19530 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19531 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19532 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19533 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 19534 ;;Total ram usage:       15 bytes
 19535 ;; Hardware stack levels used:    1
 19536 ;; Hardware stack levels required when called:    7
 19537 ;; This function calls:
 19538 ;;		___ftpack
 19539 ;; This function is called by:
 19540 ;;		_Command
 19541 ;;		_SetContrast
 19542 ;;		_SetDuty
 19543 ;; This function uses a non-reentrant model
 19544 ;;
 19545                           
 19546                           	psect	text35
 19547  01491A                     __ptext35:
 19548                           	opt stack 0
 19549  01491A                     ___ftmul:
 19550                           	opt stack 21
 19551                           
 19552                           ; BSR set to: 1
 19553                           ;incstack = 0
 19554  01491A  0101               	movlb	1	; () banked
 19555  01491C  C198  F19C         	movff	___ftmul@f1+2,??___ftmul
 19556  014920  0101               	movlb	1	; () banked
 19557  014922  6B9D               	clrf	(??___ftmul+1)& (0+255),b
 19558  014924  6B9E               	clrf	(??___ftmul+2)& (0+255),b
 19559  014926  0101               	movlb	1	; () banked
 19560  014928  3597               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 19561  01492A  0101               	movlb	1	; () banked
 19562  01492C  379C               	rlcf	??___ftmul& (0+255),f,b
 19563  01492E  E301               	bnc	u12681
 19564  014930  819D               	bsf	(??___ftmul+1)& (0+255),0,b
 19565  014932                     u12681:
 19566  014932  0101               	movlb	1	; () banked
 19567  014934  519C               	movf	??___ftmul& (0+255),w,b
 19568  014936  0101               	movlb	1	; () banked
 19569  014938  6F9F               	movwf	___ftmul@exp& (0+255),b
 19570  01493A  0101               	movlb	1	; () banked
 19571  01493C  679F               	tstfsz	___ftmul@exp& (0+255),b
 19572  01493E  D00A               	goto	l9930
 19573                           
 19574                           ; BSR set to: 1
 19575  014940  0E00               	movlw	0
 19576  014942  0101               	movlb	1	; () banked
 19577  014944  6F96               	movwf	?___ftmul& (0+255),b
 19578  014946  0E00               	movlw	0
 19579  014948  0101               	movlb	1	; () banked
 19580  01494A  6F97               	movwf	(?___ftmul+1)& (0+255),b
 19581  01494C  0E00               	movlw	0
 19582  01494E  0101               	movlb	1	; () banked
 19583  014950  6F98               	movwf	(?___ftmul+2)& (0+255),b
 19584  014952  0012               	return	
 19585  014954                     l9930:
 19586                           
 19587                           ; BSR set to: 1
 19588  014954  0101               	movlb	1	; () banked
 19589  014956  C19B  F19C         	movff	___ftmul@f2+2,??___ftmul
 19590  01495A  0101               	movlb	1	; () banked
 19591  01495C  6B9D               	clrf	(??___ftmul+1)& (0+255),b
 19592  01495E  6B9E               	clrf	(??___ftmul+2)& (0+255),b
 19593  014960  0101               	movlb	1	; () banked
 19594  014962  359A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 19595  014964  0101               	movlb	1	; () banked
 19596  014966  379C               	rlcf	??___ftmul& (0+255),f,b
 19597  014968  E301               	bnc	u12701
 19598  01496A  819D               	bsf	(??___ftmul+1)& (0+255),0,b
 19599  01496C                     u12701:
 19600  01496C  0101               	movlb	1	; () banked
 19601  01496E  519C               	movf	??___ftmul& (0+255),w,b
 19602  014970  0101               	movlb	1	; () banked
 19603  014972  6FA4               	movwf	___ftmul@sign& (0+255),b
 19604  014974  0101               	movlb	1	; () banked
 19605  014976  67A4               	tstfsz	___ftmul@sign& (0+255),b
 19606  014978  D00A               	goto	l9936
 19607                           
 19608                           ; BSR set to: 1
 19609  01497A  0E00               	movlw	0
 19610  01497C  0101               	movlb	1	; () banked
 19611  01497E  6F96               	movwf	?___ftmul& (0+255),b
 19612  014980  0E00               	movlw	0
 19613  014982  0101               	movlb	1	; () banked
 19614  014984  6F97               	movwf	(?___ftmul+1)& (0+255),b
 19615  014986  0E00               	movlw	0
 19616  014988  0101               	movlb	1	; () banked
 19617  01498A  6F98               	movwf	(?___ftmul+2)& (0+255),b
 19618  01498C  0012               	return	
 19619  01498E                     l9936:
 19620                           
 19621                           ; BSR set to: 1
 19622  01498E  0101               	movlb	1	; () banked
 19623  014990  51A4               	movf	___ftmul@sign& (0+255),w,b
 19624  014992  0F7B               	addlw	123
 19625  014994  0101               	movlb	1	; () banked
 19626  014996  279F               	addwf	___ftmul@exp& (0+255),f,b
 19627                           
 19628                           ; BSR set to: 1
 19629  014998  C198  F1A4         	movff	___ftmul@f1+2,___ftmul@sign
 19630  01499C  0101               	movlb	1	; () banked
 19631  01499E  519B               	movf	(___ftmul@f2+2)& (0+255),w,b
 19632  0149A0  0101               	movlb	1	; () banked
 19633  0149A2  1BA4               	xorwf	___ftmul@sign& (0+255),f,b
 19634  0149A4  0E80               	movlw	128
 19635  0149A6  0101               	movlb	1	; () banked
 19636  0149A8  17A4               	andwf	___ftmul@sign& (0+255),f,b
 19637                           
 19638                           ; BSR set to: 1
 19639  0149AA  0101               	movlb	1	; () banked
 19640  0149AC  8F97               	bsf	(___ftmul@f1+1)& (0+255),7,b
 19641                           
 19642                           ; BSR set to: 1
 19643  0149AE  0101               	movlb	1	; () banked
 19644  0149B0  8F9A               	bsf	(___ftmul@f2+1)& (0+255),7,b
 19645                           
 19646                           ; BSR set to: 1
 19647  0149B2  0EFF               	movlw	255
 19648  0149B4  0101               	movlb	1	; () banked
 19649  0149B6  1799               	andwf	___ftmul@f2& (0+255),f,b
 19650  0149B8  0EFF               	movlw	255
 19651  0149BA  0101               	movlb	1	; () banked
 19652  0149BC  179A               	andwf	(___ftmul@f2+1)& (0+255),f,b
 19653  0149BE  0E00               	movlw	0
 19654  0149C0  0101               	movlb	1	; () banked
 19655  0149C2  179B               	andwf	(___ftmul@f2+2)& (0+255),f,b
 19656                           
 19657                           ; BSR set to: 1
 19658  0149C4  0E00               	movlw	0
 19659  0149C6  0101               	movlb	1	; () banked
 19660  0149C8  6FA0               	movwf	___ftmul@f3_as_product& (0+255),b
 19661  0149CA  0E00               	movlw	0
 19662  0149CC  0101               	movlb	1	; () banked
 19663  0149CE  6FA1               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 19664  0149D0  0E00               	movlw	0
 19665  0149D2  0101               	movlb	1	; () banked
 19666  0149D4  6FA2               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 19667                           
 19668                           ; BSR set to: 1
 19669  0149D6  0E07               	movlw	7
 19670  0149D8  0101               	movlb	1	; () banked
 19671  0149DA  6FA3               	movwf	___ftmul@cntr& (0+255),b
 19672  0149DC                     l9950:
 19673                           
 19674                           ; BSR set to: 1
 19675  0149DC  0101               	movlb	1	; () banked
 19676  0149DE  A196               	btfss	___ftmul@f1& (0+255),0,b
 19677  0149E0  D00C               	goto	l9954
 19678                           
 19679                           ; BSR set to: 1
 19680  0149E2  0101               	movlb	1	; () banked
 19681  0149E4  5199               	movf	___ftmul@f2& (0+255),w,b
 19682  0149E6  0101               	movlb	1	; () banked
 19683  0149E8  27A0               	addwf	___ftmul@f3_as_product& (0+255),f,b
 19684  0149EA  0101               	movlb	1	; () banked
 19685  0149EC  519A               	movf	(___ftmul@f2+1)& (0+255),w,b
 19686  0149EE  0101               	movlb	1	; () banked
 19687  0149F0  23A1               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 19688  0149F2  0101               	movlb	1	; () banked
 19689  0149F4  519B               	movf	(___ftmul@f2+2)& (0+255),w,b
 19690  0149F6  0101               	movlb	1	; () banked
 19691  0149F8  23A2               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 19692  0149FA                     l9954:
 19693                           
 19694                           ; BSR set to: 1
 19695  0149FA  0101               	movlb	1	; () banked
 19696  0149FC  90D8               	bcf	status,0,c
 19697  0149FE  0101               	movlb	1	; () banked
 19698  014A00  3398               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 19699  014A02  0101               	movlb	1	; () banked
 19700  014A04  3397               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 19701  014A06  0101               	movlb	1	; () banked
 19702  014A08  3396               	rrcf	___ftmul@f1& (0+255),f,b
 19703  014A0A  0101               	movlb	1	; () banked
 19704  014A0C  90D8               	bcf	status,0,c
 19705  014A0E  0101               	movlb	1	; () banked
 19706  014A10  3799               	rlcf	___ftmul@f2& (0+255),f,b
 19707  014A12  0101               	movlb	1	; () banked
 19708  014A14  379A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 19709  014A16  0101               	movlb	1	; () banked
 19710  014A18  379B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 19711                           
 19712                           ; BSR set to: 1
 19713  014A1A  0101               	movlb	1	; () banked
 19714  014A1C  2FA3               	decfsz	___ftmul@cntr& (0+255),f,b
 19715  014A1E  D7DE               	goto	l9950
 19716                           
 19717                           ; BSR set to: 1
 19718                           
 19719                           ; BSR set to: 1
 19720  014A20  0E09               	movlw	9
 19721  014A22  0101               	movlb	1	; () banked
 19722  014A24  6FA3               	movwf	___ftmul@cntr& (0+255),b
 19723  014A26                     l9960:
 19724                           
 19725                           ; BSR set to: 1
 19726  014A26  0101               	movlb	1	; () banked
 19727  014A28  A196               	btfss	___ftmul@f1& (0+255),0,b
 19728  014A2A  D00C               	goto	l9964
 19729                           
 19730                           ; BSR set to: 1
 19731  014A2C  0101               	movlb	1	; () banked
 19732  014A2E  5199               	movf	___ftmul@f2& (0+255),w,b
 19733  014A30  0101               	movlb	1	; () banked
 19734  014A32  27A0               	addwf	___ftmul@f3_as_product& (0+255),f,b
 19735  014A34  0101               	movlb	1	; () banked
 19736  014A36  519A               	movf	(___ftmul@f2+1)& (0+255),w,b
 19737  014A38  0101               	movlb	1	; () banked
 19738  014A3A  23A1               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 19739  014A3C  0101               	movlb	1	; () banked
 19740  014A3E  519B               	movf	(___ftmul@f2+2)& (0+255),w,b
 19741  014A40  0101               	movlb	1	; () banked
 19742  014A42  23A2               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 19743  014A44                     l9964:
 19744                           
 19745                           ; BSR set to: 1
 19746  014A44  0101               	movlb	1	; () banked
 19747  014A46  90D8               	bcf	status,0,c
 19748  014A48  0101               	movlb	1	; () banked
 19749  014A4A  3398               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 19750  014A4C  0101               	movlb	1	; () banked
 19751  014A4E  3397               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 19752  014A50  0101               	movlb	1	; () banked
 19753  014A52  3396               	rrcf	___ftmul@f1& (0+255),f,b
 19754  014A54  0101               	movlb	1	; () banked
 19755  014A56  90D8               	bcf	status,0,c
 19756  014A58  0101               	movlb	1	; () banked
 19757  014A5A  33A2               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 19758  014A5C  0101               	movlb	1	; () banked
 19759  014A5E  33A1               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 19760  014A60  0101               	movlb	1	; () banked
 19761  014A62  33A0               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 19762                           
 19763                           ; BSR set to: 1
 19764  014A64  0101               	movlb	1	; () banked
 19765  014A66  2FA3               	decfsz	___ftmul@cntr& (0+255),f,b
 19766  014A68  D7DE               	goto	l9960
 19767                           
 19768                           ; BSR set to: 1
 19769                           
 19770                           ; BSR set to: 1
 19771  014A6A  C1A0  F17B         	movff	___ftmul@f3_as_product,___ftpack@arg
 19772  014A6E  C1A1  F17C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 19773  014A72  C1A2  F17D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 19774  014A76  C19F  F17E         	movff	___ftmul@exp,___ftpack@exp
 19775  014A7A  C1A4  F17F         	movff	___ftmul@sign,___ftpack@sign
 19776  014A7E  ECAE  F0A7         	call	___ftpack	;wreg free
 19777  014A82  C17B  F196         	movff	?___ftpack,?___ftmul
 19778  014A86  C17C  F197         	movff	?___ftpack+1,?___ftmul+1
 19779  014A8A  C17D  F198         	movff	?___ftpack+2,?___ftmul+2
 19780  014A8E  0012               	return	
 19781  014A90                     __end_of___ftmul:
 19782                           	opt stack 0
 19783                           tblptru	equ	0xFF8
 19784                           tblptrh	equ	0xFF7
 19785                           tblptrl	equ	0xFF6
 19786                           tablat	equ	0xFF5
 19787                           prodh	equ	0xFF4
 19788                           prodl	equ	0xFF3
 19789                           intcon	equ	0xFF2
 19790                           postinc0	equ	0xFEE
 19791                           wreg	equ	0xFE8
 19792                           indf1	equ	0xFE7
 19793                           postinc1	equ	0xFE6
 19794                           postdec1	equ	0xFE5
 19795                           fsr1h	equ	0xFE2
 19796                           fsr1l	equ	0xFE1
 19797                           indf2	equ	0xFDF
 19798                           postinc2	equ	0xFDE
 19799                           postdec2	equ	0xFDD
 19800                           fsr2h	equ	0xFDA
 19801                           fsr2l	equ	0xFD9
 19802                           status	equ	0xFD8
 19803                           
 19804 ;; *************** function ___ftdiv *****************
 19805 ;; Defined at:
 19806 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
 19807 ;; Parameters:    Size  Location     Type
 19808 ;;  f1              3   26[BANK1 ] float 
 19809 ;;  f2              3   29[BANK1 ] float 
 19810 ;; Auto vars:     Size  Location     Type
 19811 ;;  f3              3   36[BANK1 ] float 
 19812 ;;  sign            1   40[BANK1 ] unsigned char 
 19813 ;;  exp             1   39[BANK1 ] unsigned char 
 19814 ;;  cntr            1   35[BANK1 ] unsigned char 
 19815 ;; Return value:  Size  Location     Type
 19816 ;;                  3   26[BANK1 ] float 
 19817 ;; Registers used:
 19818 ;;		wreg, status,2, status,0, cstack
 19819 ;; Tracked objects:
 19820 ;;		On entry : 0/0
 19821 ;;		On exit  : 0/0
 19822 ;;		Unchanged: 0/0
 19823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19824 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19825 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19826 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19827 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 19828 ;;Total ram usage:       15 bytes
 19829 ;; Hardware stack levels used:    1
 19830 ;; Hardware stack levels required when called:    7
 19831 ;; This function calls:
 19832 ;;		___ftpack
 19833 ;; This function is called by:
 19834 ;;		_Command
 19835 ;;		_SetContrast
 19836 ;;		_SetDuty
 19837 ;; This function uses a non-reentrant model
 19838 ;;
 19839                           
 19840                           	psect	text36
 19841  014A90                     __ptext36:
 19842                           	opt stack 0
 19843  014A90                     ___ftdiv:
 19844                           	opt stack 21
 19845                           
 19846                           ;incstack = 0
 19847  014A90  0101               	movlb	1	; () banked
 19848  014A92  C189  F18D         	movff	___ftdiv@f1+2,??___ftdiv
 19849  014A96  0101               	movlb	1	; () banked
 19850  014A98  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 19851  014A9A  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 19852  014A9C  0101               	movlb	1	; () banked
 19853  014A9E  3588               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 19854  014AA0  0101               	movlb	1	; () banked
 19855  014AA2  378D               	rlcf	??___ftdiv& (0+255),f,b
 19856  014AA4  E301               	bnc	u12631
 19857  014AA6  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 19858  014AA8                     u12631:
 19859  014AA8  0101               	movlb	1	; () banked
 19860  014AAA  518D               	movf	??___ftdiv& (0+255),w,b
 19861  014AAC  0101               	movlb	1	; () banked
 19862  014AAE  6F94               	movwf	___ftdiv@exp& (0+255),b
 19863  014AB0  0101               	movlb	1	; () banked
 19864  014AB2  6794               	tstfsz	___ftdiv@exp& (0+255),b
 19865  014AB4  D00A               	goto	l9884
 19866                           
 19867                           ; BSR set to: 1
 19868  014AB6  0E00               	movlw	0
 19869  014AB8  0101               	movlb	1	; () banked
 19870  014ABA  6F87               	movwf	?___ftdiv& (0+255),b
 19871  014ABC  0E00               	movlw	0
 19872  014ABE  0101               	movlb	1	; () banked
 19873  014AC0  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 19874  014AC2  0E00               	movlw	0
 19875  014AC4  0101               	movlb	1	; () banked
 19876  014AC6  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 19877  014AC8  0012               	return	
 19878  014ACA                     l9884:
 19879                           
 19880                           ; BSR set to: 1
 19881  014ACA  0101               	movlb	1	; () banked
 19882  014ACC  C18C  F18D         	movff	___ftdiv@f2+2,??___ftdiv
 19883  014AD0  0101               	movlb	1	; () banked
 19884  014AD2  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 19885  014AD4  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 19886  014AD6  0101               	movlb	1	; () banked
 19887  014AD8  358B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 19888  014ADA  0101               	movlb	1	; () banked
 19889  014ADC  378D               	rlcf	??___ftdiv& (0+255),f,b
 19890  014ADE  E301               	bnc	u12651
 19891  014AE0  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 19892  014AE2                     u12651:
 19893  014AE2  0101               	movlb	1	; () banked
 19894  014AE4  518D               	movf	??___ftdiv& (0+255),w,b
 19895  014AE6  0101               	movlb	1	; () banked
 19896  014AE8  6F95               	movwf	___ftdiv@sign& (0+255),b
 19897  014AEA  0101               	movlb	1	; () banked
 19898  014AEC  6795               	tstfsz	___ftdiv@sign& (0+255),b
 19899  014AEE  D00A               	goto	l9890
 19900                           
 19901                           ; BSR set to: 1
 19902  014AF0  0E00               	movlw	0
 19903  014AF2  0101               	movlb	1	; () banked
 19904  014AF4  6F87               	movwf	?___ftdiv& (0+255),b
 19905  014AF6  0E00               	movlw	0
 19906  014AF8  0101               	movlb	1	; () banked
 19907  014AFA  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 19908  014AFC  0E00               	movlw	0
 19909  014AFE  0101               	movlb	1	; () banked
 19910  014B00  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 19911  014B02  0012               	return	
 19912  014B04                     l9890:
 19913                           
 19914                           ; BSR set to: 1
 19915  014B04  0E00               	movlw	0
 19916  014B06  0101               	movlb	1	; () banked
 19917  014B08  6F91               	movwf	___ftdiv@f3& (0+255),b
 19918  014B0A  0E00               	movlw	0
 19919  014B0C  0101               	movlb	1	; () banked
 19920  014B0E  6F92               	movwf	(___ftdiv@f3+1)& (0+255),b
 19921  014B10  0E00               	movlw	0
 19922  014B12  0101               	movlb	1	; () banked
 19923  014B14  6F93               	movwf	(___ftdiv@f3+2)& (0+255),b
 19924                           
 19925                           ; BSR set to: 1
 19926  014B16  0101               	movlb	1	; () banked
 19927  014B18  5195               	movf	___ftdiv@sign& (0+255),w,b
 19928  014B1A  0F89               	addlw	137
 19929  014B1C  0101               	movlb	1	; () banked
 19930  014B1E  5F94               	subwf	___ftdiv@exp& (0+255),f,b
 19931                           
 19932                           ; BSR set to: 1
 19933  014B20  C189  F195         	movff	___ftdiv@f1+2,___ftdiv@sign
 19934                           
 19935                           ; BSR set to: 1
 19936  014B24  0101               	movlb	1	; () banked
 19937  014B26  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 19938  014B28  0101               	movlb	1	; () banked
 19939  014B2A  1B95               	xorwf	___ftdiv@sign& (0+255),f,b
 19940                           
 19941                           ; BSR set to: 1
 19942  014B2C  0E80               	movlw	128
 19943  014B2E  0101               	movlb	1	; () banked
 19944  014B30  1795               	andwf	___ftdiv@sign& (0+255),f,b
 19945                           
 19946                           ; BSR set to: 1
 19947  014B32  0101               	movlb	1	; () banked
 19948  014B34  8F88               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 19949                           
 19950                           ; BSR set to: 1
 19951  014B36  0EFF               	movlw	255
 19952  014B38  0101               	movlb	1	; () banked
 19953  014B3A  1787               	andwf	___ftdiv@f1& (0+255),f,b
 19954  014B3C  0EFF               	movlw	255
 19955  014B3E  0101               	movlb	1	; () banked
 19956  014B40  1788               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 19957  014B42  0E00               	movlw	0
 19958  014B44  0101               	movlb	1	; () banked
 19959  014B46  1789               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 19960                           
 19961                           ; BSR set to: 1
 19962  014B48  0101               	movlb	1	; () banked
 19963  014B4A  8F8B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 19964                           
 19965                           ; BSR set to: 1
 19966  014B4C  0EFF               	movlw	255
 19967  014B4E  0101               	movlb	1	; () banked
 19968  014B50  178A               	andwf	___ftdiv@f2& (0+255),f,b
 19969  014B52  0EFF               	movlw	255
 19970  014B54  0101               	movlb	1	; () banked
 19971  014B56  178B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 19972  014B58  0E00               	movlw	0
 19973  014B5A  0101               	movlb	1	; () banked
 19974  014B5C  178C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 19975                           
 19976                           ; BSR set to: 1
 19977  014B5E  0E18               	movlw	24
 19978  014B60  0101               	movlb	1	; () banked
 19979  014B62  6F90               	movwf	___ftdiv@cntr& (0+255),b
 19980  014B64                     l9910:
 19981                           
 19982                           ; BSR set to: 1
 19983  014B64  0101               	movlb	1	; () banked
 19984  014B66  90D8               	bcf	status,0,c
 19985  014B68  0101               	movlb	1	; () banked
 19986  014B6A  3791               	rlcf	___ftdiv@f3& (0+255),f,b
 19987  014B6C  0101               	movlb	1	; () banked
 19988  014B6E  3792               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 19989  014B70  0101               	movlb	1	; () banked
 19990  014B72  3793               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 19991                           
 19992                           ; BSR set to: 1
 19993  014B74  0101               	movlb	1	; () banked
 19994  014B76  518A               	movf	___ftdiv@f2& (0+255),w,b
 19995  014B78  0101               	movlb	1	; () banked
 19996  014B7A  5D87               	subwf	___ftdiv@f1& (0+255),w,b
 19997  014B7C  0101               	movlb	1	; () banked
 19998  014B7E  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 19999  014B80  0101               	movlb	1	; () banked
 20000  014B82  5988               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 20001  014B84  0101               	movlb	1	; () banked
 20002  014B86  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 20003  014B88  0101               	movlb	1	; () banked
 20004  014B8A  5989               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 20005  014B8C  A0D8               	btfss	status,0,c
 20006  014B8E  D00E               	goto	l1862
 20007                           
 20008                           ; BSR set to: 1
 20009  014B90  0101               	movlb	1	; () banked
 20010  014B92  518A               	movf	___ftdiv@f2& (0+255),w,b
 20011  014B94  0101               	movlb	1	; () banked
 20012  014B96  5F87               	subwf	___ftdiv@f1& (0+255),f,b
 20013  014B98  0101               	movlb	1	; () banked
 20014  014B9A  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 20015  014B9C  0101               	movlb	1	; () banked
 20016  014B9E  5B88               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 20017  014BA0  0101               	movlb	1	; () banked
 20018  014BA2  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 20019  014BA4  0101               	movlb	1	; () banked
 20020  014BA6  5B89               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 20021                           
 20022                           ; BSR set to: 1
 20023  014BA8  0101               	movlb	1	; () banked
 20024  014BAA  8191               	bsf	___ftdiv@f3& (0+255),0,b
 20025  014BAC                     l1862:
 20026                           
 20027                           ; BSR set to: 1
 20028  014BAC  0101               	movlb	1	; () banked
 20029  014BAE  90D8               	bcf	status,0,c
 20030  014BB0  0101               	movlb	1	; () banked
 20031  014BB2  3787               	rlcf	___ftdiv@f1& (0+255),f,b
 20032  014BB4  0101               	movlb	1	; () banked
 20033  014BB6  3788               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 20034  014BB8  0101               	movlb	1	; () banked
 20035  014BBA  3789               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 20036                           
 20037                           ; BSR set to: 1
 20038  014BBC  0101               	movlb	1	; () banked
 20039  014BBE  2F90               	decfsz	___ftdiv@cntr& (0+255),f,b
 20040  014BC0  D7D1               	goto	l9910
 20041                           
 20042                           ; BSR set to: 1
 20043                           
 20044                           ; BSR set to: 1
 20045  014BC2  C191  F17B         	movff	___ftdiv@f3,___ftpack@arg
 20046  014BC6  C192  F17C         	movff	___ftdiv@f3+1,___ftpack@arg+1
 20047  014BCA  C193  F17D         	movff	___ftdiv@f3+2,___ftpack@arg+2
 20048  014BCE  C194  F17E         	movff	___ftdiv@exp,___ftpack@exp
 20049  014BD2  C195  F17F         	movff	___ftdiv@sign,___ftpack@sign
 20050  014BD6  ECAE  F0A7         	call	___ftpack	;wreg free
 20051  014BDA  C17B  F187         	movff	?___ftpack,?___ftdiv
 20052  014BDE  C17C  F188         	movff	?___ftpack+1,?___ftdiv+1
 20053  014BE2  C17D  F189         	movff	?___ftpack+2,?___ftdiv+2
 20054  014BE6  0012               	return	
 20055  014BE8                     __end_of___ftdiv:
 20056                           	opt stack 0
 20057                           tblptru	equ	0xFF8
 20058                           tblptrh	equ	0xFF7
 20059                           tblptrl	equ	0xFF6
 20060                           tablat	equ	0xFF5
 20061                           prodh	equ	0xFF4
 20062                           prodl	equ	0xFF3
 20063                           intcon	equ	0xFF2
 20064                           postinc0	equ	0xFEE
 20065                           wreg	equ	0xFE8
 20066                           indf1	equ	0xFE7
 20067                           postinc1	equ	0xFE6
 20068                           postdec1	equ	0xFE5
 20069                           fsr1h	equ	0xFE2
 20070                           fsr1l	equ	0xFE1
 20071                           indf2	equ	0xFDF
 20072                           postinc2	equ	0xFDE
 20073                           postdec2	equ	0xFDD
 20074                           fsr2h	equ	0xFDA
 20075                           fsr2l	equ	0xFD9
 20076                           status	equ	0xFD8
 20077                           
 20078 ;; *************** function ___ftpack *****************
 20079 ;; Defined at:
 20080 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
 20081 ;; Parameters:    Size  Location     Type
 20082 ;;  arg             3   14[BANK1 ] unsigned um
 20083 ;;  exp             1   17[BANK1 ] unsigned char 
 20084 ;;  sign            1   18[BANK1 ] unsigned char 
 20085 ;; Auto vars:     Size  Location     Type
 20086 ;;		None
 20087 ;; Return value:  Size  Location     Type
 20088 ;;                  3   14[BANK1 ] float 
 20089 ;; Registers used:
 20090 ;;		wreg, status,2, status,0
 20091 ;; Tracked objects:
 20092 ;;		On entry : 0/0
 20093 ;;		On exit  : 0/0
 20094 ;;		Unchanged: 0/0
 20095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20096 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 20097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20098 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 20099 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 20100 ;;Total ram usage:        8 bytes
 20101 ;; Hardware stack levels used:    1
 20102 ;; Hardware stack levels required when called:    6
 20103 ;; This function calls:
 20104 ;;		Nothing
 20105 ;; This function is called by:
 20106 ;;		___ftdiv
 20107 ;;		___ftmul
 20108 ;;		___lbtoft
 20109 ;;		___lwtoft
 20110 ;; This function uses a non-reentrant model
 20111 ;;
 20112                           
 20113                           	psect	text37
 20114  014F5C                     __ptext37:
 20115                           	opt stack 0
 20116  014F5C                     ___ftpack:
 20117                           	opt stack 21
 20118                           
 20119                           ;incstack = 0
 20120  014F5C  0101               	movlb	1	; () banked
 20121  014F5E  517E               	movf	___ftpack@exp& (0+255),w,b
 20122  014F60  B4D8               	btfsc	status,2,c
 20123  014F62  D008               	goto	l9166
 20124                           
 20125                           ; BSR set to: 1
 20126  014F64  0101               	movlb	1	; () banked
 20127  014F66  517B               	movf	___ftpack@arg& (0+255),w,b
 20128  014F68  0101               	movlb	1	; () banked
 20129  014F6A  117C               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 20130  014F6C  0101               	movlb	1	; () banked
 20131  014F6E  117D               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 20132  014F70  A4D8               	btfss	status,2,c
 20133  014F72  D014               	goto	l9172
 20134  014F74                     l9166:
 20135                           
 20136                           ; BSR set to: 1
 20137  014F74  0E00               	movlw	0
 20138  014F76  0101               	movlb	1	; () banked
 20139  014F78  6F7B               	movwf	?___ftpack& (0+255),b
 20140  014F7A  0E00               	movlw	0
 20141  014F7C  0101               	movlb	1	; () banked
 20142  014F7E  6F7C               	movwf	(?___ftpack+1)& (0+255),b
 20143  014F80  0E00               	movlw	0
 20144  014F82  0101               	movlb	1	; () banked
 20145  014F84  6F7D               	movwf	(?___ftpack+2)& (0+255),b
 20146  014F86  0012               	return	
 20147  014F88                     l9170:
 20148                           
 20149                           ; BSR set to: 1
 20150  014F88  0101               	movlb	1	; () banked
 20151  014F8A  2B7E               	incf	___ftpack@exp& (0+255),f,b
 20152  014F8C  0101               	movlb	1	; () banked
 20153  014F8E  90D8               	bcf	status,0,c
 20154  014F90  0101               	movlb	1	; () banked
 20155  014F92  337D               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 20156  014F94  0101               	movlb	1	; () banked
 20157  014F96  337C               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 20158  014F98  0101               	movlb	1	; () banked
 20159  014F9A  337B               	rrcf	___ftpack@arg& (0+255),f,b
 20160  014F9C                     l9172:
 20161                           
 20162                           ; BSR set to: 1
 20163  014F9C  0E00               	movlw	0
 20164  014F9E  0101               	movlb	1	; () banked
 20165  014FA0  157B               	andwf	___ftpack@arg& (0+255),w,b
 20166  014FA2  0101               	movlb	1	; () banked
 20167  014FA4  6F80               	movwf	??___ftpack& (0+255),b
 20168  014FA6  0E00               	movlw	0
 20169  014FA8  0101               	movlb	1	; () banked
 20170  014FAA  157C               	andwf	(___ftpack@arg+1)& (0+255),w,b
 20171  014FAC  0101               	movlb	1	; () banked
 20172  014FAE  6F81               	movwf	(??___ftpack+1)& (0+255),b
 20173  014FB0  0EFE               	movlw	254
 20174  014FB2  0101               	movlb	1	; () banked
 20175  014FB4  157D               	andwf	(___ftpack@arg+2)& (0+255),w,b
 20176  014FB6  0101               	movlb	1	; () banked
 20177  014FB8  6F82               	movwf	(??___ftpack+2)& (0+255),b
 20178  014FBA  0101               	movlb	1	; () banked
 20179  014FBC  5180               	movf	??___ftpack& (0+255),w,b
 20180  014FBE  1181               	iorwf	(??___ftpack+1)& (0+255),w,b
 20181  014FC0  1182               	iorwf	(??___ftpack+2)& (0+255),w,b
 20182  014FC2  B4D8               	btfsc	status,2,c
 20183  014FC4  D014               	goto	l9178
 20184  014FC6  D7E0               	goto	l9170
 20185  014FC8                     l9174:
 20186                           
 20187                           ; BSR set to: 1
 20188  014FC8  0101               	movlb	1	; () banked
 20189  014FCA  2B7E               	incf	___ftpack@exp& (0+255),f,b
 20190                           
 20191                           ; BSR set to: 1
 20192  014FCC  0E01               	movlw	1
 20193  014FCE  0101               	movlb	1	; () banked
 20194  014FD0  277B               	addwf	___ftpack@arg& (0+255),f,b
 20195  014FD2  0E00               	movlw	0
 20196  014FD4  0101               	movlb	1	; () banked
 20197  014FD6  237C               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 20198  014FD8  0E00               	movlw	0
 20199  014FDA  0101               	movlb	1	; () banked
 20200  014FDC  237D               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 20201  014FDE  0101               	movlb	1	; () banked
 20202  014FE0  90D8               	bcf	status,0,c
 20203  014FE2  0101               	movlb	1	; () banked
 20204  014FE4  337D               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 20205  014FE6  0101               	movlb	1	; () banked
 20206  014FE8  337C               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 20207  014FEA  0101               	movlb	1	; () banked
 20208  014FEC  337B               	rrcf	___ftpack@arg& (0+255),f,b
 20209  014FEE                     l9178:
 20210                           
 20211                           ; BSR set to: 1
 20212  014FEE  0E00               	movlw	0
 20213  014FF0  0101               	movlb	1	; () banked
 20214  014FF2  157B               	andwf	___ftpack@arg& (0+255),w,b
 20215  014FF4  0101               	movlb	1	; () banked
 20216  014FF6  6F80               	movwf	??___ftpack& (0+255),b
 20217  014FF8  0E00               	movlw	0
 20218  014FFA  0101               	movlb	1	; () banked
 20219  014FFC  157C               	andwf	(___ftpack@arg+1)& (0+255),w,b
 20220  014FFE  0101               	movlb	1	; () banked
 20221  015000  6F81               	movwf	(??___ftpack+1)& (0+255),b
 20222  015002  0EFF               	movlw	255
 20223  015004  0101               	movlb	1	; () banked
 20224  015006  157D               	andwf	(___ftpack@arg+2)& (0+255),w,b
 20225  015008  0101               	movlb	1	; () banked
 20226  01500A  6F82               	movwf	(??___ftpack+2)& (0+255),b
 20227  01500C  0101               	movlb	1	; () banked
 20228  01500E  5180               	movf	??___ftpack& (0+255),w,b
 20229  015010  1181               	iorwf	(??___ftpack+1)& (0+255),w,b
 20230  015012  1182               	iorwf	(??___ftpack+2)& (0+255),w,b
 20231  015014  B4D8               	btfsc	status,2,c
 20232  015016  D00B               	goto	l9182
 20233  015018  D7D7               	goto	l9174
 20234  01501A                     l9180:
 20235                           
 20236                           ; BSR set to: 1
 20237  01501A  0101               	movlb	1	; () banked
 20238  01501C  077E               	decf	___ftpack@exp& (0+255),f,b
 20239  01501E  0101               	movlb	1	; () banked
 20240  015020  90D8               	bcf	status,0,c
 20241  015022  0101               	movlb	1	; () banked
 20242  015024  377B               	rlcf	___ftpack@arg& (0+255),f,b
 20243  015026  0101               	movlb	1	; () banked
 20244  015028  377C               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 20245  01502A  0101               	movlb	1	; () banked
 20246  01502C  377D               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 20247  01502E                     l9182:
 20248                           
 20249                           ; BSR set to: 1
 20250  01502E  0101               	movlb	1	; () banked
 20251  015030  AF7C               	btfss	(___ftpack@arg+1)& (0+255),7,b
 20252  015032  D7F3               	goto	l9180
 20253                           
 20254                           ; BSR set to: 1
 20255  015034  0101               	movlb	1	; () banked
 20256  015036  B17E               	btfsc	___ftpack@exp& (0+255),0,b
 20257  015038  D002               	goto	l9186
 20258                           
 20259                           ; BSR set to: 1
 20260  01503A  0101               	movlb	1	; () banked
 20261  01503C  9F7C               	bcf	(___ftpack@arg+1)& (0+255),7,b
 20262  01503E                     l9186:
 20263                           
 20264                           ; BSR set to: 1
 20265  01503E  0101               	movlb	1	; () banked
 20266  015040  90D8               	bcf	status,0,c
 20267  015042  337E               	rrcf	___ftpack@exp& (0+255),f,b
 20268  015044  0101               	movlb	1	; () banked
 20269  015046  517E               	movf	___ftpack@exp& (0+255),w,b
 20270  015048  0101               	movlb	1	; () banked
 20271  01504A  137D               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 20272                           
 20273                           ; BSR set to: 1
 20274  01504C  0101               	movlb	1	; () banked
 20275  01504E  517F               	movf	___ftpack@sign& (0+255),w,b
 20276  015050  B4D8               	btfsc	status,2,c
 20277  015052  D002               	goto	l9192
 20278                           
 20279                           ; BSR set to: 1
 20280  015054  0101               	movlb	1	; () banked
 20281  015056  8F7D               	bsf	(___ftpack@arg+2)& (0+255),7,b
 20282  015058                     l9192:
 20283                           
 20284                           ; BSR set to: 1
 20285  015058  C17B  F17B         	movff	___ftpack@arg,?___ftpack
 20286  01505C  C17C  F17C         	movff	___ftpack@arg+1,?___ftpack+1
 20287  015060  C17D  F17D         	movff	___ftpack@arg+2,?___ftpack+2
 20288  015064  0012               	return	
 20289  015066                     __end_of___ftpack:
 20290                           	opt stack 0
 20291                           tblptru	equ	0xFF8
 20292                           tblptrh	equ	0xFF7
 20293                           tblptrl	equ	0xFF6
 20294                           tablat	equ	0xFF5
 20295                           prodh	equ	0xFF4
 20296                           prodl	equ	0xFF3
 20297                           intcon	equ	0xFF2
 20298                           postinc0	equ	0xFEE
 20299                           wreg	equ	0xFE8
 20300                           indf1	equ	0xFE7
 20301                           postinc1	equ	0xFE6
 20302                           postdec1	equ	0xFE5
 20303                           fsr1h	equ	0xFE2
 20304                           fsr1l	equ	0xFE1
 20305                           indf2	equ	0xFDF
 20306                           postinc2	equ	0xFDE
 20307                           postdec2	equ	0xFDD
 20308                           fsr2h	equ	0xFDA
 20309                           fsr2l	equ	0xFD9
 20310                           status	equ	0xFD8
 20311                           
 20312 ;; *************** function _Send_Config2 *****************
 20313 ;; Defined at:
 20314 ;;		line 87 in file "RF.c"
 20315 ;; Parameters:    Size  Location     Type
 20316 ;;  pin             1    wreg     unsigned char 
 20317 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 20318 ;;		 -> SubLightOFF(16), SubLightON(16), Aux2OFF(16), Aux2ON(16), 
 20319 ;;		 -> BedOFF(16), BedON(16), AuxOFF(16), AuxON(16), 
 20320 ;;		 -> fanOFF(16), fanON(16), 
 20321 ;; Auto vars:     Size  Location     Type
 20322 ;;  pin             1   29[BANK1 ] unsigned char 
 20323 ;;  i               1   30[BANK1 ] unsigned char 
 20324 ;; Return value:  Size  Location     Type
 20325 ;;		None               void
 20326 ;; Registers used:
 20327 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20328 ;; Tracked objects:
 20329 ;;		On entry : 0/0
 20330 ;;		On exit  : 0/0
 20331 ;;		Unchanged: 0/0
 20332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20333 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20334 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20335 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20336 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 20337 ;;Total ram usage:        6 bytes
 20338 ;; Hardware stack levels used:    1
 20339 ;; Hardware stack levels required when called:    8
 20340 ;; This function calls:
 20341 ;;		_One_Config2
 20342 ;;		_Zero_Config2
 20343 ;;		_delayUS
 20344 ;; This function is called by:
 20345 ;;		_Command
 20346 ;; This function uses a non-reentrant model
 20347 ;;
 20348                           
 20349                           	psect	text38
 20350  015FFE                     __ptext38:
 20351                           	opt stack 0
 20352  015FFE                     _Send_Config2:
 20353                           	opt stack 20
 20354                           
 20355                           ; BSR set to: 1
 20356                           ;incstack = 0
 20357                           ;Send_Config2@pin stored from wreg
 20358  015FFE  0101               	movlb	1	; () banked
 20359  016000  6F8A               	movwf	Send_Config2@pin& (0+255),b
 20360                           
 20361                           ; BSR set to: 1
 20362                           ;RF.c: 89: unsigned char i=0;
 20363  016002  0E00               	movlw	0
 20364  016004  0101               	movlb	1	; () banked
 20365  016006  6F8B               	movwf	Send_Config2@i& (0+255),b
 20366                           
 20367                           ;RF.c: 91: for(i=0;i<16;i++)
 20368  016008  0E00               	movlw	0
 20369  01600A  0101               	movlb	1	; () banked
 20370  01600C  6F8B               	movwf	Send_Config2@i& (0+255),b
 20371  01600E  D025               	goto	L28
 20372  016010                     l10478:
 20373                           
 20374                           ; BSR set to: 1
 20375                           ;RF.c: 92: {
 20376                           ;RF.c: 93: if(data[i] == 0)
 20377  016010  0101               	movlb	1	; () banked
 20378  016012  518B               	movf	Send_Config2@i& (0+255),w,b
 20379  016014  0D01               	mullw	1
 20380  016016  0101               	movlb	1	; () banked
 20381  016018  C186  F188         	movff	Send_Config2@data,??_Send_Config2
 20382  01601C  0101               	movlb	1	; () banked
 20383  01601E  C187  F189         	movff	Send_Config2@data+1,??_Send_Config2+1
 20384  016022  50F3               	movf	prodl,w,c
 20385  016024  0101               	movlb	1	; () banked
 20386  016026  2788               	addwf	??_Send_Config2& (0+255),f,b
 20387  016028  50F4               	movf	prodh,w,c
 20388  01602A  0101               	movlb	1	; () banked
 20389  01602C  2389               	addwfc	(??_Send_Config2+1)& (0+255),f,b
 20390  01602E  C188  FFF6         	movff	??_Send_Config2,tblptrl
 20391  016032  C189  FFF7         	movff	??_Send_Config2+1,tblptrh
 20392  016036                     	if	0	;tblptru may be non-zero
 20393  016036                     	endif
 20394  016036                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20395  016036  0E00               	movlw	low (__mediumconst shr (0+16))
 20396  016038  6EF8               	movwf	tblptru,c
 20397  01603A                     	endif
 20398  01603A  0008               	tblrd		*
 20399  01603C  50F5               	movf	tablat,w,c
 20400  01603E  0900               	iorlw	0
 20401  016040  A4D8               	btfss	status,2,c
 20402  016042  D005               	goto	l10482
 20403                           
 20404                           ; BSR set to: 1
 20405                           ;RF.c: 94: {
 20406                           ;RF.c: 95: Zero_Config2(pin);
 20407  016044  0101               	movlb	1	; () banked
 20408  016046  518A               	movf	Send_Config2@pin& (0+255),w,b
 20409  016048  EC20  F0B4         	call	_Zero_Config2
 20410                           
 20411                           ;RF.c: 96: }
 20412  01604C  D004               	goto	l10484
 20413  01604E                     l10482:
 20414                           
 20415                           ;RF.c: 97: else
 20416                           ;RF.c: 98: {
 20417                           ;RF.c: 99: One_Config2(pin);
 20418  01604E  0101               	movlb	1	; () banked
 20419  016050  518A               	movf	Send_Config2@pin& (0+255),w,b
 20420  016052  EC46  F0B4         	call	_One_Config2
 20421  016056                     l10484:
 20422  016056  0101               	movlb	1	; () banked
 20423  016058  2B8B               	incf	Send_Config2@i& (0+255),f,b
 20424  01605A                     L28:
 20425                           
 20426                           ; BSR set to: 1
 20427  01605A  0E0F               	movlw	15
 20428  01605C  0101               	movlb	1	; () banked
 20429  01605E  658B               	cpfsgt	Send_Config2@i& (0+255),b
 20430  016060  D7D7               	goto	l10478
 20431                           
 20432                           ; BSR set to: 1
 20433                           ;RF.c: 100: }
 20434                           ;RF.c: 101: }
 20435                           ;RF.c: 103: LATD &= ~pin;
 20436                           
 20437                           ; BSR set to: 1
 20438  016062  0101               	movlb	1	; () banked
 20439  016064  518A               	movf	Send_Config2@pin& (0+255),w,b
 20440  016066  0AFF               	xorlw	255
 20441  016068  168C               	andwf	3980,f,c	;volatile
 20442                           
 20443                           ; BSR set to: 1
 20444                           ;RF.c: 104: delayUS(11700);
 20445  01606A  0EB4               	movlw	180
 20446  01606C  0101               	movlb	1	; () banked
 20447  01606E  6F7B               	movwf	delayUS@US& (0+255),b
 20448  016070  0E2D               	movlw	45
 20449  016072  0101               	movlb	1	; () banked
 20450  016074  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 20451  016076  0E00               	movlw	0
 20452  016078  0101               	movlb	1	; () banked
 20453  01607A  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 20454  01607C  0E00               	movlw	0
 20455  01607E  0101               	movlb	1	; () banked
 20456  016080  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 20457  016082  ECC0  F0B1         	call	_delayUS	;wreg free
 20458  016086  0012               	return	
 20459  016088                     __end_of_Send_Config2:
 20460                           	opt stack 0
 20461                           tblptru	equ	0xFF8
 20462                           tblptrh	equ	0xFF7
 20463                           tblptrl	equ	0xFF6
 20464                           tablat	equ	0xFF5
 20465                           prodh	equ	0xFF4
 20466                           prodl	equ	0xFF3
 20467                           intcon	equ	0xFF2
 20468                           postinc0	equ	0xFEE
 20469                           wreg	equ	0xFE8
 20470                           indf1	equ	0xFE7
 20471                           postinc1	equ	0xFE6
 20472                           postdec1	equ	0xFE5
 20473                           fsr1h	equ	0xFE2
 20474                           fsr1l	equ	0xFE1
 20475                           indf2	equ	0xFDF
 20476                           postinc2	equ	0xFDE
 20477                           postdec2	equ	0xFDD
 20478                           fsr2h	equ	0xFDA
 20479                           fsr2l	equ	0xFD9
 20480                           status	equ	0xFD8
 20481                           
 20482 ;; *************** function _Zero_Config2 *****************
 20483 ;; Defined at:
 20484 ;;		line 108 in file "RF.c"
 20485 ;; Parameters:    Size  Location     Type
 20486 ;;  pin             1    wreg     unsigned char 
 20487 ;; Auto vars:     Size  Location     Type
 20488 ;;  pin             1   24[BANK1 ] unsigned char 
 20489 ;; Return value:  Size  Location     Type
 20490 ;;		None               void
 20491 ;; Registers used:
 20492 ;;		wreg, status,2, status,0, cstack
 20493 ;; Tracked objects:
 20494 ;;		On entry : 0/0
 20495 ;;		On exit  : 0/0
 20496 ;;		Unchanged: 0/0
 20497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20499 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20501 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20502 ;;Total ram usage:        1 bytes
 20503 ;; Hardware stack levels used:    1
 20504 ;; Hardware stack levels required when called:    7
 20505 ;; This function calls:
 20506 ;;		_delayUS
 20507 ;; This function is called by:
 20508 ;;		_Send_Config2
 20509 ;; This function uses a non-reentrant model
 20510 ;;
 20511                           
 20512                           	psect	text39
 20513  016840                     __ptext39:
 20514                           	opt stack 0
 20515  016840                     _Zero_Config2:
 20516                           	opt stack 20
 20517                           
 20518                           ;incstack = 0
 20519                           ;Zero_Config2@pin stored from wreg
 20520  016840  0101               	movlb	1	; () banked
 20521  016842  6F85               	movwf	Zero_Config2@pin& (0+255),b
 20522                           
 20523                           ; BSR set to: 1
 20524                           ;RF.c: 110: LATD |= pin;
 20525  016844  0101               	movlb	1	; () banked
 20526  016846  5185               	movf	Zero_Config2@pin& (0+255),w,b
 20527  016848  128C               	iorwf	3980,f,c	;volatile
 20528                           
 20529                           ; BSR set to: 1
 20530                           ;RF.c: 111: delayUS(705);
 20531  01684A  0EC1               	movlw	193
 20532  01684C  0101               	movlb	1	; () banked
 20533  01684E  6F7B               	movwf	delayUS@US& (0+255),b
 20534  016850  0E02               	movlw	2
 20535  016852  0101               	movlb	1	; () banked
 20536  016854  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 20537  016856  0E00               	movlw	0
 20538  016858  0101               	movlb	1	; () banked
 20539  01685A  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 20540  01685C  0E00               	movlw	0
 20541  01685E  0101               	movlb	1	; () banked
 20542  016860  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 20543  016862  ECC0  F0B1         	call	_delayUS	;wreg free
 20544                           
 20545                           ;RF.c: 112: LATD &= ~pin;
 20546  016866  0101               	movlb	1	; () banked
 20547  016868  5185               	movf	Zero_Config2@pin& (0+255),w,b
 20548  01686A  0AFF               	xorlw	255
 20549  01686C  168C               	andwf	3980,f,c	;volatile
 20550                           
 20551                           ;RF.c: 113: delayUS(1910);
 20552  01686E  0E76               	movlw	118
 20553  016870  0101               	movlb	1	; () banked
 20554  016872  6F7B               	movwf	delayUS@US& (0+255),b
 20555  016874  0E07               	movlw	7
 20556  016876  0101               	movlb	1	; () banked
 20557  016878  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 20558  01687A  0E00               	movlw	0
 20559  01687C  0101               	movlb	1	; () banked
 20560  01687E  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 20561  016880  0E00               	movlw	0
 20562  016882  0101               	movlb	1	; () banked
 20563  016884  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 20564  016886  ECC0  F0B1         	call	_delayUS	;wreg free
 20565  01688A  0012               	return	
 20566  01688C                     __end_of_Zero_Config2:
 20567                           	opt stack 0
 20568                           tblptru	equ	0xFF8
 20569                           tblptrh	equ	0xFF7
 20570                           tblptrl	equ	0xFF6
 20571                           tablat	equ	0xFF5
 20572                           prodh	equ	0xFF4
 20573                           prodl	equ	0xFF3
 20574                           intcon	equ	0xFF2
 20575                           postinc0	equ	0xFEE
 20576                           wreg	equ	0xFE8
 20577                           indf1	equ	0xFE7
 20578                           postinc1	equ	0xFE6
 20579                           postdec1	equ	0xFE5
 20580                           fsr1h	equ	0xFE2
 20581                           fsr1l	equ	0xFE1
 20582                           indf2	equ	0xFDF
 20583                           postinc2	equ	0xFDE
 20584                           postdec2	equ	0xFDD
 20585                           fsr2h	equ	0xFDA
 20586                           fsr2l	equ	0xFD9
 20587                           status	equ	0xFD8
 20588                           
 20589 ;; *************** function _One_Config2 *****************
 20590 ;; Defined at:
 20591 ;;		line 116 in file "RF.c"
 20592 ;; Parameters:    Size  Location     Type
 20593 ;;  pin             1    wreg     unsigned char 
 20594 ;; Auto vars:     Size  Location     Type
 20595 ;;  pin             1   24[BANK1 ] unsigned char 
 20596 ;; Return value:  Size  Location     Type
 20597 ;;		None               void
 20598 ;; Registers used:
 20599 ;;		wreg, status,2, status,0, cstack
 20600 ;; Tracked objects:
 20601 ;;		On entry : 0/0
 20602 ;;		On exit  : 0/0
 20603 ;;		Unchanged: 0/0
 20604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20606 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20608 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20609 ;;Total ram usage:        1 bytes
 20610 ;; Hardware stack levels used:    1
 20611 ;; Hardware stack levels required when called:    7
 20612 ;; This function calls:
 20613 ;;		_delayUS
 20614 ;; This function is called by:
 20615 ;;		_Send_Config2
 20616 ;; This function uses a non-reentrant model
 20617 ;;
 20618                           
 20619                           	psect	text40
 20620  01688C                     __ptext40:
 20621                           	opt stack 0
 20622  01688C                     _One_Config2:
 20623                           	opt stack 20
 20624                           
 20625                           ;incstack = 0
 20626                           ;One_Config2@pin stored from wreg
 20627  01688C  0101               	movlb	1	; () banked
 20628  01688E  6F85               	movwf	One_Config2@pin& (0+255),b
 20629                           
 20630                           ; BSR set to: 1
 20631                           ;RF.c: 118: LATD |= pin;
 20632  016890  0101               	movlb	1	; () banked
 20633  016892  5185               	movf	One_Config2@pin& (0+255),w,b
 20634  016894  128C               	iorwf	3980,f,c	;volatile
 20635                           
 20636                           ; BSR set to: 1
 20637                           ;RF.c: 119: delayUS(1955);
 20638  016896  0EA3               	movlw	163
 20639  016898  0101               	movlb	1	; () banked
 20640  01689A  6F7B               	movwf	delayUS@US& (0+255),b
 20641  01689C  0E07               	movlw	7
 20642  01689E  0101               	movlb	1	; () banked
 20643  0168A0  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 20644  0168A2  0E00               	movlw	0
 20645  0168A4  0101               	movlb	1	; () banked
 20646  0168A6  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 20647  0168A8  0E00               	movlw	0
 20648  0168AA  0101               	movlb	1	; () banked
 20649  0168AC  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 20650  0168AE  ECC0  F0B1         	call	_delayUS	;wreg free
 20651                           
 20652                           ;RF.c: 120: LATD &= ~pin;
 20653  0168B2  0101               	movlb	1	; () banked
 20654  0168B4  5185               	movf	One_Config2@pin& (0+255),w,b
 20655  0168B6  0AFF               	xorlw	255
 20656  0168B8  168C               	andwf	3980,f,c	;volatile
 20657                           
 20658                           ;RF.c: 121: delayUS(705);
 20659  0168BA  0EC1               	movlw	193
 20660  0168BC  0101               	movlb	1	; () banked
 20661  0168BE  6F7B               	movwf	delayUS@US& (0+255),b
 20662  0168C0  0E02               	movlw	2
 20663  0168C2  0101               	movlb	1	; () banked
 20664  0168C4  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 20665  0168C6  0E00               	movlw	0
 20666  0168C8  0101               	movlb	1	; () banked
 20667  0168CA  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 20668  0168CC  0E00               	movlw	0
 20669  0168CE  0101               	movlb	1	; () banked
 20670  0168D0  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 20671  0168D2  ECC0  F0B1         	call	_delayUS	;wreg free
 20672  0168D6  0012               	return	
 20673  0168D8                     __end_of_One_Config2:
 20674                           	opt stack 0
 20675                           tblptru	equ	0xFF8
 20676                           tblptrh	equ	0xFF7
 20677                           tblptrl	equ	0xFF6
 20678                           tablat	equ	0xFF5
 20679                           prodh	equ	0xFF4
 20680                           prodl	equ	0xFF3
 20681                           intcon	equ	0xFF2
 20682                           postinc0	equ	0xFEE
 20683                           wreg	equ	0xFE8
 20684                           indf1	equ	0xFE7
 20685                           postinc1	equ	0xFE6
 20686                           postdec1	equ	0xFE5
 20687                           fsr1h	equ	0xFE2
 20688                           fsr1l	equ	0xFE1
 20689                           indf2	equ	0xFDF
 20690                           postinc2	equ	0xFDE
 20691                           postdec2	equ	0xFDD
 20692                           fsr2h	equ	0xFDA
 20693                           fsr2l	equ	0xFD9
 20694                           status	equ	0xFD8
 20695                           
 20696 ;; *************** function _Send_Config1 *****************
 20697 ;; Defined at:
 20698 ;;		line 24 in file "RF.c"
 20699 ;; Parameters:    Size  Location     Type
 20700 ;;  pin             1    wreg     unsigned char 
 20701 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 20702 ;;		 -> TXdataF(12), TXdataE(12), TXdataD(12), 
 20703 ;; Auto vars:     Size  Location     Type
 20704 ;;  pin             1   31[BANK1 ] unsigned char 
 20705 ;;  i               1   30[BANK1 ] unsigned char 
 20706 ;; Return value:  Size  Location     Type
 20707 ;;		None               void
 20708 ;; Registers used:
 20709 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20710 ;; Tracked objects:
 20711 ;;		On entry : 0/0
 20712 ;;		On exit  : 0/0
 20713 ;;		Unchanged: 0/0
 20714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20715 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20716 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20717 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 20718 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 20719 ;;Total ram usage:        7 bytes
 20720 ;; Hardware stack levels used:    1
 20721 ;; Hardware stack levels required when called:    8
 20722 ;; This function calls:
 20723 ;;		_One_Config1
 20724 ;;		_Zero_Config1
 20725 ;;		_delayUS
 20726 ;;		_f_Config1
 20727 ;; This function is called by:
 20728 ;;		_Command
 20729 ;; This function uses a non-reentrant model
 20730 ;;
 20731                           
 20732                           	psect	text41
 20733  015066                     __ptext41:
 20734                           	opt stack 0
 20735  015066                     _Send_Config1:
 20736                           	opt stack 20
 20737                           
 20738                           ;incstack = 0
 20739                           ;Send_Config1@pin stored from wreg
 20740  015066  0101               	movlb	1	; () banked
 20741  015068  6F8C               	movwf	Send_Config1@pin& (0+255),b
 20742                           
 20743                           ; BSR set to: 1
 20744                           ;RF.c: 26: unsigned char i=0;
 20745  01506A  0E00               	movlw	0
 20746  01506C  0101               	movlb	1	; () banked
 20747  01506E  6F8B               	movwf	Send_Config1@i& (0+255),b
 20748                           
 20749                           ;RF.c: 28: for(i=0;i<12;i++)
 20750  015070  0E00               	movlw	0
 20751  015072  0101               	movlb	1	; () banked
 20752  015074  6F8B               	movwf	Send_Config1@i& (0+255),b
 20753  015076  D046               	goto	L29
 20754  015078                     l10452:
 20755                           
 20756                           ; BSR set to: 1
 20757                           ;RF.c: 29: {
 20758                           ;RF.c: 30: if(data[i] == 0)
 20759  015078  0101               	movlb	1	; () banked
 20760  01507A  518B               	movf	Send_Config1@i& (0+255),w,b
 20761  01507C  0D01               	mullw	1
 20762  01507E  0101               	movlb	1	; () banked
 20763  015080  C186  F188         	movff	Send_Config1@data,??_Send_Config1
 20764  015084  0101               	movlb	1	; () banked
 20765  015086  C187  F189         	movff	Send_Config1@data+1,??_Send_Config1+1
 20766  01508A  50F3               	movf	prodl,w,c
 20767  01508C  0101               	movlb	1	; () banked
 20768  01508E  2788               	addwf	??_Send_Config1& (0+255),f,b
 20769  015090  50F4               	movf	prodh,w,c
 20770  015092  0101               	movlb	1	; () banked
 20771  015094  2389               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 20772  015096  C188  FFF6         	movff	??_Send_Config1,tblptrl
 20773  01509A  C189  FFF7         	movff	??_Send_Config1+1,tblptrh
 20774  01509E                     	if	0	;tblptru may be non-zero
 20775  01509E                     	endif
 20776  01509E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20777  01509E  0E00               	movlw	low (__mediumconst shr (0+16))
 20778  0150A0  6EF8               	movwf	tblptru,c
 20779  0150A2                     	endif
 20780  0150A2  0008               	tblrd		*
 20781  0150A4  50F5               	movf	tablat,w,c
 20782  0150A6  0900               	iorlw	0
 20783  0150A8  A4D8               	btfss	status,2,c
 20784  0150AA  D005               	goto	l10456
 20785                           
 20786                           ; BSR set to: 1
 20787                           ;RF.c: 31: {
 20788                           ;RF.c: 32: Zero_Config1(pin);
 20789  0150AC  0101               	movlb	1	; () banked
 20790  0150AE  518C               	movf	Send_Config1@pin& (0+255),w,b
 20791  0150B0  ECE0  F0AE         	call	_Zero_Config1
 20792                           
 20793                           ;RF.c: 33: }
 20794  0150B4  D025               	goto	l10462
 20795  0150B6                     l10456:
 20796                           
 20797                           ;RF.c: 34: else if(data[i] ==1)
 20798  0150B6  0101               	movlb	1	; () banked
 20799  0150B8  518B               	movf	Send_Config1@i& (0+255),w,b
 20800  0150BA  0D01               	mullw	1
 20801  0150BC  0101               	movlb	1	; () banked
 20802  0150BE  C186  F188         	movff	Send_Config1@data,??_Send_Config1
 20803  0150C2  0101               	movlb	1	; () banked
 20804  0150C4  C187  F189         	movff	Send_Config1@data+1,??_Send_Config1+1
 20805  0150C8  50F3               	movf	prodl,w,c
 20806  0150CA  0101               	movlb	1	; () banked
 20807  0150CC  2788               	addwf	??_Send_Config1& (0+255),f,b
 20808  0150CE  50F4               	movf	prodh,w,c
 20809  0150D0  0101               	movlb	1	; () banked
 20810  0150D2  2389               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 20811  0150D4  C188  FFF6         	movff	??_Send_Config1,tblptrl
 20812  0150D8  C189  FFF7         	movff	??_Send_Config1+1,tblptrh
 20813  0150DC                     	if	0	;tblptru may be non-zero
 20814  0150DC                     	endif
 20815  0150DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20816  0150DC  0E00               	movlw	low (__mediumconst shr (0+16))
 20817  0150DE  6EF8               	movwf	tblptru,c
 20818  0150E0                     	endif
 20819  0150E0  0008               	tblrd		*
 20820  0150E2  CFF5 F18A          	movff	tablat,??_Send_Config1+2
 20821  0150E6  0101               	movlb	1	; () banked
 20822  0150E8  058A               	decf	(??_Send_Config1+2)& (0+255),w,b
 20823  0150EA  A4D8               	btfss	status,2,c
 20824  0150EC  D005               	goto	l10460
 20825                           
 20826                           ; BSR set to: 1
 20827                           ;RF.c: 35: {
 20828                           ;RF.c: 36: One_Config1(pin);
 20829  0150EE  0101               	movlb	1	; () banked
 20830  0150F0  518C               	movf	Send_Config1@pin& (0+255),w,b
 20831  0150F2  EC29  F0AF         	call	_One_Config1
 20832                           
 20833                           ;RF.c: 37: }
 20834  0150F6  D004               	goto	l10462
 20835  0150F8                     l10460:
 20836                           
 20837                           ;RF.c: 38: else
 20838                           ;RF.c: 39: {
 20839                           ;RF.c: 40: f_Config1(pin);
 20840  0150F8  0101               	movlb	1	; () banked
 20841  0150FA  518C               	movf	Send_Config1@pin& (0+255),w,b
 20842  0150FC  EC97  F0AE         	call	_f_Config1
 20843  015100                     l10462:
 20844  015100  0101               	movlb	1	; () banked
 20845  015102  2B8B               	incf	Send_Config1@i& (0+255),f,b
 20846  015104                     L29:
 20847                           
 20848                           ; BSR set to: 1
 20849  015104  0E0B               	movlw	11
 20850  015106  0101               	movlb	1	; () banked
 20851  015108  658B               	cpfsgt	Send_Config1@i& (0+255),b
 20852  01510A  D7B6               	goto	l10452
 20853                           
 20854                           ; BSR set to: 1
 20855                           ;RF.c: 41: }
 20856                           ;RF.c: 42: }
 20857                           ;RF.c: 44: LATD |= pin;
 20858                           
 20859                           ; BSR set to: 1
 20860  01510C  0101               	movlb	1	; () banked
 20861  01510E  518C               	movf	Send_Config1@pin& (0+255),w,b
 20862  015110  128C               	iorwf	3980,f,c	;volatile
 20863                           
 20864                           ; BSR set to: 1
 20865                           ;RF.c: 45: delayUS(222);
 20866  015112  0EDE               	movlw	222
 20867  015114  0101               	movlb	1	; () banked
 20868  015116  6F7B               	movwf	delayUS@US& (0+255),b
 20869  015118  0E00               	movlw	0
 20870  01511A  0101               	movlb	1	; () banked
 20871  01511C  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 20872  01511E  0E00               	movlw	0
 20873  015120  0101               	movlb	1	; () banked
 20874  015122  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 20875  015124  0E00               	movlw	0
 20876  015126  0101               	movlb	1	; () banked
 20877  015128  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 20878  01512A  ECC0  F0B1         	call	_delayUS	;wreg free
 20879                           
 20880                           ;RF.c: 46: LATD &= ~pin;
 20881  01512E  0101               	movlb	1	; () banked
 20882  015130  518C               	movf	Send_Config1@pin& (0+255),w,b
 20883  015132  0AFF               	xorlw	255
 20884  015134  168C               	andwf	3980,f,c	;volatile
 20885                           
 20886                           ;RF.c: 47: delayUS(7330);
 20887  015136  0EA2               	movlw	162
 20888  015138  0101               	movlb	1	; () banked
 20889  01513A  6F7B               	movwf	delayUS@US& (0+255),b
 20890  01513C  0E1C               	movlw	28
 20891  01513E  0101               	movlb	1	; () banked
 20892  015140  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 20893  015142  0E00               	movlw	0
 20894  015144  0101               	movlb	1	; () banked
 20895  015146  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 20896  015148  0E00               	movlw	0
 20897  01514A  0101               	movlb	1	; () banked
 20898  01514C  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 20899  01514E  ECC0  F0B1         	call	_delayUS	;wreg free
 20900  015152  0012               	return	
 20901  015154                     __end_of_Send_Config1:
 20902                           	opt stack 0
 20903                           tblptru	equ	0xFF8
 20904                           tblptrh	equ	0xFF7
 20905                           tblptrl	equ	0xFF6
 20906                           tablat	equ	0xFF5
 20907                           prodh	equ	0xFF4
 20908                           prodl	equ	0xFF3
 20909                           intcon	equ	0xFF2
 20910                           postinc0	equ	0xFEE
 20911                           wreg	equ	0xFE8
 20912                           indf1	equ	0xFE7
 20913                           postinc1	equ	0xFE6
 20914                           postdec1	equ	0xFE5
 20915                           fsr1h	equ	0xFE2
 20916                           fsr1l	equ	0xFE1
 20917                           indf2	equ	0xFDF
 20918                           postinc2	equ	0xFDE
 20919                           postdec2	equ	0xFDD
 20920                           fsr2h	equ	0xFDA
 20921                           fsr2l	equ	0xFD9
 20922                           status	equ	0xFD8
 20923                           
 20924 ;; *************** function _f_Config1 *****************
 20925 ;; Defined at:
 20926 ;;		line 75 in file "RF.c"
 20927 ;; Parameters:    Size  Location     Type
 20928 ;;  pin             1    wreg     unsigned char 
 20929 ;; Auto vars:     Size  Location     Type
 20930 ;;  pin             1   24[BANK1 ] unsigned char 
 20931 ;; Return value:  Size  Location     Type
 20932 ;;		None               void
 20933 ;; Registers used:
 20934 ;;		wreg, status,2, status,0, cstack
 20935 ;; Tracked objects:
 20936 ;;		On entry : 0/0
 20937 ;;		On exit  : 0/0
 20938 ;;		Unchanged: 0/0
 20939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20941 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20943 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20944 ;;Total ram usage:        1 bytes
 20945 ;; Hardware stack levels used:    1
 20946 ;; Hardware stack levels required when called:    7
 20947 ;; This function calls:
 20948 ;;		_delayUS
 20949 ;; This function is called by:
 20950 ;;		_Send_Config1
 20951 ;; This function uses a non-reentrant model
 20952 ;;
 20953                           
 20954                           	psect	text42
 20955  015D2E                     __ptext42:
 20956                           	opt stack 0
 20957  015D2E                     _f_Config1:
 20958                           	opt stack 20
 20959                           
 20960                           ;incstack = 0
 20961                           ;f_Config1@pin stored from wreg
 20962  015D2E  0101               	movlb	1	; () banked
 20963  015D30  6F85               	movwf	f_Config1@pin& (0+255),b
 20964                           
 20965                           ; BSR set to: 1
 20966                           ;RF.c: 77: LATD |= pin;
 20967  015D32  0101               	movlb	1	; () banked
 20968  015D34  5185               	movf	f_Config1@pin& (0+255),w,b
 20969  015D36  128C               	iorwf	3980,f,c	;volatile
 20970                           
 20971                           ; BSR set to: 1
 20972                           ;RF.c: 78: delayUS(216);
 20973  015D38  0ED8               	movlw	216
 20974  015D3A  0101               	movlb	1	; () banked
 20975  015D3C  6F7B               	movwf	delayUS@US& (0+255),b
 20976  015D3E  0E00               	movlw	0
 20977  015D40  0101               	movlb	1	; () banked
 20978  015D42  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 20979  015D44  0E00               	movlw	0
 20980  015D46  0101               	movlb	1	; () banked
 20981  015D48  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 20982  015D4A  0E00               	movlw	0
 20983  015D4C  0101               	movlb	1	; () banked
 20984  015D4E  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 20985  015D50  ECC0  F0B1         	call	_delayUS	;wreg free
 20986                           
 20987                           ;RF.c: 79: LATD &= ~pin;
 20988  015D54  0101               	movlb	1	; () banked
 20989  015D56  5185               	movf	f_Config1@pin& (0+255),w,b
 20990  015D58  0AFF               	xorlw	255
 20991  015D5A  168C               	andwf	3980,f,c	;volatile
 20992                           
 20993                           ;RF.c: 80: delayUS(614);
 20994  015D5C  0E66               	movlw	102
 20995  015D5E  0101               	movlb	1	; () banked
 20996  015D60  6F7B               	movwf	delayUS@US& (0+255),b
 20997  015D62  0E02               	movlw	2
 20998  015D64  0101               	movlb	1	; () banked
 20999  015D66  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 21000  015D68  0E00               	movlw	0
 21001  015D6A  0101               	movlb	1	; () banked
 21002  015D6C  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 21003  015D6E  0E00               	movlw	0
 21004  015D70  0101               	movlb	1	; () banked
 21005  015D72  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 21006  015D74  ECC0  F0B1         	call	_delayUS	;wreg free
 21007                           
 21008                           ;RF.c: 81: LATD |= pin;
 21009  015D78  0101               	movlb	1	; () banked
 21010  015D7A  5185               	movf	f_Config1@pin& (0+255),w,b
 21011  015D7C  128C               	iorwf	3980,f,c	;volatile
 21012                           
 21013                           ; BSR set to: 1
 21014                           ;RF.c: 82: delayUS(614);
 21015  015D7E  0E66               	movlw	102
 21016  015D80  0101               	movlb	1	; () banked
 21017  015D82  6F7B               	movwf	delayUS@US& (0+255),b
 21018  015D84  0E02               	movlw	2
 21019  015D86  0101               	movlb	1	; () banked
 21020  015D88  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 21021  015D8A  0E00               	movlw	0
 21022  015D8C  0101               	movlb	1	; () banked
 21023  015D8E  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 21024  015D90  0E00               	movlw	0
 21025  015D92  0101               	movlb	1	; () banked
 21026  015D94  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 21027  015D96  ECC0  F0B1         	call	_delayUS	;wreg free
 21028                           
 21029                           ;RF.c: 83: LATD &= ~pin;
 21030  015D9A  0101               	movlb	1	; () banked
 21031  015D9C  5185               	movf	f_Config1@pin& (0+255),w,b
 21032  015D9E  0AFF               	xorlw	255
 21033  015DA0  168C               	andwf	3980,f,c	;volatile
 21034                           
 21035                           ; BSR set to: 1
 21036                           ;RF.c: 84: delayUS(216);
 21037  015DA2  0ED8               	movlw	216
 21038  015DA4  0101               	movlb	1	; () banked
 21039  015DA6  6F7B               	movwf	delayUS@US& (0+255),b
 21040  015DA8  0E00               	movlw	0
 21041  015DAA  0101               	movlb	1	; () banked
 21042  015DAC  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 21043  015DAE  0E00               	movlw	0
 21044  015DB0  0101               	movlb	1	; () banked
 21045  015DB2  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 21046  015DB4  0E00               	movlw	0
 21047  015DB6  0101               	movlb	1	; () banked
 21048  015DB8  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 21049  015DBA  ECC0  F0B1         	call	_delayUS	;wreg free
 21050  015DBE  0012               	return	
 21051  015DC0                     __end_of_f_Config1:
 21052                           	opt stack 0
 21053                           tblptru	equ	0xFF8
 21054                           tblptrh	equ	0xFF7
 21055                           tblptrl	equ	0xFF6
 21056                           tablat	equ	0xFF5
 21057                           prodh	equ	0xFF4
 21058                           prodl	equ	0xFF3
 21059                           intcon	equ	0xFF2
 21060                           postinc0	equ	0xFEE
 21061                           wreg	equ	0xFE8
 21062                           indf1	equ	0xFE7
 21063                           postinc1	equ	0xFE6
 21064                           postdec1	equ	0xFE5
 21065                           fsr1h	equ	0xFE2
 21066                           fsr1l	equ	0xFE1
 21067                           indf2	equ	0xFDF
 21068                           postinc2	equ	0xFDE
 21069                           postdec2	equ	0xFDD
 21070                           fsr2h	equ	0xFDA
 21071                           fsr2l	equ	0xFD9
 21072                           status	equ	0xFD8
 21073                           
 21074 ;; *************** function _Zero_Config1 *****************
 21075 ;; Defined at:
 21076 ;;		line 51 in file "RF.c"
 21077 ;; Parameters:    Size  Location     Type
 21078 ;;  pin             1    wreg     unsigned char 
 21079 ;; Auto vars:     Size  Location     Type
 21080 ;;  pin             1   24[BANK1 ] unsigned char 
 21081 ;; Return value:  Size  Location     Type
 21082 ;;		None               void
 21083 ;; Registers used:
 21084 ;;		wreg, status,2, status,0, cstack
 21085 ;; Tracked objects:
 21086 ;;		On entry : 0/0
 21087 ;;		On exit  : 0/0
 21088 ;;		Unchanged: 0/0
 21089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21091 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21093 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21094 ;;Total ram usage:        1 bytes
 21095 ;; Hardware stack levels used:    1
 21096 ;; Hardware stack levels required when called:    7
 21097 ;; This function calls:
 21098 ;;		_delayUS
 21099 ;; This function is called by:
 21100 ;;		_Send_Config1
 21101 ;; This function uses a non-reentrant model
 21102 ;;
 21103                           
 21104                           	psect	text43
 21105  015DC0                     __ptext43:
 21106                           	opt stack 0
 21107  015DC0                     _Zero_Config1:
 21108                           	opt stack 20
 21109                           
 21110                           ;incstack = 0
 21111                           ;Zero_Config1@pin stored from wreg
 21112  015DC0  0101               	movlb	1	; () banked
 21113  015DC2  6F85               	movwf	Zero_Config1@pin& (0+255),b
 21114                           
 21115                           ; BSR set to: 1
 21116                           ;RF.c: 53: LATD |= pin;
 21117  015DC4  0101               	movlb	1	; () banked
 21118  015DC6  5185               	movf	Zero_Config1@pin& (0+255),w,b
 21119  015DC8  128C               	iorwf	3980,f,c	;volatile
 21120                           
 21121                           ; BSR set to: 1
 21122                           ;RF.c: 54: delayUS(216 );
 21123  015DCA  0ED8               	movlw	216
 21124  015DCC  0101               	movlb	1	; () banked
 21125  015DCE  6F7B               	movwf	delayUS@US& (0+255),b
 21126  015DD0  0E00               	movlw	0
 21127  015DD2  0101               	movlb	1	; () banked
 21128  015DD4  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 21129  015DD6  0E00               	movlw	0
 21130  015DD8  0101               	movlb	1	; () banked
 21131  015DDA  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 21132  015DDC  0E00               	movlw	0
 21133  015DDE  0101               	movlb	1	; () banked
 21134  015DE0  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 21135  015DE2  ECC0  F0B1         	call	_delayUS	;wreg free
 21136                           
 21137                           ;RF.c: 55: LATD &= ~pin;
 21138  015DE6  0101               	movlb	1	; () banked
 21139  015DE8  5185               	movf	Zero_Config1@pin& (0+255),w,b
 21140  015DEA  0AFF               	xorlw	255
 21141  015DEC  168C               	andwf	3980,f,c	;volatile
 21142                           
 21143                           ;RF.c: 56: delayUS(614 );
 21144  015DEE  0E66               	movlw	102
 21145  015DF0  0101               	movlb	1	; () banked
 21146  015DF2  6F7B               	movwf	delayUS@US& (0+255),b
 21147  015DF4  0E02               	movlw	2
 21148  015DF6  0101               	movlb	1	; () banked
 21149  015DF8  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 21150  015DFA  0E00               	movlw	0
 21151  015DFC  0101               	movlb	1	; () banked
 21152  015DFE  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 21153  015E00  0E00               	movlw	0
 21154  015E02  0101               	movlb	1	; () banked
 21155  015E04  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 21156  015E06  ECC0  F0B1         	call	_delayUS	;wreg free
 21157                           
 21158                           ;RF.c: 57: LATD |= pin;
 21159  015E0A  0101               	movlb	1	; () banked
 21160  015E0C  5185               	movf	Zero_Config1@pin& (0+255),w,b
 21161  015E0E  128C               	iorwf	3980,f,c	;volatile
 21162                           
 21163                           ; BSR set to: 1
 21164                           ;RF.c: 58: delayUS(216 );
 21165  015E10  0ED8               	movlw	216
 21166  015E12  0101               	movlb	1	; () banked
 21167  015E14  6F7B               	movwf	delayUS@US& (0+255),b
 21168  015E16  0E00               	movlw	0
 21169  015E18  0101               	movlb	1	; () banked
 21170  015E1A  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 21171  015E1C  0E00               	movlw	0
 21172  015E1E  0101               	movlb	1	; () banked
 21173  015E20  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 21174  015E22  0E00               	movlw	0
 21175  015E24  0101               	movlb	1	; () banked
 21176  015E26  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 21177  015E28  ECC0  F0B1         	call	_delayUS	;wreg free
 21178                           
 21179                           ;RF.c: 59: LATD &= ~pin;
 21180  015E2C  0101               	movlb	1	; () banked
 21181  015E2E  5185               	movf	Zero_Config1@pin& (0+255),w,b
 21182  015E30  0AFF               	xorlw	255
 21183  015E32  168C               	andwf	3980,f,c	;volatile
 21184                           
 21185                           ; BSR set to: 1
 21186                           ;RF.c: 60: delayUS(614 );
 21187  015E34  0E66               	movlw	102
 21188  015E36  0101               	movlb	1	; () banked
 21189  015E38  6F7B               	movwf	delayUS@US& (0+255),b
 21190  015E3A  0E02               	movlw	2
 21191  015E3C  0101               	movlb	1	; () banked
 21192  015E3E  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 21193  015E40  0E00               	movlw	0
 21194  015E42  0101               	movlb	1	; () banked
 21195  015E44  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 21196  015E46  0E00               	movlw	0
 21197  015E48  0101               	movlb	1	; () banked
 21198  015E4A  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 21199  015E4C  ECC0  F0B1         	call	_delayUS	;wreg free
 21200  015E50  0012               	return	
 21201  015E52                     __end_of_Zero_Config1:
 21202                           	opt stack 0
 21203                           tblptru	equ	0xFF8
 21204                           tblptrh	equ	0xFF7
 21205                           tblptrl	equ	0xFF6
 21206                           tablat	equ	0xFF5
 21207                           prodh	equ	0xFF4
 21208                           prodl	equ	0xFF3
 21209                           intcon	equ	0xFF2
 21210                           postinc0	equ	0xFEE
 21211                           wreg	equ	0xFE8
 21212                           indf1	equ	0xFE7
 21213                           postinc1	equ	0xFE6
 21214                           postdec1	equ	0xFE5
 21215                           fsr1h	equ	0xFE2
 21216                           fsr1l	equ	0xFE1
 21217                           indf2	equ	0xFDF
 21218                           postinc2	equ	0xFDE
 21219                           postdec2	equ	0xFDD
 21220                           fsr2h	equ	0xFDA
 21221                           fsr2l	equ	0xFD9
 21222                           status	equ	0xFD8
 21223                           
 21224 ;; *************** function _One_Config1 *****************
 21225 ;; Defined at:
 21226 ;;		line 63 in file "RF.c"
 21227 ;; Parameters:    Size  Location     Type
 21228 ;;  pin             1    wreg     unsigned char 
 21229 ;; Auto vars:     Size  Location     Type
 21230 ;;  pin             1   24[BANK1 ] unsigned char 
 21231 ;; Return value:  Size  Location     Type
 21232 ;;		None               void
 21233 ;; Registers used:
 21234 ;;		wreg, status,2, status,0, cstack
 21235 ;; Tracked objects:
 21236 ;;		On entry : 0/0
 21237 ;;		On exit  : 0/0
 21238 ;;		Unchanged: 0/0
 21239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21241 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21243 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21244 ;;Total ram usage:        1 bytes
 21245 ;; Hardware stack levels used:    1
 21246 ;; Hardware stack levels required when called:    7
 21247 ;; This function calls:
 21248 ;;		_delayUS
 21249 ;; This function is called by:
 21250 ;;		_Send_Config1
 21251 ;; This function uses a non-reentrant model
 21252 ;;
 21253                           
 21254                           	psect	text44
 21255  015E52                     __ptext44:
 21256                           	opt stack 0
 21257  015E52                     _One_Config1:
 21258                           	opt stack 20
 21259                           
 21260                           ;incstack = 0
 21261                           ;One_Config1@pin stored from wreg
 21262  015E52  0101               	movlb	1	; () banked
 21263  015E54  6F85               	movwf	One_Config1@pin& (0+255),b
 21264                           
 21265                           ; BSR set to: 1
 21266                           ;RF.c: 65: LATD |= pin;
 21267  015E56  0101               	movlb	1	; () banked
 21268  015E58  5185               	movf	One_Config1@pin& (0+255),w,b
 21269  015E5A  128C               	iorwf	3980,f,c	;volatile
 21270                           
 21271                           ; BSR set to: 1
 21272                           ;RF.c: 66: delayUS(614);
 21273  015E5C  0E66               	movlw	102
 21274  015E5E  0101               	movlb	1	; () banked
 21275  015E60  6F7B               	movwf	delayUS@US& (0+255),b
 21276  015E62  0E02               	movlw	2
 21277  015E64  0101               	movlb	1	; () banked
 21278  015E66  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 21279  015E68  0E00               	movlw	0
 21280  015E6A  0101               	movlb	1	; () banked
 21281  015E6C  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 21282  015E6E  0E00               	movlw	0
 21283  015E70  0101               	movlb	1	; () banked
 21284  015E72  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 21285  015E74  ECC0  F0B1         	call	_delayUS	;wreg free
 21286                           
 21287                           ;RF.c: 67: LATD &= ~pin;
 21288  015E78  0101               	movlb	1	; () banked
 21289  015E7A  5185               	movf	One_Config1@pin& (0+255),w,b
 21290  015E7C  0AFF               	xorlw	255
 21291  015E7E  168C               	andwf	3980,f,c	;volatile
 21292                           
 21293                           ;RF.c: 68: delayUS(216);
 21294  015E80  0ED8               	movlw	216
 21295  015E82  0101               	movlb	1	; () banked
 21296  015E84  6F7B               	movwf	delayUS@US& (0+255),b
 21297  015E86  0E00               	movlw	0
 21298  015E88  0101               	movlb	1	; () banked
 21299  015E8A  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 21300  015E8C  0E00               	movlw	0
 21301  015E8E  0101               	movlb	1	; () banked
 21302  015E90  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 21303  015E92  0E00               	movlw	0
 21304  015E94  0101               	movlb	1	; () banked
 21305  015E96  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 21306  015E98  ECC0  F0B1         	call	_delayUS	;wreg free
 21307                           
 21308                           ;RF.c: 69: LATD |= pin;
 21309  015E9C  0101               	movlb	1	; () banked
 21310  015E9E  5185               	movf	One_Config1@pin& (0+255),w,b
 21311  015EA0  128C               	iorwf	3980,f,c	;volatile
 21312                           
 21313                           ; BSR set to: 1
 21314                           ;RF.c: 70: delayUS(614);
 21315  015EA2  0E66               	movlw	102
 21316  015EA4  0101               	movlb	1	; () banked
 21317  015EA6  6F7B               	movwf	delayUS@US& (0+255),b
 21318  015EA8  0E02               	movlw	2
 21319  015EAA  0101               	movlb	1	; () banked
 21320  015EAC  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 21321  015EAE  0E00               	movlw	0
 21322  015EB0  0101               	movlb	1	; () banked
 21323  015EB2  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 21324  015EB4  0E00               	movlw	0
 21325  015EB6  0101               	movlb	1	; () banked
 21326  015EB8  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 21327  015EBA  ECC0  F0B1         	call	_delayUS	;wreg free
 21328                           
 21329                           ;RF.c: 71: LATD &= ~pin;
 21330  015EBE  0101               	movlb	1	; () banked
 21331  015EC0  5185               	movf	One_Config1@pin& (0+255),w,b
 21332  015EC2  0AFF               	xorlw	255
 21333  015EC4  168C               	andwf	3980,f,c	;volatile
 21334                           
 21335                           ; BSR set to: 1
 21336                           ;RF.c: 72: delayUS(216);
 21337  015EC6  0ED8               	movlw	216
 21338  015EC8  0101               	movlb	1	; () banked
 21339  015ECA  6F7B               	movwf	delayUS@US& (0+255),b
 21340  015ECC  0E00               	movlw	0
 21341  015ECE  0101               	movlb	1	; () banked
 21342  015ED0  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 21343  015ED2  0E00               	movlw	0
 21344  015ED4  0101               	movlb	1	; () banked
 21345  015ED6  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 21346  015ED8  0E00               	movlw	0
 21347  015EDA  0101               	movlb	1	; () banked
 21348  015EDC  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 21349  015EDE  ECC0  F0B1         	call	_delayUS	;wreg free
 21350  015EE2  0012               	return	
 21351  015EE4                     __end_of_One_Config1:
 21352                           	opt stack 0
 21353                           tblptru	equ	0xFF8
 21354                           tblptrh	equ	0xFF7
 21355                           tblptrl	equ	0xFF6
 21356                           tablat	equ	0xFF5
 21357                           prodh	equ	0xFF4
 21358                           prodl	equ	0xFF3
 21359                           intcon	equ	0xFF2
 21360                           postinc0	equ	0xFEE
 21361                           wreg	equ	0xFE8
 21362                           indf1	equ	0xFE7
 21363                           postinc1	equ	0xFE6
 21364                           postdec1	equ	0xFE5
 21365                           fsr1h	equ	0xFE2
 21366                           fsr1l	equ	0xFE1
 21367                           indf2	equ	0xFDF
 21368                           postinc2	equ	0xFDE
 21369                           postdec2	equ	0xFDD
 21370                           fsr2h	equ	0xFDA
 21371                           fsr2l	equ	0xFD9
 21372                           status	equ	0xFD8
 21373                           
 21374 ;; *************** function _SET_RTC_TIME *****************
 21375 ;; Defined at:
 21376 ;;		line 111 in file "RTC.c"
 21377 ;; Parameters:    Size  Location     Type
 21378 ;;  SetTime         9   22[BANK1 ] struct TIME
 21379 ;; Auto vars:     Size  Location     Type
 21380 ;;  temp            7   35[BANK1 ] unsigned char [7]
 21381 ;;  Error           1   42[BANK1 ] unsigned char 
 21382 ;; Return value:  Size  Location     Type
 21383 ;;                  1    wreg      unsigned char 
 21384 ;; Registers used:
 21385 ;;		wreg, status,2, status,0, prodl, cstack
 21386 ;; Tracked objects:
 21387 ;;		On entry : 0/0
 21388 ;;		On exit  : 0/0
 21389 ;;		Unchanged: 0/0
 21390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21391 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 21392 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 21393 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 21394 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
 21395 ;;Total ram usage:       21 bytes
 21396 ;; Hardware stack levels used:    1
 21397 ;; Hardware stack levels required when called:    9
 21398 ;; This function calls:
 21399 ;;		_I2C_Write_At_Address
 21400 ;;		___awdiv
 21401 ;;		___awmod
 21402 ;; This function is called by:
 21403 ;;		_Command
 21404 ;; This function uses a non-reentrant model
 21405 ;;
 21406                           
 21407                           	psect	text45
 21408  013DAC                     __ptext45:
 21409                           	opt stack 0
 21410  013DAC                     _SET_RTC_TIME:
 21411                           	opt stack 19
 21412                           
 21413                           ;RTC.c: 113: unsigned char Error =0;
 21414                           
 21415                           ;incstack = 0
 21416  013DAC  0E00               	movlw	0
 21417  013DAE  0101               	movlb	1	; () banked
 21418  013DB0  6F97               	movwf	SET_RTC_TIME@Error& (0+255),b
 21419                           
 21420                           ; BSR set to: 1
 21421                           ;RTC.c: 114: unsigned char temp[7];
 21422                           ;RTC.c: 116: temp[0] = ((SetTime.Seconds /10) << 4) + (SetTime.Seconds % 10);
 21423  013DB2  0101               	movlb	1	; () banked
 21424  013DB4  C183  F17B         	movff	SET_RTC_TIME@SetTime,___awmod@dividend
 21425  013DB8  0101               	movlb	1	; () banked
 21426  013DBA  6B7C               	clrf	(___awmod@dividend+1)& (0+255),b
 21427  013DBC  0E00               	movlw	0
 21428  013DBE  0101               	movlb	1	; () banked
 21429  013DC0  6F7E               	movwf	(___awmod@divisor+1)& (0+255),b
 21430  013DC2  0E0A               	movlw	10
 21431  013DC4  0101               	movlb	1	; () banked
 21432  013DC6  6F7D               	movwf	___awmod@divisor& (0+255),b
 21433  013DC8  EC47  F0AB         	call	___awmod	;wreg free
 21434  013DCC  C17B  F18C         	movff	?___awmod,??_SET_RTC_TIME
 21435  013DD0  C17C  F18D         	movff	?___awmod+1,??_SET_RTC_TIME+1
 21436  013DD4  0101               	movlb	1	; () banked
 21437  013DD6  C183  F17B         	movff	SET_RTC_TIME@SetTime,___awdiv@dividend
 21438  013DDA  0101               	movlb	1	; () banked
 21439  013DDC  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
 21440  013DDE  0E00               	movlw	0
 21441  013DE0  0101               	movlb	1	; () banked
 21442  013DE2  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
 21443  013DE4  0E0A               	movlw	10
 21444  013DE6  0101               	movlb	1	; () banked
 21445  013DE8  6F7D               	movwf	___awdiv@divisor& (0+255),b
 21446  013DEA  EC91  F0A9         	call	___awdiv	;wreg free
 21447  013DEE  0101               	movlb	1	; () banked
 21448  013DF0  397B               	swapf	?___awdiv& (0+255),w,b
 21449  013DF2  0BF0               	andlw	240
 21450  013DF4  0101               	movlb	1	; () banked
 21451  013DF6  258C               	addwf	??_SET_RTC_TIME& (0+255),w,b
 21452  013DF8  0101               	movlb	1	; () banked
 21453  013DFA  6F90               	movwf	SET_RTC_TIME@temp& (0+255),b
 21454                           
 21455                           ; BSR set to: 1
 21456                           ;RTC.c: 117: Error = I2C_Write_At_Address( 0b1101000, 0x00, temp[0] );
 21457  013DFC  0E00               	movlw	0
 21458  013DFE  0101               	movlb	1	; () banked
 21459  013E00  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 21460  013E02  C190  F17F         	movff	SET_RTC_TIME@temp,I2C_Write_At_Address@data
 21461  013E06  0E68               	movlw	104
 21462  013E08  ECB8  F0AC         	call	_I2C_Write_At_Address
 21463  013E0C  0101               	movlb	1	; () banked
 21464  013E0E  6F97               	movwf	SET_RTC_TIME@Error& (0+255),b
 21465                           
 21466                           ; BSR set to: 1
 21467                           ;RTC.c: 118: if(Error)
 21468  013E10  0101               	movlb	1	; () banked
 21469  013E12  5197               	movf	SET_RTC_TIME@Error& (0+255),w,b
 21470  013E14  B4D8               	btfsc	status,2,c
 21471  013E16  D002               	goto	l10830
 21472                           
 21473                           ; BSR set to: 1
 21474                           ;RTC.c: 119: {
 21475                           ;RTC.c: 120: return 1;
 21476  013E18  0E01               	movlw	1
 21477  013E1A  0012               	return	
 21478  013E1C                     l10830:
 21479                           
 21480                           ; BSR set to: 1
 21481                           ;RTC.c: 121: }
 21482                           ;RTC.c: 123: temp[1] = ((SetTime.Minutes /10) << 4) + (SetTime.Minutes % 10);
 21483  013E1C  0101               	movlb	1	; () banked
 21484  013E1E  C184  F17B         	movff	SET_RTC_TIME@SetTime+1,___awmod@dividend
 21485  013E22  0101               	movlb	1	; () banked
 21486  013E24  6B7C               	clrf	(___awmod@dividend+1)& (0+255),b
 21487  013E26  0E00               	movlw	0
 21488  013E28  0101               	movlb	1	; () banked
 21489  013E2A  6F7E               	movwf	(___awmod@divisor+1)& (0+255),b
 21490  013E2C  0E0A               	movlw	10
 21491  013E2E  0101               	movlb	1	; () banked
 21492  013E30  6F7D               	movwf	___awmod@divisor& (0+255),b
 21493  013E32  EC47  F0AB         	call	___awmod	;wreg free
 21494  013E36  C17B  F18C         	movff	?___awmod,??_SET_RTC_TIME
 21495  013E3A  C17C  F18D         	movff	?___awmod+1,??_SET_RTC_TIME+1
 21496  013E3E  0101               	movlb	1	; () banked
 21497  013E40  C184  F17B         	movff	SET_RTC_TIME@SetTime+1,___awdiv@dividend
 21498  013E44  0101               	movlb	1	; () banked
 21499  013E46  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
 21500  013E48  0E00               	movlw	0
 21501  013E4A  0101               	movlb	1	; () banked
 21502  013E4C  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
 21503  013E4E  0E0A               	movlw	10
 21504  013E50  0101               	movlb	1	; () banked
 21505  013E52  6F7D               	movwf	___awdiv@divisor& (0+255),b
 21506  013E54  EC91  F0A9         	call	___awdiv	;wreg free
 21507  013E58  0101               	movlb	1	; () banked
 21508  013E5A  397B               	swapf	?___awdiv& (0+255),w,b
 21509  013E5C  0BF0               	andlw	240
 21510  013E5E  0101               	movlb	1	; () banked
 21511  013E60  258C               	addwf	??_SET_RTC_TIME& (0+255),w,b
 21512  013E62  0101               	movlb	1	; () banked
 21513  013E64  6F91               	movwf	(SET_RTC_TIME@temp+1)& (0+255),b
 21514                           
 21515                           ; BSR set to: 1
 21516                           ;RTC.c: 124: Error = I2C_Write_At_Address( 0b1101000, 0x01, temp[1] );
 21517  013E66  0E01               	movlw	1
 21518  013E68  0101               	movlb	1	; () banked
 21519  013E6A  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 21520  013E6C  C191  F17F         	movff	SET_RTC_TIME@temp+1,I2C_Write_At_Address@data
 21521  013E70  0E68               	movlw	104
 21522  013E72  ECB8  F0AC         	call	_I2C_Write_At_Address
 21523  013E76  0101               	movlb	1	; () banked
 21524  013E78  6F97               	movwf	SET_RTC_TIME@Error& (0+255),b
 21525                           
 21526                           ; BSR set to: 1
 21527                           ;RTC.c: 125: if(Error)
 21528  013E7A  0101               	movlb	1	; () banked
 21529  013E7C  5197               	movf	SET_RTC_TIME@Error& (0+255),w,b
 21530  013E7E  B4D8               	btfsc	status,2,c
 21531  013E80  D002               	goto	l10840
 21532                           
 21533                           ; BSR set to: 1
 21534                           ;RTC.c: 126: {
 21535                           ;RTC.c: 127: return 2;
 21536  013E82  0E02               	movlw	2
 21537  013E84  0012               	return	
 21538  013E86                     l10840:
 21539                           
 21540                           ; BSR set to: 1
 21541                           ;RTC.c: 128: }
 21542                           ;RTC.c: 130: temp[2] = ((SetTime.Hours /10) << 4) + (SetTime.Hours % 10) + (SetTime.Hour
      +                          sAM_PM << 5);
 21543  013E86  C187  F18C         	movff	SET_RTC_TIME@SetTime+4,??_SET_RTC_TIME
 21544  013E8A  0E05               	movlw	5
 21545  013E8C  0101               	movlb	1	; () banked
 21546  013E8E  6F8D               	movwf	(??_SET_RTC_TIME+1)& (0+255),b
 21547  013E90                     u14055:
 21548  013E90  0101               	movlb	1	; () banked
 21549  013E92  90D8               	bcf	status,0,c
 21550  013E94  378C               	rlcf	??_SET_RTC_TIME& (0+255),f,b
 21551  013E96  0101               	movlb	1	; () banked
 21552  013E98  2F8D               	decfsz	(??_SET_RTC_TIME+1)& (0+255),f,b
 21553  013E9A  D7FA               	goto	u14055
 21554  013E9C  0101               	movlb	1	; () banked
 21555  013E9E  C185  F17B         	movff	SET_RTC_TIME@SetTime+2,___awmod@dividend
 21556  013EA2  0101               	movlb	1	; () banked
 21557  013EA4  6B7C               	clrf	(___awmod@dividend+1)& (0+255),b
 21558  013EA6  0E00               	movlw	0
 21559  013EA8  0101               	movlb	1	; () banked
 21560  013EAA  6F7E               	movwf	(___awmod@divisor+1)& (0+255),b
 21561  013EAC  0E0A               	movlw	10
 21562  013EAE  0101               	movlb	1	; () banked
 21563  013EB0  6F7D               	movwf	___awmod@divisor& (0+255),b
 21564  013EB2  EC47  F0AB         	call	___awmod	;wreg free
 21565  013EB6  C17B  F18E         	movff	?___awmod,??_SET_RTC_TIME+2
 21566  013EBA  C17C  F18F         	movff	?___awmod+1,??_SET_RTC_TIME+3
 21567  013EBE  0101               	movlb	1	; () banked
 21568  013EC0  C185  F17B         	movff	SET_RTC_TIME@SetTime+2,___awdiv@dividend
 21569  013EC4  0101               	movlb	1	; () banked
 21570  013EC6  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
 21571  013EC8  0E00               	movlw	0
 21572  013ECA  0101               	movlb	1	; () banked
 21573  013ECC  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
 21574  013ECE  0E0A               	movlw	10
 21575  013ED0  0101               	movlb	1	; () banked
 21576  013ED2  6F7D               	movwf	___awdiv@divisor& (0+255),b
 21577  013ED4  EC91  F0A9         	call	___awdiv	;wreg free
 21578  013ED8  0101               	movlb	1	; () banked
 21579  013EDA  397B               	swapf	?___awdiv& (0+255),w,b
 21580  013EDC  0BF0               	andlw	240
 21581  013EDE  0101               	movlb	1	; () banked
 21582  013EE0  258E               	addwf	(??_SET_RTC_TIME+2)& (0+255),w,b
 21583  013EE2  0101               	movlb	1	; () banked
 21584  013EE4  258C               	addwf	??_SET_RTC_TIME& (0+255),w,b
 21585  013EE6  0101               	movlb	1	; () banked
 21586  013EE8  6F92               	movwf	(SET_RTC_TIME@temp+2)& (0+255),b
 21587                           
 21588                           ; BSR set to: 1
 21589                           ;RTC.c: 131: Error = I2C_Write_At_Address( 0b1101000, 0x02, temp[2] );
 21590  013EEA  0E02               	movlw	2
 21591  013EEC  0101               	movlb	1	; () banked
 21592  013EEE  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 21593  013EF0  C192  F17F         	movff	SET_RTC_TIME@temp+2,I2C_Write_At_Address@data
 21594  013EF4  0E68               	movlw	104
 21595  013EF6  ECB8  F0AC         	call	_I2C_Write_At_Address
 21596  013EFA  0101               	movlb	1	; () banked
 21597  013EFC  6F97               	movwf	SET_RTC_TIME@Error& (0+255),b
 21598                           
 21599                           ; BSR set to: 1
 21600                           ;RTC.c: 132: if(Error)
 21601  013EFE  0101               	movlb	1	; () banked
 21602  013F00  5197               	movf	SET_RTC_TIME@Error& (0+255),w,b
 21603  013F02  B4D8               	btfsc	status,2,c
 21604  013F04  D002               	goto	l993
 21605                           
 21606                           ; BSR set to: 1
 21607                           ;RTC.c: 133: {
 21608                           ;RTC.c: 134: return 3;
 21609  013F06  0E03               	movlw	3
 21610  013F08  0012               	return	
 21611  013F0A                     l993:
 21612                           
 21613                           ; BSR set to: 1
 21614                           ;RTC.c: 135: }
 21615                           ;RTC.c: 137: temp[3] = (SetTime.Day);
 21616  013F0A  C188  F193         	movff	SET_RTC_TIME@SetTime+5,SET_RTC_TIME@temp+3
 21617                           
 21618                           ; BSR set to: 1
 21619                           ;RTC.c: 138: Error = I2C_Write_At_Address( 0b1101000, 0x03, temp[3] );
 21620  013F0E  0E03               	movlw	3
 21621  013F10  0101               	movlb	1	; () banked
 21622  013F12  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 21623  013F14  C193  F17F         	movff	SET_RTC_TIME@temp+3,I2C_Write_At_Address@data
 21624  013F18  0E68               	movlw	104
 21625  013F1A  ECB8  F0AC         	call	_I2C_Write_At_Address
 21626  013F1E  0101               	movlb	1	; () banked
 21627  013F20  6F97               	movwf	SET_RTC_TIME@Error& (0+255),b
 21628                           
 21629                           ; BSR set to: 1
 21630                           ;RTC.c: 139: if(Error)
 21631  013F22  0101               	movlb	1	; () banked
 21632  013F24  5197               	movf	SET_RTC_TIME@Error& (0+255),w,b
 21633  013F26  B4D8               	btfsc	status,2,c
 21634  013F28  D002               	goto	l10858
 21635                           
 21636                           ; BSR set to: 1
 21637                           ;RTC.c: 140: {
 21638                           ;RTC.c: 141: return 4;
 21639  013F2A  0E04               	movlw	4
 21640  013F2C  0012               	return	
 21641  013F2E                     l10858:
 21642                           
 21643                           ; BSR set to: 1
 21644                           ;RTC.c: 142: }
 21645                           ;RTC.c: 144: temp[4] = ((SetTime.Date /10) << 4) + (SetTime.Date % 10);
 21646  013F2E  0101               	movlb	1	; () banked
 21647  013F30  C189  F17B         	movff	SET_RTC_TIME@SetTime+6,___awmod@dividend
 21648  013F34  0101               	movlb	1	; () banked
 21649  013F36  6B7C               	clrf	(___awmod@dividend+1)& (0+255),b
 21650  013F38  0E00               	movlw	0
 21651  013F3A  0101               	movlb	1	; () banked
 21652  013F3C  6F7E               	movwf	(___awmod@divisor+1)& (0+255),b
 21653  013F3E  0E0A               	movlw	10
 21654  013F40  0101               	movlb	1	; () banked
 21655  013F42  6F7D               	movwf	___awmod@divisor& (0+255),b
 21656  013F44  EC47  F0AB         	call	___awmod	;wreg free
 21657  013F48  C17B  F18C         	movff	?___awmod,??_SET_RTC_TIME
 21658  013F4C  C17C  F18D         	movff	?___awmod+1,??_SET_RTC_TIME+1
 21659  013F50  0101               	movlb	1	; () banked
 21660  013F52  C189  F17B         	movff	SET_RTC_TIME@SetTime+6,___awdiv@dividend
 21661  013F56  0101               	movlb	1	; () banked
 21662  013F58  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
 21663  013F5A  0E00               	movlw	0
 21664  013F5C  0101               	movlb	1	; () banked
 21665  013F5E  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
 21666  013F60  0E0A               	movlw	10
 21667  013F62  0101               	movlb	1	; () banked
 21668  013F64  6F7D               	movwf	___awdiv@divisor& (0+255),b
 21669  013F66  EC91  F0A9         	call	___awdiv	;wreg free
 21670  013F6A  0101               	movlb	1	; () banked
 21671  013F6C  397B               	swapf	?___awdiv& (0+255),w,b
 21672  013F6E  0BF0               	andlw	240
 21673  013F70  0101               	movlb	1	; () banked
 21674  013F72  258C               	addwf	??_SET_RTC_TIME& (0+255),w,b
 21675  013F74  0101               	movlb	1	; () banked
 21676  013F76  6F94               	movwf	(SET_RTC_TIME@temp+4)& (0+255),b
 21677                           
 21678                           ; BSR set to: 1
 21679                           ;RTC.c: 145: Error = I2C_Write_At_Address( 0b1101000, 0x04, temp[4] );
 21680  013F78  0E04               	movlw	4
 21681  013F7A  0101               	movlb	1	; () banked
 21682  013F7C  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 21683  013F7E  C194  F17F         	movff	SET_RTC_TIME@temp+4,I2C_Write_At_Address@data
 21684  013F82  0E68               	movlw	104
 21685  013F84  ECB8  F0AC         	call	_I2C_Write_At_Address
 21686  013F88  0101               	movlb	1	; () banked
 21687  013F8A  6F97               	movwf	SET_RTC_TIME@Error& (0+255),b
 21688                           
 21689                           ; BSR set to: 1
 21690                           ;RTC.c: 146: if(Error)
 21691  013F8C  0101               	movlb	1	; () banked
 21692  013F8E  5197               	movf	SET_RTC_TIME@Error& (0+255),w,b
 21693  013F90  B4D8               	btfsc	status,2,c
 21694  013F92  D002               	goto	l10868
 21695                           
 21696                           ; BSR set to: 1
 21697                           ;RTC.c: 147: {
 21698                           ;RTC.c: 148: return 5;
 21699  013F94  0E05               	movlw	5
 21700  013F96  0012               	return	
 21701  013F98                     l10868:
 21702                           
 21703                           ; BSR set to: 1
 21704                           ;RTC.c: 149: }
 21705                           ;RTC.c: 151: temp[5] = ((SetTime.Month /10) << 4) + (SetTime.Month % 10);
 21706  013F98  0101               	movlb	1	; () banked
 21707  013F9A  C18A  F17B         	movff	SET_RTC_TIME@SetTime+7,___awmod@dividend
 21708  013F9E  0101               	movlb	1	; () banked
 21709  013FA0  6B7C               	clrf	(___awmod@dividend+1)& (0+255),b
 21710  013FA2  0E00               	movlw	0
 21711  013FA4  0101               	movlb	1	; () banked
 21712  013FA6  6F7E               	movwf	(___awmod@divisor+1)& (0+255),b
 21713  013FA8  0E0A               	movlw	10
 21714  013FAA  0101               	movlb	1	; () banked
 21715  013FAC  6F7D               	movwf	___awmod@divisor& (0+255),b
 21716  013FAE  EC47  F0AB         	call	___awmod	;wreg free
 21717  013FB2  C17B  F18C         	movff	?___awmod,??_SET_RTC_TIME
 21718  013FB6  C17C  F18D         	movff	?___awmod+1,??_SET_RTC_TIME+1
 21719  013FBA  0101               	movlb	1	; () banked
 21720  013FBC  C18A  F17B         	movff	SET_RTC_TIME@SetTime+7,___awdiv@dividend
 21721  013FC0  0101               	movlb	1	; () banked
 21722  013FC2  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
 21723  013FC4  0E00               	movlw	0
 21724  013FC6  0101               	movlb	1	; () banked
 21725  013FC8  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
 21726  013FCA  0E0A               	movlw	10
 21727  013FCC  0101               	movlb	1	; () banked
 21728  013FCE  6F7D               	movwf	___awdiv@divisor& (0+255),b
 21729  013FD0  EC91  F0A9         	call	___awdiv	;wreg free
 21730  013FD4  0101               	movlb	1	; () banked
 21731  013FD6  397B               	swapf	?___awdiv& (0+255),w,b
 21732  013FD8  0BF0               	andlw	240
 21733  013FDA  0101               	movlb	1	; () banked
 21734  013FDC  258C               	addwf	??_SET_RTC_TIME& (0+255),w,b
 21735  013FDE  0101               	movlb	1	; () banked
 21736  013FE0  6F95               	movwf	(SET_RTC_TIME@temp+5)& (0+255),b
 21737                           
 21738                           ; BSR set to: 1
 21739                           ;RTC.c: 152: Error = I2C_Write_At_Address( 0b1101000, 0x05, temp[5] );
 21740  013FE2  0E05               	movlw	5
 21741  013FE4  0101               	movlb	1	; () banked
 21742  013FE6  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 21743  013FE8  C195  F17F         	movff	SET_RTC_TIME@temp+5,I2C_Write_At_Address@data
 21744  013FEC  0E68               	movlw	104
 21745  013FEE  ECB8  F0AC         	call	_I2C_Write_At_Address
 21746  013FF2  0101               	movlb	1	; () banked
 21747  013FF4  6F97               	movwf	SET_RTC_TIME@Error& (0+255),b
 21748                           
 21749                           ; BSR set to: 1
 21750                           ;RTC.c: 153: if(Error)
 21751  013FF6  0101               	movlb	1	; () banked
 21752  013FF8  5197               	movf	SET_RTC_TIME@Error& (0+255),w,b
 21753  013FFA  B4D8               	btfsc	status,2,c
 21754  013FFC  D002               	goto	l10878
 21755                           
 21756                           ; BSR set to: 1
 21757                           ;RTC.c: 154: {
 21758                           ;RTC.c: 155: return 6;
 21759  013FFE  0E06               	movlw	6
 21760  014000  0012               	return	
 21761  014002                     l10878:
 21762                           
 21763                           ; BSR set to: 1
 21764                           ;RTC.c: 156: }
 21765                           ;RTC.c: 158: temp[6] = ((SetTime.Year /10) << 4) + (SetTime.Year % 10);
 21766  014002  0101               	movlb	1	; () banked
 21767  014004  C18B  F17B         	movff	SET_RTC_TIME@SetTime+8,___awmod@dividend
 21768  014008  0101               	movlb	1	; () banked
 21769  01400A  6B7C               	clrf	(___awmod@dividend+1)& (0+255),b
 21770  01400C  0E00               	movlw	0
 21771  01400E  0101               	movlb	1	; () banked
 21772  014010  6F7E               	movwf	(___awmod@divisor+1)& (0+255),b
 21773  014012  0E0A               	movlw	10
 21774  014014  0101               	movlb	1	; () banked
 21775  014016  6F7D               	movwf	___awmod@divisor& (0+255),b
 21776  014018  EC47  F0AB         	call	___awmod	;wreg free
 21777  01401C  C17B  F18C         	movff	?___awmod,??_SET_RTC_TIME
 21778  014020  C17C  F18D         	movff	?___awmod+1,??_SET_RTC_TIME+1
 21779  014024  0101               	movlb	1	; () banked
 21780  014026  C18B  F17B         	movff	SET_RTC_TIME@SetTime+8,___awdiv@dividend
 21781  01402A  0101               	movlb	1	; () banked
 21782  01402C  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
 21783  01402E  0E00               	movlw	0
 21784  014030  0101               	movlb	1	; () banked
 21785  014032  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
 21786  014034  0E0A               	movlw	10
 21787  014036  0101               	movlb	1	; () banked
 21788  014038  6F7D               	movwf	___awdiv@divisor& (0+255),b
 21789  01403A  EC91  F0A9         	call	___awdiv	;wreg free
 21790  01403E  0101               	movlb	1	; () banked
 21791  014040  397B               	swapf	?___awdiv& (0+255),w,b
 21792  014042  0BF0               	andlw	240
 21793  014044  0101               	movlb	1	; () banked
 21794  014046  258C               	addwf	??_SET_RTC_TIME& (0+255),w,b
 21795  014048  0101               	movlb	1	; () banked
 21796  01404A  6F96               	movwf	(SET_RTC_TIME@temp+6)& (0+255),b
 21797                           
 21798                           ; BSR set to: 1
 21799                           ;RTC.c: 159: Error = I2C_Write_At_Address( 0b1101000, 0x06, temp[6] );
 21800  01404C  0E06               	movlw	6
 21801  01404E  0101               	movlb	1	; () banked
 21802  014050  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 21803  014052  C196  F17F         	movff	SET_RTC_TIME@temp+6,I2C_Write_At_Address@data
 21804  014056  0E68               	movlw	104
 21805  014058  ECB8  F0AC         	call	_I2C_Write_At_Address
 21806  01405C  0101               	movlb	1	; () banked
 21807  01405E  6F97               	movwf	SET_RTC_TIME@Error& (0+255),b
 21808                           
 21809                           ; BSR set to: 1
 21810                           ;RTC.c: 160: if(Error)
 21811  014060  0101               	movlb	1	; () banked
 21812  014062  5197               	movf	SET_RTC_TIME@Error& (0+255),w,b
 21813  014064  B4D8               	btfsc	status,2,c
 21814  014066  D002               	goto	l10888
 21815                           
 21816                           ; BSR set to: 1
 21817                           ;RTC.c: 161: {
 21818                           ;RTC.c: 162: return 7;
 21819  014068  0E07               	movlw	7
 21820  01406A  0012               	return	
 21821  01406C                     l10888:
 21822                           
 21823                           ; BSR set to: 1
 21824                           ;RTC.c: 163: }
 21825                           ;RTC.c: 165: return 0;
 21826  01406C  0E00               	movlw	0
 21827  01406E  0012               	return	
 21828  014070                     __end_of_SET_RTC_TIME:
 21829                           	opt stack 0
 21830                           tblptru	equ	0xFF8
 21831                           tblptrh	equ	0xFF7
 21832                           tblptrl	equ	0xFF6
 21833                           tablat	equ	0xFF5
 21834                           prodh	equ	0xFF4
 21835                           prodl	equ	0xFF3
 21836                           intcon	equ	0xFF2
 21837                           postinc0	equ	0xFEE
 21838                           wreg	equ	0xFE8
 21839                           indf1	equ	0xFE7
 21840                           postinc1	equ	0xFE6
 21841                           postdec1	equ	0xFE5
 21842                           fsr1h	equ	0xFE2
 21843                           fsr1l	equ	0xFE1
 21844                           indf2	equ	0xFDF
 21845                           postinc2	equ	0xFDE
 21846                           postdec2	equ	0xFDD
 21847                           fsr2h	equ	0xFDA
 21848                           fsr2l	equ	0xFD9
 21849                           status	equ	0xFD8
 21850                           
 21851 ;; *************** function ___awmod *****************
 21852 ;; Defined at:
 21853 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
 21854 ;; Parameters:    Size  Location     Type
 21855 ;;  dividend        2   14[BANK1 ] int 
 21856 ;;  divisor         2   16[BANK1 ] int 
 21857 ;; Auto vars:     Size  Location     Type
 21858 ;;  sign            1   19[BANK1 ] unsigned char 
 21859 ;;  counter         1   18[BANK1 ] unsigned char 
 21860 ;; Return value:  Size  Location     Type
 21861 ;;                  2   14[BANK1 ] int 
 21862 ;; Registers used:
 21863 ;;		wreg, status,2, status,0, prodl
 21864 ;; Tracked objects:
 21865 ;;		On entry : 0/0
 21866 ;;		On exit  : 0/0
 21867 ;;		Unchanged: 0/0
 21868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21869 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 21870 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 21871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21872 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 21873 ;;Total ram usage:        6 bytes
 21874 ;; Hardware stack levels used:    1
 21875 ;; Hardware stack levels required when called:    6
 21876 ;; This function calls:
 21877 ;;		Nothing
 21878 ;; This function is called by:
 21879 ;;		_SET_RTC_TIME
 21880 ;; This function uses a non-reentrant model
 21881 ;;
 21882                           
 21883                           	psect	text46
 21884  01568E                     __ptext46:
 21885                           	opt stack 0
 21886  01568E                     ___awmod:
 21887                           	opt stack 21
 21888                           
 21889                           ; BSR set to: 1
 21890                           ;incstack = 0
 21891  01568E  0E00               	movlw	0
 21892  015690  0101               	movlb	1	; () banked
 21893  015692  6F80               	movwf	___awmod@sign& (0+255),b
 21894                           
 21895                           ; BSR set to: 1
 21896  015694  0101               	movlb	1	; () banked
 21897  015696  517C               	movf	(___awmod@dividend+1)& (0+255),w,b
 21898  015698  0A80               	xorlw	128
 21899  01569A  6EF3               	movwf	prodl,c
 21900  01569C  0E80               	movlw	128
 21901  01569E  5CF3               	subwf	prodl,w,c
 21902  0156A0  0E00               	movlw	0
 21903  0156A2  B4D8               	btfsc	status,2,c
 21904  0156A4  5D7B               	subwf	___awmod@dividend& (0+255),w,b
 21905  0156A6  B0D8               	btfsc	status,0,c
 21906  0156A8  D009               	goto	l10024
 21907                           
 21908                           ; BSR set to: 1
 21909  0156AA  0101               	movlb	1	; () banked
 21910  0156AC  6D7B               	negf	___awmod@dividend& (0+255),b
 21911  0156AE  0101               	movlb	1	; () banked
 21912  0156B0  1F7C               	comf	(___awmod@dividend+1)& (0+255),f,b
 21913  0156B2  B0D8               	btfsc	status,0,c
 21914  0156B4  2B7C               	incf	(___awmod@dividend+1)& (0+255),f,b
 21915                           
 21916                           ; BSR set to: 1
 21917  0156B6  0E01               	movlw	1
 21918  0156B8  0101               	movlb	1	; () banked
 21919  0156BA  6F80               	movwf	___awmod@sign& (0+255),b
 21920  0156BC                     l10024:
 21921                           
 21922                           ; BSR set to: 1
 21923  0156BC  0101               	movlb	1	; () banked
 21924  0156BE  517E               	movf	(___awmod@divisor+1)& (0+255),w,b
 21925  0156C0  0A80               	xorlw	128
 21926  0156C2  6EF3               	movwf	prodl,c
 21927  0156C4  0E80               	movlw	128
 21928  0156C6  5CF3               	subwf	prodl,w,c
 21929  0156C8  0E00               	movlw	0
 21930  0156CA  B4D8               	btfsc	status,2,c
 21931  0156CC  5D7D               	subwf	___awmod@divisor& (0+255),w,b
 21932  0156CE  B0D8               	btfsc	status,0,c
 21933  0156D0  D006               	goto	l10028
 21934                           
 21935                           ; BSR set to: 1
 21936  0156D2  0101               	movlb	1	; () banked
 21937  0156D4  6D7D               	negf	___awmod@divisor& (0+255),b
 21938  0156D6  0101               	movlb	1	; () banked
 21939  0156D8  1F7E               	comf	(___awmod@divisor+1)& (0+255),f,b
 21940  0156DA  B0D8               	btfsc	status,0,c
 21941  0156DC  2B7E               	incf	(___awmod@divisor+1)& (0+255),f,b
 21942  0156DE                     l10028:
 21943                           
 21944                           ; BSR set to: 1
 21945  0156DE  0101               	movlb	1	; () banked
 21946  0156E0  517E               	movf	(___awmod@divisor+1)& (0+255),w,b
 21947  0156E2  117D               	iorwf	___awmod@divisor& (0+255),w,b
 21948  0156E4  B4D8               	btfsc	status,2,c
 21949  0156E6  D026               	goto	l10044
 21950                           
 21951                           ; BSR set to: 1
 21952  0156E8  0E01               	movlw	1
 21953  0156EA  0101               	movlb	1	; () banked
 21954  0156EC  6F7F               	movwf	___awmod@counter& (0+255),b
 21955  0156EE  D006               	goto	l10034
 21956  0156F0                     l10032:
 21957                           
 21958                           ; BSR set to: 1
 21959  0156F0  0101               	movlb	1	; () banked
 21960  0156F2  90D8               	bcf	status,0,c
 21961  0156F4  377D               	rlcf	___awmod@divisor& (0+255),f,b
 21962  0156F6  377E               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 21963  0156F8  0101               	movlb	1	; () banked
 21964  0156FA  2B7F               	incf	___awmod@counter& (0+255),f,b
 21965  0156FC                     l10034:
 21966                           
 21967                           ; BSR set to: 1
 21968  0156FC  0101               	movlb	1	; () banked
 21969  0156FE  AF7E               	btfss	(___awmod@divisor+1)& (0+255),7,b
 21970  015700  D7F7               	goto	l10032
 21971  015702                     l10036:
 21972                           
 21973                           ; BSR set to: 1
 21974  015702  0101               	movlb	1	; () banked
 21975  015704  517D               	movf	___awmod@divisor& (0+255),w,b
 21976  015706  0101               	movlb	1	; () banked
 21977  015708  5D7B               	subwf	___awmod@dividend& (0+255),w,b
 21978  01570A  0101               	movlb	1	; () banked
 21979  01570C  517E               	movf	(___awmod@divisor+1)& (0+255),w,b
 21980  01570E  0101               	movlb	1	; () banked
 21981  015710  597C               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 21982  015712  A0D8               	btfss	status,0,c
 21983  015714  D008               	goto	l10040
 21984                           
 21985                           ; BSR set to: 1
 21986  015716  0101               	movlb	1	; () banked
 21987  015718  517D               	movf	___awmod@divisor& (0+255),w,b
 21988  01571A  0101               	movlb	1	; () banked
 21989  01571C  5F7B               	subwf	___awmod@dividend& (0+255),f,b
 21990  01571E  0101               	movlb	1	; () banked
 21991  015720  517E               	movf	(___awmod@divisor+1)& (0+255),w,b
 21992  015722  0101               	movlb	1	; () banked
 21993  015724  5B7C               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 21994  015726                     l10040:
 21995                           
 21996                           ; BSR set to: 1
 21997  015726  0101               	movlb	1	; () banked
 21998  015728  90D8               	bcf	status,0,c
 21999  01572A  337E               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 22000  01572C  337D               	rrcf	___awmod@divisor& (0+255),f,b
 22001                           
 22002                           ; BSR set to: 1
 22003  01572E  0101               	movlb	1	; () banked
 22004  015730  2F7F               	decfsz	___awmod@counter& (0+255),f,b
 22005  015732  D7E7               	goto	l10036
 22006  015734                     l10044:
 22007                           
 22008                           ; BSR set to: 1
 22009  015734  0101               	movlb	1	; () banked
 22010  015736  5180               	movf	___awmod@sign& (0+255),w,b
 22011  015738  B4D8               	btfsc	status,2,c
 22012  01573A  D006               	goto	l10048
 22013                           
 22014                           ; BSR set to: 1
 22015  01573C  0101               	movlb	1	; () banked
 22016  01573E  6D7B               	negf	___awmod@dividend& (0+255),b
 22017  015740  0101               	movlb	1	; () banked
 22018  015742  1F7C               	comf	(___awmod@dividend+1)& (0+255),f,b
 22019  015744  B0D8               	btfsc	status,0,c
 22020  015746  2B7C               	incf	(___awmod@dividend+1)& (0+255),f,b
 22021  015748                     l10048:
 22022                           
 22023                           ; BSR set to: 1
 22024  015748  C17B  F17B         	movff	___awmod@dividend,?___awmod
 22025  01574C  C17C  F17C         	movff	___awmod@dividend+1,?___awmod+1
 22026  015750  0012               	return	
 22027  015752                     __end_of___awmod:
 22028                           	opt stack 0
 22029                           tblptru	equ	0xFF8
 22030                           tblptrh	equ	0xFF7
 22031                           tblptrl	equ	0xFF6
 22032                           tablat	equ	0xFF5
 22033                           prodh	equ	0xFF4
 22034                           prodl	equ	0xFF3
 22035                           intcon	equ	0xFF2
 22036                           postinc0	equ	0xFEE
 22037                           wreg	equ	0xFE8
 22038                           indf1	equ	0xFE7
 22039                           postinc1	equ	0xFE6
 22040                           postdec1	equ	0xFE5
 22041                           fsr1h	equ	0xFE2
 22042                           fsr1l	equ	0xFE1
 22043                           indf2	equ	0xFDF
 22044                           postinc2	equ	0xFDE
 22045                           postdec2	equ	0xFDD
 22046                           fsr2h	equ	0xFDA
 22047                           fsr2l	equ	0xFD9
 22048                           status	equ	0xFD8
 22049                           
 22050 ;; *************** function ___awdiv *****************
 22051 ;; Defined at:
 22052 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
 22053 ;; Parameters:    Size  Location     Type
 22054 ;;  dividend        2   14[BANK1 ] int 
 22055 ;;  divisor         2   16[BANK1 ] int 
 22056 ;; Auto vars:     Size  Location     Type
 22057 ;;  quotient        2   20[BANK1 ] int 
 22058 ;;  sign            1   19[BANK1 ] unsigned char 
 22059 ;;  counter         1   18[BANK1 ] unsigned char 
 22060 ;; Return value:  Size  Location     Type
 22061 ;;                  2   14[BANK1 ] int 
 22062 ;; Registers used:
 22063 ;;		wreg, status,2, status,0, prodl
 22064 ;; Tracked objects:
 22065 ;;		On entry : 0/0
 22066 ;;		On exit  : 0/0
 22067 ;;		Unchanged: 0/0
 22068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22069 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22070 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22072 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 22073 ;;Total ram usage:        8 bytes
 22074 ;; Hardware stack levels used:    1
 22075 ;; Hardware stack levels required when called:    6
 22076 ;; This function calls:
 22077 ;;		Nothing
 22078 ;; This function is called by:
 22079 ;;		_SET_RTC_TIME
 22080 ;; This function uses a non-reentrant model
 22081 ;;
 22082                           
 22083                           	psect	text47
 22084  015322                     __ptext47:
 22085                           	opt stack 0
 22086  015322                     ___awdiv:
 22087                           	opt stack 21
 22088                           
 22089                           ; BSR set to: 1
 22090                           ;incstack = 0
 22091  015322  0E00               	movlw	0
 22092  015324  0101               	movlb	1	; () banked
 22093  015326  6F80               	movwf	___awdiv@sign& (0+255),b
 22094                           
 22095                           ; BSR set to: 1
 22096  015328  0101               	movlb	1	; () banked
 22097  01532A  517E               	movf	(___awdiv@divisor+1)& (0+255),w,b
 22098  01532C  0A80               	xorlw	128
 22099  01532E  6EF3               	movwf	prodl,c
 22100  015330  0E80               	movlw	128
 22101  015332  5CF3               	subwf	prodl,w,c
 22102  015334  0E00               	movlw	0
 22103  015336  B4D8               	btfsc	status,2,c
 22104  015338  5D7D               	subwf	___awdiv@divisor& (0+255),w,b
 22105  01533A  B0D8               	btfsc	status,0,c
 22106  01533C  D009               	goto	l9980
 22107                           
 22108                           ; BSR set to: 1
 22109  01533E  0101               	movlb	1	; () banked
 22110  015340  6D7D               	negf	___awdiv@divisor& (0+255),b
 22111  015342  0101               	movlb	1	; () banked
 22112  015344  1F7E               	comf	(___awdiv@divisor+1)& (0+255),f,b
 22113  015346  B0D8               	btfsc	status,0,c
 22114  015348  2B7E               	incf	(___awdiv@divisor+1)& (0+255),f,b
 22115                           
 22116                           ; BSR set to: 1
 22117  01534A  0E01               	movlw	1
 22118  01534C  0101               	movlb	1	; () banked
 22119  01534E  6F80               	movwf	___awdiv@sign& (0+255),b
 22120  015350                     l9980:
 22121                           
 22122                           ; BSR set to: 1
 22123  015350  0101               	movlb	1	; () banked
 22124  015352  517C               	movf	(___awdiv@dividend+1)& (0+255),w,b
 22125  015354  0A80               	xorlw	128
 22126  015356  6EF3               	movwf	prodl,c
 22127  015358  0E80               	movlw	128
 22128  01535A  5CF3               	subwf	prodl,w,c
 22129  01535C  0E00               	movlw	0
 22130  01535E  B4D8               	btfsc	status,2,c
 22131  015360  5D7B               	subwf	___awdiv@dividend& (0+255),w,b
 22132  015362  B0D8               	btfsc	status,0,c
 22133  015364  D009               	goto	l9986
 22134                           
 22135                           ; BSR set to: 1
 22136  015366  0101               	movlb	1	; () banked
 22137  015368  6D7B               	negf	___awdiv@dividend& (0+255),b
 22138  01536A  0101               	movlb	1	; () banked
 22139  01536C  1F7C               	comf	(___awdiv@dividend+1)& (0+255),f,b
 22140  01536E  B0D8               	btfsc	status,0,c
 22141  015370  2B7C               	incf	(___awdiv@dividend+1)& (0+255),f,b
 22142                           
 22143                           ; BSR set to: 1
 22144  015372  0E01               	movlw	1
 22145  015374  0101               	movlb	1	; () banked
 22146  015376  1B80               	xorwf	___awdiv@sign& (0+255),f,b
 22147  015378                     l9986:
 22148                           
 22149                           ; BSR set to: 1
 22150  015378  0E00               	movlw	0
 22151  01537A  0101               	movlb	1	; () banked
 22152  01537C  6F82               	movwf	(___awdiv@quotient+1)& (0+255),b
 22153  01537E  0E00               	movlw	0
 22154  015380  0101               	movlb	1	; () banked
 22155  015382  6F81               	movwf	___awdiv@quotient& (0+255),b
 22156                           
 22157                           ; BSR set to: 1
 22158  015384  0101               	movlb	1	; () banked
 22159  015386  517E               	movf	(___awdiv@divisor+1)& (0+255),w,b
 22160  015388  117D               	iorwf	___awdiv@divisor& (0+255),w,b
 22161  01538A  B4D8               	btfsc	status,2,c
 22162  01538C  D02C               	goto	l10008
 22163                           
 22164                           ; BSR set to: 1
 22165  01538E  0E01               	movlw	1
 22166  015390  0101               	movlb	1	; () banked
 22167  015392  6F7F               	movwf	___awdiv@counter& (0+255),b
 22168  015394  D006               	goto	l9994
 22169  015396                     l9992:
 22170                           
 22171                           ; BSR set to: 1
 22172  015396  0101               	movlb	1	; () banked
 22173  015398  90D8               	bcf	status,0,c
 22174  01539A  377D               	rlcf	___awdiv@divisor& (0+255),f,b
 22175  01539C  377E               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 22176  01539E  0101               	movlb	1	; () banked
 22177  0153A0  2B7F               	incf	___awdiv@counter& (0+255),f,b
 22178  0153A2                     l9994:
 22179                           
 22180                           ; BSR set to: 1
 22181  0153A2  0101               	movlb	1	; () banked
 22182  0153A4  AF7E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 22183  0153A6  D7F7               	goto	l9992
 22184  0153A8                     l9996:
 22185                           
 22186                           ; BSR set to: 1
 22187  0153A8  0101               	movlb	1	; () banked
 22188  0153AA  90D8               	bcf	status,0,c
 22189  0153AC  3781               	rlcf	___awdiv@quotient& (0+255),f,b
 22190  0153AE  3782               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 22191                           
 22192                           ; BSR set to: 1
 22193  0153B0  0101               	movlb	1	; () banked
 22194  0153B2  517D               	movf	___awdiv@divisor& (0+255),w,b
 22195  0153B4  0101               	movlb	1	; () banked
 22196  0153B6  5D7B               	subwf	___awdiv@dividend& (0+255),w,b
 22197  0153B8  0101               	movlb	1	; () banked
 22198  0153BA  517E               	movf	(___awdiv@divisor+1)& (0+255),w,b
 22199  0153BC  0101               	movlb	1	; () banked
 22200  0153BE  597C               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 22201  0153C0  A0D8               	btfss	status,0,c
 22202  0153C2  D00A               	goto	l10004
 22203                           
 22204                           ; BSR set to: 1
 22205  0153C4  0101               	movlb	1	; () banked
 22206  0153C6  517D               	movf	___awdiv@divisor& (0+255),w,b
 22207  0153C8  0101               	movlb	1	; () banked
 22208  0153CA  5F7B               	subwf	___awdiv@dividend& (0+255),f,b
 22209  0153CC  0101               	movlb	1	; () banked
 22210  0153CE  517E               	movf	(___awdiv@divisor+1)& (0+255),w,b
 22211  0153D0  0101               	movlb	1	; () banked
 22212  0153D2  5B7C               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 22213                           
 22214                           ; BSR set to: 1
 22215  0153D4  0101               	movlb	1	; () banked
 22216  0153D6  8181               	bsf	___awdiv@quotient& (0+255),0,b
 22217  0153D8                     l10004:
 22218                           
 22219                           ; BSR set to: 1
 22220  0153D8  0101               	movlb	1	; () banked
 22221  0153DA  90D8               	bcf	status,0,c
 22222  0153DC  337E               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 22223  0153DE  337D               	rrcf	___awdiv@divisor& (0+255),f,b
 22224                           
 22225                           ; BSR set to: 1
 22226  0153E0  0101               	movlb	1	; () banked
 22227  0153E2  2F7F               	decfsz	___awdiv@counter& (0+255),f,b
 22228  0153E4  D7E1               	goto	l9996
 22229  0153E6                     l10008:
 22230                           
 22231                           ; BSR set to: 1
 22232  0153E6  0101               	movlb	1	; () banked
 22233  0153E8  5180               	movf	___awdiv@sign& (0+255),w,b
 22234  0153EA  B4D8               	btfsc	status,2,c
 22235  0153EC  D006               	goto	l10012
 22236                           
 22237                           ; BSR set to: 1
 22238  0153EE  0101               	movlb	1	; () banked
 22239  0153F0  6D81               	negf	___awdiv@quotient& (0+255),b
 22240  0153F2  0101               	movlb	1	; () banked
 22241  0153F4  1F82               	comf	(___awdiv@quotient+1)& (0+255),f,b
 22242  0153F6  B0D8               	btfsc	status,0,c
 22243  0153F8  2B82               	incf	(___awdiv@quotient+1)& (0+255),f,b
 22244  0153FA                     l10012:
 22245                           
 22246                           ; BSR set to: 1
 22247  0153FA  C181  F17B         	movff	___awdiv@quotient,?___awdiv
 22248  0153FE  C182  F17C         	movff	___awdiv@quotient+1,?___awdiv+1
 22249  015402  0012               	return	
 22250  015404                     __end_of___awdiv:
 22251                           	opt stack 0
 22252                           tblptru	equ	0xFF8
 22253                           tblptrh	equ	0xFF7
 22254                           tblptrl	equ	0xFF6
 22255                           tablat	equ	0xFF5
 22256                           prodh	equ	0xFF4
 22257                           prodl	equ	0xFF3
 22258                           intcon	equ	0xFF2
 22259                           postinc0	equ	0xFEE
 22260                           wreg	equ	0xFE8
 22261                           indf1	equ	0xFE7
 22262                           postinc1	equ	0xFE6
 22263                           postdec1	equ	0xFE5
 22264                           fsr1h	equ	0xFE2
 22265                           fsr1l	equ	0xFE1
 22266                           indf2	equ	0xFDF
 22267                           postinc2	equ	0xFDE
 22268                           postdec2	equ	0xFDD
 22269                           fsr2h	equ	0xFDA
 22270                           fsr2l	equ	0xFD9
 22271                           status	equ	0xFD8
 22272                           
 22273 ;; *************** function _I2C_Write_At_Address *****************
 22274 ;; Defined at:
 22275 ;;		line 106 in file "I2C.c"
 22276 ;; Parameters:    Size  Location     Type
 22277 ;;  I2Caddress      1    wreg     unsigned char 
 22278 ;;  Register        1   17[BANK1 ] unsigned char 
 22279 ;;  data            1   18[BANK1 ] unsigned char 
 22280 ;; Auto vars:     Size  Location     Type
 22281 ;;  I2Caddress      1   21[BANK1 ] unsigned char 
 22282 ;; Return value:  Size  Location     Type
 22283 ;;                  1    wreg      unsigned char 
 22284 ;; Registers used:
 22285 ;;		wreg, status,2, status,0, cstack
 22286 ;; Tracked objects:
 22287 ;;		On entry : 0/0
 22288 ;;		On exit  : 0/0
 22289 ;;		Unchanged: 0/0
 22290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22291 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22292 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22293 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22294 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 22295 ;;Total ram usage:        5 bytes
 22296 ;; Hardware stack levels used:    1
 22297 ;; Hardware stack levels required when called:    8
 22298 ;; This function calls:
 22299 ;;		_IdleI2C
 22300 ;;		_WriteI2C
 22301 ;; This function is called by:
 22302 ;;		_RTC_Clock_Enable
 22303 ;;		_RTC_TIME_NONMilitary
 22304 ;;		_SET_RTC_TIME
 22305 ;;		_RTC_Clock_Disable
 22306 ;; This function uses a non-reentrant model
 22307 ;;
 22308                           
 22309                           	psect	text48
 22310  015970                     __ptext48:
 22311                           	opt stack 0
 22312  015970                     _I2C_Write_At_Address:
 22313                           	opt stack 19
 22314                           
 22315                           ; BSR set to: 1
 22316                           ;incstack = 0
 22317                           ;I2C_Write_At_Address@I2Caddress stored from wreg
 22318  015970  0101               	movlb	1	; () banked
 22319  015972  6F82               	movwf	I2C_Write_At_Address@I2Caddress& (0+255),b
 22320                           
 22321                           ; BSR set to: 1
 22322                           ;I2C.c: 108: IdleI2C();
 22323  015974  EC70  F0B6         	call	_IdleI2C	;wreg free
 22324                           
 22325                           ;I2C.c: 109: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 22326  015978  80C5               	bsf	4037,0,c	;volatile
 22327  01597A                     l1141:
 22328  01597A  B0C5               	btfsc	4037,0,c	;volatile
 22329  01597C  D7FE               	goto	l1141
 22330  01597E                     l1144:
 22331  01597E  B0C5               	btfsc	4037,0,c	;volatile
 22332  015980  D7FE               	goto	l1144
 22333                           
 22334                           ;I2C.c: 111: if ( PIR2bits.BCLIF )
 22335  015982  A6A1               	btfss	4001,3,c	;volatile
 22336  015984  D002               	goto	l9766
 22337                           
 22338                           ;I2C.c: 112: {
 22339                           ;I2C.c: 113: return ( -1 );
 22340  015986  0EFF               	movlw	255
 22341  015988  0012               	return	
 22342  01598A                     l9766:
 22343                           
 22344                           ;I2C.c: 115: else
 22345                           ;I2C.c: 116: {
 22346                           ;I2C.c: 117: if ( WriteI2C( I2Caddress << 1) & 0xFE )
 22347  01598A  0101               	movlb	1	; () banked
 22348  01598C  5182               	movf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 22349  01598E  0101               	movlb	1	; () banked
 22350  015990  2582               	addwf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 22351  015992  ECB9  F0AF         	call	_WriteI2C
 22352  015996  0101               	movlb	1	; () banked
 22353  015998  6F80               	movwf	??_I2C_Write_At_Address& (0+255),b
 22354  01599A  6B81               	clrf	(??_I2C_Write_At_Address+1)& (0+255),b
 22355  01599C  BF80               	btfsc	??_I2C_Write_At_Address& (0+255),7,b
 22356  01599E  0781               	decf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 22357  0159A0  0EFE               	movlw	254
 22358  0159A2  0101               	movlb	1	; () banked
 22359  0159A4  1780               	andwf	??_I2C_Write_At_Address& (0+255),f,b
 22360  0159A6  0E00               	movlw	0
 22361  0159A8  1781               	andwf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 22362  0159AA  0101               	movlb	1	; () banked
 22363  0159AC  5181               	movf	(??_I2C_Write_At_Address+1)& (0+255),w,b
 22364  0159AE  1180               	iorwf	??_I2C_Write_At_Address& (0+255),w,b
 22365  0159B0  B4D8               	btfsc	status,2,c
 22366  0159B2  D005               	goto	l1150
 22367                           
 22368                           ; BSR set to: 1
 22369                           ;I2C.c: 118: {
 22370                           ;I2C.c: 119: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 22371  0159B4  84C5               	bsf	4037,2,c	;volatile
 22372  0159B6                     l1151:
 22373                           
 22374                           ; BSR set to: 1
 22375  0159B6  B4C5               	btfsc	4037,2,c	;volatile
 22376  0159B8  D7FE               	goto	l1151
 22377                           
 22378                           ; BSR set to: 1
 22379                           ;I2C.c: 120: return ( -3 );
 22380                           
 22381                           ; BSR set to: 1
 22382  0159BA  0EFD               	movlw	253
 22383  0159BC  0012               	return	
 22384  0159BE                     l1150:
 22385                           
 22386                           ; BSR set to: 1
 22387                           ;I2C.c: 121: }
 22388                           ;I2C.c: 124: if ( !SSPCON2bits.ACKSTAT )
 22389  0159BE  BCC5               	btfsc	4037,6,c	;volatile
 22390  0159C0  D01F               	goto	l1154
 22391                           
 22392                           ; BSR set to: 1
 22393                           ;I2C.c: 125: {
 22394                           ;I2C.c: 126: if ( WriteI2C( Register ) )
 22395  0159C2  0101               	movlb	1	; () banked
 22396  0159C4  517E               	movf	I2C_Write_At_Address@Register& (0+255),w,b
 22397  0159C6  ECB9  F0AF         	call	_WriteI2C
 22398  0159CA  0900               	iorlw	0
 22399  0159CC  B4D8               	btfsc	status,2,c
 22400  0159CE  D005               	goto	l1155
 22401                           
 22402                           ;I2C.c: 127: {
 22403                           ;I2C.c: 128: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 22404  0159D0  84C5               	bsf	4037,2,c	;volatile
 22405  0159D2                     l1156:
 22406  0159D2  B4C5               	btfsc	4037,2,c	;volatile
 22407  0159D4  D7FE               	goto	l1156
 22408                           
 22409                           ;I2C.c: 129: return ( -3 );
 22410  0159D6  0EFD               	movlw	253
 22411  0159D8  0012               	return	
 22412  0159DA                     l1155:
 22413                           
 22414                           ;I2C.c: 130: }
 22415                           ;I2C.c: 133: if ( !SSPCON2bits.ACKSTAT )
 22416  0159DA  BCC5               	btfsc	4037,6,c	;volatile
 22417  0159DC  D00C               	goto	l1159
 22418                           
 22419                           ;I2C.c: 134: {
 22420                           ;I2C.c: 135: if ( WriteI2C ( data ) )
 22421  0159DE  0101               	movlb	1	; () banked
 22422  0159E0  517F               	movf	I2C_Write_At_Address@data& (0+255),w,b
 22423  0159E2  ECB9  F0AF         	call	_WriteI2C
 22424  0159E6  0900               	iorlw	0
 22425  0159E8  B4D8               	btfsc	status,2,c
 22426  0159EA  D00F               	goto	l1149
 22427                           
 22428                           ;I2C.c: 136: {
 22429                           ;I2C.c: 137: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 22430  0159EC  84C5               	bsf	4037,2,c	;volatile
 22431  0159EE                     l1161:
 22432  0159EE  B4C5               	btfsc	4037,2,c	;volatile
 22433  0159F0  D7FE               	goto	l1161
 22434                           
 22435                           ;I2C.c: 138: return( -4 );
 22436  0159F2  0EFC               	movlw	252
 22437  0159F4  0012               	return	
 22438  0159F6                     l1159:
 22439                           
 22440                           ;I2C.c: 141: else
 22441                           ;I2C.c: 142: {
 22442                           ;I2C.c: 143: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 22443  0159F6  84C5               	bsf	4037,2,c	;volatile
 22444  0159F8                     l1165:
 22445  0159F8  B4C5               	btfsc	4037,2,c	;volatile
 22446  0159FA  D7FE               	goto	l1165
 22447                           
 22448                           ;I2C.c: 144: return ( -2 );
 22449  0159FC  0EFE               	movlw	254
 22450  0159FE  0012               	return	
 22451  015A00                     l1154:
 22452                           
 22453                           ; BSR set to: 1
 22454                           ;I2C.c: 147: else
 22455                           ;I2C.c: 148: {
 22456                           ;I2C.c: 149: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 22457  015A00  84C5               	bsf	4037,2,c	;volatile
 22458  015A02                     l1169:
 22459                           
 22460                           ; BSR set to: 1
 22461  015A02  B4C5               	btfsc	4037,2,c	;volatile
 22462  015A04  D7FE               	goto	l1169
 22463                           
 22464                           ; BSR set to: 1
 22465                           ;I2C.c: 150: return ( -2 );
 22466                           
 22467                           ; BSR set to: 1
 22468  015A06  0EFE               	movlw	254
 22469  015A08  0012               	return	
 22470  015A0A                     l1149:
 22471                           
 22472                           ;I2C.c: 151: }
 22473                           ;I2C.c: 152: }
 22474                           ;I2C.c: 155: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 22475  015A0A  84C5               	bsf	4037,2,c	;volatile
 22476  015A0C                     l1172:
 22477  015A0C  B4C5               	btfsc	4037,2,c	;volatile
 22478  015A0E  D7FE               	goto	l1172
 22479  015A10                     l1175:
 22480  015A10  B4C5               	btfsc	4037,2,c	;volatile
 22481  015A12  D7FE               	goto	l1175
 22482                           
 22483                           ;I2C.c: 157: if ( PIR2bits.BCLIF )
 22484  015A14  A6A1               	btfss	4001,3,c	;volatile
 22485  015A16  D002               	goto	l9802
 22486                           
 22487                           ;I2C.c: 158: {
 22488                           ;I2C.c: 159: return ( -1 );
 22489  015A18  0EFF               	movlw	255
 22490  015A1A  0012               	return	
 22491  015A1C                     l9802:
 22492                           
 22493                           ;I2C.c: 160: }
 22494                           ;I2C.c: 161: return ( 0 );
 22495  015A1C  0E00               	movlw	0
 22496  015A1E  0012               	return	
 22497  015A20                     __end_of_I2C_Write_At_Address:
 22498                           	opt stack 0
 22499                           tblptru	equ	0xFF8
 22500                           tblptrh	equ	0xFF7
 22501                           tblptrl	equ	0xFF6
 22502                           tablat	equ	0xFF5
 22503                           prodh	equ	0xFF4
 22504                           prodl	equ	0xFF3
 22505                           intcon	equ	0xFF2
 22506                           postinc0	equ	0xFEE
 22507                           wreg	equ	0xFE8
 22508                           indf1	equ	0xFE7
 22509                           postinc1	equ	0xFE6
 22510                           postdec1	equ	0xFE5
 22511                           fsr1h	equ	0xFE2
 22512                           fsr1l	equ	0xFE1
 22513                           indf2	equ	0xFDF
 22514                           postinc2	equ	0xFDE
 22515                           postdec2	equ	0xFDD
 22516                           fsr2h	equ	0xFDA
 22517                           fsr2l	equ	0xFD9
 22518                           status	equ	0xFD8
 22519                           
 22520 ;; *************** function _RemoveSpaces *****************
 22521 ;; Defined at:
 22522 ;;		line 204 in file "MISC.c"
 22523 ;; Parameters:    Size  Location     Type
 22524 ;;  This            2   29[BANK1 ] PTR unsigned char 
 22525 ;;		 -> Rxdata(100), 
 22526 ;; Auto vars:     Size  Location     Type
 22527 ;;  That          100    0[BANK2 ] unsigned char [100]
 22528 ;;  address         2  100[BANK2 ] PTR unsigned char 
 22529 ;;		 -> Rxdata(100), 
 22530 ;;  i               1  102[BANK2 ] unsigned char 
 22531 ;; Return value:  Size  Location     Type
 22532 ;;		None               void
 22533 ;; Registers used:
 22534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22535 ;; Tracked objects:
 22536 ;;		On entry : 0/0
 22537 ;;		On exit  : 0/0
 22538 ;;		Unchanged: 0/0
 22539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22540 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22541 ;;      Locals:         0       0       0     103       0       0       0       0       0       0       0       0       
      +0       0
 22542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22543 ;;      Totals:         0       0       2     103       0       0       0       0       0       0       0       0       
      +0       0
 22544 ;;Total ram usage:      105 bytes
 22545 ;; Hardware stack levels used:    1
 22546 ;; Hardware stack levels required when called:    8
 22547 ;; This function calls:
 22548 ;;		_BufferCopy
 22549 ;;		_cleanBuffer
 22550 ;; This function is called by:
 22551 ;;		_Command
 22552 ;; This function uses a non-reentrant model
 22553 ;;
 22554                           
 22555                           	psect	text49
 22556  01580A                     __ptext49:
 22557                           	opt stack 0
 22558  01580A                     _RemoveSpaces:
 22559                           	opt stack 20
 22560                           
 22561                           ;MISC.c: 207: unsigned char i =0;
 22562                           
 22563                           ;incstack = 0
 22564  01580A  0E00               	movlw	0
 22565  01580C  0102               	movlb	2	; () banked
 22566  01580E  6F66               	movwf	RemoveSpaces@i& (0+255),b
 22567                           
 22568                           ; BSR set to: 2
 22569                           ;MISC.c: 208: unsigned char* address = This;
 22570  015810  0101               	movlb	1	; () banked
 22571  015812  0102               	movlb	2	; () banked
 22572  015814  C18B  F265         	movff	RemoveSpaces@This+1,RemoveSpaces@address+1
 22573  015818  0101               	movlb	1	; () banked
 22574  01581A  0102               	movlb	2	; () banked
 22575  01581C  C18A  F264         	movff	RemoveSpaces@This,RemoveSpaces@address
 22576                           
 22577                           ; BSR set to: 2
 22578                           ;MISC.c: 209: unsigned char That[100];
 22579                           ;MISC.c: 210: cleanBuffer(That,100);
 22580  015820  0102               	movlb	2	; () banked
 22581  015822  0E02               	movlw	high RemoveSpaces@That
 22582  015824  0101               	movlb	1	; () banked
 22583  015826  6F7C               	movwf	(cleanBuffer@data+1)& (0+255),b
 22584  015828  0102               	movlb	2	; () banked
 22585  01582A  0E00               	movlw	low RemoveSpaces@That
 22586  01582C  0101               	movlb	1	; () banked
 22587  01582E  6F7B               	movwf	cleanBuffer@data& (0+255),b
 22588  015830  0E00               	movlw	0
 22589  015832  0101               	movlb	1	; () banked
 22590  015834  6F7E               	movwf	(cleanBuffer@count+1)& (0+255),b
 22591  015836  0E64               	movlw	100
 22592  015838  0101               	movlb	1	; () banked
 22593  01583A  6F7D               	movwf	cleanBuffer@count& (0+255),b
 22594  01583C  ECCC  F0B3         	call	_cleanBuffer	;wreg free
 22595                           
 22596                           ;MISC.c: 211: while(*This != 0)
 22597  015840  D01E               	goto	l10326
 22598  015842                     l10318:
 22599                           
 22600                           ;MISC.c: 212: {
 22601                           ;MISC.c: 213: if(*This != ' ')
 22602  015842  C18A  FFD9         	movff	RemoveSpaces@This,fsr2l
 22603  015846  C18B  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 22604  01584A  50DF               	movf	indf2,w,c
 22605  01584C  0A20               	xorlw	32
 22606  01584E  B4D8               	btfsc	status,2,c
 22607  015850  D013               	goto	l10324
 22608                           
 22609                           ;MISC.c: 214: {
 22610                           ;MISC.c: 215: That[i] = *This;
 22611  015852  C18A  FFD9         	movff	RemoveSpaces@This,fsr2l
 22612  015856  C18B  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 22613  01585A  0102               	movlb	2	; () banked
 22614  01585C  5166               	movf	RemoveSpaces@i& (0+255),w,b
 22615  01585E  0D01               	mullw	1
 22616  015860  0102               	movlb	2	; () banked
 22617  015862  0E00               	movlw	low RemoveSpaces@That
 22618  015864  24F3               	addwf	prodl,w,c
 22619  015866  6EE1               	movwf	fsr1l,c
 22620  015868  0102               	movlb	2	; () banked
 22621  01586A  0E02               	movlw	high RemoveSpaces@That
 22622  01586C  20F4               	addwfc	prodh,w,c
 22623  01586E  6EE2               	movwf	fsr1h,c
 22624  015870  CFDF FFE7          	movff	indf2,indf1
 22625                           
 22626                           ; BSR set to: 2
 22627                           ;MISC.c: 216: i++;
 22628  015874  0102               	movlb	2	; () banked
 22629  015876  2B66               	incf	RemoveSpaces@i& (0+255),f,b
 22630  015878                     l10324:
 22631                           
 22632                           ;MISC.c: 217: }
 22633                           ;MISC.c: 218: This++;
 22634  015878  0101               	movlb	1	; () banked
 22635  01587A  4B8A               	infsnz	RemoveSpaces@This& (0+255),f,b
 22636  01587C  2B8B               	incf	(RemoveSpaces@This+1)& (0+255),f,b
 22637  01587E                     l10326:
 22638  01587E  C18A  FFD9         	movff	RemoveSpaces@This,fsr2l
 22639  015882  C18B  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 22640  015886  50DF               	movf	indf2,w,c
 22641  015888  A4D8               	btfss	status,2,c
 22642  01588A  D7DB               	goto	l10318
 22643                           
 22644                           ;MISC.c: 219: }
 22645                           ;MISC.c: 220: BufferCopy(That,address, 100, 0);
 22646  01588C  0102               	movlb	2	; () banked
 22647  01588E  0E02               	movlw	high RemoveSpaces@That
 22648  015890  0101               	movlb	1	; () banked
 22649  015892  6F84               	movwf	(BufferCopy@from+1)& (0+255),b
 22650  015894  0102               	movlb	2	; () banked
 22651  015896  0E00               	movlw	low RemoveSpaces@That
 22652  015898  0101               	movlb	1	; () banked
 22653  01589A  6F83               	movwf	BufferCopy@from& (0+255),b
 22654  01589C  0102               	movlb	2	; () banked
 22655  01589E  0101               	movlb	1	; () banked
 22656  0158A0  C265  F186         	movff	RemoveSpaces@address+1,BufferCopy@to+1
 22657  0158A4  0102               	movlb	2	; () banked
 22658  0158A6  0101               	movlb	1	; () banked
 22659  0158A8  C264  F185         	movff	RemoveSpaces@address,BufferCopy@to
 22660  0158AC  0E64               	movlw	100
 22661  0158AE  0101               	movlb	1	; () banked
 22662  0158B0  6F87               	movwf	BufferCopy@count& (0+255),b
 22663  0158B2  0E00               	movlw	0
 22664  0158B4  0101               	movlb	1	; () banked
 22665  0158B6  6F88               	movwf	BufferCopy@shift& (0+255),b
 22666  0158B8  ECA9  F0AB         	call	_BufferCopy	;wreg free
 22667  0158BC  0012               	return	
 22668  0158BE                     __end_of_RemoveSpaces:
 22669                           	opt stack 0
 22670                           tblptru	equ	0xFF8
 22671                           tblptrh	equ	0xFF7
 22672                           tblptrl	equ	0xFF6
 22673                           tablat	equ	0xFF5
 22674                           prodh	equ	0xFF4
 22675                           prodl	equ	0xFF3
 22676                           intcon	equ	0xFF2
 22677                           postinc0	equ	0xFEE
 22678                           wreg	equ	0xFE8
 22679                           indf1	equ	0xFE7
 22680                           postinc1	equ	0xFE6
 22681                           postdec1	equ	0xFE5
 22682                           fsr1h	equ	0xFE2
 22683                           fsr1l	equ	0xFE1
 22684                           indf2	equ	0xFDF
 22685                           postinc2	equ	0xFDE
 22686                           postdec2	equ	0xFDD
 22687                           fsr2h	equ	0xFDA
 22688                           fsr2l	equ	0xFD9
 22689                           status	equ	0xFD8
 22690                           
 22691 ;; *************** function _READ_RTC_TIME *****************
 22692 ;; Defined at:
 22693 ;;		line 86 in file "RTC.c"
 22694 ;; Parameters:    Size  Location     Type
 22695 ;;		None
 22696 ;; Auto vars:     Size  Location     Type
 22697 ;;  temp            7   24[BANK1 ] unsigned char [7]
 22698 ;;  Error           1   31[BANK1 ] unsigned char 
 22699 ;; Return value:  Size  Location     Type
 22700 ;;                  1    wreg      unsigned char 
 22701 ;; Registers used:
 22702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22703 ;; Tracked objects:
 22704 ;;		On entry : 0/0
 22705 ;;		On exit  : 0/0
 22706 ;;		Unchanged: 0/0
 22707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22709 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 22710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22711 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 22712 ;;Total ram usage:        8 bytes
 22713 ;; Hardware stack levels used:    1
 22714 ;; Hardware stack levels required when called:    9
 22715 ;; This function calls:
 22716 ;;		_I2C_Read_Sequential
 22717 ;;		_ResetI2C
 22718 ;; This function is called by:
 22719 ;;		_Command
 22720 ;; This function uses a non-reentrant model
 22721 ;;
 22722                           
 22723                           	psect	text50
 22724  01523C                     __ptext50:
 22725                           	opt stack 0
 22726  01523C                     _READ_RTC_TIME:
 22727                           	opt stack 19
 22728                           
 22729                           ;RTC.c: 88: unsigned char Error =0;
 22730                           
 22731                           ;incstack = 0
 22732  01523C  0E00               	movlw	0
 22733  01523E  0101               	movlb	1	; () banked
 22734  015240  6F8C               	movwf	READ_RTC_TIME@Error& (0+255),b
 22735                           
 22736                           ; BSR set to: 1
 22737                           ;RTC.c: 89: unsigned char temp[7];
 22738                           ;RTC.c: 91: Error = I2C_Read_Sequential( 0b1101000, 0x00, temp, 7 );
 22739  015242  0E00               	movlw	0
 22740  015244  0101               	movlb	1	; () banked
 22741  015246  6F80               	movwf	I2C_Read_Sequential@Register& (0+255),b
 22742  015248  0101               	movlb	1	; () banked
 22743  01524A  0E01               	movlw	high READ_RTC_TIME@temp
 22744  01524C  0101               	movlb	1	; () banked
 22745  01524E  6F82               	movwf	(I2C_Read_Sequential@rdptr+1)& (0+255),b
 22746  015250  0101               	movlb	1	; () banked
 22747  015252  0E85               	movlw	low READ_RTC_TIME@temp
 22748  015254  0101               	movlb	1	; () banked
 22749  015256  6F81               	movwf	I2C_Read_Sequential@rdptr& (0+255),b
 22750  015258  0E07               	movlw	7
 22751  01525A  0101               	movlb	1	; () banked
 22752  01525C  6F83               	movwf	I2C_Read_Sequential@length& (0+255),b
 22753  01525E  0E68               	movlw	104
 22754  015260  EC02  F0AA         	call	_I2C_Read_Sequential
 22755  015264  0101               	movlb	1	; () banked
 22756  015266  6F8C               	movwf	READ_RTC_TIME@Error& (0+255),b
 22757                           
 22758                           ; BSR set to: 1
 22759                           ;RTC.c: 93: if(Error == 0 )
 22760  015268  0101               	movlb	1	; () banked
 22761  01526A  678C               	tstfsz	READ_RTC_TIME@Error& (0+255),b
 22762  01526C  D055               	goto	l10532
 22763                           
 22764                           ; BSR set to: 1
 22765                           ;RTC.c: 94: {
 22766                           ;RTC.c: 95: NowTime.Seconds = (temp[0] & 0x0F) + (((temp[0] & 0x70)>> 4) * 10);
 22767  01526E  0101               	movlb	1	; () banked
 22768  015270  3985               	swapf	READ_RTC_TIME@temp& (0+255),w,b
 22769  015272  0B0F               	andlw	15
 22770  015274  0B07               	andlw	7
 22771  015276  0D0A               	mullw	10
 22772  015278  0101               	movlb	1	; () banked
 22773  01527A  5185               	movf	READ_RTC_TIME@temp& (0+255),w,b
 22774  01527C  0B0F               	andlw	15
 22775  01527E  24F3               	addwf	prodl,w,c
 22776  015280  0101               	movlb	1	; () banked
 22777  015282  6F00               	movwf	_NowTime& (0+255),b
 22778                           
 22779                           ;RTC.c: 96: NowTime.Minutes = (temp[1] & 0x0F) + (((temp[1] & 0x70) >> 4) * 10);
 22780  015284  0101               	movlb	1	; () banked
 22781  015286  3986               	swapf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 22782  015288  0B0F               	andlw	15
 22783  01528A  0B07               	andlw	7
 22784  01528C  0D0A               	mullw	10
 22785  01528E  0101               	movlb	1	; () banked
 22786  015290  5186               	movf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 22787  015292  0B0F               	andlw	15
 22788  015294  24F3               	addwf	prodl,w,c
 22789  015296  0101               	movlb	1	; () banked
 22790  015298  6F01               	movwf	(_NowTime+1)& (0+255),b
 22791                           
 22792                           ;RTC.c: 97: NowTime.Hours = (temp[2] & 0x0F) + (((temp[2] & 0x10) >> 4) * 10);
 22793  01529A  0101               	movlb	1	; () banked
 22794  01529C  3987               	swapf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 22795  01529E  0B0F               	andlw	15
 22796  0152A0  0B01               	andlw	1
 22797  0152A2  0D0A               	mullw	10
 22798  0152A4  0101               	movlb	1	; () banked
 22799  0152A6  5187               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 22800  0152A8  0B0F               	andlw	15
 22801  0152AA  24F3               	addwf	prodl,w,c
 22802  0152AC  0101               	movlb	1	; () banked
 22803  0152AE  6F02               	movwf	(_NowTime+2)& (0+255),b
 22804                           
 22805                           ; BSR set to: 1
 22806                           ;RTC.c: 98: NowTime.HoursAM_PM = temp[2] & 0x20;
 22807  0152B0  0101               	movlb	1	; () banked
 22808  0152B2  5187               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 22809  0152B4  0B20               	andlw	32
 22810  0152B6  0101               	movlb	1	; () banked
 22811  0152B8  6F04               	movwf	(_NowTime+4)& (0+255),b
 22812                           
 22813                           ; BSR set to: 1
 22814                           ;RTC.c: 99: NowTime.HoursMilitary = NowTime.Hours + 12 * NowTime.HoursAM_PM;
 22815  0152BA  0101               	movlb	1	; () banked
 22816  0152BC  5104               	movf	(_NowTime+4)& (0+255),w,b
 22817  0152BE  0D0C               	mullw	12
 22818  0152C0  50F3               	movf	prodl,w,c
 22819  0152C2  0101               	movlb	1	; () banked
 22820  0152C4  2502               	addwf	(_NowTime+2)& (0+255),w,b
 22821  0152C6  0101               	movlb	1	; () banked
 22822  0152C8  6F03               	movwf	(_NowTime+3)& (0+255),b
 22823                           
 22824                           ;RTC.c: 100: NowTime.Day = temp[3] & 0x07;
 22825  0152CA  0101               	movlb	1	; () banked
 22826  0152CC  5188               	movf	(READ_RTC_TIME@temp+3)& (0+255),w,b
 22827  0152CE  0B07               	andlw	7
 22828  0152D0  0101               	movlb	1	; () banked
 22829  0152D2  6F05               	movwf	(_NowTime+5)& (0+255),b
 22830                           
 22831                           ; BSR set to: 1
 22832                           ;RTC.c: 101: NowTime.Date = (temp[4] & 0x0F) + (((temp[4] & 0x30)>> 4) * 10);
 22833  0152D4  0101               	movlb	1	; () banked
 22834  0152D6  3989               	swapf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 22835  0152D8  0B0F               	andlw	15
 22836  0152DA  0B03               	andlw	3
 22837  0152DC  0D0A               	mullw	10
 22838  0152DE  0101               	movlb	1	; () banked
 22839  0152E0  5189               	movf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 22840  0152E2  0B0F               	andlw	15
 22841  0152E4  24F3               	addwf	prodl,w,c
 22842  0152E6  0101               	movlb	1	; () banked
 22843  0152E8  6F06               	movwf	(_NowTime+6)& (0+255),b
 22844                           
 22845                           ; BSR set to: 1
 22846                           ;RTC.c: 102: NowTime.Month = (temp[5] & 0x0F) + (((temp[5] & 0x10) >> 4) * 10);
 22847  0152EA  0101               	movlb	1	; () banked
 22848  0152EC  398A               	swapf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 22849  0152EE  0B0F               	andlw	15
 22850  0152F0  0B01               	andlw	1
 22851  0152F2  0D0A               	mullw	10
 22852  0152F4  0101               	movlb	1	; () banked
 22853  0152F6  518A               	movf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 22854  0152F8  0B0F               	andlw	15
 22855  0152FA  24F3               	addwf	prodl,w,c
 22856  0152FC  0101               	movlb	1	; () banked
 22857  0152FE  6F07               	movwf	(_NowTime+7)& (0+255),b
 22858                           
 22859                           ; BSR set to: 1
 22860                           ;RTC.c: 103: NowTime.Year = (temp[6] & 0x0F) + (((temp[6] & 0xF0) >> 4) * 10);
 22861  015300  0101               	movlb	1	; () banked
 22862  015302  398B               	swapf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 22863  015304  0B0F               	andlw	15
 22864  015306  0B0F               	andlw	15
 22865  015308  0D0A               	mullw	10
 22866  01530A  0101               	movlb	1	; () banked
 22867  01530C  518B               	movf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 22868  01530E  0B0F               	andlw	15
 22869  015310  24F3               	addwf	prodl,w,c
 22870  015312  0101               	movlb	1	; () banked
 22871  015314  6F08               	movwf	(_NowTime+8)& (0+255),b
 22872                           
 22873                           ;RTC.c: 104: }
 22874  015316  D002               	goto	l10534
 22875  015318                     l10532:
 22876                           
 22877                           ; BSR set to: 1
 22878                           ;RTC.c: 105: else
 22879                           ;RTC.c: 106: {
 22880                           ;RTC.c: 107: ResetI2C();
 22881  015318  ECEB  F0B5         	call	_ResetI2C	;wreg free
 22882  01531C                     l10534:
 22883                           
 22884                           ;RTC.c: 108: }
 22885                           ;RTC.c: 109: return Error;
 22886  01531C  0101               	movlb	1	; () banked
 22887  01531E  518C               	movf	READ_RTC_TIME@Error& (0+255),w,b
 22888  015320  0012               	return	
 22889  015322                     __end_of_READ_RTC_TIME:
 22890                           	opt stack 0
 22891                           tblptru	equ	0xFF8
 22892                           tblptrh	equ	0xFF7
 22893                           tblptrl	equ	0xFF6
 22894                           tablat	equ	0xFF5
 22895                           prodh	equ	0xFF4
 22896                           prodl	equ	0xFF3
 22897                           intcon	equ	0xFF2
 22898                           postinc0	equ	0xFEE
 22899                           wreg	equ	0xFE8
 22900                           indf1	equ	0xFE7
 22901                           postinc1	equ	0xFE6
 22902                           postdec1	equ	0xFE5
 22903                           fsr1h	equ	0xFE2
 22904                           fsr1l	equ	0xFE1
 22905                           indf2	equ	0xFDF
 22906                           postinc2	equ	0xFDE
 22907                           postdec2	equ	0xFDD
 22908                           fsr2h	equ	0xFDA
 22909                           fsr2l	equ	0xFD9
 22910                           status	equ	0xFD8
 22911                           
 22912 ;; *************** function _ResetI2C *****************
 22913 ;; Defined at:
 22914 ;;		line 50 in file "I2C.c"
 22915 ;; Parameters:    Size  Location     Type
 22916 ;;		None
 22917 ;; Auto vars:     Size  Location     Type
 22918 ;;		None
 22919 ;; Return value:  Size  Location     Type
 22920 ;;		None               void
 22921 ;; Registers used:
 22922 ;;		wreg, status,2, status,0, cstack
 22923 ;; Tracked objects:
 22924 ;;		On entry : 0/0
 22925 ;;		On exit  : 0/0
 22926 ;;		Unchanged: 0/0
 22927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22932 ;;Total ram usage:        0 bytes
 22933 ;; Hardware stack levels used:    1
 22934 ;; Hardware stack levels required when called:    8
 22935 ;; This function calls:
 22936 ;;		_Init_I2C_Master
 22937 ;;		_delayUS
 22938 ;; This function is called by:
 22939 ;;		_RTC_Clock_Enable
 22940 ;;		_RTC_TIME_NONMilitary
 22941 ;;		_READ_RTC_TIME
 22942 ;;		_RTC_Clock_Disable
 22943 ;;		_READ_RTC_SECONDS
 22944 ;; This function uses a non-reentrant model
 22945 ;;
 22946                           
 22947                           	psect	text51
 22948  016BD6                     __ptext51:
 22949                           	opt stack 0
 22950  016BD6                     _ResetI2C:
 22951                           	opt stack 19
 22952                           
 22953                           ;I2C.c: 52: SSPCON1 &= 0xDF;
 22954                           
 22955                           ; BSR set to: 1
 22956                           ;incstack = 0
 22957  016BD6  9AC6               	bcf	4038,5,c	;volatile
 22958                           
 22959                           ;I2C.c: 53: TRISCbits.TRISC3 = 0;
 22960  016BD8  9694               	bcf	3988,3,c	;volatile
 22961                           
 22962                           ;I2C.c: 54: LATC &= ~0b00001000;
 22963  016BDA  968B               	bcf	3979,3,c	;volatile
 22964                           
 22965                           ;I2C.c: 55: delayUS(200);
 22966  016BDC  0EC8               	movlw	200
 22967  016BDE  0101               	movlb	1	; () banked
 22968  016BE0  6F7B               	movwf	delayUS@US& (0+255),b
 22969  016BE2  0E00               	movlw	0
 22970  016BE4  0101               	movlb	1	; () banked
 22971  016BE6  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 22972  016BE8  0E00               	movlw	0
 22973  016BEA  0101               	movlb	1	; () banked
 22974  016BEC  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 22975  016BEE  0E00               	movlw	0
 22976  016BF0  0101               	movlb	1	; () banked
 22977  016BF2  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 22978  016BF4  ECC0  F0B1         	call	_delayUS	;wreg free
 22979                           
 22980                           ;I2C.c: 56: TRISCbits.TRISC3 = 1;
 22981  016BF8  8694               	bsf	3988,3,c	;volatile
 22982                           
 22983                           ;I2C.c: 57: Init_I2C_Master();
 22984  016BFA  ECF8  F0B3         	call	_Init_I2C_Master	;wreg free
 22985  016BFE  0012               	return	
 22986  016C00                     __end_of_ResetI2C:
 22987                           	opt stack 0
 22988                           tblptru	equ	0xFF8
 22989                           tblptrh	equ	0xFF7
 22990                           tblptrl	equ	0xFF6
 22991                           tablat	equ	0xFF5
 22992                           prodh	equ	0xFF4
 22993                           prodl	equ	0xFF3
 22994                           intcon	equ	0xFF2
 22995                           postinc0	equ	0xFEE
 22996                           wreg	equ	0xFE8
 22997                           indf1	equ	0xFE7
 22998                           postinc1	equ	0xFE6
 22999                           postdec1	equ	0xFE5
 23000                           fsr1h	equ	0xFE2
 23001                           fsr1l	equ	0xFE1
 23002                           indf2	equ	0xFDF
 23003                           postinc2	equ	0xFDE
 23004                           postdec2	equ	0xFDD
 23005                           fsr2h	equ	0xFDA
 23006                           fsr2l	equ	0xFD9
 23007                           status	equ	0xFD8
 23008                           
 23009 ;; *************** function _Init_I2C_Master *****************
 23010 ;; Defined at:
 23011 ;;		line 22 in file "I2C.c"
 23012 ;; Parameters:    Size  Location     Type
 23013 ;;		None
 23014 ;; Auto vars:     Size  Location     Type
 23015 ;;  baud            2   16[BANK1 ] unsigned int 
 23016 ;; Return value:  Size  Location     Type
 23017 ;;		None               void
 23018 ;; Registers used:
 23019 ;;		wreg, status,2, status,0, cstack
 23020 ;; Tracked objects:
 23021 ;;		On entry : 0/0
 23022 ;;		On exit  : 0/0
 23023 ;;		Unchanged: 0/0
 23024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23026 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23028 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23029 ;;Total ram usage:        2 bytes
 23030 ;; Hardware stack levels used:    1
 23031 ;; Hardware stack levels required when called:    7
 23032 ;; This function calls:
 23033 ;;		_OpenI2C
 23034 ;; This function is called by:
 23035 ;;		_main
 23036 ;;		_ResetI2C
 23037 ;; This function uses a non-reentrant model
 23038 ;;
 23039                           
 23040                           	psect	text52
 23041  0167F0                     __ptext52:
 23042                           	opt stack 0
 23043  0167F0                     _Init_I2C_Master:
 23044                           	opt stack 19
 23045                           
 23046                           ;I2C.c: 24: unsigned int baud = 0;
 23047                           
 23048                           ;incstack = 0
 23049  0167F0  0E00               	movlw	0
 23050  0167F2  0101               	movlb	1	; () banked
 23051  0167F4  6F7E               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 23052  0167F6  0E00               	movlw	0
 23053  0167F8  0101               	movlb	1	; () banked
 23054  0167FA  6F7D               	movwf	Init_I2C_Master@baud& (0+255),b
 23055                           
 23056                           ;I2C.c: 27: baud = (unsigned char)(41000000L/4 /((4* (long)5 * 1000L) - 1));
 23057  0167FC  0E00               	movlw	0
 23058  0167FE  0101               	movlb	1	; () banked
 23059  016800  6F7E               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 23060  016802  0E00               	movlw	0
 23061  016804  0101               	movlb	1	; () banked
 23062  016806  6F7D               	movwf	Init_I2C_Master@baud& (0+255),b
 23063                           
 23064                           ; BSR set to: 1
 23065                           ;I2C.c: 28: if(baud > 127 || baud == 0)
 23066  016808  0E80               	movlw	128
 23067  01680A  0101               	movlb	1	; () banked
 23068  01680C  5D7D               	subwf	Init_I2C_Master@baud& (0+255),w,b
 23069  01680E  0E00               	movlw	0
 23070  016810  0101               	movlb	1	; () banked
 23071  016812  597E               	subwfb	(Init_I2C_Master@baud+1)& (0+255),w,b
 23072  016814  B0D8               	btfsc	status,0,c
 23073  016816  D005               	goto	l8998
 23074                           
 23075                           ; BSR set to: 1
 23076  016818  0101               	movlb	1	; () banked
 23077  01681A  517E               	movf	(Init_I2C_Master@baud+1)& (0+255),w,b
 23078  01681C  117D               	iorwf	Init_I2C_Master@baud& (0+255),w,b
 23079  01681E  A4D8               	btfss	status,2,c
 23080  016820  D006               	goto	l9000
 23081  016822                     l8998:
 23082                           
 23083                           ; BSR set to: 1
 23084                           ;I2C.c: 29: {
 23085                           ;I2C.c: 30: baud = 127;
 23086  016822  0E00               	movlw	0
 23087  016824  0101               	movlb	1	; () banked
 23088  016826  6F7E               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 23089  016828  0E7F               	movlw	127
 23090  01682A  0101               	movlb	1	; () banked
 23091  01682C  6F7D               	movwf	Init_I2C_Master@baud& (0+255),b
 23092  01682E                     l9000:
 23093                           
 23094                           ; BSR set to: 1
 23095                           ;I2C.c: 31: }
 23096                           ;I2C.c: 32: SSPADD = baud;
 23097  01682E  C17D  FFC8         	movff	Init_I2C_Master@baud,4040	;volatile
 23098                           
 23099                           ; BSR set to: 1
 23100                           ;I2C.c: 33: OpenI2C(0b00001000, 0b10000000);
 23101  016832  0E80               	movlw	128
 23102  016834  0101               	movlb	1	; () banked
 23103  016836  6F7B               	movwf	OpenI2C@slew& (0+255),b
 23104  016838  0E08               	movlw	8
 23105  01683A  EC27  F0B6         	call	_OpenI2C
 23106  01683E  0012               	return	
 23107  016840                     __end_of_Init_I2C_Master:
 23108                           	opt stack 0
 23109                           tblptru	equ	0xFF8
 23110                           tblptrh	equ	0xFF7
 23111                           tblptrl	equ	0xFF6
 23112                           tablat	equ	0xFF5
 23113                           prodh	equ	0xFF4
 23114                           prodl	equ	0xFF3
 23115                           intcon	equ	0xFF2
 23116                           postinc0	equ	0xFEE
 23117                           wreg	equ	0xFE8
 23118                           indf1	equ	0xFE7
 23119                           postinc1	equ	0xFE6
 23120                           postdec1	equ	0xFE5
 23121                           fsr1h	equ	0xFE2
 23122                           fsr1l	equ	0xFE1
 23123                           indf2	equ	0xFDF
 23124                           postinc2	equ	0xFDE
 23125                           postdec2	equ	0xFDD
 23126                           fsr2h	equ	0xFDA
 23127                           fsr2l	equ	0xFD9
 23128                           status	equ	0xFD8
 23129                           
 23130 ;; *************** function _OpenI2C *****************
 23131 ;; Defined at:
 23132 ;;		line 36 in file "I2C.c"
 23133 ;; Parameters:    Size  Location     Type
 23134 ;;  sync_mode       1    wreg     unsigned char 
 23135 ;;  slew            1   14[BANK1 ] unsigned char 
 23136 ;; Auto vars:     Size  Location     Type
 23137 ;;  sync_mode       1   15[BANK1 ] unsigned char 
 23138 ;; Return value:  Size  Location     Type
 23139 ;;		None               void
 23140 ;; Registers used:
 23141 ;;		wreg, status,2, status,0
 23142 ;; Tracked objects:
 23143 ;;		On entry : 0/0
 23144 ;;		On exit  : 0/0
 23145 ;;		Unchanged: 0/0
 23146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23147 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23148 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23150 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23151 ;;Total ram usage:        2 bytes
 23152 ;; Hardware stack levels used:    1
 23153 ;; Hardware stack levels required when called:    6
 23154 ;; This function calls:
 23155 ;;		Nothing
 23156 ;; This function is called by:
 23157 ;;		_Init_I2C_Master
 23158 ;; This function uses a non-reentrant model
 23159 ;;
 23160                           
 23161                           	psect	text53
 23162  016C4E                     __ptext53:
 23163                           	opt stack 0
 23164  016C4E                     _OpenI2C:
 23165                           	opt stack 19
 23166                           
 23167                           ;incstack = 0
 23168                           ;OpenI2C@sync_mode stored from wreg
 23169  016C4E  0101               	movlb	1	; () banked
 23170  016C50  6F7C               	movwf	OpenI2C@sync_mode& (0+255),b
 23171                           
 23172                           ; BSR set to: 1
 23173                           ;I2C.c: 38: SSPSTAT &= 0x3F;
 23174  016C52  0E3F               	movlw	63
 23175  016C54  16C7               	andwf	4039,f,c	;volatile
 23176                           
 23177                           ; BSR set to: 1
 23178                           ;I2C.c: 39: SSPCON1 = 0x00;
 23179  016C56  0E00               	movlw	0
 23180  016C58  6EC6               	movwf	4038,c	;volatile
 23181                           
 23182                           ; BSR set to: 1
 23183                           ;I2C.c: 40: SSPCON2 = 0x00;
 23184  016C5A  0E00               	movlw	0
 23185  016C5C  6EC5               	movwf	4037,c	;volatile
 23186                           
 23187                           ;I2C.c: 41: SSPCON1 |= sync_mode;
 23188  016C5E  0101               	movlb	1	; () banked
 23189  016C60  517C               	movf	OpenI2C@sync_mode& (0+255),w,b
 23190  016C62  12C6               	iorwf	4038,f,c	;volatile
 23191                           
 23192                           ;I2C.c: 42: SSPSTAT |= slew;
 23193  016C64  0101               	movlb	1	; () banked
 23194  016C66  517B               	movf	OpenI2C@slew& (0+255),w,b
 23195  016C68  12C7               	iorwf	4039,f,c	;volatile
 23196                           
 23197                           ; BSR set to: 1
 23198                           ;I2C.c: 44: TRISCbits.TRISC3 = 1;
 23199  016C6A  8694               	bsf	3988,3,c	;volatile
 23200                           
 23201                           ; BSR set to: 1
 23202                           ;I2C.c: 45: TRISCbits.TRISC4 = 1;
 23203  016C6C  8894               	bsf	3988,4,c	;volatile
 23204                           
 23205                           ; BSR set to: 1
 23206                           ;I2C.c: 46: SSPCON1 |= 0b00100000;
 23207  016C6E  8AC6               	bsf	4038,5,c	;volatile
 23208                           
 23209                           ; BSR set to: 1
 23210  016C70  0012               	return	
 23211  016C72                     __end_of_OpenI2C:
 23212                           	opt stack 0
 23213                           tblptru	equ	0xFF8
 23214                           tblptrh	equ	0xFF7
 23215                           tblptrl	equ	0xFF6
 23216                           tablat	equ	0xFF5
 23217                           prodh	equ	0xFF4
 23218                           prodl	equ	0xFF3
 23219                           intcon	equ	0xFF2
 23220                           postinc0	equ	0xFEE
 23221                           wreg	equ	0xFE8
 23222                           indf1	equ	0xFE7
 23223                           postinc1	equ	0xFE6
 23224                           postdec1	equ	0xFE5
 23225                           fsr1h	equ	0xFE2
 23226                           fsr1l	equ	0xFE1
 23227                           indf2	equ	0xFDF
 23228                           postinc2	equ	0xFDE
 23229                           postdec2	equ	0xFDD
 23230                           fsr2h	equ	0xFDA
 23231                           fsr2l	equ	0xFD9
 23232                           status	equ	0xFD8
 23233                           
 23234 ;; *************** function _I2C_Read_Sequential *****************
 23235 ;; Defined at:
 23236 ;;		line 242 in file "I2C.c"
 23237 ;; Parameters:    Size  Location     Type
 23238 ;;  I2Caddress      1    wreg     unsigned char 
 23239 ;;  Register        1   19[BANK1 ] unsigned char 
 23240 ;;  rdptr           2   20[BANK1 ] PTR unsigned char 
 23241 ;;		 -> READ_RTC_TIME@temp(7), 
 23242 ;;  length          1   22[BANK1 ] unsigned char 
 23243 ;; Auto vars:     Size  Location     Type
 23244 ;;  I2Caddress      1   23[BANK1 ] unsigned char 
 23245 ;; Return value:  Size  Location     Type
 23246 ;;                  1    wreg      unsigned char 
 23247 ;; Registers used:
 23248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23249 ;; Tracked objects:
 23250 ;;		On entry : 0/0
 23251 ;;		On exit  : 0/0
 23252 ;;		Unchanged: 0/0
 23253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23254 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23255 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23257 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 23258 ;;Total ram usage:        5 bytes
 23259 ;; Hardware stack levels used:    1
 23260 ;; Hardware stack levels required when called:    8
 23261 ;; This function calls:
 23262 ;;		_IdleI2C
 23263 ;;		_Multiple_I2C_Read
 23264 ;;		_WriteI2C
 23265 ;; This function is called by:
 23266 ;;		_READ_RTC_TIME
 23267 ;; This function uses a non-reentrant model
 23268 ;;
 23269                           
 23270                           	psect	text54
 23271  015404                     __ptext54:
 23272                           	opt stack 0
 23273  015404                     _I2C_Read_Sequential:
 23274                           	opt stack 19
 23275                           
 23276                           ; BSR set to: 1
 23277                           ;incstack = 0
 23278                           ;I2C_Read_Sequential@I2Caddress stored from wreg
 23279  015404  0101               	movlb	1	; () banked
 23280  015406  6F84               	movwf	I2C_Read_Sequential@I2Caddress& (0+255),b
 23281                           
 23282                           ; BSR set to: 1
 23283                           ;I2C.c: 244: IdleI2C();
 23284  015408  EC70  F0B6         	call	_IdleI2C	;wreg free
 23285                           
 23286                           ;I2C.c: 245: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 23287  01540C  80C5               	bsf	4037,0,c	;volatile
 23288  01540E                     l1242:
 23289  01540E  B0C5               	btfsc	4037,0,c	;volatile
 23290  015410  D7FE               	goto	l1242
 23291  015412                     l1245:
 23292  015412  B0C5               	btfsc	4037,0,c	;volatile
 23293  015414  D7FE               	goto	l1245
 23294                           
 23295                           ;I2C.c: 247: if ( PIR2bits.BCLIF )
 23296  015416  A6A1               	btfss	4001,3,c	;volatile
 23297  015418  D002               	goto	l9826
 23298                           
 23299                           ;I2C.c: 248: {
 23300                           ;I2C.c: 249: return ( -1 );
 23301  01541A  0EFF               	movlw	255
 23302  01541C  0012               	return	
 23303  01541E                     l9826:
 23304                           
 23305                           ;I2C.c: 251: else
 23306                           ;I2C.c: 252: {
 23307                           ;I2C.c: 253: if ( WriteI2C( (I2Caddress << 1) & 0xFE ) )
 23308  01541E  0101               	movlb	1	; () banked
 23309  015420  5184               	movf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 23310  015422  0101               	movlb	1	; () banked
 23311  015424  2584               	addwf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 23312  015426  0BFE               	andlw	254
 23313  015428  ECB9  F0AF         	call	_WriteI2C
 23314  01542C  0900               	iorlw	0
 23315  01542E  B4D8               	btfsc	status,2,c
 23316  015430  D005               	goto	l1251
 23317                           
 23318                           ;I2C.c: 254: {
 23319                           ;I2C.c: 255: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23320  015432  84C5               	bsf	4037,2,c	;volatile
 23321  015434                     l1252:
 23322  015434  B4C5               	btfsc	4037,2,c	;volatile
 23323  015436  D7FE               	goto	l1252
 23324                           
 23325                           ;I2C.c: 256: return ( -3 );
 23326  015438  0EFD               	movlw	253
 23327  01543A  0012               	return	
 23328  01543C                     l1251:
 23329                           
 23330                           ;I2C.c: 257: }
 23331                           ;I2C.c: 260: if ( !SSPCON2bits.ACKSTAT )
 23332  01543C  BCC5               	btfsc	4037,6,c	;volatile
 23333  01543E  D04A               	goto	l1255
 23334                           
 23335                           ;I2C.c: 261: {
 23336                           ;I2C.c: 262: if ( WriteI2C( Register ) )
 23337  015440  0101               	movlb	1	; () banked
 23338  015442  5180               	movf	I2C_Read_Sequential@Register& (0+255),w,b
 23339  015444  ECB9  F0AF         	call	_WriteI2C
 23340  015448  0900               	iorlw	0
 23341  01544A  B4D8               	btfsc	status,2,c
 23342  01544C  D005               	goto	l1256
 23343                           
 23344                           ;I2C.c: 263: {
 23345                           ;I2C.c: 264: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23346  01544E  84C5               	bsf	4037,2,c	;volatile
 23347  015450                     l1257:
 23348  015450  B4C5               	btfsc	4037,2,c	;volatile
 23349  015452  D7FE               	goto	l1257
 23350                           
 23351                           ;I2C.c: 265: return ( -3 );
 23352  015454  0EFD               	movlw	253
 23353  015456  0012               	return	
 23354  015458                     l1256:
 23355                           
 23356                           ;I2C.c: 266: }
 23357                           ;I2C.c: 269: if ( !SSPCON2bits.ACKSTAT )
 23358  015458  BCC5               	btfsc	4037,6,c	;volatile
 23359  01545A  D037               	goto	l1260
 23360                           
 23361                           ;I2C.c: 270: {
 23362                           ;I2C.c: 271: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
 23363  01545C  82C5               	bsf	4037,1,c	;volatile
 23364  01545E                     l1261:
 23365  01545E  B2C5               	btfsc	4037,1,c	;volatile
 23366  015460  D7FE               	goto	l1261
 23367  015462                     l1264:
 23368  015462  B2C5               	btfsc	4037,1,c	;volatile
 23369  015464  D7FE               	goto	l1264
 23370                           
 23371                           ;I2C.c: 273: if ( WriteI2C( (I2Caddress << 1) +1 ) )
 23372  015466  80D8               	bsf	status,0,c
 23373  015468  0101               	movlb	1	; () banked
 23374  01546A  3584               	rlcf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 23375  01546C  ECB9  F0AF         	call	_WriteI2C
 23376  015470  0900               	iorlw	0
 23377  015472  B4D8               	btfsc	status,2,c
 23378  015474  D005               	goto	l1267
 23379                           
 23380                           ;I2C.c: 274: {
 23381                           ;I2C.c: 275: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23382  015476  84C5               	bsf	4037,2,c	;volatile
 23383  015478                     l1268:
 23384  015478  B4C5               	btfsc	4037,2,c	;volatile
 23385  01547A  D7FE               	goto	l1268
 23386                           
 23387                           ;I2C.c: 276: return ( -3 );
 23388  01547C  0EFD               	movlw	253
 23389  01547E  0012               	return	
 23390  015480                     l1267:
 23391                           
 23392                           ;I2C.c: 277: }
 23393                           ;I2C.c: 280: if ( !SSPCON2bits.ACKSTAT )
 23394  015480  BCC5               	btfsc	4037,6,c	;volatile
 23395  015482  D01E               	goto	l1271
 23396                           
 23397                           ;I2C.c: 281: {
 23398                           ;I2C.c: 282: if ( Multiple_I2C_Read( rdptr, length ) )
 23399  015484  0101               	movlb	1	; () banked
 23400  015486  C182  F17D         	movff	I2C_Read_Sequential@rdptr+1,Multiple_I2C_Read@rdptr+1
 23401  01548A  0101               	movlb	1	; () banked
 23402  01548C  C181  F17C         	movff	I2C_Read_Sequential@rdptr,Multiple_I2C_Read@rdptr
 23403  015490  C183  F17E         	movff	I2C_Read_Sequential@length,Multiple_I2C_Read@length
 23404  015494  EC6B  F0B2         	call	_Multiple_I2C_Read	;wreg free
 23405  015498  0900               	iorlw	0
 23406  01549A  B4D8               	btfsc	status,2,c
 23407  01549C  D002               	goto	l1272
 23408                           
 23409                           ;I2C.c: 283: {
 23410                           ;I2C.c: 284: return ( -1 );
 23411  01549E  0EFF               	movlw	255
 23412  0154A0  0012               	return	
 23413  0154A2                     l1272:
 23414                           
 23415                           ;I2C.c: 285: }
 23416                           ;I2C.c: 287: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
 23417  0154A2  8AC5               	bsf	4037,5,c	;volatile
 23418  0154A4  88C5               	bsf	4037,4,c	;volatile
 23419  0154A6                     l1273:
 23420  0154A6  B8C5               	btfsc	4037,4,c	;volatile
 23421  0154A8  D7FE               	goto	l1273
 23422  0154AA                     l1276:
 23423  0154AA  B8C5               	btfsc	4037,4,c	;volatile
 23424  0154AC  D7FE               	goto	l1276
 23425                           
 23426                           ;I2C.c: 289: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23427  0154AE  84C5               	bsf	4037,2,c	;volatile
 23428  0154B0                     l1279:
 23429  0154B0  B4C5               	btfsc	4037,2,c	;volatile
 23430  0154B2  D7FE               	goto	l1279
 23431  0154B4                     l1282:
 23432  0154B4  B4C5               	btfsc	4037,2,c	;volatile
 23433  0154B6  D7FE               	goto	l1282
 23434                           
 23435                           ;I2C.c: 291: if ( PIR2bits.BCLIF )
 23436  0154B8  A6A1               	btfss	4001,3,c	;volatile
 23437  0154BA  D011               	goto	l9874
 23438                           
 23439                           ;I2C.c: 292: {
 23440                           ;I2C.c: 293: return ( -1 );
 23441  0154BC  0EFF               	movlw	255
 23442  0154BE  0012               	return	
 23443  0154C0                     l1271:
 23444                           
 23445                           ;I2C.c: 296: else
 23446                           ;I2C.c: 297: {
 23447                           ;I2C.c: 298: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23448  0154C0  84C5               	bsf	4037,2,c	;volatile
 23449  0154C2                     l1287:
 23450  0154C2  B4C5               	btfsc	4037,2,c	;volatile
 23451  0154C4  D7FE               	goto	l1287
 23452                           
 23453                           ;I2C.c: 299: return ( -2 );
 23454  0154C6  0EFE               	movlw	254
 23455  0154C8  0012               	return	
 23456  0154CA                     l1260:
 23457                           
 23458                           ;I2C.c: 302: else
 23459                           ;I2C.c: 303: {
 23460                           ;I2C.c: 304: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23461  0154CA  84C5               	bsf	4037,2,c	;volatile
 23462  0154CC                     l1291:
 23463  0154CC  B4C5               	btfsc	4037,2,c	;volatile
 23464  0154CE  D7FE               	goto	l1291
 23465                           
 23466                           ;I2C.c: 305: return ( -2 );
 23467  0154D0  0EFE               	movlw	254
 23468  0154D2  0012               	return	
 23469  0154D4                     l1255:
 23470                           
 23471                           ;I2C.c: 308: else
 23472                           ;I2C.c: 309: {
 23473                           ;I2C.c: 310: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23474  0154D4  84C5               	bsf	4037,2,c	;volatile
 23475  0154D6                     l1295:
 23476  0154D6  B4C5               	btfsc	4037,2,c	;volatile
 23477  0154D8  D7FE               	goto	l1295
 23478                           
 23479                           ;I2C.c: 311: return ( -2 );
 23480  0154DA  0EFE               	movlw	254
 23481  0154DC  0012               	return	
 23482  0154DE                     l9874:
 23483                           
 23484                           ;I2C.c: 312: }
 23485                           ;I2C.c: 313: }
 23486                           ;I2C.c: 314: return ( 0 );
 23487  0154DE  0E00               	movlw	0
 23488  0154E0  0012               	return	
 23489  0154E2                     __end_of_I2C_Read_Sequential:
 23490                           	opt stack 0
 23491                           tblptru	equ	0xFF8
 23492                           tblptrh	equ	0xFF7
 23493                           tblptrl	equ	0xFF6
 23494                           tablat	equ	0xFF5
 23495                           prodh	equ	0xFF4
 23496                           prodl	equ	0xFF3
 23497                           intcon	equ	0xFF2
 23498                           postinc0	equ	0xFEE
 23499                           wreg	equ	0xFE8
 23500                           indf1	equ	0xFE7
 23501                           postinc1	equ	0xFE6
 23502                           postdec1	equ	0xFE5
 23503                           fsr1h	equ	0xFE2
 23504                           fsr1l	equ	0xFE1
 23505                           indf2	equ	0xFDF
 23506                           postinc2	equ	0xFDE
 23507                           postdec2	equ	0xFDD
 23508                           fsr2h	equ	0xFDA
 23509                           fsr2l	equ	0xFD9
 23510                           status	equ	0xFD8
 23511                           
 23512 ;; *************** function _WriteI2C *****************
 23513 ;; Defined at:
 23514 ;;		line 69 in file "I2C.c"
 23515 ;; Parameters:    Size  Location     Type
 23516 ;;  data_out        1    wreg     unsigned char 
 23517 ;; Auto vars:     Size  Location     Type
 23518 ;;  data_out        1   16[BANK1 ] unsigned char 
 23519 ;; Return value:  Size  Location     Type
 23520 ;;                  1    wreg      char 
 23521 ;; Registers used:
 23522 ;;		wreg, status,2, status,0, cstack
 23523 ;; Tracked objects:
 23524 ;;		On entry : 0/0
 23525 ;;		On exit  : 0/0
 23526 ;;		Unchanged: 0/0
 23527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23529 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23530 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23531 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23532 ;;Total ram usage:        2 bytes
 23533 ;; Hardware stack levels used:    1
 23534 ;; Hardware stack levels required when called:    7
 23535 ;; This function calls:
 23536 ;;		_IdleI2C
 23537 ;; This function is called by:
 23538 ;;		_I2C_Write_At_Address
 23539 ;;		_I2C_Read_At_Address
 23540 ;;		_I2C_Read_Sequential
 23541 ;; This function uses a non-reentrant model
 23542 ;;
 23543                           
 23544                           	psect	text55
 23545  015F72                     __ptext55:
 23546                           	opt stack 0
 23547  015F72                     _WriteI2C:
 23548                           	opt stack 19
 23549                           
 23550                           ;incstack = 0
 23551                           ;WriteI2C@data_out stored from wreg
 23552  015F72  0101               	movlb	1	; () banked
 23553  015F74  6F7D               	movwf	WriteI2C@data_out& (0+255),b
 23554                           
 23555                           ; BSR set to: 1
 23556                           ;I2C.c: 71: SSPBUF = data_out;
 23557  015F76  C17D  FFC9         	movff	WriteI2C@data_out,4041	;volatile
 23558                           
 23559                           ; BSR set to: 1
 23560                           ;I2C.c: 72: if ( SSPCON1bits.WCOL )
 23561  015F7A  AEC6               	btfss	4038,7,c	;volatile
 23562  015F7C  D002               	goto	l9080
 23563                           
 23564                           ; BSR set to: 1
 23565                           ;I2C.c: 73: return ( -1 );
 23566  015F7E  0EFF               	movlw	255
 23567  015F80  0012               	return	
 23568  015F82                     l9080:
 23569                           
 23570                           ; BSR set to: 1
 23571                           ;I2C.c: 74: else
 23572                           ;I2C.c: 75: {
 23573                           ;I2C.c: 76: if( ((SSPCON1&0x0F)!=0x08) && ((SSPCON1&0x0F)!=0x0B) )
 23574  015F82  CFC6 F17C          	movff	4038,??_WriteI2C	;volatile
 23575  015F86  0E0F               	movlw	15
 23576  015F88  0101               	movlb	1	; () banked
 23577  015F8A  177C               	andwf	??_WriteI2C& (0+255),f,b
 23578  015F8C  0101               	movlb	1	; () banked
 23579  015F8E  517C               	movf	??_WriteI2C& (0+255),w,b
 23580  015F90  0A08               	xorlw	8
 23581  015F92  B4D8               	btfsc	status,2,c
 23582  015F94  D014               	goto	l9098
 23583                           
 23584                           ; BSR set to: 1
 23585  015F96  CFC6 F17C          	movff	4038,??_WriteI2C	;volatile
 23586  015F9A  0E0F               	movlw	15
 23587  015F9C  0101               	movlb	1	; () banked
 23588  015F9E  177C               	andwf	??_WriteI2C& (0+255),f,b
 23589  015FA0  0101               	movlb	1	; () banked
 23590  015FA2  517C               	movf	??_WriteI2C& (0+255),w,b
 23591  015FA4  0A0B               	xorlw	11
 23592  015FA6  B4D8               	btfsc	status,2,c
 23593  015FA8  D00A               	goto	l9098
 23594                           
 23595                           ; BSR set to: 1
 23596                           ;I2C.c: 77: {
 23597                           ;I2C.c: 78: SSPCON1bits.CKP = 1;
 23598  015FAA  88C6               	bsf	4038,4,c	;volatile
 23599  015FAC                     l1124:
 23600                           
 23601                           ; BSR set to: 1
 23602  015FAC  A69E               	btfss	3998,3,c	;volatile
 23603  015FAE  D7FE               	goto	l1124
 23604                           
 23605                           ; BSR set to: 1
 23606                           ;I2C.c: 81: if ( ( !SSPSTATbits.R_W ) && ( !SSPSTATbits.BF ) )
 23607  015FB0  A4C7               	btfss	4039,2,c	;volatile
 23608                           
 23609                           ; BSR set to: 1
 23610  015FB2  B0C7               	btfsc	4039,0,c	;volatile
 23611  015FB4  D002               	goto	l9094
 23612                           
 23613                           ; BSR set to: 1
 23614                           ;I2C.c: 82: {
 23615                           ;I2C.c: 83: return ( -2 );
 23616  015FB6  0EFE               	movlw	254
 23617  015FB8  0012               	return	
 23618  015FBA                     l9094:
 23619                           
 23620                           ; BSR set to: 1
 23621                           ;I2C.c: 85: else
 23622                           ;I2C.c: 86: {
 23623                           ;I2C.c: 87: return ( 0 );
 23624  015FBA  0E00               	movlw	0
 23625  015FBC  0012               	return	
 23626  015FBE                     l9098:
 23627                           
 23628                           ; BSR set to: 1
 23629                           ;I2C.c: 90: else if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 23630  015FBE  CFC6 F17C          	movff	4038,??_WriteI2C	;volatile
 23631  015FC2  0E0F               	movlw	15
 23632  015FC4  0101               	movlb	1	; () banked
 23633  015FC6  177C               	andwf	??_WriteI2C& (0+255),f,b
 23634  015FC8  0101               	movlb	1	; () banked
 23635  015FCA  517C               	movf	??_WriteI2C& (0+255),w,b
 23636  015FCC  0A08               	xorlw	8
 23637  015FCE  B4D8               	btfsc	status,2,c
 23638  015FD0  D00A               	goto	l1133
 23639                           
 23640                           ; BSR set to: 1
 23641  015FD2  CFC6 F17C          	movff	4038,??_WriteI2C	;volatile
 23642  015FD6  0E0F               	movlw	15
 23643  015FD8  0101               	movlb	1	; () banked
 23644  015FDA  177C               	andwf	??_WriteI2C& (0+255),f,b
 23645  015FDC  0101               	movlb	1	; () banked
 23646  015FDE  517C               	movf	??_WriteI2C& (0+255),w,b
 23647  015FE0  0A0B               	xorlw	11
 23648  015FE2  A4D8               	btfss	status,2,c
 23649  015FE4  D00A               	goto	l9116
 23650  015FE6                     l1133:
 23651                           
 23652                           ; BSR set to: 1
 23653  015FE6  B0C7               	btfsc	4039,0,c	;volatile
 23654  015FE8  D7FE               	goto	l1133
 23655                           
 23656                           ; BSR set to: 1
 23657                           ;I2C.c: 93: IdleI2C();
 23658                           
 23659                           ; BSR set to: 1
 23660  015FEA  EC70  F0B6         	call	_IdleI2C	;wreg free
 23661                           
 23662                           ;I2C.c: 94: if ( SSPCON2bits.ACKSTAT )
 23663  015FEE  ACC5               	btfss	4037,6,c	;volatile
 23664  015FF0  D002               	goto	l9112
 23665                           
 23666                           ;I2C.c: 95: return ( -2 );
 23667  015FF2  0EFE               	movlw	254
 23668  015FF4  0012               	return	
 23669  015FF6                     l9112:
 23670                           
 23671                           ;I2C.c: 96: else return ( 0 );
 23672  015FF6  0E00               	movlw	0
 23673  015FF8  0012               	return	
 23674  015FFA                     l9116:
 23675                           
 23676                           ;I2C.c: 98: else
 23677                           ;I2C.c: 99: {
 23678                           ;I2C.c: 100: return (-4);
 23679  015FFA  0EFC               	movlw	252
 23680  015FFC  0012               	return	
 23681  015FFE                     __end_of_WriteI2C:
 23682                           	opt stack 0
 23683                           tblptru	equ	0xFF8
 23684                           tblptrh	equ	0xFF7
 23685                           tblptrl	equ	0xFF6
 23686                           tablat	equ	0xFF5
 23687                           prodh	equ	0xFF4
 23688                           prodl	equ	0xFF3
 23689                           intcon	equ	0xFF2
 23690                           postinc0	equ	0xFEE
 23691                           wreg	equ	0xFE8
 23692                           indf1	equ	0xFE7
 23693                           postinc1	equ	0xFE6
 23694                           postdec1	equ	0xFE5
 23695                           fsr1h	equ	0xFE2
 23696                           fsr1l	equ	0xFE1
 23697                           indf2	equ	0xFDF
 23698                           postinc2	equ	0xFDE
 23699                           postdec2	equ	0xFDD
 23700                           fsr2h	equ	0xFDA
 23701                           fsr2l	equ	0xFD9
 23702                           status	equ	0xFD8
 23703                           
 23704 ;; *************** function _IdleI2C *****************
 23705 ;; Defined at:
 23706 ;;		line 63 in file "I2C.c"
 23707 ;; Parameters:    Size  Location     Type
 23708 ;;		None
 23709 ;; Auto vars:     Size  Location     Type
 23710 ;;		None
 23711 ;; Return value:  Size  Location     Type
 23712 ;;		None               void
 23713 ;; Registers used:
 23714 ;;		wreg, status,2, status,0
 23715 ;; Tracked objects:
 23716 ;;		On entry : 0/0
 23717 ;;		On exit  : 0/0
 23718 ;;		Unchanged: 0/0
 23719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23722 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23723 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23724 ;;Total ram usage:        1 bytes
 23725 ;; Hardware stack levels used:    1
 23726 ;; Hardware stack levels required when called:    6
 23727 ;; This function calls:
 23728 ;;		Nothing
 23729 ;; This function is called by:
 23730 ;;		_WriteI2C
 23731 ;;		_I2C_Write_At_Address
 23732 ;;		_I2C_Read_At_Address
 23733 ;;		_I2C_Read_Sequential
 23734 ;; This function uses a non-reentrant model
 23735 ;;
 23736                           
 23737                           	psect	text56
 23738  016CE0                     __ptext56:
 23739                           	opt stack 0
 23740  016CE0                     _IdleI2C:
 23741                           	opt stack 19
 23742  016CE0                     l8964:
 23743  016CE0  CFC5 F17B          	movff	4037,??_IdleI2C	;volatile
 23744  016CE4  0E1F               	movlw	31
 23745  016CE6  0101               	movlb	1	; () banked
 23746  016CE8  177B               	andwf	??_IdleI2C& (0+255),f,b
 23747  016CEA  B4D8               	btfsc	status,2,c
 23748                           
 23749                           ; BSR set to: 1
 23750  016CEC  B4C7               	btfsc	4039,2,c	;volatile
 23751  016CEE  D7F8               	goto	l8964
 23752                           
 23753                           ; BSR set to: 1
 23754                           
 23755                           ; BSR set to: 1
 23756  016CF0  0012               	return	
 23757  016CF2                     __end_of_IdleI2C:
 23758                           	opt stack 0
 23759                           tblptru	equ	0xFF8
 23760                           tblptrh	equ	0xFF7
 23761                           tblptrl	equ	0xFF6
 23762                           tablat	equ	0xFF5
 23763                           prodh	equ	0xFF4
 23764                           prodl	equ	0xFF3
 23765                           intcon	equ	0xFF2
 23766                           postinc0	equ	0xFEE
 23767                           wreg	equ	0xFE8
 23768                           indf1	equ	0xFE7
 23769                           postinc1	equ	0xFE6
 23770                           postdec1	equ	0xFE5
 23771                           fsr1h	equ	0xFE2
 23772                           fsr1l	equ	0xFE1
 23773                           indf2	equ	0xFDF
 23774                           postinc2	equ	0xFDE
 23775                           postdec2	equ	0xFDD
 23776                           fsr2h	equ	0xFDA
 23777                           fsr2l	equ	0xFD9
 23778                           status	equ	0xFD8
 23779                           
 23780 ;; *************** function _Multiple_I2C_Read *****************
 23781 ;; Defined at:
 23782 ;;		line 317 in file "I2C.c"
 23783 ;; Parameters:    Size  Location     Type
 23784 ;;  rdptr           2   15[BANK1 ] PTR unsigned char 
 23785 ;;		 -> READ_RTC_TIME@temp(7), 
 23786 ;;  length          1   17[BANK1 ] unsigned char 
 23787 ;; Auto vars:     Size  Location     Type
 23788 ;;		None
 23789 ;; Return value:  Size  Location     Type
 23790 ;;                  1    wreg      unsigned char 
 23791 ;; Registers used:
 23792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23793 ;; Tracked objects:
 23794 ;;		On entry : 0/0
 23795 ;;		On exit  : 0/0
 23796 ;;		Unchanged: 0/0
 23797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23798 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 23799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23800 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23801 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23802 ;;Total ram usage:        4 bytes
 23803 ;; Hardware stack levels used:    1
 23804 ;; Hardware stack levels required when called:    7
 23805 ;; This function calls:
 23806 ;;		_readI2C
 23807 ;; This function is called by:
 23808 ;;		_I2C_Read_Sequential
 23809 ;; This function uses a non-reentrant model
 23810 ;;
 23811                           
 23812                           	psect	text57
 23813  0164D6                     __ptext57:
 23814                           	opt stack 0
 23815  0164D6                     _Multiple_I2C_Read:
 23816                           	opt stack 19
 23817                           
 23818                           ;I2C.c: 319: while ( length-- )
 23819                           
 23820                           ; BSR set to: 1
 23821                           ;incstack = 0
 23822  0164D6  D02C               	goto	l9138
 23823  0164D8                     l9122:
 23824                           
 23825                           ;I2C.c: 320: {
 23826                           ;I2C.c: 321: *rdptr++ = readI2C();
 23827  0164D8  EC78  F0B5         	call	_readI2C	;wreg free
 23828  0164DC  C17C  FFD9         	movff	Multiple_I2C_Read@rdptr,fsr2l
 23829  0164E0  C17D  FFDA         	movff	Multiple_I2C_Read@rdptr+1,fsr2h
 23830  0164E4  6EDF               	movwf	indf2,c
 23831  0164E6  0101               	movlb	1	; () banked
 23832  0164E8  4B7C               	infsnz	Multiple_I2C_Read@rdptr& (0+255),f,b
 23833  0164EA  2B7D               	incf	(Multiple_I2C_Read@rdptr+1)& (0+255),f,b
 23834  0164EC                     l1302:
 23835  0164EC  B6C5               	btfsc	4037,3,c	;volatile
 23836  0164EE  D7FE               	goto	l1302
 23837                           
 23838                           ;I2C.c: 324: if ( PIR2bits.BCLIF )
 23839  0164F0  A6A1               	btfss	4001,3,c	;volatile
 23840  0164F2  D002               	goto	l9130
 23841                           
 23842                           ;I2C.c: 325: {
 23843                           ;I2C.c: 326: return ( -1 );
 23844  0164F4  0EFF               	movlw	255
 23845  0164F6  0012               	return	
 23846  0164F8                     l9130:
 23847                           
 23848                           ;I2C.c: 327: }
 23849                           ;I2C.c: 329: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 23850  0164F8  CFC6 F17F          	movff	4038,??_Multiple_I2C_Read	;volatile
 23851  0164FC  0E0F               	movlw	15
 23852  0164FE  0101               	movlb	1	; () banked
 23853  016500  177F               	andwf	??_Multiple_I2C_Read& (0+255),f,b
 23854  016502  0101               	movlb	1	; () banked
 23855  016504  517F               	movf	??_Multiple_I2C_Read& (0+255),w,b
 23856  016506  0A08               	xorlw	8
 23857  016508  B4D8               	btfsc	status,2,c
 23858  01650A  D00A               	goto	l9134
 23859                           
 23860                           ; BSR set to: 1
 23861  01650C  CFC6 F17F          	movff	4038,??_Multiple_I2C_Read	;volatile
 23862  016510  0E0F               	movlw	15
 23863  016512  0101               	movlb	1	; () banked
 23864  016514  177F               	andwf	??_Multiple_I2C_Read& (0+255),f,b
 23865  016516  0101               	movlb	1	; () banked
 23866  016518  517F               	movf	??_Multiple_I2C_Read& (0+255),w,b
 23867  01651A  0A0B               	xorlw	11
 23868  01651C  A4D8               	btfss	status,2,c
 23869  01651E  D008               	goto	l9138
 23870  016520                     l9134:
 23871                           
 23872                           ; BSR set to: 1
 23873                           ;I2C.c: 330: {
 23874                           ;I2C.c: 331: if ( length )
 23875  016520  0101               	movlb	1	; () banked
 23876  016522  517E               	movf	Multiple_I2C_Read@length& (0+255),w,b
 23877  016524  B4D8               	btfsc	status,2,c
 23878  016526  D004               	goto	l9138
 23879                           
 23880                           ; BSR set to: 1
 23881                           ;I2C.c: 332: {
 23882                           ;I2C.c: 333: SSPCON2bits.ACKDT = 0;
 23883  016528  9AC5               	bcf	4037,5,c	;volatile
 23884                           
 23885                           ;I2C.c: 334: SSPCON2bits.ACKEN = 1;
 23886  01652A  88C5               	bsf	4037,4,c	;volatile
 23887  01652C                     l1311:
 23888  01652C  B8C5               	btfsc	4037,4,c	;volatile
 23889  01652E  D7FE               	goto	l1311
 23890  016530                     l9138:
 23891  016530  0101               	movlb	1	; () banked
 23892  016532  077E               	decf	Multiple_I2C_Read@length& (0+255),f,b
 23893  016534  0101               	movlb	1	; () banked
 23894  016536  297E               	incf	Multiple_I2C_Read@length& (0+255),w,b
 23895  016538  A4D8               	btfss	status,2,c
 23896  01653A  D7CE               	goto	l9122
 23897                           
 23898                           ; BSR set to: 1
 23899                           ;I2C.c: 336: }
 23900                           ;I2C.c: 337: }
 23901                           ;I2C.c: 339: }
 23902                           ;I2C.c: 340: return ( 0 );
 23903                           
 23904                           ; BSR set to: 1
 23905  01653C  0E00               	movlw	0
 23906  01653E  0012               	return	
 23907  016540                     __end_of_Multiple_I2C_Read:
 23908                           	opt stack 0
 23909                           tblptru	equ	0xFF8
 23910                           tblptrh	equ	0xFF7
 23911                           tblptrl	equ	0xFF6
 23912                           tablat	equ	0xFF5
 23913                           prodh	equ	0xFF4
 23914                           prodl	equ	0xFF3
 23915                           intcon	equ	0xFF2
 23916                           postinc0	equ	0xFEE
 23917                           wreg	equ	0xFE8
 23918                           indf1	equ	0xFE7
 23919                           postinc1	equ	0xFE6
 23920                           postdec1	equ	0xFE5
 23921                           fsr1h	equ	0xFE2
 23922                           fsr1l	equ	0xFE1
 23923                           indf2	equ	0xFDF
 23924                           postinc2	equ	0xFDE
 23925                           postdec2	equ	0xFDD
 23926                           fsr2h	equ	0xFDA
 23927                           fsr2l	equ	0xFD9
 23928                           status	equ	0xFD8
 23929                           
 23930 ;; *************** function _readI2C *****************
 23931 ;; Defined at:
 23932 ;;		line 343 in file "I2C.c"
 23933 ;; Parameters:    Size  Location     Type
 23934 ;;		None
 23935 ;; Auto vars:     Size  Location     Type
 23936 ;;		None
 23937 ;; Return value:  Size  Location     Type
 23938 ;;                  1    wreg      unsigned char 
 23939 ;; Registers used:
 23940 ;;		wreg, status,2, status,0
 23941 ;; Tracked objects:
 23942 ;;		On entry : 0/0
 23943 ;;		On exit  : 0/0
 23944 ;;		Unchanged: 0/0
 23945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23948 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23949 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23950 ;;Total ram usage:        1 bytes
 23951 ;; Hardware stack levels used:    1
 23952 ;; Hardware stack levels required when called:    6
 23953 ;; This function calls:
 23954 ;;		Nothing
 23955 ;; This function is called by:
 23956 ;;		_Multiple_I2C_Read
 23957 ;; This function uses a non-reentrant model
 23958 ;;
 23959                           
 23960                           	psect	text58
 23961  016AF0                     __ptext58:
 23962                           	opt stack 0
 23963  016AF0                     _readI2C:
 23964                           	opt stack 19
 23965                           
 23966                           ;I2C.c: 345: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 23967                           
 23968                           ;incstack = 0
 23969  016AF0  CFC6 F17B          	movff	4038,??_readI2C	;volatile
 23970  016AF4  0E0F               	movlw	15
 23971  016AF6  0101               	movlb	1	; () banked
 23972  016AF8  177B               	andwf	??_readI2C& (0+255),f,b
 23973  016AFA  0101               	movlb	1	; () banked
 23974  016AFC  517B               	movf	??_readI2C& (0+255),w,b
 23975  016AFE  0A08               	xorlw	8
 23976  016B00  B4D8               	btfsc	status,2,c
 23977  016B02  D009               	goto	l1319
 23978                           
 23979                           ; BSR set to: 1
 23980  016B04  CFC6 F17B          	movff	4038,??_readI2C	;volatile
 23981  016B08  0E0F               	movlw	15
 23982  016B0A  0101               	movlb	1	; () banked
 23983  016B0C  177B               	andwf	??_readI2C& (0+255),f,b
 23984  016B0E  0101               	movlb	1	; () banked
 23985  016B10  517B               	movf	??_readI2C& (0+255),w,b
 23986  016B12  0A0B               	xorlw	11
 23987  016B14  B4D8               	btfsc	status,2,c
 23988  016B16                     l1319:
 23989                           
 23990                           ; BSR set to: 1
 23991                           ;I2C.c: 346: SSPCON2bits.RCEN = 1;
 23992  016B16  86C5               	bsf	4037,3,c	;volatile
 23993  016B18                     l1320:
 23994  016B18  A0C7               	btfss	4039,0,c	;volatile
 23995  016B1A  D7FE               	goto	l1320
 23996                           
 23997                           ;I2C.c: 348: return ( SSPBUF );
 23998  016B1C  50C9               	movf	4041,w,c	;volatile
 23999  016B1E  0012               	return	
 24000  016B20                     __end_of_readI2C:
 24001                           	opt stack 0
 24002                           tblptru	equ	0xFF8
 24003                           tblptrh	equ	0xFF7
 24004                           tblptrl	equ	0xFF6
 24005                           tablat	equ	0xFF5
 24006                           prodh	equ	0xFF4
 24007                           prodl	equ	0xFF3
 24008                           intcon	equ	0xFF2
 24009                           postinc0	equ	0xFEE
 24010                           wreg	equ	0xFE8
 24011                           indf1	equ	0xFE7
 24012                           postinc1	equ	0xFE6
 24013                           postdec1	equ	0xFE5
 24014                           fsr1h	equ	0xFE2
 24015                           fsr1l	equ	0xFE1
 24016                           indf2	equ	0xFDF
 24017                           postinc2	equ	0xFDE
 24018                           postdec2	equ	0xFDD
 24019                           fsr2h	equ	0xFDA
 24020                           fsr2l	equ	0xFD9
 24021                           status	equ	0xFD8
 24022                           
 24023 ;; *************** function _Parse_Time *****************
 24024 ;; Defined at:
 24025 ;;		line 202 in file "RTC.c"
 24026 ;; Parameters:    Size  Location     Type
 24027 ;;  This            2   14[BANK1 ] PTR unsigned char 
 24028 ;;		 -> Rxdata(100), 
 24029 ;; Auto vars:     Size  Location     Type
 24030 ;;  TempTime        9   18[BANK1 ] struct TIME
 24031 ;;  temp            1   17[BANK1 ] unsigned char 
 24032 ;; Return value:  Size  Location     Type
 24033 ;;                  1    wreg      unsigned char 
 24034 ;; Registers used:
 24035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24036 ;; Tracked objects:
 24037 ;;		On entry : 0/0
 24038 ;;		On exit  : 0/0
 24039 ;;		Unchanged: 0/0
 24040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24041 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24042 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 24043 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24044 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 24045 ;;Total ram usage:       13 bytes
 24046 ;; Hardware stack levels used:    1
 24047 ;; Hardware stack levels required when called:    6
 24048 ;; This function calls:
 24049 ;;		Nothing
 24050 ;; This function is called by:
 24051 ;;		_Command
 24052 ;; This function uses a non-reentrant model
 24053 ;;
 24054                           
 24055                           	psect	text59
 24056  0134D6                     __ptext59:
 24057                           	opt stack 0
 24058  0134D6                     _Parse_Time:
 24059                           	opt stack 22
 24060                           
 24061                           ;RTC.c: 204: TIME TempTime;
 24062                           ;RTC.c: 205: unsigned char temp = 0;
 24063                           
 24064                           ;incstack = 0
 24065  0134D6  0E00               	movlw	0
 24066  0134D8  0101               	movlb	1	; () banked
 24067  0134DA  6F7E               	movwf	Parse_Time@temp& (0+255),b
 24068                           
 24069                           ; BSR set to: 1
 24070                           ;RTC.c: 207: if(*This != 0 && *This == ' ')
 24071  0134DC  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24072  0134E0  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24073  0134E4  50DF               	movf	indf2,w,c
 24074  0134E6  B4D8               	btfsc	status,2,c
 24075  0134E8  D00A               	goto	l10556
 24076                           
 24077                           ; BSR set to: 1
 24078  0134EA  0E20               	movlw	32
 24079  0134EC  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24080  0134F0  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24081  0134F4  62DF               	cpfseq	indf2,c
 24082  0134F6  D003               	goto	l10556
 24083                           
 24084                           ; BSR set to: 1
 24085                           ;RTC.c: 208: {
 24086                           ;RTC.c: 209: This++;
 24087  0134F8  0101               	movlb	1	; () banked
 24088  0134FA  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24089  0134FC  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24090  0134FE                     l10556:
 24091                           
 24092                           ; BSR set to: 1
 24093                           ;RTC.c: 210: }
 24094                           ;RTC.c: 213: if (*This >= 48 && *This <= 57)
 24095  0134FE  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24096  013502  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24097  013506  0E2F               	movlw	47
 24098  013508  64DF               	cpfsgt	indf2,c
 24099  01350A  D018               	goto	l10564
 24100                           
 24101                           ; BSR set to: 1
 24102  01350C  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24103  013510  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24104  013514  50DF               	movf	indf2,w,c
 24105  013516  0101               	movlb	1	; () banked
 24106  013518  6F7D               	movwf	??_Parse_Time& (0+255),b
 24107  01351A  0E3A               	movlw	58
 24108  01351C  0101               	movlb	1	; () banked
 24109  01351E  5D7D               	subwf	??_Parse_Time& (0+255),w,b
 24110  013520  B0D8               	btfsc	status,0,c
 24111  013522  D00C               	goto	l10564
 24112                           
 24113                           ; BSR set to: 1
 24114                           ;RTC.c: 214: {
 24115                           ;RTC.c: 215: temp = *This - 48;
 24116  013524  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24117  013528  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24118  01352C  50DF               	movf	indf2,w,c
 24119  01352E  0FD0               	addlw	208
 24120  013530  0101               	movlb	1	; () banked
 24121  013532  6F7E               	movwf	Parse_Time@temp& (0+255),b
 24122                           
 24123                           ; BSR set to: 1
 24124                           ;RTC.c: 216: This++;
 24125  013534  0101               	movlb	1	; () banked
 24126  013536  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24127  013538  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24128                           
 24129                           ;RTC.c: 217: }
 24130  01353A  D002               	goto	l10568
 24131  01353C                     l10564:
 24132                           
 24133                           ; BSR set to: 1
 24134                           ;RTC.c: 218: else
 24135                           ;RTC.c: 219: {
 24136                           ;RTC.c: 220: return 0;
 24137  01353C  0E00               	movlw	0
 24138  01353E  0012               	return	
 24139  013540                     l10568:
 24140                           
 24141                           ; BSR set to: 1
 24142                           ;RTC.c: 221: }
 24143                           ;RTC.c: 223: if(*This >= 48 && *This <= 57)
 24144  013540  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24145  013544  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24146  013548  0E2F               	movlw	47
 24147  01354A  64DF               	cpfsgt	indf2,c
 24148  01354C  D01E               	goto	l10578
 24149                           
 24150                           ; BSR set to: 1
 24151  01354E  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24152  013552  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24153  013556  50DF               	movf	indf2,w,c
 24154  013558  0101               	movlb	1	; () banked
 24155  01355A  6F7D               	movwf	??_Parse_Time& (0+255),b
 24156  01355C  0E3A               	movlw	58
 24157  01355E  0101               	movlb	1	; () banked
 24158  013560  5D7D               	subwf	??_Parse_Time& (0+255),w,b
 24159  013562  B0D8               	btfsc	status,0,c
 24160  013564  D012               	goto	l10578
 24161                           
 24162                           ; BSR set to: 1
 24163                           ;RTC.c: 224: {
 24164                           ;RTC.c: 225: temp *= 10;
 24165  013566  0E0A               	movlw	10
 24166  013568  0101               	movlb	1	; () banked
 24167  01356A  037E               	mulwf	Parse_Time@temp& (0+255),b
 24168  01356C  50F3               	movf	prodl,w,c
 24169  01356E  0101               	movlb	1	; () banked
 24170  013570  6F7E               	movwf	Parse_Time@temp& (0+255),b
 24171                           
 24172                           ; BSR set to: 1
 24173                           ;RTC.c: 226: temp += *This - 48;
 24174  013572  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24175  013576  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24176  01357A  50DF               	movf	indf2,w,c
 24177  01357C  0FD0               	addlw	208
 24178  01357E  0101               	movlb	1	; () banked
 24179  013580  277E               	addwf	Parse_Time@temp& (0+255),f,b
 24180                           
 24181                           ; BSR set to: 1
 24182                           ;RTC.c: 227: This++;
 24183  013582  0101               	movlb	1	; () banked
 24184  013584  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24185  013586  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24186                           
 24187                           ;RTC.c: 228: }
 24188  013588  D00A               	goto	l1017
 24189  01358A                     l10578:
 24190                           
 24191                           ; BSR set to: 1
 24192                           ;RTC.c: 229: else if(*This == '/')
 24193  01358A  0E2F               	movlw	47
 24194  01358C  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24195  013590  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24196  013594  62DF               	cpfseq	indf2,c
 24197  013596  D001               	goto	l10582
 24198  013598  D002               	goto	l1017
 24199  01359A                     l10582:
 24200                           
 24201                           ; BSR set to: 1
 24202                           ;RTC.c: 233: else
 24203                           ;RTC.c: 234: {
 24204                           ;RTC.c: 235: return 0;
 24205  01359A  0E00               	movlw	0
 24206  01359C  0012               	return	
 24207  01359E                     l1017:
 24208                           
 24209                           ; BSR set to: 1
 24210                           ;RTC.c: 236: }
 24211                           ;RTC.c: 237: TempTime.Month = temp;
 24212  01359E  C17E  F186         	movff	Parse_Time@temp,Parse_Time@TempTime+7
 24213                           
 24214                           ; BSR set to: 1
 24215                           ;RTC.c: 239: if(*This == '/')
 24216  0135A2  0E2F               	movlw	47
 24217  0135A4  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24218  0135A8  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24219  0135AC  62DF               	cpfseq	indf2,c
 24220  0135AE  D004               	goto	l10590
 24221                           
 24222                           ; BSR set to: 1
 24223                           ;RTC.c: 240: {
 24224                           ;RTC.c: 241: This++;
 24225  0135B0  0101               	movlb	1	; () banked
 24226  0135B2  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24227  0135B4  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24228                           
 24229                           ;RTC.c: 242: }
 24230  0135B6  D002               	goto	l10594
 24231  0135B8                     l10590:
 24232                           
 24233                           ; BSR set to: 1
 24234                           ;RTC.c: 243: else
 24235                           ;RTC.c: 244: {
 24236                           ;RTC.c: 245: return 0;
 24237  0135B8  0E00               	movlw	0
 24238  0135BA  0012               	return	
 24239  0135BC                     l10594:
 24240                           
 24241                           ; BSR set to: 1
 24242                           ;RTC.c: 246: }
 24243                           ;RTC.c: 249: if (*This >= 48 && *This <= 57)
 24244  0135BC  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24245  0135C0  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24246  0135C4  0E2F               	movlw	47
 24247  0135C6  64DF               	cpfsgt	indf2,c
 24248  0135C8  D018               	goto	l10602
 24249                           
 24250                           ; BSR set to: 1
 24251  0135CA  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24252  0135CE  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24253  0135D2  50DF               	movf	indf2,w,c
 24254  0135D4  0101               	movlb	1	; () banked
 24255  0135D6  6F7D               	movwf	??_Parse_Time& (0+255),b
 24256  0135D8  0E3A               	movlw	58
 24257  0135DA  0101               	movlb	1	; () banked
 24258  0135DC  5D7D               	subwf	??_Parse_Time& (0+255),w,b
 24259  0135DE  B0D8               	btfsc	status,0,c
 24260  0135E0  D00C               	goto	l10602
 24261                           
 24262                           ; BSR set to: 1
 24263                           ;RTC.c: 250: {
 24264                           ;RTC.c: 251: temp = *This - 48;
 24265  0135E2  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24266  0135E6  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24267  0135EA  50DF               	movf	indf2,w,c
 24268  0135EC  0FD0               	addlw	208
 24269  0135EE  0101               	movlb	1	; () banked
 24270  0135F0  6F7E               	movwf	Parse_Time@temp& (0+255),b
 24271                           
 24272                           ; BSR set to: 1
 24273                           ;RTC.c: 252: This++;
 24274  0135F2  0101               	movlb	1	; () banked
 24275  0135F4  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24276  0135F6  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24277                           
 24278                           ;RTC.c: 253: }
 24279  0135F8  D002               	goto	l10606
 24280  0135FA                     l10602:
 24281                           
 24282                           ; BSR set to: 1
 24283                           ;RTC.c: 254: else
 24284                           ;RTC.c: 255: {
 24285                           ;RTC.c: 256: return 0;
 24286  0135FA  0E00               	movlw	0
 24287  0135FC  0012               	return	
 24288  0135FE                     l10606:
 24289                           
 24290                           ; BSR set to: 1
 24291                           ;RTC.c: 257: }
 24292                           ;RTC.c: 259: if(*This >= 48 && *This <= 57)
 24293  0135FE  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24294  013602  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24295  013606  0E2F               	movlw	47
 24296  013608  64DF               	cpfsgt	indf2,c
 24297  01360A  D01E               	goto	l10616
 24298                           
 24299                           ; BSR set to: 1
 24300  01360C  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24301  013610  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24302  013614  50DF               	movf	indf2,w,c
 24303  013616  0101               	movlb	1	; () banked
 24304  013618  6F7D               	movwf	??_Parse_Time& (0+255),b
 24305  01361A  0E3A               	movlw	58
 24306  01361C  0101               	movlb	1	; () banked
 24307  01361E  5D7D               	subwf	??_Parse_Time& (0+255),w,b
 24308  013620  B0D8               	btfsc	status,0,c
 24309  013622  D012               	goto	l10616
 24310                           
 24311                           ; BSR set to: 1
 24312                           ;RTC.c: 260: {
 24313                           ;RTC.c: 261: temp *= 10;
 24314  013624  0E0A               	movlw	10
 24315  013626  0101               	movlb	1	; () banked
 24316  013628  037E               	mulwf	Parse_Time@temp& (0+255),b
 24317  01362A  50F3               	movf	prodl,w,c
 24318  01362C  0101               	movlb	1	; () banked
 24319  01362E  6F7E               	movwf	Parse_Time@temp& (0+255),b
 24320                           
 24321                           ; BSR set to: 1
 24322                           ;RTC.c: 262: temp += *This - 48;
 24323  013630  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24324  013634  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24325  013638  50DF               	movf	indf2,w,c
 24326  01363A  0FD0               	addlw	208
 24327  01363C  0101               	movlb	1	; () banked
 24328  01363E  277E               	addwf	Parse_Time@temp& (0+255),f,b
 24329                           
 24330                           ; BSR set to: 1
 24331                           ;RTC.c: 263: This++;
 24332  013640  0101               	movlb	1	; () banked
 24333  013642  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24334  013644  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24335                           
 24336                           ;RTC.c: 264: }
 24337  013646  D00A               	goto	l1025
 24338  013648                     l10616:
 24339                           
 24340                           ; BSR set to: 1
 24341                           ;RTC.c: 265: else if(*This == '/')
 24342  013648  0E2F               	movlw	47
 24343  01364A  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24344  01364E  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24345  013652  62DF               	cpfseq	indf2,c
 24346  013654  D001               	goto	l10620
 24347  013656  D002               	goto	l1025
 24348  013658                     l10620:
 24349                           
 24350                           ; BSR set to: 1
 24351                           ;RTC.c: 269: else
 24352                           ;RTC.c: 270: {
 24353                           ;RTC.c: 271: return 0;
 24354  013658  0E00               	movlw	0
 24355  01365A  0012               	return	
 24356  01365C                     l1025:
 24357                           
 24358                           ; BSR set to: 1
 24359                           ;RTC.c: 272: }
 24360                           ;RTC.c: 273: TempTime.Date = temp;
 24361  01365C  C17E  F185         	movff	Parse_Time@temp,Parse_Time@TempTime+6
 24362                           
 24363                           ; BSR set to: 1
 24364                           ;RTC.c: 275: if(*This == '/')
 24365  013660  0E2F               	movlw	47
 24366  013662  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24367  013666  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24368  01366A  62DF               	cpfseq	indf2,c
 24369  01366C  D004               	goto	l10628
 24370                           
 24371                           ; BSR set to: 1
 24372                           ;RTC.c: 276: {
 24373                           ;RTC.c: 277: This++;
 24374  01366E  0101               	movlb	1	; () banked
 24375  013670  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24376  013672  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24377                           
 24378                           ;RTC.c: 278: }
 24379  013674  D002               	goto	l10632
 24380  013676                     l10628:
 24381                           
 24382                           ; BSR set to: 1
 24383                           ;RTC.c: 279: else
 24384                           ;RTC.c: 280: {
 24385                           ;RTC.c: 281: return 0;
 24386  013676  0E00               	movlw	0
 24387  013678  0012               	return	
 24388  01367A                     l10632:
 24389                           
 24390                           ; BSR set to: 1
 24391                           ;RTC.c: 282: }
 24392                           ;RTC.c: 285: if (*This >= 48 && *This <= 57)
 24393  01367A  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24394  01367E  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24395  013682  0E2F               	movlw	47
 24396  013684  64DF               	cpfsgt	indf2,c
 24397  013686  D018               	goto	l10640
 24398                           
 24399                           ; BSR set to: 1
 24400  013688  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24401  01368C  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24402  013690  50DF               	movf	indf2,w,c
 24403  013692  0101               	movlb	1	; () banked
 24404  013694  6F7D               	movwf	??_Parse_Time& (0+255),b
 24405  013696  0E3A               	movlw	58
 24406  013698  0101               	movlb	1	; () banked
 24407  01369A  5D7D               	subwf	??_Parse_Time& (0+255),w,b
 24408  01369C  B0D8               	btfsc	status,0,c
 24409  01369E  D00C               	goto	l10640
 24410                           
 24411                           ; BSR set to: 1
 24412                           ;RTC.c: 286: {
 24413                           ;RTC.c: 287: temp = *This - 48;
 24414  0136A0  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24415  0136A4  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24416  0136A8  50DF               	movf	indf2,w,c
 24417  0136AA  0FD0               	addlw	208
 24418  0136AC  0101               	movlb	1	; () banked
 24419  0136AE  6F7E               	movwf	Parse_Time@temp& (0+255),b
 24420                           
 24421                           ; BSR set to: 1
 24422                           ;RTC.c: 288: This++;
 24423  0136B0  0101               	movlb	1	; () banked
 24424  0136B2  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24425  0136B4  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24426                           
 24427                           ;RTC.c: 289: }
 24428  0136B6  D002               	goto	l10644
 24429  0136B8                     l10640:
 24430                           
 24431                           ; BSR set to: 1
 24432                           ;RTC.c: 290: else
 24433                           ;RTC.c: 291: {
 24434                           ;RTC.c: 292: return 0;
 24435  0136B8  0E00               	movlw	0
 24436  0136BA  0012               	return	
 24437  0136BC                     l10644:
 24438                           
 24439                           ; BSR set to: 1
 24440                           ;RTC.c: 293: }
 24441                           ;RTC.c: 294: if (*This >= 48 && *This <= 57)
 24442  0136BC  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24443  0136C0  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24444  0136C4  0E2F               	movlw	47
 24445  0136C6  64DF               	cpfsgt	indf2,c
 24446  0136C8  D01E               	goto	l10654
 24447                           
 24448                           ; BSR set to: 1
 24449  0136CA  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24450  0136CE  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24451  0136D2  50DF               	movf	indf2,w,c
 24452  0136D4  0101               	movlb	1	; () banked
 24453  0136D6  6F7D               	movwf	??_Parse_Time& (0+255),b
 24454  0136D8  0E3A               	movlw	58
 24455  0136DA  0101               	movlb	1	; () banked
 24456  0136DC  5D7D               	subwf	??_Parse_Time& (0+255),w,b
 24457  0136DE  B0D8               	btfsc	status,0,c
 24458  0136E0  D012               	goto	l10654
 24459                           
 24460                           ; BSR set to: 1
 24461                           ;RTC.c: 295: {
 24462                           ;RTC.c: 296: temp *= 10;
 24463  0136E2  0E0A               	movlw	10
 24464  0136E4  0101               	movlb	1	; () banked
 24465  0136E6  037E               	mulwf	Parse_Time@temp& (0+255),b
 24466  0136E8  50F3               	movf	prodl,w,c
 24467  0136EA  0101               	movlb	1	; () banked
 24468  0136EC  6F7E               	movwf	Parse_Time@temp& (0+255),b
 24469                           
 24470                           ; BSR set to: 1
 24471                           ;RTC.c: 297: temp += *This - 48;
 24472  0136EE  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24473  0136F2  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24474  0136F6  50DF               	movf	indf2,w,c
 24475  0136F8  0FD0               	addlw	208
 24476  0136FA  0101               	movlb	1	; () banked
 24477  0136FC  277E               	addwf	Parse_Time@temp& (0+255),f,b
 24478                           
 24479                           ; BSR set to: 1
 24480                           ;RTC.c: 298: This++;
 24481  0136FE  0101               	movlb	1	; () banked
 24482  013700  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24483  013702  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24484                           
 24485                           ;RTC.c: 299: }
 24486  013704  D002               	goto	l1033
 24487  013706                     l10654:
 24488                           
 24489                           ; BSR set to: 1
 24490                           ;RTC.c: 300: else
 24491                           ;RTC.c: 301: {
 24492                           ;RTC.c: 302: return 0;
 24493  013706  0E00               	movlw	0
 24494  013708  0012               	return	
 24495  01370A                     l1033:
 24496                           
 24497                           ; BSR set to: 1
 24498                           ;RTC.c: 303: }
 24499                           ;RTC.c: 304: TempTime.Year = temp;
 24500  01370A  C17E  F187         	movff	Parse_Time@temp,Parse_Time@TempTime+8
 24501                           
 24502                           ; BSR set to: 1
 24503                           ;RTC.c: 306: if(*This == ' ')
 24504  01370E  0E20               	movlw	32
 24505  013710  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24506  013714  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24507  013718  62DF               	cpfseq	indf2,c
 24508  01371A  D003               	goto	l10662
 24509                           
 24510                           ; BSR set to: 1
 24511                           ;RTC.c: 307: {
 24512                           ;RTC.c: 308: This++;
 24513  01371C  0101               	movlb	1	; () banked
 24514  01371E  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24515  013720  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24516  013722                     l10662:
 24517                           
 24518                           ; BSR set to: 1
 24519                           ;RTC.c: 309: }
 24520                           ;RTC.c: 312: if (*This >= 48 && *This <= 57)
 24521  013722  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24522  013726  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24523  01372A  0E2F               	movlw	47
 24524  01372C  64DF               	cpfsgt	indf2,c
 24525  01372E  D018               	goto	l10670
 24526                           
 24527                           ; BSR set to: 1
 24528  013730  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24529  013734  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24530  013738  50DF               	movf	indf2,w,c
 24531  01373A  0101               	movlb	1	; () banked
 24532  01373C  6F7D               	movwf	??_Parse_Time& (0+255),b
 24533  01373E  0E3A               	movlw	58
 24534  013740  0101               	movlb	1	; () banked
 24535  013742  5D7D               	subwf	??_Parse_Time& (0+255),w,b
 24536  013744  B0D8               	btfsc	status,0,c
 24537  013746  D00C               	goto	l10670
 24538                           
 24539                           ; BSR set to: 1
 24540                           ;RTC.c: 313: {
 24541                           ;RTC.c: 314: temp = *This - 48;
 24542  013748  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24543  01374C  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24544  013750  50DF               	movf	indf2,w,c
 24545  013752  0FD0               	addlw	208
 24546  013754  0101               	movlb	1	; () banked
 24547  013756  6F7E               	movwf	Parse_Time@temp& (0+255),b
 24548                           
 24549                           ; BSR set to: 1
 24550                           ;RTC.c: 315: This++;
 24551  013758  0101               	movlb	1	; () banked
 24552  01375A  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24553  01375C  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24554                           
 24555                           ;RTC.c: 316: }
 24556  01375E  D002               	goto	l10674
 24557  013760                     l10670:
 24558                           
 24559                           ; BSR set to: 1
 24560                           ;RTC.c: 317: else
 24561                           ;RTC.c: 318: {
 24562                           ;RTC.c: 319: return 0;
 24563  013760  0E00               	movlw	0
 24564  013762  0012               	return	
 24565  013764                     l10674:
 24566                           
 24567                           ; BSR set to: 1
 24568                           ;RTC.c: 320: }
 24569                           ;RTC.c: 322: if(*This >= 48 && *This <= 57)
 24570  013764  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24571  013768  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24572  01376C  0E2F               	movlw	47
 24573  01376E  64DF               	cpfsgt	indf2,c
 24574  013770  D01E               	goto	l10684
 24575                           
 24576                           ; BSR set to: 1
 24577  013772  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24578  013776  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24579  01377A  50DF               	movf	indf2,w,c
 24580  01377C  0101               	movlb	1	; () banked
 24581  01377E  6F7D               	movwf	??_Parse_Time& (0+255),b
 24582  013780  0E3A               	movlw	58
 24583  013782  0101               	movlb	1	; () banked
 24584  013784  5D7D               	subwf	??_Parse_Time& (0+255),w,b
 24585  013786  B0D8               	btfsc	status,0,c
 24586  013788  D012               	goto	l10684
 24587                           
 24588                           ; BSR set to: 1
 24589                           ;RTC.c: 323: {
 24590                           ;RTC.c: 324: temp *= 10;
 24591  01378A  0E0A               	movlw	10
 24592  01378C  0101               	movlb	1	; () banked
 24593  01378E  037E               	mulwf	Parse_Time@temp& (0+255),b
 24594  013790  50F3               	movf	prodl,w,c
 24595  013792  0101               	movlb	1	; () banked
 24596  013794  6F7E               	movwf	Parse_Time@temp& (0+255),b
 24597                           
 24598                           ; BSR set to: 1
 24599                           ;RTC.c: 325: temp += *This - 48;
 24600  013796  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24601  01379A  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24602  01379E  50DF               	movf	indf2,w,c
 24603  0137A0  0FD0               	addlw	208
 24604  0137A2  0101               	movlb	1	; () banked
 24605  0137A4  277E               	addwf	Parse_Time@temp& (0+255),f,b
 24606                           
 24607                           ; BSR set to: 1
 24608                           ;RTC.c: 326: This++;
 24609  0137A6  0101               	movlb	1	; () banked
 24610  0137A8  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24611  0137AA  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24612                           
 24613                           ;RTC.c: 327: }
 24614  0137AC  D00A               	goto	l1038
 24615  0137AE                     l10684:
 24616                           
 24617                           ; BSR set to: 1
 24618                           ;RTC.c: 328: else if(*This == ':')
 24619  0137AE  0E3A               	movlw	58
 24620  0137B0  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24621  0137B4  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24622  0137B8  62DF               	cpfseq	indf2,c
 24623  0137BA  D001               	goto	l10688
 24624  0137BC  D002               	goto	l1038
 24625  0137BE                     l10688:
 24626                           
 24627                           ; BSR set to: 1
 24628                           ;RTC.c: 332: else
 24629                           ;RTC.c: 333: {
 24630                           ;RTC.c: 334: return 0;
 24631  0137BE  0E00               	movlw	0
 24632  0137C0  0012               	return	
 24633  0137C2                     l1038:
 24634                           
 24635                           ; BSR set to: 1
 24636                           ;RTC.c: 335: }
 24637                           ;RTC.c: 336: TempTime.Hours = temp;
 24638  0137C2  C17E  F181         	movff	Parse_Time@temp,Parse_Time@TempTime+2
 24639                           
 24640                           ; BSR set to: 1
 24641                           ;RTC.c: 338: if(*This == ':')
 24642  0137C6  0E3A               	movlw	58
 24643  0137C8  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24644  0137CC  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24645  0137D0  62DF               	cpfseq	indf2,c
 24646  0137D2  D004               	goto	l10696
 24647                           
 24648                           ; BSR set to: 1
 24649                           ;RTC.c: 339: {
 24650                           ;RTC.c: 340: This++;
 24651  0137D4  0101               	movlb	1	; () banked
 24652  0137D6  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24653  0137D8  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24654                           
 24655                           ;RTC.c: 341: }
 24656  0137DA  D002               	goto	l10700
 24657  0137DC                     l10696:
 24658                           
 24659                           ; BSR set to: 1
 24660                           ;RTC.c: 342: else
 24661                           ;RTC.c: 343: {
 24662                           ;RTC.c: 344: return 0;
 24663  0137DC  0E00               	movlw	0
 24664  0137DE  0012               	return	
 24665  0137E0                     l10700:
 24666                           
 24667                           ; BSR set to: 1
 24668                           ;RTC.c: 345: }
 24669                           ;RTC.c: 348: if (*This >= 48 && *This <= 57)
 24670  0137E0  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24671  0137E4  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24672  0137E8  0E2F               	movlw	47
 24673  0137EA  64DF               	cpfsgt	indf2,c
 24674  0137EC  D018               	goto	l10708
 24675                           
 24676                           ; BSR set to: 1
 24677  0137EE  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24678  0137F2  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24679  0137F6  50DF               	movf	indf2,w,c
 24680  0137F8  0101               	movlb	1	; () banked
 24681  0137FA  6F7D               	movwf	??_Parse_Time& (0+255),b
 24682  0137FC  0E3A               	movlw	58
 24683  0137FE  0101               	movlb	1	; () banked
 24684  013800  5D7D               	subwf	??_Parse_Time& (0+255),w,b
 24685  013802  B0D8               	btfsc	status,0,c
 24686  013804  D00C               	goto	l10708
 24687                           
 24688                           ; BSR set to: 1
 24689                           ;RTC.c: 349: {
 24690                           ;RTC.c: 350: temp = *This - 48;
 24691  013806  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24692  01380A  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24693  01380E  50DF               	movf	indf2,w,c
 24694  013810  0FD0               	addlw	208
 24695  013812  0101               	movlb	1	; () banked
 24696  013814  6F7E               	movwf	Parse_Time@temp& (0+255),b
 24697                           
 24698                           ; BSR set to: 1
 24699                           ;RTC.c: 351: This++;
 24700  013816  0101               	movlb	1	; () banked
 24701  013818  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24702  01381A  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24703                           
 24704                           ;RTC.c: 352: }
 24705  01381C  D002               	goto	l10712
 24706  01381E                     l10708:
 24707                           
 24708                           ; BSR set to: 1
 24709                           ;RTC.c: 353: else
 24710                           ;RTC.c: 354: {
 24711                           ;RTC.c: 355: return 0;
 24712  01381E  0E00               	movlw	0
 24713  013820  0012               	return	
 24714  013822                     l10712:
 24715                           
 24716                           ; BSR set to: 1
 24717                           ;RTC.c: 356: }
 24718                           ;RTC.c: 358: if(*This >= 48 && *This <= 57)
 24719  013822  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24720  013826  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24721  01382A  0E2F               	movlw	47
 24722  01382C  64DF               	cpfsgt	indf2,c
 24723  01382E  D01E               	goto	l10722
 24724                           
 24725                           ; BSR set to: 1
 24726  013830  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24727  013834  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24728  013838  50DF               	movf	indf2,w,c
 24729  01383A  0101               	movlb	1	; () banked
 24730  01383C  6F7D               	movwf	??_Parse_Time& (0+255),b
 24731  01383E  0E3A               	movlw	58
 24732  013840  0101               	movlb	1	; () banked
 24733  013842  5D7D               	subwf	??_Parse_Time& (0+255),w,b
 24734  013844  B0D8               	btfsc	status,0,c
 24735  013846  D012               	goto	l10722
 24736                           
 24737                           ; BSR set to: 1
 24738                           ;RTC.c: 359: {
 24739                           ;RTC.c: 360: temp *= 10;
 24740  013848  0E0A               	movlw	10
 24741  01384A  0101               	movlb	1	; () banked
 24742  01384C  037E               	mulwf	Parse_Time@temp& (0+255),b
 24743  01384E  50F3               	movf	prodl,w,c
 24744  013850  0101               	movlb	1	; () banked
 24745  013852  6F7E               	movwf	Parse_Time@temp& (0+255),b
 24746                           
 24747                           ; BSR set to: 1
 24748                           ;RTC.c: 361: temp += *This - 48;
 24749  013854  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24750  013858  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24751  01385C  50DF               	movf	indf2,w,c
 24752  01385E  0FD0               	addlw	208
 24753  013860  0101               	movlb	1	; () banked
 24754  013862  277E               	addwf	Parse_Time@temp& (0+255),f,b
 24755                           
 24756                           ; BSR set to: 1
 24757                           ;RTC.c: 362: This++;
 24758  013864  0101               	movlb	1	; () banked
 24759  013866  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24760  013868  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24761                           
 24762                           ;RTC.c: 363: }
 24763  01386A  D00A               	goto	l1046
 24764  01386C                     l10722:
 24765                           
 24766                           ; BSR set to: 1
 24767                           ;RTC.c: 364: else if(*This == ':')
 24768  01386C  0E3A               	movlw	58
 24769  01386E  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24770  013872  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24771  013876  62DF               	cpfseq	indf2,c
 24772  013878  D001               	goto	l10726
 24773  01387A  D002               	goto	l1046
 24774  01387C                     l10726:
 24775                           
 24776                           ; BSR set to: 1
 24777                           ;RTC.c: 368: else
 24778                           ;RTC.c: 369: {
 24779                           ;RTC.c: 370: return 0;
 24780  01387C  0E00               	movlw	0
 24781  01387E  0012               	return	
 24782  013880                     l1046:
 24783                           
 24784                           ; BSR set to: 1
 24785                           ;RTC.c: 371: }
 24786                           ;RTC.c: 372: TempTime.Minutes = temp;
 24787  013880  C17E  F180         	movff	Parse_Time@temp,Parse_Time@TempTime+1
 24788                           
 24789                           ; BSR set to: 1
 24790                           ;RTC.c: 374: if(*This == ':')
 24791  013884  0E3A               	movlw	58
 24792  013886  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24793  01388A  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24794  01388E  62DF               	cpfseq	indf2,c
 24795  013890  D004               	goto	l10734
 24796                           
 24797                           ; BSR set to: 1
 24798                           ;RTC.c: 375: {
 24799                           ;RTC.c: 376: This++;
 24800  013892  0101               	movlb	1	; () banked
 24801  013894  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24802  013896  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24803                           
 24804                           ;RTC.c: 377: }
 24805  013898  D002               	goto	l10738
 24806  01389A                     l10734:
 24807                           
 24808                           ; BSR set to: 1
 24809                           ;RTC.c: 378: else
 24810                           ;RTC.c: 379: {
 24811                           ;RTC.c: 380: return 0;
 24812  01389A  0E00               	movlw	0
 24813  01389C  0012               	return	
 24814  01389E                     l10738:
 24815                           
 24816                           ; BSR set to: 1
 24817                           ;RTC.c: 381: }
 24818                           ;RTC.c: 384: if (*This >= 48 && *This <= 57)
 24819  01389E  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24820  0138A2  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24821  0138A6  0E2F               	movlw	47
 24822  0138A8  64DF               	cpfsgt	indf2,c
 24823  0138AA  D018               	goto	l10746
 24824                           
 24825                           ; BSR set to: 1
 24826  0138AC  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24827  0138B0  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24828  0138B4  50DF               	movf	indf2,w,c
 24829  0138B6  0101               	movlb	1	; () banked
 24830  0138B8  6F7D               	movwf	??_Parse_Time& (0+255),b
 24831  0138BA  0E3A               	movlw	58
 24832  0138BC  0101               	movlb	1	; () banked
 24833  0138BE  5D7D               	subwf	??_Parse_Time& (0+255),w,b
 24834  0138C0  B0D8               	btfsc	status,0,c
 24835  0138C2  D00C               	goto	l10746
 24836                           
 24837                           ; BSR set to: 1
 24838                           ;RTC.c: 385: {
 24839                           ;RTC.c: 386: temp = *This - 48;
 24840  0138C4  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24841  0138C8  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24842  0138CC  50DF               	movf	indf2,w,c
 24843  0138CE  0FD0               	addlw	208
 24844  0138D0  0101               	movlb	1	; () banked
 24845  0138D2  6F7E               	movwf	Parse_Time@temp& (0+255),b
 24846                           
 24847                           ; BSR set to: 1
 24848                           ;RTC.c: 387: This++;
 24849  0138D4  0101               	movlb	1	; () banked
 24850  0138D6  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24851  0138D8  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24852                           
 24853                           ;RTC.c: 388: }
 24854  0138DA  D002               	goto	l10750
 24855  0138DC                     l10746:
 24856                           
 24857                           ; BSR set to: 1
 24858                           ;RTC.c: 389: else
 24859                           ;RTC.c: 390: {
 24860                           ;RTC.c: 391: return 0;
 24861  0138DC  0E00               	movlw	0
 24862  0138DE  0012               	return	
 24863  0138E0                     l10750:
 24864                           
 24865                           ; BSR set to: 1
 24866                           ;RTC.c: 392: }
 24867                           ;RTC.c: 393: if (*This >= 48 && *This <= 57)
 24868  0138E0  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24869  0138E4  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24870  0138E8  0E2F               	movlw	47
 24871  0138EA  64DF               	cpfsgt	indf2,c
 24872  0138EC  D01E               	goto	l10760
 24873                           
 24874                           ; BSR set to: 1
 24875  0138EE  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24876  0138F2  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24877  0138F6  50DF               	movf	indf2,w,c
 24878  0138F8  0101               	movlb	1	; () banked
 24879  0138FA  6F7D               	movwf	??_Parse_Time& (0+255),b
 24880  0138FC  0E3A               	movlw	58
 24881  0138FE  0101               	movlb	1	; () banked
 24882  013900  5D7D               	subwf	??_Parse_Time& (0+255),w,b
 24883  013902  B0D8               	btfsc	status,0,c
 24884  013904  D012               	goto	l10760
 24885                           
 24886                           ; BSR set to: 1
 24887                           ;RTC.c: 394: {
 24888                           ;RTC.c: 395: temp *= 10;
 24889  013906  0E0A               	movlw	10
 24890  013908  0101               	movlb	1	; () banked
 24891  01390A  037E               	mulwf	Parse_Time@temp& (0+255),b
 24892  01390C  50F3               	movf	prodl,w,c
 24893  01390E  0101               	movlb	1	; () banked
 24894  013910  6F7E               	movwf	Parse_Time@temp& (0+255),b
 24895                           
 24896                           ; BSR set to: 1
 24897                           ;RTC.c: 396: temp += *This - 48;
 24898  013912  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24899  013916  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24900  01391A  50DF               	movf	indf2,w,c
 24901  01391C  0FD0               	addlw	208
 24902  01391E  0101               	movlb	1	; () banked
 24903  013920  277E               	addwf	Parse_Time@temp& (0+255),f,b
 24904                           
 24905                           ; BSR set to: 1
 24906                           ;RTC.c: 397: This++;
 24907  013922  0101               	movlb	1	; () banked
 24908  013924  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24909  013926  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24910                           
 24911                           ;RTC.c: 398: }
 24912  013928  D002               	goto	l1054
 24913  01392A                     l10760:
 24914                           
 24915                           ; BSR set to: 1
 24916                           ;RTC.c: 399: else
 24917                           ;RTC.c: 400: {
 24918                           ;RTC.c: 401: return 0;
 24919  01392A  0E00               	movlw	0
 24920  01392C  0012               	return	
 24921  01392E                     l1054:
 24922                           
 24923                           ; BSR set to: 1
 24924                           ;RTC.c: 402: }
 24925                           ;RTC.c: 403: TempTime.Seconds = temp;
 24926  01392E  C17E  F17F         	movff	Parse_Time@temp,Parse_Time@TempTime
 24927                           
 24928                           ; BSR set to: 1
 24929                           ;RTC.c: 405: if(*This == ' ')
 24930  013932  0E20               	movlw	32
 24931  013934  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24932  013938  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24933  01393C  62DF               	cpfseq	indf2,c
 24934  01393E  D003               	goto	l10768
 24935                           
 24936                           ; BSR set to: 1
 24937                           ;RTC.c: 406: {
 24938                           ;RTC.c: 407: This++;
 24939  013940  0101               	movlb	1	; () banked
 24940  013942  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24941  013944  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24942  013946                     l10768:
 24943                           
 24944                           ; BSR set to: 1
 24945                           ;RTC.c: 408: }
 24946                           ;RTC.c: 409: if(*This == 'a')
 24947  013946  0E61               	movlw	97
 24948  013948  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24949  01394C  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24950  013950  62DF               	cpfseq	indf2,c
 24951  013952  D00E               	goto	l10780
 24952                           
 24953                           ; BSR set to: 1
 24954                           ;RTC.c: 410: {
 24955                           ;RTC.c: 411: This++;
 24956  013954  0101               	movlb	1	; () banked
 24957  013956  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24958  013958  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24959                           
 24960                           ; BSR set to: 1
 24961                           ;RTC.c: 412: if(*This == 'm')
 24962  01395A  0E6D               	movlw	109
 24963  01395C  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24964  013960  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24965  013964  62DF               	cpfseq	indf2,c
 24966  013966  D002               	goto	l10776
 24967                           
 24968                           ; BSR set to: 1
 24969                           ;RTC.c: 413: {
 24970                           ;RTC.c: 414: TempTime.HoursAM_PM = 0;
 24971  013968  0E00               	movlw	0
 24972  01396A  D014               	goto	L30
 24973  01396C                     l10776:
 24974                           
 24975                           ; BSR set to: 1
 24976                           ;RTC.c: 416: else
 24977                           ;RTC.c: 417: {
 24978                           ;RTC.c: 418: return 0;
 24979  01396C  0E00               	movlw	0
 24980  01396E  0012               	return	
 24981  013970                     l10780:
 24982                           
 24983                           ; BSR set to: 1
 24984                           ;RTC.c: 421: else if(*This == 'p')
 24985  013970  0E70               	movlw	112
 24986  013972  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 24987  013976  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 24988  01397A  62DF               	cpfseq	indf2,c
 24989  01397C  D010               	goto	l10792
 24990                           
 24991                           ; BSR set to: 1
 24992                           ;RTC.c: 422: {
 24993                           ;RTC.c: 423: This++;
 24994  01397E  0101               	movlb	1	; () banked
 24995  013980  4B7B               	infsnz	Parse_Time@This& (0+255),f,b
 24996  013982  2B7C               	incf	(Parse_Time@This+1)& (0+255),f,b
 24997                           
 24998                           ; BSR set to: 1
 24999                           ;RTC.c: 424: if(*This == 'm')
 25000  013984  0E6D               	movlw	109
 25001  013986  C17B  FFD9         	movff	Parse_Time@This,fsr2l
 25002  01398A  C17C  FFDA         	movff	Parse_Time@This+1,fsr2h
 25003  01398E  62DF               	cpfseq	indf2,c
 25004  013990  D004               	goto	l10788
 25005                           
 25006                           ; BSR set to: 1
 25007                           ;RTC.c: 425: {
 25008                           ;RTC.c: 426: TempTime.HoursAM_PM = 1;
 25009  013992  0E01               	movlw	1
 25010  013994                     L30:
 25011  013994  0101               	movlb	1	; () banked
 25012  013996  6F83               	movwf	(Parse_Time@TempTime+4)& (0+255),b
 25013                           
 25014                           ;RTC.c: 427: }
 25015  013998  D004               	goto	l10796
 25016  01399A                     l10788:
 25017                           
 25018                           ; BSR set to: 1
 25019                           ;RTC.c: 428: else
 25020                           ;RTC.c: 429: {
 25021                           ;RTC.c: 430: return 0;
 25022  01399A  0E00               	movlw	0
 25023  01399C  0012               	return	
 25024  01399E                     l10792:
 25025                           
 25026                           ; BSR set to: 1
 25027                           ;RTC.c: 433: else
 25028                           ;RTC.c: 434: {
 25029                           ;RTC.c: 435: return 0;
 25030  01399E  0E00               	movlw	0
 25031  0139A0  0012               	return	
 25032  0139A2                     l10796:
 25033                           
 25034                           ; BSR set to: 1
 25035                           ;RTC.c: 436: }
 25036                           ;RTC.c: 437: if(TempTime.Month > 12 || TempTime.Date > 31 || TempTime.Year > 99 || TempT
      +                          ime.Hours > 12 || TempTime.Minutes > 59 || TempTime.Seconds > 59)
 25037  0139A2  0E0D               	movlw	13
 25038  0139A4  0101               	movlb	1	; () banked
 25039  0139A6  5D86               	subwf	(Parse_Time@TempTime+7)& (0+255),w,b
 25040  0139A8  B0D8               	btfsc	status,0,c
 25041  0139AA  D018               	goto	l10808
 25042                           
 25043                           ; BSR set to: 1
 25044  0139AC  0E20               	movlw	32
 25045  0139AE  0101               	movlb	1	; () banked
 25046  0139B0  5D85               	subwf	(Parse_Time@TempTime+6)& (0+255),w,b
 25047  0139B2  B0D8               	btfsc	status,0,c
 25048  0139B4  D013               	goto	l10808
 25049                           
 25050                           ; BSR set to: 1
 25051  0139B6  0E64               	movlw	100
 25052  0139B8  0101               	movlb	1	; () banked
 25053  0139BA  5D87               	subwf	(Parse_Time@TempTime+8)& (0+255),w,b
 25054  0139BC  B0D8               	btfsc	status,0,c
 25055  0139BE  D00E               	goto	l10808
 25056                           
 25057                           ; BSR set to: 1
 25058  0139C0  0E0D               	movlw	13
 25059  0139C2  0101               	movlb	1	; () banked
 25060  0139C4  5D81               	subwf	(Parse_Time@TempTime+2)& (0+255),w,b
 25061  0139C6  B0D8               	btfsc	status,0,c
 25062  0139C8  D009               	goto	l10808
 25063                           
 25064                           ; BSR set to: 1
 25065  0139CA  0E3C               	movlw	60
 25066  0139CC  0101               	movlb	1	; () banked
 25067  0139CE  5D80               	subwf	(Parse_Time@TempTime+1)& (0+255),w,b
 25068  0139D0  B0D8               	btfsc	status,0,c
 25069  0139D2  D004               	goto	l10808
 25070                           
 25071                           ; BSR set to: 1
 25072  0139D4  0E3B               	movlw	59
 25073  0139D6  0101               	movlb	1	; () banked
 25074  0139D8  657F               	cpfsgt	Parse_Time@TempTime& (0+255),b
 25075  0139DA  D002               	goto	l1064
 25076  0139DC                     l10808:
 25077                           
 25078                           ; BSR set to: 1
 25079                           ;RTC.c: 438: {
 25080                           ;RTC.c: 439: return 0;
 25081  0139DC  0E00               	movlw	0
 25082  0139DE  0012               	return	
 25083  0139E0                     l1064:
 25084                           
 25085                           ; BSR set to: 1
 25086                           ;RTC.c: 441: else
 25087                           ;RTC.c: 442: {
 25088                           ;RTC.c: 443: NowTime.Month = TempTime.Month;
 25089  0139E0  C186  F107         	movff	Parse_Time@TempTime+7,_NowTime+7
 25090                           
 25091                           ;RTC.c: 444: NowTime.Date = TempTime.Date;
 25092  0139E4  C185  F106         	movff	Parse_Time@TempTime+6,_NowTime+6
 25093                           
 25094                           ;RTC.c: 445: NowTime.Year= TempTime.Year;
 25095  0139E8  C187  F108         	movff	Parse_Time@TempTime+8,_NowTime+8
 25096                           
 25097                           ;RTC.c: 446: NowTime.Hours = TempTime.Hours;
 25098  0139EC  C181  F102         	movff	Parse_Time@TempTime+2,_NowTime+2
 25099                           
 25100                           ;RTC.c: 447: NowTime.Minutes = TempTime.Minutes;
 25101  0139F0  C180  F101         	movff	Parse_Time@TempTime+1,_NowTime+1
 25102                           
 25103                           ;RTC.c: 448: NowTime.Seconds= TempTime.Seconds;
 25104  0139F4  C17F  F100         	movff	Parse_Time@TempTime,_NowTime
 25105                           
 25106                           ;RTC.c: 449: NowTime.HoursAM_PM = TempTime.HoursAM_PM;
 25107  0139F8  C183  F104         	movff	Parse_Time@TempTime+4,_NowTime+4
 25108                           
 25109                           ; BSR set to: 1
 25110                           ;RTC.c: 450: return 1;
 25111  0139FC  0E01               	movlw	1
 25112  0139FE  0012               	return	
 25113  013A00                     __end_of_Parse_Time:
 25114                           	opt stack 0
 25115                           tblptru	equ	0xFF8
 25116                           tblptrh	equ	0xFF7
 25117                           tblptrl	equ	0xFF6
 25118                           tablat	equ	0xFF5
 25119                           prodh	equ	0xFF4
 25120                           prodl	equ	0xFF3
 25121                           intcon	equ	0xFF2
 25122                           postinc0	equ	0xFEE
 25123                           wreg	equ	0xFE8
 25124                           indf1	equ	0xFE7
 25125                           postinc1	equ	0xFE6
 25126                           postdec1	equ	0xFE5
 25127                           fsr1h	equ	0xFE2
 25128                           fsr1l	equ	0xFE1
 25129                           indf2	equ	0xFDF
 25130                           postinc2	equ	0xFDE
 25131                           postdec2	equ	0xFDD
 25132                           fsr2h	equ	0xFDA
 25133                           fsr2l	equ	0xFD9
 25134                           status	equ	0xFD8
 25135                           
 25136 ;; *************** function _LCDdisplayFeedback *****************
 25137 ;; Defined at:
 25138 ;;		line 202 in file "LCD.c"
 25139 ;; Parameters:    Size  Location     Type
 25140 ;;  Text            2   32[BANK1 ] PTR unsigned char 
 25141 ;;		 -> STR_279(16), STR_243(16), STR_241(16), STR_238(15), 
 25142 ;;		 -> STR_186(16), STR_184(16), STR_182(13), STR_169(14), 
 25143 ;;		 -> STR_167(16), STR_165(15), STR_154(16), Command@buf(200), 
 25144 ;;		 -> STR_150(14), STR_148(16), STR_146(15), STR_128(13), 
 25145 ;;		 -> STR_126(15), STR_122(14), STR_118(16), STR_105(16), 
 25146 ;;		 -> STR_97(16), STR_95(16), STR_92(15), STR_89(15), 
 25147 ;;		 -> STR_86(14), STR_83(16), STR_71(16), STR_64(16), 
 25148 ;;		 -> STR_62(15), STR_59(14), STR_56(16), STR_40(12), 
 25149 ;;		 -> STR_38(9), STR_35(8), STR_32(13), STR_29(9), 
 25150 ;;		 -> STR_26(8), STR_23(13), 
 25151 ;; Auto vars:     Size  Location     Type
 25152 ;;		None
 25153 ;; Return value:  Size  Location     Type
 25154 ;;		None               void
 25155 ;; Registers used:
 25156 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25157 ;; Tracked objects:
 25158 ;;		On entry : 0/0
 25159 ;;		On exit  : 0/0
 25160 ;;		Unchanged: 0/0
 25161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25162 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25165 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25166 ;;Total ram usage:        2 bytes
 25167 ;; Hardware stack levels used:    1
 25168 ;; Hardware stack levels required when called:   10
 25169 ;; This function calls:
 25170 ;;		_ClearLCD
 25171 ;;		_LCDPrintString
 25172 ;;		_SetLCDcursor
 25173 ;; This function is called by:
 25174 ;;		_Command
 25175 ;; This function uses a non-reentrant model
 25176 ;;
 25177                           
 25178                           	psect	text60
 25179  01696A                     __ptext60:
 25180                           	opt stack 0
 25181  01696A                     _LCDdisplayFeedback:
 25182                           	opt stack 18
 25183                           
 25184                           ;LCD.c: 204: ClearLCD();
 25185                           
 25186                           ; BSR set to: 1
 25187                           ;incstack = 0
 25188  01696A  EC39  F0B6         	call	_ClearLCD	;wreg free
 25189                           
 25190                           ;LCD.c: 205: SetLCDcursor(1, 0);
 25191  01696E  0E00               	movlw	0
 25192  016970  0101               	movlb	1	; () banked
 25193  016972  6F89               	movwf	SetLCDcursor@Col& (0+255),b
 25194  016974  0E01               	movlw	1
 25195  016976  EC2D  F0B5         	call	_SetLCDcursor
 25196                           
 25197                           ;LCD.c: 206: LCDPrintString(Text);
 25198  01697A  0101               	movlb	1	; () banked
 25199  01697C  C18E  F18A         	movff	LCDdisplayFeedback@Text+1,LCDPrintString@Text+1
 25200  016980  0101               	movlb	1	; () banked
 25201  016982  C18D  F189         	movff	LCDdisplayFeedback@Text,LCDPrintString@Text
 25202  016986  EC46  F0B1         	call	_LCDPrintString	;wreg free
 25203                           
 25204                           ;LCD.c: 207: LCDwait = 1;
 25205  01698A  0E01               	movlw	1
 25206  01698C  0101               	movlb	1	; () banked
 25207  01698E  6F09               	movwf	_LCDwait& (0+255),b
 25208                           
 25209                           ; BSR set to: 1
 25210                           ;LCD.c: 208: LCDclearCount =0;
 25211  016990  0E00               	movlw	0
 25212  016992  0101               	movlb	1	; () banked
 25213  016994  6FC8               	movwf	_LCDclearCount& (0+255),b
 25214  016996  0E00               	movlw	0
 25215  016998  0101               	movlb	1	; () banked
 25216  01699A  6FC9               	movwf	(_LCDclearCount+1)& (0+255),b
 25217  01699C  0E00               	movlw	0
 25218  01699E  0101               	movlb	1	; () banked
 25219  0169A0  6FCA               	movwf	(_LCDclearCount+2)& (0+255),b
 25220  0169A2  0E00               	movlw	0
 25221  0169A4  0101               	movlb	1	; () banked
 25222  0169A6  6FCB               	movwf	(_LCDclearCount+3)& (0+255),b
 25223                           
 25224                           ; BSR set to: 1
 25225  0169A8  0012               	return	
 25226  0169AA                     __end_of_LCDdisplayFeedback:
 25227                           	opt stack 0
 25228                           tblptru	equ	0xFF8
 25229                           tblptrh	equ	0xFF7
 25230                           tblptrl	equ	0xFF6
 25231                           tablat	equ	0xFF5
 25232                           prodh	equ	0xFF4
 25233                           prodl	equ	0xFF3
 25234                           intcon	equ	0xFF2
 25235                           postinc0	equ	0xFEE
 25236                           wreg	equ	0xFE8
 25237                           indf1	equ	0xFE7
 25238                           postinc1	equ	0xFE6
 25239                           postdec1	equ	0xFE5
 25240                           fsr1h	equ	0xFE2
 25241                           fsr1l	equ	0xFE1
 25242                           indf2	equ	0xFDF
 25243                           postinc2	equ	0xFDE
 25244                           postdec2	equ	0xFDD
 25245                           fsr2h	equ	0xFDA
 25246                           fsr2l	equ	0xFD9
 25247                           status	equ	0xFD8
 25248                           
 25249 ;; *************** function _SetLCDcursor *****************
 25250 ;; Defined at:
 25251 ;;		line 148 in file "LCD.c"
 25252 ;; Parameters:    Size  Location     Type
 25253 ;;  Row             1    wreg     unsigned char 
 25254 ;;  Col             1   28[BANK1 ] unsigned char 
 25255 ;; Auto vars:     Size  Location     Type
 25256 ;;  Row             1   29[BANK1 ] unsigned char 
 25257 ;;  address         1   30[BANK1 ] unsigned char 
 25258 ;; Return value:  Size  Location     Type
 25259 ;;		None               void
 25260 ;; Registers used:
 25261 ;;		wreg, status,2, status,0, cstack
 25262 ;; Tracked objects:
 25263 ;;		On entry : 0/0
 25264 ;;		On exit  : 0/0
 25265 ;;		Unchanged: 0/0
 25266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25267 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25268 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25270 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 25271 ;;Total ram usage:        3 bytes
 25272 ;; Hardware stack levels used:    1
 25273 ;; Hardware stack levels required when called:    9
 25274 ;; This function calls:
 25275 ;;		_SendLCDbyte
 25276 ;; This function is called by:
 25277 ;;		_main
 25278 ;;		_Command
 25279 ;;		_LCDdisplayFeedback
 25280 ;;		_LCDScreenUpdate
 25281 ;; This function uses a non-reentrant model
 25282 ;;
 25283                           
 25284                           	psect	text61
 25285  016A5A                     __ptext61:
 25286                           	opt stack 0
 25287  016A5A                     _SetLCDcursor:
 25288                           	opt stack 20
 25289                           
 25290                           ; BSR set to: 1
 25291                           ;incstack = 0
 25292                           ;SetLCDcursor@Row stored from wreg
 25293  016A5A  0101               	movlb	1	; () banked
 25294  016A5C  6F8A               	movwf	SetLCDcursor@Row& (0+255),b
 25295                           
 25296                           ; BSR set to: 1
 25297                           ;LCD.c: 150: char address;
 25298                           ;LCD.c: 153: if (Row == 0)
 25299  016A5E  0101               	movlb	1	; () banked
 25300  016A60  678A               	tstfsz	SetLCDcursor@Row& (0+255),b
 25301  016A62  D002               	goto	l9260
 25302                           
 25303                           ; BSR set to: 1
 25304                           ;LCD.c: 154: {
 25305                           ;LCD.c: 155: address = 0;
 25306  016A64  0E00               	movlw	0
 25307  016A66  D001               	goto	L31
 25308  016A68                     l9260:
 25309                           
 25310                           ; BSR set to: 1
 25311                           ;LCD.c: 157: else
 25312                           ;LCD.c: 158: {
 25313                           ;LCD.c: 159: address = 0x40;
 25314  016A68  0E40               	movlw	64
 25315  016A6A                     L31:
 25316  016A6A  0101               	movlb	1	; () banked
 25317  016A6C  6F8B               	movwf	SetLCDcursor@address& (0+255),b
 25318                           
 25319                           ; BSR set to: 1
 25320                           ;LCD.c: 160: }
 25321                           ;LCD.c: 162: address |= Col;
 25322                           
 25323                           ; BSR set to: 1
 25324  016A6E  0101               	movlb	1	; () banked
 25325  016A70  5189               	movf	SetLCDcursor@Col& (0+255),w,b
 25326  016A72  0101               	movlb	1	; () banked
 25327  016A74  138B               	iorwf	SetLCDcursor@address& (0+255),f,b
 25328                           
 25329                           ; BSR set to: 1
 25330                           ;LCD.c: 163: if(!LCDwait)
 25331  016A76  0101               	movlb	1	; () banked
 25332  016A78  6709               	tstfsz	_LCDwait& (0+255),b
 25333  016A7A  0012               	return	
 25334                           
 25335                           ; BSR set to: 1
 25336                           ;LCD.c: 164: {
 25337                           ;LCD.c: 165: SendLCDbyte(0x80 | address, 0);
 25338  016A7C  0E00               	movlw	0
 25339  016A7E  0101               	movlb	1	; () banked
 25340  016A80  6F85               	movwf	SendLCDbyte@isCommand& (0+255),b
 25341  016A82  0101               	movlb	1	; () banked
 25342  016A84  518B               	movf	SetLCDcursor@address& (0+255),w,b
 25343  016A86  0980               	iorlw	128
 25344  016A88  EC71  F0AA         	call	_SendLCDbyte
 25345  016A8C  0012               	return	
 25346  016A8E                     __end_of_SetLCDcursor:
 25347                           	opt stack 0
 25348                           tblptru	equ	0xFF8
 25349                           tblptrh	equ	0xFF7
 25350                           tblptrl	equ	0xFF6
 25351                           tablat	equ	0xFF5
 25352                           prodh	equ	0xFF4
 25353                           prodl	equ	0xFF3
 25354                           intcon	equ	0xFF2
 25355                           postinc0	equ	0xFEE
 25356                           wreg	equ	0xFE8
 25357                           indf1	equ	0xFE7
 25358                           postinc1	equ	0xFE6
 25359                           postdec1	equ	0xFE5
 25360                           fsr1h	equ	0xFE2
 25361                           fsr1l	equ	0xFE1
 25362                           indf2	equ	0xFDF
 25363                           postinc2	equ	0xFDE
 25364                           postdec2	equ	0xFDD
 25365                           fsr2h	equ	0xFDA
 25366                           fsr2l	equ	0xFD9
 25367                           status	equ	0xFD8
 25368                           
 25369 ;; *************** function _LCDPrintString *****************
 25370 ;; Defined at:
 25371 ;;		line 189 in file "LCD.c"
 25372 ;; Parameters:    Size  Location     Type
 25373 ;;  Text            2   28[BANK1 ] PTR unsigned char 
 25374 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 25375 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 25376 ;;		 -> Scroll_2(16), Scroll_1(16), STR_279(16), STR_277(17), 
 25377 ;;		 -> STR_264(10), STR_243(16), STR_241(16), STR_238(15), 
 25378 ;;		 -> STR_210(17), STR_206(17), STR_186(16), STR_184(16), 
 25379 ;;		 -> STR_182(13), STR_169(14), STR_167(16), STR_165(15), 
 25380 ;;		 -> STR_154(16), Command@buf(200), STR_150(14), STR_148(16), 
 25381 ;;		 -> STR_146(15), STR_128(13), STR_126(15), STR_122(14), 
 25382 ;;		 -> STR_118(16), STR_105(16), STR_97(16), STR_95(16), 
 25383 ;;		 -> STR_92(15), STR_89(15), STR_86(14), STR_83(16), 
 25384 ;;		 -> STR_71(16), STR_64(16), STR_62(15), STR_59(14), 
 25385 ;;		 -> STR_56(16), STR_40(12), STR_38(9), STR_35(8), 
 25386 ;;		 -> STR_32(13), STR_29(9), STR_26(8), STR_23(13), 
 25387 ;;		 -> STR_15(10), STR_14(17), STR_13(16), STR_12(15), 
 25388 ;;		 -> STR_11(14), STR_10(13), STR_9(12), STR_8(11), 
 25389 ;;		 -> STR_7(10), STR_6(9), low_isr@LCD_TEMP(16), 
 25390 ;; Auto vars:     Size  Location     Type
 25391 ;;  c               2   30[BANK1 ] PTR unsigned char 
 25392 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 25393 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 25394 ;;		 -> Scroll_2(16), Scroll_1(16), STR_279(16), STR_277(17), 
 25395 ;;		 -> STR_264(10), STR_243(16), STR_241(16), STR_238(15), 
 25396 ;;		 -> STR_210(17), STR_206(17), STR_186(16), STR_184(16), 
 25397 ;;		 -> STR_182(13), STR_169(14), STR_167(16), STR_165(15), 
 25398 ;;		 -> STR_154(16), Command@buf(200), STR_150(14), STR_148(16), 
 25399 ;;		 -> STR_146(15), STR_128(13), STR_126(15), STR_122(14), 
 25400 ;;		 -> STR_118(16), STR_105(16), STR_97(16), STR_95(16), 
 25401 ;;		 -> STR_92(15), STR_89(15), STR_86(14), STR_83(16), 
 25402 ;;		 -> STR_71(16), STR_64(16), STR_62(15), STR_59(14), 
 25403 ;;		 -> STR_56(16), STR_40(12), STR_38(9), STR_35(8), 
 25404 ;;		 -> STR_32(13), STR_29(9), STR_26(8), STR_23(13), 
 25405 ;;		 -> STR_15(10), STR_14(17), STR_13(16), STR_12(15), 
 25406 ;;		 -> STR_11(14), STR_10(13), STR_9(12), STR_8(11), 
 25407 ;;		 -> STR_7(10), STR_6(9), low_isr@LCD_TEMP(16), 
 25408 ;; Return value:  Size  Location     Type
 25409 ;;		None               void
 25410 ;; Registers used:
 25411 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25412 ;; Tracked objects:
 25413 ;;		On entry : 0/0
 25414 ;;		On exit  : 0/0
 25415 ;;		Unchanged: 0/0
 25416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25417 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25418 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25420 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 25421 ;;Total ram usage:        4 bytes
 25422 ;; Hardware stack levels used:    1
 25423 ;; Hardware stack levels required when called:    9
 25424 ;; This function calls:
 25425 ;;		_SendLCDbyte
 25426 ;; This function is called by:
 25427 ;;		_main
 25428 ;;		_Command
 25429 ;;		_LCDdisplayFeedback
 25430 ;;		_LCDScreenUpdate
 25431 ;; This function uses a non-reentrant model
 25432 ;;
 25433                           
 25434                           	psect	text62
 25435  01628C                     __ptext62:
 25436                           	opt stack 0
 25437  01628C                     _LCDPrintString:
 25438                           	opt stack 19
 25439                           
 25440                           ;LCD.c: 191: unsigned char *c;
 25441                           ;LCD.c: 193: c = Text;
 25442                           
 25443                           ;incstack = 0
 25444  01628C  0101               	movlb	1	; () banked
 25445  01628E  C18A  F18C         	movff	LCDPrintString@Text+1,LCDPrintString@c+1
 25446  016292  0101               	movlb	1	; () banked
 25447  016294  C189  F18B         	movff	LCDPrintString@Text,LCDPrintString@c
 25448                           
 25449                           ;LCD.c: 195: while ((c != 0) && (*c != 0))
 25450  016298  D01B               	goto	l9274
 25451  01629A                     l9270:
 25452                           
 25453                           ;LCD.c: 196: {
 25454                           ;LCD.c: 197: SendLCDbyte(*c, 1);
 25455  01629A  0E01               	movlw	1
 25456  01629C  0101               	movlb	1	; () banked
 25457  01629E  6F85               	movwf	SendLCDbyte@isCommand& (0+255),b
 25458  0162A0  0101               	movlb	1	; () banked
 25459  0162A2  C18B  FFF6         	movff	LCDPrintString@c,tblptrl
 25460  0162A6  0101               	movlb	1	; () banked
 25461  0162A8  C18C  FFF7         	movff	LCDPrintString@c+1,tblptrh
 25462  0162AC  0E00               	movlw	low (__mediumconst shr (0+16))
 25463  0162AE  6EF8               	movwf	tblptru,c
 25464  0162B0  0E0C               	movlw	(high __ramtop+-1)
 25465  0162B2  64F7               	cpfsgt	tblptrh,c
 25466  0162B4  D003               	bra	u11297
 25467  0162B6  0008               	tblrd		*
 25468  0162B8  50F5               	movf	tablat,w,c
 25469  0162BA  D005               	bra	u11290
 25470  0162BC                     u11297:
 25471  0162BC  CFF6 FFE1          	movff	tblptrl,fsr1l
 25472  0162C0  CFF7 FFE2          	movff	tblptrh,fsr1h
 25473  0162C4  50E7               	movf	indf1,w,c
 25474  0162C6                     u11290:
 25475  0162C6  EC71  F0AA         	call	_SendLCDbyte
 25476                           
 25477                           ;LCD.c: 198: c++;
 25478  0162CA  0101               	movlb	1	; () banked
 25479  0162CC  4B8B               	infsnz	LCDPrintString@c& (0+255),f,b
 25480  0162CE  2B8C               	incf	(LCDPrintString@c+1)& (0+255),f,b
 25481  0162D0                     l9274:
 25482                           
 25483                           ; BSR set to: 1
 25484  0162D0  0101               	movlb	1	; () banked
 25485  0162D2  518C               	movf	(LCDPrintString@c+1)& (0+255),w,b
 25486  0162D4  118B               	iorwf	LCDPrintString@c& (0+255),w,b
 25487  0162D6  B4D8               	btfsc	status,2,c
 25488  0162D8  0012               	return	
 25489                           
 25490                           ; BSR set to: 1
 25491  0162DA  0101               	movlb	1	; () banked
 25492  0162DC  C18B  FFF6         	movff	LCDPrintString@c,tblptrl
 25493  0162E0  0101               	movlb	1	; () banked
 25494  0162E2  C18C  FFF7         	movff	LCDPrintString@c+1,tblptrh
 25495  0162E6  0E00               	movlw	low (__mediumconst shr (0+16))
 25496  0162E8  6EF8               	movwf	tblptru,c
 25497  0162EA  0E0C               	movlw	(high __ramtop+-1)
 25498  0162EC  64F7               	cpfsgt	tblptrh,c
 25499  0162EE  D003               	bra	u11317
 25500  0162F0  0008               	tblrd		*
 25501  0162F2  50F5               	movf	tablat,w,c
 25502  0162F4  D005               	bra	u11310
 25503  0162F6                     u11317:
 25504  0162F6  CFF6 FFE1          	movff	tblptrl,fsr1l
 25505  0162FA  CFF7 FFE2          	movff	tblptrh,fsr1h
 25506  0162FE  50E7               	movf	indf1,w,c
 25507  016300                     u11310:
 25508  016300  0900               	iorlw	0
 25509  016302  B4D8               	btfsc	status,2,c
 25510  016304  0012               	return	
 25511  016306  D7C9               	goto	l9270
 25512  016308                     __end_of_LCDPrintString:
 25513                           	opt stack 0
 25514                           tblptru	equ	0xFF8
 25515                           tblptrh	equ	0xFF7
 25516                           tblptrl	equ	0xFF6
 25517                           tablat	equ	0xFF5
 25518                           prodh	equ	0xFF4
 25519                           prodl	equ	0xFF3
 25520                           intcon	equ	0xFF2
 25521                           postinc0	equ	0xFEE
 25522                           wreg	equ	0xFE8
 25523                           indf1	equ	0xFE7
 25524                           postinc1	equ	0xFE6
 25525                           postdec1	equ	0xFE5
 25526                           fsr1h	equ	0xFE2
 25527                           fsr1l	equ	0xFE1
 25528                           indf2	equ	0xFDF
 25529                           postinc2	equ	0xFDE
 25530                           postdec2	equ	0xFDD
 25531                           fsr2h	equ	0xFDA
 25532                           fsr2l	equ	0xFD9
 25533                           status	equ	0xFD8
 25534                           
 25535 ;; *************** function _ClearLCD *****************
 25536 ;; Defined at:
 25537 ;;		line 180 in file "LCD.c"
 25538 ;; Parameters:    Size  Location     Type
 25539 ;;		None
 25540 ;; Auto vars:     Size  Location     Type
 25541 ;;		None
 25542 ;; Return value:  Size  Location     Type
 25543 ;;		None               void
 25544 ;; Registers used:
 25545 ;;		wreg, status,2, status,0, cstack
 25546 ;; Tracked objects:
 25547 ;;		On entry : 0/0
 25548 ;;		On exit  : 0/0
 25549 ;;		Unchanged: 0/0
 25550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25555 ;;Total ram usage:        0 bytes
 25556 ;; Hardware stack levels used:    1
 25557 ;; Hardware stack levels required when called:    9
 25558 ;; This function calls:
 25559 ;;		_SendLCDbyte
 25560 ;; This function is called by:
 25561 ;;		_main
 25562 ;;		_init_LCD
 25563 ;;		_LCDdisplayFeedback
 25564 ;;		_LCDScreenUpdate
 25565 ;; This function uses a non-reentrant model
 25566 ;;
 25567                           
 25568                           	psect	text63
 25569  016C72                     __ptext63:
 25570                           	opt stack 0
 25571  016C72                     _ClearLCD:
 25572                           	opt stack 19
 25573                           
 25574                           ;LCD.c: 185: SendLCDbyte(0x01, 0);
 25575                           
 25576                           ;incstack = 0
 25577  016C72  0E00               	movlw	0
 25578  016C74  0101               	movlb	1	; () banked
 25579  016C76  6F85               	movwf	SendLCDbyte@isCommand& (0+255),b
 25580  016C78  0E01               	movlw	1
 25581  016C7A  EC71  F0AA         	call	_SendLCDbyte
 25582                           
 25583                           ;LCD.c: 186: SendLCDbyte(0x02, 0);
 25584  016C7E  0E00               	movlw	0
 25585  016C80  0101               	movlb	1	; () banked
 25586  016C82  6F85               	movwf	SendLCDbyte@isCommand& (0+255),b
 25587  016C84  0E02               	movlw	2
 25588  016C86  EC71  F0AA         	call	_SendLCDbyte
 25589  016C8A  0012               	return	
 25590  016C8C                     __end_of_ClearLCD:
 25591                           	opt stack 0
 25592                           tblptru	equ	0xFF8
 25593                           tblptrh	equ	0xFF7
 25594                           tblptrl	equ	0xFF6
 25595                           tablat	equ	0xFF5
 25596                           prodh	equ	0xFF4
 25597                           prodl	equ	0xFF3
 25598                           intcon	equ	0xFF2
 25599                           postinc0	equ	0xFEE
 25600                           wreg	equ	0xFE8
 25601                           indf1	equ	0xFE7
 25602                           postinc1	equ	0xFE6
 25603                           postdec1	equ	0xFE5
 25604                           fsr1h	equ	0xFE2
 25605                           fsr1l	equ	0xFE1
 25606                           indf2	equ	0xFDF
 25607                           postinc2	equ	0xFDE
 25608                           postdec2	equ	0xFDD
 25609                           fsr2h	equ	0xFDA
 25610                           fsr2l	equ	0xFD9
 25611                           status	equ	0xFD8
 25612                           
 25613 ;; *************** function _SendLCDbyte *****************
 25614 ;; Defined at:
 25615 ;;		line 73 in file "LCD.c"
 25616 ;; Parameters:    Size  Location     Type
 25617 ;;  data            1    wreg     unsigned char 
 25618 ;;  isCommand       1   24[BANK1 ] unsigned char 
 25619 ;; Auto vars:     Size  Location     Type
 25620 ;;  data            1   25[BANK1 ] unsigned char 
 25621 ;;  LSB_nibble      1   27[BANK1 ] unsigned char 
 25622 ;;  MSB_nibble      1   26[BANK1 ] unsigned char 
 25623 ;; Return value:  Size  Location     Type
 25624 ;;		None               void
 25625 ;; Registers used:
 25626 ;;		wreg, status,2, status,0, cstack
 25627 ;; Tracked objects:
 25628 ;;		On entry : 0/0
 25629 ;;		On exit  : 0/0
 25630 ;;		Unchanged: 0/0
 25631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25632 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25633 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 25634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25635 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 25636 ;;Total ram usage:        4 bytes
 25637 ;; Hardware stack levels used:    1
 25638 ;; Hardware stack levels required when called:    8
 25639 ;; This function calls:
 25640 ;;		_PulseEnablePin
 25641 ;;		_delayUS
 25642 ;; This function is called by:
 25643 ;;		_init_LCD
 25644 ;;		_SetLCDcursor
 25645 ;;		_ClearLCD
 25646 ;;		_LCDPrintString
 25647 ;;		_LCDPrintChar
 25648 ;; This function uses a non-reentrant model
 25649 ;;
 25650                           
 25651                           	psect	text64
 25652  0154E2                     __ptext64:
 25653                           	opt stack 0
 25654  0154E2                     _SendLCDbyte:
 25655                           	opt stack 20
 25656                           
 25657                           ;incstack = 0
 25658                           ;SendLCDbyte@data stored from wreg
 25659  0154E2  0101               	movlb	1	; () banked
 25660  0154E4  6F86               	movwf	SendLCDbyte@data& (0+255),b
 25661                           
 25662                           ; BSR set to: 1
 25663                           ;LCD.c: 75: unsigned char MSB_nibble=0;
 25664  0154E6  0E00               	movlw	0
 25665  0154E8  0101               	movlb	1	; () banked
 25666  0154EA  6F87               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 25667                           
 25668                           ;LCD.c: 76: unsigned char LSB_nibble=0;
 25669  0154EC  0E00               	movlw	0
 25670  0154EE  0101               	movlb	1	; () banked
 25671  0154F0  6F88               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 25672                           
 25673                           ; BSR set to: 1
 25674                           ;LCD.c: 78: LATA &= ~(0b00001000+0b00010000+0b00100000);
 25675  0154F2  0EC7               	movlw	199
 25676  0154F4  1689               	andwf	3977,f,c	;volatile
 25677                           
 25678                           ; BSR set to: 1
 25679                           ;LCD.c: 79: LATE &= ~0b00000001;
 25680  0154F6  908D               	bcf	3981,0,c	;volatile
 25681                           
 25682                           ; BSR set to: 1
 25683                           ;LCD.c: 80: LATD &= ~(0b10000000 + 0b00100000);
 25684  0154F8  0E5F               	movlw	95
 25685  0154FA  168C               	andwf	3980,f,c	;volatile
 25686                           
 25687                           ; BSR set to: 1
 25688                           ;LCD.c: 81: delayUS(10);
 25689  0154FC  0E0A               	movlw	10
 25690  0154FE  0101               	movlb	1	; () banked
 25691  015500  6F7B               	movwf	delayUS@US& (0+255),b
 25692  015502  0E00               	movlw	0
 25693  015504  0101               	movlb	1	; () banked
 25694  015506  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 25695  015508  0E00               	movlw	0
 25696  01550A  0101               	movlb	1	; () banked
 25697  01550C  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 25698  01550E  0E00               	movlw	0
 25699  015510  0101               	movlb	1	; () banked
 25700  015512  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 25701  015514  ECC0  F0B1         	call	_delayUS	;wreg free
 25702                           
 25703                           ;LCD.c: 82: MSB_nibble = (data & 0xF0)>>4;
 25704  015518  0101               	movlb	1	; () banked
 25705  01551A  3986               	swapf	SendLCDbyte@data& (0+255),w,b
 25706  01551C  0B0F               	andlw	15
 25707  01551E  0B0F               	andlw	15
 25708  015520  0101               	movlb	1	; () banked
 25709  015522  6F87               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 25710                           
 25711                           ; BSR set to: 1
 25712                           ;LCD.c: 83: LSB_nibble = (data & 0x0F);
 25713  015524  0101               	movlb	1	; () banked
 25714  015526  5186               	movf	SendLCDbyte@data& (0+255),w,b
 25715  015528  0B0F               	andlw	15
 25716  01552A  0101               	movlb	1	; () banked
 25717  01552C  6F88               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 25718                           
 25719                           ; BSR set to: 1
 25720                           ;LCD.c: 84: if(!LCDwait)
 25721  01552E  0101               	movlb	1	; () banked
 25722  015530  6709               	tstfsz	_LCDwait& (0+255),b
 25723  015532  D035               	goto	l9068
 25724                           
 25725                           ; BSR set to: 1
 25726                           ;LCD.c: 85: {
 25727                           ;LCD.c: 86: if(isCommand)
 25728  015534  0101               	movlb	1	; () banked
 25729  015536  5185               	movf	SendLCDbyte@isCommand& (0+255),w,b
 25730  015538  B4D8               	btfsc	status,2,c
 25731  01553A  D002               	goto	l9024
 25732                           
 25733                           ; BSR set to: 1
 25734                           ;LCD.c: 87: {
 25735                           ;LCD.c: 88: LATD |= (0b00100000);
 25736  01553C  8A8C               	bsf	3980,5,c	;volatile
 25737                           
 25738                           ;LCD.c: 89: }
 25739  01553E  D001               	goto	l9026
 25740  015540                     l9024:
 25741                           
 25742                           ; BSR set to: 1
 25743                           ;LCD.c: 90: else
 25744                           ;LCD.c: 91: {
 25745                           ;LCD.c: 92: LATD &= ~(0b00100000);
 25746  015540  9A8C               	bcf	3980,5,c	;volatile
 25747  015542                     l9026:
 25748                           
 25749                           ; BSR set to: 1
 25750                           ;LCD.c: 93: }
 25751                           ;LCD.c: 94: if(MSB_nibble&0b1000)
 25752  015542  0101               	movlb	1	; () banked
 25753  015544  B787               	btfsc	SendLCDbyte@MSB_nibble& (0+255),3,b
 25754                           
 25755                           ; BSR set to: 1
 25756                           ;LCD.c: 95: {
 25757                           ;LCD.c: 96: LATA |= 0b00001000;
 25758  015546  8689               	bsf	3977,3,c	;volatile
 25759                           
 25760                           ; BSR set to: 1
 25761                           ;LCD.c: 97: }
 25762                           ;LCD.c: 98: if(MSB_nibble&0b0100)
 25763                           
 25764                           ; BSR set to: 1
 25765  015548  0101               	movlb	1	; () banked
 25766  01554A  B587               	btfsc	SendLCDbyte@MSB_nibble& (0+255),2,b
 25767                           
 25768                           ; BSR set to: 1
 25769                           ;LCD.c: 99: {
 25770                           ;LCD.c: 100: LATA |= 0b00010000;
 25771  01554C  8889               	bsf	3977,4,c	;volatile
 25772                           
 25773                           ; BSR set to: 1
 25774                           ;LCD.c: 101: }
 25775                           ;LCD.c: 102: if(MSB_nibble&0b0010)
 25776                           
 25777                           ; BSR set to: 1
 25778  01554E  0101               	movlb	1	; () banked
 25779  015550  B387               	btfsc	SendLCDbyte@MSB_nibble& (0+255),1,b
 25780                           
 25781                           ; BSR set to: 1
 25782                           ;LCD.c: 103: {
 25783                           ;LCD.c: 104: LATA |= 0b00100000;
 25784  015552  8A89               	bsf	3977,5,c	;volatile
 25785                           
 25786                           ; BSR set to: 1
 25787                           ;LCD.c: 105: }
 25788                           ;LCD.c: 106: if(MSB_nibble&0b0001)
 25789                           
 25790                           ; BSR set to: 1
 25791  015554  0101               	movlb	1	; () banked
 25792  015556  B187               	btfsc	SendLCDbyte@MSB_nibble& (0+255),0,b
 25793                           
 25794                           ; BSR set to: 1
 25795                           ;LCD.c: 107: {
 25796                           ;LCD.c: 108: LATE |= 0b00000001;
 25797  015558  808D               	bsf	3981,0,c	;volatile
 25798                           
 25799                           ; BSR set to: 1
 25800                           ;LCD.c: 109: }
 25801                           ;LCD.c: 110: PulseEnablePin();
 25802                           
 25803                           ; BSR set to: 1
 25804  01555A  ECD5  F0B4         	call	_PulseEnablePin	;wreg free
 25805                           
 25806                           ;LCD.c: 111: LATA &= ~(0b00001000+0b00010000+0b00100000);
 25807  01555E  0EC7               	movlw	199
 25808  015560  1689               	andwf	3977,f,c	;volatile
 25809                           
 25810                           ;LCD.c: 112: LATE &= ~0b00000001;
 25811  015562  908D               	bcf	3981,0,c	;volatile
 25812                           
 25813                           ;LCD.c: 113: delayUS(10);
 25814  015564  0E0A               	movlw	10
 25815  015566  0101               	movlb	1	; () banked
 25816  015568  6F7B               	movwf	delayUS@US& (0+255),b
 25817  01556A  0E00               	movlw	0
 25818  01556C  0101               	movlb	1	; () banked
 25819  01556E  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 25820  015570  0E00               	movlw	0
 25821  015572  0101               	movlb	1	; () banked
 25822  015574  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 25823  015576  0E00               	movlw	0
 25824  015578  0101               	movlb	1	; () banked
 25825  01557A  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 25826  01557C  ECC0  F0B1         	call	_delayUS	;wreg free
 25827                           
 25828                           ;LCD.c: 114: if(LSB_nibble&0b1000)
 25829  015580  0101               	movlb	1	; () banked
 25830  015582  B788               	btfsc	SendLCDbyte@LSB_nibble& (0+255),3,b
 25831                           
 25832                           ; BSR set to: 1
 25833                           ;LCD.c: 115: {
 25834                           ;LCD.c: 116: LATA |= 0b00001000;
 25835  015584  8689               	bsf	3977,3,c	;volatile
 25836                           
 25837                           ; BSR set to: 1
 25838                           ;LCD.c: 117: }
 25839                           ;LCD.c: 118: if(LSB_nibble&0b0100)
 25840                           
 25841                           ; BSR set to: 1
 25842  015586  0101               	movlb	1	; () banked
 25843  015588  B588               	btfsc	SendLCDbyte@LSB_nibble& (0+255),2,b
 25844                           
 25845                           ; BSR set to: 1
 25846                           ;LCD.c: 119: {
 25847                           ;LCD.c: 120: LATA |= 0b00010000;
 25848  01558A  8889               	bsf	3977,4,c	;volatile
 25849                           
 25850                           ; BSR set to: 1
 25851                           ;LCD.c: 121: }
 25852                           ;LCD.c: 122: if(LSB_nibble&0b0010)
 25853                           
 25854                           ; BSR set to: 1
 25855  01558C  0101               	movlb	1	; () banked
 25856  01558E  B388               	btfsc	SendLCDbyte@LSB_nibble& (0+255),1,b
 25857                           
 25858                           ; BSR set to: 1
 25859                           ;LCD.c: 123: {
 25860                           ;LCD.c: 124: LATA |= 0b00100000;
 25861  015590  8A89               	bsf	3977,5,c	;volatile
 25862                           
 25863                           ; BSR set to: 1
 25864                           ;LCD.c: 125: }
 25865                           ;LCD.c: 126: if(LSB_nibble&0b0001)
 25866                           
 25867                           ; BSR set to: 1
 25868  015592  0101               	movlb	1	; () banked
 25869  015594  B188               	btfsc	SendLCDbyte@LSB_nibble& (0+255),0,b
 25870                           
 25871                           ; BSR set to: 1
 25872                           ;LCD.c: 127: {
 25873                           ;LCD.c: 128: LATE |= 0b00000001;
 25874  015596  808D               	bsf	3981,0,c	;volatile
 25875                           
 25876                           ; BSR set to: 1
 25877                           ;LCD.c: 129: }
 25878                           ;LCD.c: 130: PulseEnablePin();
 25879                           
 25880                           ; BSR set to: 1
 25881  015598  ECD5  F0B4         	call	_PulseEnablePin	;wreg free
 25882                           
 25883                           ;LCD.c: 131: }
 25884  01559C  0012               	return	
 25885  01559E                     l9068:
 25886                           
 25887                           ;LCD.c: 132: else
 25888                           ;LCD.c: 133: {
 25889                           ;LCD.c: 134: delayUS(20);
 25890  01559E  0E14               	movlw	20
 25891  0155A0  0101               	movlb	1	; () banked
 25892  0155A2  6F7B               	movwf	delayUS@US& (0+255),b
 25893  0155A4  0E00               	movlw	0
 25894  0155A6  0101               	movlb	1	; () banked
 25895  0155A8  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 25896  0155AA  0E00               	movlw	0
 25897  0155AC  0101               	movlb	1	; () banked
 25898  0155AE  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 25899  0155B0  0E00               	movlw	0
 25900  0155B2  0101               	movlb	1	; () banked
 25901  0155B4  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 25902  0155B6  ECC0  F0B1         	call	_delayUS	;wreg free
 25903  0155BA  0012               	return	
 25904  0155BC                     __end_of_SendLCDbyte:
 25905                           	opt stack 0
 25906                           tblptru	equ	0xFF8
 25907                           tblptrh	equ	0xFF7
 25908                           tblptrl	equ	0xFF6
 25909                           tablat	equ	0xFF5
 25910                           prodh	equ	0xFF4
 25911                           prodl	equ	0xFF3
 25912                           intcon	equ	0xFF2
 25913                           postinc0	equ	0xFEE
 25914                           wreg	equ	0xFE8
 25915                           indf1	equ	0xFE7
 25916                           postinc1	equ	0xFE6
 25917                           postdec1	equ	0xFE5
 25918                           fsr1h	equ	0xFE2
 25919                           fsr1l	equ	0xFE1
 25920                           indf2	equ	0xFDF
 25921                           postinc2	equ	0xFDE
 25922                           postdec2	equ	0xFDD
 25923                           fsr2h	equ	0xFDA
 25924                           fsr2l	equ	0xFD9
 25925                           status	equ	0xFD8
 25926                           
 25927 ;; *************** function _PulseEnablePin *****************
 25928 ;; Defined at:
 25929 ;;		line 138 in file "LCD.c"
 25930 ;; Parameters:    Size  Location     Type
 25931 ;;		None
 25932 ;; Auto vars:     Size  Location     Type
 25933 ;;		None
 25934 ;; Return value:  Size  Location     Type
 25935 ;;		None               void
 25936 ;; Registers used:
 25937 ;;		wreg, status,2, status,0, cstack
 25938 ;; Tracked objects:
 25939 ;;		On entry : 0/0
 25940 ;;		On exit  : 0/0
 25941 ;;		Unchanged: 0/0
 25942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25947 ;;Total ram usage:        0 bytes
 25948 ;; Hardware stack levels used:    1
 25949 ;; Hardware stack levels required when called:    7
 25950 ;; This function calls:
 25951 ;;		_delayUS
 25952 ;; This function is called by:
 25953 ;;		_init_LCD
 25954 ;;		_SendLCDbyte
 25955 ;; This function uses a non-reentrant model
 25956 ;;
 25957                           
 25958                           	psect	text65
 25959  0169AA                     __ptext65:
 25960                           	opt stack 0
 25961  0169AA                     _PulseEnablePin:
 25962                           	opt stack 20
 25963                           
 25964                           ;LCD.c: 141: LATD |= (0b10000000);
 25965                           
 25966                           ;incstack = 0
 25967  0169AA  8E8C               	bsf	3980,7,c	;volatile
 25968                           
 25969                           ;LCD.c: 142: delayUS(2500);
 25970  0169AC  0EC4               	movlw	196
 25971  0169AE  0101               	movlb	1	; () banked
 25972  0169B0  6F7B               	movwf	delayUS@US& (0+255),b
 25973  0169B2  0E09               	movlw	9
 25974  0169B4  0101               	movlb	1	; () banked
 25975  0169B6  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 25976  0169B8  0E00               	movlw	0
 25977  0169BA  0101               	movlb	1	; () banked
 25978  0169BC  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 25979  0169BE  0E00               	movlw	0
 25980  0169C0  0101               	movlb	1	; () banked
 25981  0169C2  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 25982  0169C4  ECC0  F0B1         	call	_delayUS	;wreg free
 25983                           
 25984                           ;LCD.c: 144: LATD &= ~(0b10000000);
 25985  0169C8  9E8C               	bcf	3980,7,c	;volatile
 25986                           
 25987                           ;LCD.c: 145: delayUS(2500);
 25988  0169CA  0EC4               	movlw	196
 25989  0169CC  0101               	movlb	1	; () banked
 25990  0169CE  6F7B               	movwf	delayUS@US& (0+255),b
 25991  0169D0  0E09               	movlw	9
 25992  0169D2  0101               	movlb	1	; () banked
 25993  0169D4  6F7C               	movwf	(delayUS@US+1)& (0+255),b
 25994  0169D6  0E00               	movlw	0
 25995  0169D8  0101               	movlb	1	; () banked
 25996  0169DA  6F7D               	movwf	(delayUS@US+2)& (0+255),b
 25997  0169DC  0E00               	movlw	0
 25998  0169DE  0101               	movlb	1	; () banked
 25999  0169E0  6F7E               	movwf	(delayUS@US+3)& (0+255),b
 26000  0169E2  ECC0  F0B1         	call	_delayUS	;wreg free
 26001  0169E6  0012               	return	
 26002  0169E8                     __end_of_PulseEnablePin:
 26003                           	opt stack 0
 26004                           tblptru	equ	0xFF8
 26005                           tblptrh	equ	0xFF7
 26006                           tblptrl	equ	0xFF6
 26007                           tablat	equ	0xFF5
 26008                           prodh	equ	0xFF4
 26009                           prodl	equ	0xFF3
 26010                           intcon	equ	0xFF2
 26011                           postinc0	equ	0xFEE
 26012                           wreg	equ	0xFE8
 26013                           indf1	equ	0xFE7
 26014                           postinc1	equ	0xFE6
 26015                           postdec1	equ	0xFE5
 26016                           fsr1h	equ	0xFE2
 26017                           fsr1l	equ	0xFE1
 26018                           indf2	equ	0xFDF
 26019                           postinc2	equ	0xFDE
 26020                           postdec2	equ	0xFDD
 26021                           fsr2h	equ	0xFDA
 26022                           fsr2l	equ	0xFD9
 26023                           status	equ	0xFD8
 26024                           
 26025 ;; *************** function _delayUS *****************
 26026 ;; Defined at:
 26027 ;;		line 30 in file "MISC.c"
 26028 ;; Parameters:    Size  Location     Type
 26029 ;;  US              4   14[BANK1 ] long 
 26030 ;; Auto vars:     Size  Location     Type
 26031 ;;  i               4   19[BANK1 ] long 
 26032 ;;  j               1   23[BANK1 ] unsigned char 
 26033 ;; Return value:  Size  Location     Type
 26034 ;;		None               void
 26035 ;; Registers used:
 26036 ;;		wreg, status,2, status,0
 26037 ;; Tracked objects:
 26038 ;;		On entry : 0/0
 26039 ;;		On exit  : 0/0
 26040 ;;		Unchanged: 0/0
 26041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26042 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26043 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 26044 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26045 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 26046 ;;Total ram usage:       10 bytes
 26047 ;; Hardware stack levels used:    1
 26048 ;; Hardware stack levels required when called:    6
 26049 ;; This function calls:
 26050 ;;		Nothing
 26051 ;; This function is called by:
 26052 ;;		_main
 26053 ;;		_InitApp
 26054 ;;		_Command
 26055 ;;		_Send_Config1
 26056 ;;		_Zero_Config1
 26057 ;;		_One_Config1
 26058 ;;		_f_Config1
 26059 ;;		_Send_Config2
 26060 ;;		_Zero_Config2
 26061 ;;		_One_Config2
 26062 ;;		_init_LCD
 26063 ;;		_SendLCDbyte
 26064 ;;		_PulseEnablePin
 26065 ;;		_LCDScreenUpdate
 26066 ;;		_ResetI2C
 26067 ;; This function uses a non-reentrant model
 26068 ;;
 26069                           
 26070                           	psect	text66
 26071  016380                     __ptext66:
 26072                           	opt stack 0
 26073  016380                     _delayUS:
 26074                           	opt stack 22
 26075                           
 26076                           ;MISC.c: 32: long i;
 26077                           ;MISC.c: 33: unsigned char j;
 26078                           ;MISC.c: 34: for(i=0;i<US;i+=31)
 26079                           
 26080                           ;incstack = 0
 26081  016380  0E00               	movlw	0
 26082  016382  0101               	movlb	1	; () banked
 26083  016384  6F80               	movwf	delayUS@i& (0+255),b
 26084  016386  0E00               	movlw	0
 26085  016388  0101               	movlb	1	; () banked
 26086  01638A  6F81               	movwf	(delayUS@i+1)& (0+255),b
 26087  01638C  0E00               	movlw	0
 26088  01638E  0101               	movlb	1	; () banked
 26089  016390  6F82               	movwf	(delayUS@i+2)& (0+255),b
 26090  016392  0E00               	movlw	0
 26091  016394  0101               	movlb	1	; () banked
 26092  016396  6F83               	movwf	(delayUS@i+3)& (0+255),b
 26093  016398  D015               	goto	l201
 26094  01639A                     l8932:
 26095                           
 26096                           ; BSR set to: 1
 26097                           ;MISC.c: 35: {
 26098                           ;MISC.c: 36: for(j=0;j<41;j++)
 26099  01639A  0E00               	movlw	0
 26100  01639C  0101               	movlb	1	; () banked
 26101  01639E  6F84               	movwf	delayUS@j& (0+255),b
 26102  0163A0  D003               	goto	L32
 26103  0163A2                     l203:
 26104                           
 26105                           ; BSR set to: 1
 26106                           ;MISC.c: 37: {
 26107                           ;MISC.c: 38: __nop();
 26108  0163A2  F000               	nop	
 26109  0163A4  0101               	movlb	1	; () banked
 26110  0163A6  2B84               	incf	delayUS@j& (0+255),f,b
 26111  0163A8                     L32:
 26112                           
 26113                           ; BSR set to: 1
 26114  0163A8  0E28               	movlw	40
 26115  0163AA  0101               	movlb	1	; () banked
 26116  0163AC  6584               	cpfsgt	delayUS@j& (0+255),b
 26117  0163AE  D7F9               	goto	l203
 26118                           
 26119                           ; BSR set to: 1
 26120                           
 26121                           ; BSR set to: 1
 26122  0163B0  0E1F               	movlw	31
 26123  0163B2  0101               	movlb	1	; () banked
 26124  0163B4  2780               	addwf	delayUS@i& (0+255),f,b
 26125  0163B6  0E00               	movlw	0
 26126  0163B8  0101               	movlb	1	; () banked
 26127  0163BA  2381               	addwfc	(delayUS@i+1)& (0+255),f,b
 26128  0163BC  0101               	movlb	1	; () banked
 26129  0163BE  2382               	addwfc	(delayUS@i+2)& (0+255),f,b
 26130  0163C0  0101               	movlb	1	; () banked
 26131  0163C2  2383               	addwfc	(delayUS@i+3)& (0+255),f,b
 26132  0163C4                     l201:
 26133                           
 26134                           ; BSR set to: 1
 26135  0163C4  0101               	movlb	1	; () banked
 26136  0163C6  5183               	movf	(delayUS@i+3)& (0+255),w,b
 26137  0163C8  0A80               	xorlw	128
 26138  0163CA  0101               	movlb	1	; () banked
 26139  0163CC  6F7F               	movwf	??_delayUS& (0+255),b
 26140  0163CE  0101               	movlb	1	; () banked
 26141  0163D0  517B               	movf	delayUS@US& (0+255),w,b
 26142  0163D2  0101               	movlb	1	; () banked
 26143  0163D4  5D80               	subwf	delayUS@i& (0+255),w,b
 26144  0163D6  0101               	movlb	1	; () banked
 26145  0163D8  517C               	movf	(delayUS@US+1)& (0+255),w,b
 26146  0163DA  0101               	movlb	1	; () banked
 26147  0163DC  5981               	subwfb	(delayUS@i+1)& (0+255),w,b
 26148  0163DE  0101               	movlb	1	; () banked
 26149  0163E0  517D               	movf	(delayUS@US+2)& (0+255),w,b
 26150  0163E2  0101               	movlb	1	; () banked
 26151  0163E4  5982               	subwfb	(delayUS@i+2)& (0+255),w,b
 26152  0163E6  0101               	movlb	1	; () banked
 26153  0163E8  517E               	movf	(delayUS@US+3)& (0+255),w,b
 26154  0163EA  0A80               	xorlw	128
 26155  0163EC  0101               	movlb	1	; () banked
 26156  0163EE  597F               	subwfb	??_delayUS& (0+255),w,b
 26157  0163F0  B0D8               	btfsc	status,0,c
 26158                           
 26159                           ; BSR set to: 1
 26160                           
 26161                           ; BSR set to: 1
 26162  0163F2  0012               	return	
 26163  0163F4  D7D2               	goto	l8932
 26164  0163F6                     __end_of_delayUS:
 26165                           	opt stack 0
 26166                           tblptru	equ	0xFF8
 26167                           tblptrh	equ	0xFF7
 26168                           tblptrl	equ	0xFF6
 26169                           tablat	equ	0xFF5
 26170                           prodh	equ	0xFF4
 26171                           prodl	equ	0xFF3
 26172                           intcon	equ	0xFF2
 26173                           postinc0	equ	0xFEE
 26174                           wreg	equ	0xFE8
 26175                           indf1	equ	0xFE7
 26176                           postinc1	equ	0xFE6
 26177                           postdec1	equ	0xFE5
 26178                           fsr1h	equ	0xFE2
 26179                           fsr1l	equ	0xFE1
 26180                           indf2	equ	0xFDF
 26181                           postinc2	equ	0xFDE
 26182                           postdec2	equ	0xFDD
 26183                           fsr2h	equ	0xFDA
 26184                           fsr2l	equ	0xFD9
 26185                           status	equ	0xFD8
 26186                           
 26187 ;; *************** function _LCD_Scroll *****************
 26188 ;; Defined at:
 26189 ;;		line 343 in file "LCD.c"
 26190 ;; Parameters:    Size  Location     Type
 26191 ;;  This            2   29[BANK1 ] PTR unsigned char 
 26192 ;;		 -> STR_275(5), STR_274(5), STR_273(10), STR_272(16), 
 26193 ;;		 -> STR_271(11), STR_270(12), STR_269(9), STR_268(14), 
 26194 ;;		 -> STR_251(6), STR_250(9), STR_249(14), STR_233(4), 
 26195 ;;		 -> STR_232(5), STR_231(8), STR_230(10), STR_229(9), 
 26196 ;;		 -> STR_198(2), STR_197(10), STR_196(9), STR_177(10), 
 26197 ;;		 -> STR_176(10), STR_175(13), STR_160(10), STR_159(10), 
 26198 ;;		 -> STR_158(17), STR_138(6), STR_137(6), STR_136(9), 
 26199 ;;		 -> STR_135(10), STR_110(7), STR_109(4), STR_108(6), 
 26200 ;;		 -> STR_107(9), STR_106(13), STR_75(4), STR_74(6), 
 26201 ;;		 -> STR_73(9), STR_72(14), STR_50(5), STR_49(5), 
 26202 ;;		 -> STR_48(9), STR_47(9), 
 26203 ;; Auto vars:     Size  Location     Type
 26204 ;;		None
 26205 ;; Return value:  Size  Location     Type
 26206 ;;		None               void
 26207 ;; Registers used:
 26208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26209 ;; Tracked objects:
 26210 ;;		On entry : 0/0
 26211 ;;		On exit  : 0/0
 26212 ;;		Unchanged: 0/0
 26213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26214 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26217 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26218 ;;Total ram usage:        2 bytes
 26219 ;; Hardware stack levels used:    1
 26220 ;; Hardware stack levels required when called:    8
 26221 ;; This function calls:
 26222 ;;		_BufferCopy
 26223 ;; This function is called by:
 26224 ;;		_Command
 26225 ;; This function uses a non-reentrant model
 26226 ;;
 26227                           
 26228                           	psect	text67
 26229  014070                     __ptext67:
 26230                           	opt stack 0
 26231  014070                     _LCD_Scroll:
 26232                           	opt stack 20
 26233                           
 26234                           ;LCD.c: 345: if(!LCDwait)
 26235                           
 26236                           ; BSR set to: 1
 26237                           ;incstack = 0
 26238  014070  0101               	movlb	1	; () banked
 26239  014072  6709               	tstfsz	_LCDwait& (0+255),b
 26240  014074  0012               	return	
 26241                           
 26242                           ; BSR set to: 1
 26243                           ;LCD.c: 346: {
 26244                           ;LCD.c: 347: LCDclearCount = 15000;
 26245  014076  0E98               	movlw	152
 26246  014078  0101               	movlb	1	; () banked
 26247  01407A  6FC8               	movwf	_LCDclearCount& (0+255),b
 26248  01407C  0E3A               	movlw	58
 26249  01407E  0101               	movlb	1	; () banked
 26250  014080  6FC9               	movwf	(_LCDclearCount+1)& (0+255),b
 26251  014082  0E00               	movlw	0
 26252  014084  0101               	movlb	1	; () banked
 26253  014086  6FCA               	movwf	(_LCDclearCount+2)& (0+255),b
 26254  014088  0E00               	movlw	0
 26255  01408A  0101               	movlb	1	; () banked
 26256  01408C  6FCB               	movwf	(_LCDclearCount+3)& (0+255),b
 26257                           
 26258                           ; BSR set to: 1
 26259                           ;LCD.c: 348: ScrollFIFOCount++;
 26260  01408E  0101               	movlb	1	; () banked
 26261  014090  2B0B               	incf	_ScrollFIFOCount& (0+255),f,b
 26262                           
 26263                           ; BSR set to: 1
 26264                           ;LCD.c: 349: if(ScrollFIFOCount == 1)
 26265  014092  0101               	movlb	1	; () banked
 26266  014094  050B               	decf	_ScrollFIFOCount& (0+255),w,b
 26267  014096  A4D8               	btfss	status,2,c
 26268  014098  D017               	goto	l10410
 26269                           
 26270                           ; BSR set to: 1
 26271                           ;LCD.c: 350: {
 26272                           ;LCD.c: 351: BufferCopy(This,Scroll_1, 16, 0);
 26273  01409A  0101               	movlb	1	; () banked
 26274  01409C  C18B  F184         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26275  0140A0  0101               	movlb	1	; () banked
 26276  0140A2  C18A  F183         	movff	LCD_Scroll@This,BufferCopy@from
 26277  0140A6  0101               	movlb	1	; () banked
 26278  0140A8  0E01               	movlw	high _Scroll_1
 26279  0140AA  0101               	movlb	1	; () banked
 26280  0140AC  6F86               	movwf	(BufferCopy@to+1)& (0+255),b
 26281  0140AE  0101               	movlb	1	; () banked
 26282  0140B0  0E0D               	movlw	low _Scroll_1
 26283  0140B2  0101               	movlb	1	; () banked
 26284  0140B4  6F85               	movwf	BufferCopy@to& (0+255),b
 26285  0140B6  0E10               	movlw	16
 26286  0140B8  0101               	movlb	1	; () banked
 26287  0140BA  6F87               	movwf	BufferCopy@count& (0+255),b
 26288  0140BC  0E00               	movlw	0
 26289  0140BE  0101               	movlb	1	; () banked
 26290  0140C0  6F88               	movwf	BufferCopy@shift& (0+255),b
 26291  0140C2  ECA9  F0AB         	call	_BufferCopy	;wreg free
 26292                           
 26293                           ;LCD.c: 352: }
 26294  0140C6  0012               	return	
 26295  0140C8                     l10410:
 26296                           
 26297                           ;LCD.c: 353: else if(ScrollFIFOCount == 2)
 26298  0140C8  0101               	movlb	1	; () banked
 26299  0140CA  510B               	movf	_ScrollFIFOCount& (0+255),w,b
 26300  0140CC  0A02               	xorlw	2
 26301  0140CE  A4D8               	btfss	status,2,c
 26302  0140D0  D017               	goto	l10414
 26303                           
 26304                           ; BSR set to: 1
 26305                           ;LCD.c: 354: {
 26306                           ;LCD.c: 355: BufferCopy(This,Scroll_2, 16, 0);
 26307  0140D2  0101               	movlb	1	; () banked
 26308  0140D4  C18B  F184         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26309  0140D8  0101               	movlb	1	; () banked
 26310  0140DA  C18A  F183         	movff	LCD_Scroll@This,BufferCopy@from
 26311  0140DE  0101               	movlb	1	; () banked
 26312  0140E0  0E01               	movlw	high _Scroll_2
 26313  0140E2  0101               	movlb	1	; () banked
 26314  0140E4  6F86               	movwf	(BufferCopy@to+1)& (0+255),b
 26315  0140E6  0101               	movlb	1	; () banked
 26316  0140E8  0E1D               	movlw	low _Scroll_2
 26317  0140EA  0101               	movlb	1	; () banked
 26318  0140EC  6F85               	movwf	BufferCopy@to& (0+255),b
 26319  0140EE  0E10               	movlw	16
 26320  0140F0  0101               	movlb	1	; () banked
 26321  0140F2  6F87               	movwf	BufferCopy@count& (0+255),b
 26322  0140F4  0E00               	movlw	0
 26323  0140F6  0101               	movlb	1	; () banked
 26324  0140F8  6F88               	movwf	BufferCopy@shift& (0+255),b
 26325  0140FA  ECA9  F0AB         	call	_BufferCopy	;wreg free
 26326                           
 26327                           ;LCD.c: 356: }
 26328  0140FE  0012               	return	
 26329  014100                     l10414:
 26330                           
 26331                           ;LCD.c: 357: else if(ScrollFIFOCount == 3)
 26332  014100  0101               	movlb	1	; () banked
 26333  014102  510B               	movf	_ScrollFIFOCount& (0+255),w,b
 26334  014104  0A03               	xorlw	3
 26335  014106  A4D8               	btfss	status,2,c
 26336  014108  D017               	goto	l10418
 26337                           
 26338                           ; BSR set to: 1
 26339                           ;LCD.c: 358: {
 26340                           ;LCD.c: 359: BufferCopy(This,Scroll_3, 16, 0);
 26341  01410A  0101               	movlb	1	; () banked
 26342  01410C  C18B  F184         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26343  014110  0101               	movlb	1	; () banked
 26344  014112  C18A  F183         	movff	LCD_Scroll@This,BufferCopy@from
 26345  014116  0101               	movlb	1	; () banked
 26346  014118  0E01               	movlw	high _Scroll_3
 26347  01411A  0101               	movlb	1	; () banked
 26348  01411C  6F86               	movwf	(BufferCopy@to+1)& (0+255),b
 26349  01411E  0101               	movlb	1	; () banked
 26350  014120  0E2D               	movlw	low _Scroll_3
 26351  014122  0101               	movlb	1	; () banked
 26352  014124  6F85               	movwf	BufferCopy@to& (0+255),b
 26353  014126  0E10               	movlw	16
 26354  014128  0101               	movlb	1	; () banked
 26355  01412A  6F87               	movwf	BufferCopy@count& (0+255),b
 26356  01412C  0E00               	movlw	0
 26357  01412E  0101               	movlb	1	; () banked
 26358  014130  6F88               	movwf	BufferCopy@shift& (0+255),b
 26359  014132  ECA9  F0AB         	call	_BufferCopy	;wreg free
 26360                           
 26361                           ;LCD.c: 360: }
 26362  014136  0012               	return	
 26363  014138                     l10418:
 26364                           
 26365                           ;LCD.c: 361: else if(ScrollFIFOCount == 4)
 26366  014138  0101               	movlb	1	; () banked
 26367  01413A  510B               	movf	_ScrollFIFOCount& (0+255),w,b
 26368  01413C  0A04               	xorlw	4
 26369  01413E  A4D8               	btfss	status,2,c
 26370  014140  D017               	goto	l10422
 26371                           
 26372                           ; BSR set to: 1
 26373                           ;LCD.c: 362: {
 26374                           ;LCD.c: 363: BufferCopy(This,Scroll_4, 16, 0);
 26375  014142  0101               	movlb	1	; () banked
 26376  014144  C18B  F184         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26377  014148  0101               	movlb	1	; () banked
 26378  01414A  C18A  F183         	movff	LCD_Scroll@This,BufferCopy@from
 26379  01414E  0101               	movlb	1	; () banked
 26380  014150  0E01               	movlw	high _Scroll_4
 26381  014152  0101               	movlb	1	; () banked
 26382  014154  6F86               	movwf	(BufferCopy@to+1)& (0+255),b
 26383  014156  0101               	movlb	1	; () banked
 26384  014158  0E3D               	movlw	low _Scroll_4
 26385  01415A  0101               	movlb	1	; () banked
 26386  01415C  6F85               	movwf	BufferCopy@to& (0+255),b
 26387  01415E  0E10               	movlw	16
 26388  014160  0101               	movlb	1	; () banked
 26389  014162  6F87               	movwf	BufferCopy@count& (0+255),b
 26390  014164  0E00               	movlw	0
 26391  014166  0101               	movlb	1	; () banked
 26392  014168  6F88               	movwf	BufferCopy@shift& (0+255),b
 26393  01416A  ECA9  F0AB         	call	_BufferCopy	;wreg free
 26394                           
 26395                           ;LCD.c: 364: }
 26396  01416E  0012               	return	
 26397  014170                     l10422:
 26398                           
 26399                           ;LCD.c: 365: else if(ScrollFIFOCount == 5)
 26400  014170  0101               	movlb	1	; () banked
 26401  014172  510B               	movf	_ScrollFIFOCount& (0+255),w,b
 26402  014174  0A05               	xorlw	5
 26403  014176  A4D8               	btfss	status,2,c
 26404  014178  D017               	goto	l10426
 26405                           
 26406                           ; BSR set to: 1
 26407                           ;LCD.c: 366: {
 26408                           ;LCD.c: 367: BufferCopy(This,Scroll_5, 16, 0);
 26409  01417A  0101               	movlb	1	; () banked
 26410  01417C  C18B  F184         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26411  014180  0101               	movlb	1	; () banked
 26412  014182  C18A  F183         	movff	LCD_Scroll@This,BufferCopy@from
 26413  014186  0101               	movlb	1	; () banked
 26414  014188  0E01               	movlw	high _Scroll_5
 26415  01418A  0101               	movlb	1	; () banked
 26416  01418C  6F86               	movwf	(BufferCopy@to+1)& (0+255),b
 26417  01418E  0101               	movlb	1	; () banked
 26418  014190  0E4D               	movlw	low _Scroll_5
 26419  014192  0101               	movlb	1	; () banked
 26420  014194  6F85               	movwf	BufferCopy@to& (0+255),b
 26421  014196  0E10               	movlw	16
 26422  014198  0101               	movlb	1	; () banked
 26423  01419A  6F87               	movwf	BufferCopy@count& (0+255),b
 26424  01419C  0E00               	movlw	0
 26425  01419E  0101               	movlb	1	; () banked
 26426  0141A0  6F88               	movwf	BufferCopy@shift& (0+255),b
 26427  0141A2  ECA9  F0AB         	call	_BufferCopy	;wreg free
 26428                           
 26429                           ;LCD.c: 368: }
 26430  0141A6  0012               	return	
 26431  0141A8                     l10426:
 26432                           
 26433                           ;LCD.c: 369: else if(ScrollFIFOCount == 6)
 26434  0141A8  0101               	movlb	1	; () banked
 26435  0141AA  510B               	movf	_ScrollFIFOCount& (0+255),w,b
 26436  0141AC  0A06               	xorlw	6
 26437  0141AE  A4D8               	btfss	status,2,c
 26438  0141B0  D017               	goto	l10430
 26439                           
 26440                           ; BSR set to: 1
 26441                           ;LCD.c: 370: {
 26442                           ;LCD.c: 371: BufferCopy(This,Scroll_6, 16, 0);
 26443  0141B2  0101               	movlb	1	; () banked
 26444  0141B4  C18B  F184         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26445  0141B8  0101               	movlb	1	; () banked
 26446  0141BA  C18A  F183         	movff	LCD_Scroll@This,BufferCopy@from
 26447  0141BE  0101               	movlb	1	; () banked
 26448  0141C0  0E01               	movlw	high _Scroll_6
 26449  0141C2  0101               	movlb	1	; () banked
 26450  0141C4  6F86               	movwf	(BufferCopy@to+1)& (0+255),b
 26451  0141C6  0101               	movlb	1	; () banked
 26452  0141C8  0E5D               	movlw	low _Scroll_6
 26453  0141CA  0101               	movlb	1	; () banked
 26454  0141CC  6F85               	movwf	BufferCopy@to& (0+255),b
 26455  0141CE  0E10               	movlw	16
 26456  0141D0  0101               	movlb	1	; () banked
 26457  0141D2  6F87               	movwf	BufferCopy@count& (0+255),b
 26458  0141D4  0E00               	movlw	0
 26459  0141D6  0101               	movlb	1	; () banked
 26460  0141D8  6F88               	movwf	BufferCopy@shift& (0+255),b
 26461  0141DA  ECA9  F0AB         	call	_BufferCopy	;wreg free
 26462                           
 26463                           ;LCD.c: 372: }
 26464  0141DE  0012               	return	
 26465  0141E0                     l10430:
 26466                           
 26467                           ;LCD.c: 373: else if(ScrollFIFOCount == 7)
 26468  0141E0  0101               	movlb	1	; () banked
 26469  0141E2  510B               	movf	_ScrollFIFOCount& (0+255),w,b
 26470  0141E4  0A07               	xorlw	7
 26471  0141E6  A4D8               	btfss	status,2,c
 26472  0141E8  D015               	goto	l10434
 26473                           
 26474                           ; BSR set to: 1
 26475                           ;LCD.c: 374: {
 26476                           ;LCD.c: 375: BufferCopy(This,Scroll_7, 16, 0);
 26477  0141EA  0101               	movlb	1	; () banked
 26478  0141EC  C18B  F184         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26479  0141F0  0101               	movlb	1	; () banked
 26480  0141F2  C18A  F183         	movff	LCD_Scroll@This,BufferCopy@from
 26481  0141F6  0E00               	movlw	high _Scroll_7
 26482  0141F8  0101               	movlb	1	; () banked
 26483  0141FA  6F86               	movwf	(BufferCopy@to+1)& (0+255),b
 26484  0141FC  0E27               	movlw	low _Scroll_7
 26485  0141FE  0101               	movlb	1	; () banked
 26486  014200  6F85               	movwf	BufferCopy@to& (0+255),b
 26487  014202  0E10               	movlw	16
 26488  014204  0101               	movlb	1	; () banked
 26489  014206  6F87               	movwf	BufferCopy@count& (0+255),b
 26490  014208  0E00               	movlw	0
 26491  01420A  0101               	movlb	1	; () banked
 26492  01420C  6F88               	movwf	BufferCopy@shift& (0+255),b
 26493  01420E  ECA9  F0AB         	call	_BufferCopy	;wreg free
 26494                           
 26495                           ;LCD.c: 376: }
 26496  014212  0012               	return	
 26497  014214                     l10434:
 26498                           
 26499                           ;LCD.c: 377: else if(ScrollFIFOCount == 8)
 26500  014214  0101               	movlb	1	; () banked
 26501  014216  510B               	movf	_ScrollFIFOCount& (0+255),w,b
 26502  014218  0A08               	xorlw	8
 26503  01421A  A4D8               	btfss	status,2,c
 26504  01421C  D015               	goto	l10438
 26505                           
 26506                           ; BSR set to: 1
 26507                           ;LCD.c: 378: {
 26508                           ;LCD.c: 379: BufferCopy(This,Scroll_8, 16, 0);
 26509  01421E  0101               	movlb	1	; () banked
 26510  014220  C18B  F184         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26511  014224  0101               	movlb	1	; () banked
 26512  014226  C18A  F183         	movff	LCD_Scroll@This,BufferCopy@from
 26513  01422A  0E00               	movlw	high _Scroll_8
 26514  01422C  0101               	movlb	1	; () banked
 26515  01422E  6F86               	movwf	(BufferCopy@to+1)& (0+255),b
 26516  014230  0E37               	movlw	low _Scroll_8
 26517  014232  0101               	movlb	1	; () banked
 26518  014234  6F85               	movwf	BufferCopy@to& (0+255),b
 26519  014236  0E10               	movlw	16
 26520  014238  0101               	movlb	1	; () banked
 26521  01423A  6F87               	movwf	BufferCopy@count& (0+255),b
 26522  01423C  0E00               	movlw	0
 26523  01423E  0101               	movlb	1	; () banked
 26524  014240  6F88               	movwf	BufferCopy@shift& (0+255),b
 26525  014242  ECA9  F0AB         	call	_BufferCopy	;wreg free
 26526                           
 26527                           ;LCD.c: 380: }
 26528  014246  0012               	return	
 26529  014248                     l10438:
 26530                           
 26531                           ;LCD.c: 381: else if(ScrollFIFOCount == 9)
 26532  014248  0101               	movlb	1	; () banked
 26533  01424A  510B               	movf	_ScrollFIFOCount& (0+255),w,b
 26534  01424C  0A09               	xorlw	9
 26535  01424E  A4D8               	btfss	status,2,c
 26536  014250  D017               	goto	l10442
 26537                           
 26538                           ; BSR set to: 1
 26539                           ;LCD.c: 382: {
 26540                           ;LCD.c: 383: BufferCopy(This,Scroll_9, 16, 0);
 26541  014252  0101               	movlb	1	; () banked
 26542  014254  C18B  F184         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26543  014258  0101               	movlb	1	; () banked
 26544  01425A  C18A  F183         	movff	LCD_Scroll@This,BufferCopy@from
 26545  01425E  0100               	movlb	0	; () banked
 26546  014260  0E00               	movlw	high _Scroll_9
 26547  014262  0101               	movlb	1	; () banked
 26548  014264  6F86               	movwf	(BufferCopy@to+1)& (0+255),b
 26549  014266  0100               	movlb	0	; () banked
 26550  014268  0EE9               	movlw	low _Scroll_9
 26551  01426A  0101               	movlb	1	; () banked
 26552  01426C  6F85               	movwf	BufferCopy@to& (0+255),b
 26553  01426E  0E10               	movlw	16
 26554  014270  0101               	movlb	1	; () banked
 26555  014272  6F87               	movwf	BufferCopy@count& (0+255),b
 26556  014274  0E00               	movlw	0
 26557  014276  0101               	movlb	1	; () banked
 26558  014278  6F88               	movwf	BufferCopy@shift& (0+255),b
 26559  01427A  ECA9  F0AB         	call	_BufferCopy	;wreg free
 26560                           
 26561                           ;LCD.c: 384: }
 26562  01427E  0012               	return	
 26563  014280                     l10442:
 26564                           
 26565                           ;LCD.c: 385: else if(ScrollFIFOCount == 10)
 26566  014280  0101               	movlb	1	; () banked
 26567  014282  510B               	movf	_ScrollFIFOCount& (0+255),w,b
 26568  014284  0A0A               	xorlw	10
 26569  014286  A4D8               	btfss	status,2,c
 26570  014288  0012               	return	
 26571                           
 26572                           ; BSR set to: 1
 26573                           ;LCD.c: 386: {
 26574                           ;LCD.c: 387: BufferCopy(This,Scroll_10, 16, 0);
 26575  01428A  0101               	movlb	1	; () banked
 26576  01428C  C18B  F184         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26577  014290  0101               	movlb	1	; () banked
 26578  014292  C18A  F183         	movff	LCD_Scroll@This,BufferCopy@from
 26579  014296  0100               	movlb	0	; () banked
 26580  014298  0E00               	movlw	high _Scroll_10
 26581  01429A  0101               	movlb	1	; () banked
 26582  01429C  6F86               	movwf	(BufferCopy@to+1)& (0+255),b
 26583  01429E  0100               	movlb	0	; () banked
 26584  0142A0  0ED9               	movlw	low _Scroll_10
 26585  0142A2  0101               	movlb	1	; () banked
 26586  0142A4  6F85               	movwf	BufferCopy@to& (0+255),b
 26587  0142A6  0E10               	movlw	16
 26588  0142A8  0101               	movlb	1	; () banked
 26589  0142AA  6F87               	movwf	BufferCopy@count& (0+255),b
 26590  0142AC  0E00               	movlw	0
 26591  0142AE  0101               	movlb	1	; () banked
 26592  0142B0  6F88               	movwf	BufferCopy@shift& (0+255),b
 26593  0142B2  ECA9  F0AB         	call	_BufferCopy	;wreg free
 26594  0142B6  0012               	return	
 26595  0142B8                     __end_of_LCD_Scroll:
 26596                           	opt stack 0
 26597                           tblptru	equ	0xFF8
 26598                           tblptrh	equ	0xFF7
 26599                           tblptrl	equ	0xFF6
 26600                           tablat	equ	0xFF5
 26601                           prodh	equ	0xFF4
 26602                           prodl	equ	0xFF3
 26603                           intcon	equ	0xFF2
 26604                           postinc0	equ	0xFEE
 26605                           wreg	equ	0xFE8
 26606                           indf1	equ	0xFE7
 26607                           postinc1	equ	0xFE6
 26608                           postdec1	equ	0xFE5
 26609                           fsr1h	equ	0xFE2
 26610                           fsr1l	equ	0xFE1
 26611                           indf2	equ	0xFDF
 26612                           postinc2	equ	0xFDE
 26613                           postdec2	equ	0xFDD
 26614                           fsr2h	equ	0xFDA
 26615                           fsr2l	equ	0xFD9
 26616                           status	equ	0xFD8
 26617                           
 26618 ;; *************** function _BufferCopy *****************
 26619 ;; Defined at:
 26620 ;;		line 52 in file "MISC.c"
 26621 ;; Parameters:    Size  Location     Type
 26622 ;;  from            2   22[BANK1 ] PTR unsigned char 
 26623 ;;		 -> STR_275(5), STR_274(5), STR_273(10), STR_272(16), 
 26624 ;;		 -> STR_271(11), STR_270(12), STR_269(9), STR_268(14), 
 26625 ;;		 -> STR_251(6), STR_250(9), STR_249(14), STR_233(4), 
 26626 ;;		 -> STR_232(5), STR_231(8), STR_230(10), STR_229(9), 
 26627 ;;		 -> STR_198(2), STR_197(10), STR_196(9), STR_177(10), 
 26628 ;;		 -> STR_176(10), STR_175(13), STR_160(10), STR_159(10), 
 26629 ;;		 -> STR_158(17), STR_138(6), STR_137(6), STR_136(9), 
 26630 ;;		 -> STR_135(10), STR_110(7), STR_109(4), STR_108(6), 
 26631 ;;		 -> STR_107(9), STR_106(13), STR_75(4), STR_74(6), 
 26632 ;;		 -> STR_73(9), STR_72(14), STR_50(5), STR_49(5), 
 26633 ;;		 -> STR_48(9), STR_47(9), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 26634 ;;		 -> low_isr@TEMP_Rxdata(100), 
 26635 ;;  to              2   24[BANK1 ] PTR unsigned char 
 26636 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 26637 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 26638 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 26639 ;;  count           1   26[BANK1 ] unsigned char 
 26640 ;;  shift           1   27[BANK1 ] unsigned char 
 26641 ;; Auto vars:     Size  Location     Type
 26642 ;;  i               1   28[BANK1 ] unsigned char 
 26643 ;; Return value:  Size  Location     Type
 26644 ;;		None               void
 26645 ;; Registers used:
 26646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26647 ;; Tracked objects:
 26648 ;;		On entry : 0/0
 26649 ;;		On exit  : 0/0
 26650 ;;		Unchanged: 0/0
 26651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26652 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 26653 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26655 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 26656 ;;Total ram usage:        7 bytes
 26657 ;; Hardware stack levels used:    1
 26658 ;; Hardware stack levels required when called:    7
 26659 ;; This function calls:
 26660 ;;		_cleanBuffer
 26661 ;; This function is called by:
 26662 ;;		_RemoveSpaces
 26663 ;;		_StringAddEqual
 26664 ;;		_LCD_Scroll
 26665 ;; This function uses a non-reentrant model
 26666 ;;
 26667                           
 26668                           	psect	text68
 26669  015752                     __ptext68:
 26670                           	opt stack 0
 26671  015752                     _BufferCopy:
 26672                           	opt stack 20
 26673                           
 26674                           ;MISC.c: 54: unsigned char i=0;
 26675                           
 26676                           ;incstack = 0
 26677  015752  0E00               	movlw	0
 26678  015754  0101               	movlb	1	; () banked
 26679  015756  6F89               	movwf	BufferCopy@i& (0+255),b
 26680                           
 26681                           ; BSR set to: 1
 26682                           ;MISC.c: 55: cleanBuffer(to,count);
 26683  015758  0101               	movlb	1	; () banked
 26684  01575A  C186  F17C         	movff	BufferCopy@to+1,cleanBuffer@data+1
 26685  01575E  0101               	movlb	1	; () banked
 26686  015760  C185  F17B         	movff	BufferCopy@to,cleanBuffer@data
 26687  015764  0101               	movlb	1	; () banked
 26688  015766  C187  F17D         	movff	BufferCopy@count,cleanBuffer@count
 26689  01576A  0101               	movlb	1	; () banked
 26690  01576C  6B7E               	clrf	(cleanBuffer@count+1)& (0+255),b
 26691  01576E  ECCC  F0B3         	call	_cleanBuffer	;wreg free
 26692                           
 26693                           ;MISC.c: 56: for(i = shift; i>0;i--)
 26694  015772  C188  F189         	movff	BufferCopy@shift,BufferCopy@i
 26695  015776  D00B               	goto	L34
 26696  015778                     l9288:
 26697                           
 26698                           ; BSR set to: 1
 26699                           ;MISC.c: 57: {
 26700                           ;MISC.c: 58: *to = ' ';
 26701  015778  C185  FFD9         	movff	BufferCopy@to,fsr2l
 26702  01577C  C186  FFDA         	movff	BufferCopy@to+1,fsr2h
 26703  015780  0E20               	movlw	32
 26704  015782  6EDF               	movwf	indf2,c
 26705                           
 26706                           ; BSR set to: 1
 26707                           ;MISC.c: 59: to++;
 26708  015784  0101               	movlb	1	; () banked
 26709  015786  4B85               	infsnz	BufferCopy@to& (0+255),f,b
 26710  015788  2B86               	incf	(BufferCopy@to+1)& (0+255),f,b
 26711                           
 26712                           ; BSR set to: 1
 26713  01578A  0101               	movlb	1	; () banked
 26714  01578C  0789               	decf	BufferCopy@i& (0+255),f,b
 26715  01578E                     L34:
 26716                           
 26717                           ; BSR set to: 1
 26718  01578E  0101               	movlb	1	; () banked
 26719  015790  6789               	tstfsz	BufferCopy@i& (0+255),b
 26720  015792  D7F2               	goto	l9288
 26721  015794  D020               	goto	L33
 26722  015796                     l9296:
 26723                           
 26724                           ; BSR set to: 1
 26725                           ;MISC.c: 62: {
 26726                           ;MISC.c: 63: *to = *from;
 26727  015796  0101               	movlb	1	; () banked
 26728  015798  C183  FFF6         	movff	BufferCopy@from,tblptrl
 26729  01579C  0101               	movlb	1	; () banked
 26730  01579E  C184  FFF7         	movff	BufferCopy@from+1,tblptrh
 26731  0157A2  0E00               	movlw	low (__mediumconst shr (0+16))
 26732  0157A4  6EF8               	movwf	tblptru,c
 26733  0157A6  C185  FFD9         	movff	BufferCopy@to,fsr2l
 26734  0157AA  C186  FFDA         	movff	BufferCopy@to+1,fsr2h
 26735  0157AE  0E0C               	movlw	(high __ramtop+-1)
 26736  0157B0  64F7               	cpfsgt	tblptrh,c
 26737  0157B2  D003               	bra	u11357
 26738  0157B4  0008               	tblrd		*
 26739  0157B6  50F5               	movf	tablat,w,c
 26740  0157B8  D005               	bra	u11350
 26741  0157BA                     u11357:
 26742  0157BA  CFF6 FFE1          	movff	tblptrl,fsr1l
 26743  0157BE  CFF7 FFE2          	movff	tblptrh,fsr1h
 26744  0157C2  50E7               	movf	indf1,w,c
 26745  0157C4                     u11350:
 26746  0157C4  6EDF               	movwf	indf2,c
 26747                           
 26748                           ;MISC.c: 64: from++;
 26749  0157C6  0101               	movlb	1	; () banked
 26750  0157C8  4B83               	infsnz	BufferCopy@from& (0+255),f,b
 26751  0157CA  2B84               	incf	(BufferCopy@from+1)& (0+255),f,b
 26752                           
 26753                           ; BSR set to: 1
 26754                           ;MISC.c: 65: to++;
 26755  0157CC  0101               	movlb	1	; () banked
 26756  0157CE  4B85               	infsnz	BufferCopy@to& (0+255),f,b
 26757  0157D0  2B86               	incf	(BufferCopy@to+1)& (0+255),f,b
 26758                           
 26759                           ; BSR set to: 1
 26760                           ;MISC.c: 66: count--;
 26761  0157D2  0101               	movlb	1	; () banked
 26762  0157D4  0787               	decf	BufferCopy@count& (0+255),f,b
 26763  0157D6                     L33:
 26764                           
 26765                           ; BSR set to: 1
 26766                           
 26767                           ; BSR set to: 1
 26768  0157D6  0101               	movlb	1	; () banked
 26769  0157D8  C183  FFF6         	movff	BufferCopy@from,tblptrl
 26770  0157DC  0101               	movlb	1	; () banked
 26771  0157DE  C184  FFF7         	movff	BufferCopy@from+1,tblptrh
 26772  0157E2  0E00               	movlw	low (__mediumconst shr (0+16))
 26773  0157E4  6EF8               	movwf	tblptru,c
 26774  0157E6  0E0C               	movlw	(high __ramtop+-1)
 26775  0157E8  64F7               	cpfsgt	tblptrh,c
 26776  0157EA  D003               	bra	u11367
 26777  0157EC  0008               	tblrd		*
 26778  0157EE  50F5               	movf	tablat,w,c
 26779  0157F0  D005               	bra	u11360
 26780  0157F2                     u11367:
 26781  0157F2  CFF6 FFE1          	movff	tblptrl,fsr1l
 26782  0157F6  CFF7 FFE2          	movff	tblptrh,fsr1h
 26783  0157FA  50E7               	movf	indf1,w,c
 26784  0157FC                     u11360:
 26785  0157FC  0900               	iorlw	0
 26786  0157FE  B4D8               	btfsc	status,2,c
 26787  015800  0012               	return	
 26788  015802  0101               	movlb	1	; () banked
 26789  015804  6787               	tstfsz	BufferCopy@count& (0+255),b
 26790  015806  D7C7               	goto	l9296
 26791  015808  0012               	return	
 26792  01580A                     __end_of_BufferCopy:
 26793                           	opt stack 0
 26794                           tblptru	equ	0xFF8
 26795                           tblptrh	equ	0xFF7
 26796                           tblptrl	equ	0xFF6
 26797                           tablat	equ	0xFF5
 26798                           prodh	equ	0xFF4
 26799                           prodl	equ	0xFF3
 26800                           intcon	equ	0xFF2
 26801                           postinc0	equ	0xFEE
 26802                           wreg	equ	0xFE8
 26803                           indf1	equ	0xFE7
 26804                           postinc1	equ	0xFE6
 26805                           postdec1	equ	0xFE5
 26806                           fsr1h	equ	0xFE2
 26807                           fsr1l	equ	0xFE1
 26808                           indf2	equ	0xFDF
 26809                           postinc2	equ	0xFDE
 26810                           postdec2	equ	0xFDD
 26811                           fsr2h	equ	0xFDA
 26812                           fsr2l	equ	0xFD9
 26813                           status	equ	0xFD8
 26814                           
 26815 ;; *************** function _cleanBuffer *****************
 26816 ;; Defined at:
 26817 ;;		line 43 in file "MISC.c"
 26818 ;; Parameters:    Size  Location     Type
 26819 ;;  data            2   14[BANK1 ] PTR unsigned char 
 26820 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 26821 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 26822 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 26823 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 26824 ;;  count           2   16[BANK1 ] int 
 26825 ;; Auto vars:     Size  Location     Type
 26826 ;;  i               1   21[BANK1 ] unsigned char 
 26827 ;; Return value:  Size  Location     Type
 26828 ;;		None               void
 26829 ;; Registers used:
 26830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26831 ;; Tracked objects:
 26832 ;;		On entry : 0/0
 26833 ;;		On exit  : 0/0
 26834 ;;		Unchanged: 0/0
 26835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26836 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26837 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26838 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 26839 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 26840 ;;Total ram usage:        8 bytes
 26841 ;; Hardware stack levels used:    1
 26842 ;; Hardware stack levels required when called:    6
 26843 ;; This function calls:
 26844 ;;		Nothing
 26845 ;; This function is called by:
 26846 ;;		_main
 26847 ;;		_BufferCopy
 26848 ;;		_RemoveSpaces
 26849 ;;		_StringAddEqual
 26850 ;;		_Command
 26851 ;;		_LCDScreenUpdate
 26852 ;; This function uses a non-reentrant model
 26853 ;;
 26854                           
 26855                           	psect	text69
 26856  016798                     __ptext69:
 26857                           	opt stack 0
 26858  016798                     _cleanBuffer:
 26859                           	opt stack 23
 26860                           
 26861                           ;MISC.c: 45: unsigned char i=0;
 26862                           
 26863                           ;incstack = 0
 26864  016798  0E00               	movlw	0
 26865  01679A  0101               	movlb	1	; () banked
 26866  01679C  6F82               	movwf	cleanBuffer@i& (0+255),b
 26867                           
 26868                           ;MISC.c: 46: for(i=0; i<count;i++)
 26869  01679E  0E00               	movlw	0
 26870  0167A0  0101               	movlb	1	; () banked
 26871  0167A2  6F82               	movwf	cleanBuffer@i& (0+255),b
 26872  0167A4  D00F               	goto	l8990
 26873  0167A6                     l8986:
 26874                           
 26875                           ; BSR set to: 1
 26876                           ;MISC.c: 47: {
 26877                           ;MISC.c: 48: data[i]= 0;
 26878  0167A6  0101               	movlb	1	; () banked
 26879  0167A8  5182               	movf	cleanBuffer@i& (0+255),w,b
 26880  0167AA  0D01               	mullw	1
 26881  0167AC  50F3               	movf	prodl,w,c
 26882  0167AE  0101               	movlb	1	; () banked
 26883  0167B0  257B               	addwf	cleanBuffer@data& (0+255),w,b
 26884  0167B2  6ED9               	movwf	fsr2l,c
 26885  0167B4  50F4               	movf	prodh,w,c
 26886  0167B6  0101               	movlb	1	; () banked
 26887  0167B8  217C               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 26888  0167BA  6EDA               	movwf	fsr2h,c
 26889  0167BC  0E00               	movlw	0
 26890  0167BE  6EDF               	movwf	indf2,c
 26891                           
 26892                           ; BSR set to: 1
 26893  0167C0  0101               	movlb	1	; () banked
 26894  0167C2  2B82               	incf	cleanBuffer@i& (0+255),f,b
 26895  0167C4                     l8990:
 26896                           
 26897                           ; BSR set to: 1
 26898  0167C4  0101               	movlb	1	; () banked
 26899  0167C6  5182               	movf	cleanBuffer@i& (0+255),w,b
 26900  0167C8  0101               	movlb	1	; () banked
 26901  0167CA  6F7F               	movwf	??_cleanBuffer& (0+255),b
 26902  0167CC  6B80               	clrf	(??_cleanBuffer+1)& (0+255),b
 26903  0167CE  0101               	movlb	1	; () banked
 26904  0167D0  5180               	movf	(??_cleanBuffer+1)& (0+255),w,b
 26905  0167D2  0A80               	xorlw	128
 26906  0167D4  0101               	movlb	1	; () banked
 26907  0167D6  6F81               	movwf	(??_cleanBuffer+2)& (0+255),b
 26908  0167D8  0101               	movlb	1	; () banked
 26909  0167DA  517D               	movf	cleanBuffer@count& (0+255),w,b
 26910  0167DC  0101               	movlb	1	; () banked
 26911  0167DE  5D7F               	subwf	??_cleanBuffer& (0+255),w,b
 26912  0167E0  0101               	movlb	1	; () banked
 26913  0167E2  517E               	movf	(cleanBuffer@count+1)& (0+255),w,b
 26914  0167E4  0A80               	xorlw	128
 26915  0167E6  0101               	movlb	1	; () banked
 26916  0167E8  5981               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 26917  0167EA  B0D8               	btfsc	status,0,c
 26918                           
 26919                           ; BSR set to: 1
 26920                           
 26921                           ; BSR set to: 1
 26922  0167EC  0012               	return	
 26923  0167EE  D7DB               	goto	l8986
 26924  0167F0                     __end_of_cleanBuffer:
 26925                           	opt stack 0
 26926                           tblptru	equ	0xFF8
 26927                           tblptrh	equ	0xFF7
 26928                           tblptrl	equ	0xFF6
 26929                           tablat	equ	0xFF5
 26930                           prodh	equ	0xFF4
 26931                           prodl	equ	0xFF3
 26932                           intcon	equ	0xFF2
 26933                           postinc0	equ	0xFEE
 26934                           wreg	equ	0xFE8
 26935                           indf1	equ	0xFE7
 26936                           postinc1	equ	0xFE6
 26937                           postdec1	equ	0xFE5
 26938                           fsr1h	equ	0xFE2
 26939                           fsr1l	equ	0xFE1
 26940                           indf2	equ	0xFDF
 26941                           postinc2	equ	0xFDE
 26942                           postdec2	equ	0xFDD
 26943                           fsr2h	equ	0xFDA
 26944                           fsr2l	equ	0xFD9
 26945                           status	equ	0xFD8
 26946                           
 26947 ;; *************** function _InternalADC_Read *****************
 26948 ;; Defined at:
 26949 ;;		line 77 in file "ADC.c"
 26950 ;; Parameters:    Size  Location     Type
 26951 ;;  channel         1    wreg     unsigned char 
 26952 ;; Auto vars:     Size  Location     Type
 26953 ;;  channel         1   23[BANK1 ] unsigned char 
 26954 ;; Return value:  Size  Location     Type
 26955 ;;                  2   19[BANK1 ] int 
 26956 ;; Registers used:
 26957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26958 ;; Tracked objects:
 26959 ;;		On entry : 0/0
 26960 ;;		On exit  : 0/0
 26961 ;;		Unchanged: 0/0
 26962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26963 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26964 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26965 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26966 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 26967 ;;Total ram usage:        5 bytes
 26968 ;; Hardware stack levels used:    1
 26969 ;; Hardware stack levels required when called:    8
 26970 ;; This function calls:
 26971 ;;		_UARTstring
 26972 ;; This function is called by:
 26973 ;;		_Command
 26974 ;;		_RTC_INIT
 26975 ;; This function uses a non-reentrant model
 26976 ;;
 26977                           
 26978                           	psect	text70
 26979  0165AA                     __ptext70:
 26980                           	opt stack 0
 26981  0165AA                     _InternalADC_Read:
 26982                           	opt stack 20
 26983                           
 26984                           ; BSR set to: 1
 26985                           ;incstack = 0
 26986                           ;InternalADC_Read@channel stored from wreg
 26987  0165AA  0101               	movlb	1	; () banked
 26988  0165AC  6F84               	movwf	InternalADC_Read@channel& (0+255),b
 26989                           
 26990                           ; BSR set to: 1
 26991                           ;ADC.c: 79: ADCON0 =0;
 26992  0165AE  0E00               	movlw	0
 26993  0165B0  6EC2               	movwf	4034,c	;volatile
 26994                           
 26995                           ; BSR set to: 1
 26996                           ;ADC.c: 80: if(channel > 10)
 26997  0165B2  0E0A               	movlw	10
 26998  0165B4  0101               	movlb	1	; () banked
 26999  0165B6  6584               	cpfsgt	InternalADC_Read@channel& (0+255),b
 27000  0165B8  D00F               	goto	l10502
 27001                           
 27002                           ; BSR set to: 1
 27003                           ;ADC.c: 81: {
 27004                           ;ADC.c: 82: UARTstring("ADC Channel Out of Bounds");
 27005  0165BA  0EF6               	movlw	high STR_281
 27006  0165BC  0101               	movlb	1	; () banked
 27007  0165BE  6F7D               	movwf	(UARTstring@data+1)& (0+255),b
 27008  0165C0  0EA9               	movlw	low STR_281
 27009  0165C2  0101               	movlb	1	; () banked
 27010  0165C4  6F7C               	movwf	UARTstring@data& (0+255),b
 27011  0165C6  ECB3  F0AD         	call	_UARTstring	;wreg free
 27012                           
 27013                           ;ADC.c: 83: return 0;
 27014  0165CA  0E00               	movlw	0
 27015  0165CC  0101               	movlb	1	; () banked
 27016  0165CE  6F81               	movwf	(?_InternalADC_Read+1)& (0+255),b
 27017  0165D0  0E00               	movlw	0
 27018  0165D2  0101               	movlb	1	; () banked
 27019  0165D4  6F80               	movwf	?_InternalADC_Read& (0+255),b
 27020  0165D6  0012               	return	
 27021  0165D8                     l10502:
 27022                           
 27023                           ; BSR set to: 1
 27024                           ;ADC.c: 84: }
 27025                           ;ADC.c: 85: ADCON0 |= (channel << 2);
 27026  0165D8  0101               	movlb	1	; () banked
 27027  0165DA  4584               	rlncf	InternalADC_Read@channel& (0+255),w,b
 27028  0165DC  46E8               	rlncf	wreg,f,c
 27029  0165DE  0BFC               	andlw	252
 27030  0165E0  12C2               	iorwf	4034,f,c	;volatile
 27031                           
 27032                           ;ADC.c: 86: ADCON2 |= 0b10100000;
 27033  0165E2  0EA0               	movlw	160
 27034  0165E4  12C0               	iorwf	4032,f,c	;volatile
 27035                           
 27036                           ;ADC.c: 87: ADCON2 |= 0b00000110;
 27037  0165E6  0E06               	movlw	6
 27038  0165E8  12C0               	iorwf	4032,f,c	;volatile
 27039                           
 27040                           ; BSR set to: 1
 27041                           ;ADC.c: 88: ADCON0 |= 0b00000001;
 27042  0165EA  80C2               	bsf	4034,0,c	;volatile
 27043                           
 27044                           ; BSR set to: 1
 27045                           ;ADC.c: 89: (PIE1bits.ADIE=0);
 27046  0165EC  9C9D               	bcf	3997,6,c	;volatile
 27047                           
 27048                           ; BSR set to: 1
 27049                           ;ADC.c: 90: ADCON0 |= 0b00000010;
 27050  0165EE  82C2               	bsf	4034,1,c	;volatile
 27051  0165F0                     l761:
 27052                           
 27053                           ; BSR set to: 1
 27054  0165F0  B2C2               	btfsc	4034,1,c	;volatile
 27055  0165F2  D7FE               	goto	l761
 27056                           
 27057                           ; BSR set to: 1
 27058                           ;ADC.c: 92: return ((ADRESH << 8) + ADRESL);
 27059                           
 27060                           ; BSR set to: 1
 27061  0165F4  50C4               	movf	4036,w,c	;volatile
 27062  0165F6  0101               	movlb	1	; () banked
 27063  0165F8  6F83               	movwf	(??_InternalADC_Read+1)& (0+255),b
 27064  0165FA  6B82               	clrf	??_InternalADC_Read& (0+255),b
 27065  0165FC  50C3               	movf	4035,w,c	;volatile
 27066  0165FE  0101               	movlb	1	; () banked
 27067  016600  2582               	addwf	??_InternalADC_Read& (0+255),w,b
 27068  016602  0101               	movlb	1	; () banked
 27069  016604  6F80               	movwf	?_InternalADC_Read& (0+255),b
 27070  016606  0E00               	movlw	0
 27071  016608  0101               	movlb	1	; () banked
 27072  01660A  2183               	addwfc	(??_InternalADC_Read+1)& (0+255),w,b
 27073  01660C  0101               	movlb	1	; () banked
 27074  01660E  6F81               	movwf	(?_InternalADC_Read+1)& (0+255),b
 27075  016610  0012               	return	
 27076  016612                     __end_of_InternalADC_Read:
 27077                           	opt stack 0
 27078                           tblptru	equ	0xFF8
 27079                           tblptrh	equ	0xFF7
 27080                           tblptrl	equ	0xFF6
 27081                           tablat	equ	0xFF5
 27082                           prodh	equ	0xFF4
 27083                           prodl	equ	0xFF3
 27084                           intcon	equ	0xFF2
 27085                           postinc0	equ	0xFEE
 27086                           wreg	equ	0xFE8
 27087                           indf1	equ	0xFE7
 27088                           postinc1	equ	0xFE6
 27089                           postdec1	equ	0xFE5
 27090                           fsr1h	equ	0xFE2
 27091                           fsr1l	equ	0xFE1
 27092                           indf2	equ	0xFDF
 27093                           postinc2	equ	0xFDE
 27094                           postdec2	equ	0xFDD
 27095                           fsr2h	equ	0xFDA
 27096                           fsr2l	equ	0xFD9
 27097                           status	equ	0xFD8
 27098                           
 27099 ;; *************** function _UARTstring *****************
 27100 ;; Defined at:
 27101 ;;		line 132 in file "UART.c"
 27102 ;; Parameters:    Size  Location     Type
 27103 ;;  data            2   15[BANK1 ] PTR const unsigned char 
 27104 ;;		 -> STR_281(26), STR_280(5), STR_278(16), STR_276(24), 
 27105 ;;		 -> STR_265(3), STR_263(15), STR_262(22), STR_261(50), 
 27106 ;;		 -> STR_260(7), STR_259(6), STR_258(11), STR_257(17), 
 27107 ;;		 -> STR_256(12), STR_255(13), STR_254(10), STR_253(12), 
 27108 ;;		 -> STR_248(28), STR_247(68), STR_246(9), STR_245(11), 
 27109 ;;		 -> STR_244(23), STR_242(19), STR_240(20), STR_237(20), 
 27110 ;;		 -> STR_228(21), STR_227(61), STR_226(69), STR_225(7), 
 27111 ;;		 -> STR_224(7), STR_223(10), STR_222(11), STR_221(29), 
 27112 ;;		 -> STR_220(13), STR_219(33), STR_218(25), STR_217(28), 
 27113 ;;		 -> STR_216(3), STR_215(26), STR_214(2), STR_213(34), 
 27114 ;;		 -> STR_212(37), STR_209(24), STR_205(3), STR_195(13), 
 27115 ;;		 -> STR_194(73), STR_193(5), STR_192(12), STR_191(17), 
 27116 ;;		 -> STR_185(28), STR_183(30), STR_181(33), STR_174(42), 
 27117 ;;		 -> STR_173(62), STR_172(26), STR_168(43), STR_166(48), 
 27118 ;;		 -> STR_164(27), STR_157(42), STR_156(66), STR_155(25), 
 27119 ;;		 -> STR_153(49), Command@buf(200), STR_149(33), STR_147(38), 
 27120 ;;		 -> STR_145(27), STR_144(28), STR_134(37), STR_133(68), 
 27121 ;;		 -> STR_132(18), STR_131(15), STR_130(11), STR_129(28), 
 27122 ;;		 -> STR_127(18), STR_125(32), STR_121(31), STR_117(38), 
 27123 ;;		 -> STR_104(24), STR_103(68), STR_102(10), STR_101(6), 
 27124 ;;		 -> STR_100(8), STR_99(11), STR_98(21), STR_96(16), 
 27125 ;;		 -> STR_94(19), STR_91(18), STR_88(16), STR_85(15), 
 27126 ;;		 -> STR_82(22), STR_70(27), STR_69(68), STR_68(7), 
 27127 ;;		 -> STR_67(8), STR_66(11), STR_65(24), STR_63(19), 
 27128 ;;		 -> STR_61(19), STR_58(18), STR_55(25), STR_46(17), 
 27129 ;;		 -> STR_45(68), STR_44(8), STR_43(7), STR_42(11), 
 27130 ;;		 -> STR_41(17), STR_39(12), STR_37(9), STR_34(8), 
 27131 ;;		 -> STR_31(13), STR_28(9), STR_25(8), STR_22(13), 
 27132 ;;		 -> STR_18(4), STR_17(4), STR_16(29), STR_5(38), 
 27133 ;;		 -> low_isr@TEMP_Rxdata(100), STR_4(2), STR_3(2), STR_2(2), 
 27134 ;;		 -> STR_1(2), 
 27135 ;; Auto vars:     Size  Location     Type
 27136 ;;		None
 27137 ;; Return value:  Size  Location     Type
 27138 ;;		None               void
 27139 ;; Registers used:
 27140 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27141 ;; Tracked objects:
 27142 ;;		On entry : 0/0
 27143 ;;		On exit  : 0/0
 27144 ;;		Unchanged: 0/0
 27145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27146 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27148 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27149 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27150 ;;Total ram usage:        4 bytes
 27151 ;; Hardware stack levels used:    1
 27152 ;; Hardware stack levels required when called:    7
 27153 ;; This function calls:
 27154 ;;		_WriteUSART
 27155 ;; This function is called by:
 27156 ;;		_main
 27157 ;;		_Command
 27158 ;;		_InternalADC_Read
 27159 ;; This function uses a non-reentrant model
 27160 ;;
 27161                           
 27162                           	psect	text71
 27163  015B66                     __ptext71:
 27164                           	opt stack 0
 27165  015B66                     _UARTstring:
 27166                           	opt stack 22
 27167  015B66                     l380:
 27168                           
 27169                           ;UART.c: 135: {
 27170                           ;UART.c: 136: if(*data != 0)
 27171  015B66  0101               	movlb	1	; () banked
 27172  015B68  C17C  FFF6         	movff	UARTstring@data,tblptrl
 27173  015B6C  0101               	movlb	1	; () banked
 27174  015B6E  C17D  FFF7         	movff	UARTstring@data+1,tblptrh
 27175  015B72  0E00               	movlw	low (__mediumconst shr (0+16))
 27176  015B74  6EF8               	movwf	tblptru,c
 27177  015B76  0E0C               	movlw	(high __ramtop+-1)
 27178  015B78  64F7               	cpfsgt	tblptrh,c
 27179  015B7A  D003               	bra	u11217
 27180  015B7C  0008               	tblrd		*
 27181  015B7E  50F5               	movf	tablat,w,c
 27182  015B80  D005               	bra	u11210
 27183  015B82                     u11217:
 27184  015B82  CFF6 FFE1          	movff	tblptrl,fsr1l
 27185  015B86  CFF7 FFE2          	movff	tblptrh,fsr1h
 27186  015B8A  50E7               	movf	indf1,w,c
 27187  015B8C                     u11210:
 27188  015B8C  0900               	iorlw	0
 27189  015B8E  B4D8               	btfsc	status,2,c
 27190  015B90  D017               	goto	l9252
 27191                           
 27192                           ;UART.c: 137: {
 27193                           ;UART.c: 138: WriteUSART(*data);
 27194  015B92  0101               	movlb	1	; () banked
 27195  015B94  C17C  FFF6         	movff	UARTstring@data,tblptrl
 27196  015B98  0101               	movlb	1	; () banked
 27197  015B9A  C17D  FFF7         	movff	UARTstring@data+1,tblptrh
 27198  015B9E  0E00               	movlw	low (__mediumconst shr (0+16))
 27199  015BA0  6EF8               	movwf	tblptru,c
 27200  015BA2  0E0C               	movlw	(high __ramtop+-1)
 27201  015BA4  64F7               	cpfsgt	tblptrh,c
 27202  015BA6  D003               	bra	u11237
 27203  015BA8  0008               	tblrd		*
 27204  015BAA  50F5               	movf	tablat,w,c
 27205  015BAC  D005               	bra	u11230
 27206  015BAE                     u11237:
 27207  015BAE  CFF6 FFE1          	movff	tblptrl,fsr1l
 27208  015BB2  CFF7 FFE2          	movff	tblptrh,fsr1h
 27209  015BB6  50E7               	movf	indf1,w,c
 27210  015BB8                     u11230:
 27211  015BB8  EC46  F0B6         	call	_WriteUSART
 27212  015BBC                     l382:
 27213  015BBC  A2AC               	btfss	4012,1,c	;volatile
 27214  015BBE  D7FE               	goto	l382
 27215  015BC0                     l9252:
 27216                           
 27217                           ;UART.c: 140: }
 27218                           ;UART.c: 141: } while( *data++);
 27219  015BC0  0101               	movlb	1	; () banked
 27220  015BC2  517C               	movf	UARTstring@data& (0+255),w,b
 27221  015BC4  0101               	movlb	1	; () banked
 27222  015BC6  6F7E               	movwf	??_UARTstring& (0+255),b
 27223  015BC8  0101               	movlb	1	; () banked
 27224  015BCA  517D               	movf	(UARTstring@data+1)& (0+255),w,b
 27225  015BCC  0101               	movlb	1	; () banked
 27226  015BCE  6F7F               	movwf	(??_UARTstring+1)& (0+255),b
 27227  015BD0  0101               	movlb	1	; () banked
 27228  015BD2  4B7C               	infsnz	UARTstring@data& (0+255),f,b
 27229  015BD4  2B7D               	incf	(UARTstring@data+1)& (0+255),f,b
 27230  015BD6  C17E  FFF6         	movff	??_UARTstring,tblptrl
 27231  015BDA  C17F  FFF7         	movff	??_UARTstring+1,tblptrh
 27232  015BDE  0E00               	movlw	low (__mediumconst shr (0+16))
 27233  015BE0  6EF8               	movwf	tblptru,c
 27234  015BE2  0E0C               	movlw	(high __ramtop+-1)
 27235  015BE4  64F7               	cpfsgt	tblptrh,c
 27236  015BE6  D003               	bra	u11257
 27237  015BE8  0008               	tblrd		*
 27238  015BEA  50F5               	movf	tablat,w,c
 27239  015BEC  D005               	bra	u11250
 27240  015BEE                     u11257:
 27241  015BEE  CFF6 FFE1          	movff	tblptrl,fsr1l
 27242  015BF2  CFF7 FFE2          	movff	tblptrh,fsr1h
 27243  015BF6  50E7               	movf	indf1,w,c
 27244  015BF8                     u11250:
 27245  015BF8  0900               	iorlw	0
 27246  015BFA  B4D8               	btfsc	status,2,c
 27247  015BFC  0012               	return	
 27248  015BFE  D7B3               	goto	l380
 27249  015C00                     __end_of_UARTstring:
 27250                           	opt stack 0
 27251                           tblptru	equ	0xFF8
 27252                           tblptrh	equ	0xFF7
 27253                           tblptrl	equ	0xFF6
 27254                           tablat	equ	0xFF5
 27255                           prodh	equ	0xFF4
 27256                           prodl	equ	0xFF3
 27257                           intcon	equ	0xFF2
 27258                           postinc0	equ	0xFEE
 27259                           wreg	equ	0xFE8
 27260                           indf1	equ	0xFE7
 27261                           postinc1	equ	0xFE6
 27262                           postdec1	equ	0xFE5
 27263                           fsr1h	equ	0xFE2
 27264                           fsr1l	equ	0xFE1
 27265                           indf2	equ	0xFDF
 27266                           postinc2	equ	0xFDE
 27267                           postdec2	equ	0xFDD
 27268                           fsr2h	equ	0xFDA
 27269                           fsr2l	equ	0xFD9
 27270                           status	equ	0xFD8
 27271                           
 27272 ;; *************** function _WriteUSART *****************
 27273 ;; Defined at:
 27274 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
 27275 ;; Parameters:    Size  Location     Type
 27276 ;;  data            1    wreg     unsigned char 
 27277 ;; Auto vars:     Size  Location     Type
 27278 ;;  data            1   14[BANK1 ] unsigned char 
 27279 ;; Return value:  Size  Location     Type
 27280 ;;		None               void
 27281 ;; Registers used:
 27282 ;;		wreg
 27283 ;; Tracked objects:
 27284 ;;		On entry : 0/0
 27285 ;;		On exit  : 0/0
 27286 ;;		Unchanged: 0/0
 27287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27289 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27291 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27292 ;;Total ram usage:        1 bytes
 27293 ;; Hardware stack levels used:    1
 27294 ;; Hardware stack levels required when called:    6
 27295 ;; This function calls:
 27296 ;;		Nothing
 27297 ;; This function is called by:
 27298 ;;		_UARTstring
 27299 ;; This function uses a non-reentrant model
 27300 ;;
 27301                           
 27302                           	psect	text72
 27303  016C8C                     __ptext72:
 27304                           	opt stack 0
 27305  016C8C                     _WriteUSART:
 27306                           	opt stack 22
 27307                           
 27308                           ;incstack = 0
 27309                           ;WriteUSART@data stored from wreg
 27310  016C8C  0101               	movlb	1	; () banked
 27311  016C8E  6F7B               	movwf	WriteUSART@data& (0+255),b
 27312                           
 27313                           ; BSR set to: 1
 27314  016C90  ACAC               	btfss	4012,6,c	;volatile
 27315  016C92  D004               	goto	l8982
 27316                           
 27317                           ; BSR set to: 1
 27318  016C94  90AC               	bcf	4012,0,c	;volatile
 27319  016C96  0101               	movlb	1	; () banked
 27320  016C98  B30C               	btfsc	_USART_Status& (0+255),1,b
 27321                           
 27322                           ; BSR set to: 1
 27323  016C9A  80AC               	bsf	4012,0,c	;volatile
 27324  016C9C                     l8982:
 27325                           
 27326                           ; BSR set to: 1
 27327  016C9C  C17B  FFAD         	movff	WriteUSART@data,4013	;volatile
 27328                           
 27329                           ; BSR set to: 1
 27330  016CA0  0012               	return	
 27331  016CA2                     __end_of_WriteUSART:
 27332                           	opt stack 0
 27333                           tblptru	equ	0xFF8
 27334                           tblptrh	equ	0xFF7
 27335                           tblptrl	equ	0xFF6
 27336                           tablat	equ	0xFF5
 27337                           prodh	equ	0xFF4
 27338                           prodl	equ	0xFF3
 27339                           intcon	equ	0xFF2
 27340                           postinc0	equ	0xFEE
 27341                           wreg	equ	0xFE8
 27342                           indf1	equ	0xFE7
 27343                           postinc1	equ	0xFE6
 27344                           postdec1	equ	0xFE5
 27345                           fsr1h	equ	0xFE2
 27346                           fsr1l	equ	0xFE1
 27347                           indf2	equ	0xFDF
 27348                           postinc2	equ	0xFDE
 27349                           postdec2	equ	0xFDD
 27350                           fsr2h	equ	0xFDA
 27351                           fsr2l	equ	0xFD9
 27352                           status	equ	0xFD8
 27353                           
 27354 ;; *************** function _GetEnteredNumber *****************
 27355 ;; Defined at:
 27356 ;;		line 141 in file "MISC.c"
 27357 ;; Parameters:    Size  Location     Type
 27358 ;;  This            2   20[BANK1 ] PTR unsigned char 
 27359 ;;		 -> Rxdata(100), 
 27360 ;; Auto vars:     Size  Location     Type
 27361 ;;  temp            2   28[BANK1 ] int 
 27362 ;;  negative        1   27[BANK1 ] unsigned char 
 27363 ;;  i               1   26[BANK1 ] unsigned char 
 27364 ;; Return value:  Size  Location     Type
 27365 ;;                  2   20[BANK1 ] int 
 27366 ;; Registers used:
 27367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27368 ;; Tracked objects:
 27369 ;;		On entry : 0/0
 27370 ;;		On exit  : 0/0
 27371 ;;		Unchanged: 0/0
 27372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27373 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27374 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27375 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27376 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 27377 ;;Total ram usage:       10 bytes
 27378 ;; Hardware stack levels used:    1
 27379 ;; Hardware stack levels required when called:    7
 27380 ;; This function calls:
 27381 ;;		___wmul
 27382 ;; This function is called by:
 27383 ;;		_Command
 27384 ;; This function uses a non-reentrant model
 27385 ;;
 27386                           
 27387                           	psect	text73
 27388  014470                     __ptext73:
 27389                           	opt stack 0
 27390  014470                     _GetEnteredNumber:
 27391                           	opt stack 21
 27392                           
 27393                           ;MISC.c: 143: unsigned char i =0;
 27394                           
 27395                           ; BSR set to: 1
 27396                           ;incstack = 0
 27397  014470  0E00               	movlw	0
 27398  014472  0101               	movlb	1	; () banked
 27399  014474  6F87               	movwf	GetEnteredNumber@i& (0+255),b
 27400                           
 27401                           ;MISC.c: 144: int temp =0;
 27402  014476  0E00               	movlw	0
 27403  014478  0101               	movlb	1	; () banked
 27404  01447A  6F8A               	movwf	(GetEnteredNumber@temp+1)& (0+255),b
 27405  01447C  0E00               	movlw	0
 27406  01447E  0101               	movlb	1	; () banked
 27407  014480  6F89               	movwf	GetEnteredNumber@temp& (0+255),b
 27408                           
 27409                           ;MISC.c: 145: unsigned char negative =0;
 27410  014482  0E00               	movlw	0
 27411  014484  0101               	movlb	1	; () banked
 27412  014486  6F88               	movwf	GetEnteredNumber@negative& (0+255),b
 27413                           
 27414                           ;MISC.c: 146: while(*This != '=' && *This != 0)
 27415  014488  D003               	goto	l10244
 27416  01448A                     l10242:
 27417                           
 27418                           ; BSR set to: 1
 27419                           ;MISC.c: 147: {
 27420                           ;MISC.c: 148: This++;
 27421  01448A  0101               	movlb	1	; () banked
 27422  01448C  4B81               	infsnz	GetEnteredNumber@This& (0+255),f,b
 27423  01448E  2B82               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 27424  014490                     l10244:
 27425                           
 27426                           ; BSR set to: 1
 27427  014490  C181  FFD9         	movff	GetEnteredNumber@This,fsr2l
 27428  014494  C182  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 27429  014498  50DF               	movf	indf2,w,c
 27430  01449A  0A3D               	xorlw	61
 27431  01449C  B4D8               	btfsc	status,2,c
 27432  01449E  D007               	goto	l10248
 27433                           
 27434                           ; BSR set to: 1
 27435  0144A0  C181  FFD9         	movff	GetEnteredNumber@This,fsr2l
 27436  0144A4  C182  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 27437  0144A8  50DF               	movf	indf2,w,c
 27438  0144AA  A4D8               	btfss	status,2,c
 27439  0144AC  D7EE               	goto	l10242
 27440  0144AE                     l10248:
 27441                           
 27442                           ; BSR set to: 1
 27443                           ;MISC.c: 150: }
 27444                           ;MISC.c: 151: if(*This == 0)
 27445  0144AE  C181  FFD9         	movff	GetEnteredNumber@This,fsr2l
 27446  0144B2  C182  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 27447  0144B6  50DF               	movf	indf2,w,c
 27448  0144B8  A4D8               	btfss	status,2,c
 27449  0144BA  D007               	goto	l10254
 27450                           
 27451                           ; BSR set to: 1
 27452                           ;MISC.c: 152: {
 27453                           ;MISC.c: 153: return 32000;
 27454  0144BC  0E7D               	movlw	125
 27455  0144BE  0101               	movlb	1	; () banked
 27456  0144C0  6F82               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 27457  0144C2  0E00               	movlw	0
 27458  0144C4  0101               	movlb	1	; () banked
 27459  0144C6  6F81               	movwf	?_GetEnteredNumber& (0+255),b
 27460  0144C8  0012               	return	
 27461  0144CA                     l10254:
 27462                           
 27463                           ; BSR set to: 1
 27464                           ;MISC.c: 155: }
 27465                           ;MISC.c: 156: This++;
 27466  0144CA  0101               	movlb	1	; () banked
 27467  0144CC  4B81               	infsnz	GetEnteredNumber@This& (0+255),f,b
 27468  0144CE  2B82               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 27469                           
 27470                           ; BSR set to: 1
 27471                           ;MISC.c: 157: if(*This == ' ')
 27472  0144D0  0E20               	movlw	32
 27473  0144D2  C181  FFD9         	movff	GetEnteredNumber@This,fsr2l
 27474  0144D6  C182  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 27475  0144DA  62DF               	cpfseq	indf2,c
 27476  0144DC  D001               	goto	l10260
 27477  0144DE  D07E               	goto	l10300
 27478  0144E0                     l10260:
 27479                           
 27480                           ; BSR set to: 1
 27481                           ;MISC.c: 162: else if (*This == '=')
 27482  0144E0  0E3D               	movlw	61
 27483  0144E2  C181  FFD9         	movff	GetEnteredNumber@This,fsr2l
 27484  0144E6  C182  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 27485  0144EA  62DF               	cpfseq	indf2,c
 27486  0144EC  D007               	goto	l10268
 27487                           
 27488                           ; BSR set to: 1
 27489                           ;MISC.c: 163: {
 27490                           ;MISC.c: 164: return 32002;
 27491  0144EE  0E7D               	movlw	125
 27492  0144F0  0101               	movlb	1	; () banked
 27493  0144F2  6F82               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 27494  0144F4  0E02               	movlw	2
 27495  0144F6  0101               	movlb	1	; () banked
 27496  0144F8  6F81               	movwf	?_GetEnteredNumber& (0+255),b
 27497  0144FA  0012               	return	
 27498  0144FC                     l10268:
 27499                           
 27500                           ; BSR set to: 1
 27501                           ;MISC.c: 166: else if(*This == '-')
 27502  0144FC  0E2D               	movlw	45
 27503  0144FE  C181  FFD9         	movff	GetEnteredNumber@This,fsr2l
 27504  014502  C182  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 27505  014506  62DF               	cpfseq	indf2,c
 27506  014508  D004               	goto	l10274
 27507                           
 27508                           ; BSR set to: 1
 27509                           ;MISC.c: 167: {
 27510                           ;MISC.c: 168: negative = 1;
 27511  01450A  0E01               	movlw	1
 27512  01450C  0101               	movlb	1	; () banked
 27513  01450E  6F88               	movwf	GetEnteredNumber@negative& (0+255),b
 27514  014510  D065               	goto	l10300
 27515  014512                     l10274:
 27516                           
 27517                           ; BSR set to: 1
 27518                           ;MISC.c: 172: else if(*This == 0)
 27519  014512  C181  FFD9         	movff	GetEnteredNumber@This,fsr2l
 27520  014516  C182  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 27521  01451A  50DF               	movf	indf2,w,c
 27522  01451C  A4D8               	btfss	status,2,c
 27523  01451E  D061               	goto	l10302
 27524                           
 27525                           ; BSR set to: 1
 27526                           ;MISC.c: 173: {
 27527                           ;MISC.c: 174: return 32001;
 27528  014520  0E7D               	movlw	125
 27529  014522  0101               	movlb	1	; () banked
 27530  014524  6F82               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 27531  014526  0E01               	movlw	1
 27532  014528  0101               	movlb	1	; () banked
 27533  01452A  6F81               	movwf	?_GetEnteredNumber& (0+255),b
 27534  01452C  0012               	return	
 27535  01452E                     l10280:
 27536                           
 27537                           ; BSR set to: 1
 27538                           ;MISC.c: 178: {
 27539                           ;MISC.c: 179: temp = temp * 10;
 27540  01452E  C189  F17B         	movff	GetEnteredNumber@temp,___wmul@multiplier
 27541  014532  C18A  F17C         	movff	GetEnteredNumber@temp+1,___wmul@multiplier+1
 27542  014536  0E00               	movlw	0
 27543  014538  0101               	movlb	1	; () banked
 27544  01453A  6F7E               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27545  01453C  0E0A               	movlw	10
 27546  01453E  0101               	movlb	1	; () banked
 27547  014540  6F7D               	movwf	___wmul@multiplicand& (0+255),b
 27548  014542  EC12  F0B5         	call	___wmul	;wreg free
 27549  014546  0101               	movlb	1	; () banked
 27550  014548  C17B  F189         	movff	?___wmul,GetEnteredNumber@temp
 27551  01454C  0101               	movlb	1	; () banked
 27552  01454E  C17C  F18A         	movff	?___wmul+1,GetEnteredNumber@temp+1
 27553                           
 27554                           ; BSR set to: 1
 27555                           ;MISC.c: 180: if (*This >= 48 && *This <= 57)
 27556  014552  C181  FFD9         	movff	GetEnteredNumber@This,fsr2l
 27557  014556  C182  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 27558  01455A  0E2F               	movlw	47
 27559  01455C  64DF               	cpfsgt	indf2,c
 27560  01455E  D02C               	goto	l10290
 27561                           
 27562                           ; BSR set to: 1
 27563  014560  C181  FFD9         	movff	GetEnteredNumber@This,fsr2l
 27564  014564  C182  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 27565  014568  50DF               	movf	indf2,w,c
 27566  01456A  0101               	movlb	1	; () banked
 27567  01456C  6F83               	movwf	??_GetEnteredNumber& (0+255),b
 27568  01456E  0E3A               	movlw	58
 27569  014570  0101               	movlb	1	; () banked
 27570  014572  5D83               	subwf	??_GetEnteredNumber& (0+255),w,b
 27571  014574  B0D8               	btfsc	status,0,c
 27572  014576  D020               	goto	l10290
 27573                           
 27574                           ; BSR set to: 1
 27575                           ;MISC.c: 181: {
 27576                           ;MISC.c: 182: temp+= *This - 48;
 27577  014578  0ED0               	movlw	208
 27578  01457A  0101               	movlb	1	; () banked
 27579  01457C  6F83               	movwf	??_GetEnteredNumber& (0+255),b
 27580  01457E  0EFF               	movlw	255
 27581  014580  6F84               	movwf	(??_GetEnteredNumber+1)& (0+255),b
 27582  014582  C181  FFD9         	movff	GetEnteredNumber@This,fsr2l
 27583  014586  C182  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 27584  01458A  50DF               	movf	indf2,w,c
 27585  01458C  0101               	movlb	1	; () banked
 27586  01458E  6F85               	movwf	(??_GetEnteredNumber+2)& (0+255),b
 27587  014590  6B86               	clrf	(??_GetEnteredNumber+3)& (0+255),b
 27588  014592  0101               	movlb	1	; () banked
 27589  014594  5183               	movf	??_GetEnteredNumber& (0+255),w,b
 27590  014596  0101               	movlb	1	; () banked
 27591  014598  2785               	addwf	(??_GetEnteredNumber+2)& (0+255),f,b
 27592  01459A  0101               	movlb	1	; () banked
 27593  01459C  5184               	movf	(??_GetEnteredNumber+1)& (0+255),w,b
 27594  01459E  0101               	movlb	1	; () banked
 27595  0145A0  2386               	addwfc	(??_GetEnteredNumber+3)& (0+255),f,b
 27596  0145A2  0101               	movlb	1	; () banked
 27597  0145A4  5185               	movf	(??_GetEnteredNumber+2)& (0+255),w,b
 27598  0145A6  0101               	movlb	1	; () banked
 27599  0145A8  2789               	addwf	GetEnteredNumber@temp& (0+255),f,b
 27600  0145AA  0101               	movlb	1	; () banked
 27601  0145AC  5186               	movf	(??_GetEnteredNumber+3)& (0+255),w,b
 27602  0145AE  0101               	movlb	1	; () banked
 27603  0145B0  238A               	addwfc	(GetEnteredNumber@temp+1)& (0+255),f,b
 27604                           
 27605                           ; BSR set to: 1
 27606                           ;MISC.c: 183: i++;
 27607  0145B2  0101               	movlb	1	; () banked
 27608  0145B4  2B87               	incf	GetEnteredNumber@i& (0+255),f,b
 27609                           
 27610                           ;MISC.c: 184: }
 27611  0145B6  D007               	goto	l10294
 27612  0145B8                     l10290:
 27613                           
 27614                           ; BSR set to: 1
 27615                           ;MISC.c: 185: else
 27616                           ;MISC.c: 186: {
 27617                           ;MISC.c: 187: return 32003;
 27618  0145B8  0E7D               	movlw	125
 27619  0145BA  0101               	movlb	1	; () banked
 27620  0145BC  6F82               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 27621  0145BE  0E03               	movlw	3
 27622  0145C0  0101               	movlb	1	; () banked
 27623  0145C2  6F81               	movwf	?_GetEnteredNumber& (0+255),b
 27624  0145C4  0012               	return	
 27625  0145C6                     l10294:
 27626                           
 27627                           ; BSR set to: 1
 27628                           ;MISC.c: 189: }
 27629                           ;MISC.c: 190: if(i>5)
 27630  0145C6  0E05               	movlw	5
 27631  0145C8  0101               	movlb	1	; () banked
 27632  0145CA  6587               	cpfsgt	GetEnteredNumber@i& (0+255),b
 27633  0145CC  D007               	goto	l10300
 27634                           
 27635                           ; BSR set to: 1
 27636                           ;MISC.c: 191: {
 27637                           ;MISC.c: 192: return 32004;
 27638  0145CE  0E7D               	movlw	125
 27639  0145D0  0101               	movlb	1	; () banked
 27640  0145D2  6F82               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 27641  0145D4  0E04               	movlw	4
 27642  0145D6  0101               	movlb	1	; () banked
 27643  0145D8  6F81               	movwf	?_GetEnteredNumber& (0+255),b
 27644  0145DA  0012               	return	
 27645  0145DC                     l10300:
 27646                           
 27647                           ; BSR set to: 1
 27648                           ;MISC.c: 194: }
 27649                           ;MISC.c: 195: This++;
 27650  0145DC  0101               	movlb	1	; () banked
 27651  0145DE  4B81               	infsnz	GetEnteredNumber@This& (0+255),f,b
 27652  0145E0  2B82               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 27653  0145E2                     l10302:
 27654                           
 27655                           ; BSR set to: 1
 27656  0145E2  C181  FFD9         	movff	GetEnteredNumber@This,fsr2l
 27657  0145E6  C182  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 27658  0145EA  50DF               	movf	indf2,w,c
 27659  0145EC  A4D8               	btfss	status,2,c
 27660  0145EE  D79F               	goto	l10280
 27661                           
 27662                           ; BSR set to: 1
 27663                           ;MISC.c: 196: }
 27664                           ;MISC.c: 197: if(negative)
 27665                           
 27666                           ; BSR set to: 1
 27667  0145F0  0101               	movlb	1	; () banked
 27668  0145F2  5188               	movf	GetEnteredNumber@negative& (0+255),w,b
 27669  0145F4  B4D8               	btfsc	status,2,c
 27670  0145F6  D006               	goto	l10308
 27671                           
 27672                           ; BSR set to: 1
 27673                           ;MISC.c: 198: {
 27674                           ;MISC.c: 199: temp = (temp * -1);
 27675  0145F8  0101               	movlb	1	; () banked
 27676  0145FA  6D89               	negf	GetEnteredNumber@temp& (0+255),b
 27677  0145FC  0101               	movlb	1	; () banked
 27678  0145FE  1F8A               	comf	(GetEnteredNumber@temp+1)& (0+255),f,b
 27679  014600  B0D8               	btfsc	status,0,c
 27680  014602  2B8A               	incf	(GetEnteredNumber@temp+1)& (0+255),f,b
 27681  014604                     l10308:
 27682                           
 27683                           ; BSR set to: 1
 27684                           ;MISC.c: 200: }
 27685                           ;MISC.c: 201: return temp;
 27686  014604  C189  F181         	movff	GetEnteredNumber@temp,?_GetEnteredNumber
 27687  014608  C18A  F182         	movff	GetEnteredNumber@temp+1,?_GetEnteredNumber+1
 27688  01460C  0012               	return	
 27689  01460E                     __end_of_GetEnteredNumber:
 27690                           	opt stack 0
 27691                           tblptru	equ	0xFF8
 27692                           tblptrh	equ	0xFF7
 27693                           tblptrl	equ	0xFF6
 27694                           tablat	equ	0xFF5
 27695                           prodh	equ	0xFF4
 27696                           prodl	equ	0xFF3
 27697                           intcon	equ	0xFF2
 27698                           postinc0	equ	0xFEE
 27699                           wreg	equ	0xFE8
 27700                           indf1	equ	0xFE7
 27701                           postinc1	equ	0xFE6
 27702                           postdec1	equ	0xFE5
 27703                           fsr1h	equ	0xFE2
 27704                           fsr1l	equ	0xFE1
 27705                           indf2	equ	0xFDF
 27706                           postinc2	equ	0xFDE
 27707                           postdec2	equ	0xFDD
 27708                           fsr2h	equ	0xFDA
 27709                           fsr2l	equ	0xFD9
 27710                           status	equ	0xFD8
 27711                           
 27712 ;; *************** function ___wmul *****************
 27713 ;; Defined at:
 27714 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
 27715 ;; Parameters:    Size  Location     Type
 27716 ;;  multiplier      2   14[BANK1 ] unsigned int 
 27717 ;;  multiplicand    2   16[BANK1 ] unsigned int 
 27718 ;; Auto vars:     Size  Location     Type
 27719 ;;  product         2   18[BANK1 ] unsigned int 
 27720 ;; Return value:  Size  Location     Type
 27721 ;;                  2   14[BANK1 ] unsigned int 
 27722 ;; Registers used:
 27723 ;;		wreg, status,2, status,0, prodl, prodh
 27724 ;; Tracked objects:
 27725 ;;		On entry : 0/0
 27726 ;;		On exit  : 0/0
 27727 ;;		Unchanged: 0/0
 27728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27729 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27730 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27732 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 27733 ;;Total ram usage:        6 bytes
 27734 ;; Hardware stack levels used:    1
 27735 ;; Hardware stack levels required when called:    6
 27736 ;; This function calls:
 27737 ;;		Nothing
 27738 ;; This function is called by:
 27739 ;;		_GetEnteredNumber
 27740 ;;		_SetFreq
 27741 ;;		_sprintf
 27742 ;; This function uses a non-reentrant model
 27743 ;;
 27744                           
 27745                           	psect	text74
 27746  016A24                     __ptext74:
 27747                           	opt stack 0
 27748  016A24                     ___wmul:
 27749                           	opt stack 21
 27750                           
 27751                           ; BSR set to: 1
 27752                           ;incstack = 0
 27753  016A24  0101               	movlb	1	; () banked
 27754  016A26  517B               	movf	___wmul@multiplier& (0+255),w,b
 27755  016A28  0101               	movlb	1	; () banked
 27756  016A2A  037D               	mulwf	___wmul@multiplicand& (0+255),b
 27757  016A2C  CFF3 F17F          	movff	prodl,___wmul@product
 27758  016A30  CFF4 F180          	movff	prodh,___wmul@product+1
 27759  016A34  0101               	movlb	1	; () banked
 27760  016A36  517B               	movf	___wmul@multiplier& (0+255),w,b
 27761  016A38  0101               	movlb	1	; () banked
 27762  016A3A  037E               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 27763  016A3C  50F3               	movf	prodl,w,c
 27764  016A3E  0101               	movlb	1	; () banked
 27765  016A40  2780               	addwf	(___wmul@product+1)& (0+255),f,b
 27766  016A42  0101               	movlb	1	; () banked
 27767  016A44  517C               	movf	(___wmul@multiplier+1)& (0+255),w,b
 27768  016A46  0101               	movlb	1	; () banked
 27769  016A48  037D               	mulwf	___wmul@multiplicand& (0+255),b
 27770  016A4A  50F3               	movf	prodl,w,c
 27771  016A4C  0101               	movlb	1	; () banked
 27772  016A4E  2780               	addwf	(___wmul@product+1)& (0+255),f,b
 27773                           
 27774                           ; BSR set to: 1
 27775  016A50  C17F  F17B         	movff	___wmul@product,?___wmul
 27776  016A54  C180  F17C         	movff	___wmul@product+1,?___wmul+1
 27777  016A58  0012               	return	
 27778  016A5A                     __end_of___wmul:
 27779                           	opt stack 0
 27780                           tblptru	equ	0xFF8
 27781                           tblptrh	equ	0xFF7
 27782                           tblptrl	equ	0xFF6
 27783                           tablat	equ	0xFF5
 27784                           prodh	equ	0xFF4
 27785                           prodl	equ	0xFF3
 27786                           intcon	equ	0xFF2
 27787                           postinc0	equ	0xFEE
 27788                           wreg	equ	0xFE8
 27789                           indf1	equ	0xFE7
 27790                           postinc1	equ	0xFE6
 27791                           postdec1	equ	0xFE5
 27792                           fsr1h	equ	0xFE2
 27793                           fsr1l	equ	0xFE1
 27794                           indf2	equ	0xFDF
 27795                           postinc2	equ	0xFDE
 27796                           postdec2	equ	0xFDD
 27797                           fsr2h	equ	0xFDA
 27798                           fsr2l	equ	0xFD9
 27799                           status	equ	0xFD8
 27800                           
 27801 ;; *************** function _low_isr *****************
 27802 ;; Defined at:
 27803 ;;		line 74 in file "interrupts.c"
 27804 ;; Parameters:    Size  Location     Type
 27805 ;;		None
 27806 ;; Auto vars:     Size  Location     Type
 27807 ;;  TEMP_Rxdata   100    0[BANK0 ] unsigned char [100]
 27808 ;;  LCD_TEMP       16  100[BANK0 ] unsigned char [16]
 27809 ;;  i               2  116[BANK0 ] int 
 27810 ;;  rx              1  119[BANK0 ] unsigned char 
 27811 ;;  j               1  118[BANK0 ] unsigned char 
 27812 ;; Return value:  Size  Location     Type
 27813 ;;		None               void
 27814 ;; Registers used:
 27815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27816 ;; Tracked objects:
 27817 ;;		On entry : 0/0
 27818 ;;		On exit  : 0/0
 27819 ;;		Unchanged: 0/0
 27820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27822 ;;      Locals:         0     120       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27823 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27824 ;;      Totals:        20     120       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27825 ;;Total ram usage:      140 bytes
 27826 ;; Hardware stack levels used:    1
 27827 ;; Hardware stack levels required when called:    5
 27828 ;; This function calls:
 27829 ;;		i1_BufferCopy
 27830 ;;		i1_ClearLCD
 27831 ;;		i1_LCDPrintChar
 27832 ;;		i1_LCDPrintString
 27833 ;;		i1_ReadUSART
 27834 ;;		i1_SetLCDcursor
 27835 ;;		i1_UARTstring
 27836 ;;		i1_WriteUSART
 27837 ;;		i1_cleanBuffer
 27838 ;; This function is called by:
 27839 ;;		Interrupt level 1
 27840 ;; This function uses a non-reentrant model
 27841 ;;
 27842                           
 27843                           	psect	intcodelo
 27844  000018                     __pintcodelo:
 27845                           	opt stack 0
 27846  000018                     _low_isr:
 27847                           	opt stack 18
 27848                           
 27849                           ; BSR set to: 1
 27850                           ;incstack = 0
 27851  000018  CFD8 F016          	movff	status,??_low_isr+3
 27852  00001C  CFE8 F017          	movff	wreg,??_low_isr+4
 27853  000020  CFE0 F018          	movff	bsr,??_low_isr+5
 27854  000024  CFFA F019          	movff	pclath,??_low_isr+6
 27855  000028  CFFB F01A          	movff	pclatu,??_low_isr+7
 27856  00002C  CFE9 F01B          	movff	fsr0l,??_low_isr+8
 27857  000030  CFEA F01C          	movff	fsr0h,??_low_isr+9
 27858  000034  CFE1 F01D          	movff	fsr1l,??_low_isr+10
 27859  000038  CFE2 F01E          	movff	fsr1h,??_low_isr+11
 27860  00003C  CFD9 F01F          	movff	fsr2l,??_low_isr+12
 27861  000040  CFDA F020          	movff	fsr2h,??_low_isr+13
 27862  000044  CFF3 F021          	movff	prodl,??_low_isr+14
 27863  000048  CFF4 F022          	movff	prodh,??_low_isr+15
 27864  00004C  CFF6 F023          	movff	tblptrl,??_low_isr+16
 27865  000050  CFF7 F024          	movff	tblptrh,??_low_isr+17
 27866  000054  CFF8 F025          	movff	tblptru,??_low_isr+18
 27867  000058  CFF5 F026          	movff	tablat,??_low_isr+19
 27868                           
 27869                           ;interrupts.c: 83: unsigned char rx;
 27870                           ;interrupts.c: 84: unsigned char TEMP_Rxdata[100];
 27871                           ;interrupts.c: 85: unsigned char LCD_TEMP [16];
 27872                           ;interrupts.c: 86: int i=0;
 27873  00005C  0E00               	movlw	0
 27874  00005E  0100               	movlb	0	; () banked
 27875  000060  6FD5               	movwf	(low_isr@i+1)& (0+255),b
 27876  000062  0E00               	movlw	0
 27877  000064  0100               	movlb	0	; () banked
 27878  000066  6FD4               	movwf	low_isr@i& (0+255),b
 27879                           
 27880                           ;interrupts.c: 87: unsigned char j=0;
 27881  000068  0E00               	movlw	0
 27882  00006A  0100               	movlb	0	; () banked
 27883  00006C  6FD6               	movwf	low_isr@j& (0+255),b
 27884                           
 27885                           ; BSR set to: 0
 27886                           ;interrupts.c: 89: INTCONbits.PEIE = 0;
 27887  00006E  9CF2               	bcf	intcon,6,c	;volatile
 27888                           
 27889                           ; BSR set to: 0
 27890                           ;interrupts.c: 92: if(PIR1bits.RCIF == 1)
 27891  000070  AA9E               	btfss	3998,5,c	;volatile
 27892  000072  D156               	goto	i1l12008
 27893                           
 27894                           ; BSR set to: 0
 27895                           ;interrupts.c: 93: {
 27896                           ;interrupts.c: 94: PIE1bits.RCIE = 0;
 27897  000074  9A9D               	bcf	3997,5,c	;volatile
 27898                           
 27899                           ;interrupts.c: 95: RCSTAbits.CREN = 0;
 27900  000076  98AB               	bcf	4011,4,c	;volatile
 27901                           
 27902                           ; BSR set to: 0
 27903                           ;interrupts.c: 96: rx = ReadUSART();
 27904  000078  ECA7  F0B5         	call	i1_ReadUSART	;wreg free
 27905  00007C  0100               	movlb	0	; () banked
 27906  00007E  6FD7               	movwf	low_isr@rx& (0+255),b
 27907                           
 27908                           ; BSR set to: 0
 27909                           ;interrupts.c: 98: if(rx != '\n' && rx != '\r')
 27910  000080  0100               	movlb	0	; () banked
 27911  000082  51D7               	movf	low_isr@rx& (0+255),w,b
 27912  000084  0A0A               	xorlw	10
 27913  000086  B4D8               	btfsc	status,2,c
 27914  000088  D0CA               	goto	i1l11978
 27915                           
 27916                           ; BSR set to: 0
 27917  00008A  0100               	movlb	0	; () banked
 27918  00008C  51D7               	movf	low_isr@rx& (0+255),w,b
 27919  00008E  0A0D               	xorlw	13
 27920  000090  B4D8               	btfsc	status,2,c
 27921  000092  D0C5               	goto	i1l11978
 27922                           
 27923                           ; BSR set to: 0
 27924                           ;interrupts.c: 99: {
 27925                           ;interrupts.c: 100: if(rx == 0x07f)
 27926  000094  0100               	movlb	0	; () banked
 27927  000096  51D7               	movf	low_isr@rx& (0+255),w,b
 27928  000098  0A7F               	xorlw	127
 27929  00009A  A4D8               	btfss	status,2,c
 27930  00009C  D08C               	goto	i1l11960
 27931                           
 27932                           ; BSR set to: 0
 27933                           ;interrupts.c: 101: {
 27934                           ;interrupts.c: 102: if(bufferCount !=0)
 27935  00009E  0100               	movlb	0	; () banked
 27936  0000A0  51D8               	movf	_bufferCount& (0+255),w,b
 27937  0000A2  B4D8               	btfsc	status,2,c
 27938  0000A4  D0A5               	goto	i1l11970
 27939                           
 27940                           ; BSR set to: 0
 27941                           ;interrupts.c: 103: {
 27942                           ;interrupts.c: 104: UARTstring("\r");
 27943  0000A6  0EFF               	movlw	high STR_1
 27944  0000A8  6E03               	movwf	i1UARTstring@data+1,c
 27945  0000AA  0EFD               	movlw	low STR_1
 27946  0000AC  6E02               	movwf	i1UARTstring@data,c
 27947  0000AE  EC44  F0B0         	call	i1_UARTstring	;wreg free
 27948                           
 27949                           ;interrupts.c: 105: for(i=0;i<=bufferCount;i++)
 27950  0000B2  0E00               	movlw	0
 27951  0000B4  0100               	movlb	0	; () banked
 27952  0000B6  6FD5               	movwf	(low_isr@i+1)& (0+255),b
 27953  0000B8  0E00               	movlw	0
 27954  0000BA  0100               	movlb	0	; () banked
 27955  0000BC  6FD4               	movwf	low_isr@i& (0+255),b
 27956  0000BE  D009               	goto	i1l11932
 27957  0000C0                     i1l11928:
 27958                           
 27959                           ; BSR set to: 0
 27960                           ;interrupts.c: 106: {
 27961                           ;interrupts.c: 107: UARTstring(" ");
 27962  0000C0  0EF9               	movlw	high (STR_206+15)
 27963  0000C2  6E03               	movwf	i1UARTstring@data+1,c
 27964  0000C4  0EEE               	movlw	low (STR_206+15)
 27965  0000C6  6E02               	movwf	i1UARTstring@data,c
 27966  0000C8  EC44  F0B0         	call	i1_UARTstring	;wreg free
 27967  0000CC  0100               	movlb	0	; () banked
 27968  0000CE  4BD4               	infsnz	low_isr@i& (0+255),f,b
 27969  0000D0  2BD5               	incf	(low_isr@i+1)& (0+255),f,b
 27970  0000D2                     i1l11932:
 27971                           
 27972                           ; BSR set to: 0
 27973  0000D2  0100               	movlb	0	; () banked
 27974  0000D4  51D8               	movf	_bufferCount& (0+255),w,b
 27975  0000D6  6E13               	movwf	??_low_isr& (0+255),c
 27976  0000D8  6A14               	clrf	(??_low_isr+1)& (0+255),c
 27977  0000DA  5014               	movf	??_low_isr+1,w,c
 27978  0000DC  0A80               	xorlw	128
 27979  0000DE  6E15               	movwf	(??_low_isr+2)& (0+255),c
 27980  0000E0  0100               	movlb	0	; () banked
 27981  0000E2  51D4               	movf	low_isr@i& (0+255),w,b
 27982  0000E4  5C13               	subwf	??_low_isr,w,c
 27983  0000E6  0100               	movlb	0	; () banked
 27984  0000E8  51D5               	movf	(low_isr@i+1)& (0+255),w,b
 27985  0000EA  0A80               	xorlw	128
 27986  0000EC  5815               	subwfb	(??_low_isr+2)& (0+255),w,c
 27987  0000EE  B0D8               	btfsc	status,0,c
 27988  0000F0  D7E7               	goto	i1l11928
 27989                           
 27990                           ; BSR set to: 0
 27991                           ;interrupts.c: 108: }
 27992                           ;interrupts.c: 109: UARTstring("\r");
 27993                           
 27994                           ; BSR set to: 0
 27995  0000F2  0EFF               	movlw	high STR_1
 27996  0000F4  6E03               	movwf	i1UARTstring@data+1,c
 27997  0000F6  0EFD               	movlw	low STR_1
 27998  0000F8  6E02               	movwf	i1UARTstring@data,c
 27999  0000FA  EC44  F0B0         	call	i1_UARTstring	;wreg free
 28000                           
 28001                           ;interrupts.c: 110: UARTstring(">");
 28002  0000FE  0EF5               	movlw	high (STR_16+27)
 28003  000100  6E03               	movwf	i1UARTstring@data+1,c
 28004  000102  0EE5               	movlw	low (STR_16+27)
 28005  000104  6E02               	movwf	i1UARTstring@data,c
 28006  000106  EC44  F0B0         	call	i1_UARTstring	;wreg free
 28007                           
 28008                           ;interrupts.c: 111: bufferCount--;
 28009  00010A  0100               	movlb	0	; () banked
 28010  00010C  07D8               	decf	_bufferCount& (0+255),f,b
 28011                           
 28012                           ; BSR set to: 0
 28013                           ;interrupts.c: 112: TEMP_Rxdata[bufferCount] = 0;
 28014  00010E  0100               	movlb	0	; () banked
 28015  000110  51D8               	movf	_bufferCount& (0+255),w,b
 28016  000112  0D01               	mullw	1
 28017  000114  0100               	movlb	0	; () banked
 28018  000116  0E60               	movlw	low low_isr@TEMP_Rxdata
 28019  000118  24F3               	addwf	prodl,w,c
 28020  00011A  6ED9               	movwf	fsr2l,c
 28021  00011C  0100               	movlb	0	; () banked
 28022  00011E  0E00               	movlw	high low_isr@TEMP_Rxdata
 28023  000120  20F4               	addwfc	prodh,w,c
 28024  000122  6EDA               	movwf	fsr2h,c
 28025  000124  0E00               	movlw	0
 28026  000126  6EDF               	movwf	indf2,c
 28027                           
 28028                           ; BSR set to: 0
 28029                           ;interrupts.c: 113: UARTstring(TEMP_Rxdata);
 28030  000128  0100               	movlb	0	; () banked
 28031  00012A  0E00               	movlw	high low_isr@TEMP_Rxdata
 28032  00012C  6E03               	movwf	i1UARTstring@data+1,c
 28033  00012E  0100               	movlb	0	; () banked
 28034  000130  0E60               	movlw	low low_isr@TEMP_Rxdata
 28035  000132  6E02               	movwf	i1UARTstring@data,c
 28036  000134  EC44  F0B0         	call	i1_UARTstring	;wreg free
 28037                           
 28038                           ;interrupts.c: 114: if(bufferCount <15)
 28039  000138  0E0F               	movlw	15
 28040  00013A  0100               	movlb	0	; () banked
 28041  00013C  5DD8               	subwf	_bufferCount& (0+255),w,b
 28042  00013E  B0D8               	btfsc	status,0,c
 28043  000140  D057               	goto	i1l11970
 28044                           
 28045                           ; BSR set to: 0
 28046                           ;interrupts.c: 115: {
 28047                           ;interrupts.c: 116: for(j=0; j<15;j++)
 28048  000142  0E00               	movlw	0
 28049  000144  0100               	movlb	0	; () banked
 28050  000146  6FD6               	movwf	low_isr@j& (0+255),b
 28051  000148  D01A               	goto	L37
 28052  00014A                     i1l11950:
 28053                           
 28054                           ; BSR set to: 0
 28055                           ;interrupts.c: 117: {
 28056                           ;interrupts.c: 118: LCD_TEMP[j] = TEMP_Rxdata[j];
 28057  00014A  0100               	movlb	0	; () banked
 28058  00014C  51D6               	movf	low_isr@j& (0+255),w,b
 28059  00014E  0D01               	mullw	1
 28060  000150  0100               	movlb	0	; () banked
 28061  000152  0E60               	movlw	low low_isr@TEMP_Rxdata
 28062  000154  24F3               	addwf	prodl,w,c
 28063  000156  6ED9               	movwf	fsr2l,c
 28064  000158  0100               	movlb	0	; () banked
 28065  00015A  0E00               	movlw	high low_isr@TEMP_Rxdata
 28066  00015C  20F4               	addwfc	prodh,w,c
 28067  00015E  6EDA               	movwf	fsr2h,c
 28068  000160  0100               	movlb	0	; () banked
 28069  000162  51D6               	movf	low_isr@j& (0+255),w,b
 28070  000164  0D01               	mullw	1
 28071  000166  0100               	movlb	0	; () banked
 28072  000168  0EC4               	movlw	low low_isr@LCD_TEMP
 28073  00016A  24F3               	addwf	prodl,w,c
 28074  00016C  6EE1               	movwf	fsr1l,c
 28075  00016E  0100               	movlb	0	; () banked
 28076  000170  0E00               	movlw	high low_isr@LCD_TEMP
 28077  000172  20F4               	addwfc	prodh,w,c
 28078  000174  6EE2               	movwf	fsr1h,c
 28079  000176  CFDF FFE7          	movff	indf2,indf1
 28080                           
 28081                           ; BSR set to: 0
 28082  00017A  0100               	movlb	0	; () banked
 28083  00017C  2BD6               	incf	low_isr@j& (0+255),f,b
 28084  00017E                     L37:
 28085                           
 28086                           ; BSR set to: 0
 28087  00017E  0E0E               	movlw	14
 28088  000180  0100               	movlb	0	; () banked
 28089  000182  65D6               	cpfsgt	low_isr@j& (0+255),b
 28090  000184  D7E2               	goto	i1l11950
 28091                           
 28092                           ; BSR set to: 0
 28093                           ;interrupts.c: 119: }
 28094                           ;interrupts.c: 120: ClearLCD();
 28095                           
 28096                           ; BSR set to: 0
 28097  000186  EC51  F0B6         	call	i1_ClearLCD	;wreg free
 28098                           
 28099                           ;interrupts.c: 121: SetLCDcursor(0, 0);
 28100  00018A  0E00               	movlw	0
 28101  00018C  6E0F               	movwf	i1SetLCDcursor@Col,c
 28102  00018E  0E00               	movlw	0
 28103  000190  EC14  F0B6         	call	i1_SetLCDcursor
 28104                           
 28105                           ;interrupts.c: 122: LCDPrintChar('>');
 28106  000194  0E3E               	movlw	62
 28107  000196  EC81  F0B6         	call	i1_LCDPrintChar
 28108                           
 28109                           ;interrupts.c: 123: SetLCDcursor(0, 1);
 28110  00019A  0E01               	movlw	1
 28111  00019C  6E0F               	movwf	i1SetLCDcursor@Col,c
 28112  00019E  0E00               	movlw	0
 28113  0001A0  EC14  F0B6         	call	i1_SetLCDcursor
 28114                           
 28115                           ;interrupts.c: 124: LCDPrintString(LCD_TEMP);
 28116  0001A4  0100               	movlb	0	; () banked
 28117  0001A6  0E00               	movlw	high low_isr@LCD_TEMP
 28118  0001A8  6E10               	movwf	i1LCDPrintString@Text+1,c
 28119  0001AA  0100               	movlb	0	; () banked
 28120  0001AC  0EC4               	movlw	low low_isr@LCD_TEMP
 28121  0001AE  6E0F               	movwf	i1LCDPrintString@Text,c
 28122  0001B0  ECA0  F0B2         	call	i1_LCDPrintString	;wreg free
 28123  0001B4  D01D               	goto	i1l11970
 28124  0001B6                     i1l11960:
 28125                           
 28126                           ;interrupts.c: 128: else
 28127                           ;interrupts.c: 129: {
 28128                           ;interrupts.c: 130: WriteUSART(rx);
 28129  0001B6  0100               	movlb	0	; () banked
 28130  0001B8  51D7               	movf	low_isr@rx& (0+255),w,b
 28131  0001BA  EC66  F0B6         	call	i1_WriteUSART
 28132                           
 28133                           ;interrupts.c: 131: if(bufferCount < 15)
 28134  0001BE  0E0F               	movlw	15
 28135  0001C0  0100               	movlb	0	; () banked
 28136  0001C2  5DD8               	subwf	_bufferCount& (0+255),w,b
 28137  0001C4  B0D8               	btfsc	status,0,c
 28138  0001C6  D004               	goto	i1l11966
 28139                           
 28140                           ; BSR set to: 0
 28141                           ;interrupts.c: 132: {
 28142                           ;interrupts.c: 133: LCDPrintChar(rx);
 28143  0001C8  0100               	movlb	0	; () banked
 28144  0001CA  51D7               	movf	low_isr@rx& (0+255),w,b
 28145  0001CC  EC81  F0B6         	call	i1_LCDPrintChar
 28146  0001D0                     i1l11966:
 28147                           
 28148                           ;interrupts.c: 134: }
 28149                           ;interrupts.c: 135: TEMP_Rxdata[bufferCount] = rx;
 28150  0001D0  0100               	movlb	0	; () banked
 28151  0001D2  51D8               	movf	_bufferCount& (0+255),w,b
 28152  0001D4  0D01               	mullw	1
 28153  0001D6  0100               	movlb	0	; () banked
 28154  0001D8  0E60               	movlw	low low_isr@TEMP_Rxdata
 28155  0001DA  24F3               	addwf	prodl,w,c
 28156  0001DC  6ED9               	movwf	fsr2l,c
 28157  0001DE  0100               	movlb	0	; () banked
 28158  0001E0  0E00               	movlw	high low_isr@TEMP_Rxdata
 28159  0001E2  20F4               	addwfc	prodh,w,c
 28160  0001E4  6EDA               	movwf	fsr2h,c
 28161  0001E6  0100               	movlb	0	; () banked
 28162  0001E8  C0D7  FFDF         	movff	low_isr@rx,indf2
 28163                           
 28164                           ; BSR set to: 0
 28165                           ;interrupts.c: 136: bufferCount++;
 28166  0001EC  0100               	movlb	0	; () banked
 28167  0001EE  2BD8               	incf	_bufferCount& (0+255),f,b
 28168  0001F0                     i1l11970:
 28169                           
 28170                           ;interrupts.c: 137: }
 28171                           ;interrupts.c: 138: if(bufferCount>=99)
 28172  0001F0  0E62               	movlw	98
 28173  0001F2  0100               	movlb	0	; () banked
 28174  0001F4  65D8               	cpfsgt	_bufferCount& (0+255),b
 28175  0001F6  D092               	goto	i1l12004
 28176                           
 28177                           ; BSR set to: 0
 28178                           ;interrupts.c: 139: {
 28179                           ;interrupts.c: 140: UARTstring("\r\nBuffer overflow! Deleting Buffer \r\n");
 28180  0001F8  0EF3               	movlw	high STR_5
 28181  0001FA  6E03               	movwf	i1UARTstring@data+1,c
 28182  0001FC  0E94               	movlw	low STR_5
 28183  0001FE  6E02               	movwf	i1UARTstring@data,c
 28184  000200  EC44  F0B0         	call	i1_UARTstring	;wreg free
 28185                           
 28186                           ;interrupts.c: 141: cleanBuffer(TEMP_Rxdata, 100);
 28187  000204  0100               	movlb	0	; () banked
 28188  000206  0E00               	movlw	high low_isr@TEMP_Rxdata
 28189  000208  6E02               	movwf	i1cleanBuffer@data+1,c
 28190  00020A  0100               	movlb	0	; () banked
 28191  00020C  0E60               	movlw	low low_isr@TEMP_Rxdata
 28192  00020E  6E01               	movwf	i1cleanBuffer@data,c
 28193  000210  0E00               	movlw	0
 28194  000212  6E04               	movwf	i1cleanBuffer@count+1,c
 28195  000214  0E64               	movlw	100
 28196  000216  6E03               	movwf	i1cleanBuffer@count,c
 28197  000218  ECF4  F0B4         	call	i1_cleanBuffer	;wreg free
 28198  00021C  D07C               	goto	L36
 28199  00021E                     i1l11978:
 28200                           
 28201                           ; BSR set to: 0
 28202                           ;interrupts.c: 146: else if((rx == '\n' || rx == '\r') && bufferCount == 0)
 28203  00021E  0100               	movlb	0	; () banked
 28204  000220  51D7               	movf	low_isr@rx& (0+255),w,b
 28205  000222  0A0A               	xorlw	10
 28206  000224  B4D8               	btfsc	status,2,c
 28207  000226  D005               	goto	i1l56
 28208                           
 28209                           ; BSR set to: 0
 28210  000228  0100               	movlb	0	; () banked
 28211  00022A  51D7               	movf	low_isr@rx& (0+255),w,b
 28212  00022C  0A0D               	xorlw	13
 28213  00022E  A4D8               	btfss	status,2,c
 28214  000230  D030               	goto	i1l54
 28215  000232                     i1l56:
 28216                           
 28217                           ; BSR set to: 0
 28218  000232  0100               	movlb	0	; () banked
 28219  000234  67D8               	tstfsz	_bufferCount& (0+255),b
 28220  000236  D02D               	goto	i1l54
 28221                           
 28222                           ; BSR set to: 0
 28223                           ;interrupts.c: 147: {
 28224                           ;interrupts.c: 148: TEMP_Rxdata[bufferCount] = rx;
 28225  000238  0100               	movlb	0	; () banked
 28226  00023A  51D8               	movf	_bufferCount& (0+255),w,b
 28227  00023C  0D01               	mullw	1
 28228  00023E  0100               	movlb	0	; () banked
 28229  000240  0E60               	movlw	low low_isr@TEMP_Rxdata
 28230  000242  24F3               	addwf	prodl,w,c
 28231  000244  6ED9               	movwf	fsr2l,c
 28232  000246  0100               	movlb	0	; () banked
 28233  000248  0E00               	movlw	high low_isr@TEMP_Rxdata
 28234  00024A  20F4               	addwfc	prodh,w,c
 28235  00024C  6EDA               	movwf	fsr2h,c
 28236  00024E  0100               	movlb	0	; () banked
 28237  000250  C0D7  FFDF         	movff	low_isr@rx,indf2
 28238                           
 28239                           ; BSR set to: 0
 28240                           ;interrupts.c: 149: BufferCopy(TEMP_Rxdata, Rxdata, 100,0);
 28241  000254  0100               	movlb	0	; () banked
 28242  000256  0E00               	movlw	high low_isr@TEMP_Rxdata
 28243  000258  6E0A               	movwf	i1BufferCopy@from+1,c
 28244  00025A  0100               	movlb	0	; () banked
 28245  00025C  0E60               	movlw	low low_isr@TEMP_Rxdata
 28246  00025E  6E09               	movwf	i1BufferCopy@from,c
 28247  000260  0103               	movlb	3	; () banked
 28248  000262  0E03               	movlw	high _Rxdata
 28249  000264  6E0C               	movwf	i1BufferCopy@to+1,c
 28250  000266  0103               	movlb	3	; () banked
 28251  000268  0E64               	movlw	low _Rxdata
 28252  00026A  6E0B               	movwf	i1BufferCopy@to,c
 28253  00026C  0E64               	movlw	100
 28254  00026E  6E0D               	movwf	i1BufferCopy@count,c
 28255  000270  0E00               	movlw	0
 28256  000272  6E0E               	movwf	i1BufferCopy@shift,c
 28257  000274  EC00  F0AE         	call	i1_BufferCopy	;wreg free
 28258                           
 28259                           ;interrupts.c: 150: cleanBuffer(TEMP_Rxdata, 100);
 28260  000278  0100               	movlb	0	; () banked
 28261  00027A  0E00               	movlw	high low_isr@TEMP_Rxdata
 28262  00027C  6E02               	movwf	i1cleanBuffer@data+1,c
 28263  00027E  0100               	movlb	0	; () banked
 28264  000280  0E60               	movlw	low low_isr@TEMP_Rxdata
 28265  000282  6E01               	movwf	i1cleanBuffer@data,c
 28266  000284  0E00               	movlw	0
 28267  000286  6E04               	movwf	i1cleanBuffer@count+1,c
 28268  000288  0E64               	movlw	100
 28269  00028A  6E03               	movwf	i1cleanBuffer@count,c
 28270  00028C  ECF4  F0B4         	call	i1_cleanBuffer	;wreg free
 28271                           
 28272                           ;interrupts.c: 151: }
 28273  000290  D045               	goto	i1l12004
 28274  000292                     i1l54:
 28275                           
 28276                           ; BSR set to: 0
 28277                           ;interrupts.c: 152: else
 28278                           ;interrupts.c: 153: {
 28279                           ;interrupts.c: 154: if(TEMP_Rxdata[0] == 0 && TEMP_Rxdata[1] != 0)
 28280  000292  0100               	movlb	0	; () banked
 28281  000294  6760               	tstfsz	low_isr@TEMP_Rxdata& (0+255),b
 28282  000296  D017               	goto	i1l11992
 28283                           
 28284                           ; BSR set to: 0
 28285  000298  0100               	movlb	0	; () banked
 28286  00029A  5161               	movf	(low_isr@TEMP_Rxdata+1)& (0+255),w,b
 28287  00029C  B4D8               	btfsc	status,2,c
 28288  00029E  D013               	goto	i1l11992
 28289                           
 28290                           ; BSR set to: 0
 28291                           ;interrupts.c: 155: {
 28292                           ;interrupts.c: 156: BufferCopy(TEMP_Rxdata, Rxdata, 100,1);
 28293  0002A0  0100               	movlb	0	; () banked
 28294  0002A2  0E00               	movlw	high low_isr@TEMP_Rxdata
 28295  0002A4  6E0A               	movwf	i1BufferCopy@from+1,c
 28296  0002A6  0100               	movlb	0	; () banked
 28297  0002A8  0E60               	movlw	low low_isr@TEMP_Rxdata
 28298  0002AA  6E09               	movwf	i1BufferCopy@from,c
 28299  0002AC  0103               	movlb	3	; () banked
 28300  0002AE  0E03               	movlw	high _Rxdata
 28301  0002B0  6E0C               	movwf	i1BufferCopy@to+1,c
 28302  0002B2  0103               	movlb	3	; () banked
 28303  0002B4  0E64               	movlw	low _Rxdata
 28304  0002B6  6E0B               	movwf	i1BufferCopy@to,c
 28305  0002B8  0E64               	movlw	100
 28306  0002BA  6E0D               	movwf	i1BufferCopy@count,c
 28307  0002BC  0E01               	movlw	1
 28308  0002BE  6E0E               	movwf	i1BufferCopy@shift,c
 28309  0002C0  EC00  F0AE         	call	i1_BufferCopy	;wreg free
 28310                           
 28311                           ;interrupts.c: 157: }
 28312  0002C4  D012               	goto	i1l11994
 28313  0002C6                     i1l11992:
 28314                           
 28315                           ;interrupts.c: 158: else
 28316                           ;interrupts.c: 159: {
 28317                           ;interrupts.c: 160: BufferCopy(TEMP_Rxdata, Rxdata, 100,0);
 28318  0002C6  0100               	movlb	0	; () banked
 28319  0002C8  0E00               	movlw	high low_isr@TEMP_Rxdata
 28320  0002CA  6E0A               	movwf	i1BufferCopy@from+1,c
 28321  0002CC  0100               	movlb	0	; () banked
 28322  0002CE  0E60               	movlw	low low_isr@TEMP_Rxdata
 28323  0002D0  6E09               	movwf	i1BufferCopy@from,c
 28324  0002D2  0103               	movlb	3	; () banked
 28325  0002D4  0E03               	movlw	high _Rxdata
 28326  0002D6  6E0C               	movwf	i1BufferCopy@to+1,c
 28327  0002D8  0103               	movlb	3	; () banked
 28328  0002DA  0E64               	movlw	low _Rxdata
 28329  0002DC  6E0B               	movwf	i1BufferCopy@to,c
 28330  0002DE  0E64               	movlw	100
 28331  0002E0  6E0D               	movwf	i1BufferCopy@count,c
 28332  0002E2  0E00               	movlw	0
 28333  0002E4  6E0E               	movwf	i1BufferCopy@shift,c
 28334  0002E6  EC00  F0AE         	call	i1_BufferCopy	;wreg free
 28335  0002EA                     i1l11994:
 28336                           
 28337                           ;interrupts.c: 161: }
 28338                           ;interrupts.c: 162: ClearLCD();
 28339  0002EA  EC51  F0B6         	call	i1_ClearLCD	;wreg free
 28340                           
 28341                           ;interrupts.c: 163: SetLCDcursor(0, 0);
 28342  0002EE  0E00               	movlw	0
 28343  0002F0  6E0F               	movwf	i1SetLCDcursor@Col,c
 28344  0002F2  0E00               	movlw	0
 28345  0002F4  EC14  F0B6         	call	i1_SetLCDcursor
 28346                           
 28347                           ;interrupts.c: 164: LCDPrintChar('>');
 28348  0002F8  0E3E               	movlw	62
 28349  0002FA  EC81  F0B6         	call	i1_LCDPrintChar
 28350                           
 28351                           ;interrupts.c: 165: cleanBuffer(TEMP_Rxdata, 100);
 28352  0002FE  0100               	movlb	0	; () banked
 28353  000300  0E00               	movlw	high low_isr@TEMP_Rxdata
 28354  000302  6E02               	movwf	i1cleanBuffer@data+1,c
 28355  000304  0100               	movlb	0	; () banked
 28356  000306  0E60               	movlw	low low_isr@TEMP_Rxdata
 28357  000308  6E01               	movwf	i1cleanBuffer@data,c
 28358  00030A  0E00               	movlw	0
 28359  00030C  6E04               	movwf	i1cleanBuffer@count+1,c
 28360  00030E  0E64               	movlw	100
 28361  000310  6E03               	movwf	i1cleanBuffer@count,c
 28362  000312  ECF4  F0B4         	call	i1_cleanBuffer	;wreg free
 28363  000316                     L36:
 28364                           
 28365                           ;interrupts.c: 166: bufferCount=0;
 28366  000316  0E00               	movlw	0
 28367  000318  0100               	movlb	0	; () banked
 28368  00031A  6FD8               	movwf	_bufferCount& (0+255),b
 28369  00031C                     i1l12004:
 28370                           
 28371                           ;interrupts.c: 167: }
 28372                           ;interrupts.c: 168: PIE1bits.RCIE = 1;
 28373  00031C  8A9D               	bsf	3997,5,c	;volatile
 28374                           
 28375                           ;interrupts.c: 169: RCSTAbits.CREN = 1;
 28376  00031E  88AB               	bsf	4011,4,c	;volatile
 28377  000320                     i1l12008:
 28378                           
 28379                           ;interrupts.c: 170: }
 28380                           ;interrupts.c: 171: INTCONbits.PEIE = 1;
 28381  000320  8CF2               	bsf	intcon,6,c	;volatile
 28382  000322  C026  FFF5         	movff	??_low_isr+19,tablat
 28383  000326  C025  FFF8         	movff	??_low_isr+18,tblptru
 28384  00032A  C024  FFF7         	movff	??_low_isr+17,tblptrh
 28385  00032E  C023  FFF6         	movff	??_low_isr+16,tblptrl
 28386  000332  C022  FFF4         	movff	??_low_isr+15,prodh
 28387  000336  C021  FFF3         	movff	??_low_isr+14,prodl
 28388  00033A  C020  FFDA         	movff	??_low_isr+13,fsr2h
 28389  00033E  C01F  FFD9         	movff	??_low_isr+12,fsr2l
 28390  000342  C01E  FFE2         	movff	??_low_isr+11,fsr1h
 28391  000346  C01D  FFE1         	movff	??_low_isr+10,fsr1l
 28392  00034A  C01C  FFEA         	movff	??_low_isr+9,fsr0h
 28393  00034E  C01B  FFE9         	movff	??_low_isr+8,fsr0l
 28394  000352  C01A  FFFB         	movff	??_low_isr+7,pclatu
 28395  000356  C019  FFFA         	movff	??_low_isr+6,pclath
 28396  00035A  C018  FFE0         	movff	??_low_isr+5,bsr
 28397  00035E  C017  FFE8         	movff	??_low_isr+4,wreg
 28398  000362  C016  FFD8         	movff	??_low_isr+3,status
 28399  000366  0010               	retfie	
 28400  000368                     __end_of_low_isr:
 28401                           	opt stack 0
 28402                           pclatu	equ	0xFFB
 28403                           pclath	equ	0xFFA
 28404                           tblptru	equ	0xFF8
 28405                           tblptrh	equ	0xFF7
 28406                           tblptrl	equ	0xFF6
 28407                           tablat	equ	0xFF5
 28408                           prodh	equ	0xFF4
 28409                           prodl	equ	0xFF3
 28410                           intcon	equ	0xFF2
 28411                           postinc0	equ	0xFEE
 28412                           fsr0h	equ	0xFEA
 28413                           fsr0l	equ	0xFE9
 28414                           wreg	equ	0xFE8
 28415                           indf1	equ	0xFE7
 28416                           postinc1	equ	0xFE6
 28417                           postdec1	equ	0xFE5
 28418                           fsr1h	equ	0xFE2
 28419                           fsr1l	equ	0xFE1
 28420                           bsr	equ	0xFE0
 28421                           indf2	equ	0xFDF
 28422                           postinc2	equ	0xFDE
 28423                           postdec2	equ	0xFDD
 28424                           fsr2h	equ	0xFDA
 28425                           fsr2l	equ	0xFD9
 28426                           status	equ	0xFD8
 28427                           
 28428 ;; *************** function i1_UARTstring *****************
 28429 ;; Defined at:
 28430 ;;		line 132 in file "UART.c"
 28431 ;; Parameters:    Size  Location     Type
 28432 ;;  data            2    1[COMRAM] PTR const unsigned char 
 28433 ;;		 -> STR_281(26), STR_280(5), STR_278(16), STR_276(24), 
 28434 ;;		 -> STR_265(3), STR_263(15), STR_262(22), STR_261(50), 
 28435 ;;		 -> STR_260(7), STR_259(6), STR_258(11), STR_257(17), 
 28436 ;;		 -> STR_256(12), STR_255(13), STR_254(10), STR_253(12), 
 28437 ;;		 -> STR_248(28), STR_247(68), STR_246(9), STR_245(11), 
 28438 ;;		 -> STR_244(23), STR_242(19), STR_240(20), STR_237(20), 
 28439 ;;		 -> STR_228(21), STR_227(61), STR_226(69), STR_225(7), 
 28440 ;;		 -> STR_224(7), STR_223(10), STR_222(11), STR_221(29), 
 28441 ;;		 -> STR_220(13), STR_219(33), STR_218(25), STR_217(28), 
 28442 ;;		 -> STR_216(3), STR_215(26), STR_214(2), STR_213(34), 
 28443 ;;		 -> STR_212(37), STR_209(24), STR_205(3), STR_195(13), 
 28444 ;;		 -> STR_194(73), STR_193(5), STR_192(12), STR_191(17), 
 28445 ;;		 -> STR_185(28), STR_183(30), STR_181(33), STR_174(42), 
 28446 ;;		 -> STR_173(62), STR_172(26), STR_168(43), STR_166(48), 
 28447 ;;		 -> STR_164(27), STR_157(42), STR_156(66), STR_155(25), 
 28448 ;;		 -> STR_153(49), Command@buf(200), STR_149(33), STR_147(38), 
 28449 ;;		 -> STR_145(27), STR_144(28), STR_134(37), STR_133(68), 
 28450 ;;		 -> STR_132(18), STR_131(15), STR_130(11), STR_129(28), 
 28451 ;;		 -> STR_127(18), STR_125(32), STR_121(31), STR_117(38), 
 28452 ;;		 -> STR_104(24), STR_103(68), STR_102(10), STR_101(6), 
 28453 ;;		 -> STR_100(8), STR_99(11), STR_98(21), STR_96(16), 
 28454 ;;		 -> STR_94(19), STR_91(18), STR_88(16), STR_85(15), 
 28455 ;;		 -> STR_82(22), STR_70(27), STR_69(68), STR_68(7), 
 28456 ;;		 -> STR_67(8), STR_66(11), STR_65(24), STR_63(19), 
 28457 ;;		 -> STR_61(19), STR_58(18), STR_55(25), STR_46(17), 
 28458 ;;		 -> STR_45(68), STR_44(8), STR_43(7), STR_42(11), 
 28459 ;;		 -> STR_41(17), STR_39(12), STR_37(9), STR_34(8), 
 28460 ;;		 -> STR_31(13), STR_28(9), STR_25(8), STR_22(13), 
 28461 ;;		 -> STR_18(4), STR_17(4), STR_16(29), STR_5(38), 
 28462 ;;		 -> low_isr@TEMP_Rxdata(100), STR_4(2), STR_3(2), STR_2(2), 
 28463 ;;		 -> STR_1(2), 
 28464 ;; Auto vars:     Size  Location     Type
 28465 ;;		None
 28466 ;; Return value:  Size  Location     Type
 28467 ;;		None               void
 28468 ;; Registers used:
 28469 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28470 ;; Tracked objects:
 28471 ;;		On entry : 0/0
 28472 ;;		On exit  : 0/0
 28473 ;;		Unchanged: 0/0
 28474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28479 ;;Total ram usage:        4 bytes
 28480 ;; Hardware stack levels used:    1
 28481 ;; Hardware stack levels required when called:    2
 28482 ;; This function calls:
 28483 ;;		i1_WriteUSART
 28484 ;; This function is called by:
 28485 ;;		_low_isr
 28486 ;; This function uses a non-reentrant model
 28487 ;;
 28488                           
 28489                           	psect	text76
 28490  016088                     __ptext76:
 28491                           	opt stack 0
 28492  016088                     i1_UARTstring:
 28493                           	opt stack 20
 28494  016088                     i1l380:
 28495                           
 28496                           ;UART.c: 135: {
 28497                           ;UART.c: 136: if(*data != 0)
 28498  016088  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 28499  01608C  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 28500  016090  0E00               	movlw	low (__mediumconst shr (0+16))
 28501  016092  6EF8               	movwf	tblptru,c
 28502  016094  0E0C               	movlw	(high __ramtop+-1)
 28503  016096  64F7               	cpfsgt	tblptrh,c
 28504  016098  D003               	bra	i1u1524_27
 28505  01609A  0008               	tblrd		*
 28506  01609C  50F5               	movf	tablat,w,c
 28507  01609E  D005               	bra	i1u1524_20
 28508  0160A0                     i1u1524_27:
 28509  0160A0  CFF6 FFE1          	movff	tblptrl,fsr1l
 28510  0160A4  CFF7 FFE2          	movff	tblptrh,fsr1h
 28511  0160A8  50E7               	movf	indf1,w,c
 28512  0160AA                     i1u1524_20:
 28513  0160AA  0900               	iorlw	0
 28514  0160AC  B4D8               	btfsc	status,2,c
 28515  0160AE  D015               	goto	i1l11878
 28516                           
 28517                           ;UART.c: 137: {
 28518                           ;UART.c: 138: WriteUSART(*data);
 28519  0160B0  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 28520  0160B4  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 28521  0160B8  0E00               	movlw	low (__mediumconst shr (0+16))
 28522  0160BA  6EF8               	movwf	tblptru,c
 28523  0160BC  0E0C               	movlw	(high __ramtop+-1)
 28524  0160BE  64F7               	cpfsgt	tblptrh,c
 28525  0160C0  D003               	bra	i1u1526_27
 28526  0160C2  0008               	tblrd		*
 28527  0160C4  50F5               	movf	tablat,w,c
 28528  0160C6  D005               	bra	i1u1526_20
 28529  0160C8                     i1u1526_27:
 28530  0160C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 28531  0160CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 28532  0160D0  50E7               	movf	indf1,w,c
 28533  0160D2                     i1u1526_20:
 28534  0160D2  EC66  F0B6         	call	i1_WriteUSART
 28535  0160D6                     i1l382:
 28536  0160D6  A2AC               	btfss	4012,1,c	;volatile
 28537  0160D8  D7FE               	goto	i1l382
 28538  0160DA                     i1l11878:
 28539                           
 28540                           ;UART.c: 140: }
 28541                           ;UART.c: 141: } while( *data++);
 28542  0160DA  5002               	movf	i1UARTstring@data,w,c
 28543  0160DC  6E04               	movwf	??i1_UARTstring& (0+255),c
 28544  0160DE  5003               	movf	i1UARTstring@data+1,w,c
 28545  0160E0  6E05               	movwf	(??i1_UARTstring+1)& (0+255),c
 28546  0160E2  4A02               	infsnz	i1UARTstring@data,f,c
 28547  0160E4  2A03               	incf	i1UARTstring@data+1,f,c
 28548  0160E6  C004  FFF6         	movff	??i1_UARTstring,tblptrl
 28549  0160EA  C005  FFF7         	movff	??i1_UARTstring+1,tblptrh
 28550  0160EE  0E00               	movlw	low (__mediumconst shr (0+16))
 28551  0160F0  6EF8               	movwf	tblptru,c
 28552  0160F2  0E0C               	movlw	(high __ramtop+-1)
 28553  0160F4  64F7               	cpfsgt	tblptrh,c
 28554  0160F6  D003               	bra	i1u1528_27
 28555  0160F8  0008               	tblrd		*
 28556  0160FA  50F5               	movf	tablat,w,c
 28557  0160FC  D005               	bra	i1u1528_20
 28558  0160FE                     i1u1528_27:
 28559  0160FE  CFF6 FFE1          	movff	tblptrl,fsr1l
 28560  016102  CFF7 FFE2          	movff	tblptrh,fsr1h
 28561  016106  50E7               	movf	indf1,w,c
 28562  016108                     i1u1528_20:
 28563  016108  0900               	iorlw	0
 28564  01610A  B4D8               	btfsc	status,2,c
 28565  01610C  0012               	return	
 28566  01610E  D7BC               	goto	i1l380
 28567  016110                     __end_ofi1_UARTstring:
 28568                           	opt stack 0
 28569                           pclatu	equ	0xFFB
 28570                           pclath	equ	0xFFA
 28571                           tblptru	equ	0xFF8
 28572                           tblptrh	equ	0xFF7
 28573                           tblptrl	equ	0xFF6
 28574                           tablat	equ	0xFF5
 28575                           prodh	equ	0xFF4
 28576                           prodl	equ	0xFF3
 28577                           intcon	equ	0xFF2
 28578                           postinc0	equ	0xFEE
 28579                           fsr0h	equ	0xFEA
 28580                           fsr0l	equ	0xFE9
 28581                           wreg	equ	0xFE8
 28582                           indf1	equ	0xFE7
 28583                           postinc1	equ	0xFE6
 28584                           postdec1	equ	0xFE5
 28585                           fsr1h	equ	0xFE2
 28586                           fsr1l	equ	0xFE1
 28587                           bsr	equ	0xFE0
 28588                           indf2	equ	0xFDF
 28589                           postinc2	equ	0xFDE
 28590                           postdec2	equ	0xFDD
 28591                           fsr2h	equ	0xFDA
 28592                           fsr2l	equ	0xFD9
 28593                           status	equ	0xFD8
 28594                           
 28595 ;; *************** function i1_WriteUSART *****************
 28596 ;; Defined at:
 28597 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
 28598 ;; Parameters:    Size  Location     Type
 28599 ;;  data            1    wreg     unsigned char 
 28600 ;; Auto vars:     Size  Location     Type
 28601 ;;  data            1    0[COMRAM] unsigned char 
 28602 ;; Return value:  Size  Location     Type
 28603 ;;		None               void
 28604 ;; Registers used:
 28605 ;;		wreg
 28606 ;; Tracked objects:
 28607 ;;		On entry : 0/0
 28608 ;;		On exit  : 0/0
 28609 ;;		Unchanged: 0/0
 28610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28615 ;;Total ram usage:        1 bytes
 28616 ;; Hardware stack levels used:    1
 28617 ;; Hardware stack levels required when called:    1
 28618 ;; This function calls:
 28619 ;;		Nothing
 28620 ;; This function is called by:
 28621 ;;		_low_isr
 28622 ;;		i1_UARTstring
 28623 ;; This function uses a non-reentrant model
 28624 ;;
 28625                           
 28626                           	psect	text77
 28627  016CCC                     __ptext77:
 28628                           	opt stack 0
 28629  016CCC                     i1_WriteUSART:
 28630                           	opt stack 21
 28631                           
 28632                           ;incstack = 0
 28633                           ;i1WriteUSART@data stored from wreg
 28634  016CCC  6E01               	movwf	i1WriteUSART@data,c
 28635  016CCE  ACAC               	btfss	4012,6,c	;volatile
 28636  016CD0  D004               	goto	i1l11008
 28637  016CD2  90AC               	bcf	4012,0,c	;volatile
 28638  016CD4  0101               	movlb	1	; () banked
 28639  016CD6  B30C               	btfsc	_USART_Status& (0+255),1,b
 28640                           
 28641                           ; BSR set to: 1
 28642  016CD8  80AC               	bsf	4012,0,c	;volatile
 28643  016CDA                     i1l11008:
 28644  016CDA  C001  FFAD         	movff	i1WriteUSART@data,4013	;volatile
 28645  016CDE  0012               	return	
 28646  016CE0                     __end_ofi1_WriteUSART:
 28647                           	opt stack 0
 28648                           pclatu	equ	0xFFB
 28649                           pclath	equ	0xFFA
 28650                           tblptru	equ	0xFF8
 28651                           tblptrh	equ	0xFF7
 28652                           tblptrl	equ	0xFF6
 28653                           tablat	equ	0xFF5
 28654                           prodh	equ	0xFF4
 28655                           prodl	equ	0xFF3
 28656                           intcon	equ	0xFF2
 28657                           postinc0	equ	0xFEE
 28658                           fsr0h	equ	0xFEA
 28659                           fsr0l	equ	0xFE9
 28660                           wreg	equ	0xFE8
 28661                           indf1	equ	0xFE7
 28662                           postinc1	equ	0xFE6
 28663                           postdec1	equ	0xFE5
 28664                           fsr1h	equ	0xFE2
 28665                           fsr1l	equ	0xFE1
 28666                           bsr	equ	0xFE0
 28667                           indf2	equ	0xFDF
 28668                           postinc2	equ	0xFDE
 28669                           postdec2	equ	0xFDD
 28670                           fsr2h	equ	0xFDA
 28671                           fsr2l	equ	0xFD9
 28672                           status	equ	0xFD8
 28673                           
 28674 ;; *************** function i1_SetLCDcursor *****************
 28675 ;; Defined at:
 28676 ;;		line 148 in file "LCD.c"
 28677 ;; Parameters:    Size  Location     Type
 28678 ;;  Row             1    wreg     unsigned char 
 28679 ;;  Col             1   14[COMRAM] unsigned char 
 28680 ;; Auto vars:     Size  Location     Type
 28681 ;;  Row             1   15[COMRAM] unsigned char 
 28682 ;;  SetLCDcursor    1   16[COMRAM] unsigned char 
 28683 ;; Return value:  Size  Location     Type
 28684 ;;		None               void
 28685 ;; Registers used:
 28686 ;;		wreg, status,2, status,0, cstack
 28687 ;; Tracked objects:
 28688 ;;		On entry : 0/0
 28689 ;;		On exit  : 0/0
 28690 ;;		Unchanged: 0/0
 28691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28692 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28693 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28695 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28696 ;;Total ram usage:        3 bytes
 28697 ;; Hardware stack levels used:    1
 28698 ;; Hardware stack levels required when called:    4
 28699 ;; This function calls:
 28700 ;;		i1_SendLCDbyte
 28701 ;; This function is called by:
 28702 ;;		_low_isr
 28703 ;; This function uses a non-reentrant model
 28704 ;;
 28705                           
 28706                           	psect	text78
 28707  016C28                     __ptext78:
 28708                           	opt stack 0
 28709  016C28                     i1_SetLCDcursor:
 28710                           	opt stack 18
 28711                           
 28712                           ;incstack = 0
 28713                           ;i1SetLCDcursor@Row stored from wreg
 28714  016C28  6E10               	movwf	i1SetLCDcursor@Row,c
 28715                           
 28716                           ;LCD.c: 150: char address;
 28717                           ;LCD.c: 153: if (Row == 0)
 28718  016C2A  6610               	tstfsz	i1SetLCDcursor@Row,c
 28719  016C2C  D002               	goto	i1l11884
 28720                           
 28721                           ;LCD.c: 154: {
 28722                           ;LCD.c: 155: address = 0;
 28723  016C2E  0E00               	movlw	0
 28724  016C30  D001               	goto	L38
 28725  016C32                     i1l11884:
 28726                           
 28727                           ;LCD.c: 157: else
 28728                           ;LCD.c: 158: {
 28729                           ;LCD.c: 159: address = 0x40;
 28730  016C32  0E40               	movlw	64
 28731  016C34                     L38:
 28732  016C34  6E11               	movwf	i1SetLCDcursor@address,c
 28733                           
 28734                           ;LCD.c: 160: }
 28735                           ;LCD.c: 162: address |= Col;
 28736  016C36  500F               	movf	i1SetLCDcursor@Col,w,c
 28737  016C38  1211               	iorwf	i1SetLCDcursor@address,f,c
 28738                           
 28739                           ;LCD.c: 163: if(!LCDwait)
 28740  016C3A  0101               	movlb	1	; () banked
 28741  016C3C  6709               	tstfsz	_LCDwait& (0+255),b
 28742  016C3E  0012               	return	
 28743                           
 28744                           ; BSR set to: 1
 28745                           ;LCD.c: 164: {
 28746                           ;LCD.c: 165: SendLCDbyte(0x80 | address, 0);
 28747  016C40  0E00               	movlw	0
 28748  016C42  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 28749  016C44  5011               	movf	i1SetLCDcursor@address,w,c
 28750  016C46  0980               	iorlw	128
 28751  016C48  EC62  F0AD         	call	i1_SendLCDbyte
 28752  016C4C  0012               	return	
 28753  016C4E                     __end_ofi1_SetLCDcursor:
 28754                           	opt stack 0
 28755                           pclatu	equ	0xFFB
 28756                           pclath	equ	0xFFA
 28757                           tblptru	equ	0xFF8
 28758                           tblptrh	equ	0xFF7
 28759                           tblptrl	equ	0xFF6
 28760                           tablat	equ	0xFF5
 28761                           prodh	equ	0xFF4
 28762                           prodl	equ	0xFF3
 28763                           intcon	equ	0xFF2
 28764                           postinc0	equ	0xFEE
 28765                           fsr0h	equ	0xFEA
 28766                           fsr0l	equ	0xFE9
 28767                           wreg	equ	0xFE8
 28768                           indf1	equ	0xFE7
 28769                           postinc1	equ	0xFE6
 28770                           postdec1	equ	0xFE5
 28771                           fsr1h	equ	0xFE2
 28772                           fsr1l	equ	0xFE1
 28773                           bsr	equ	0xFE0
 28774                           indf2	equ	0xFDF
 28775                           postinc2	equ	0xFDE
 28776                           postdec2	equ	0xFDD
 28777                           fsr2h	equ	0xFDA
 28778                           fsr2l	equ	0xFD9
 28779                           status	equ	0xFD8
 28780                           
 28781 ;; *************** function i1_ReadUSART *****************
 28782 ;; Defined at:
 28783 ;;		line 144 in file "UART.c"
 28784 ;; Parameters:    Size  Location     Type
 28785 ;;		None
 28786 ;; Auto vars:     Size  Location     Type
 28787 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 28788 ;; Return value:  Size  Location     Type
 28789 ;;                  1    wreg      unsigned char 
 28790 ;; Registers used:
 28791 ;;		wreg, status,2, status,0
 28792 ;; Tracked objects:
 28793 ;;		On entry : 0/0
 28794 ;;		On exit  : 0/0
 28795 ;;		Unchanged: 0/0
 28796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28801 ;;Total ram usage:        1 bytes
 28802 ;; Hardware stack levels used:    1
 28803 ;; Hardware stack levels required when called:    1
 28804 ;; This function calls:
 28805 ;;		Nothing
 28806 ;; This function is called by:
 28807 ;;		_low_isr
 28808 ;; This function uses a non-reentrant model
 28809 ;;
 28810                           
 28811                           	psect	text79
 28812  016B4E                     __ptext79:
 28813                           	opt stack 0
 28814  016B4E                     i1_ReadUSART:
 28815                           	opt stack 21
 28816                           
 28817                           ;UART.c: 146: char data;
 28818                           ;UART.c: 148: USART_Status.val &= 0xf2;
 28819                           
 28820                           ;incstack = 0
 28821  016B4E  0EF2               	movlw	242
 28822  016B50  0101               	movlb	1	; () banked
 28823  016B52  170C               	andwf	_USART_Status& (0+255),f,b
 28824                           
 28825                           ; BSR set to: 1
 28826                           ;UART.c: 150: if(RCSTAbits.RX9)
 28827  016B54  ACAB               	btfss	4011,6,c	;volatile
 28828  016B56  D006               	goto	i1l389
 28829                           
 28830                           ; BSR set to: 1
 28831                           ;UART.c: 151: {
 28832                           ;UART.c: 152: USART_Status.RX_NINE = 0;
 28833  016B58  0101               	movlb	1	; () banked
 28834  016B5A  910C               	bcf	_USART_Status& (0+255),0,b
 28835                           
 28836                           ;UART.c: 153: if(RCSTAbits.RX9D)
 28837  016B5C  A0AB               	btfss	4011,0,c	;volatile
 28838  016B5E  D002               	goto	i1l389
 28839                           
 28840                           ; BSR set to: 1
 28841                           ;UART.c: 154: USART_Status.RX_NINE = 1;
 28842  016B60  0101               	movlb	1	; () banked
 28843  016B62  810C               	bsf	_USART_Status& (0+255),0,b
 28844  016B64                     i1l389:
 28845                           
 28846                           ; BSR set to: 1
 28847                           ;UART.c: 155: }
 28848                           ;UART.c: 157: if(RCSTAbits.FERR)
 28849  016B64  A4AB               	btfss	4011,2,c	;volatile
 28850  016B66  D002               	goto	i1l391
 28851                           
 28852                           ; BSR set to: 1
 28853                           ;UART.c: 158: USART_Status.FRAME_ERROR = 1;
 28854  016B68  0101               	movlb	1	; () banked
 28855  016B6A  850C               	bsf	_USART_Status& (0+255),2,b
 28856  016B6C                     i1l391:
 28857                           
 28858                           ; BSR set to: 1
 28859                           ;UART.c: 160: if(RCSTAbits.OERR)
 28860  016B6C  A2AB               	btfss	4011,1,c	;volatile
 28861  016B6E  D002               	goto	i1l392
 28862                           
 28863                           ; BSR set to: 1
 28864                           ;UART.c: 161: USART_Status.OVERRUN_ERROR = 1;
 28865  016B70  0101               	movlb	1	; () banked
 28866  016B72  870C               	bsf	_USART_Status& (0+255),3,b
 28867  016B74                     i1l392:
 28868                           
 28869                           ; BSR set to: 1
 28870                           ;UART.c: 163: data = RCREG;
 28871  016B74  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 28872                           
 28873                           ; BSR set to: 1
 28874                           ;UART.c: 165: return (data);
 28875  016B78  5001               	movf	i1ReadUSART@data,w,c
 28876  016B7A  0012               	return	
 28877  016B7C                     __end_ofi1_ReadUSART:
 28878                           	opt stack 0
 28879                           pclatu	equ	0xFFB
 28880                           pclath	equ	0xFFA
 28881                           tblptru	equ	0xFF8
 28882                           tblptrh	equ	0xFF7
 28883                           tblptrl	equ	0xFF6
 28884                           tablat	equ	0xFF5
 28885                           prodh	equ	0xFF4
 28886                           prodl	equ	0xFF3
 28887                           intcon	equ	0xFF2
 28888                           postinc0	equ	0xFEE
 28889                           fsr0h	equ	0xFEA
 28890                           fsr0l	equ	0xFE9
 28891                           wreg	equ	0xFE8
 28892                           indf1	equ	0xFE7
 28893                           postinc1	equ	0xFE6
 28894                           postdec1	equ	0xFE5
 28895                           fsr1h	equ	0xFE2
 28896                           fsr1l	equ	0xFE1
 28897                           bsr	equ	0xFE0
 28898                           indf2	equ	0xFDF
 28899                           postinc2	equ	0xFDE
 28900                           postdec2	equ	0xFDD
 28901                           fsr2h	equ	0xFDA
 28902                           fsr2l	equ	0xFD9
 28903                           status	equ	0xFD8
 28904                           
 28905 ;; *************** function i1_LCDPrintString *****************
 28906 ;; Defined at:
 28907 ;;		line 189 in file "LCD.c"
 28908 ;; Parameters:    Size  Location     Type
 28909 ;;  Text            2   14[COMRAM] PTR unsigned char 
 28910 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 28911 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 28912 ;;		 -> Scroll_2(16), Scroll_1(16), STR_279(16), STR_277(17), 
 28913 ;;		 -> STR_264(10), STR_243(16), STR_241(16), STR_238(15), 
 28914 ;;		 -> STR_210(17), STR_206(17), STR_186(16), STR_184(16), 
 28915 ;;		 -> STR_182(13), STR_169(14), STR_167(16), STR_165(15), 
 28916 ;;		 -> STR_154(16), Command@buf(200), STR_150(14), STR_148(16), 
 28917 ;;		 -> STR_146(15), STR_128(13), STR_126(15), STR_122(14), 
 28918 ;;		 -> STR_118(16), STR_105(16), STR_97(16), STR_95(16), 
 28919 ;;		 -> STR_92(15), STR_89(15), STR_86(14), STR_83(16), 
 28920 ;;		 -> STR_71(16), STR_64(16), STR_62(15), STR_59(14), 
 28921 ;;		 -> STR_56(16), STR_40(12), STR_38(9), STR_35(8), 
 28922 ;;		 -> STR_32(13), STR_29(9), STR_26(8), STR_23(13), 
 28923 ;;		 -> STR_15(10), STR_14(17), STR_13(16), STR_12(15), 
 28924 ;;		 -> STR_11(14), STR_10(13), STR_9(12), STR_8(11), 
 28925 ;;		 -> STR_7(10), STR_6(9), low_isr@LCD_TEMP(16), 
 28926 ;; Auto vars:     Size  Location     Type
 28927 ;;  LCDPrintStri    2   16[COMRAM] PTR unsigned char 
 28928 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 28929 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 28930 ;;		 -> Scroll_2(16), Scroll_1(16), STR_279(16), STR_277(17), 
 28931 ;;		 -> STR_264(10), STR_243(16), STR_241(16), STR_238(15), 
 28932 ;;		 -> STR_210(17), STR_206(17), STR_186(16), STR_184(16), 
 28933 ;;		 -> STR_182(13), STR_169(14), STR_167(16), STR_165(15), 
 28934 ;;		 -> STR_154(16), Command@buf(200), STR_150(14), STR_148(16), 
 28935 ;;		 -> STR_146(15), STR_128(13), STR_126(15), STR_122(14), 
 28936 ;;		 -> STR_118(16), STR_105(16), STR_97(16), STR_95(16), 
 28937 ;;		 -> STR_92(15), STR_89(15), STR_86(14), STR_83(16), 
 28938 ;;		 -> STR_71(16), STR_64(16), STR_62(15), STR_59(14), 
 28939 ;;		 -> STR_56(16), STR_40(12), STR_38(9), STR_35(8), 
 28940 ;;		 -> STR_32(13), STR_29(9), STR_26(8), STR_23(13), 
 28941 ;;		 -> STR_15(10), STR_14(17), STR_13(16), STR_12(15), 
 28942 ;;		 -> STR_11(14), STR_10(13), STR_9(12), STR_8(11), 
 28943 ;;		 -> STR_7(10), STR_6(9), low_isr@LCD_TEMP(16), 
 28944 ;; Return value:  Size  Location     Type
 28945 ;;		None               void
 28946 ;; Registers used:
 28947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28948 ;; Tracked objects:
 28949 ;;		On entry : 0/0
 28950 ;;		On exit  : 0/0
 28951 ;;		Unchanged: 0/0
 28952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28956 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28957 ;;Total ram usage:        4 bytes
 28958 ;; Hardware stack levels used:    1
 28959 ;; Hardware stack levels required when called:    4
 28960 ;; This function calls:
 28961 ;;		i1_SendLCDbyte
 28962 ;; This function is called by:
 28963 ;;		_low_isr
 28964 ;; This function uses a non-reentrant model
 28965 ;;
 28966                           
 28967                           	psect	text80
 28968  016540                     __ptext80:
 28969                           	opt stack 0
 28970  016540                     i1_LCDPrintString:
 28971                           	opt stack 18
 28972                           
 28973                           ;LCD.c: 191: unsigned char *c;
 28974                           ;LCD.c: 193: c = Text;
 28975                           
 28976                           ; BSR set to: 1
 28977                           ;incstack = 0
 28978  016540  C010  F012         	movff	i1LCDPrintString@Text+1,i1LCDPrintString@c+1
 28979  016544  C00F  F011         	movff	i1LCDPrintString@Text,i1LCDPrintString@c
 28980                           
 28981                           ;LCD.c: 195: while ((c != 0) && (*c != 0))
 28982  016548  D017               	goto	i1l11900
 28983  01654A                     i1l11896:
 28984                           
 28985                           ;LCD.c: 196: {
 28986                           ;LCD.c: 197: SendLCDbyte(*c, 1);
 28987  01654A  0E01               	movlw	1
 28988  01654C  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 28989  01654E  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 28990  016552  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 28991  016556  0E00               	movlw	low (__mediumconst shr (0+16))
 28992  016558  6EF8               	movwf	tblptru,c
 28993  01655A  0E0C               	movlw	(high __ramtop+-1)
 28994  01655C  64F7               	cpfsgt	tblptrh,c
 28995  01655E  D003               	bra	i1u1532_27
 28996  016560  0008               	tblrd		*
 28997  016562  50F5               	movf	tablat,w,c
 28998  016564  D005               	bra	i1u1532_20
 28999  016566                     i1u1532_27:
 29000  016566  CFF6 FFE1          	movff	tblptrl,fsr1l
 29001  01656A  CFF7 FFE2          	movff	tblptrh,fsr1h
 29002  01656E  50E7               	movf	indf1,w,c
 29003  016570                     i1u1532_20:
 29004  016570  EC62  F0AD         	call	i1_SendLCDbyte
 29005                           
 29006                           ;LCD.c: 198: c++;
 29007  016574  4A11               	infsnz	i1LCDPrintString@c,f,c
 29008  016576  2A12               	incf	i1LCDPrintString@c+1,f,c
 29009  016578                     i1l11900:
 29010  016578  5012               	movf	i1LCDPrintString@c+1,w,c
 29011  01657A  1011               	iorwf	i1LCDPrintString@c,w,c
 29012  01657C  B4D8               	btfsc	status,2,c
 29013  01657E  0012               	return	
 29014  016580  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 29015  016584  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 29016  016588  0E00               	movlw	low (__mediumconst shr (0+16))
 29017  01658A  6EF8               	movwf	tblptru,c
 29018  01658C  0E0C               	movlw	(high __ramtop+-1)
 29019  01658E  64F7               	cpfsgt	tblptrh,c
 29020  016590  D003               	bra	i1u1534_27
 29021  016592  0008               	tblrd		*
 29022  016594  50F5               	movf	tablat,w,c
 29023  016596  D005               	bra	i1u1534_20
 29024  016598                     i1u1534_27:
 29025  016598  CFF6 FFE1          	movff	tblptrl,fsr1l
 29026  01659C  CFF7 FFE2          	movff	tblptrh,fsr1h
 29027  0165A0  50E7               	movf	indf1,w,c
 29028  0165A2                     i1u1534_20:
 29029  0165A2  0900               	iorlw	0
 29030  0165A4  B4D8               	btfsc	status,2,c
 29031  0165A6  0012               	return	
 29032  0165A8  D7D0               	goto	i1l11896
 29033  0165AA                     __end_ofi1_LCDPrintString:
 29034                           	opt stack 0
 29035                           pclatu	equ	0xFFB
 29036                           pclath	equ	0xFFA
 29037                           tblptru	equ	0xFF8
 29038                           tblptrh	equ	0xFF7
 29039                           tblptrl	equ	0xFF6
 29040                           tablat	equ	0xFF5
 29041                           prodh	equ	0xFF4
 29042                           prodl	equ	0xFF3
 29043                           intcon	equ	0xFF2
 29044                           postinc0	equ	0xFEE
 29045                           fsr0h	equ	0xFEA
 29046                           fsr0l	equ	0xFE9
 29047                           wreg	equ	0xFE8
 29048                           indf1	equ	0xFE7
 29049                           postinc1	equ	0xFE6
 29050                           postdec1	equ	0xFE5
 29051                           fsr1h	equ	0xFE2
 29052                           fsr1l	equ	0xFE1
 29053                           bsr	equ	0xFE0
 29054                           indf2	equ	0xFDF
 29055                           postinc2	equ	0xFDE
 29056                           postdec2	equ	0xFDD
 29057                           fsr2h	equ	0xFDA
 29058                           fsr2l	equ	0xFD9
 29059                           status	equ	0xFD8
 29060                           
 29061 ;; *************** function i1_LCDPrintChar *****************
 29062 ;; Defined at:
 29063 ;;		line 211 in file "LCD.c"
 29064 ;; Parameters:    Size  Location     Type
 29065 ;;  character       1    wreg     unsigned char 
 29066 ;; Auto vars:     Size  Location     Type
 29067 ;;  character       1   14[COMRAM] unsigned char 
 29068 ;; Return value:  Size  Location     Type
 29069 ;;		None               void
 29070 ;; Registers used:
 29071 ;;		wreg, status,2, status,0, cstack
 29072 ;; Tracked objects:
 29073 ;;		On entry : 0/0
 29074 ;;		On exit  : 0/0
 29075 ;;		Unchanged: 0/0
 29076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29080 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29081 ;;Total ram usage:        1 bytes
 29082 ;; Hardware stack levels used:    1
 29083 ;; Hardware stack levels required when called:    4
 29084 ;; This function calls:
 29085 ;;		i1_SendLCDbyte
 29086 ;; This function is called by:
 29087 ;;		_low_isr
 29088 ;; This function uses a non-reentrant model
 29089 ;;
 29090                           
 29091                           	psect	text81
 29092  016D02                     __ptext81:
 29093                           	opt stack 0
 29094  016D02                     i1_LCDPrintChar:
 29095                           	opt stack 18
 29096                           
 29097                           ;incstack = 0
 29098                           ;i1LCDPrintChar@character stored from wreg
 29099  016D02  6E0F               	movwf	i1LCDPrintChar@character,c
 29100                           
 29101                           ;LCD.c: 213: SendLCDbyte(character, 1);
 29102  016D04  0E01               	movlw	1
 29103  016D06  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 29104  016D08  500F               	movf	i1LCDPrintChar@character,w,c
 29105  016D0A  EC62  F0AD         	call	i1_SendLCDbyte
 29106  016D0E  0012               	return	
 29107  016D10                     __end_ofi1_LCDPrintChar:
 29108                           	opt stack 0
 29109                           pclatu	equ	0xFFB
 29110                           pclath	equ	0xFFA
 29111                           tblptru	equ	0xFF8
 29112                           tblptrh	equ	0xFF7
 29113                           tblptrl	equ	0xFF6
 29114                           tablat	equ	0xFF5
 29115                           prodh	equ	0xFF4
 29116                           prodl	equ	0xFF3
 29117                           intcon	equ	0xFF2
 29118                           postinc0	equ	0xFEE
 29119                           fsr0h	equ	0xFEA
 29120                           fsr0l	equ	0xFE9
 29121                           wreg	equ	0xFE8
 29122                           indf1	equ	0xFE7
 29123                           postinc1	equ	0xFE6
 29124                           postdec1	equ	0xFE5
 29125                           fsr1h	equ	0xFE2
 29126                           fsr1l	equ	0xFE1
 29127                           bsr	equ	0xFE0
 29128                           indf2	equ	0xFDF
 29129                           postinc2	equ	0xFDE
 29130                           postdec2	equ	0xFDD
 29131                           fsr2h	equ	0xFDA
 29132                           fsr2l	equ	0xFD9
 29133                           status	equ	0xFD8
 29134                           
 29135 ;; *************** function i1_ClearLCD *****************
 29136 ;; Defined at:
 29137 ;;		line 180 in file "LCD.c"
 29138 ;; Parameters:    Size  Location     Type
 29139 ;;		None
 29140 ;; Auto vars:     Size  Location     Type
 29141 ;;		None
 29142 ;; Return value:  Size  Location     Type
 29143 ;;		None               void
 29144 ;; Registers used:
 29145 ;;		wreg, status,2, status,0, cstack
 29146 ;; Tracked objects:
 29147 ;;		On entry : 0/0
 29148 ;;		On exit  : 0/0
 29149 ;;		Unchanged: 0/0
 29150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29155 ;;Total ram usage:        0 bytes
 29156 ;; Hardware stack levels used:    1
 29157 ;; Hardware stack levels required when called:    4
 29158 ;; This function calls:
 29159 ;;		i1_SendLCDbyte
 29160 ;; This function is called by:
 29161 ;;		_low_isr
 29162 ;; This function uses a non-reentrant model
 29163 ;;
 29164                           
 29165                           	psect	text82
 29166  016CA2                     __ptext82:
 29167                           	opt stack 0
 29168  016CA2                     i1_ClearLCD:
 29169                           	opt stack 18
 29170                           
 29171                           ;LCD.c: 185: SendLCDbyte(0x01, 0);
 29172                           
 29173                           ;incstack = 0
 29174  016CA2  0E00               	movlw	0
 29175  016CA4  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 29176  016CA6  0E01               	movlw	1
 29177  016CA8  EC62  F0AD         	call	i1_SendLCDbyte
 29178                           
 29179                           ;LCD.c: 186: SendLCDbyte(0x02, 0);
 29180  016CAC  0E00               	movlw	0
 29181  016CAE  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 29182  016CB0  0E02               	movlw	2
 29183  016CB2  EC62  F0AD         	call	i1_SendLCDbyte
 29184  016CB6  0012               	return	
 29185  016CB8                     __end_ofi1_ClearLCD:
 29186                           	opt stack 0
 29187                           pclatu	equ	0xFFB
 29188                           pclath	equ	0xFFA
 29189                           tblptru	equ	0xFF8
 29190                           tblptrh	equ	0xFF7
 29191                           tblptrl	equ	0xFF6
 29192                           tablat	equ	0xFF5
 29193                           prodh	equ	0xFF4
 29194                           prodl	equ	0xFF3
 29195                           intcon	equ	0xFF2
 29196                           postinc0	equ	0xFEE
 29197                           fsr0h	equ	0xFEA
 29198                           fsr0l	equ	0xFE9
 29199                           wreg	equ	0xFE8
 29200                           indf1	equ	0xFE7
 29201                           postinc1	equ	0xFE6
 29202                           postdec1	equ	0xFE5
 29203                           fsr1h	equ	0xFE2
 29204                           fsr1l	equ	0xFE1
 29205                           bsr	equ	0xFE0
 29206                           indf2	equ	0xFDF
 29207                           postinc2	equ	0xFDE
 29208                           postdec2	equ	0xFDD
 29209                           fsr2h	equ	0xFDA
 29210                           fsr2l	equ	0xFD9
 29211                           status	equ	0xFD8
 29212                           
 29213 ;; *************** function i1_SendLCDbyte *****************
 29214 ;; Defined at:
 29215 ;;		line 73 in file "LCD.c"
 29216 ;; Parameters:    Size  Location     Type
 29217 ;;  data            1    wreg     unsigned char 
 29218 ;;  isCommand       1   10[COMRAM] unsigned char 
 29219 ;; Auto vars:     Size  Location     Type
 29220 ;;  data            1   11[COMRAM] unsigned char 
 29221 ;;  SendLCDbyte     1   13[COMRAM] unsigned char 
 29222 ;;  SendLCDbyte     1   12[COMRAM] unsigned char 
 29223 ;; Return value:  Size  Location     Type
 29224 ;;		None               void
 29225 ;; Registers used:
 29226 ;;		wreg, status,2, status,0, cstack
 29227 ;; Tracked objects:
 29228 ;;		On entry : 0/0
 29229 ;;		On exit  : 0/0
 29230 ;;		Unchanged: 0/0
 29231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29232 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29233 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29235 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29236 ;;Total ram usage:        4 bytes
 29237 ;; Hardware stack levels used:    1
 29238 ;; Hardware stack levels required when called:    3
 29239 ;; This function calls:
 29240 ;;		i1_PulseEnablePin
 29241 ;;		i1_delayUS
 29242 ;; This function is called by:
 29243 ;;		i1_SetLCDcursor
 29244 ;;		i1_ClearLCD
 29245 ;;		i1_LCDPrintString
 29246 ;;		i1_LCDPrintChar
 29247 ;; This function uses a non-reentrant model
 29248 ;;
 29249                           
 29250                           	psect	text83
 29251  015AC4                     __ptext83:
 29252                           	opt stack 0
 29253  015AC4                     i1_SendLCDbyte:
 29254                           	opt stack 18
 29255                           
 29256                           ;incstack = 0
 29257                           ;i1SendLCDbyte@data stored from wreg
 29258  015AC4  6E0C               	movwf	i1SendLCDbyte@data,c
 29259                           
 29260                           ;LCD.c: 75: unsigned char MSB_nibble=0;
 29261  015AC6  0E00               	movlw	0
 29262  015AC8  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 29263                           
 29264                           ;LCD.c: 76: unsigned char LSB_nibble=0;
 29265  015ACA  0E00               	movlw	0
 29266  015ACC  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 29267                           
 29268                           ;LCD.c: 78: LATA &= ~(0b00001000+0b00010000+0b00100000);
 29269  015ACE  0EC7               	movlw	199
 29270  015AD0  1689               	andwf	3977,f,c	;volatile
 29271                           
 29272                           ;LCD.c: 79: LATE &= ~0b00000001;
 29273  015AD2  908D               	bcf	3981,0,c	;volatile
 29274                           
 29275                           ;LCD.c: 80: LATD &= ~(0b10000000 + 0b00100000);
 29276  015AD4  0E5F               	movlw	95
 29277  015AD6  168C               	andwf	3980,f,c	;volatile
 29278                           
 29279                           ;LCD.c: 81: delayUS(10);
 29280  015AD8  0E0A               	movlw	10
 29281  015ADA  6E01               	movwf	i1delayUS@US,c
 29282  015ADC  0E00               	movlw	0
 29283  015ADE  6E02               	movwf	i1delayUS@US+1,c
 29284  015AE0  0E00               	movlw	0
 29285  015AE2  6E03               	movwf	i1delayUS@US+2,c
 29286  015AE4  0E00               	movlw	0
 29287  015AE6  6E04               	movwf	i1delayUS@US+3,c
 29288  015AE8  EC6C  F0B4         	call	i1_delayUS	;wreg free
 29289                           
 29290                           ;LCD.c: 82: MSB_nibble = (data & 0xF0)>>4;
 29291  015AEC  380C               	swapf	i1SendLCDbyte@data,w,c
 29292  015AEE  0B0F               	andlw	15
 29293  015AF0  0B0F               	andlw	15
 29294  015AF2  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 29295                           
 29296                           ;LCD.c: 83: LSB_nibble = (data & 0x0F);
 29297  015AF4  500C               	movf	i1SendLCDbyte@data,w,c
 29298  015AF6  0B0F               	andlw	15
 29299  015AF8  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 29300                           
 29301                           ;LCD.c: 84: if(!LCDwait)
 29302  015AFA  0101               	movlb	1	; () banked
 29303  015AFC  6709               	tstfsz	_LCDwait& (0+255),b
 29304  015AFE  D028               	goto	i1l11000
 29305                           
 29306                           ; BSR set to: 1
 29307                           ;LCD.c: 85: {
 29308                           ;LCD.c: 86: if(isCommand)
 29309  015B00  500B               	movf	i1SendLCDbyte@isCommand,w,c
 29310  015B02  B4D8               	btfsc	status,2,c
 29311  015B04  D002               	goto	i1l10956
 29312                           
 29313                           ; BSR set to: 1
 29314                           ;LCD.c: 87: {
 29315                           ;LCD.c: 88: LATD |= (0b00100000);
 29316  015B06  8A8C               	bsf	3980,5,c	;volatile
 29317                           
 29318                           ;LCD.c: 89: }
 29319  015B08  D001               	goto	i1l10958
 29320  015B0A                     i1l10956:
 29321                           
 29322                           ; BSR set to: 1
 29323                           ;LCD.c: 90: else
 29324                           ;LCD.c: 91: {
 29325                           ;LCD.c: 92: LATD &= ~(0b00100000);
 29326  015B0A  9A8C               	bcf	3980,5,c	;volatile
 29327  015B0C                     i1l10958:
 29328                           
 29329                           ; BSR set to: 1
 29330                           ;LCD.c: 93: }
 29331                           ;LCD.c: 94: if(MSB_nibble&0b1000)
 29332  015B0C  B60D               	btfsc	i1SendLCDbyte@MSB_nibble,3,c
 29333                           
 29334                           ; BSR set to: 1
 29335                           ;LCD.c: 95: {
 29336                           ;LCD.c: 96: LATA |= 0b00001000;
 29337  015B0E  8689               	bsf	3977,3,c	;volatile
 29338                           
 29339                           ; BSR set to: 1
 29340                           ;LCD.c: 97: }
 29341                           ;LCD.c: 98: if(MSB_nibble&0b0100)
 29342                           
 29343                           ; BSR set to: 1
 29344  015B10  B40D               	btfsc	i1SendLCDbyte@MSB_nibble,2,c
 29345                           
 29346                           ; BSR set to: 1
 29347                           ;LCD.c: 99: {
 29348                           ;LCD.c: 100: LATA |= 0b00010000;
 29349  015B12  8889               	bsf	3977,4,c	;volatile
 29350                           
 29351                           ; BSR set to: 1
 29352                           ;LCD.c: 101: }
 29353                           ;LCD.c: 102: if(MSB_nibble&0b0010)
 29354                           
 29355                           ; BSR set to: 1
 29356  015B14  B20D               	btfsc	i1SendLCDbyte@MSB_nibble,1,c
 29357                           
 29358                           ; BSR set to: 1
 29359                           ;LCD.c: 103: {
 29360                           ;LCD.c: 104: LATA |= 0b00100000;
 29361  015B16  8A89               	bsf	3977,5,c	;volatile
 29362                           
 29363                           ; BSR set to: 1
 29364                           ;LCD.c: 105: }
 29365                           ;LCD.c: 106: if(MSB_nibble&0b0001)
 29366                           
 29367                           ; BSR set to: 1
 29368  015B18  B00D               	btfsc	i1SendLCDbyte@MSB_nibble,0,c
 29369                           
 29370                           ; BSR set to: 1
 29371                           ;LCD.c: 107: {
 29372                           ;LCD.c: 108: LATE |= 0b00000001;
 29373  015B1A  808D               	bsf	3981,0,c	;volatile
 29374                           
 29375                           ; BSR set to: 1
 29376                           ;LCD.c: 109: }
 29377                           ;LCD.c: 110: PulseEnablePin();
 29378                           
 29379                           ; BSR set to: 1
 29380  015B1C  ECBE  F0B5         	call	i1_PulseEnablePin	;wreg free
 29381                           
 29382                           ;LCD.c: 111: LATA &= ~(0b00001000+0b00010000+0b00100000);
 29383  015B20  0EC7               	movlw	199
 29384  015B22  1689               	andwf	3977,f,c	;volatile
 29385                           
 29386                           ;LCD.c: 112: LATE &= ~0b00000001;
 29387  015B24  908D               	bcf	3981,0,c	;volatile
 29388                           
 29389                           ;LCD.c: 113: delayUS(10);
 29390  015B26  0E0A               	movlw	10
 29391  015B28  6E01               	movwf	i1delayUS@US,c
 29392  015B2A  0E00               	movlw	0
 29393  015B2C  6E02               	movwf	i1delayUS@US+1,c
 29394  015B2E  0E00               	movlw	0
 29395  015B30  6E03               	movwf	i1delayUS@US+2,c
 29396  015B32  0E00               	movlw	0
 29397  015B34  6E04               	movwf	i1delayUS@US+3,c
 29398  015B36  EC6C  F0B4         	call	i1_delayUS	;wreg free
 29399                           
 29400                           ;LCD.c: 114: if(LSB_nibble&0b1000)
 29401  015B3A  B60E               	btfsc	i1SendLCDbyte@LSB_nibble,3,c
 29402                           
 29403                           ;LCD.c: 115: {
 29404                           ;LCD.c: 116: LATA |= 0b00001000;
 29405  015B3C  8689               	bsf	3977,3,c	;volatile
 29406                           
 29407                           ;LCD.c: 117: }
 29408                           ;LCD.c: 118: if(LSB_nibble&0b0100)
 29409  015B3E  B40E               	btfsc	i1SendLCDbyte@LSB_nibble,2,c
 29410                           
 29411                           ;LCD.c: 119: {
 29412                           ;LCD.c: 120: LATA |= 0b00010000;
 29413  015B40  8889               	bsf	3977,4,c	;volatile
 29414                           
 29415                           ;LCD.c: 121: }
 29416                           ;LCD.c: 122: if(LSB_nibble&0b0010)
 29417  015B42  B20E               	btfsc	i1SendLCDbyte@LSB_nibble,1,c
 29418                           
 29419                           ;LCD.c: 123: {
 29420                           ;LCD.c: 124: LATA |= 0b00100000;
 29421  015B44  8A89               	bsf	3977,5,c	;volatile
 29422                           
 29423                           ;LCD.c: 125: }
 29424                           ;LCD.c: 126: if(LSB_nibble&0b0001)
 29425  015B46  B00E               	btfsc	i1SendLCDbyte@LSB_nibble,0,c
 29426                           
 29427                           ;LCD.c: 127: {
 29428                           ;LCD.c: 128: LATE |= 0b00000001;
 29429  015B48  808D               	bsf	3981,0,c	;volatile
 29430                           
 29431                           ;LCD.c: 129: }
 29432                           ;LCD.c: 130: PulseEnablePin();
 29433  015B4A  ECBE  F0B5         	call	i1_PulseEnablePin	;wreg free
 29434                           
 29435                           ;LCD.c: 131: }
 29436  015B4E  0012               	return	
 29437  015B50                     i1l11000:
 29438                           
 29439                           ;LCD.c: 132: else
 29440                           ;LCD.c: 133: {
 29441                           ;LCD.c: 134: delayUS(20);
 29442  015B50  0E14               	movlw	20
 29443  015B52  6E01               	movwf	i1delayUS@US,c
 29444  015B54  0E00               	movlw	0
 29445  015B56  6E02               	movwf	i1delayUS@US+1,c
 29446  015B58  0E00               	movlw	0
 29447  015B5A  6E03               	movwf	i1delayUS@US+2,c
 29448  015B5C  0E00               	movlw	0
 29449  015B5E  6E04               	movwf	i1delayUS@US+3,c
 29450  015B60  EC6C  F0B4         	call	i1_delayUS	;wreg free
 29451  015B64  0012               	return	
 29452  015B66                     __end_ofi1_SendLCDbyte:
 29453                           	opt stack 0
 29454                           pclatu	equ	0xFFB
 29455                           pclath	equ	0xFFA
 29456                           tblptru	equ	0xFF8
 29457                           tblptrh	equ	0xFF7
 29458                           tblptrl	equ	0xFF6
 29459                           tablat	equ	0xFF5
 29460                           prodh	equ	0xFF4
 29461                           prodl	equ	0xFF3
 29462                           intcon	equ	0xFF2
 29463                           postinc0	equ	0xFEE
 29464                           fsr0h	equ	0xFEA
 29465                           fsr0l	equ	0xFE9
 29466                           wreg	equ	0xFE8
 29467                           indf1	equ	0xFE7
 29468                           postinc1	equ	0xFE6
 29469                           postdec1	equ	0xFE5
 29470                           fsr1h	equ	0xFE2
 29471                           fsr1l	equ	0xFE1
 29472                           bsr	equ	0xFE0
 29473                           indf2	equ	0xFDF
 29474                           postinc2	equ	0xFDE
 29475                           postdec2	equ	0xFDD
 29476                           fsr2h	equ	0xFDA
 29477                           fsr2l	equ	0xFD9
 29478                           status	equ	0xFD8
 29479                           
 29480 ;; *************** function i1_PulseEnablePin *****************
 29481 ;; Defined at:
 29482 ;;		line 138 in file "LCD.c"
 29483 ;; Parameters:    Size  Location     Type
 29484 ;;		None
 29485 ;; Auto vars:     Size  Location     Type
 29486 ;;		None
 29487 ;; Return value:  Size  Location     Type
 29488 ;;		None               void
 29489 ;; Registers used:
 29490 ;;		wreg, status,2, status,0, cstack
 29491 ;; Tracked objects:
 29492 ;;		On entry : 0/0
 29493 ;;		On exit  : 0/0
 29494 ;;		Unchanged: 0/0
 29495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29500 ;;Total ram usage:        0 bytes
 29501 ;; Hardware stack levels used:    1
 29502 ;; Hardware stack levels required when called:    2
 29503 ;; This function calls:
 29504 ;;		i1_delayUS
 29505 ;; This function is called by:
 29506 ;;		i1_SendLCDbyte
 29507 ;; This function uses a non-reentrant model
 29508 ;;
 29509                           
 29510                           	psect	text84
 29511  016B7C                     __ptext84:
 29512                           	opt stack 0
 29513  016B7C                     i1_PulseEnablePin:
 29514                           	opt stack 18
 29515                           
 29516                           ;LCD.c: 141: LATD |= (0b10000000);
 29517                           
 29518                           ;incstack = 0
 29519  016B7C  8E8C               	bsf	3980,7,c	;volatile
 29520                           
 29521                           ;LCD.c: 142: delayUS(2500);
 29522  016B7E  0EC4               	movlw	196
 29523  016B80  6E01               	movwf	i1delayUS@US,c
 29524  016B82  0E09               	movlw	9
 29525  016B84  6E02               	movwf	i1delayUS@US+1,c
 29526  016B86  0E00               	movlw	0
 29527  016B88  6E03               	movwf	i1delayUS@US+2,c
 29528  016B8A  0E00               	movlw	0
 29529  016B8C  6E04               	movwf	i1delayUS@US+3,c
 29530  016B8E  EC6C  F0B4         	call	i1_delayUS	;wreg free
 29531                           
 29532                           ;LCD.c: 144: LATD &= ~(0b10000000);
 29533  016B92  9E8C               	bcf	3980,7,c	;volatile
 29534                           
 29535                           ;LCD.c: 145: delayUS(2500);
 29536  016B94  0EC4               	movlw	196
 29537  016B96  6E01               	movwf	i1delayUS@US,c
 29538  016B98  0E09               	movlw	9
 29539  016B9A  6E02               	movwf	i1delayUS@US+1,c
 29540  016B9C  0E00               	movlw	0
 29541  016B9E  6E03               	movwf	i1delayUS@US+2,c
 29542  016BA0  0E00               	movlw	0
 29543  016BA2  6E04               	movwf	i1delayUS@US+3,c
 29544  016BA4  EC6C  F0B4         	call	i1_delayUS	;wreg free
 29545  016BA8  0012               	return	
 29546  016BAA                     __end_ofi1_PulseEnablePin:
 29547                           	opt stack 0
 29548                           pclatu	equ	0xFFB
 29549                           pclath	equ	0xFFA
 29550                           tblptru	equ	0xFF8
 29551                           tblptrh	equ	0xFF7
 29552                           tblptrl	equ	0xFF6
 29553                           tablat	equ	0xFF5
 29554                           prodh	equ	0xFF4
 29555                           prodl	equ	0xFF3
 29556                           intcon	equ	0xFF2
 29557                           postinc0	equ	0xFEE
 29558                           fsr0h	equ	0xFEA
 29559                           fsr0l	equ	0xFE9
 29560                           wreg	equ	0xFE8
 29561                           indf1	equ	0xFE7
 29562                           postinc1	equ	0xFE6
 29563                           postdec1	equ	0xFE5
 29564                           fsr1h	equ	0xFE2
 29565                           fsr1l	equ	0xFE1
 29566                           bsr	equ	0xFE0
 29567                           indf2	equ	0xFDF
 29568                           postinc2	equ	0xFDE
 29569                           postdec2	equ	0xFDD
 29570                           fsr2h	equ	0xFDA
 29571                           fsr2l	equ	0xFD9
 29572                           status	equ	0xFD8
 29573                           
 29574 ;; *************** function i1_delayUS *****************
 29575 ;; Defined at:
 29576 ;;		line 30 in file "MISC.c"
 29577 ;; Parameters:    Size  Location     Type
 29578 ;;  US              4    0[COMRAM] long 
 29579 ;; Auto vars:     Size  Location     Type
 29580 ;;  delayUS         4    5[COMRAM] long 
 29581 ;;  delayUS         1    9[COMRAM] unsigned char 
 29582 ;; Return value:  Size  Location     Type
 29583 ;;		None               void
 29584 ;; Registers used:
 29585 ;;		wreg, status,2, status,0
 29586 ;; Tracked objects:
 29587 ;;		On entry : 0/0
 29588 ;;		On exit  : 0/0
 29589 ;;		Unchanged: 0/0
 29590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29592 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29594 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29595 ;;Total ram usage:       10 bytes
 29596 ;; Hardware stack levels used:    1
 29597 ;; Hardware stack levels required when called:    1
 29598 ;; This function calls:
 29599 ;;		Nothing
 29600 ;; This function is called by:
 29601 ;;		i1_SendLCDbyte
 29602 ;;		i1_PulseEnablePin
 29603 ;; This function uses a non-reentrant model
 29604 ;;
 29605                           
 29606                           	psect	text85
 29607  0168D8                     __ptext85:
 29608                           	opt stack 0
 29609  0168D8                     i1_delayUS:
 29610                           	opt stack 19
 29611                           
 29612                           ;MISC.c: 32: long i;
 29613                           ;MISC.c: 33: unsigned char j;
 29614                           ;MISC.c: 34: for(i=0;i<US;i+=31)
 29615                           
 29616                           ;incstack = 0
 29617  0168D8  0E00               	movlw	0
 29618  0168DA  6E06               	movwf	i1delayUS@i,c
 29619  0168DC  0E00               	movlw	0
 29620  0168DE  6E07               	movwf	i1delayUS@i+1,c
 29621  0168E0  0E00               	movlw	0
 29622  0168E2  6E08               	movwf	i1delayUS@i+2,c
 29623  0168E4  0E00               	movlw	0
 29624  0168E6  6E09               	movwf	i1delayUS@i+3,c
 29625  0168E8  D00E               	goto	i1l201
 29626  0168EA                     i1l9236:
 29627                           
 29628                           ;MISC.c: 35: {
 29629                           ;MISC.c: 36: for(j=0;j<41;j++)
 29630  0168EA  0E00               	movlw	0
 29631  0168EC  6E0A               	movwf	i1delayUS@j,c
 29632  0168EE  D002               	goto	L39
 29633  0168F0                     i1l203:
 29634                           
 29635                           ;MISC.c: 37: {
 29636                           ;MISC.c: 38: __nop();
 29637  0168F0  F000               	nop	
 29638  0168F2  2A0A               	incf	i1delayUS@j,f,c
 29639  0168F4                     L39:
 29640  0168F4  0E28               	movlw	40
 29641  0168F6  640A               	cpfsgt	i1delayUS@j,c
 29642  0168F8  D7FB               	goto	i1l203
 29643  0168FA  0E1F               	movlw	31
 29644  0168FC  2606               	addwf	i1delayUS@i,f,c
 29645  0168FE  0E00               	movlw	0
 29646  016900  2207               	addwfc	i1delayUS@i+1,f,c
 29647  016902  2208               	addwfc	i1delayUS@i+2,f,c
 29648  016904  2209               	addwfc	i1delayUS@i+3,f,c
 29649  016906                     i1l201:
 29650  016906  5009               	movf	i1delayUS@i+3,w,c
 29651  016908  0A80               	xorlw	128
 29652  01690A  6E05               	movwf	??i1_delayUS& (0+255),c
 29653  01690C  5001               	movf	i1delayUS@US,w,c
 29654  01690E  5C06               	subwf	i1delayUS@i,w,c
 29655  016910  5002               	movf	i1delayUS@US+1,w,c
 29656  016912  5807               	subwfb	i1delayUS@i+1,w,c
 29657  016914  5003               	movf	i1delayUS@US+2,w,c
 29658  016916  5808               	subwfb	i1delayUS@i+2,w,c
 29659  016918  5004               	movf	i1delayUS@US+3,w,c
 29660  01691A  0A80               	xorlw	128
 29661  01691C  5805               	subwfb	??i1_delayUS& (0+255),w,c
 29662  01691E  B0D8               	btfsc	status,0,c
 29663  016920  0012               	return	
 29664  016922  D7E3               	goto	i1l9236
 29665  016924                     __end_ofi1_delayUS:
 29666                           	opt stack 0
 29667                           pclatu	equ	0xFFB
 29668                           pclath	equ	0xFFA
 29669                           tblptru	equ	0xFF8
 29670                           tblptrh	equ	0xFF7
 29671                           tblptrl	equ	0xFF6
 29672                           tablat	equ	0xFF5
 29673                           prodh	equ	0xFF4
 29674                           prodl	equ	0xFF3
 29675                           intcon	equ	0xFF2
 29676                           postinc0	equ	0xFEE
 29677                           fsr0h	equ	0xFEA
 29678                           fsr0l	equ	0xFE9
 29679                           wreg	equ	0xFE8
 29680                           indf1	equ	0xFE7
 29681                           postinc1	equ	0xFE6
 29682                           postdec1	equ	0xFE5
 29683                           fsr1h	equ	0xFE2
 29684                           fsr1l	equ	0xFE1
 29685                           bsr	equ	0xFE0
 29686                           indf2	equ	0xFDF
 29687                           postinc2	equ	0xFDE
 29688                           postdec2	equ	0xFDD
 29689                           fsr2h	equ	0xFDA
 29690                           fsr2l	equ	0xFD9
 29691                           status	equ	0xFD8
 29692                           
 29693 ;; *************** function i1_BufferCopy *****************
 29694 ;; Defined at:
 29695 ;;		line 52 in file "MISC.c"
 29696 ;; Parameters:    Size  Location     Type
 29697 ;;  from            2    8[COMRAM] PTR unsigned char 
 29698 ;;		 -> STR_275(5), STR_274(5), STR_273(10), STR_272(16), 
 29699 ;;		 -> STR_271(11), STR_270(12), STR_269(9), STR_268(14), 
 29700 ;;		 -> STR_251(6), STR_250(9), STR_249(14), STR_233(4), 
 29701 ;;		 -> STR_232(5), STR_231(8), STR_230(10), STR_229(9), 
 29702 ;;		 -> STR_198(2), STR_197(10), STR_196(9), STR_177(10), 
 29703 ;;		 -> STR_176(10), STR_175(13), STR_160(10), STR_159(10), 
 29704 ;;		 -> STR_158(17), STR_138(6), STR_137(6), STR_136(9), 
 29705 ;;		 -> STR_135(10), STR_110(7), STR_109(4), STR_108(6), 
 29706 ;;		 -> STR_107(9), STR_106(13), STR_75(4), STR_74(6), 
 29707 ;;		 -> STR_73(9), STR_72(14), STR_50(5), STR_49(5), 
 29708 ;;		 -> STR_48(9), STR_47(9), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 29709 ;;		 -> low_isr@TEMP_Rxdata(100), 
 29710 ;;  to              2   10[COMRAM] PTR unsigned char 
 29711 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 29712 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 29713 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 29714 ;;  count           1   12[COMRAM] unsigned char 
 29715 ;;  shift           1   13[COMRAM] unsigned char 
 29716 ;; Auto vars:     Size  Location     Type
 29717 ;;  BufferCopy      1   14[COMRAM] unsigned char 
 29718 ;; Return value:  Size  Location     Type
 29719 ;;		None               void
 29720 ;; Registers used:
 29721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29722 ;; Tracked objects:
 29723 ;;		On entry : 0/0
 29724 ;;		On exit  : 0/0
 29725 ;;		Unchanged: 0/0
 29726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29727 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29730 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29731 ;;Total ram usage:        7 bytes
 29732 ;; Hardware stack levels used:    1
 29733 ;; Hardware stack levels required when called:    2
 29734 ;; This function calls:
 29735 ;;		i1_cleanBuffer
 29736 ;; This function is called by:
 29737 ;;		_low_isr
 29738 ;; This function uses a non-reentrant model
 29739 ;;
 29740                           
 29741                           	psect	text86
 29742  015C00                     __ptext86:
 29743                           	opt stack 0
 29744  015C00                     i1_BufferCopy:
 29745                           	opt stack 20
 29746                           
 29747                           ;MISC.c: 54: unsigned char i=0;
 29748                           
 29749                           ;incstack = 0
 29750  015C00  0E00               	movlw	0
 29751  015C02  6E0F               	movwf	i1BufferCopy@i,c
 29752                           
 29753                           ;MISC.c: 55: cleanBuffer(to,count);
 29754  015C04  C00C  F002         	movff	i1BufferCopy@to+1,i1cleanBuffer@data+1
 29755  015C08  C00B  F001         	movff	i1BufferCopy@to,i1cleanBuffer@data
 29756  015C0C  C00D  F003         	movff	i1BufferCopy@count,i1cleanBuffer@count
 29757  015C10  6A04               	clrf	i1cleanBuffer@count+1,c
 29758  015C12  ECF4  F0B4         	call	i1_cleanBuffer	;wreg free
 29759                           
 29760                           ;MISC.c: 56: for(i = shift; i>0;i--)
 29761  015C16  C00E  F00F         	movff	i1BufferCopy@shift,i1BufferCopy@i
 29762  015C1A  D009               	goto	L41
 29763  015C1C                     i1l11854:
 29764                           
 29765                           ;MISC.c: 57: {
 29766                           ;MISC.c: 58: *to = ' ';
 29767  015C1C  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 29768  015C20  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 29769  015C24  0E20               	movlw	32
 29770  015C26  6EDF               	movwf	indf2,c
 29771                           
 29772                           ;MISC.c: 59: to++;
 29773  015C28  4A0B               	infsnz	i1BufferCopy@to,f,c
 29774  015C2A  2A0C               	incf	i1BufferCopy@to+1,f,c
 29775  015C2C  060F               	decf	i1BufferCopy@i,f,c
 29776  015C2E                     L41:
 29777  015C2E  660F               	tstfsz	i1BufferCopy@i,c
 29778  015C30  D7F5               	goto	i1l11854
 29779  015C32  D01B               	goto	L40
 29780  015C34                     i1l11862:
 29781                           
 29782                           ;MISC.c: 62: {
 29783                           ;MISC.c: 63: *to = *from;
 29784  015C34  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 29785  015C38  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 29786  015C3C  0E00               	movlw	low (__mediumconst shr (0+16))
 29787  015C3E  6EF8               	movwf	tblptru,c
 29788  015C40  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 29789  015C44  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 29790  015C48  0E0C               	movlw	(high __ramtop+-1)
 29791  015C4A  64F7               	cpfsgt	tblptrh,c
 29792  015C4C  D003               	bra	i1u1520_27
 29793  015C4E  0008               	tblrd		*
 29794  015C50  50F5               	movf	tablat,w,c
 29795  015C52  D005               	bra	i1u1520_20
 29796  015C54                     i1u1520_27:
 29797  015C54  CFF6 FFE1          	movff	tblptrl,fsr1l
 29798  015C58  CFF7 FFE2          	movff	tblptrh,fsr1h
 29799  015C5C  50E7               	movf	indf1,w,c
 29800  015C5E                     i1u1520_20:
 29801  015C5E  6EDF               	movwf	indf2,c
 29802                           
 29803                           ;MISC.c: 64: from++;
 29804  015C60  4A09               	infsnz	i1BufferCopy@from,f,c
 29805  015C62  2A0A               	incf	i1BufferCopy@from+1,f,c
 29806                           
 29807                           ;MISC.c: 65: to++;
 29808  015C64  4A0B               	infsnz	i1BufferCopy@to,f,c
 29809  015C66  2A0C               	incf	i1BufferCopy@to+1,f,c
 29810                           
 29811                           ;MISC.c: 66: count--;
 29812  015C68  060D               	decf	i1BufferCopy@count,f,c
 29813  015C6A                     L40:
 29814  015C6A  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 29815  015C6E  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 29816  015C72  0E00               	movlw	low (__mediumconst shr (0+16))
 29817  015C74  6EF8               	movwf	tblptru,c
 29818  015C76  0E0C               	movlw	(high __ramtop+-1)
 29819  015C78  64F7               	cpfsgt	tblptrh,c
 29820  015C7A  D003               	bra	i1u1521_27
 29821  015C7C  0008               	tblrd		*
 29822  015C7E  50F5               	movf	tablat,w,c
 29823  015C80  D005               	bra	i1u1521_20
 29824  015C82                     i1u1521_27:
 29825  015C82  CFF6 FFE1          	movff	tblptrl,fsr1l
 29826  015C86  CFF7 FFE2          	movff	tblptrh,fsr1h
 29827  015C8A  50E7               	movf	indf1,w,c
 29828  015C8C                     i1u1521_20:
 29829  015C8C  0900               	iorlw	0
 29830  015C8E  B4D8               	btfsc	status,2,c
 29831  015C90  0012               	return	
 29832  015C92  660D               	tstfsz	i1BufferCopy@count,c
 29833  015C94  D7CF               	goto	i1l11862
 29834  015C96  0012               	return	
 29835  015C98                     __end_ofi1_BufferCopy:
 29836                           	opt stack 0
 29837                           pclatu	equ	0xFFB
 29838                           pclath	equ	0xFFA
 29839                           tblptru	equ	0xFF8
 29840                           tblptrh	equ	0xFF7
 29841                           tblptrl	equ	0xFF6
 29842                           tablat	equ	0xFF5
 29843                           prodh	equ	0xFF4
 29844                           prodl	equ	0xFF3
 29845                           intcon	equ	0xFF2
 29846                           postinc0	equ	0xFEE
 29847                           fsr0h	equ	0xFEA
 29848                           fsr0l	equ	0xFE9
 29849                           wreg	equ	0xFE8
 29850                           indf1	equ	0xFE7
 29851                           postinc1	equ	0xFE6
 29852                           postdec1	equ	0xFE5
 29853                           fsr1h	equ	0xFE2
 29854                           fsr1l	equ	0xFE1
 29855                           bsr	equ	0xFE0
 29856                           indf2	equ	0xFDF
 29857                           postinc2	equ	0xFDE
 29858                           postdec2	equ	0xFDD
 29859                           fsr2h	equ	0xFDA
 29860                           fsr2l	equ	0xFD9
 29861                           status	equ	0xFD8
 29862                           
 29863 ;; *************** function i1_cleanBuffer *****************
 29864 ;; Defined at:
 29865 ;;		line 43 in file "MISC.c"
 29866 ;; Parameters:    Size  Location     Type
 29867 ;;  data            2    0[COMRAM] PTR unsigned char 
 29868 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 29869 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 29870 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 29871 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 29872 ;;  count           2    2[COMRAM] int 
 29873 ;; Auto vars:     Size  Location     Type
 29874 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 29875 ;; Return value:  Size  Location     Type
 29876 ;;		None               void
 29877 ;; Registers used:
 29878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29879 ;; Tracked objects:
 29880 ;;		On entry : 0/0
 29881 ;;		On exit  : 0/0
 29882 ;;		Unchanged: 0/0
 29883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29886 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29887 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29888 ;;Total ram usage:        8 bytes
 29889 ;; Hardware stack levels used:    1
 29890 ;; Hardware stack levels required when called:    1
 29891 ;; This function calls:
 29892 ;;		Nothing
 29893 ;; This function is called by:
 29894 ;;		_low_isr
 29895 ;;		i1_BufferCopy
 29896 ;; This function uses a non-reentrant model
 29897 ;;
 29898                           
 29899                           	psect	text87
 29900  0169E8                     __ptext87:
 29901                           	opt stack 0
 29902  0169E8                     i1_cleanBuffer:
 29903                           	opt stack 21
 29904                           
 29905                           ;MISC.c: 45: unsigned char i=0;
 29906                           
 29907                           ;incstack = 0
 29908  0169E8  0E00               	movlw	0
 29909  0169EA  6E08               	movwf	i1cleanBuffer@i,c
 29910                           
 29911                           ;MISC.c: 46: for(i=0; i<count;i++)
 29912  0169EC  0E00               	movlw	0
 29913  0169EE  6E08               	movwf	i1cleanBuffer@i,c
 29914  0169F0  D00B               	goto	i1l10934
 29915  0169F2                     i1l10930:
 29916                           
 29917                           ;MISC.c: 47: {
 29918                           ;MISC.c: 48: data[i]= 0;
 29919  0169F2  5008               	movf	i1cleanBuffer@i,w,c
 29920  0169F4  0D01               	mullw	1
 29921  0169F6  50F3               	movf	prodl,w,c
 29922  0169F8  2401               	addwf	i1cleanBuffer@data,w,c
 29923  0169FA  6ED9               	movwf	fsr2l,c
 29924  0169FC  50F4               	movf	prodh,w,c
 29925  0169FE  2002               	addwfc	i1cleanBuffer@data+1,w,c
 29926  016A00  6EDA               	movwf	fsr2h,c
 29927  016A02  0E00               	movlw	0
 29928  016A04  6EDF               	movwf	indf2,c
 29929  016A06  2A08               	incf	i1cleanBuffer@i,f,c
 29930  016A08                     i1l10934:
 29931  016A08  5008               	movf	i1cleanBuffer@i,w,c
 29932  016A0A  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 29933  016A0C  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 29934  016A0E  5006               	movf	??i1_cleanBuffer+1,w,c
 29935  016A10  0A80               	xorlw	128
 29936  016A12  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 29937  016A14  5003               	movf	i1cleanBuffer@count,w,c
 29938  016A16  5C05               	subwf	??i1_cleanBuffer,w,c
 29939  016A18  5004               	movf	i1cleanBuffer@count+1,w,c
 29940  016A1A  0A80               	xorlw	128
 29941  016A1C  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 29942  016A1E  B0D8               	btfsc	status,0,c
 29943  016A20  0012               	return	
 29944  016A22  D7E7               	goto	i1l10930
 29945  016A24                     __end_ofi1_cleanBuffer:
 29946                           	opt stack 0
 29947                           pclatu	equ	0xFFB
 29948                           pclath	equ	0xFFA
 29949                           tblptru	equ	0xFF8
 29950                           tblptrh	equ	0xFF7
 29951                           tblptrl	equ	0xFF6
 29952                           tablat	equ	0xFF5
 29953                           prodh	equ	0xFF4
 29954                           prodl	equ	0xFF3
 29955                           intcon	equ	0xFF2
 29956                           postinc0	equ	0xFEE
 29957                           fsr0h	equ	0xFEA
 29958                           fsr0l	equ	0xFE9
 29959                           wreg	equ	0xFE8
 29960                           indf1	equ	0xFE7
 29961                           postinc1	equ	0xFE6
 29962                           postdec1	equ	0xFE5
 29963                           fsr1h	equ	0xFE2
 29964                           fsr1l	equ	0xFE1
 29965                           bsr	equ	0xFE0
 29966                           indf2	equ	0xFDF
 29967                           postinc2	equ	0xFDE
 29968                           postdec2	equ	0xFDD
 29969                           fsr2h	equ	0xFDA
 29970                           fsr2l	equ	0xFD9
 29971                           status	equ	0xFD8
 29972                           
 29973 ;; *************** function _high_isr *****************
 29974 ;; Defined at:
 29975 ;;		line 34 in file "interrupts.c"
 29976 ;; Parameters:    Size  Location     Type
 29977 ;;		None
 29978 ;; Auto vars:     Size  Location     Type
 29979 ;;		None
 29980 ;; Return value:  Size  Location     Type
 29981 ;;		None               void
 29982 ;; Registers used:
 29983 ;;		None
 29984 ;; Tracked objects:
 29985 ;;		On entry : 0/0
 29986 ;;		On exit  : 0/0
 29987 ;;		Unchanged: 0/0
 29988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29991 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 29992 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 29993 ;;Total ram usage:       14 bytes
 29994 ;; Hardware stack levels used:    1
 29995 ;; This function calls:
 29996 ;;		Nothing
 29997 ;; This function is called by:
 29998 ;;		Interrupt level 2
 29999 ;; This function uses a non-reentrant model
 30000 ;;
 30001                           
 30002                           	psect	intcode
 30003  000008                     __pintcode:
 30004                           	opt stack 0
 30005  000008                     _high_isr:
 30006                           	opt stack 18
 30007                           
 30008                           ;incstack = 0
 30009  000008  CFFA F16D          	movff	pclath,??_high_isr
 30010  00000C  CFFB F16E          	movff	pclatu,??_high_isr+1
 30011  000010  CFE9 F16F          	movff	fsr0l,??_high_isr+2
 30012  000014  EF09  F0B3         	goto	int_func
 30013                           pclatu	equ	0xFFB
 30014                           pclath	equ	0xFFA
 30015                           tblptru	equ	0xFF8
 30016                           tblptrh	equ	0xFF7
 30017                           tblptrl	equ	0xFF6
 30018                           tablat	equ	0xFF5
 30019                           prodh	equ	0xFF4
 30020                           prodl	equ	0xFF3
 30021                           intcon	equ	0xFF2
 30022                           postinc0	equ	0xFEE
 30023                           fsr0h	equ	0xFEA
 30024                           fsr0l	equ	0xFE9
 30025                           wreg	equ	0xFE8
 30026                           indf1	equ	0xFE7
 30027                           postinc1	equ	0xFE6
 30028                           postdec1	equ	0xFE5
 30029                           fsr1h	equ	0xFE2
 30030                           fsr1l	equ	0xFE1
 30031                           bsr	equ	0xFE0
 30032                           indf2	equ	0xFDF
 30033                           postinc2	equ	0xFDE
 30034                           postdec2	equ	0xFDD
 30035                           fsr2h	equ	0xFDA
 30036                           fsr2l	equ	0xFD9
 30037                           status	equ	0xFD8
 30038                           
 30039                           	psect	intcode_body
 30040  016612                     __pintcode_body:
 30041                           	opt stack 18
 30042  016612                     int_func:
 30043                           	opt stack 18
 30044  016612  CFEA F170          	movff	fsr0h,??_high_isr+3
 30045  016616  CFE1 F171          	movff	fsr1l,??_high_isr+4
 30046  01661A  CFE2 F172          	movff	fsr1h,??_high_isr+5
 30047  01661E  CFD9 F173          	movff	fsr2l,??_high_isr+6
 30048  016622  CFDA F174          	movff	fsr2h,??_high_isr+7
 30049  016626  CFF3 F175          	movff	prodl,??_high_isr+8
 30050  01662A  CFF4 F176          	movff	prodh,??_high_isr+9
 30051  01662E  CFF6 F177          	movff	tblptrl,??_high_isr+10
 30052  016632  CFF7 F178          	movff	tblptrh,??_high_isr+11
 30053  016636  CFF8 F179          	movff	tblptru,??_high_isr+12
 30054  01663A  CFF5 F17A          	movff	tablat,??_high_isr+13
 30055  01663E  C17A  FFF5         	movff	??_high_isr+13,tablat
 30056  016642  C179  FFF8         	movff	??_high_isr+12,tblptru
 30057  016646  C178  FFF7         	movff	??_high_isr+11,tblptrh
 30058  01664A  C177  FFF6         	movff	??_high_isr+10,tblptrl
 30059  01664E  C176  FFF4         	movff	??_high_isr+9,prodh
 30060  016652  C175  FFF3         	movff	??_high_isr+8,prodl
 30061  016656  C174  FFDA         	movff	??_high_isr+7,fsr2h
 30062  01665A  C173  FFD9         	movff	??_high_isr+6,fsr2l
 30063  01665E  C172  FFE2         	movff	??_high_isr+5,fsr1h
 30064  016662  C171  FFE1         	movff	??_high_isr+4,fsr1l
 30065  016666  C170  FFEA         	movff	??_high_isr+3,fsr0h
 30066  01666A  C16F  FFE9         	movff	??_high_isr+2,fsr0l
 30067  01666E  C16E  FFFB         	movff	??_high_isr+1,pclatu
 30068  016672  C16D  FFFA         	movff	??_high_isr,pclath
 30069  016676  0011               	retfie		f
 30070  016678                     __end_of_high_isr:
 30071                           	opt stack 0
 30072                           pclatu	equ	0xFFB
 30073                           pclath	equ	0xFFA
 30074                           tblptru	equ	0xFF8
 30075                           tblptrh	equ	0xFF7
 30076                           tblptrl	equ	0xFF6
 30077                           tablat	equ	0xFF5
 30078                           prodh	equ	0xFF4
 30079                           prodl	equ	0xFF3
 30080                           intcon	equ	0xFF2
 30081                           postinc0	equ	0xFEE
 30082                           fsr0h	equ	0xFEA
 30083                           fsr0l	equ	0xFE9
 30084                           wreg	equ	0xFE8
 30085                           indf1	equ	0xFE7
 30086                           postinc1	equ	0xFE6
 30087                           postdec1	equ	0xFE5
 30088                           fsr1h	equ	0xFE2
 30089                           fsr1l	equ	0xFE1
 30090                           bsr	equ	0xFE0
 30091                           indf2	equ	0xFDF
 30092                           postinc2	equ	0xFDE
 30093                           postdec2	equ	0xFDD
 30094                           fsr2h	equ	0xFDA
 30095                           fsr2l	equ	0xFD9
 30096                           status	equ	0xFD8
 30097                           pclatu	equ	0xFFB
 30098                           pclath	equ	0xFFA
 30099                           tblptru	equ	0xFF8
 30100                           tblptrh	equ	0xFF7
 30101                           tblptrl	equ	0xFF6
 30102                           tablat	equ	0xFF5
 30103                           prodh	equ	0xFF4
 30104                           prodl	equ	0xFF3
 30105                           intcon	equ	0xFF2
 30106                           postinc0	equ	0xFEE
 30107                           fsr0h	equ	0xFEA
 30108                           fsr0l	equ	0xFE9
 30109                           wreg	equ	0xFE8
 30110                           indf1	equ	0xFE7
 30111                           postinc1	equ	0xFE6
 30112                           postdec1	equ	0xFE5
 30113                           fsr1h	equ	0xFE2
 30114                           fsr1l	equ	0xFE1
 30115                           bsr	equ	0xFE0
 30116                           indf2	equ	0xFDF
 30117                           postinc2	equ	0xFDE
 30118                           postdec2	equ	0xFDD
 30119                           fsr2h	equ	0xFDA
 30120                           fsr2l	equ	0xFD9
 30121                           status	equ	0xFD8
 30122                           
 30123                           	psect	param1
 30124  0000                     pclatu	equ	0xFFB
 30125                           pclath	equ	0xFFA
 30126                           tblptru	equ	0xFF8
 30127                           tblptrh	equ	0xFF7
 30128                           tblptrl	equ	0xFF6
 30129                           tablat	equ	0xFF5
 30130                           prodh	equ	0xFF4
 30131                           prodl	equ	0xFF3
 30132                           intcon	equ	0xFF2
 30133                           postinc0	equ	0xFEE
 30134                           fsr0h	equ	0xFEA
 30135                           fsr0l	equ	0xFE9
 30136                           wreg	equ	0xFE8
 30137                           indf1	equ	0xFE7
 30138                           postinc1	equ	0xFE6
 30139                           postdec1	equ	0xFE5
 30140                           fsr1h	equ	0xFE2
 30141                           fsr1l	equ	0xFE1
 30142                           bsr	equ	0xFE0
 30143                           indf2	equ	0xFDF
 30144                           postinc2	equ	0xFDE
 30145                           postdec2	equ	0xFDD
 30146                           fsr2h	equ	0xFDA
 30147                           fsr2l	equ	0xFD9
 30148                           status	equ	0xFD8


Data Sizes:
    Strings     3886
    Constant    322
    Data        4
    BSS         474
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      70
    BANK0           160    120     153
    BANK1           256     91     204
    BANK2           256    103     103
    BANK3           256      0     200
    BANK4           256      0     100
    BANK5           256    214     214
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          239      0       0

Pointer List with Targets:

    sprintf$2220	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_286(CODE[17]), STR_285(CODE[17]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_284(CODE[32]), STR_283(CODE[35]), STR_282(CODE[35]), STR_267(CODE[23]), 
		 -> STR_266(CODE[23]), STR_208(CODE[23]), STR_207(CODE[23]), STR_203(CODE[16]), 
		 -> STR_202(CODE[36]), STR_190(CODE[13]), STR_189(CODE[20]), STR_188(CODE[17]), 
		 -> STR_187(CODE[29]), STR_171(CODE[15]), STR_170(CODE[32]), STR_152(CODE[15]), 
		 -> STR_151(CODE[22]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK5[200]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2200$_cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    Multiple_I2C_Read@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    I2C_Read_Sequential@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    Parse_Time@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    SprintDate@ReturnBuf	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK5[200]), 

    LCD_Scroll@This	PTR unsigned char  size(2) Largest target is 17
		 -> STR_275(CODE[5]), STR_274(CODE[5]), STR_273(CODE[10]), STR_272(CODE[16]), 
		 -> STR_271(CODE[11]), STR_270(CODE[12]), STR_269(CODE[9]), STR_268(CODE[14]), 
		 -> STR_251(CODE[6]), STR_250(CODE[9]), STR_249(CODE[14]), STR_233(CODE[4]), 
		 -> STR_232(CODE[5]), STR_231(CODE[8]), STR_230(CODE[10]), STR_229(CODE[9]), 
		 -> STR_198(CODE[2]), STR_197(CODE[10]), STR_196(CODE[9]), STR_177(CODE[10]), 
		 -> STR_176(CODE[10]), STR_175(CODE[13]), STR_160(CODE[10]), STR_159(CODE[10]), 
		 -> STR_158(CODE[17]), STR_138(CODE[6]), STR_137(CODE[6]), STR_136(CODE[9]), 
		 -> STR_135(CODE[10]), STR_110(CODE[7]), STR_109(CODE[4]), STR_108(CODE[6]), 
		 -> STR_107(CODE[9]), STR_106(CODE[13]), STR_75(CODE[4]), STR_74(CODE[6]), 
		 -> STR_73(CODE[9]), STR_72(CODE[14]), STR_50(CODE[5]), STR_49(CODE[5]), 
		 -> STR_48(CODE[9]), STR_47(CODE[9]), 

    LCDdisplayFeedback@Text	PTR unsigned char  size(2) Largest target is 200
		 -> STR_279(CODE[16]), STR_243(CODE[16]), STR_241(CODE[16]), STR_238(CODE[15]), 
		 -> STR_186(CODE[16]), STR_184(CODE[16]), STR_182(CODE[13]), STR_169(CODE[14]), 
		 -> STR_167(CODE[16]), STR_165(CODE[15]), STR_154(CODE[16]), Command@buf(BANK5[200]), 
		 -> STR_150(CODE[14]), STR_148(CODE[16]), STR_146(CODE[15]), STR_128(CODE[13]), 
		 -> STR_126(CODE[15]), STR_122(CODE[14]), STR_118(CODE[16]), STR_105(CODE[16]), 
		 -> STR_97(CODE[16]), STR_95(CODE[16]), STR_92(CODE[15]), STR_89(CODE[15]), 
		 -> STR_86(CODE[14]), STR_83(CODE[16]), STR_71(CODE[16]), STR_64(CODE[16]), 
		 -> STR_62(CODE[15]), STR_59(CODE[14]), STR_56(CODE[16]), STR_40(CODE[12]), 
		 -> STR_38(CODE[9]), STR_35(CODE[8]), STR_32(CODE[13]), STR_29(CODE[9]), 
		 -> STR_26(CODE[8]), STR_23(CODE[13]), 

    LCDPrintString@Text	PTR unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK0[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_279(CODE[16]), STR_277(CODE[17]), 
		 -> STR_264(CODE[10]), STR_243(CODE[16]), STR_241(CODE[16]), STR_238(CODE[15]), 
		 -> STR_210(CODE[17]), STR_206(CODE[17]), STR_186(CODE[16]), STR_184(CODE[16]), 
		 -> STR_182(CODE[13]), STR_169(CODE[14]), STR_167(CODE[16]), STR_165(CODE[15]), 
		 -> STR_154(CODE[16]), Command@buf(BANK5[200]), STR_150(CODE[14]), STR_148(CODE[16]), 
		 -> STR_146(CODE[15]), STR_128(CODE[13]), STR_126(CODE[15]), STR_122(CODE[14]), 
		 -> STR_118(CODE[16]), STR_105(CODE[16]), STR_97(CODE[16]), STR_95(CODE[16]), 
		 -> STR_92(CODE[15]), STR_89(CODE[15]), STR_86(CODE[14]), STR_83(CODE[16]), 
		 -> STR_71(CODE[16]), STR_64(CODE[16]), STR_62(CODE[15]), STR_59(CODE[14]), 
		 -> STR_56(CODE[16]), STR_40(CODE[12]), STR_38(CODE[9]), STR_35(CODE[8]), 
		 -> STR_32(CODE[13]), STR_29(CODE[9]), STR_26(CODE[8]), STR_23(CODE[13]), 
		 -> STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[16]), STR_12(CODE[15]), 
		 -> STR_11(CODE[14]), STR_10(CODE[13]), STR_9(CODE[12]), STR_8(CODE[11]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), low_isr@LCD_TEMP(BANK0[16]), 

    LCDPrintString@c	PTR unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK0[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_279(CODE[16]), STR_277(CODE[17]), 
		 -> STR_264(CODE[10]), STR_243(CODE[16]), STR_241(CODE[16]), STR_238(CODE[15]), 
		 -> STR_210(CODE[17]), STR_206(CODE[17]), STR_186(CODE[16]), STR_184(CODE[16]), 
		 -> STR_182(CODE[13]), STR_169(CODE[14]), STR_167(CODE[16]), STR_165(CODE[15]), 
		 -> STR_154(CODE[16]), Command@buf(BANK5[200]), STR_150(CODE[14]), STR_148(CODE[16]), 
		 -> STR_146(CODE[15]), STR_128(CODE[13]), STR_126(CODE[15]), STR_122(CODE[14]), 
		 -> STR_118(CODE[16]), STR_105(CODE[16]), STR_97(CODE[16]), STR_95(CODE[16]), 
		 -> STR_92(CODE[15]), STR_89(CODE[15]), STR_86(CODE[14]), STR_83(CODE[16]), 
		 -> STR_71(CODE[16]), STR_64(CODE[16]), STR_62(CODE[15]), STR_59(CODE[14]), 
		 -> STR_56(CODE[16]), STR_40(CODE[12]), STR_38(CODE[9]), STR_35(CODE[8]), 
		 -> STR_32(CODE[13]), STR_29(CODE[9]), STR_26(CODE[8]), STR_23(CODE[13]), 
		 -> STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[16]), STR_12(CODE[15]), 
		 -> STR_11(CODE[14]), STR_10(CODE[13]), STR_9(CODE[12]), STR_8(CODE[11]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), low_isr@LCD_TEMP(BANK0[16]), 

    Send_Config2@data	PTR const unsigned char  size(2) Largest target is 16
		 -> SubLightOFF(CODE[16]), SubLightON(CODE[16]), Aux2OFF(CODE[16]), Aux2ON(CODE[16]), 
		 -> BedOFF(CODE[16]), BedON(CODE[16]), AuxOFF(CODE[16]), AuxON(CODE[16]), 
		 -> fanOFF(CODE[16]), fanON(CODE[16]), 

    Send_Config1@data	PTR const unsigned char  size(2) Largest target is 12
		 -> TXdataF(CODE[12]), TXdataE(CODE[12]), TXdataD(CODE[12]), 

    Command@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    UARTstring@data	PTR const unsigned char  size(2) Largest target is 200
		 -> STR_281(CODE[26]), STR_280(CODE[5]), STR_278(CODE[16]), STR_276(CODE[24]), 
		 -> STR_265(CODE[3]), STR_263(CODE[15]), STR_262(CODE[22]), STR_261(CODE[50]), 
		 -> STR_260(CODE[7]), STR_259(CODE[6]), STR_258(CODE[11]), STR_257(CODE[17]), 
		 -> STR_256(CODE[12]), STR_255(CODE[13]), STR_254(CODE[10]), STR_253(CODE[12]), 
		 -> STR_248(CODE[28]), STR_247(CODE[68]), STR_246(CODE[9]), STR_245(CODE[11]), 
		 -> STR_244(CODE[23]), STR_242(CODE[19]), STR_240(CODE[20]), STR_237(CODE[20]), 
		 -> STR_228(CODE[21]), STR_227(CODE[61]), STR_226(CODE[69]), STR_225(CODE[7]), 
		 -> STR_224(CODE[7]), STR_223(CODE[10]), STR_222(CODE[11]), STR_221(CODE[29]), 
		 -> STR_220(CODE[13]), STR_219(CODE[33]), STR_218(CODE[25]), STR_217(CODE[28]), 
		 -> STR_216(CODE[3]), STR_215(CODE[26]), STR_214(CODE[2]), STR_213(CODE[34]), 
		 -> STR_212(CODE[37]), STR_209(CODE[24]), STR_205(CODE[3]), STR_195(CODE[13]), 
		 -> STR_194(CODE[73]), STR_193(CODE[5]), STR_192(CODE[12]), STR_191(CODE[17]), 
		 -> STR_185(CODE[28]), STR_183(CODE[30]), STR_181(CODE[33]), STR_174(CODE[42]), 
		 -> STR_173(CODE[62]), STR_172(CODE[26]), STR_168(CODE[43]), STR_166(CODE[48]), 
		 -> STR_164(CODE[27]), STR_157(CODE[42]), STR_156(CODE[66]), STR_155(CODE[25]), 
		 -> STR_153(CODE[49]), Command@buf(BANK5[200]), STR_149(CODE[33]), STR_147(CODE[38]), 
		 -> STR_145(CODE[27]), STR_144(CODE[28]), STR_134(CODE[37]), STR_133(CODE[68]), 
		 -> STR_132(CODE[18]), STR_131(CODE[15]), STR_130(CODE[11]), STR_129(CODE[28]), 
		 -> STR_127(CODE[18]), STR_125(CODE[32]), STR_121(CODE[31]), STR_117(CODE[38]), 
		 -> STR_104(CODE[24]), STR_103(CODE[68]), STR_102(CODE[10]), STR_101(CODE[6]), 
		 -> STR_100(CODE[8]), STR_99(CODE[11]), STR_98(CODE[21]), STR_96(CODE[16]), 
		 -> STR_94(CODE[19]), STR_91(CODE[18]), STR_88(CODE[16]), STR_85(CODE[15]), 
		 -> STR_82(CODE[22]), STR_70(CODE[27]), STR_69(CODE[68]), STR_68(CODE[7]), 
		 -> STR_67(CODE[8]), STR_66(CODE[11]), STR_65(CODE[24]), STR_63(CODE[19]), 
		 -> STR_61(CODE[19]), STR_58(CODE[18]), STR_55(CODE[25]), STR_46(CODE[17]), 
		 -> STR_45(CODE[68]), STR_44(CODE[8]), STR_43(CODE[7]), STR_42(CODE[11]), 
		 -> STR_41(CODE[17]), STR_39(CODE[12]), STR_37(CODE[9]), STR_34(CODE[8]), 
		 -> STR_31(CODE[13]), STR_28(CODE[9]), STR_25(CODE[8]), STR_22(CODE[13]), 
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[29]), STR_5(CODE[38]), 
		 -> low_isr@TEMP_Rxdata(BANK0[100]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    lowercase@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@address	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    GetEnteredNumber@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StartsWith@That	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_234(CODE[4]), STR_199(CODE[4]), STR_178(CODE[4]), STR_161(CODE[9]), 
		 -> STR_142(CODE[17]), STR_141(CODE[7]), STR_139(CODE[4]), STR_76(CODE[8]), 
		 -> STR_51(CODE[11]), STR_19(CODE[4]), 

    StartsWith@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_235(CODE[2]), STR_211(CODE[4]), STR_204(CODE[5]), STR_201(CODE[8]), 
		 -> STR_200(CODE[2]), STR_180(CODE[2]), STR_179(CODE[2]), STR_163(CODE[2]), 
		 -> STR_162(CODE[2]), STR_143(CODE[2]), STR_140(CODE[2]), STR_124(CODE[5]), 
		 -> STR_123(CODE[6]), STR_120(CODE[4]), STR_119(CODE[6]), STR_116(CODE[2]), 
		 -> STR_115(CODE[6]), STR_114(CODE[2]), STR_113(CODE[10]), STR_112(CODE[6]), 
		 -> STR_111(CODE[6]), STR_79(CODE[4]), STR_78(CODE[6]), STR_77(CODE[2]), 
		 -> STR_52(CODE[2]), STR_20(CODE[2]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_252(CODE[2]), STR_239(CODE[18]), STR_236(CODE[17]), STR_93(CODE[18]), 
		 -> STR_90(CODE[17]), STR_87(CODE[15]), STR_84(CODE[14]), STR_81(CODE[17]), 
		 -> STR_80(CODE[16]), STR_60(CODE[18]), STR_57(CODE[17]), STR_54(CODE[20]), 
		 -> STR_53(CODE[19]), STR_36(CODE[9]), STR_33(CODE[8]), STR_30(CODE[5]), 
		 -> STR_27(CODE[9]), STR_24(CODE[8]), STR_21(CODE[5]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 100
		 -> STR_275(CODE[5]), STR_274(CODE[5]), STR_273(CODE[10]), STR_272(CODE[16]), 
		 -> STR_271(CODE[11]), STR_270(CODE[12]), STR_269(CODE[9]), STR_268(CODE[14]), 
		 -> STR_251(CODE[6]), STR_250(CODE[9]), STR_249(CODE[14]), STR_233(CODE[4]), 
		 -> STR_232(CODE[5]), STR_231(CODE[8]), STR_230(CODE[10]), STR_229(CODE[9]), 
		 -> STR_198(CODE[2]), STR_197(CODE[10]), STR_196(CODE[9]), STR_177(CODE[10]), 
		 -> STR_176(CODE[10]), STR_175(CODE[13]), STR_160(CODE[10]), STR_159(CODE[10]), 
		 -> STR_158(CODE[17]), STR_138(CODE[6]), STR_137(CODE[6]), STR_136(CODE[9]), 
		 -> STR_135(CODE[10]), STR_110(CODE[7]), STR_109(CODE[4]), STR_108(CODE[6]), 
		 -> STR_107(CODE[9]), STR_106(CODE[13]), STR_75(CODE[4]), STR_74(CODE[6]), 
		 -> STR_73(CODE[9]), STR_72(CODE[14]), STR_50(CODE[5]), STR_49(CODE[5]), 
		 -> STR_48(CODE[9]), STR_47(CODE[9]), StringAddEqual@temp(BANK2[100]), RemoveSpaces@That(BANK2[100]), 
		 -> low_isr@TEMP_Rxdata(BANK0[100]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK0[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), Rxdata(BANK3[100]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK0[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), StringAddEqual@temp(BANK2[100]), RemoveSpaces@That(BANK2[100]), 
		 -> Rxdata(BANK3[100]), low_isr@TEMP_Rxdata(BANK0[100]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_LCDPrintString
    i1_UARTstring->i1_WriteUSART
    i1_SetLCDcursor->i1_SendLCDbyte
    i1_LCDPrintString->i1_SendLCDbyte
    i1_LCDPrintChar->i1_SendLCDbyte
    i1_ClearLCD->i1_SendLCDbyte
    i1_SendLCDbyte->i1_delayUS
    i1_PulseEnablePin->i1_delayUS
    i1_BufferCopy->i1_cleanBuffer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Command
    _init_LCD->_SendLCDbyte
    _RTC_INIT->_RTC_TIME_NONMilitary
    _I2C_Read_At_Address->_WriteI2C
    _PWM_init->_SetDuty
    _SetFreq->___aldiv
    ___aldiv->___wmul
    _LCDScreenUpdate->_LCDPrintString
    _LCDPrintChar->_SendLCDbyte
    _InitUART->_OpenUSART
    _InitApp->_delayUS
    _ContrastPWM_init->_SetDuty
    _Command->_SetContrast
    _Command->_SetDuty
    ___lwtoft->___ftpack
    _StringAddEqual->_BufferCopy
    _SprintDate->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _SetDuty->___fttol
    _SetContrast->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lbtoft
    _Send_Config2->_One_Config2
    _Send_Config2->_Zero_Config2
    _Zero_Config2->_delayUS
    _One_Config2->_delayUS
    _Send_Config1->_One_Config1
    _Send_Config1->_Zero_Config1
    _Send_Config1->_f_Config1
    _f_Config1->_delayUS
    _Zero_Config1->_delayUS
    _One_Config1->_delayUS
    _SET_RTC_TIME->_I2C_Write_At_Address
    _SET_RTC_TIME->___awdiv
    _I2C_Write_At_Address->_WriteI2C
    _RemoveSpaces->_BufferCopy
    _READ_RTC_TIME->_I2C_Read_Sequential
    _ResetI2C->_delayUS
    _Init_I2C_Master->_OpenI2C
    _I2C_Read_Sequential->_Multiple_I2C_Read
    _WriteI2C->_IdleI2C
    _Multiple_I2C_Read->_readI2C
    _LCDdisplayFeedback->_LCDPrintString
    _SetLCDcursor->_SendLCDbyte
    _LCDPrintString->_SendLCDbyte
    _ClearLCD->_SendLCDbyte
    _SendLCDbyte->_delayUS
    _PulseEnablePin->_delayUS
    _LCD_Scroll->_BufferCopy
    _BufferCopy->_cleanBuffer
    _InternalADC_Read->_UARTstring
    _UARTstring->_WriteUSART
    _GetEnteredNumber->___wmul

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _Command->_RemoveSpaces
    _Command->_StringAddEqual

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_Command

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  381075
                                             89 BANK1      2     2      0
                           _ClearLCD
                            _Command
                _ConfigureOscillator
                   _ContrastPWM_init
                  _EnableInternalADC
                            _InitApp
                           _InitUART
                    _Init_I2C_Master
                       _LCDPrintChar
                     _LCDPrintString
                    _LCDScreenUpdate
                           _PWM_init
                           _RTC_INIT
                          _ReadUSART
                        _SetContrast
                            _SetDuty
                       _SetLCDcursor
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                           _init_LCD
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             0     0      0   22322
                           _ClearLCD
                     _PulseEnablePin
                        _SendLCDbyte
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _RTC_INIT                                             0     0      0   19327
                   _InternalADC_Read
                   _RTC_Clock_Enable
               _RTC_TIME_NONMilitary
 ---------------------------------------------------------------------------------
 (2) _RTC_TIME_NONMilitary                                 5     5      0    5565
                                             24 BANK1      5     5      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (2) _RTC_Clock_Enable                                     3     3      0    5466
                                             24 BANK1      3     3      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_At_Address                                  3     1      2     384
                                             17 BANK1      3     1      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0   10266
                            _SetDuty
                            _SetFreq
 ---------------------------------------------------------------------------------
 (2) _SetFreq                                              7     5      2    1161
                                             34 BANK1      7     5      2
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     406
                                             20 BANK1     14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCDScreenUpdate                                      4     4      0   42072
                                             32 BANK1      4     4      0
                           _ClearLCD
                       _LCDPrintChar
                     _LCDPrintString
                       _SetLCDcursor
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _LCDPrintChar                                         1     1      0    7806
                                             28 BANK1      1     1      0
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (1) _InitUART                                             7     7      0     394
                                             20 BANK1      7     7      0
                          _OpenUSART
                          _ReadUSART
                          _baudUSART
 ---------------------------------------------------------------------------------
 (2) _baudUSART                                            1     1      0      22
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadUSART                                            1     1      0      23
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     273
                                             14 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0    3386
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _EnableInternalADC                                    2     2      0     254
                                             14 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ContrastPWM_init                                     0     0      0    9105
                            _SetDuty
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Command                                            220   218      2  204940
                                             83 BANK1      6     4      2
                                              0 BANK5    214   214      0
                   _GetEnteredNumber
                   _InternalADC_Read
                     _LCDPrintString
                         _LCD_Scroll
                 _LCDdisplayFeedback
                         _Parse_Time
                      _READ_RTC_TIME
                       _RemoveSpaces
                       _SET_RTC_TIME
                       _Send_Config1
                       _Send_Config2
                        _SetContrast
                            _SetDuty
                       _SetLCDcursor
                         _SprintDate
                         _StartsWith
                     _StringAddEqual
                     _StringContains
                        _StringMatch
                         _UARTstring
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwmod
                           ___lwtoft
                        _cleanBuffer
                            _delayUS
                          _lowercase
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercase                                            4     2      2     415
                                             14 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2198
                                             22 BANK1      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          4     0      4    2631
                                             14 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _StringContains                                       5     1      4    3544
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     107   105      2    9466
                                             29 BANK1      4     2      2
                                              0 BANK2    103   103      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _StartsWith                                           5     1      4    1492
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _SprintDate                                          12     0     12    9544
                                             65 BANK1     12     0     12
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             39    23     16    8198
                                             26 BANK1     39    23     16
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     492
                                             21 BANK1      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     631
                                             14 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetDuty                                             12    12      0    9105
                                             71 BANK1     12    12      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) _SetContrast                                         12    12      0    9173
                                             71 BANK1     12    12      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2068
                                             22 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     631
                                             56 BANK1     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3135
                                             41 BANK1     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3067
                                             26 BANK1     15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2037
                                             14 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) _Send_Config2                                         6     4      2   15838
                                             25 BANK1      6     4      2
                        _One_Config2
                       _Zero_Config2
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config2                                         1     1      0    3448
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config2                                          1     1      0    3448
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _Send_Config1                                         7     5      2   15631
                                             25 BANK1      7     5      2
                        _One_Config1
                       _Zero_Config1
                            _delayUS
                          _f_Config1
 ---------------------------------------------------------------------------------
 (3) _f_Config1                                            1     1      0    3510
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config1                                         1     1      0    3510
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config1                                          1     1      0    3510
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SET_RTC_TIME                                        21    12      9    5098
                                             22 BANK1     21    12      9
               _I2C_Write_At_Address
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1213
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1225
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_At_Address                                 5     3      2    1424
                                             17 BANK1      5     3      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _RemoveSpaces                                       105   103      2    8723
                                             29 BANK1      2     0      2
                                              0 BANK2    103   103      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _READ_RTC_TIME                                        8     8      0    4797
                                             24 BANK1      8     8      0
                _I2C_Read_Sequential
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _ResetI2C                                             0     0      0    3615
                    _Init_I2C_Master
                            _delayUS
 ---------------------------------------------------------------------------------
 (4) _Init_I2C_Master                                      2     2      0     229
                                             16 BANK1      2     2      0
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (5) _OpenI2C                                              2     1      1     127
                                             14 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Sequential                                  5     1      4     607
                                             19 BANK1      5     1      4
                            _IdleI2C
                  _Multiple_I2C_Read
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             2     2      0      31
                                             15 BANK1      2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Multiple_I2C_Read                                    4     1      3     226
                                             15 BANK1      4     1      3
                            _readI2C
 ---------------------------------------------------------------------------------
 (5) _readI2C                                              1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Parse_Time                                          13    11      2    2681
                                             14 BANK1     13    11      2
 ---------------------------------------------------------------------------------
 (2) _LCDdisplayFeedback                                   2     0      2   31378
                                             32 BANK1      2     0      2
                           _ClearLCD
                     _LCDPrintString
                       _SetLCDcursor
 ---------------------------------------------------------------------------------
 (1) _SetLCDcursor                                         3     2      1   10502
                                             28 BANK1      3     2      1
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _LCDPrintString                                       4     2      2   10340
                                             28 BANK1      4     2      2
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _ClearLCD                                             0     0      0    7775
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _SendLCDbyte                                          4     3      1    7775
                                             24 BANK1      4     3      1
                     _PulseEnablePin
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _PulseEnablePin                                       0     0      0    3386
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _delayUS                                             10     6      4    3386
                                             14 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Scroll                                           2     0      2    9114
                                             29 BANK1      2     0      2
                         _BufferCopy
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    6074
                                             22 BANK1      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    2263
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _InternalADC_Read                                     5     3      2    8296
                                             19 BANK1      5     3      2
                         _UARTstring
 ---------------------------------------------------------------------------------
 (1) _UARTstring                                           4     2      2    8234
                                             15 BANK1      4     2      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      31
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetEnteredNumber                                    10     8      2    1352
                                             20 BANK1     10     8      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     622
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                            140   140      0    7972
                                             18 COMRAM    20    20      0
                                              0 BANK0    120   120      0
                       i1_BufferCopy
                         i1_ClearLCD
                     i1_LCDPrintChar
                   i1_LCDPrintString
                        i1_ReadUSART
                     i1_SetLCDcursor
                       i1_UARTstring
                       i1_WriteUSART
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (8) i1_UARTstring                                         4     2      2     334
                                              1 COMRAM     4     2      2
                       i1_WriteUSART
 ---------------------------------------------------------------------------------
 (8) i1_WriteUSART                                         1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_SetLCDcursor                                       3     2      1    1357
                                             14 COMRAM     3     2      1
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_ReadUSART                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_LCDPrintString                                     4     2      2    1315
                                             14 COMRAM     4     2      2
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_LCDPrintChar                                       1     1      0    1181
                                             14 COMRAM     1     1      0
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_ClearLCD                                           0     0      0    1150
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (9) i1_SendLCDbyte                                        4     3      1    1150
                                             10 COMRAM     4     3      1
                   i1_PulseEnablePin
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_PulseEnablePin                                    0     0      0     311
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_delayUS                                          10     6      4     311
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) i1_BufferCopy                                         7     1      6    1164
                                              8 COMRAM     7     1      6
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (8) i1_cleanBuffer                                        8     4      4     413
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           14    14      0       0
                                              0 BANK1     14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCD
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _Command
     _GetEnteredNumber
       ___wmul
     _InternalADC_Read
       _UARTstring
         _WriteUSART
     _LCDPrintString
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCD_Scroll
       _BufferCopy
         _cleanBuffer
     _LCDdisplayFeedback
       _ClearLCD
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _LCDPrintString
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _SetLCDcursor
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
     _Parse_Time
     _READ_RTC_TIME
       _I2C_Read_Sequential
         _IdleI2C
         _Multiple_I2C_Read
           _readI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RemoveSpaces
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _SET_RTC_TIME
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       ___awdiv
       ___awmod
     _Send_Config1
       _One_Config1
         _delayUS
       _Zero_Config1
         _delayUS
       _delayUS
       _f_Config1
         _delayUS
     _Send_Config2
       _One_Config2
         _delayUS
       _Zero_Config2
         _delayUS
       _delayUS
     _SetContrast
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetLCDcursor
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _SprintDate
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _StartsWith
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContains
     _StringMatch
     _UARTstring
       _WriteUSART
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwmod
       ___lwdiv (ARG)
     ___lwtoft
       ___ftpack
     _cleanBuffer
     _delayUS
     _lowercase
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _ConfigureOscillator
   _ContrastPWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
   _EnableInternalADC
   _InitApp
     _delayUS
   _InitUART
     _OpenUSART
     _ReadUSART
     _baudUSART
   _Init_I2C_Master
     _OpenI2C
   _LCDPrintChar
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _LCDPrintString
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _LCDScreenUpdate
     _ClearLCD
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCDPrintChar
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCDPrintString
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _SetLCDcursor
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _cleanBuffer
     _delayUS
   _PWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetFreq
       ___aldiv
         ___wmul (ARG)
       ___wmul
   _RTC_INIT
     _InternalADC_Read
       _UARTstring
         _WriteUSART
     _RTC_Clock_Enable
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RTC_TIME_NONMilitary
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
   _ReadUSART
   _SetContrast
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetDuty
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetLCDcursor
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _UARTstring
     _WriteUSART
   _cleanBuffer
   _delayUS
   _init_LCD
     _ClearLCD
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _PulseEnablePin
       _delayUS
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
     _delayUS

 _low_isr (ROOT)
   i1_BufferCopy
     i1_cleanBuffer
   i1_ClearLCD
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDPrintChar
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDPrintString
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_ReadUSART
   i1_SetLCDcursor
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_UARTstring
     i1_WriteUSART
   i1_WriteUSART
   i1_cleanBuffer

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CEE      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100     D6      D6      16       83.6%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      64      14       39.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100     67      67      10       40.2%
BITBANK1           100      0       0       7        0.0%
BANK1              100     5B      CC       8       79.7%
BITBANK12           EF      0       0      29        0.0%
BANK12              EF      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     78      99       6       95.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      46       1       73.7%
BITSFR_8             0      0       0      40        0.0%
SFR_8                0      0       0      40        0.0%
BITSFR_7             0      0       0      40        0.0%
SFR_7                0      0       0      40        0.0%
BITSFR_6             0      0       0      40        0.0%
SFR_6                0      0       0      40        0.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     414       3        0.0%
DATA                 0      0     414       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Dec 21 01:38:44 2014

                      BufferCopy@shift 0188                      i1LCDPrintString@c 0011  
              __size_of_StringContains 007E                           _Zero_Config1 5DC0  
                         _Zero_Config2 6840                            _SSPSTATbits 000FC7  
                          ?_LCD_Scroll 018A                           ___awdiv@sign 0180  
                                   bsr 000FE0                    ___wmul@multiplicand 017D  
                          __CFG_BORV$3 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                           __CFG_CP4$OFF 000000  
                         __CFG_CP5$OFF 000000                                    l201 63C4  
                                  l203 63A2                                    l301 4340  
                                  l513 2450                                    l370 644A  
                                  l371 644C                                    l380 5B66  
                                  l364 6422                                    l533 07DC  
                                  l382 5BBC                                    l518 03CC  
                                  l391 6ADE                                    l368 643C  
                                  l392 6AE6                                    l369 643E  
                                  l389 6AD6                                    l761 65F0  
                                  l922 34BC                                    l974 616E  
                                  l993 3F0A                           __CFG_CPB$OFF 000000  
                                  _PR2 000FCB                           __CFG_CPD$OFF 000000  
                   _TXToiletMyBathroom EF9B                   i1LCDPrintString@Text 000F  
                                  _buf 0300                           ___awmod@sign 0180  
                                  prod 000FF3                                    wreg 000FE8  
                      _LCDScreenUpdate 2F8C                       ??i1_SetLCDcursor 0010  
                       SetContrast@LSB 01BC                         SetContrast@MSB 01BB  
                         i1_WriteUSART 6CCC                          Send_Config1@i 018B  
                        Send_Config2@i 018B                           __CFG_LVP$OFF 000000  
                         ___ftdiv@cntr 0190                        ??i1_SendLCDbyte 000C  
                         ___ftdiv@sign 0195                           __CFG_WDT$OFF 000000  
                                 l1200 4D92                                   l1033 370A  
                                 l1025 365C                                   l1017 359E  
                                 l2001 6376                                   l2011 6730  
                                 l1211 4DFA                                   l1203 4D96  
                                 l1124 5FAC                                   l1212 4DD2  
                                 l1133 5FE6                                   l1141 597A  
                                 l1221 4DE4                                   l1054 392E  
                                 l1046 3880                                   l1038 37C2  
                                 l1302 64EC                                   l1150 59BE  
                                 l1311 652C                                   l1151 59B6  
                                 l1215 4DDA                                   l1207 4DCC  
                                 l1064 39E0                                   l1320 6B18  
                                 l1144 597E                                   l1224 4DE8  
                                 l1208 4DBA                                   l1161 59EE  
                                 l1233 4E10                                   l1242 540E  
                                 l1154 5A00                                   l1218 4DDE  
                                 l1251 543C                                   l1155 59DA  
                                 l1260 54CA                                   l1252 5434  
                                 l1172 5A0C                                   l1156 59D2  
                                 l1261 545E                                   l1245 5412  
                                 l1165 59F8                                   l1149 5A0A  
                                 l1237 4E24                                   l1229 4DFC  
                                 l1181 4D28                                   l1190 4D66  
                                 l1319 6B16                                   l1271 54C0  
                                 l1255 54D4                                   l1175 5A10  
                                 l1159 59F6                                   l1191 4D54  
                                 l1272 54A2                                   l1264 5462  
                                 l1256 5458                                   l1184 4D2C  
                                 l1273 54A6                                   l1257 5450  
                                 l1169 5A02                                   l1441 2CE8  
                                 l1425 2BD6                  RTC_Clock_Enable@Error 0185  
                                 l1282 54B4                                   l1194 4E22  
                                 l1291 54CC                                   l1267 5480  
                                 l1371 26BE                                   l1195 4D8C  
                                 l1276 54AA                                   l1268 5478  
                                 l1196 4D7A                                   l1189 4E36  
                                 l1295 54D6                                   l1287 54C2  
                                 l1279 54B0                                   l1199 4E0E  
                                 l1862 4BAC                                   l7042 6424  
                                 l7034 6412                                   l9000 682E  
                                 l6470 46D2                                   l9024 5540  
                                 l9112 5FF6                                   l6472 46EA  
                                 l6464 46A4                                   l9026 5542  
                                 l9130 64F8                                   l9122 64D8  
                                 l9202 6326                                   l6490 478C  
                                 l6482 474C                                   l6474 46F0  
                                 l6458 465C                                   l9116 5FFA  
                                 l9204 6332                                   l9134 6520  
                                 l9214 6368                                   l9206 6338  
                                 l9230 6722                                   l9222 66EC  
                                 l9310 2476                                   l6486 4766  
                                 l9080 5F82                                   l9224 66F8  
                                 l9152 6BCC                                   l9400 2764  
                                 l9320 24B8                                   l7800 5AA8  
                                 l9138 6530                                   l9170 4F88  
                                 l9226 66FE                                   l9410 27A0  
                                 l9322 24BE                                   l9252 5BC0  
                                 l9068 559E                                   l9260 6A68  
                                 l9180 501A                                   l9172 4F9C  
                                 l9420 27E2                                   l9332 2504  
                                 l9324 24C4                                   l9316 2498  
                                 l7804 5ABA                                   l9270 629A  
                                 l9094 5FBA                                   l9182 502E  
                                 l9174 4FC8                                   l9166 4F74  
                                 l9502 2A20                                   l9414 27B2  
                                 l9406 2784                                   l9430 285C  
                                 l9318 24B2                                   l7806 5ABE  
                                 l9192 5058                                   l9520 2AB4  
                                 l9512 2A6A                                   l9424 2800  
                                 l9416 27C8                                   l9352 25F8  
                                 l9336 252C                                   l9344 25B8  
                                 l9328 24CE                                   l9274 62D0  
                                 l9098 5FBE                                   l9186 503E  
                                 l9178 4FEE                                   l9602 2D44  
                                 l9506 2A3A                                   l9442 28C4  
                                 l9370 268E                                   l9620 2E0E  
                                 l9612 2D9C                                   l9540 2BA6  
                                 l9532 2B56                                   l9452 28FA  
                                 l9428 2808                                   l9364 2658  
                                 l9372 26AC                                   l7780 5A60  
                                 l7772 5A44                                   l9630 2E9C  
                                 l9534 2B62                                   l9526 2AFE  
                                 l9518 2AA8                                   l9446 28E4  
                                 l9390 2734                                   l9374 26B4  
                                 l9366 2660                                   l9296 5796  
                                 l9288 5778                                   l9640 2F10  
                                 l9552 2BEA                                   l9480 2996  
                                 l9384 2700                                   l9376 26BA  
                                 l7792 5A8C                                   l7784 5A6E  
                                 l7776 5A52                                   l7768 5A36  
                                 l9712 4D3E                                   l9802 5A1C  
                                 l9626 2E5C                                   l9618 2DB8  
                                 l9634 2EDE                                   l9562 2C42  
                                 l9538 2B9A                                   l9466 2948  
                                 l9394 273C                                   l9378 26C4  
                                 l9650 2F58                                   l8932 639A  
                                 l9644 2F34                                   l9636 2EFC  
                                 l9580 2C9A                                   l9388 2728  
                                 l9652 2F7E                                   l7796 5A9A  
                                 l7788 5A7C                                   l9732 4DA8  
                                 l9910 4B64                                   l9398 274E  
                                 l9568 2C62                                   l9576 2C8A  
                                 l9496 29E4                                   l9826 541E  
                                 l9930 4954                                   l9586 2CBE  
                                 l9498 2A02                                   l8964 6CE0  
                                 l9596 2D00                                   l8982 6C9C  
                                 l8990 67C4                                   l9766 598A  
                                 l9950 49DC                                   STR_1 FFFD  
                                 l9960 4A26                                   l9936 498E  
                                 STR_2 F9EE                                   STR_3 FFFD  
                                 l8986 67A6                                   l9874 54DE  
                                 l9890 4B04                                   l9954 49FA  
                                 STR_4 F5E5                                   STR_5 F394  
                                 l9980 5350                                   l9884 4ACA  
                                 l9964 4A44                                   STR_6 FF0E  
                                 STR_7 FEA1                                   l8998 6822  
                                 STR_8 FE28                                   STR_9 FDE5  
                                 l9992 5396                                   l9994 53A2  
                                 l9986 5378                                   l9996 53A8  
              EnableInternalADC@config 017B                  ??_I2C_Read_At_Address 0180  
                                 _LATA 000F89                                   _LATC 000F8B  
                                 _LATD 000F8C                                   _LATE 000F8D  
                                 _PIE1 000F9D                                   i1l54 0292  
                                 i1l56 0232                                   u7325 4634  
                                 u7335 467C                           __CFG_PWRT$ON 000000  
                           i1delayUS@i 0006                             i1delayUS@j 000A  
                        ?_LCDPrintChar 0001                                   _main 3A00  
                         ___ftpack@arg 017B                           ___ftpack@exp 017E  
                                 fsr0h 000FEA                                   fsr1h 000FE2  
                                 fsr0l 000FE9                                   fsr2h 000FDA  
                                 indf1 000FE7                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                     ??_PulseEnablePin 0185                    baudUSART@baudconfig 017B  
                                 pclat 000FFA                __end_of_Init_I2C_Master 6840  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 0368                        __end_of_Aux2OFF F01D  
                        __CFG_IESO$OFF 000000                        __end_of_IdleI2C 6CF2  
                    ?_GetEnteredNumber 0181                           _sprintf$2220 01A0  
                         _sprintf$2213 019C                           _sprintf$2214 019E  
           __size_of_Multiple_I2C_Read 006A                          __CFG_MCLRE$ON 000000  
                         ___ftmul@cntr 01A3                        __end_of_Command 2462  
                       UARTstring@data 017C                           ___ftmul@sign 01A4  
                      __end_of_TXdataD F0B9                        __end_of_TXdataE F0C5  
                      __end_of_TXdataF F0D1                        __end_of_InitApp 6798  
                   ??_GetEnteredNumber 0183                        SetContrast@Duty 01BF  
                      __end_of_OpenI2C 6C72               I2C_Write_At_Address@data 017F  
                         ___fttol@exp1 01B3                 __size_of_READ_RTC_TIME 00E6  
                         ___fttol@lval 01AF                        __end_of_SetFreq 64D6  
                      __end_of_SetDuty 568E                        SetContrast@temp 01BD  
                         f_Config1@pin 0185                         _LCDPrintString 628C  
                                l10012 53FA                                  l10004 53D8  
                                l10008 53E6                                  l10040 5726  
                                l10032 56F0                                  l10024 56BC  
                                l10200 61FE                                  l10034 56FC  
                                l10300 45DC                                  l10036 5702  
                                l10044 5734                                  l10028 56DE  
                                l10302 45E2                                  l10222 5CE4  
                                l10048 5748                                  l10080 48A2  
                                l10208 5C9A                                  l10224 5CF0  
                                l10160 624C                                  l10242 448A  
                                l10410 40C8                                  l10090 48E2  
                                l10058 47DE                                  l10218 5CE0  
                                l10308 4604                                  l10260 44E0  
                                l10244 4490                                  l10324 5878  
                                l10076 4886                                  l10236 5D2A  
                                l10164 6250                                  l10156 6212  
                                l10332 5EEC                                  l10340 5F4C  
                                l11140 304C                                  l11124 2FFA  
                                l10254 44CA                                  l10502 65D8  
                                l10430 41E0                                  l10422 4170  
                                l10414 4100                                  l10318 5842  
                                l10326 587E                                  l10094 4908  
                                l10086 48C4                                  l10190 61BE  
                                l10182 6194                                  l10166 625C  
                                l11310 027C                                  l11302 0234  
                                l11062 6C1E                                  l10280 452E  
                                l10248 44AE                                  l10088 48DC  
                                l10352 4324                                  l10176 6288  
                                l11312 02A0                                  l11208 331A  
                                l10290 45B8                                  l10274 4512  
                                l10442 4280                                  l10434 4214  
                                l10426 41A8                                  l10418 4138  
                                l10602 35FA                                  l10354 4346  
                                l10338 5F48                                  l11322 0344  
                                l11218 337E                                  l10268 44FC  
                                l10700 37E0                                  l10620 3658  
                                l10532 5318                                  l10460 50F8  
                                l10452 5078                                  l10364 4378  
                                l10348 42EC                                  l10356 434A  
                                l10196 61D0                                  l11228 33E6  
                                l11148 307E                                  l12036 3A3A  
                                l10294 45C6                                  l10438 4248  
                                l10606 35FE                                  l10534 531C  
                                l10462 5100                                  l10358 4366  
                                l11430 0B22                                  l11406 095C  
                                l11350 054C                                  l11270 0112  
                                l11238 3456                                  l11158 30EE  
                                l11246 34A4                                  l12118 3D46  
                                l10712 3822                                  l10640 36B8  
                                l10632 367A                                  l10616 3648  
                                l10456 50B6                                  l10544 4EA8  
                                l10368 43AC                                  l11168 315E  
                                l12128 3D7A                                  l10722 386C  
                                l10482 604E                                  l10546 4F02  
                                l10378 43D8                                  l11530 11BE  
                                l11506 103C                                  l11418 0A48  
                                l11442 0BFE                                  l11362 0638  
                                l11338 0472                                  l11178 31CE  
                                l10708 381E                                  l10644 36BC  
                                l10628 3676                                  l10564 353C  
                                l10556 34FE                                  l10484 6056  
                                l10388 4442                                  l11700 1C0A  
                                l11612 161A                                  l11604 15A4  
                                l11540 1242                                  l11508 1060  
                                l11444 0C22                                  l11364 065C  
                                l11188 323E                                  l10750 38E0  
                                l10734 389A                                  l10726 387C  
                                l10670 3760                                  l10662 3722  
                                l10654 3706                                  l10590 35B8  
                                l10582 359A                                  l10830 3E1C  
                                l10478 6010                                  l11622 16A4  
                                l11526 118C                                  l11518 1104  
                                l11462 0D5C                                  l11382 0798  
                                l11374 0710                                  l11294 01EC  
                                l11286 01A2                                  l11278 015A  
                                l11198 32AE                                  l10808 39DC  
                                l10760 392A                                  l10568 3540  
                                l10840 3E86                                  l11720 1CC8  
                                l11704 1C2C                                  l11712 1C5A  
                                l11544 127C                                  l11536 120C  
                                l11456 0CF6                                  l10920 6176  
                                l10746 38DC                                  l10738 389E  
                                l10674 3764                                  l10594 35BC  
                                l10578 358A                                  l11634 1760  
                                l11626 16DA                                  l11618 166A  
                                l11650 1820                                  l11554 1300  
                                l11394 0882                                  l12098 3CF0  
                                l10780 3970                                  l10684 37AE  
                                l11812 22F6                                  l11740 1DB2  
                                l11572 13FE                                  l11556 1324  
                                l11564 1388                                  l11492 0F52  
                                l11814 2348                                  l11742 1DC4  
                                l11582 1482                                  l11478 0E68  
                                l10792 399E                                  l10776 396C  
                                l10768 3946                                  l10696 37DC  
                                l10688 37BE                                  l11840 2416  
                                l11736 1D7E                                  l11680 1AC4  
                                l10858 3F2E                                  l11834 23EA  
                                l11842 2430                                  l11770 1FC4  
                                l11738 1D90                                  l11754 1E96  
                                l11658 18A4                                  l11586 14BC  
                                l11578 144C                                  l10788 399A  
                                l10796 39A2                                  l10868 3F98  
                                l11596 1540                                  l10878 4002  
                                l11782 20AE                                  l10888 406C  
                                l11784 20D0                                  l11792 2152  
                                l11698 1BB8                        __end_of___aldiv 479E  
                                ?_main 0001                 __size_ofi1_cleanBuffer 003C  
                      __end_of___awdiv 5404                            ?i1_ClearLCD 0001  
                                STR_10 FDA8                                  STR_11 FD18  
                                STR_20 FAA6                                  STR_12 FC8B  
                                STR_21 FFBE                                  STR_13 FBB8  
                                STR_30 FFC8                                  STR_22 FD74  
                                STR_14 FA67                                  STR_23 FD74  
                                STR_15 FE97                                  STR_31 FD81  
                                STR_40 FACC                                  STR_32 FD81  
                                STR_24 FF3F                                  STR_16 F5CA  
                                STR_17 F5E3                                  STR_33 FF47  
                                STR_25 FF2F                                  STR_41 F99B  
                                STR_18 F15B                                  STR_26 FF2F  
                                STR_50 FFC3                                  STR_34 FF37  
                                STR_42 FDF1                                  STR_19 FF85  
                                STR_35 FF37                                  STR_43 FF74  
                                STR_27 FED8                                  STR_51 FE1D  
                                STR_52 FAA6                                  STR_44 FF17  
                                STR_36 FEE1                                  STR_28 FEC6  
                                STR_60 F90E                        __end_of___awmod 5752  
                                STR_29 FEC6                                  STR_37 FECF  
                                STR_53 F8D7                                  STR_61 F8B1  
                                STR_45 F15F                                  STR_38 FECF  
                                STR_62 FC13                                  STR_46 F9CE  
                                STR_54 F863                                  STR_70 F68E  
                                STR_39 FACC                                  STR_47 FF05  
                                STR_71 FBA8                                  STR_63 F88B  
                                STR_55 F729                                  STR_48 FEB4  
                                STR_72 FD0A                                  STR_80 FB98  
                                STR_56 FB08                                  STR_64 FA98  
                                STR_73 FEB4                                  STR_49 FFB9  
                                STR_57 FA12                                  STR_81 F9F0  
                                STR_65 F742                                  STR_66 FDF1  
                                STR_74 FFA8                                  STR_90 FA23  
                                STR_58 F944                                  STR_82 F7FB  
                                STR_75 FFED                                  STR_67 FF1F  
                                STR_59 FCD2                                  STR_83 FB18  
                                STR_91 F956                                  STR_68 FF66  
                                STR_76 FF27                                  STR_84 FCEE  
                                STR_92 FC40                                  STR_69 F15F  
                                STR_77 FAA6                                  STR_85 FC4F  
                                STR_93 F920                                  STR_78 FFAE  
                                STR_86 FCE0                                  STR_94 F8C4  
                                STR_79 FFF1                                  STR_87 FC31  
                                STR_95 FB58                                  STR_88 FB68  
                                STR_96 FAA8                                  STR_97 FAA8  
                                STR_89 FC22                                  STR_98 F811  
                                STR_99 FDF1                        __end_of___ftdiv 4BE8  
                                u11210 5B8C                        __end_of___ftmul 4A90  
                                u11230 5BB8                                  u11310 6300  
                                u11217 5B82                                  u11250 5BF8  
                      ___awdiv@divisor 017D                                  u11237 5BAE  
                                u11317 62F6                                  u11350 57C4  
                                u11360 57FC                                  u11257 5BEE  
                                u11290 62C6                                  u11357 57BA  
                      __end_of___fttol 491A                                  u11367 57F2  
                                _T2CON 000FCA                                  u11297 62BC  
                                u12701 496C                                  u15021 1B0A  
                                u14055 3E90                                  u12631 4AA8  
                                u12651 4AE2                                  u15071 1D06  
                                u12681 4932                                  u15161 2264  
                                u15091 1D46                                  u12861 47B6  
                                u12880 480A                                  u12885 4800  
                      __end_of___lwdiv 6380                                  i1l201 6906  
                                i1l203 68F0                        __end_of___lwmod 673A  
                                i1l380 6088                                  i1l382 60D6  
                                i1l391 6B6C                                  i1l392 6B74  
                                i1l389 6B64                        ___awdiv@counter 017F  
                                _RCREG 000FAE                                  _RCSTA 000FAB  
                                _SPBRG 000FAF                             _BufferCopy 5752  
                                _BedON F05D                                  _TXREG 000FAD  
                                _TXSTA 000FAC                          ??_One_Config1 0185  
                        ??_One_Config2 0185                    _ConfigureOscillator 6D2A  
                      __end_of_delayUS 63F6                       _InternalADC_Read 65AA  
                                _AuxON F03D                          __CFG_WRT0$OFF 000000  
                          i1delayUS@US 0001                          __CFG_WRT1$OFF 000000  
                        __CFG_WRT2$OFF 000000                          __CFG_WRT3$OFF 000000  
                        __CFG_WRT4$OFF 000000                          __CFG_WRT5$OFF 000000  
                       __CFG_EBTR0$OFF 000000                         __CFG_FCMEN$OFF 000000  
                       __CFG_EBTR1$OFF 000000                         __CFG_EBTR2$OFF 000000  
                       __CFG_EBTR3$OFF 000000                         __CFG_EBTR4$OFF 000000  
                       __CFG_EBTR5$OFF 000000                           InitUART@temp 0182  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                                  _fanON F09D  
                      __end_of_readI2C 6B20                         __CFG_EBTRB$OFF 000000  
                      __end_of_dpowers F005                       __end_of_RTC_INIT 6D02  
                      __end_of_isdigit 6BD6                          ___ftpack@sign 017F  
                     Command@ADC_Value 05C8                         ??_LCDPrintChar 0189  
                        ??_SendLCDbyte 0186                        __end_of_low_isr 0368  
          I2C_Read_At_Address@Register 017E                                  tablat 000FF5  
                        ?_SetLCDcursor 0189                    __size_of_LCD_Scroll 0248  
                     __end_of_PWM_init 6C28                            ?_UARTstring 017C  
              InternalADC_Read@channel 0184                                  status 000FD8  
                      __end_of_sprintf 2F8C                       __end_of_ClearLCD 6C8C  
                 __size_of_cleanBuffer 0058                         __CFG_PBADEN$ON 000000  
                 ?_ConfigureOscillator 0001                     StringContains@That 017D  
                   StringContains@This 017B                     __size_ofi1_delayUS 004C  
                       WriteUSART@data 017B                             SetDuty@LSB 01BD  
                           SetDuty@MSB 01BC                        __initialization 6678  
                   StringAddEqual@temp 0200                    _I2C_Read_Sequential 5404  
                         __end_of_main 3DAC                       __end_of_InitUART 5970  
                        ??_SetContrast 01B4                 __end_of_LCDPrintString 6308  
                       __CFG_OSC$HSPLL 000000                __end_of_LCDScreenUpdate 34D6  
            __size_of_ContrastPWM_init 000C                          _LCDclearCount 01C8  
                               ??_main 01C6                          ___fttol@sign1 01AE  
                       SetDuty@tempPR2 01B9                        Send_Config1@pin 018C  
                      Send_Config2@pin 018A                       __end_of_ResetI2C 6C00  
                      SendLCDbyte@data 0186                          __activetblptr 000003  
               Multiple_I2C_Read@rdptr 017C                             _Parse_Time 34D6  
                      low_isr@LCD_TEMP 00C4                   ?_I2C_Read_Sequential 0180  
                       _StringAddEqual 42B8                                 _ADCON0 000FC2  
                               _ADCON1 000FC1                                 _ADCON2 000FC0  
                               STR_100 FF1F                                 STR_101 FF96  
                               STR_110 FF89                                 STR_102 FE33  
                               STR_103 F15F                                 STR_111 FFA2  
                               STR_200 FAA6                                 STR_120 FF43  
                               STR_112 FF9C                                 STR_104 F772  
                               STR_201 FF57                                 STR_113 FE79  
                               STR_105 FAB8                                 STR_121 F553  
                               STR_130 FDF1                                 STR_114 FAA6  
                               STR_106 FD9B                                 STR_122 FCC4  
                               STR_210 FA01                                 STR_202 F404  
                               _ADRESH 000FC4                                 STR_107 FEB4  
                               STR_123 FF9C                                 STR_115 FFA2  
                               STR_211 FFF9                                 STR_131 FBD7  
                               STR_203 FB28                                 STR_116 FD58  
                               STR_140 FAA6                                 STR_124 FEDC  
                               STR_108 FFA8                                 STR_204 FFDC  
                               STR_220 FD40                                 STR_132 F8EA  
                               STR_212 F3DF                                 STR_205 F7E2  
                               STR_133 F15F                                 STR_109 FFED  
                               STR_141 FF82                                 STR_221 F590  
                               STR_125 F533                                 STR_213 F46E  
                               STR_117 F36E                                 STR_230 FE65  
                               STR_214 F5E5                                 STR_222 FDFC  
                               STR_150 FCA8                                 STR_126 FC04  
                               STR_118 FAF8                                 STR_142 FA45  
                               STR_206 F9DF                                 STR_134 F3BA  
                               _ADRESL 000FC3                                 STR_143 FD58  
                               STR_119 FF9C                                 STR_231 FF4F  
                               STR_135 FE83                                 STR_223 FE47  
                               STR_127 F8FC                                 STR_151 F7E5  
                               STR_207 F7B8                                 STR_215 F6DD  
                   _LCDdisplayFeedback 696A                                 STR_216 F7E2  
                               STR_136 FEB4                                 STR_232 FFD7  
                               STR_224 FF7B                                 STR_160 FE51  
                               STR_128 FD5A                                 STR_152 FBF5  
                               STR_240 F84F                                 STR_208 F7A1  
                               STR_144 F61F                                 STR_137 FF9C  
                               STR_233 FFF5                                 STR_225 FF6D  
                               STR_161 FEEA                                 STR_241 FB78  
                               STR_209 F75A                                 STR_145 F673  
                               STR_217 F657                                 STR_129 F5E7  
                               STR_153 F292                                 STR_250 FEB4  
                               STR_162 FAA6                                 STR_138 FFA2  
                               STR_234 FFE9                                 STR_146 FC7C  
                               STR_154 FAC8                                 STR_242 F89E  
                               STR_218 F710                                 STR_170 F513  
                               STR_226 F11A                                 STR_163 FD58  
                               STR_235 FAA6                                 STR_139 F5C6  
                               STR_251 FFA8                                 STR_171 FBE6  
                               STR_243 FAD8                                 STR_155 F6F7  
                               STR_219 F4B1                                 STR_147 F348  
                               STR_227 F223                                 STR_164 F673  
                               STR_180 FD58                                 STR_252 FAA6  
                               STR_260 FF5F                                 STR_148 FA88  
                               STR_236 FA34                                 STR_228 F826  
                               STR_244 F78A                                 STR_172 F6C3  
                               STR_156 F1A3                                 STR_245 FDF1  
                               STR_229 FEFC                                 STR_253 FDB5  
                               STR_165 FC6D                                 STR_237 F877  
                               STR_181 F4D2                                 STR_149 F490  
                               STR_157 F31E                                 STR_261 F260  
                               STR_173 F1E5                                 STR_174 F31E  
                               STR_246 FEAB                                 STR_254 FE3D  
                               STR_270 FDD9                                 STR_190 FD67  
                               STR_182 FD4D                                 STR_238 FC5E  
                               STR_158 FA56                                 STR_262 F7CF  
                               STR_166 F2C3                                 STR_247 F15F  
                               STR_159 FE65                                 STR_271 FE12  
                               STR_175 FD8E                                 STR_255 FD33  
                               STR_263 FBC8                                 STR_167 FA78  
                               STR_191 F98A                                 STR_239 F932  
                               STR_183 F572                                 STR_280 F7E0  
                               STR_176 FE65                                 STR_264 FE8D  
                               STR_256 FDCD                                 STR_192 FDC1  
                               STR_184 FB88                                 STR_272 FAE8  
                               STR_248 F63B                                 STR_168 F2F3  
                               STR_265 F7E2                                 STR_193 FFB4  
                               STR_273 FE6F                                 STR_177 FE5B  
                               STR_249 FCFC                                 STR_169 FC9A  
                               STR_257 F9BD                                 STR_281 F6A9  
                               STR_185 F603                                 STR_266 F7B8  
                               STR_178 FFE1                                 STR_274 FFCD  
                               STR_258 FE07                                 STR_186 FB48  
                               STR_282 F428                                 STR_194 F0D1  
                               STR_179 FAA6                                 STR_267 F7A1  
                               STR_275 FFD2                                 STR_259 FF90  
                               STR_195 FD26                                 STR_187 F5AD  
                               STR_283 F44B                                 STR_276 F75A  
                               STR_196 FEF3                                 STR_268 FCB6  
                               STR_188 F9AC                                 STR_284 F4F3  
                               STR_197 FE65                                 STR_277 FA01  
                               STR_269 FEBD                                 STR_285 F968  
                               STR_189 F83B                                 STR_198 FCA6  
                               STR_278 FB38                                 STR_286 F979  
                               _CCPR1L 000FBE                                 STR_279 FB38  
                               STR_199 FFE5                       ___awdiv@dividend 017B  
                        _READ_RTC_TIME 523C                       __end_of_WriteI2C 5FFE  
                      __CFG_BBSIZ$1024 000000                       __end_of___ftpack 5066  
                     __end_of___lbtoft 6AC0                         ??_SetLCDcursor 018A  
                      _ScrollFIFOCount 010B              __size_ofi1_LCDPrintString 006A  
                          OpenI2C@slew 017B                    __end_of_One_Config1 5EE4  
                  __end_of_One_Config2 68D8                                 i1l9236 68EA  
                     __end_of___lwtoft 6B4E                              ??_IdleI2C 017B  
                   __size_of_ReadUSART 0030                                 _SPBRGH 000FB0  
                        i1_cleanBuffer 69E8                                 _BedOFF F04D  
                               _SSPADD 000FC8                                 _SSPBUF 000FC9  
                            ??_Command 01C2                    ?_LCDdisplayFeedback 018D  
                               _Aux2ON F01D                              ??_InitApp 0185  
                ??_ConfigureOscillator 017B                    __size_ofi1_ClearLCD 0016  
                               _AuxOFF F02D                       ?_Init_I2C_Master 0001  
 Command@RTC_Battery_Value_LOW_decimal 05CE                              ??_OpenI2C 017C  
                            ??_SetFreq 0191                              ??_SetDuty 01B4  
                  __end_of_SendLCDbyte 55BC                         __CFG_XINST$OFF 000000  
                        InitUART@spbrg 0184                       __end_of_high_isr 6678  
                               _Rxdata 0364                     __size_of_OpenUSART 0074  
                       _StringContains 6192                             _SubLightON F07D  
                               _Txdata 0400                                 _fanOFF F08D  
                            ??___aldiv 0189                        Command@contrast 05D0  
                               ___wmul 6A24                              ??___awdiv 017F  
             __end_ofi1_PulseEnablePin 6BAA                         __CFG_STVREN$ON 000000  
                            ??___awmod 017F                              ??___ftdiv 018D  
                            ??___ftmul 019C                              ??___fttol 01A9  
                      ?_LCDPrintString 0189                              ??___lwdiv 017F  
                     __end_of_init_LCD 4D1E                              ??___lwmod 0186  
                         ?i1_ReadUSART 0001                                 clear_0 667E  
                               clear_1 668A                                 clear_2 6696  
                               clear_3 66A2                                 clear_4 66AE  
                     ___awdiv@quotient 0181                              ??_delayUS 017F  
                      ___awmod@divisor 017D                        ___awmod@counter 017F  
        __size_of_I2C_Write_At_Address 00B0                                 main@ii 01C6  
                  SprintDate@ReturnBuf 01AE                   ??_LCDdisplayFeedback 018F  
                ___ftmul@f3_as_product 01A0                              ??_readI2C 017B  
                  __size_of_UARTstring 009A                          ?_Send_Config1 0186  
                        ?_Send_Config2 0186                        __CFG_BOREN$BOHW 000000  
                          ?_BufferCopy 0183                    __end_of_SetContrast 523C  
                            ??_isdigit 017B                  ??_I2C_Read_Sequential 0184  
               __end_of_StringAddEqual 4470                           __mediumconst EF8E  
                    __end_ofi1_delayUS 6924                              ??_low_isr 0013  
                      Zero_Config1@pin 0185                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                      Zero_Config2@pin 0185                         ?_READ_RTC_TIME 0001  
                            ??_sprintf 0197                     __size_of_f_Config1 0092  
                           _StartsWith 5C98                         ?i1_cleanBuffer 0001  
                           _SprintDate 4E42                            SetFreq@freq 018F  
                           __accesstop 0060                __end_of__initialization 66D4  
                          SetFreq@temp 0195                    StringAddEqual@Input 018A  
                           ___ftdiv@f1 0187                             ___ftdiv@f2 018A  
                           ___ftdiv@f3 0191                 __end_of_StringContains 6210  
                   __size_of_baudUSART 000A                          __end_of_BedON F06D  
                           ___lbtoft@c 0186                            SetDuty@Duty 01B8  
                           ___ftmul@f1 0196                             ___ftmul@f2 0199  
                        __end_of_AuxON F04D                             ___fttol@f1 01A5  
            __size_of_RTC_Clock_Enable 0046                             _WriteUSART 6C8C  
                       __pcstackCOMRAM 0001                            SetDuty@temp 01BE  
                         __pidataBANK1 6D26                          __end_of_fanON F0AD  
                         ??_LCD_Scroll 018C                     InitUART@baudconfig 0186  
                            ?_RTC_INIT 0001                   __end_of_LCDPrintChar 6CCC  
                     ?_LCDScreenUpdate 0001                      __end_of_ReadUSART 6AF0  
                        ?i1_UARTstring 0002                             ___lwtoft@c 0183  
                       ??_Send_Config1 0188                         ??_Send_Config2 0188  
                  __end_of_SubLightOFF F07D                              ?_PWM_init 0001  
                   LCDPrintString@Text 0189                            ?_Parse_Time 017B  
                            ?_ClearLCD 0001                        ?_StringAddEqual 018A  
                          _One_Config1 5E52                            _One_Config2 688C  
                        ?_RemoveSpaces 018A                          ReadUSART@data 017B  
                       One_Config1@pin 0185                         One_Config2@pin 0185  
                    __end_of_OpenUSART 646A                       Send_Config1@data 0186  
                     Send_Config2@data 0186                           sprintf@width 01A5  
                           __pbssBANK0 00D8                             __pbssBANK1 0100  
                           __pbssBANK3 0300                             __pbssBANK4 0400  
                            ?_InitUART 0001                            _SendLCDbyte 54E2  
                  SET_RTC_TIME@SetTime 0183            RTC_Clock_Enable@tempSeconds 0186  
              Multiple_I2C_Read@length 017E                     __end_of_LCD_Scroll 42B8  
                        ??_StringMatch 017F                    SetLCDcursor@address 018B  
                            ?_ResetI2C 0001                        ?_StringContains 017B  
          __end_of_TXdataBedroomCLOSED EFB3               __end_of_InternalADC_Read 6612  
                  __size_of_BufferCopy 00B8          __size_of_RTC_TIME_NONMilitary 0082  
          __end_of_TXdataBedroomOPENED EFBF                          RemoveSpaces@i 0266  
                              ?___wmul 017B                      __end_of_f_Config1 5DC0  
                          _SetContrast 5154         I2C_Write_At_Address@I2Caddress 0182  
                           ??_RTC_INIT 018A                                _CCP1CON 000FBD  
                              _BAUDCON 000FB8                   __end_of_SetLCDcursor 6A8E  
                     _ContrastPWM_init 6D10                                _ECCPR1L 000FBB  
                       ??i1_UARTstring 0004                              ?_WriteI2C 0001  
                            ?___ftpack 017B                              ?___lbtoft 0183  
                   __size_of_lowercase 008E                           ??i1_ClearLCD 000F  
                            ?___lwtoft 0183                             ??_PWM_init 01C0  
                              i1l11000 5B50                                i1l11008 6CDA  
                              i1l12004 031C                                i1l12008 0320  
                              i1l10930 69F2                                i1l11900 6578  
                              i1l10934 6A08                                i1l10956 5B0A  
                              i1l11932 00D2                                i1l11862 5C34  
                              i1l11854 5C1C                                i1l10958 5B0C  
                              i1l11950 014A                                i1l11928 00C0  
                              i1l11960 01B6                                i1l11970 01F0  
                              i1l11884 6C32                                i1l11878 60DA  
                              i1l11966 01D0                                i1l11896 654A  
                              i1l11992 02C6                                i1l11994 02EA  
                              i1l11978 021E              __size_of_GetEnteredNumber 019E  
                       ??_RemoveSpaces 018C                             ??_ClearLCD 0189  
             Command@RTC_Battery_Value 05CA                         StartsWith@That 017D  
                       StartsWith@This 017B                       i1UARTstring@data 0002  
          __end_of_I2C_Read_At_Address 4E42                                _LCDwait 0109  
                      ??_READ_RTC_TIME 0185                      __end_of_baudUSART 6D26  
                  Init_I2C_Master@baud 017D                         lowercase@Input 017B  
                              _SSPCON1 000FC6                                _SSPCON2 000FC5  
                      ??i1_cleanBuffer 0005                              ?_high_isr 0001  
                              _SSPSTAT 000FC7                            ?_StartsWith 017B  
                     i1_LCDPrintString 6540               GetEnteredNumber@negative 0188  
                           ??_InitUART 0181                                _Aux2OFF F00D  
                          ?_SprintDate 01AE                  __end_ofi1_SendLCDbyte 5B66  
                              _IdleI2C 6CE0                              ?_init_LCD 0001  
                         ??_UARTstring 017E                                _Command 0000  
                              _TXdataD F0AD                                _TXdataE F0B9  
                              _TXdataF F0C5                                _InitApp 673A  
                        ?i1_BufferCopy 0009                        SetLCDcursor@Col 0189  
              __size_ofi1_LCDPrintChar 000E                             ??_ResetI2C 0185  
                              _OpenI2C 6C4E                        SetLCDcursor@Row 018A  
                   __end_ofi1_ClearLCD 6CB8                         InitUART@config 0187  
                              __Hparam 0000                                _SetFreq 646A  
                              _SetDuty 55BC                                __Lparam 0000  
                              _NowTime 0100                          ?_SET_RTC_TIME 0183  
                  __size_of_Parse_Time 052A                            ?_WriteUSART 0001  
                    i1cleanBuffer@data 0001                                ___aldiv 460E  
                          _SubLightOFF F06D                                ___awdiv 5322  
                              ___awmod 568E                                ___ftdiv 4A90  
                  __end_of_StringMatch 628C                        __size_of___wmul 0036  
                              ___ftmul 491A                                ___fttol 479E  
                              ___lwdiv 6308                                ___lwmod 66DA  
                      LCDPrintString@c 018B                                __pcinit 6678  
                           ??_WriteI2C 017C                                _delayUS 6380  
                           ??___ftpack 0180                             ??___lbtoft 0186  
                              __ramtop 0D00                                __ptext0 3A00  
                              __ptext1 4BE8                                __ptext2 6CF2  
                              __ptext3 6110                                __ptext4 6924  
                              __ptext5 4D1E                                __ptext6 6C00  
                              __ptext7 646A                                __ptext8 460E  
                              __ptext9 2F8C                             ??___lwtoft 0186  
                              _readI2C 6AF0                   __size_ofi1_ReadUSART 002E  
                    __end_of_hexpowers F00D                i1SendLCDbyte@LSB_nibble 000E  
                              _dpowers EFFB                       i1WriteUSART@data 0001  
                   __end_of_UARTstring 5C00                                _isdigit 6BAA  
                     ___awmod@dividend 017B                       ___aldiv@dividend 0181  
                              _low_isr 0018                i1SendLCDbyte@MSB_nibble 000D  
                              _sprintf 2462                             ??_high_isr 016D  
                       __pintcode_body 6612                   end_of_initialization 66D4  
                    __end_of_octpowers EFFB                          ??_cleanBuffer 017F  
                           ??_init_LCD 0189                        i1ReadUSART@data 0001  
                    __end_of_lowercase 5F72                                int_func 6612  
                            i1u1520_20 5C5E                              i1u1520_27 5C54  
                            i1u1521_20 5C8C                              i1u1521_27 5C82  
                            i1u1532_20 6570                              i1u1524_20 60AA  
                            i1u1532_27 6566                              i1u1524_27 60A0  
                            i1u1534_20 65A2                              i1u1526_20 60D2  
                            i1u1534_27 6598                              i1u1526_27 60C8  
                            i1u1528_20 6108                              i1u1528_27 60FE  
                       ??i1_BufferCopy 000F                   __end_of_Send_Config1 5154  
                 __end_of_Send_Config2 6088                   GetEnteredNumber@This 0181  
              __size_ofi1_SetLCDcursor 0026                       ??_LCDPrintString 018B  
                       ??_SET_RTC_TIME 018C                   GetEnteredNumber@temp 0189  
        I2C_Read_Sequential@I2Caddress 0184                       _RTC_Clock_Enable 6924  
                __size_of_LCDPrintChar 0014                              _RCSTAbits 000FAB  
                     ___aldiv@quotient 018B                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc1 000FE6                                postinc2 000FDE  
                        i1BufferCopy@i 000F                      ?i1_PulseEnablePin 0001  
                   Parse_Time@TempTime 017F                __size_of_PulseEnablePin 003E  
                  __size_of_StartsWith 0096                     ??i1_PulseEnablePin 000B  
              i1LCDPrintChar@character 000F                    __size_of_SprintDate 011A  
                         ??_BufferCopy 0189                              _TRISAbits 000F92  
                            _TRISCbits 000F94                              _TRISDbits 000F95  
                            _TRISEbits 000F96                         BufferCopy@from 0183  
                   low_isr@TEMP_Rxdata 0060                    __size_of_WriteUSART 0016  
          __end_of_ConfigureOscillator 6D2C                              i1_delayUS 68D8  
         __end_of_I2C_Write_At_Address 5A20                           _LCDPrintChar 6CB8  
                 __end_ofi1_UARTstring 6110                            ___ftdiv@exp 0194  
                            _TXSTAbits 000FAC                         __end_of_BedOFF F05D  
                          _StringMatch 6210                    __end_of_cleanBuffer 67F0  
                       __end_of_Aux2ON F02D                   __end_of_RemoveSpaces 58BE  
                       __end_of_AuxOFF F03D                  __size_of_SetLCDcursor 0034  
                   __end_of_BufferCopy 580A                            ___ftmul@exp 019F  
                  RemoveSpaces@address 0264                          ?_Zero_Config1 0001  
                        ?_Zero_Config2 0001                         __end_of_fanOFF F09D  
             __size_of_Init_I2C_Master 0050                         __end_of___wmul 6A5A  
          __end_of_I2C_Read_Sequential 54E2                       ??_StringAddEqual 018C  
                    _EnableInternalADC 5A20                      __size_of_RTC_INIT 0010  
          __size_of_LCDdisplayFeedback 0040                      GetEnteredNumber@i 0187  
                   ?_EnableInternalADC 0001                       _GetEnteredNumber 4470  
                         ??_Parse_Time 017D                    start_initialization 6678  
                         ?_One_Config1 0001                           ?_One_Config2 0001  
                            _ReadUSART 6AC0                  SendLCDbyte@LSB_nibble 0188  
                    __size_of_PWM_init 0028                          ?i1_WriteUSART 0001  
                    __size_of_ClearLCD 001A                       WriteI2C@data_out 017D  
                SendLCDbyte@MSB_nibble 0187                    ??_EnableInternalADC 017B  
                           ?i1_delayUS 0001           __end_of_TXToiletAlexBathroom EF9B  
                         ?_SendLCDbyte 0185                       ??_StringContains 017F  
             __end_of_ContrastPWM_init 6D1C                           _SetLCDcursor 6A5A  
                            _OpenUSART 63F6                      __size_of_InitUART 00B2  
                    i1BufferCopy@count 000D                         i1_LCDPrintChar 6D02  
                    i1BufferCopy@shift 000E                         Command@channel 05D2  
                            _Scroll_10 00D9                     SprintDate@Military 01B9  
            StringAddEqual@firstnumber 0264                      ?_InternalADC_Read 0180  
                   __end_of_Parse_Time 3A00                      __size_of_ResetI2C 002A  
                       ??_Zero_Config1 0185                         ??_Zero_Config2 0185  
                             ??___wmul 017F                     ??_InternalADC_Read 0182  
            __end_of_EnableInternalADC 5AC4                           ?_SetContrast 0001  
                          __pdataBANK1 01C8                       __CFG_LPT1OSC$OFF 000000  
             __end_ofi1_LCDPrintString 65AA                              _f_Config1 5D2E  
                    __size_of_WriteI2C 008C                     SetContrast@tempPR2 01B8  
                    __size_of___ftpack 010A                      __size_of___lbtoft 0032  
                 __end_ofi1_BufferCopy 5C98                  LCDPrintChar@character 0189  
                     cleanBuffer@count 017D           __end_of_RTC_TIME_NONMilitary 6192  
                          __pbssCOMRAM 0027                             ?_ReadUSART 0001  
                    __size_of___lwtoft 002E                         ??i1_WriteUSART 0001  
                        __pcstackBANK0 0060                          __pcstackBANK1 016D  
                        __pcstackBANK2 0200                          __pcstackBANK5 0500  
                 __end_of_SET_RTC_TIME 4070                    __end_of__stringdata FFFF  
             __size_of_LCDScreenUpdate 054A                           _isdigit$2562 017C  
                __size_of_Send_Config1 00EE                  __size_of_Send_Config2 008A  
                         ??_StartsWith 017F                              _baudUSART 6D1C  
                   __end_of_SubLightON F08D                           ??_SprintDate 01BA  
                          _cleanBuffer 6798                               ?_IdleI2C 0001  
               __end_ofi1_LCDPrintChar 6D10                             ?_OpenUSART 017B  
                       LCD_Scroll@This 018A                      __size_of_high_isr 6670  
                          sprintf@_val 01A7                            sprintf@flag 01AC  
                          sprintf@prec 01A4                               ?_Command 01C0  
                       i1_SetLCDcursor 6C28          I2C_Read_At_Address@I2Caddress 0180  
                             ?_InitApp 0001                      __size_of_init_LCD 0136  
                             ?_OpenI2C 017B                               ?_SetFreq 018F  
                             ?_SetDuty 0001                       ___lwdiv@dividend 017B  
                SprintDate@DisplayTime 01B0                           ??_WriteUSART 017B  
                            __pintcode 0008                          __pmediumconst EF8E  
                             ?___aldiv 0181                               ?___awdiv 017B  
                             ?___awmod 017B                        _TXdataLabCLOSED EFD7  
                             ?___ftdiv 0187                               ?___ftmul 0196  
                             ?___fttol 01A5                               ?___lwdiv 017B  
                             ?___lwmod 0182                         _PulseEnablePin 69AA  
                      _TXdataLabOPENED EFE3                            __pintcodelo 0018  
                             ?_delayUS 017B                     __end_of_StartsWith 5D2E  
                 _I2C_Write_At_Address 5970                             ?_f_Config1 0001  
                   __end_of_SprintDate 4F5C                               ?_readI2C 0001  
                     RemoveSpaces@That 0200               I2C_Read_Sequential@rdptr 0181  
                     RemoveSpaces@This 018A                               _ECCP1CON 000FBA  
                         _Send_Config1 5066                           _Send_Config2 5FFE  
                             ?_isdigit 0001                      ??_Init_I2C_Master 017D  
                             ?_low_isr 0001               __end_of_RTC_Clock_Enable 696A  
                            _hexpowers F005                  __end_of_READ_RTC_TIME 5322  
                __size_ofi1_UARTstring 0088                       ___lwdiv@quotient 0180  
                             ?_sprintf 0187                     __end_of_WriteUSART 6CA2  
                           ?_baudUSART 0001                            ??i1_delayUS 0005  
                           lowercase@i 017E                              delayUS@US 017B  
                __end_ofi1_cleanBuffer 6A24                 __end_ofi1_SetLCDcursor 6C4E  
         __size_of_I2C_Read_At_Address 0124                        ___aldiv@divisor 0185  
                      ?i1_LCDPrintChar 0001                         Parse_Time@This 017B  
                __size_of_RemoveSpaces 00B4                        ___aldiv@counter 0189  
                       ___wmul@product 017F                         Parse_Time@temp 017E  
                            _octpowers EFEF                               _IPR1bits 000F9F  
                             _PIE1bits 000F9D                           cleanBuffer@i 0182  
                          _bufferCount 00D8             __end_of_TXToiletMyBathroom EFA7  
                            _lowercase 5EE4                               _PIR1bits 000F9E  
                             _PIR2bits 000FA1                 __end_of_PulseEnablePin 69E8  
                             _RCONbits 000FD0                       __CFG_WDTPS$32768 000000  
           __size_of_EnableInternalADC 00A4                               _RTC_INIT 6CF2  
                        ??i1_ReadUSART 0001                      i1SendLCDbyte@data 000C  
                ?_I2C_Write_At_Address 017E                   _TXToiletAlexBathroom EF8F  
                          __stringdata F0D1                 __size_ofi1_SendLCDbyte 00A2  
                    ___wmul@multiplier 017B                           i1_UARTstring 6088  
                             _PWM_init 6C00              EnableInternalADC@channels 017C  
                            main@count 01C7                               _ClearLCD 6C72  
                          ??_ReadUSART 017B                        StringAddEqual@i 0265  
                      StringAddEqual@j 0266                           _RemoveSpaces 580A  
                 __size_of_One_Config1 0092                   __size_of_One_Config2 004C  
            __size_ofi1_PulseEnablePin 002E                   __end_of_Zero_Config1 5E52  
                 __end_of_Zero_Config2 688C                              copy_data0 66C8  
                             _InitUART 58BE                       OpenI2C@sync_mode 017C  
                      ?i1_SetLCDcursor 000F                            ??_OpenUSART 017D  
                    ??_LCDScreenUpdate 018D                       __size_of_IdleI2C 0012  
                      OpenUSART@config 0180                  i1SetLCDcursor@address 0011  
                 __size_of_SendLCDbyte 00DA                __end_of_TXdataLabCLOSED EFE3  
                             __Hparam1 0000                           ?_StringMatch 017B  
                     __size_of_Command 2462               __end_of_GetEnteredNumber 460E  
                             _ResetI2C 6BD6                       i1BufferCopy@from 0009  
                     __size_of_InitApp 005E                               __Lparam1 0000  
              __end_of_TXdataLabOPENED EFEF                             ?_lowercase 017B  
                     __size_of_OpenI2C 0024                   _RTC_TIME_NONMilitary 6110  
                             _Scroll_1 010D                               _Scroll_2 011D  
                             _Scroll_3 012D                               _Scroll_4 013D  
                             _Scroll_5 014D                               _Scroll_6 015D  
                             _Scroll_7 0027                               _Scroll_8 0037  
                             _Scroll_9 00E9                         i1cleanBuffer@i 0008  
                     __size_of_SetFreq 006C                   __end_ofi1_WriteUSART 6CE0  
                     __size_of_SetDuty 00D2                        ?_PulseEnablePin 0001  
                     __size_of___aldiv 0190                     i1cleanBuffer@count 0003  
                     __size_of___awdiv 00E2                  __size_ofi1_BufferCopy 0098  
                     __size_of___awmod 00C4                       __size_of___ftdiv 0158  
                      cleanBuffer@data 017B                       __size_of___ftmul 0176  
                     __size_of___fttol 017C                       __size_of___lwdiv 0078  
                     __size_of___lwmod 0060            I2C_Read_Sequential@Register 0180  
                             _WriteI2C 5F72                               ___ftpack 4F5C  
                             ___lbtoft 6A8E                  __size_of_SET_RTC_TIME 02C4  
                 __size_of_SetContrast 00E8                       __size_of_delayUS 0076  
                          ??_f_Config1 0185                               ___lwtoft 6B20  
                           sprintf@idx 019B                       __size_of_readI2C 0030  
                    SET_RTC_TIME@Error 0197                    __end_ofi1_ReadUSART 6B7C  
                     __size_of_isdigit 002C                        ___lwdiv@divisor 017D  
                      ___lwdiv@counter 017F                       __size_of_low_isr 0350  
                             __ptext10 6CB8                               __ptext11 58BE  
                             __ptext20 5EE4                               __ptext12 6D1C  
                             __ptext21 6B20                               __ptext13 6AC0  
               LCDdisplayFeedback@Text 018D                               __ptext30 6308  
                             __ptext22 6210                               __ptext14 63F6  
                             __ptext31 55BC                               __ptext23 6192  
                             __ptext15 673A                               __ptext40 688C  
                             __ptext32 5154                               __ptext24 42B8  
                             __ptext16 5A20                               __ptext41 5066  
                             __ptext33 6A8E                               __ptext25 5C98  
                             __ptext17 6D10                               __ptext50 523C  
                             __ptext42 5D2E                               __ptext34 479E  
                             __ptext26 4E42                               __ptext18 6D2A  
                             __ptext51 6BD6                               __ptext43 5DC0  
                             __ptext35 491A                               __ptext27 2462  
                             __ptext19 0000                               __ptext60 696A  
                             __ptext52 67F0                               __ptext44 5E52  
                             __ptext36 4A90                               __ptext28 6BAA  
                             __ptext61 6A5A                               __ptext53 6C4E  
                             __ptext45 3DAC                               __ptext37 4F5C  
                             __ptext29 66DA                               __ptext70 65AA  
                             __ptext62 628C                               __ptext54 5404  
                             __ptext46 568E                               __ptext38 5FFE  
                             __ptext71 5B66                               __ptext63 6C72  
                             __ptext55 5F72                               __ptext47 5322  
                             __ptext39 6840                               __ptext80 6540  
                             __ptext72 6C8C                               __ptext64 54E2  
                             __ptext56 6CE0                               __ptext48 5970  
                             __ptext81 6D02                               __ptext73 4470  
                             __ptext65 69AA                               __ptext57 64D6  
                             __ptext49 580A                     READ_RTC_TIME@Error 018C  
                             __ptext82 6CA2                               __ptext74 6A24  
                             __ptext66 6380                               __ptext58 6AF0  
                             __ptext83 5AC4                               __ptext67 4070  
                             __ptext59 34D6                               __ptext84 6B7C  
                             __ptext76 6088                               __ptext68 5752  
                             __ptext85 68D8                               __ptext77 6CCC  
                             __ptext69 6798                               __ptext86 5C00  
                             __ptext78 6C28                               __ptext87 69E8  
                             __ptext79 6B4E                               _high_isr 0008  
                          ??_baudUSART 017B                       __size_of_sprintf 0B2A  
                            low_isr@rx 00D7                               _init_LCD 4BE8  
                    ?_ContrastPWM_init 0001                          i1_SendLCDbyte 5AC4  
        RTC_TIME_NONMilitary@temphours 0188                          __size_of_main 03AC  
                             delayUS@i 0180                               delayUS@j 0184  
                   ??_ContrastPWM_init 01C0                           i1_BufferCopy 5C00  
         __size_of_ConfigureOscillator 0002                  ?_RTC_TIME_NONMilitary 0001  
                         _SET_RTC_TIME 3DAC                      _Multiple_I2C_Read 64D6  
                         BufferCopy@to 0185                 ??_I2C_Write_At_Address 0180  
                           _LCD_Scroll 4070             __end_of_LCDdisplayFeedback 69AA  
                   ?_Multiple_I2C_Read 017C                      ?i1_LCDPrintString 000F  
              __size_of_LCDPrintString 007C           I2C_Write_At_Address@Register 017E  
                   ??i1_LCDPrintString 0011                           Command@Input 01C0  
                           _INTCONbits 000FF2              __size_of_InternalADC_Read 0068  
                  ??_Multiple_I2C_Read 017F                         OpenUSART@spbrg 017B  
         __size_of_I2C_Read_Sequential 00DE                        StringMatch@That 017D  
                      StringMatch@This 017B                               isdigit@c 017D  
Command@RTC_Battery_Value_HIGH_decimal 05CC                               intlevel1 0000  
                             intlevel2 0000                 i1SendLCDbyte@isCommand 000B  
                            sprintf@ap 01A2                              sprintf@sp 0187  
                         ?_cleanBuffer 017B                         ?i1_SendLCDbyte 000B  
                  _TXdataBedroomCLOSED EFA7                       ___lwmod@dividend 0182  
                     SET_RTC_TIME@temp 0190                      _TXdataFrontCLOSED EFBF  
                  _TXdataBedroomOPENED EFB3                      READ_RTC_TIME@temp 0185  
                             low_isr@i 00D4                               low_isr@j 00D6  
                    _TXdataFrontOPENED EFCB                            ??_lowercase 017D  
            __end_of_Multiple_I2C_Read 6540                            BufferCopy@i 0189  
                      _Init_I2C_Master 67F0                            i1_ReadUSART 6B4E  
                  _I2C_Read_At_Address 4D1E                         i1BufferCopy@to 000B  
                          Command@duty 05D4                             i1_ClearLCD 6CA2  
                             sprintf@c 01AB                               sprintf@f 0189  
            RTC_TIME_NONMilitary@Error 0186                  __size_of_Zero_Config1 0092  
                __size_of_Zero_Config2 004C                        ___lwmod@divisor 0184  
                      ___lwmod@counter 0186                           ___aldiv@sign 018A  
            I2C_Read_Sequential@length 0183                            _SSPCON1bits 000FC6  
                     ??i1_LCDPrintChar 000F                            _SSPCON2bits 000FC5  
                _ScrollDisplayPosition 010A                      ?_RTC_Clock_Enable 0001  
                     i1_PulseEnablePin 6B7C                __size_of_StringAddEqual 01B8  
                           Command@buf 0500              __end_of_TXdataFrontCLOSED EFCB  
                   ??_RTC_Clock_Enable 0185                   ?_I2C_Read_At_Address 017E  
                 SendLCDbyte@isCommand 0185              __end_of_TXdataFrontOPENED EFD7  
                    i1SetLCDcursor@Col 000F                             _UARTstring 5B66  
                    i1SetLCDcursor@Row 0010                  __size_ofi1_WriteUSART 0014  
               ??_RTC_TIME_NONMilitary 0185                           _USART_Status 010C  
                      BufferCopy@count 0187                   __size_of_StringMatch 007C  
